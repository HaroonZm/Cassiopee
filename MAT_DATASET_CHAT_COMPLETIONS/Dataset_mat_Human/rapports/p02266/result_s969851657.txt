================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A=[]
p=[]
a=i=0
for c in input():
 if"\\"==c:A+=[i]
 elif"/"==c and A:
  j=A.pop()
  t=i-j
  a+=t
  while p and p[-1][0]>j:t+=p[-1][1];p.pop()
  p+=[(j,t)]
 i+=1
print(a)
if p:print(len(p),*list(zip(*p))[1])
else:print(0)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: '=[]
' (ID: 63466)
  → Token d'amorce (pas de prédiction)

Token 2: 'p' (ID: 79)
  → Token d'amorce (pas de prédiction)

Token 3: '=[]
' (ID: 63466)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002506111632101238
    2. 'o' → logprob: -9.250250816345215
    3. 'u' → logprob: -9.500250816345215
    4. '=' → logprob: -10.875250816345215
    5. ' =' → logprob: -10.875250816345215
    6. 'a' → logprob: -11.375250816345215
    7. 'p' → logprob: -12.375250816345215
    8. '.' → logprob: -12.375250816345215
    9. '.append' → logprob: -12.875250816345215
    10. 'i' → logprob: -13.125250816345215

Token 4: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.059134822338819504
    2. '[' → logprob: -4.3091349601745605
    3. '=' → logprob: -4.3091349601745605
    4. 'for' → logprob: -4.6841349601745605
    5. '.append' → logprob: -5.0591349601745605
    6. 'A' → logprob: -5.5591349601745605
    7. ' ' → logprob: -5.8091349601745605
    8. 'n' → logprob: -6.5591349601745605
    9. 'a' → logprob: -6.8091349601745605
    10. 'p' → logprob: -7.4341349601745605

Token 5: '=i' (ID: 48141)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5385631918907166
    2. '[' → logprob: -2.0385632514953613
    3. '.' → logprob: -2.1635632514953613
    4. 'd' → logprob: -2.5385632514953613
    5. '=' → logprob: -3.1635632514953613
    6. 'pp' → logprob: -3.7885632514953613
    7. '.append' → logprob: -4.913563251495361
    8. '+' → logprob: -5.538563251495361
    9. '[p' → logprob: -5.538563251495361
    10. ' =' → logprob: -5.788563251495361

Token 6: '=' (ID: 28)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05245057865977287
    2. 'n' → logprob: -3.052450656890869
    3. '[' → logprob: -7.302450656890869
    4. 'nt' → logprob: -7.552450656890869
    5. '=' → logprob: -7.677450656890869
    6. 'nd' → logprob: -7.677450656890869
    7. ']' → logprob: -8.177450180053711
    8. '++' → logprob: -8.552450180053711
    9. ' +' → logprob: -8.677450180053711
    10. '<|end|>' → logprob: -8.677450180053711

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004558175278361887
    2. ' ' → logprob: -8.375455856323242
    3. '1' → logprob: -8.500455856323242
    4. 'n' → logprob: -11.875455856323242
    5. 'j' → logprob: -12.375455856323242
    6. '[]' → logprob: -13.125455856323242
    7. '-' → logprob: -13.250455856323242
    8. '10' → logprob: -13.500455856323242
    9. '3' → logprob: -13.875455856323242
    10. '2' → logprob: -14.250455856323242

Token 8: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.49198055267333984
    2. '+' → logprob: -1.2419805526733398
    3. '<|end|>' → logprob: -3.99198055267334
    4. 'n' → logprob: -4.24198055267334
    5. ';' → logprob: -4.49198055267334
    6. 'while' → logprob: -4.61698055267334
    7. ',' → logprob: -4.86698055267334
    8. '
' → logprob: -4.86698055267334
    9. '#' → logprob: -4.86698055267334
    10. 'for' → logprob: -5.36698055267334

Token 9: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1453888714313507
    2. ' while' → logprob: -2.5203888416290283
    3. ' ' → logprob: -3.8953888416290283
    4. 'for' → logprob: -5.020389080047607
    5. ';' → logprob: -5.145389080047607
    6. ',' → logprob: -5.395389080047607
    7. 'n' → logprob: -5.770389080047607
    8. '<|end|>' → logprob: -6.020389080047607
    9. 'w' → logprob: -6.395389080047607
    10. 'b' → logprob: -6.520389080047607

Token 10: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0016898198518902063
    2. ' i' → logprob: -7.126689910888672
    3. '  ' → logprob: -8.251689910888672
    4. ' a' → logprob: -8.376689910888672
    5. ' _' → logprob: -8.751689910888672
    6. '_' → logprob: -9.126689910888672
    7. ' in' → logprob: -10.126689910888672
    8. ' A' → logprob: -10.501689910888672
    9. 'i' → logprob: -11.501689910888672
    10. ' )' → logprob: -11.876689910888672

Token 11: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2707423269748688
    2. ' in' → logprob: -2.145742416381836
    3. ' n' → logprob: -2.395742416381836
    4. ' ' → logprob: -4.145742416381836
    5. 'in' → logprob: -4.395742416381836
    6. '  ' → logprob: -7.645742416381836
    7. ',n' → logprob: -8.895742416381836
    8. '<n' → logprob: -9.270742416381836
    9. ',' → logprob: -10.020742416381836
    10. '   ' → logprob: -10.020742416381836

Token 12: ' input' (ID: 3422)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8917436003684998
    2. ' range' → logprob: -1.3917436599731445
    3. ' input' → logprob: -2.1417436599731445
    4. ''' → logprob: -2.6417436599731445
    5. 'input' → logprob: -2.7667436599731445
    6. '"' → logprob: -2.8917436599731445
    7. '[' → logprob: -4.7667436599731445
    8. ' A' → logprob: -5.1417436599731445
    9. ''A' → logprob: -5.8917436599731445
    10. '[]' → logprob: -6.1417436599731445

Token 13: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004329233895987272
    2. ':' → logprob: -6.129329204559326
    3. '()' → logprob: -6.379329204559326
    4. '(' → logprob: -8.254329681396484
    5. '().' → logprob: -9.879329681396484
    6. '():
' → logprob: -10.129329681396484
    7. '()>' → logprob: -10.629329681396484
    8. '(':' → logprob: -10.754329681396484
    9. '(":' → logprob: -11.254329681396484
    10. ' ():' → logprob: -11.754329681396484

Token 14: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.320780873298645
    2. ' if' → logprob: -1.320780873298645
    3. ' ' → logprob: -1.445780873298645
    4. '   ' → logprob: -2.3207807540893555
    5. ' :' → logprob: -3.1957807540893555
    6. 'if' → logprob: -3.3207807540893555
    7. '<|end|>' → logprob: -4.3207807540893555
    8. 'a' → logprob: -4.8207807540893555
    9. '  ' → logprob: -5.1957807540893555
    10. '    ' → logprob: -5.1957807540893555

Token 15: '"\' (ID: 25544)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.016878176480531693
    2. 'c' → logprob: -4.141878128051758
    3. ' ' → logprob: -7.266878128051758
    4. ' not' → logprob: -9.641878128051758
    5. ' a' → logprob: -9.766878128051758
    6. 'a' → logprob: -11.641878128051758
    7. '	c' → logprob: -13.016878128051758
    8. '  ' → logprob: -13.016878128051758
    9. ' A' → logprob: -13.391878128051758
    10. 'not' → logprob: -13.391878128051758

Token 16: '\"' (ID: 4017)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6252906322479248
    2. 'n' → logprob: -2.125290632247925
    3. '"' → logprob: -2.250290632247925
    4. ' \' → logprob: -2.500290632247925
    5. 'a' → logprob: -3.375290632247925
    6. ' ' → logprob: -3.750290632247925
    7. '\' → logprob: -4.250290870666504
    8. '<' → logprob: -4.625290870666504
    9. ' c' → logprob: -4.625290870666504
    10. '\n' → logprob: -4.875290870666504

Token 17: '==' (ID: 560)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9485363960266113
    2. 'c' → logprob: -1.1985363960266113
    3. ' not' → logprob: -2.3235363960266113
    4. '==' → logprob: -3.1985363960266113
    5. 'n' → logprob: -3.3235363960266113
    6. ' ' → logprob: -3.4485363960266113
    7. ' c' → logprob: -3.4485363960266113
    8. 'in' → logprob: -3.6985363960266113
    9. ' ==' → logprob: -3.9485363960266113
    10. '=' → logprob: -4.573536396026611

Token 18: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005238025914877653
    2. ' c' → logprob: -5.255238056182861
    3. ')c' → logprob: -13.130237579345703
    4. '	c' → logprob: -14.130237579345703
    5. ' ' → logprob: -14.380237579345703
    6. '%c' → logprob: -15.005237579345703
    7. '_c' → logprob: -15.880237579345703
    8. '(c' → logprob: -16.255237579345703
    9. '\' → logprob: -16.880237579345703
    10. '>' → logprob: -17.005237579345703

Token 19: ':A' (ID: 112571)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008391285315155983
    2. ' :' → logprob: -5.133391380310059
    3. ' or' → logprob: -7.258391380310059
    4. '[' → logprob: -8.008391380310059
    5. ' a' → logprob: -8.008391380310059
    6. ':
' → logprob: -8.008391380310059
    7. ' ' → logprob: -8.258391380310059
    8. ' and' → logprob: -8.883391380310059
    9. 'a' → logprob: -10.008391380310059
    10. '.' → logprob: -10.258391380310059

Token 20: '+' (ID: 10)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pp' → logprob: -0.055710889399051666
    2. 'p' → logprob: -3.305710792541504
    3. '.append' → logprob: -4.305710792541504
    4. '.p' → logprob: -6.430710792541504
    5. '.' → logprob: -7.305710792541504
    6. '.pp' → logprob: -7.305710792541504
    7. ' p' → logprob: -7.680710792541504
    8. '[p' → logprob: -8.055710792541504
    9. 'ppen' → logprob: -9.555710792541504
    10. 'PP' → logprob: -9.680710792541504

Token 21: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -1.0910850763320923
    2. '=['' → logprob: -1.0910850763320923
    3. '=' → logprob: -1.3410850763320923
    4. '[' → logprob: -3.3410849571228027
    5. '=["' → logprob: -3.9660849571228027
    6. '['' → logprob: -4.466084957122803
    7. '='' → logprob: -8.591085433959961
    8. '=\' → logprob: -8.841085433959961
    9. '='\' → logprob: -8.841085433959961
    10. '["' → logprob: -9.091085433959961

Token 22: 'i' (ID: 72)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7156431674957275
    2. '"' → logprob: -0.9656431674957275
    3. '0' → logprob: -3.4656431674957275
    4. '[' → logprob: -4.215642929077148
    5. '"'' → logprob: -4.465642929077148
    6. '[]' → logprob: -4.590642929077148
    7. 'a' → logprob: -4.715642929077148
    8. '['' → logprob: -4.965642929077148
    9. 'ord' → logprob: -5.215642929077148
    10. 'c' → logprob: -5.215642929077148

Token 23: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010088120587170124
    2. ' ]' → logprob: -4.885087966918945
    3. ']
' → logprob: -6.385087966918945
    4. '+' → logprob: -8.010087966918945
    5. '+]' → logprob: -8.760087966918945
    6. ']

' → logprob: -9.635087966918945
    7. '];' → logprob: -10.010087966918945
    8. ',' → logprob: -10.510087966918945
    9. ' ]
' → logprob: -10.510087966918945
    10. '']' → logprob: -11.135087966918945

Token 24: ' elif' (ID: 9497)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.1436834335327148
    2. 'else' → logprob: -1.7686834335327148
    3. 'elif' → logprob: -1.8936834335327148
    4. ' ' → logprob: -2.018683433532715
    5. ' elif' → logprob: -2.143683433532715
    6. 'i' → logprob: -3.643683433532715
    7. ' i' → logprob: -3.643683433532715
    8. '+' → logprob: -4.143683433532715
    9. 'a' → logprob: -4.768683433532715
    10. '0' → logprob: -5.518683433532715

Token 25: '"/' (ID: 6378)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.4421236515045166
    2. '"' → logprob: -1.6921236515045166
    3. 'a' → logprob: -1.9421236515045166
    4. 'c' → logprob: -2.0671236515045166
    5. ' p' → logprob: -2.1921236515045166
    6. ' a' → logprob: -2.1921236515045166
    7. ''' → logprob: -3.1921236515045166
    8. 'p' → logprob: -4.1921234130859375
    9. ' ' → logprob: -5.3171234130859375
    10. ' not' → logprob: -5.3171234130859375

Token 26: '"' (ID: 1)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05078861489892006
    2. '=' → logprob: -3.550788640975952
    3. '"' → logprob: -4.800788402557373
    4. '=="' → logprob: -5.300788402557373
    5. '=A' → logprob: -6.300788402557373
    6. '="' → logprob: -7.050788402557373
    7. '\' → logprob: -7.175788402557373
    8. '+' → logprob: -7.300788402557373
    9. ' ==' → logprob: -7.550788402557373
    10. '")==' → logprob: -7.675788402557373

Token 27: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0019532525911927223
    2. '=' → logprob: -6.626953125
    3. ' ==' → logprob: -7.501953125
    4. '=A' → logprob: -10.626953125
    5. '!=' → logprob: -11.001953125
    6. ']==' → logprob: -12.001953125
    7. '=c' → logprob: -12.251953125
    8. '=i' → logprob: -12.751953125
    9. '+' → logprob: -12.751953125
    10. '=a' → logprob: -12.876953125

Token 28: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007205340662039816
    2. ' c' → logprob: -7.250720500946045
    3. '<|end|>' → logprob: -12.625720977783203
    4. 'i' → logprob: -12.750720977783203
    5. ' ' → logprob: -13.000720977783203
    6. '	c' → logprob: -14.875720977783203
    7. '>' → logprob: -15.000720977783203
    8. '">' → logprob: -15.000720977783203
    9. 'a' → logprob: -15.500720977783203
    10. '/' → logprob: -16.000720977783203

Token 29: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47536787390708923
    2. ':A' → logprob: -1.7253679037094116
    3. ':a' → logprob: -1.9753679037094116
    4. ':i' → logprob: -3.225367784500122
    5. ' :' → logprob: -4.225368022918701
    6. ':p' → logprob: -5.350368022918701
    7. ':
' → logprob: -6.350368022918701
    8. ':+' → logprob: -8.725367546081543
    9. ':[' → logprob: -9.975367546081543
    10. '+:' → logprob: -10.225367546081543

Token 30: ' A' (ID: 355)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.1778497695922852
    2. 'a' → logprob: -1.8028497695922852
    3. 'p' → logprob: -1.8028497695922852
    4. ' a' → logprob: -2.052849769592285
    5. ' A' → logprob: -2.302849769592285
    6. 'A' → logprob: -3.052849769592285
    7. ' i' → logprob: -3.427849769592285
    8. 'i' → logprob: -3.427849769592285
    9. ' len' → logprob: -4.552849769592285
    10. 'len' → logprob: -5.052849769592285

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01100537832826376
    2. '<|end|>' → logprob: -5.386005401611328
    3. '>:' → logprob: -5.511005401611328
    4. '>' → logprob: -7.886005401611328
    5. ':not' → logprob: -8.136005401611328
    6. ':A' → logprob: -8.386005401611328
    7. ':return' → logprob: -8.511005401611328
    8. ' and' → logprob: -8.761005401611328
    9. ']:' → logprob: -8.886005401611328
    10. '.pop' → logprob: -9.511005401611328

Token 32: ' ' (ID: 220)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9447875022888184
    2. 'p' → logprob: -1.3197875022888184
    3. ' p' → logprob: -1.8197875022888184
    4. ' a' → logprob: -2.0697875022888184
    5. 'A' → logprob: -3.8197875022888184
    6. ' A' → logprob: -4.319787502288818
    7. 'i' → logprob: -4.819787502288818
    8. ' i' → logprob: -5.444787502288818
    9. 'j' → logprob: -6.194787502288818
    10. ' j' → logprob: -6.694787502288818

Token 33: ' j' (ID: 441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.43094921112060547
    2. 'a' → logprob: -1.4309492111206055
    3. ' p' → logprob: -3.4309492111206055
    4. 'j' → logprob: -3.6809492111206055
    5. 'i' → logprob: -4.0559492111206055
    6. ' a' → logprob: -4.4309492111206055
    7. 'A' → logprob: -4.5559492111206055
    8. 'x' → logprob: -6.0559492111206055
    9. ' j' → logprob: -6.1809492111206055
    10. ' A' → logprob: -6.4309492111206055

Token 34: '=A' (ID: 112591)
  Prédit: '=A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=A' → logprob: -0.005235887598246336
    2. '=' → logprob: -5.25523567199707
    3. ' =' → logprob: -13.75523567199707
    4. '=a' → logprob: -14.88023567199707
    5. ' A' → logprob: -15.13023567199707
    6. '=i' → logprob: -16.63023567199707
    7. '=j' → logprob: -16.88023567199707
    8. '=_' → logprob: -16.88023567199707
    9. '=[]' → logprob: -17.00523567199707
    10. '=p' → logprob: -17.50523567199707

Token 35: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.001218451652675867
    2. '.' → logprob: -6.751218318939209
    3. '[-' → logprob: -10.626218795776367
    4. ' .' → logprob: -10.751218795776367
    5. 'pop' → logprob: -13.376218795776367
    6. '.p' → logprob: -14.876218795776367
    7. ' pop' → logprob: -14.876218795776367
    8. '.po' → logprob: -16.376218795776367
    9. '[:-' → logprob: -16.626218795776367
    10. '.Pop' → logprob: -17.251218795776367

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012833021173719317
    2. '()
' → logprob: -9.875128746032715
    3. '()]' → logprob: -10.750128746032715
    4. '(' → logprob: -11.000128746032715
    5. '())' → logprob: -11.875128746032715
    6. '();' → logprob: -11.875128746032715
    7. '()%' → logprob: -12.250128746032715
    8. '()>' → logprob: -12.250128746032715
    9. ' ()' → logprob: -12.500128746032715
    10. '()<' → logprob: -13.125128746032715

Token 37: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.1881656646728516
    2. ' ' → logprob: -1.4381656646728516
    3. ' else' → logprob: -1.9381656646728516
    4. ' p' → logprob: -2.0631656646728516
    5. ' if' → logprob: -2.4381656646728516
    6. 'a' → logprob: -3.8131656646728516
    7. ' for' → logprob: -4.313165664672852
    8. 'p' → logprob: -4.313165664672852
    9. 'else' → logprob: -4.563165664672852
    10. '=' → logprob: -4.938165664672852

Token 38: ' t' (ID: 260)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9516503810882568
    2. 'p' → logprob: -1.4516503810882568
    3. ' a' → logprob: -1.8266503810882568
    4. ' p' → logprob: -1.8266503810882568
    5. ' ' → logprob: -3.701650381088257
    6. ' if' → logprob: -4.701650619506836
    7. '=p' → logprob: -5.451650619506836
    8. '  ' → logprob: -5.701650619506836
    9. 'if' → logprob: -5.826650619506836
    10. '=' → logprob: -5.951650619506836

Token 39: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37605148553848267
    2. '=i' → logprob: -1.876051425933838
    3. '=a' → logprob: -2.751051425933838
    4. '+=' → logprob: -3.251051425933838
    5. '=max' → logprob: -4.001051425933838
    6. '=j' → logprob: -4.376051425933838
    7. 'ime' → logprob: -5.001051425933838
    8. '=len' → logprob: -5.626051425933838
    9. ' =' → logprob: -5.751051425933838
    10. '=int' → logprob: -6.126051425933838

Token 40: '-j' (ID: 19720)
  Prédit: '-j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-j' → logprob: -0.1848638653755188
    2. '-' → logprob: -1.809863805770874
    3. ' -' → logprob: -5.434864044189453
    4. '+' → logprob: -8.434864044189453
    5. ' ' → logprob: -8.684864044189453
    6. '-=' → logprob: -9.559864044189453
    7. '-t' → logprob: -10.309864044189453
    8. 'j' → logprob: -10.434864044189453
    9. ' j' → logprob: -10.559864044189453
    10. ',j' → logprob: -10.934864044189453

Token 41: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.022051511332392693
    2. ' if' → logprob: -4.5220513343811035
    3. '+' → logprob: -5.7720513343811035
    4. '<|end|>' → logprob: -6.2720513343811035
    5. 'if' → logprob: -6.7720513343811035
    6. ' +' → logprob: -7.0220513343811035
    7. '  ' → logprob: -7.2720513343811035
    8. '*' → logprob: -7.5220513343811035
    9. ' *' → logprob: -8.147051811218262
    10. ' a' → logprob: -8.147051811218262

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28526151180267334
    2. ' if' → logprob: -2.035261631011963
    3. 'a' → logprob: -2.785261631011963
    4. 'if' → logprob: -3.660261631011963
    5. ' a' → logprob: -3.785261631011963
    6. '  
' → logprob: -6.785261631011963
    7. '  ' → logprob: -7.035261631011963
    8. ' t' → logprob: -7.410261631011963
    9. '<|end|>' → logprob: -7.535261631011963
    10. '+' → logprob: -7.535261631011963

Token 43: ' a' (ID: 261)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8397656679153442
    2. 'if' → logprob: -1.5897656679153442
    3. 'a' → logprob: -1.7147656679153442
    4. ' a' → logprob: -2.0897655487060547
    5. ' p' → logprob: -3.5897655487060547
    6. 'p' → logprob: -4.089765548706055
    7. ' ' → logprob: -4.214765548706055
    8. ' i' → logprob: -8.589765548706055
    9. 'i' → logprob: -8.714765548706055
    10. '  ' → logprob: -8.839765548706055

Token 44: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02617395855486393
    2. '=max' → logprob: -4.526174068450928
    3. '=' → logprob: -4.651174068450928
    4. ' +=' → logprob: -5.401174068450928
    5. ' =' → logprob: -7.276174068450928
    6. '=a' → logprob: -9.90117359161377
    7. '+=(' → logprob: -9.90117359161377
    8. '=t' → logprob: -10.27617359161377
    9. '+' → logprob: -10.27617359161377
    10. 'max' → logprob: -10.65117359161377

Token 45: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.030101032927632332
    2. ' t' → logprob: -3.5301010608673096
    3. '1' → logprob: -8.28010082244873
    4. ' ' → logprob: -9.90510082244873
    5. '2' → logprob: -10.28010082244873
    6. '(t' → logprob: -12.53010082244873
    7. 'i' → logprob: -13.28010082244873
    8. 'int' → logprob: -13.78010082244873
    9. ' (' → logprob: -14.03010082244873
    10. '+' → logprob: -14.03010082244873

Token 46: '
' (ID: 198)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.39741694927215576
    2. ' ' → logprob: -2.1474170684814453
    3. '*' → logprob: -2.6474170684814453
    4. '*t' → logprob: -3.0224170684814453
    5. '**' → logprob: -3.0224170684814453
    6. '*p' → logprob: -4.522417068481445
    7. '+' → logprob: -5.022417068481445
    8. 'i' → logprob: -5.397417068481445
    9. '-' → logprob: -5.522417068481445
    10. ' i' → logprob: -5.647417068481445

Token 47: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048838626593351364
    2. ' p' → logprob: -3.4238386154174805
    3. 'p' → logprob: -4.6738386154174805
    4. ' i' → logprob: -5.9238386154174805
    5. 'i' → logprob: -7.0488386154174805
    6. ' if' → logprob: -7.6738386154174805
    7. ' t' → logprob: -7.7988386154174805
    8. '*p' → logprob: -8.04883861541748
    9. 't' → logprob: -8.54883861541748
    10. '  
' → logprob: -8.92383861541748

Token 48: ' while' (ID: 2049)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6666120886802673
    2. 't' → logprob: -1.416612148284912
    3. 'if' → logprob: -2.541612148284912
    4. '2' → logprob: -3.291612148284912
    5. '1' → logprob: -3.916612148284912
    6. ' if' → logprob: -4.041612148284912
    7. ' p' → logprob: -4.041612148284912
    8. 'a' → logprob: -4.166612148284912
    9. '*p' → logprob: -4.416612148284912
    10. ' ' → logprob: -4.541612148284912

Token 49: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10794351994991302
    2. ' p' → logprob: -2.357943534851074
    3. 'a' → logprob: -5.357943534851074
    4. 't' → logprob: -6.857943534851074
    5. ' a' → logprob: -7.232943534851074
    6. ' t' → logprob: -7.607943534851074
    7. 'A' → logprob: -8.357943534851074
    8. 'len' → logprob: -8.482943534851074
    9. ' A' → logprob: -9.607943534851074
    10. ' ' → logprob: -9.732943534851074

Token 50: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38699522614479065
    2. 'and' → logprob: -1.1369951963424683
    3. ' ' → logprob: -10.261995315551758
    4. '<|end|>' → logprob: -10.386995315551758
    5. '	and' → logprob: -11.386995315551758
    6. 'a' → logprob: -11.886995315551758
    7. ')' → logprob: -12.136995315551758
    8. '[-' → logprob: -12.261995315551758
    9. ':' → logprob: -12.511995315551758
    10. '<len' → logprob: -12.886995315551758

Token 51: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4050742983818054
    2. ' t' → logprob: -1.5300743579864502
    3. 'p' → logprob: -2.40507435798645
    4. 't' → logprob: -3.90507435798645
    5. ' a' → logprob: -5.280074119567871
    6. 'a' → logprob: -7.280074119567871
    7. ' ' → logprob: -8.155074119567871
    8. '```' → logprob: -10.905074119567871
    9. '   ' → logprob: -11.592574119567871
    10. ' i' → logprob: -12.405074119567871

Token 52: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.004966424312442541
    2. ' and' → logprob: -5.5049662590026855
    3. '>' → logprob: -8.129966735839844
    4. '[' → logprob: -8.254966735839844
    5. '[t' → logprob: -8.879966735839844
    6. '>-' → logprob: -10.504966735839844
    7. '```' → logprob: -10.629966735839844
    8. '-' → logprob: -11.004966735839844
    9. 't' → logprob: -11.129966735839844
    10. 'and' → logprob: -11.129966735839844

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004502161871641874
    2. ' ' → logprob: -5.754502296447754
    3. 't' → logprob: -7.129502296447754
    4. '[' → logprob: -8.379502296447754
    5. '2' → logprob: -9.254502296447754
    6. '-' → logprob: -9.879502296447754
    7. ' t' → logprob: -10.504502296447754
    8. '(' → logprob: -11.254502296447754
    9. '>' → logprob: -11.379502296447754
    10. ']' → logprob: -11.629502296447754

Token 54: '][' (ID: 2696)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -1.048599362373352
    2. '<t' → logprob: -1.423599362373352
    3. '[' → logprob: -1.673599362373352
    4. '<' → logprob: -1.923599362373352
    5. ' <' → logprob: -3.2985992431640625
    6. '<=' → logprob: -5.5485992431640625
    7. ' ' → logprob: -5.5485992431640625
    8. 't' → logprob: -5.6735992431640625
    9. ' >' → logprob: -5.6735992431640625
    10. '*t' → logprob: -5.7985992431640625

Token 55: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003232256043702364
    2. '0' → logprob: -5.753232479095459
    3. ' ' → logprob: -9.8782320022583
    4. '2' → logprob: -13.7532320022583
    5. '-' → logprob: -14.0032320022583
    6. '

' → logprob: -14.8782320022583
    7. '
' → logprob: -15.5657320022583
    8. '```' → logprob: -15.5657320022583
    9. '(' → logprob: -16.378232955932617
    10. '>' → logprob: -16.378232955932617

Token 56: ']>' (ID: 54651)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6597428321838379
    2. '<t' → logprob: -2.409742832183838
    3. 't' → logprob: -2.534742832183838
    4. '<' → logprob: -2.534742832183838
    5. ']>' → logprob: -2.784742832183838
    6. ' t' → logprob: -2.784742832183838
    7. ']' → logprob: -3.659742832183838
    8. '[' → logprob: -4.159742832183838
    9. ' >' → logprob: -4.159742832183838
    10. ']<' → logprob: -4.534742832183838

Token 57: 'j' (ID: 73)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.006760487332940102
    2. ' t' → logprob: -5.006760597229004
    3. ' ' → logprob: -11.256760597229004
    4. '0' → logprob: -12.006760597229004
    5. '=' → logprob: -12.381760597229004
    6. 'a' → logprob: -12.381760597229004
    7. '=t' → logprob: -12.506760597229004
    8. 'p' → logprob: -12.631760597229004
    9. 'i' → logprob: -12.881760597229004
    10. '	t' → logprob: -13.256760597229004

Token 58: ':t' (ID: 94540)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2911456525325775
    2. ' and' → logprob: -2.4161455631256104
    3. ' :' → logprob: -2.7911455631256104
    4. ':
' → logprob: -3.5411455631256104
    5. ':t' → logprob: -3.5411455631256104
    6. 'and' → logprob: -3.7911455631256104
    7. ':p' → logprob: -4.4161458015441895
    8. ' :
' → logprob: -5.9161458015441895
    9. ':

' → logprob: -6.6661458015441895
    10. ' ' → logprob: -6.9161458015441895

Token 59: '+=' (ID: 18287)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.284773588180542
    2. '-=' → logprob: -1.659773588180542
    3. 'p' → logprob: -1.784773588180542
    4. ' p' → logprob: -2.659773588180542
    5. '>=' → logprob: -2.659773588180542
    6. '+=' → logprob: -2.909773588180542
    7. '-' → logprob: -3.534773588180542
    8. '-p' → logprob: -3.534773588180542
    9. '=p' → logprob: -4.034773826599121
    10. ' -=' → logprob: -4.159773826599121

Token 60: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.11328160762786865
    2. ' p' → logprob: -2.238281726837158
    3. ' ' → logprob: -7.863281726837158
    4. 'a' → logprob: -11.36328125
    5. '   ' → logprob: -11.36328125
    6. '  ' → logprob: -11.36328125
    7. 't' → logprob: -11.86328125
    8. '	p' → logprob: -12.23828125
    9. '0' → logprob: -12.36328125
    10. '+' → logprob: -12.61328125

Token 61: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.652451464906335e-05
    2. '[' → logprob: -11.500016212463379
    3. '.pop' → logprob: -12.625016212463379
    4. '-' → logprob: -13.250016212463379
    5. '][-' → logprob: -14.625016212463379
    6. ' [-' → logprob: -14.750016212463379
    7. '```' → logprob: -16.250017166137695
    8. ' ' → logprob: -16.375017166137695
    9. ''s' → logprob: -17.375017166137695
    10. '<|end|>' → logprob: -17.375017166137695

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -11.250031471252441
    3. '[-' → logprob: -11.625031471252441
    4. '-' → logprob: -12.562531471252441
    5. '][-' → logprob: -13.750031471252441
    6. ']' → logprob: -14.500031471252441
    7. '１' → logprob: -14.500031471252441
    8. '[' → logprob: -14.750031471252441
    9. '```' → logprob: -15.000031471252441
    10. '   ' → logprob: -15.187531471252441

Token 63: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14422793686389923
    2. '[' → logprob: -2.019227981567383
    3. ']' → logprob: -7.519227981567383
    4. ' ][' → logprob: -7.644227981567383
    5. '][-' → logprob: -8.644227981567383
    6. ' ' → logprob: -9.519227981567383
    7. '[-' → logprob: -9.894227981567383
    8. ' [' → logprob: -10.269227981567383
    9. '>[' → logprob: -10.456727981567383
    10. ''][' → logprob: -10.706727981567383

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022451656695920974
    2. ' ' → logprob: -8.750224113464355
    3. '0' → logprob: -9.750224113464355
    4. '```' → logprob: -13.000224113464355
    5. '][' → logprob: -13.187724113464355
    6. '-' → logprob: -14.062724113464355
    7. '2' → logprob: -15.000224113464355
    8. '１' → logprob: -15.000224113464355
    9. '   ' → logprob: -15.312724113464355
    10. '[' → logprob: -15.375224113464355

Token 65: '];' (ID: 11464)
  Prédit: ';p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ';p' → logprob: -0.7507795095443726
    2. ';' → logprob: -1.2507795095443726
    3. ' p' → logprob: -2.125779628753662
    4. '
' → logprob: -2.750779628753662
    5. ';a' → logprob: -3.750779628753662
    6. ' a' → logprob: -4.875779628753662
    7. ' ;' → logprob: -5.250779628753662
    8. ',p' → logprob: -5.375779628753662
    9. 'p' → logprob: -5.375779628753662
    10. ',' → logprob: -6.125779628753662

Token 66: 'p' (ID: 79)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.31339266896247864
    2. 'p' → logprob: -1.3133926391601562
    3. '```' → logprob: -10.313392639160156
    4. '	p' → logprob: -10.563392639160156
    5. ',p' → logprob: -10.938392639160156
    6. ' ' → logprob: -11.563392639160156
    7. '  ' → logprob: -12.063392639160156
    8. '   ' → logprob: -12.063392639160156
    9. '``' → logprob: -12.688392639160156
    10. 'A' → logprob: -12.688392639160156

Token 67: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.006174790672957897
    2. 'pop' → logprob: -5.131174564361572
    3. '<|end|>' → logprob: -9.50617504119873
    4. '	pop' → logprob: -9.63117504119873
    5. ' pop' → logprob: -9.88117504119873
    6. '-pop' → logprob: -10.50617504119873
    7. '_pop' → logprob: -11.25617504119873
    8. '.' → logprob: -11.50617504119873
    9. 'Pop' → logprob: -13.13117504119873
    10. '<|end|>' → logprob: -13.88117504119873

Token 68: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.023692630231380463
    2. '()
' → logprob: -3.7736926078796387
    3. '()

' → logprob: -8.523693084716797
    4. '();' → logprob: -9.273693084716797
    5. '()
' → logprob: -9.523693084716797
    6. '()[' → logprob: -10.273693084716797
    7. '()>' → logprob: -11.023693084716797
    8. '(' → logprob: -11.648693084716797
    9. '()]' → logprob: -12.023693084716797
    10. '()<' → logprob: -12.898693084716797

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041271016001701355
    2. ' p' → logprob: -3.2912709712982178
    3. ' 
' → logprob: -6.666271209716797
    4. '	p' → logprob: -7.291271209716797
    5. 'p' → logprob: -8.166271209716797
    6. '  
' → logprob: -8.291271209716797
    7. ' ' → logprob: -8.291271209716797
    8. ',p' → logprob: -8.791271209716797
    9. '  ' → logprob: -9.416271209716797
    10. '<|end|>' → logprob: -9.916271209716797

Token 70: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.34431302547454834
    2. ' ' → logprob: -1.3443130254745483
    3. 'p' → logprob: -3.594313144683838
    4. ' 
' → logprob: -6.719313144683838
    5. '	p' → logprob: -6.844313144683838
    6. '  
' → logprob: -8.71931266784668
    7. '  ' → logprob: -9.09431266784668
    8. ' if' → logprob: -9.34431266784668
    9. ' ' → logprob: -9.59431266784668
    10. '	' → logprob: -9.84431266784668

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.017386166378855705
    2. '.append' → logprob: -4.142385959625244
    3. '+=' → logprob: -7.267385959625244
    4. '.' → logprob: -8.017386436462402
    5. '+.' → logprob: -8.392386436462402
    6. '+[' → logprob: -10.517386436462402
    7. ' and' → logprob: -11.142386436462402
    8. 'append' → logprob: -11.267386436462402
    9. '[-' → logprob: -11.642386436462402
    10. 'and' → logprob: -12.142386436462402

Token 72: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.16130617260932922
    2. '=[[' → logprob: -1.9113061428070068
    3. '=' → logprob: -6.911306381225586
    4. '[(' → logprob: -10.286306381225586
    5. '[[' → logprob: -10.661306381225586
    6. '=[
' → logprob: -10.911306381225586
    7. '=((' → logprob: -12.411306381225586
    8. '=(' → logprob: -13.411306381225586
    9. '=['' → logprob: -13.911306381225586
    10. '.append' → logprob: -14.161306381225586

Token 73: '(' (ID: 7)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.17111431062221527
    2. '[j' → logprob: -1.9211143255233765
    3. ' (' → logprob: -4.671114444732666
    4. '(' → logprob: -7.546114444732666
    5. 'j' → logprob: -7.796114444732666
    6. ' [' → logprob: -8.046113967895508
    7. '[' → logprob: -9.421113967895508
    8. ' j' → logprob: -10.421113967895508
    9. '((' → logprob: -10.921113967895508
    10. '(c' → logprob: -11.171113967895508

Token 74: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.020554495975375175
    2. ' j' → logprob: -3.895554542541504
    3. '<|end|>' → logprob: -12.395554542541504
    4. 'i' → logprob: -12.520554542541504
    5. '	j' → logprob: -13.395554542541504
    6. ',j' → logprob: -13.645554542541504
    7. '[j' → logprob: -14.270554542541504
    8. ' i' → logprob: -15.145554542541504
    9. '(j' → logprob: -15.145554542541504
    10. '$j' → logprob: -15.270554542541504

Token 75: ',t' (ID: 26927)
  Prédit: ',t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',t' → logprob: -0.2826423645019531
    2. ',' → logprob: -1.4076423645019531
    3. 't' → logprob: -6.907642364501953
    4. ' ,' → logprob: -8.032642364501953
    5. ' t' → logprob: -8.907642364501953
    6. ' ' → logprob: -11.782642364501953
    7. ';t' → logprob: -12.282642364501953
    8. '<t' → logprob: -12.907642364501953
    9. '	t' → logprob: -13.282642364501953
    10. ':t' → logprob: -13.657642364501953

Token 76: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0017024369444698095
    2. ' )' → logprob: -6.876702308654785
    3. ')' → logprob: -8.001702308654785
    4. ')]
' → logprob: -8.251702308654785
    5. ')]

' → logprob: -10.501702308654785
    6. ')])' → logprob: -10.751702308654785
    7. ')],' → logprob: -11.751702308654785
    8. ' ' → logprob: -12.001702308654785
    9. ')]
' → logprob: -12.751702308654785
    10. ',' → logprob: -13.001702308654785

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05672669783234596
    2. ' ' → logprob: -3.1817266941070557
    3. 'i' → logprob: -4.806726932525635
    4. ' 
' → logprob: -5.556726932525635
    5. '  
' → logprob: -7.556726932525635
    6. ',i' → logprob: -7.681726932525635
    7. ',' → logprob: -9.056726455688477
    8. '	i' → logprob: -9.181726455688477
    9. '
' → logprob: -9.556726455688477
    10. '  ' → logprob: -9.681726455688477

Token 78: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.17752470076084137
    2. '=' → logprob: -2.1775248050689697
    3. '+' → logprob: -3.3025248050689697
    4. ' +=' → logprob: -4.427524566650391
    5. '=i' → logprob: -7.802524566650391
    6. ' ' → logprob: -9.42752456665039
    7. '<|end|>' → logprob: -10.42752456665039
    8. ' =' → logprob: -10.55252456665039
    9. '+='' → logprob: -11.30252456665039
    10. 'i' → logprob: -11.30252456665039

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '１' → logprob: -17.50023078918457
    4. '```' → logprob: -17.75023078918457
    5. '+' → logprob: -17.87523078918457
    6. '<|end|>' → logprob: -18.18773078918457
    7. '  ' → logprob: -18.43773078918457
    8. '   ' → logprob: -18.68773078918457
    9. '`' → logprob: -18.75023078918457
    10. '۱' → logprob: -19.31273078918457

Token 80: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25533029437065125
    2. '<|end|>' → logprob: -1.6303303241729736
    3. '```' → logprob: -4.6303300857543945
    4. '+' → logprob: -5.3803300857543945
    5. ' ```' → logprob: -5.6303300857543945
    6. '<|end|>' → logprob: -6.0053300857543945
    7. ' 
' → logprob: -6.0053300857543945
    8. '\n' → logprob: -6.6303300857543945
    9. '...' → logprob: -7.3803300857543945
    10. '
' → logprob: -7.3803300857543945

Token 81: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04415309056639671
    2. ' print' → logprob: -4.044153213500977
    3. ' ' → logprob: -4.544153213500977
    4. '<|end|>' → logprob: -4.669153213500977
    5. ' 
' → logprob: -6.669153213500977
    6. 'p' → logprob: -6.794153213500977
    7. '
' → logprob: -7.544153213500977
    8. '#' → logprob: -7.669153213500977
    9. ')' → logprob: -7.794153213500977
    10. '  
' → logprob: -8.044153213500977

Token 82: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.09101046621799469
    2. '(' → logprob: -2.466010570526123
    3. '('' → logprob: -7.341010570526123
    4. '(sum' → logprob: -7.716010570526123
    5. '("' → logprob: -8.216010093688965
    6. '((' → logprob: -8.841010093688965
    7. '(p' → logprob: -8.966010093688965
    8. ' (' → logprob: -9.091010093688965
    9. '()' → logprob: -9.091010093688965
    10. 'a' → logprob: -9.091010093688965

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01378899160772562
    2. ' )' → logprob: -4.388789176940918
    3. ')
' → logprob: -7.513789176940918
    4. ',' → logprob: -7.513789176940918
    5. ',p' → logprob: -9.263789176940918
    6. ')p' → logprob: -10.888789176940918
    7. ' )
' → logprob: -11.013789176940918
    8. ',)' → logprob: -11.388789176940918
    9. ')`' → logprob: -12.263789176940918
    10. ' ,' → logprob: -12.263789176940918

Token 84: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3417953848838806
    2. '
' → logprob: -1.5917954444885254
    3. '<|end|>' → logprob: -2.8417954444885254
    4. '  
' → logprob: -4.716795444488525
    5. '[' → logprob: -5.466795444488525
    6. ' 
' → logprob: -5.841795444488525
    7. ' ' → logprob: -5.966795444488525
    8. '[]
' → logprob: -6.341795444488525
    9. '[
' → logprob: -7.091795444488525
    10. ',' → logprob: -7.341795444488525

Token 85: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.04342252388596535
    2. 'p' → logprob: -3.1684224605560303
    3. ' ' → logprob: -8.41842269897461
    4. ' a' → logprob: -9.79342269897461
    5. 'a' → logprob: -10.16842269897461
    6. ' __' → logprob: -10.41842269897461
    7. ' ' → logprob: -11.04342269897461
    8. ''' → logprob: -11.41842269897461
    9. ' not' → logprob: -11.41842269897461
    10. '__' → logprob: -11.66842269897461

Token 86: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030517831444740295
    2. ':
' → logprob: -3.530517816543579
    3. '[' → logprob: -8.530517578125
    4. ':[
' → logprob: -8.530517578125
    5. ':[' → logprob: -9.155517578125
    6. ':

' → logprob: -9.780517578125
    7. ' :' → logprob: -9.905517578125
    8. '>' → logprob: -10.155517578125
    9. '>:' → logprob: -10.780517578125
    10. ':p' → logprob: -11.030517578125

Token 87: 'print' (ID: 1598)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.08404310792684555
    2. 'print' → logprob: -3.209043025970459
    3. ' for' → logprob: -3.334043025970459
    4. ' ' → logprob: -6.334043025970459
    5. ' p' → logprob: -6.709043025970459
    6. ' 
' → logprob: -7.959043025970459
    7. 'for' → logprob: -8.209043502807617
    8. '.print' → logprob: -9.209043502807617
    9. '<|end|>' → logprob: -9.584043502807617
    10. ' a' → logprob: -9.584043502807617

Token 88: '(len' (ID: 14990)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.12200285494327545
    2. '(' → logprob: -2.2470028400421143
    3. '('' → logprob: -5.372003078460693
    4. '(sum' → logprob: -5.622003078460693
    5. '("' → logprob: -7.997003078460693
    6. '((' → logprob: -9.247002601623535
    7. '(max' → logprob: -9.372002601623535
    8. ' (' → logprob: -9.372002601623535
    9. '(s' → logprob: -9.747002601623535
    10. '(
' → logprob: -10.247002601623535

Token 89: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.055128928273916245
    2. '(' → logprob: -2.930128812789917
    3. '(
' → logprob: -9.305129051208496
    4. 'p' → logprob: -10.180129051208496
    5. '('' → logprob: -10.430129051208496
    6. ' (' → logprob: -11.055129051208496
    7. '(s' → logprob: -11.555129051208496
    8. '(

' → logprob: -11.680129051208496
    9. '("' → logprob: -11.805129051208496
    10. '()' → logprob: -11.930129051208496

Token 90: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30299249291419983
    2. ',p' → logprob: -1.8029924631118774
    3. ')' → logprob: -3.302992582321167
    4. ' ,' → logprob: -3.927992582321167
    5. '),' → logprob: -4.177992343902588
    6. ',)' → logprob: -4.552992343902588
    7. ' p' → logprob: -5.677992343902588
    8. '[' → logprob: -5.802992343902588
    9. ',"' → logprob: -7.302992343902588
    10. 'p' → logprob: -7.427992343902588

Token 91: '*' (ID: 9)
  Prédit: '*p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*p' → logprob: -0.3630669414997101
    2. '*' → logprob: -1.8630669116973877
    3. 'p' → logprob: -2.4880669116973877
    4. ')' → logprob: -3.6130669116973877
    5. ' *' → logprob: -4.363067150115967
    6. 'end' → logprob: -4.738067150115967
    7. ' p' → logprob: -4.863067150115967
    8. '*[' → logprob: -5.363067150115967
    9. '*(' → logprob: -6.113067150115967
    10. 'sum' → logprob: -7.363067150115967

Token 92: 'list' (ID: 2641)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.2378086894750595
    2. '[' → logprob: -2.6128087043762207
    3. 'p' → logprob: -2.8628087043762207
    4. '[i' → logprob: -3.2378087043762207
    5. '[x' → logprob: -4.362808704376221
    6. '(p' → logprob: -4.487808704376221
    7. 'map' → logprob: -5.112808704376221
    8. '[v' → logprob: -5.862808704376221
    9. ' p' → logprob: -6.612808704376221
    10. '[_' → logprob: -7.112808704376221

Token 93: '(zip' (ID: 87520)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.26871487498283386
    2. '(map' → logprob: -1.6437149047851562
    3. '(zip' → logprob: -3.3937149047851562
    4. '(re' → logprob: -5.268714904785156
    5. 'p' → logprob: -6.643714904785156
    6. '(' → logprob: -7.018714904785156
    7. 'zip' → logprob: -8.268714904785156
    8. 'map' → logprob: -8.518714904785156
    9. '(i' → logprob: -8.643714904785156
    10. '(range' → logprob: -9.143714904785156

Token 94: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00010521204239921644
    2. '(' → logprob: -9.875104904174805
    3. '*' → logprob: -11.000104904174805
    4. ' (*' → logprob: -11.125104904174805
    5. '(*(' → logprob: -11.500104904174805
    6. '*p' → logprob: -11.875104904174805
    7. '(*)' → logprob: -13.125104904174805
    8. '(p' → logprob: -13.875104904174805
    9. '(

' → logprob: -13.875104904174805
    10. '(
' → logprob: -14.250104904174805

Token 95: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005936859175562859
    2. ' p' → logprob: -5.130936622619629
    3. '(p' → logprob: -12.630936622619629
    4. '[' → logprob: -13.505936622619629
    5. ' ' → logprob: -13.880936622619629
    6. '[p' → logprob: -13.880936622619629
    7. '*p' → logprob: -15.130936622619629
    8. ')p' → logprob: -15.130936622619629
    9. '  ' → logprob: -15.255936622619629
    10. '   ' → logprob: -15.880936622619629

Token 96: '))[' (ID: 101036)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.5224096179008484
    2. '[' → logprob: -1.0224096775054932
    3. '))[' → logprob: -3.147409677505493
    4. '))' → logprob: -6.272409439086914
    5. ' )[' → logprob: -6.647409439086914
    6. '[-' → logprob: -7.897409439086914
    7. ')' → logprob: -8.272409439086914
    8. ' [' → logprob: -9.647409439086914
    9. ' ' → logprob: -9.772409439086914
    10. '1' → logprob: -9.897409439086914

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.24310302757658e-05
    2. ' ' → logprob: -9.875072479248047
    3. '-' → logprob: -11.750072479248047
    4. '[' → logprob: -11.875072479248047
    5. '   ' → logprob: -13.125072479248047
    6. '
' → logprob: -14.000072479248047
    7. '0' → logprob: -14.000072479248047
    8. '  ' → logprob: -14.875072479248047
    9. '{' → logprob: -15.125072479248047
    10. '>' → logprob: -15.250072479248047

Token 98: '])
' (ID: 5169)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10113399475812912
    2. ')' → logprob: -2.3511340618133545
    3. '])' → logprob: -7.851133823394775
    4. '))
' → logprob: -8.851134300231934
    5. ' ))' → logprob: -8.976134300231934
    6. ' )' → logprob: -9.101134300231934
    7. ')))' → logprob: -10.101134300231934
    8. '),' → logprob: -10.226134300231934
    9. ')])' → logprob: -10.476134300231934
    10. ')
' → logprob: -11.601134300231934

Token 99: 'else' (ID: 2807)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5285881757736206
    2. '<|end|>' → logprob: -1.2785881757736206
    3. ')' → logprob: -2.52858829498291
    4. '[' → logprob: -3.65358829498291
    5. '#' → logprob: -4.90358829498291
    6. ':' → logprob: -5.27858829498291
    7. '```' → logprob: -5.77858829498291
    8. ' ```' → logprob: -6.77858829498291
    9. '
' → logprob: -6.90358829498291
    10. '\' → logprob: -6.90358829498291

Token 100: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0869951844215393
    2. ' print' → logprob: -3.2119951248168945
    3. ' :' → logprob: -3.4619951248168945
    4. 'print' → logprob: -5.3369951248168945
    5. ':
' → logprob: -5.4619951248168945
    6. '0' → logprob: -7.3369951248168945
    7. ' :
' → logprob: -7.7119951248168945
    8. ' ' → logprob: -7.8369951248168945
    9. ' pass' → logprob: -8.461995124816895
    10. '   ' → logprob: -8.586995124816895

Token 101: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6008065938949585
    2. ' print' → logprob: -0.8508065938949585
    3. '0' → logprob: -3.725806713104248
    4. ' ' → logprob: -7.975806713104248
    5. '1' → logprob: -9.47580623626709
    6. ' pass' → logprob: -10.85080623626709
    7. '   ' → logprob: -12.22580623626709
    8. ' 
' → logprob: -12.35080623626709
    9. 'pass' → logprob: -12.60080623626709
    10. ' None' → logprob: -13.10080623626709

Token 102: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002158146962756291
    2. '(' → logprob: -8.500215530395508
    3. ' ()' → logprob: -12.125215530395508
    4. '(True' → logprob: -13.250215530395508
    5. '(False' → logprob: -13.375215530395508
    6. '()
' → logprob: -13.375215530395508
    7. '()

' → logprob: -14.750215530395508
    8. '()<' → logprob: -15.000215530395508
    9. '();' → logprob: -15.875215530395508
    10. '()</' → logprob: -16.000215530395508

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00046725376159884036
    2. ' ' → logprob: -8.375467300415039
    3. ')' → logprob: -8.750467300415039
    4. '"' → logprob: -10.500467300415039
    5. '1' → logprob: -10.750467300415039
    6. 'a' → logprob: -11.375467300415039
    7. ''' → logprob: -11.500467300415039
    8. '")' → logprob: -13.125467300415039
    9. '   ' → logprob: -13.625467300415039
    10. ' )' → logprob: -14.125467300415039

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. ' )' → logprob: -11.625009536743164
    3. '))' → logprob: -14.875009536743164
    4. '<|end|>' → logprob: -15.625009536743164
    5. ')
' → logprob: -15.750009536743164
    6. '())' → logprob: -16.250009536743164
    7. '`)' → logprob: -16.875009536743164
    8. '()' → logprob: -17.750009536743164
    9. ')#' → logprob: -18.250009536743164
    10. '）' → logprob: -18.250009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 43
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 78
Précision stricte (1ère position): 42.16%
Précision adaptée (1ère position): 42.16%
Précision (top 10): 76.47%
================================================================================
