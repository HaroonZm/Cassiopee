================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#最長増加部分列問題 (LIS) 
import bisect

N = int(input())
seq = [0] * N
for i in range(N):
  seq[i] = int(input())

LIS = [seq[0]]
#print(LIS)
for i in range(len(seq)):
    if seq[i] > LIS[-1]:
        LIS.append(seq[i])
    else:
        LIS[bisect.bisect_left(LIS, seq[i])] = seq[i]
    #print(LIS)
#print(LIS)
print(len(LIS))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: '最' (ID: 5889)
  → Token d'amorce (pas de prédiction)

Token 2: '長' (ID: 35081)
  → Token d'amorce (pas de prédiction)

Token 3: '増' (ID: 149580)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.838877260684967
    2. 'の' → logprob: -0.838877260684967
    3. '寿' → logprob: -3.7138772010803223
    4. '=' → logprob: -3.8388772010803223
    5. '連' → logprob: -4.713877201080322
    6. '```' → logprob: -5.088877201080322
    7. 'sequence' → logprob: -5.213877201080322
    8. '_length' → logprob: -5.338877201080322
    9. 'な' → logprob: -5.713877201080322
    10. 'を' → logprob: -5.713877201080322

Token 4: '加' (ID: 9116)
  Prédit: '加'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '加' → logprob: -0.1561294049024582
    2. '```' → logprob: -2.2811293601989746
    3. '#' → logprob: -4.906129360198975
    4. '**' → logprob: -5.031129360198975
    5. '##' → logprob: -5.031129360198975
    6. '&#' → logprob: -5.156129360198975
    7. '' → logprob: -6.156129360198975
    8. '``' → logprob: -6.406129360198975
    9. '^' → logprob: -6.656129360198975
    10. '' → logprob: -6.656129360198975

Token 5: '部分' (ID: 69424)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3251742124557495
    2. '_' → logprob: -2.075174331665039
    3. 's' → logprob: -2.450174331665039
    4. '_sub' → logprob: -3.575174331665039
    5. '列' → logprob: -4.075174331665039
    6. 'シ' → logprob: -5.575174331665039
    7. '子' → logprob: -5.950174331665039
    8. 'sub' → logprob: -6.325174331665039
    9. '#' → logprob: -6.325174331665039
    10. '__' → logprob: -6.450174331665039

Token 6: '列' (ID: 19047)
  Prédit: '列'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '列' → logprob: -0.3022504150867462
    2. 'の' → logprob: -2.302250385284424
    3. '#' → logprob: -3.552250385284424
    4. '_' → logprob: -3.927250385284424
    5. 'sub' → logprob: -4.052250385284424
    6. '長' → logprob: -4.302250385284424
    7. 's' → logprob: -4.427250385284424
    8. '部分' → logprob: -4.927250385284424
    9. 'L' → logprob: -5.052250385284424
    10. 'S' → logprob: -5.177250385284424

Token 7: '問題' (ID: 162565)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8694472312927246
    2. '_' → logprob: -1.2444472312927246
    3. 's' → logprob: -2.4944472312927246
    4. ':' → logprob: -3.3694472312927246
    5. 'n' → logprob: -3.3694472312927246
    6. '_dp' → logprob: -3.4944472312927246
    7. '#' → logprob: -3.7444472312927246
    8. 'd' → logprob: -3.7444472312927246
    9. '=' → logprob: -4.244447231292725
    10. 'def' → logprob: -4.369447231292725

Token 8: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.157387375831604
    2. 'dp' → logprob: -1.407387375831604
    3. '_' → logprob: -1.657387375831604
    4. 'd' → logprob: -2.5323872566223145
    5. '#' → logprob: -2.9073872566223145
    6. 'def' → logprob: -3.0323872566223145
    7. ':' → logprob: -3.5323872566223145
    8. 's' → logprob: -4.4073872566223145
    9. 'l' → logprob: -4.9073872566223145
    10. ',' → logprob: -6.0323872566223145

Token 9: 'L' (ID: 43)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6082007884979248
    2. ')' → logprob: -0.8582007884979248
    3. ' LIS' → logprob: -5.108201026916504
    4. 'L' → logprob: -5.608201026916504
    5. 'dp' → logprob: -5.733201026916504
    6. 'n' → logprob: -5.733201026916504
    7. ' #' → logprob: -5.858201026916504
    8. ' )' → logprob: -5.858201026916504
    9. ',' → logprob: -6.358201026916504
    10. '`)' → logprob: -6.858201026916504

Token 10: 'IS' (ID: 2291)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.013321875594556332
    2. 'S' → logprob: -4.388321876525879
    3. 'C' → logprob: -8.013321876525879
    4. 'IS' → logprob: -9.138321876525879
    5. 'A' → logprob: -9.888321876525879
    6. ' I' → logprob: -10.013321876525879
    7. '#' → logprob: -10.138321876525879
    8. 'i' → logprob: -10.763321876525879
    9. '\xef\xbc' → logprob: -11.138321876525879
    10. '_' → logprob: -11.513321876525879

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019765726756304502
    2. '）' → logprob: -6.626976490020752
    3. ' )' → logprob: -8.87697696685791
    4. '#' → logprob: -8.87697696685791
    5. 'の' → logprob: -9.12697696685791
    6. '=' → logprob: -9.87697696685791
    7. ':' → logprob: -10.00197696685791
    8. '`)' → logprob: -10.37697696685791
    9. ')n' → logprob: -11.00197696685791
    10. 's' → logprob: -11.12697696685791

Token 12: ' 
' (ID: 793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17242415249347687
    2. 'n' → logprob: -2.172424077987671
    3. 'の' → logprob: -4.17242431640625
    4. '```' → logprob: -5.04742431640625
    5. ' def' → logprob: -5.17242431640625
    6. 'を' → logprob: -5.79742431640625
    7. ':' → logprob: -5.92242431640625
    8. '#' → logprob: -6.04742431640625
    9. 'dp' → logprob: -6.04742431640625
    10. ' n' → logprob: -6.79742431640625

Token 13: 'import' (ID: 561)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5389426350593567
    2. ':' → logprob: -2.163942575454712
    3. 'def' → logprob: -2.413942575454712
    4. 'd' → logprob: -2.413942575454712
    5. '#' → logprob: -2.788942575454712
    6. '_' → logprob: -3.288942575454712
    7. ',' → logprob: -4.663942813873291
    8. 'の' → logprob: -6.038942813873291
    9. 'dp' → logprob: -6.288942813873291
    10. 'を' → logprob: -6.413942813873291

Token 14: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -1.1247843503952026
    2. ' sys' → logprob: -1.1247843503952026
    3. ' numpy' → logprob: -1.1247843503952026
    4. ' math' → logprob: -3.999784469604492
    5. ' itertools' → logprob: -5.624784469604492
    6. 'bis' → logprob: -6.124784469604492
    7. 'numpy' → logprob: -6.874784469604492
    8. ' ' → logprob: -8.374784469604492
    9. ' collections' → logprob: -8.874784469604492
    10. 'sys' → logprob: -8.874784469604492

Token 15: 'ect' (ID: 534)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.331026166677475
    2. 't' → logprob: -1.8310261964797974
    3. ' ' → logprob: -3.081026077270508
    4. 'ect' → logprob: -3.706026077270508
    5. 's' → logprob: -4.581026077270508
    6. '#' → logprob: -4.581026077270508
    7. 'def' → logprob: -4.956026077270508
    8. '_' → logprob: -5.331026077270508
    9. 'import' → logprob: -6.081026077270508
    10. '-' → logprob: -6.081026077270508

Token 16: '

' (ID: 279)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008803648874163628
    2. 'def' → logprob: -5.133803844451904
    3. '
' → logprob: -6.883803844451904
    4. '' → logprob: -7.758803844451904
    5. '_
' → logprob: -7.883803844451904
    6. '_

' → logprob: -8.258803367614746
    7. '\' → logprob: -8.383803367614746
    8. 'n' → logprob: -8.883803367614746
    9. ' ' → logprob: -9.633803367614746
    10. 'd' → logprob: -10.008803367614746

Token 17: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010509228333830833
    2. '_' → logprob: -4.760509014129639
    3. 'n' → logprob: -7.510509014129639
    4. 'de' → logprob: -8.385509490966797
    5. '_

' → logprob: -8.385509490966797
    6. '_
' → logprob: -9.010509490966797
    7. 'data' → logprob: -9.135509490966797
    8. 'import' → logprob: -9.135509490966797
    9. '#' → logprob: -9.135509490966797
    10. '```' → logprob: -9.385509490966797

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04457889869809151
    2. ' ' → logprob: -3.294578790664673
    3. '=' → logprob: -5.044579029083252
    4. ',' → logprob: -10.544578552246094
    5. ' ,' → logprob: -10.669578552246094
    6. '.' → logprob: -11.419578552246094
    7. '=int' → logprob: -13.044578552246094
    8. '  ' → logprob: -13.919578552246094
    9. '＝' → logprob: -13.919578552246094
    10. ' =
' → logprob: -14.044578552246094

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.39135098457336426
    2. 'int' → logprob: -1.1413509845733643
    3. ' ' → logprob: -6.016350746154785
    4. '10' → logprob: -6.266350746154785
    5. '5' → logprob: -9.766350746154785
    6. '20' → logprob: -11.391350746154785
    7. ' len' → logprob: -11.391350746154785
    8. '0' → logprob: -11.516350746154785
    9. '[int' → logprob: -11.516350746154785
    10. '100' → logprob: -12.016350746154785

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001713590754661709
    2. '(input' → logprob: -9.625171661376953
    3. '('' → logprob: -10.000171661376953
    4. '()' → logprob: -10.875171661376953
    5. ' (' → logprob: -11.000171661376953
    6. '(N' → logprob: -11.500171661376953
    7. '(`' → logprob: -12.375171661376953
    8. '(
' → logprob: -12.500171661376953
    9. '("' → logprob: -13.125171661376953
    10. '（' → logprob: -14.000171661376953

Token 21: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.464679479598999
    2. '(' → logprob: -1.339679479598999
    3. '())' → logprob: -2.464679479598999
    4. ')' → logprob: -3.714679479598999
    5. '(
' → logprob: -8.589679718017578
    6. '(

' → logprob: -9.714679718017578
    7. '('' → logprob: -10.089679718017578
    8. '(`' → logprob: -11.214679718017578
    9. '("' → logprob: -12.214679718017578
    10. '()
' → logprob: -12.714679718017578

Token 22: 'seq' (ID: 27794)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47929054498672485
    2. 'a' → logprob: -1.47929048538208
    3. ' A' → logprob: -2.22929048538208
    4. '```' → logprob: -4.60429048538208
    5. 's' → logprob: -4.85429048538208
    6. 'lst' → logprob: -5.22929048538208
    7. 'arr' → logprob: -5.60429048538208
    8. 'data' → logprob: -5.72929048538208
    9. ' a' → logprob: -5.85429048538208
    10. 'sequence' → logprob: -5.85429048538208

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6522182822227478
    2. '=' → logprob: -1.4022183418273926
    3. '[' → logprob: -1.5272183418273926
    4. '[]' → logprob: -5.277218341827393
    5. '[:]' → logprob: -5.652218341827393
    6. '=[]' → logprob: -6.027218341827393
    7. '_' → logprob: -6.527218341827393
    8. '.' → logprob: -6.902218341827393
    9. ')' → logprob: -7.277218341827393
    10. 's' → logprob: -8.027217864990234

Token 24: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.47437822818756104
    2. ' list' → logprob: -0.974378228187561
    3. '[list' → logprob: -8.59937858581543
    4. '[' → logprob: -9.97437858581543
    5. ' [' → logprob: -10.22437858581543
    6. '[]' → logprob: -10.72437858581543
    7. ' []' → logprob: -11.84937858581543
    8. '[input' → logprob: -12.72437858581543
    9. ' ' → logprob: -14.59937858581543
    10. '[int' → logprob: -14.72437858581543

Token 25: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.963691804325208e-05
    2. ' int' → logprob: -10.500029563903809
    3. '(int' → logprob: -13.500029563903809
    4. ']int' → logprob: -15.125029563903809
    5. '<int' → logprob: -16.625030517578125
    6. ',int' → logprob: -16.625030517578125
    7. '[int' → logprob: -17.125030517578125
    8. '0' → logprob: -17.375030517578125
    9. ':int' → logprob: -18.125030517578125
    10. '```' → logprob: -18.500030517578125

Token 26: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000889067945536226
    2. ']*' → logprob: -7.875889301300049
    3. ',' → logprob: -8.25088882446289
    4. ')' → logprob: -8.87588882446289
    5. ']*(' → logprob: -10.00088882446289
    6. ' ]' → logprob: -10.87588882446289
    7. ')]' → logprob: -11.00088882446289
    8. ' for' → logprob: -11.37588882446289
    9. ']+' → logprob: -12.12588882446289
    10. '）' → logprob: -12.37588882446289

Token 27: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04109518975019455
    2. '<|end|>' → logprob: -4.66609525680542
    3. '0' → logprob: -5.16609525680542
    4. ' ' → logprob: -5.29109525680542
    5. ' for' → logprob: -5.41609525680542
    6. '*' → logprob: -5.79109525680542
    7. 'for' → logprob: -5.79109525680542
    8. '+' → logprob: -6.41609525680542
    9. ')' → logprob: -6.54109525680542
    10. '
' → logprob: -7.04109525680542

Token 28: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013266648165881634
    2. ' N' → logprob: -6.626326560974121
    3. '(N' → logprob: -14.501326560974121
    4. ' (' → logprob: -16.376327514648438
    5. 'Ｎ' → logprob: -16.501327514648438
    6. '	N' → logprob: -16.751327514648438
    7. ' ' → logprob: -17.251327514648438
    8. '(' → logprob: -17.251327514648438
    9. '100' → logprob: -18.626327514648438
    10. '>N' → logprob: -18.876327514648438

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010144412517547607
    2. '
' → logprob: -5.510144233703613
    3. ' 
' → logprob: -5.885144233703613
    4. '

' → logprob: -6.885144233703613
    5. '\n' → logprob: -7.010144233703613
    6. 'for' → logprob: -7.385144233703613
    7. '' → logprob: -8.760144233703613
    8. ' for' → logprob: -8.885144233703613
    9. 'n' → logprob: -9.635144233703613
    10. ' 

' → logprob: -9.635144233703613

Token 30: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014899100176990032
    2. '
' → logprob: -4.764899253845215
    3. ' for' → logprob: -5.139899253845215
    4. ' 
' → logprob: -9.014899253845215
    5. '\n' → logprob: -9.514899253845215
    6. 'i' → logprob: -9.514899253845215
    7. 'n' → logprob: -9.764899253845215
    8. '[' → logprob: -11.014899253845215
    9. '

' → logprob: -11.264899253845215
    10. '' → logprob: -11.514899253845215

Token 31: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0034007367212325335
    2. ' ' → logprob: -6.003400802612305
    3. 'i' → logprob: -7.128400802612305
    4. ' _' → logprob: -9.128400802612305
    5. '_' → logprob: -11.878400802612305
    6. ' ‌' → logprob: -12.878400802612305
    7. '  ' → logprob: -13.253400802612305
    8. ' I' → logprob: -13.753400802612305
    9. '	i' → logprob: -15.003400802612305
    10. ' range' → logprob: -15.003400802612305

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043038129806518555
    2. 'in' → logprob: -3.1680381298065186
    3. ' ' → logprob: -10.668038368225098
    4. ' i' → logprob: -12.043038368225098
    5. 'range' → logprob: -12.418038368225098
    6. 'i' → logprob: -13.918038368225098
    7. '  ' → logprob: -14.418038368225098
    8. 'n' → logprob: -14.418038368225098
    9. '　' → logprob: -14.543038368225098
    10. ',' → logprob: -14.918038368225098

Token 33: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.018151111900806427
    2. 'range' → logprob: -4.01815128326416
    3. '(range' → logprob: -14.76815128326416
    4. '	range' → logprob: -14.76815128326416
    5. ' xrange' → logprob: -15.76815128326416
    6. ' ' → logprob: -16.018150329589844
    7. 'Range' → logprob: -17.643150329589844
    8. '_range' → logprob: -17.768150329589844
    9. '.range' → logprob: -17.893150329589844
    10. '\xe7\xaf' → logprob: -18.893150329589844

Token 34: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.576027512550354
    2. '(N' → logprob: -0.826027512550354
    3. ' (' → logprob: -9.826027870178223
    4. 'N' → logprob: -11.451027870178223
    5. '(n' → logprob: -11.451027870178223
    6. ' N' → logprob: -12.326027870178223
    7. '(len' → logprob: -12.701027870178223
    8. '（' → logprob: -13.201027870178223
    9. '()' → logprob: -13.951027870178223
    10. '(
' → logprob: -14.076027870178223

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024965754710137844
    2. ')' → logprob: -8.875249862670898
    3. '):
' → logprob: -9.500249862670898
    4. ':' → logprob: -11.000249862670898
    5. '+' → logprob: -12.000249862670898
    6. '）：' → logprob: -12.250249862670898
    7. ')：' → logprob: -12.875249862670898
    8. '):
' → logprob: -13.500249862670898
    9. ' ):' → logprob: -13.625249862670898
    10. ']:' → logprob: -14.125249862670898

Token 36: ' ' (ID: 220)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.014684736728668213
    2. 'seq' → logprob: -4.889684677124023
    3. '   ' → logprob: -5.014684677124023
    4. ' sequ' → logprob: -8.139684677124023
    5. ' sequence' → logprob: -9.639684677124023
    6. '(seq' → logprob: -10.639684677124023
    7. ' ```' → logprob: -12.014684677124023
    8. '```' → logprob: -12.139684677124023
    9. ' ' → logprob: -12.514684677124023
    10. ' se' → logprob: -12.889684677124023

Token 37: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.06996922940015793
    2. ' seq' → logprob: -2.6949691772460938
    3. ' sequ' → logprob: -11.569969177246094
    4. ' ' → logprob: -12.319969177246094
    5. '(seq' → logprob: -12.444969177246094
    6. ' sequence' → logprob: -12.444969177246094
    7. '   ' → logprob: -12.569969177246094
    8. 'sequence' → logprob: -12.569969177246094
    9. 'sequ' → logprob: -13.569969177246094
    10. '_seq' → logprob: -13.694969177246094

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0038949649315327406
    2. '[' → logprob: -5.628894805908203
    3. '[input' → logprob: -8.253894805908203
    4. '[int' → logprob: -11.003894805908203
    5. '[I' → logprob: -11.378894805908203
    6. '.append' → logprob: -13.878894805908203
    7. '\[' → logprob: -14.378894805908203
    8. '```' → logprob: -14.503894805908203
    9. '[...]' → logprob: -14.628894805908203
    10. ' [' → logprob: -14.628894805908203

Token 39: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1849827915430069
    2. ' =' → logprob: -1.8099827766418457
    3. ')' → logprob: -6.059982776641846
    4. ']' → logprob: -6.434982776641846
    5. '=int' → logprob: -7.934982776641846
    6. ')=' → logprob: -8.184983253479004
    7. ' ' → logprob: -8.309983253479004
    8. ']=' → logprob: -8.559983253479004
    9. ' )' → logprob: -9.059983253479004
    10. '=input' → logprob: -9.684983253479004

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619802325963974
    2. ' =' → logprob: -2.8119802474975586
    3. '=int' → logprob: -11.936980247497559
    4. '＝' → logprob: -12.811980247497559
    5. '=input' → logprob: -12.936980247497559
    6. ' ' → logprob: -14.686980247497559
    7. ',' → logprob: -15.686980247497559
    8. '=

' → logprob: -16.936979293823242
    9. '+=' → logprob: -17.061979293823242
    10. ' +=' → logprob: -17.811979293823242

Token 41: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06196948140859604
    2. ' int' → logprob: -2.811969518661499
    3. '<int' → logprob: -13.936969757080078
    4. '(int' → logprob: -15.311969757080078
    5. '=int' → logprob: -15.311969757080078
    6. ' ' → logprob: -15.436969757080078
    7. '[int' → logprob: -16.061969757080078
    8. '	int' → logprob: -16.311969757080078
    9. 'in' → logprob: -17.811969757080078
    10. ':int' → logprob: -17.936969757080078

Token 42: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06197138875722885
    2. '(' → logprob: -2.811971426010132
    3. ' (' → logprob: -13.811971664428711
    4. '()' → logprob: -14.061971664428711
    5. '(in' → logprob: -14.061971664428711
    6. 'input' → logprob: -14.436971664428711
    7. '(inp' → logprob: -15.561971664428711
    8. '(
' → logprob: -16.43697166442871
    9. '（' → logprob: -16.56197166442871
    10. '(

' → logprob: -16.68697166442871

Token 43: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.029887596145272255
    2. '()' → logprob: -3.5298876762390137
    3. ')' → logprob: -9.029887199401855
    4. '(' → logprob: -11.654887199401855
    5. ' ())' → logprob: -12.654887199401855
    6. '())
' → logprob: -12.904887199401855
    7. '()))' → logprob: -13.279887199401855
    8. '();)' → logprob: -15.029887199401855
    9. '()]' → logprob: -15.779887199401855
    10. '()
' → logprob: -16.029888153076172

Token 44: 'L' (ID: 43)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07523799687623978
    2. 'lis' → logprob: -2.700237989425659
    3. 'L' → logprob: -5.325238227844238
    4. ' dp' → logprob: -8.200238227844238
    5. 'tails' → logprob: -10.200238227844238
    6. 'tail' → logprob: -10.825238227844238
    7. 'ans' → logprob: -11.200238227844238
    8. ' lis' → logprob: -11.325238227844238
    9. 'lst' → logprob: -11.450238227844238
    10. 'li' → logprob: -11.950238227844238

Token 45: 'IS' (ID: 2291)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.716580331325531
    2. '_' → logprob: -1.7165803909301758
    3. ' =' → logprob: -2.466580390930176
    4. 'is' → logprob: -2.591580390930176
    5. '=' → logprob: -2.716580390930176
    6. 'S' → logprob: -3.341580390930176
    7. 'IS' → logprob: -3.466580390930176
    8. 'I' → logprob: -4.466580390930176
    9. 'ist' → logprob: -5.341580390930176
    10. '[]' → logprob: -5.341580390930176

Token 46: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7838456034660339
    2. ' =' → logprob: -1.1588456630706787
    3. '=[]' → logprob: -1.7838456630706787
    4. '=' → logprob: -2.9088456630706787
    5. '_length' → logprob: -6.4088454246521
    6. '[]' → logprob: -6.6588454246521
    7. '_list' → logprob: -7.0338454246521
    8. '(' → logprob: -7.5338454246521
    9. '=[]
' → logprob: -7.6588454246521
    10. '_array' → logprob: -7.7838454246521

Token 47: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -9.782141569303349e-05
    2. '[' → logprob: -9.75009822845459
    3. '[]
' → logprob: -10.50009822845459
    4. ' []' → logprob: -11.50009822845459
    5. '[]>' → logprob: -13.87509822845459
    6. '[]}' → logprob: -14.50009822845459
    7. '[]

' → logprob: -15.37509822845459
    8. '[],' → logprob: -17.125097274780273
    9. '[])' → logprob: -17.125097274780273
    10. '=[]' → logprob: -17.375097274780273

Token 48: 'seq' (ID: 27794)
  Prédit: 'seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.18756987154483795
    2. ']' → logprob: -2.0625698566436768
    3. ')' → logprob: -3.1875698566436768
    4. '])' → logprob: -6.812570095062256
    5. '0' → logprob: -7.062570095062256
    6. ')]' → logprob: -8.812569618225098
    7. '）' → logprob: -9.187569618225098
    8. '-' → logprob: -9.562569618225098
    9. '(seq' → logprob: -9.687569618225098
    10. ' ]' → logprob: -9.812569618225098

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.815280696377158e-05
    2. '0' → logprob: -9.750078201293945
    3. '[i' → logprob: -10.875078201293945
    4. ' ' → logprob: -14.875078201293945
    5. '1' → logprob: -15.625078201293945
    6. ']' → logprob: -16.250078201293945
    7. '[
' → logprob: -16.500078201293945
    8. '```' → logprob: -16.875078201293945
    9. ' [' → logprob: -17.125078201293945
    10. '(' → logprob: -17.750078201293945

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.25000286102295
    3. '[' → logprob: -15.00000286102295
    4. '０' → logprob: -15.25000286102295
    5. 'i' → logprob: -17.500001907348633
    6. '۰' → logprob: -18.250001907348633
    7. '```' → logprob: -19.125001907348633
    8. ']' → logprob: -19.125001907348633
    9. '   ' → logprob: -19.625001907348633
    10. '-' → logprob: -19.937501907348633

Token 51: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002334020799025893
    2. ' ]' → logprob: -6.252334117889404
    3. ')]' → logprob: -7.877334117889404
    4. '])' → logprob: -12.002333641052246
    5. '])]' → logprob: -12.127333641052246
    6. ')' → logprob: -12.377333641052246
    7. '`]' → logprob: -13.002333641052246
    8. '}]' → logprob: -13.127333641052246
    9. '>]' → logprob: -13.377333641052246
    10. ']
' → logprob: -13.627333641052246

Token 52: '#print' (ID: 57825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48337575793266296
    2. ' for' → logprob: -0.9833757877349854
    3. '
' → logprob: -4.983375549316406
    4. ' ' → logprob: -6.358375549316406
    5. ' 
' → logprob: -7.733375549316406
    6. '' → logprob: -9.733375549316406
    7. '  
' → logprob: -9.733375549316406
    8. ',' → logprob: -10.608375549316406
    9. '	for' → logprob: -10.983375549316406
    10. '.for' → logprob: -11.108375549316406

Token 53: '(L' (ID: 11075)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003138616681098938
    2. '_' → logprob: -6.503138542175293
    3. '('' → logprob: -7.128138542175293
    4. '("' → logprob: -8.253138542175293
    5. '(
' → logprob: -9.628138542175293
    6. '("("' → logprob: -9.628138542175293
    7. ' (' → logprob: -9.878138542175293
    8. '()' → logprob: -10.003138542175293
    9. '(L' → logprob: -10.128138542175293
    10. ' ' → logprob: -10.253138542175293

Token 54: 'IS' (ID: 2291)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.13174791634082794
    2. 'IS' → logprob: -2.2567479610443115
    3. 'S' → logprob: -4.006747722625732
    4. '_' → logprob: -8.75674819946289
    5. ')' → logprob: -9.38174819946289
    6. ' I' → logprob: -10.25674819946289
    7. '[' → logprob: -10.50674819946289
    8. 'is' → logprob: -11.00674819946289
    9. '_I' → logprob: -11.06924819946289
    10. ']' → logprob: -11.13174819946289

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002755174064077437
    2. ']' → logprob: -9.500275611877441
    3. '[' → logprob: -9.875275611877441
    4. '）' → logprob: -10.125275611877441
    5. ' )' → logprob: -10.625275611877441
    6. ')
' → logprob: -10.750275611877441
    7. '.' → logprob: -11.375275611877441
    8. '])' → logprob: -11.500275611877441
    9. '')' → logprob: -11.875275611877441
    10. ' ' → logprob: -11.875275611877441

Token 56: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10053402185440063
    2. ' for' → logprob: -2.350533962249756
    3. '
' → logprob: -8.600534439086914
    4. '\n' → logprob: -9.475534439086914
    5. '```' → logprob: -10.975534439086914
    6. '<|end|>' → logprob: -10.975534439086914
    7. ' ' → logprob: -11.475534439086914
    8. '	for' → logprob: -11.975534439086914
    9. ' 
' → logprob: -13.225534439086914
    10. '' → logprob: -13.225534439086914

Token 57: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07752478122711182
    2. ' ' → logprob: -2.7025246620178223
    3. 'i' → logprob: -4.952524662017822
    4. ' x' → logprob: -8.45252513885498
    5. '  ' → logprob: -8.57752513885498
    6. ' seq' → logprob: -10.82752513885498
    7. '   ' → logprob: -11.32752513885498
    8. ' num' → logprob: -11.45252513885498
    9. '　' → logprob: -11.57752513885498
    10. ' s' → logprob: -12.20252513885498

Token 58: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011115728877484798
    2. 'in' → logprob: -4.636115550994873
    3. ' ' → logprob: -6.636115550994873
    4. '  ' → logprob: -10.136116027832031
    5. '	in' → logprob: -12.761116027832031
    6. ' i' → logprob: -13.386116027832031
    7. '　' → logprob: -13.761116027832031
    8. '1' → logprob: -15.511116027832031
    9. ' ' → logprob: -15.886116027832031
    10. 'In' → logprob: -15.886116027832031

Token 59: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009799061343073845
    2. 'range' → logprob: -4.634799003601074
    3. ' ' → logprob: -10.134799003601074
    4. '(range' → logprob: -13.884799003601074
    5. '  ' → logprob: -14.009799003601074
    6. ' ran' → logprob: -14.634799003601074
    7. '	range' → logprob: -14.634799003601074
    8. ' xrange' → logprob: -15.384799003601074
    9. ' seq' → logprob: -15.759799003601074
    10. ' rang' → logprob: -15.884799003601074

Token 60: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5048530030981055e-06
    2. '(
' → logprob: -14.250001907348633
    3. ' (' → logprob: -14.250001907348633
    4. '1' → logprob: -15.250001907348633
    5. '(

' → logprob: -18.000001907348633
    6. ' ' → logprob: -18.500001907348633
    7. '（' → logprob: -19.500001907348633
    8. '(N' → logprob: -19.625001907348633
    9. '(len' → logprob: -20.125001907348633
    10. ')' → logprob: -20.875001907348633

Token 61: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.00837143138051033
    2. '(' → logprob: -4.883371353149414
    3. '(L' → logprob: -7.258371353149414
    4. '(sequence' → logprob: -10.383371353149414
    5. 'seq' → logprob: -11.508371353149414
    6. ' (' → logprob: -12.008371353149414
    7. '(se' → logprob: -12.758371353149414
    8. '(N' → logprob: -12.758371353149414
    9. ')' → logprob: -13.508371353149414
    10. '(S' → logprob: -13.508371353149414

Token 62: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22673451900482178
    2. ')):' → logprob: -1.6017345190048218
    3. ')' → logprob: -7.351734638214111
    4. ' ):' → logprob: -7.851734638214111
    5. '))' → logprob: -9.226734161376953
    6. '[' → logprob: -9.976734161376953
    7. ')>' → logprob: -10.101734161376953
    8. ')):
' → logprob: -10.351734161376953
    9. '>):' → logprob: -10.726734161376953
    10. ' ' → logprob: -11.101734161376953

Token 63: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.031179605051875114
    2. ' if' → logprob: -3.781179666519165
    3. '1' → logprob: -5.156179428100586
    4. '   ' → logprob: -7.406179428100586
    5. '  ' → logprob: -7.656179428100586
    6. ' i' → logprob: -8.281179428100586
    7. '    ' → logprob: -9.031179428100586
    8. ' >' → logprob: -9.031179428100586
    9. ' ,' → logprob: -9.656179428100586
    10. ' 
' → logprob: -9.656179428100586

Token 64: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.040944602340459824
    2. ' if' → logprob: -3.4159445762634277
    3. '    ' → logprob: -5.665944576263428
    4. ' i' → logprob: -6.290944576263428
    5. '   ' → logprob: -7.665944576263428
    6. '  ' → logprob: -7.915944576263428
    7. ' )' → logprob: -8.165945053100586
    8. 'if' (adapté à ' if') → logprob: -8.540945053100586
    9. '1' → logprob: -8.915945053100586
    10. ' 
' → logprob: -9.290945053100586

Token 65: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.004422166850417852
    2. 'seq' → logprob: -6.004422187805176
    3. ' ' → logprob: -6.254422187805176
    4. ' i' → logprob: -11.879422187805176
    5. ' sequ' → logprob: -12.879422187805176
    6. ' sequence' → logprob: -12.879422187805176
    7. '   ' → logprob: -13.004422187805176
    8. '(seq' → logprob: -13.004422187805176
    9. '  ' → logprob: -13.504422187805176
    10. ' len' → logprob: -13.504422187805176

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.463036435074173e-05
    2. '[' → logprob: -10.750024795532227
    3. '>' → logprob: -14.000024795532227
    4. '[I' → logprob: -14.125024795532227
    5. ' [' → logprob: -14.500024795532227
    6. 'i' → logprob: -15.125024795532227
    7. ' ' → logprob: -15.250024795532227
    8. '[-' → logprob: -15.750024795532227
    9. ' >' → logprob: -16.375024795532227
    10. '   ' → logprob: -17.000024795532227

Token 67: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20405800640583038
    2. '>' → logprob: -1.704058051109314
    3. ' ' → logprob: -5.9540581703186035
    4. ']' → logprob: -11.829057693481445
    5. ')' → logprob: -11.954057693481445
    6. '>L' → logprob: -11.954057693481445
    7. '＞' → logprob: -12.079057693481445
    8. ']>' → logprob: -12.454057693481445
    9. ' ' → logprob: -12.829057693481445
    10. '">' → logprob: -13.079057693481445

Token 68: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1606650948524475
    2. '>' → logprob: -1.9106650352478027
    3. ' ' → logprob: -7.785665035247803
    4. '>L' → logprob: -11.535665512084961
    5. '">' → logprob: -12.785665512084961
    6. ' ' → logprob: -13.160665512084961
    7. '＞' → logprob: -13.535665512084961
    8. ' <' → logprob: -13.535665512084961
    9. '  ' → logprob: -13.785665512084961
    10. '[' → logprob: -14.285665512084961

Token 69: ' LIS' (ID: 197896)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0024769625160843134
    2. ' LIS' → logprob: -6.002477169036865
    3. 'LS' → logprob: -14.377476692199707
    4. ' ' → logprob: -14.377476692199707
    5. 'LI' → logprob: -16.752477645874023
    6. ' L' → logprob: -17.752477645874023
    7. '	L' → logprob: -17.752477645874023
    8. '   ' → logprob: -17.877477645874023
    9. '  ' → logprob: -17.877477645874023
    10. '>L' → logprob: -18.002477645874023

Token 70: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.500000953674316
    3. '-' → logprob: -15.500000953674316
    4. '[len' → logprob: -16.125
    5. ' [-' → logprob: -17.125
    6. '```' → logprob: -18.5
    7. '   ' → logprob: -18.75
    8. ' ' → logprob: -19.5
    9. '[
' → logprob: -19.625
    10. '[i' → logprob: -20.0

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '１' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.125
    4. ']' → logprob: -17.0
    5. 'i' → logprob: -18.25
    6. '

' → logprob: -18.8125
    7. '```' → logprob: -19.0
    8. '0' → logprob: -19.125
    9. '
' → logprob: -19.3125
    10. '2' → logprob: -19.5625

Token 72: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03578158840537071
    2. ':' → logprob: -3.4107816219329834
    3. ']:' → logprob: -7.160781383514404
    4. ')' → logprob: -7.285781383514404
    5. ' ):' → logprob: -7.660781383514404
    6. '）：' → logprob: -9.910781860351562
    7. '[' → logprob: -10.410781860351562
    8. '):
' → logprob: -10.660781860351562
    9. ']):' → logprob: -10.785781860351562
    10. ' ' → logprob: -11.035781860351562

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09267181158065796
    2. ' ' → logprob: -3.3426718711853027
    3. '   ' → logprob: -3.5926718711853027
    4. '    ' → logprob: -4.217671871185303
    5. ')' → logprob: -5.842671871185303
    6. ' )' → logprob: -6.592671871185303
    7. '  ' → logprob: -6.592671871185303
    8. '      ' → logprob: -6.842671871185303
    9. '     ' → logprob: -7.092671871185303
    10. ':' → logprob: -7.467671871185303

Token 74: ' LIS' (ID: 197896)
  Prédit: ' LIS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LIS' → logprob: -0.15908856689929962
    2. 'L' → logprob: -2.034088611602783
    3. ' L' → logprob: -4.784088611602783
    4. '       ' → logprob: -5.409088611602783
    5. ' ' → logprob: -7.284088611602783
    6. '   ' → logprob: -7.534088611602783
    7. '        ' → logprob: -7.784088611602783
    8. ' ' → logprob: -8.034088134765625
    9. '           ' → logprob: -8.159088134765625
    10. '        
' → logprob: -8.534088134765625

Token 75: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0013406005455181003
    2. '.' → logprob: -6.626340389251709
    3. '.extend' → logprob: -11.501340866088867
    4. '.app' → logprob: -13.126340866088867
    5. '.add' → logprob: -14.001340866088867
    6. 'append' → logprob: -14.876340866088867
    7. ' .' → logprob: -15.001340866088867
    8. '.setdefault' → logprob: -15.001340866088867
    9. '.Append' → logprob: -15.751340866088867
    10. '.push' → logprob: -15.876340866088867

Token 76: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.16022899746894836
    2. '(' → logprob: -1.910228967666626
    3. '(
' → logprob: -12.785228729248047
    4. '(se' → logprob: -14.035228729248047
    5. ' (' → logprob: -14.535228729248047
    6. '(sequence' → logprob: -14.535228729248047
    7. 'seq' → logprob: -16.410228729248047
    8. '(

' → logprob: -16.535228729248047
    9. '(i' → logprob: -18.660228729248047
    10. '((' → logprob: -18.660228729248047

Token 77: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.500000953674316
    3. '[' → logprob: -15.750000953674316
    4. 'i' → logprob: -16.25
    5. ']' → logprob: -18.5
    6. '[I' → logprob: -18.625
    7. ')i' → logprob: -18.875
    8. '```' → logprob: -19.25
    9. '[
' → logprob: -20.25
    10. ' [' → logprob: -20.5

Token 78: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4745567739009857
    2. ')' → logprob: -0.9745568037033081
    3. '）' → logprob: -8.474556922912598
    4. ')
' → logprob: -9.224556922912598
    5. ']' → logprob: -9.849556922912598
    6. '))' → logprob: -10.349556922912598
    7. ')])' → logprob: -10.474556922912598
    8. ')]' → logprob: -10.974556922912598
    9. '])
' → logprob: -11.099556922912598
    10. ' )' → logprob: -11.224556922912598

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40532830357551575
    2. 'else' → logprob: -1.2803282737731934
    3. ' else' → logprob: -2.9053282737731934
    4. ' ' → logprob: -8.530328750610352
    5. '	else' → logprob: -8.655328750610352
    6. 'elif' → logprob: -9.030328750610352
    7. '   ' → logprob: -11.655328750610352
    8. '  ' → logprob: -11.780328750610352
    9. ' elif' → logprob: -11.780328750610352
    10. '```' → logprob: -11.905328750610352

Token 80: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.15763825178146362
    2. ' else' → logprob: -2.4076383113861084
    3. '   ' → logprob: -2.9076383113861084
    4. ' ' → logprob: -6.782638072967529
    5. '	else' → logprob: -9.782638549804688
    6. 'elif' → logprob: -11.407638549804688
    7. '  ' → logprob: -12.657638549804688
    8. ' ' → logprob: -13.782638549804688
    9. '_else' → logprob: -14.282638549804688
    10. ' elif' → logprob: -14.407638549804688

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011969251558184624
    2. '       ' → logprob: -4.511969089508057
    3. ':
' → logprob: -7.886969089508057
    4. ',' → logprob: -8.761969566345215
    5. ' :' → logprob: -9.386969566345215
    6. '：' → logprob: -9.511969566345215
    7. '):' → logprob: -9.511969566345215
    8. '[' → logprob: -10.136969566345215
    9. '   ' → logprob: -10.136969566345215
    10. ' ' → logprob: -11.136969566345215

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024122241884469986
    2. ' bis' → logprob: -4.89912223815918
    3. ' idx' → logprob: -5.52412223815918
    4. ' ind' → logprob: -5.52412223815918
    5. ' pos' → logprob: -6.14912223815918
    6. '   ' → logprob: -6.14912223815918
    7. ' ' → logprob: -7.27412223815918
    8. ' ' → logprob: -7.27412223815918
    9. 'idx' → logprob: -8.02412223815918
    10. ' index' → logprob: -8.14912223815918

Token 83: ' LIS' (ID: 197896)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5092747807502747
    2. ' idx' → logprob: -1.2592747211456299
    3. 'L' → logprob: -3.13427472114563
    4. 'pos' → logprob: -3.13427472114563
    5. 'index' → logprob: -4.384274959564209
    6. ' pos' → logprob: -5.009274959564209
    7. ' index' → logprob: -5.384274959564209
    8. ' LIS' → logprob: -6.759274959564209
    9. 'bis' → logprob: -7.134274959564209
    10. ' L' → logprob: -7.134274959564209

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4976569414138794
    2. '_idx' → logprob: -1.4976569414138794
    3. '_index' → logprob: -1.9976569414138794
    4. 'bis' → logprob: -4.74765682220459
    5. ' bis' → logprob: -4.87265682220459
    6. '_pos' → logprob: -6.12265682220459
    7. 'idx' → logprob: -6.49765682220459
    8. '_replace' → logprob: -6.74765682220459
    9. '=' → logprob: -6.87265682220459
    10. 'index' → logprob: -7.12265682220459

Token 85: 'bis' (ID: 38042)
  Prédit: 'bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.001974669052287936
    2. ' bis' → logprob: -6.251974582672119
    3. 'b' → logprob: -10.001975059509277
    4. 'bs' → logprob: -14.876975059509277
    5. 'bi' → logprob: -15.376975059509277
    6. 'Bis' → logprob: -16.75197410583496
    7. '-b' → logprob: -17.62697410583496
    8. '	b' → logprob: -17.87697410583496
    9. '0' → logprob: -18.25197410583496
    10. '   ' → logprob: -18.25197410583496

Token 86: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -5.438573680294212e-06
    2. 'ct' → logprob: -12.750005722045898
    3. 'e' → logprob: -13.750005722045898
    4. 'sect' → logprob: -14.875005722045898
    5. 'ec' → logprob: -15.125005722045898
    6. 'ectl' → logprob: -15.625005722045898
    7. 'ects' → logprob: -15.750005722045898
    8. '_left' → logprob: -16.5000057220459
    9. '```' → logprob: -17.0000057220459
    10. 'ected' → logprob: -17.5000057220459

Token 87: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.6339455842971802
    2. '_left' → logprob: -0.7589455842971802
    3. '.' → logprob: -6.883945465087891
    4. 'Left' → logprob: -9.13394546508789
    5. 'L' → logprob: -9.75894546508789
    6. '_right' → logprob: -10.00894546508789
    7. '.ins' → logprob: -10.00894546508789
    8. '.l' → logprob: -10.88394546508789
    9. '-left' → logprob: -11.75894546508789
    10. '_LEFT' → logprob: -12.00894546508789

Token 88: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16502392292022705
    2. 'is' → logprob: -3.1650238037109375
    3. 'sl' → logprob: -3.4150238037109375
    4. 'sp' → logprob: -3.9150238037109375
    5. 'ct' → logprob: -4.0400238037109375
    6. 'lt' → logprob: -4.2900238037109375
    7. 'st' → logprob: -4.4150238037109375
    8. 'sf' → logprob: -5.0400238037109375
    9. 'ls' → logprob: -6.1650238037109375
    10. 'nd' → logprob: -7.2900238037109375

Token 89: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.0016150808660313487
    2. 'ect' → logprob: -6.501615047454834
    3. 'n' → logprob: -9.376615524291992
    4. 'nd' → logprob: -12.001615524291992
    5. 'st' → logprob: -12.251615524291992
    6. 's' → logprob: -12.376615524291992
    7. 'ns' → logprob: -12.626615524291992
    8. 't' → logprob: -13.126615524291992
    9. 'pt' → logprob: -13.876615524291992
    10. '```' → logprob: -13.876615524291992

Token 90: '_left' (ID: 22189)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.6941654086112976
    2. '_left' → logprob: -0.6941654086112976
    3. 'L' → logprob: -7.444165229797363
    4. 'left' → logprob: -8.819165229797363
    5. 'Left' → logprob: -9.069165229797363
    6. '_right' → logprob: -9.194165229797363
    7. '(' → logprob: -9.819165229797363
    8. 'l' → logprob: -13.069165229797363
    9. '```' → logprob: -13.194165229797363
    10. '_LEFT' → logprob: -13.319165229797363

Token 91: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0002627662615850568
    2. '(' → logprob: -8.250263214111328
    3. '(
' → logprob: -14.250263214111328
    4. ' (' → logprob: -15.000263214111328
    5. 'L' → logprob: -15.125263214111328
    6. '(I' → logprob: -15.875263214111328
    7. '(

' → logprob: -17.500263214111328
    8. '```' → logprob: -17.500263214111328
    9. '(l' → logprob: -18.125263214111328
    10. ')L' → logprob: -18.250263214111328

Token 92: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.34847304224967957
    2. 'S' → logprob: -1.223473072052002
    3. 'L' → logprob: -11.848472595214844
    4. 'I' → logprob: -12.473472595214844
    5. '(S' → logprob: -12.973472595214844
    6. ')' → logprob: -12.973472595214844
    7. '[' → logprob: -13.223472595214844
    8. 'IST' → logprob: -13.223472595214844
    9. 'is' → logprob: -13.723472595214844
    10. '(IS' → logprob: -13.848472595214844

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006945891305804253
    2. '(seq' → logprob: -5.131946086883545
    3. ' ,' → logprob: -7.131946086883545
    4. '(' → logprob: -9.506945610046387
    5. ',num' → logprob: -10.256945610046387
    6. ',se' → logprob: -11.256945610046387
    7. ' (' → logprob: -11.256945610046387
    8. '],[' → logprob: -11.631945610046387
    9. ',s' → logprob: -11.631945610046387
    10. ',(' → logprob: -11.756945610046387

Token 94: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.0024773201439529657
    2. ' seq' → logprob: -6.002477169036865
    3. '(seq' → logprob: -13.627477645874023
    4. ')' → logprob: -16.002477645874023
    5. 'se' → logprob: -16.127477645874023
    6. ' ' → logprob: -16.502477645874023
    7. 's' → logprob: -16.877477645874023
    8. 'sequence' → logprob: -17.752477645874023
    9. '   ' → logprob: -17.877477645874023
    10. '_seq' → logprob: -18.252477645874023

Token 95: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. ')' → logprob: -13.750001907348633
    3. '[' → logprob: -14.125001907348633
    4. '[I' → logprob: -15.375001907348633
    5. 'i' → logprob: -17.125001907348633
    6. ')[' → logprob: -17.250001907348633
    7. '[
' → logprob: -17.625001907348633
    8. '[j' → logprob: -18.000001907348633
    9. ')i' → logprob: -18.750001907348633
    10. ',i' → logprob: -18.750001907348633

Token 96: '])]' (ID: 178925)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002004410926019773
    2. ')' → logprob: -9.500200271606445
    3. ' )' → logprob: -9.750200271606445
    4. ']' → logprob: -10.625200271606445
    5. '])]' → logprob: -11.125200271606445
    6. ')])' → logprob: -12.000200271606445
    7. '),' → logprob: -12.125200271606445
    8. ')]
' → logprob: -12.625200271606445
    9. ',' → logprob: -13.000200271606445
    10. '])' → logprob: -13.125200271606445

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02977965772151947
    2. '=' → logprob: -3.5297796726226807
    3. ' =
' → logprob: -10.529779434204102
    4. ' =)' → logprob: -13.904779434204102
    5. '＝' → logprob: -14.779779434204102
    6. ' =
' → logprob: -15.029779434204102
    7. ' ' → logprob: -15.154779434204102
    8. '=

' → logprob: -16.0297794342041
    9. ']' → logprob: -16.5297794342041
    10. ' ' → logprob: -16.6547794342041

Token 98: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.005234121344983578
    2. ' seq' → logprob: -5.255234241485596
    3. 'se' → logprob: -15.505233764648438
    4. '(seq' → logprob: -16.505233764648438
    5. '_seq' → logprob: -18.255233764648438
    6. ' ' → logprob: -18.255233764648438
    7. 'sequ' → logprob: -18.755233764648438
    8. ' ' → logprob: -19.005233764648438
    9. 's' → logprob: -19.005233764648438
    10. 'sequence' → logprob: -19.130233764648438

Token 99: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.750008583068848
    3. 'i' → logprob: -15.750008583068848
    4. '[I' → logprob: -16.62500762939453
    5. '```' → logprob: -17.87500762939453
    6. '[
' → logprob: -18.62500762939453
    7. '[int' → logprob: -19.00000762939453
    8. ' [' → logprob: -19.00000762939453
    9. '[j' → logprob: -19.87500762939453
    10. '[x' → logprob: -20.00000762939453

Token 100: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004256357904523611
    2. '])' → logprob: -6.004256248474121
    3. ']' → logprob: -6.754256248474121
    4. '）' → logprob: -7.754256248474121
    5. ' )' → logprob: -9.129256248474121
    6. ')]' → logprob: -10.254256248474121
    7. ')
' → logprob: -10.879256248474121
    8. '[' → logprob: -11.879256248474121
    9. '[i' → logprob: -12.754256248474121
    10. ')])' → logprob: -12.754256248474121

Token 101: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014856102876365185
    2. ')' → logprob: -5.014856338500977
    3. '
' → logprob: -5.514856338500977
    4. '#' → logprob: -6.264856338500977
    5. ' ' → logprob: -7.264856338500977
    6. '<|end|>' → logprob: -7.889856338500977
    7. '#print' → logprob: -8.264856338500977
    8. ' print' → logprob: -8.264856338500977
    9. 'for' → logprob: -8.889856338500977
    10. ']' → logprob: -9.389856338500977

Token 102: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0039070649072527885
    2. ')' → logprob: -6.003907203674316
    3. '
' → logprob: -7.503907203674316
    4. '#' (adapté à ' #') → logprob: -8.378907203674316
    5. '#print' → logprob: -8.753907203674316
    6. ' ' → logprob: -8.878907203674316
    7. ' print' → logprob: -8.878907203674316
    8. '<|end|>' → logprob: -9.128907203674316
    9. ']' → logprob: -10.253907203674316
    10. 'for' → logprob: -11.628907203674316

Token 103: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007629302563145757
    2. ')' → logprob: -8.125762939453125
    3. ' print' → logprob: -8.125762939453125
    4. '#print' → logprob: -9.375762939453125
    5. '#' → logprob: -10.250762939453125
    6. ' ' → logprob: -10.750762939453125
    7. 'i' → logprob: -11.500762939453125
    8. 'for' → logprob: -12.250762939453125
    9. 'len' → logprob: -12.875762939453125
    10. '
' → logprob: -13.000762939453125

Token 104: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.02336905151605606
    2. '(' → logprob: -3.773369073867798
    3. 'L' → logprob: -9.148368835449219
    4. '(
' → logprob: -12.398368835449219
    5. ' (' → logprob: -12.648368835449219
    6. '()' → logprob: -12.898368835449219
    7. '("' → logprob: -13.273368835449219
    8. '(I' → logprob: -13.898368835449219
    9. '(

' → logprob: -14.023368835449219
    10. '('' → logprob: -14.023368835449219

Token 105: 'IS' (ID: 2291)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.007952257059514523
    2. 'IS' → logprob: -4.8829522132873535
    3. ')' → logprob: -8.382952690124512
    4. 'i' → logprob: -10.507952690124512
    5. '[i' → logprob: -11.007952690124512
    6. ' S' → logprob: -11.007952690124512
    7. 'Ｓ' → logprob: -11.507952690124512
    8. 'I' → logprob: -11.632952690124512
    9. 'seq' → logprob: -12.257952690124512
    10. 'is' → logprob: -12.507952690124512

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '）' → logprob: -13.250004768371582
    3. ')
' → logprob: -13.500004768371582
    4. ' )' → logprob: -13.625004768371582
    5. ')i' → logprob: -16.375003814697266
    6. ' ' → logprob: -16.625003814697266
    7. ')#' → logprob: -16.750003814697266
    8. '))' → logprob: -17.250003814697266
    9. '`)' → logprob: -17.375003814697266
    10. ')`' → logprob: -17.625003814697266

Token 107: '#print' (ID: 57825)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2931586802005768
    2. '<|end|>' → logprob: -2.168158769607544
    3. ' ' → logprob: -2.418158769607544
    4. '#' → logprob: -3.418158769607544
    5. 'print' → logprob: -5.043158531188965
    6. '
' → logprob: -5.918158531188965
    7. ']' → logprob: -6.543158531188965
    8. 'i' → logprob: -7.168158531188965
    9. '```' → logprob: -7.668158531188965
    10. 'for' → logprob: -7.668158531188965

Token 108: '(L' (ID: 11075)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0004058858612552285
    2. 'len' → logprob: -8.375406265258789
    3. '(' → logprob: -9.000406265258789
    4. '(max' → logprob: -10.625406265258789
    5. '(min' → logprob: -10.875406265258789
    6. '(L' → logprob: -12.125406265258789
    7. '()' → logprob: -12.875406265258789
    8. ' len' → logprob: -15.500406265258789
    9. '(sum' → logprob: -16.00040626525879
    10. ' (' → logprob: -16.12540626525879

Token 109: 'IS' (ID: 2291)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.40181705355644226
    2. 'IS' → logprob: -1.2768170833587646
    3. ')' → logprob: -4.0268168449401855
    4. 'EN' → logprob: -4.2768168449401855
    5. 'I' → logprob: -4.5268168449401855
    6. 'en' → logprob: -5.9018168449401855
    7. '(' → logprob: -6.5268168449401855
    8. 'ength' → logprob: -7.0268168449401855
    9. '(seq' → logprob: -7.5268168449401855
    10. 'L' → logprob: -7.9018168449401855

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.56233171664644e-05
    2. ')
' → logprob: -10.875055313110352
    3. ')#' → logprob: -11.125055313110352
    4. '[' → logprob: -11.750055313110352
    5. '[len' → logprob: -12.750055313110352
    6. '))' → logprob: -13.125055313110352
    7. '[i' → logprob: -13.125055313110352
    8. '#' → logprob: -13.625055313110352
    9. ' )' → logprob: -14.000055313110352
    10. ')i' → logprob: -14.125055313110352

Token 111: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009814819786697626
    2. ')' → logprob: -7.125981330871582
    3. 'len' → logprob: -9.500981330871582
    4. '#' → logprob: -10.250981330871582
    5. '#print' → logprob: -10.875981330871582
    6. ' ' → logprob: -11.125981330871582
    7. ' print' → logprob: -11.625981330871582
    8. 'for' → logprob: -12.500981330871582
    9. '  
' → logprob: -12.875981330871582
    10. 'pr' → logprob: -13.000981330871582

Token 112: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.16026271879673004
    2. '(' → logprob: -1.9102627038955688
    3. '("("' → logprob: -11.535263061523438
    4. '(max' → logprob: -11.910263061523438
    5. '()' → logprob: -11.910263061523438
    6. '('' → logprob: -12.035263061523438
    7. '("' → logprob: -12.660263061523438
    8. '((' → logprob: -13.785263061523438
    9. 'len' → logprob: -14.035263061523438
    10. '(length' → logprob: -14.160263061523438

Token 113: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.005234713666141033
    2. '(' → logprob: -5.255234718322754
    3. ' (' → logprob: -15.130234718322754
    4. ')' → logprob: -15.755234718322754
    5. '(
' → logprob: -15.880234718322754
    6. '(`' → logprob: -16.505233764648438
    7. '(

' → logprob: -16.505233764648438
    8. '(I' → logprob: -16.630233764648438
    9. '(l' → logprob: -17.130233764648438
    10. '()' → logprob: -17.630233764648438

Token 114: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.5235058665275574
    2. 'S' → logprob: -0.8985058665275574
    3. ')' → logprob: -8.773506164550781
    4. 'L' → logprob: -9.273506164550781
    5. 'I' → logprob: -9.773506164550781
    6. '(' → logprob: -11.773506164550781
    7. 'SI' → logprob: -11.898506164550781
    8. 'is' → logprob: -12.273506164550781
    9. ' )' → logprob: -12.398506164550781
    10. '(S' → logprob: -12.523506164550781

Token 115: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007104054093360901
    2. '))' → logprob: -7.250710487365723
    3. ' )' → logprob: -15.875710487365723
    4. ')))' → logprob: -16.375709533691406
    5. ')`' → logprob: -16.375709533691406
    6. '())' → logprob: -16.500709533691406
    7. '）' → logprob: -16.625709533691406
    8. ')}' → logprob: -17.250709533691406
    9. '])' → logprob: -17.375709533691406
    10. ')
' → logprob: -17.875709533691406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 113
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 45.13%
Précision adaptée (1ère position): 46.02%
Précision (top 10): 83.19%
================================================================================
