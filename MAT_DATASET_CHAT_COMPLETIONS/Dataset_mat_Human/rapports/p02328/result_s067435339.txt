================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque
readline = sys.stdin.readline
n = int(readline())
li = list(map(int, readline().split()))
def square(P):
    G = []
    L = deque()
    for i, v in enumerate(P):
        if not L:
            L.append((i, v))
            continue
        if v > L[-1][1]:
            L.append((i, v))
        elif v < L[-1][1]:
            k = i - 1
            while L and v < L[-1][1]:
                a = L.pop()
                G.append((k - a[0] + 1) * a[1])
            L.append((a[0], v))
    while L:
        a = L.pop()
        G.append((n - a[0]) * a[1])
    return max(G)
print(square(li))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.006869417615234852
    2. 'os' → logprob: -5.756869316101074
    3. ' math' → logprob: -6.881869316101074
    4. ' collections' → logprob: -7.256869316101074
    5. ' pathlib' → logprob: -7.756869316101074
    6. ' typing' → logprob: -8.131869316101074
    7. ' ' → logprob: -8.256869316101074
    8. ' datetime' → logprob: -9.006869316101074
    9. 'collections' → logprob: -9.131869316101074
    10. ' Py' → logprob: -9.256869316101074

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.3329688310623169
    2. 'import' → logprob: -1.332968831062317
    3. '.' → logprob: -3.9579687118530273
    4. ' ' → logprob: -9.207968711853027
    5. '```' → logprob: -9.207968711853027
    6. '.import' → logprob: -9.957968711853027
    7. '<|end|>' → logprob: -9.957968711853027
    8. '	import' → logprob: -10.707968711853027
    9. '_' → logprob: -10.832968711853027
    10. ' ```' → logprob: -11.707968711853027

Token 6: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6092831492424011
    2. ' defaultdict' → logprob: -0.8592831492424011
    3. 'deque' → logprob: -3.484283208847046
    4. ' abc' → logprob: -6.734282970428467
    5. ' named' → logprob: -7.484282970428467
    6. ' Counter' → logprob: -9.109283447265625
    7. 'abc' → logprob: -9.109283447265625
    8. 'named' → logprob: -9.609283447265625
    9. 'default' → logprob: -9.859283447265625
    10. ' Ordered' → logprob: -11.984283447265625

Token 7: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8029761910438538
    2. '

' → logprob: -1.052976131439209
    3. '
' → logprob: -2.302976131439209
    4. '```' → logprob: -3.427976131439209
    5. 'import' → logprob: -3.552976131439209
    6. '\' → logprob: -3.677976131439209
    7. '<|end|>' → logprob: -4.802976131439209
    8. '<|end|>' → logprob: -6.177976131439209
    9. 'newline' → logprob: -6.427976131439209
    10. '' → logprob: -7.052976131439209

Token 8: 'read' (ID: 1293)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -1.0054776668548584
    2. '
' → logprob: -1.8804776668548584
    3. '\n' → logprob: -2.0054776668548584
    4. '```' → logprob: -2.2554776668548584
    5. 'import' → logprob: -2.3804776668548584
    6. '\' → logprob: -2.6304776668548584
    7. ',' → logprob: -3.2554776668548584
    8. '.' → logprob: -5.1304779052734375
    9. '`' → logprob: -5.2554779052734375
    10. '' → logprob: -5.2554779052734375

Token 9: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15774953365325928
    2. 'line' → logprob: -2.157749652862549
    3. '_line' → logprob: -3.907749652862549
    4. '()' → logprob: -5.782749652862549
    5. 'ing' → logprob: -5.907749652862549
    6. 'er' → logprob: -6.407749652862549
    7. '_' → logprob: -6.532749652862549
    8. '(
' → logprob: -8.90774917602539
    9. '_input' → logprob: -8.90774917602539
    10. ' (' → logprob: -9.15774917602539

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006497674621641636
    2. '('' → logprob: -8.750649452209473
    3. '(
' → logprob: -9.000649452209473
    4. '()' → logprob: -9.125649452209473
    5. ' (' → logprob: -9.125649452209473
    6. '=' → logprob: -10.500649452209473
    7. ''' → logprob: -10.625649452209473
    8. '.' → logprob: -11.000649452209473
    9. '(

' → logprob: -11.250649452209473
    10. '```' → logprob: -11.250649452209473

Token 11: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10021453350782394
    2. ' sys' → logprob: -2.3502144813537598
    3. 'input' → logprob: -12.350214958190918
    4. '=sys' → logprob: -13.225214958190918
    5. '	sys' → logprob: -14.225214958190918
    6. 'lambda' → logprob: -14.975214958190918
    7. '(sys' → logprob: -15.100214958190918
    8. 'stdin' → logprob: -15.475214958190918
    9. ' input' → logprob: -15.600214958190918
    10. '```' → logprob: -16.4752140045166

Token 12: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3363485038280487
    2. '.stdin' → logprob: -1.336348533630371
    3. '.readline' → logprob: -4.336348533630371
    4. '.stdout' → logprob: -4.836348533630371
    5. '.argv' → logprob: -7.211348533630371
    6. ' .' → logprob: -7.461348533630371
    7. '.next' → logprob: -9.586348533630371
    8. '.import' → logprob: -9.586348533630371
    9. '.version' → logprob: -9.586348533630371
    10. '.std' → logprob: -10.086348533630371

Token 13: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0004083891399204731
    2. '.read' → logprob: -8.375408172607422
    3. '.' → logprob: -8.750408172607422
    4. '.readlines' → logprob: -11.750408172607422
    5. 'read' → logprob: -12.125408172607422
    6. '.buffer' → logprob: -12.625408172607422
    7. '```' → logprob: -13.250408172607422
    8. '.Read' → logprob: -15.250408172607422
    9. '<|end|>' → logprob: -15.625408172607422
    10. ' .' → logprob: -16.000408172607422

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41907745599746704
    2. '()' → logprob: -1.4190773963928223
    3. '(
' → logprob: -3.6690773963928223
    4. '
' → logprob: -4.419077396392822
    5. '\n' → logprob: -4.419077396392822
    6. '\' → logprob: -4.419077396392822
    7. 'def' → logprob: -4.919077396392822
    8. 'for' → logprob: -5.294077396392822
    9. '

' → logprob: -5.669077396392822
    10. '()

' → logprob: -5.669077396392822

Token 15: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.875832736492157
    2. 'queue' → logprob: -1.6258327960968018
    3. 'deque' → logprob: -2.1258327960968018
    4. 'n' → logprob: -2.6258327960968018
    5. 'q' → logprob: -3.1258327960968018
    6. 'd' → logprob: -3.3758327960968018
    7. 'for' → logprob: -3.7508327960968018
    8. '\n' → logprob: -3.8758327960968018
    9. '\' → logprob: -4.000832557678223
    10. 'data' → logprob: -5.000832557678223

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07454374432563782
    2. '=' → logprob: -2.8245437145233154
    3. ' ' → logprob: -4.4495439529418945
    4. ',' → logprob: -7.5745439529418945
    5. ' ,' → logprob: -8.949543952941895
    6. '.' → logprob: -10.324543952941895
    7. '  ' → logprob: -10.574543952941895
    8. ')' → logprob: -10.574543952941895
    9. '=int' → logprob: -10.699543952941895
    10. ' =
' → logprob: -10.824543952941895

Token 17: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.022202517837285995
    2. ' ' → logprob: -4.397202491760254
    3. 'int' → logprob: -4.647202491760254
    4. '0' → logprob: -10.522202491760254
    5. '=int' → logprob: -11.397202491760254
    6. '10' → logprob: -12.022202491760254
    7. ' input' → logprob: -12.897202491760254
    8. ' deque' → logprob: -13.647202491760254
    9. '[int' → logprob: -13.897202491760254
    10. ' readline' → logprob: -13.897202491760254

Token 18: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007585270795971155
    2. '('' → logprob: -7.625758647918701
    3. '(read' → logprob: -8.375758171081543
    4. '(
' → logprob: -11.125758171081543
    5. ' (' → logprob: -12.250758171081543
    6. ''' → logprob: -12.250758171081543
    7. '()' → logprob: -12.875758171081543
    8. '(n' → logprob: -13.125758171081543
    9. '("("' → logprob: -13.375758171081543
    10. '(open' → logprob: -13.625758171081543

Token 19: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.000116655595775228
    2. '()' → logprob: -9.250116348266602
    3. '())' → logprob: -11.125116348266602
    4. '(' → logprob: -13.375116348266602
    5. '(line' → logprob: -13.375116348266602
    6. '_line' → logprob: -14.125116348266602
    7. 'lin' → logprob: -14.250116348266602
    8. ')' → logprob: -14.375116348266602
    9. 'ln' → logprob: -15.875116348266602
    10. 'Line' → logprob: -16.0001163482666

Token 20: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6583356261253357
    2. ')' → logprob: -1.1583356857299805
    3. '()' → logprob: -1.7833356857299805
    4. '(' → logprob: -8.90833568572998
    5. ' ())' → logprob: -10.65833568572998
    6. '))' → logprob: -11.03333568572998
    7. '())
' → logprob: -12.15833568572998
    8. ' )' → logprob: -12.28333568572998
    9. '()))' → logprob: -12.78333568572998
    10. '().' → logprob: -13.03333568572998

Token 21: 'li' (ID: 1307)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9697920083999634
    2. 'queue' → logprob: -1.7197920083999634
    3. 'deque' → logprob: -1.8447920083999634
    4. 'd' → logprob: -1.9697920083999634
    5. 'q' → logprob: -3.969791889190674
    6. 'a' → logprob: -4.219791889190674
    7. 'stack' → logprob: -4.219791889190674
    8. 's' → logprob: -4.344791889190674
    9. 'lst' → logprob: -4.344791889190674
    10. 'arr' → logprob: -4.469791889190674

Token 22: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.012003417126834393
    2. 's' → logprob: -4.512003421783447
    3. ' =' → logprob: -7.262003421783447
    4. 'sts' → logprob: -9.012002944946289
    5. '=' → logprob: -9.262002944946289
    6. 'n' → logprob: -11.012002944946289
    7. 'ne' → logprob: -13.262002944946289
    8. 'stv' → logprob: -13.262002944946289
    9. '```' → logprob: -13.512002944946289
    10. 'ст' → logprob: -13.512002944946289

Token 23: ' list' (ID: 1562)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.34876441955566406
    2. ' deque' → logprob: -1.348764419555664
    3. ' []' → logprob: -3.973764419555664
    4. '[]' → logprob: -5.223764419555664
    5. ' list' → logprob: -5.598764419555664
    6. ' [' → logprob: -5.598764419555664
    7. 'list' → logprob: -6.348764419555664
    8. '[' → logprob: -6.973764419555664
    9. ' ' → logprob: -8.348764419555664
    10. 'de' → logprob: -8.848764419555664

Token 24: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027311159297823906
    2. '(range' → logprob: -4.152311325073242
    3. '(map' → logprob: -4.652311325073242
    4. '()' → logprob: -6.902311325073242
    5. '(int' → logprob: -8.152311325073242
    6. '(input' → logprob: -8.652311325073242
    7. '(read' → logprob: -9.652311325073242
    8. '(data' → logprob: -10.402311325073242
    9. '(li' → logprob: -11.027311325073242
    10. '(

' → logprob: -11.402311325073242

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008128701709210873
    2. '(' → logprob: -4.883128643035889
    3. '(lambda' → logprob: -8.133129119873047
    4. '(str' → logprob: -8.758129119873047
    5. 'int' → logprob: -10.633129119873047
    6. '<int' → logprob: -11.133129119873047
    7. '[int' → logprob: -11.133129119873047
    8. '=int' → logprob: -12.633129119873047
    9. '(input' → logprob: -12.633129119873047
    10. '(eval' → logprob: -13.133129119873047

Token 26: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.002275031292811036
    2. '(' → logprob: -6.877274990081787
    3. ',' → logprob: -7.127274990081787
    4. 'read' → logprob: -9.127275466918945
    5. '(input' → logprob: -9.377275466918945
    6. '(sys' → logprob: -9.502275466918945
    7. ' readline' → logprob: -9.877275466918945
    8. '.readline' → logprob: -10.502275466918945
    9. ')' → logprob: -10.627275466918945
    10. '(line' → logprob: -11.252275466918945

Token 27: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.048764266073703766
    2. ' readline' → logprob: -3.048764228820801
    3. '(read' → logprob: -9.1737642288208
    4. '.readline' → logprob: -10.2987642288208
    5. ' read' → logprob: -10.5487642288208
    6. 'input' → logprob: -12.1737642288208
    7. 'range' → logprob: -12.7987642288208
    8. 'sys' → logprob: -13.2987642288208
    9. 'list' → logprob: -14.0487642288208
    10. 'readonly' → logprob: -14.2987642288208

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004058928694576025
    2. '()))' → logprob: -5.629058837890625
    3. '()' → logprob: -8.129058837890625
    4. '())' → logprob: -8.879058837890625
    5. '())))' → logprob: -11.254058837890625
    6. '()));' → logprob: -11.879058837890625
    7. '))' → logprob: -13.629058837890625
    8. '());' → logprob: -14.379058837890625
    9. ')' → logprob: -14.504058837890625
    10. '()-' → logprob: -15.004058837890625

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16083389520645142
    2. 'strip' → logprob: -1.9108338356018066
    3. 'rstrip' → logprob: -7.410833835601807
    4. ')' → logprob: -13.535834312438965
    5. ' split' → logprob: -13.535834312438965
    6. 's' → logprob: -13.785834312438965
    7. '(split' → logprob: -14.410834312438965
    8. ' strip' → logprob: -14.660834312438965
    9. '().' → logprob: -16.28583335876465
    10. '.strip' → logprob: -16.78583335876465

Token 30: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0487092100083828
    2. ')' → logprob: -3.0487091541290283
    3. ')))' → logprob: -9.67370891571045
    4. '()))' → logprob: -10.42370891571045
    5. '(' → logprob: -10.67370891571045
    6. '()' → logprob: -12.79870891571045
    7. ' ))' → logprob: -13.67370891571045
    8. '())' → logprob: -14.04870891571045
    9. '),' → logprob: -14.67370891571045
    10. ''))' → logprob: -15.67370891571045

Token 31: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2512480616569519
    2. '\' → logprob: -3.2512481212615967
    3. '
' → logprob: -3.2512481212615967
    4. 'q' → logprob: -3.8762481212615967
    5. '\n' → logprob: -3.8762481212615967
    6. '' → logprob: -4.376247882843018
    7. 'dp' → logprob: -4.626247882843018
    8. 'a' → logprob: -4.626247882843018
    9. 's' → logprob: -4.751247882843018
    10. 'b' → logprob: -5.001247882843018

Token 32: ' square' (ID: 13749)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006048843264579773
    2. ' max' → logprob: -6.381048679351807
    3. ' bfs' → logprob: -7.006048679351807
    4. '_' → logprob: -7.256048679351807
    5. ' space' → logprob: -7.881048679351807
    6. ' `' → logprob: -8.256049156188965
    7. ' a' → logprob: -8.506049156188965
    8. ' p' → logprob: -8.631049156188965
    9. ' ' → logprob: -8.756049156188965
    10. ' d' → logprob: -8.756049156188965

Token 33: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015228700824081898
    2. '_' → logprob: -4.515228748321533
    3. 's' → logprob: -5.640228748321533
    4. '_s' → logprob: -8.265228271484375
    5. '(x' → logprob: -9.515228271484375
    6. '(s' → logprob: -9.765228271484375
    7. '(a' → logprob: -9.765228271484375
    8. 'd' → logprob: -10.890228271484375
    9. '_(' → logprob: -10.890228271484375
    10. '(n' → logprob: -11.390228271484375

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013916545547544956
    2. '[' → logprob: -4.888916492462158
    3. ')' → logprob: -5.263916492462158
    4. ',' → logprob: -7.638916492462158
    5. ' ):' → logprob: -8.513916969299316
    6. '[]):' → logprob: -9.263916969299316
    7. '(' → logprob: -9.763916969299316
    8. '[i' → logprob: -10.013916969299316
    9. ':' → logprob: -10.388916969299316
    10. 's' → logprob: -10.638916969299316

Token 35: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04432724043726921
    2. '(P' → logprob: -4.044327259063721
    3. '[' → logprob: -4.169327259063721
    4. ':' → logprob: -5.544327259063721
    5. '   ' → logprob: -5.544327259063721
    6. ')' → logprob: -6.794327259063721
    7. 'P' → logprob: -7.169327259063721
    8. '.' → logprob: -8.544326782226562
    9. ' ' → logprob: -9.419326782226562
    10. '[P' → logprob: -9.544326782226562

Token 36: ' G' (ID: 499)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.754798412322998
    2. ' ' → logprob: -0.879798412322998
    3. '[' → logprob: -3.379798412322998
    4. ' (' → logprob: -3.629798412322998
    5. '   ' → logprob: -3.754798412322998
    6. ' return' → logprob: -4.629798412322998
    7. 's' → logprob: -5.129798412322998
    8. 'r' → logprob: -5.879798412322998
    9. 'd' → logprob: -6.254798412322998
    10. 'return' → logprob: -6.254798412322998

Token 37: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8207667469978333
    2. '=' → logprob: -1.3207666873931885
    3. ' =' → logprob: -2.0707666873931885
    4. 'u' → logprob: -2.6957666873931885
    5. 'et' → logprob: -3.5707666873931885
    6. '*' → logprob: -3.9457666873931885
    7. 'e' → logprob: -4.070766925811768
    8. '**' → logprob: -4.945766925811768
    9. '[P' → logprob: -5.820766925811768
    10. ',' → logprob: -5.945766925811768

Token 38: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1069363355636597
    2. ' P' → logprob: -1.7319363355636597
    3. 'deque' → logprob: -1.7319363355636597
    4. 'P' → logprob: -1.9819363355636597
    5. ' []' → logprob: -2.606936454772949
    6. ' deque' → logprob: -3.106936454772949
    7. '[' → logprob: -3.606936454772949
    8. ' [' → logprob: -4.481936454772949
    9. '[P' → logprob: -4.981936454772949
    10. ' ' → logprob: -5.481936454772949

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4318409264087677
    2. '   ' → logprob: -1.3068408966064453
    3. '[' → logprob: -3.4318408966064453
    4. '    ' → logprob: -4.681840896606445
    5. ' for' → logprob: -4.806840896606445
    6. '(' → logprob: -4.806840896606445
    7. 'for' → logprob: -5.181840896606445
    8. ' (' → logprob: -5.431840896606445
    9. '  ' → logprob: -5.556840896606445
    10. '    
' → logprob: -6.431840896606445

Token 40: ' L' (ID: 451)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5168778300285339
    2. '   ' → logprob: -1.5168778896331787
    3. ' for' → logprob: -2.2668778896331787
    4. 'for' → logprob: -3.3918778896331787
    5. '[' → logprob: -3.6418778896331787
    6. '    ' → logprob: -5.1418776512146
    7. '(' → logprob: -5.2668776512146
    8. ' [' → logprob: -6.0168776512146
    9. ' (' → logprob: -6.2668776512146
    10. '  ' → logprob: -6.8918776512146

Token 41: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8895442485809326
    2. ' =' → logprob: -1.2645442485809326
    3. '=[]' → logprob: -1.2645442485809326
    4. '   ' → logprob: -4.889544486999512
    5. '.append' → logprob: -5.889544486999512
    6. '[' → logprob: -5.889544486999512
    7. 'en' → logprob: -6.139544486999512
    8. '=[]
' → logprob: -6.264544486999512
    9. 'i' → logprob: -6.639544486999512
    10. '(P' → logprob: -7.389544486999512

Token 42: ' deque' (ID: 90347)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25249990820884705
    2. ' []' → logprob: -2.50249981880188
    3. '[' → logprob: -2.62749981880188
    4. '[P' → logprob: -3.50249981880188
    5. 'deque' → logprob: -3.75249981880188
    6. ' [' → logprob: -6.002500057220459
    7. ' P' → logprob: -6.252500057220459
    8. '0' → logprob: -6.252500057220459
    9. 'len' → logprob: -6.252500057220459
    10. '[len' → logprob: -6.377500057220459

Token 43: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4700806140899658
    2. '([]' → logprob: -1.5950806140899658
    3. '(P' → logprob: -2.845080614089966
    4. '(' → logprob: -2.970080614089966
    5. '([' → logprob: -2.970080614089966
    6. '([(' → logprob: -5.095080375671387
    7. '((' → logprob: -5.845080375671387
    8. '[]' → logprob: -7.970080375671387
    9. '(G' → logprob: -7.970080375671387
    10. '()
' → logprob: -8.220080375671387

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08887457102537155
    2. ' ' → logprob: -3.338874578475952
    3. ' for' → logprob: -4.713874340057373
    4. '[' → logprob: -4.713874340057373
    5. '(' → logprob: -4.838874340057373
    6. 'for' → logprob: -5.088874340057373
    7. ' (' → logprob: -5.463874340057373
    8. '(P' → logprob: -5.588874340057373
    9. '    ' → logprob: -5.838874340057373
    10. '  ' → logprob: -6.463874340057373

Token 45: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5361965298652649
    2. ' for' → logprob: -1.2861964702606201
    3. '   ' → logprob: -2.28619647026062
    4. ' ' → logprob: -4.536196708679199
    5. '(' → logprob: -4.661196708679199
    6. ')' → logprob: -5.411196708679199
    7. '[' → logprob: -5.661196708679199
    8. ' (' → logprob: -6.161196708679199
    9. '    ' → logprob: -6.161196708679199
    10. 'P' → logprob: -7.286196708679199

Token 46: ' i' (ID: 575)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.23427999019622803
    2. ' i' → logprob: -2.7342801094055176
    3. ' x' → logprob: -2.8592801094055176
    4. 'p' → logprob: -2.9842801094055176
    5. 'x' → logprob: -4.234280109405518
    6. ' ' → logprob: -4.609280109405518
    7. 'i' → logprob: -5.734280109405518
    8. 'P' → logprob: -6.359280109405518
    9. ' _' → logprob: -6.609280109405518
    10. ' v' → logprob: -6.609280109405518

Token 47: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021768683567643166
    2. 'in' → logprob: -3.896768569946289
    3. ' ' → logprob: -7.146768569946289
    4. '(' → logprob: -9.021768569946289
    5. ',' → logprob: -9.271768569946289
    6. '  ' → logprob: -9.646768569946289
    7. 'n' → logprob: -10.146768569946289
    8. '   ' → logprob: -10.771768569946289
    9. ')' → logprob: -11.271768569946289
    10. '	in' → logprob: -11.271768569946289

Token 48: ' v' (ID: 323)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5737513303756714
    2. 'p' → logprob: -1.3237513303756714
    3. 'x' → logprob: -2.448751449584961
    4. ' x' → logprob: -3.073751449584961
    5. 'v' → logprob: -4.323751449584961
    6. ' v' → logprob: -4.698751449584961
    7. ' val' → logprob: -5.948751449584961
    8. 'a' → logprob: -6.198751449584961
    9. 'P' → logprob: -6.448751449584961
    10. ' P' → logprob: -6.823751449584961

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03324219584465027
    2. 'in' → logprob: -4.033242225646973
    3. 'n' → logprob: -4.408242225646973
    4. ' ' → logprob: -6.408242225646973
    5. ',' → logprob: -7.033242225646973
    6. ' n' → logprob: -9.033242225646973
    7. ')' → logprob: -9.783242225646973
    8. ' ,' → logprob: -11.033242225646973
    9. 's' → logprob: -11.408242225646973
    10. '	in' → logprob: -11.408242225646973

Token 50: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.06211467832326889
    2. 'enumer' → logprob: -2.812114715576172
    3. ' li' → logprob: -9.312114715576172
    4. 'P' → logprob: -11.187114715576172
    5. ' P' → logprob: -11.187114715576172
    6. '(en' → logprob: -11.937114715576172
    7. ' en' → logprob: -12.187114715576172
    8. ' enumer' → logprob: -12.687114715576172
    9. 'v' → logprob: -12.687114715576172
    10. 'li' → logprob: -12.812114715576172

Token 51: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.32415732741355896
    2. '(li' → logprob: -1.4491573572158813
    3. '(' → logprob: -3.199157238006592
    4. '(L' → logprob: -7.699157238006592
    5. '(s' → logprob: -7.949157238006592
    6. '(l' → logprob: -8.94915771484375
    7. ' (' → logprob: -9.82415771484375
    8. '(range' → logprob: -9.94915771484375
    9. '(p' → logprob: -10.07415771484375
    10. 'li' → logprob: -10.19915771484375

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010680586565285921
    2. ' ):' → logprob: -7.376068115234375
    3. ':' → logprob: -8.376068115234375
    4. '):
' → logprob: -9.126068115234375
    5. ')' → logprob: -9.751068115234375
    6. '():' → logprob: -11.126068115234375
    7. '   ' → logprob: -11.501068115234375
    8. '[' → logprob: -12.501068115234375
    9. '[]):' → logprob: -13.001068115234375
    10. ' ' → logprob: -13.001068115234375

Token 53: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24932563304901123
    2. '    ' → logprob: -2.249325752258301
    3. '       ' → logprob: -2.874325752258301
    4. '   ' → logprob: -4.124325752258301
    5. '        ' → logprob: -4.374325752258301
    6. ' 
' → logprob: -4.999325752258301
    7. ' L' → logprob: -5.124325752258301
    8. ':' → logprob: -5.499325752258301
    9. '        
' → logprob: -6.249325752258301
    10. '  ' → logprob: -6.374325752258301

Token 54: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23295705020427704
    2. ' if' → logprob: -2.357957124710083
    3. ' while' → logprob: -3.357957124710083
    4. ' L' → logprob: -3.732957124710083
    5. 'if' (adapté à ' if') → logprob: -4.107956886291504
    6. '    ' → logprob: -4.107956886291504
    7. '        ' → logprob: -5.232956886291504
    8. ' G' → logprob: -5.732956886291504
    9. ' 
' → logprob: -5.732956886291504
    10. 'while' → logprob: -6.482956886291504

Token 55: ' not' (ID: 625)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.309963583946228
    2. 'v' → logprob: -1.809963583946228
    3. ' not' → logprob: -3.4349637031555176
    4. ' L' → logprob: -3.4349637031555176
    5. ' i' → logprob: -3.6849637031555176
    6. 'L' → logprob: -5.434963703155518
    7. ' ' → logprob: -5.809963703155518
    8. 'i' → logprob: -5.809963703155518
    9. ' len' → logprob: -6.934963703155518
    10. ' G' → logprob: -7.184963703155518

Token 56: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.16700273752212524
    2. 'L' → logprob: -1.9170026779174805
    3. ' v' → logprob: -5.7920026779174805
    4. 'v' → logprob: -6.4170026779174805
    5. ' G' → logprob: -6.5420026779174805
    6. 'G' → logprob: -8.04200267791748
    7. ' i' → logprob: -9.29200267791748
    8. ' ' → logprob: -9.91700267791748
    9. 'i' → logprob: -10.04200267791748
    10. ' (' → logprob: -10.29200267791748

Token 57: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.020575053989887238
    2. 'or' → logprob: -3.8955750465393066
    3. '	or' → logprob: -11.270575523376465
    4. ':' → logprob: -11.395575523376465
    5. ')' → logprob: -13.145575523376465
    6. '.' → logprob: -13.145575523376465
    7. ' ' → logprob: -13.270575523376465
    8. ' and' → logprob: -14.020575523376465
    9. '   ' → logprob: -14.770575523376465
    10. 'and' → logprob: -15.020575523376465

Token 58: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005561012774705887
    2. ':' → logprob: -5.630560874938965
    3. ' and' → logprob: -7.005560874938965
    4. ' ' → logprob: -7.755560874938965
    5. 'or' → logprob: -8.630560874938965
    6. '   ' → logprob: -9.380560874938965
    7. ' :' → logprob: -9.630560874938965
    8. '       ' → logprob: -9.755560874938965
    9. '    ' → logprob: -10.255560874938965
    10. '           ' → logprob: -10.380560874938965

Token 59: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.018129346892237663
    2. 'L' (adapté à ' L') → logprob: -4.143129348754883
    3. '    ' → logprob: -7.393129348754883
    4. ' ' → logprob: -7.768129348754883
    5. '       ' → logprob: -8.393129348754883
    6. ' 
' → logprob: -8.893129348754883
    7. ' ' → logprob: -8.893129348754883
    8. '           ' → logprob: -9.143129348754883
    9. '   ' → logprob: -9.393129348754883
    10. '[' → logprob: -9.518129348754883

Token 60: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00862414762377739
    2. '.' → logprob: -4.758624076843262
    3. '.extend' → logprob: -11.883624076843262
    4. 'append' → logprob: -14.383624076843262
    5. '.app' → logprob: -14.508624076843262
    6. ' .' → logprob: -14.508624076843262
    7. '.add' → logprob: -14.758624076843262
    8. '.push' → logprob: -15.258624076843262
    9. '.ap' → logprob: -15.758624076843262
    10. '.Append' → logprob: -16.008625030517578

Token 61: '((' (ID: 2054)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.45042696595191956
    2. '((' → logprob: -1.4504269361495972
    3. '(i' → logprob: -2.2004270553588867
    4. '(' → logprob: -4.075427055358887
    5. '([' → logprob: -8.075427055358887
    6. 'v' → logprob: -9.825427055358887
    7. 'i' → logprob: -11.075427055358887
    8. '(P' → logprob: -11.825427055358887
    9. '(((' → logprob: -11.950427055358887
    10. '(('' → logprob: -12.325427055358887

Token 62: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.694879949092865
    2. 'v' → logprob: -0.694879949092865
    3. ' i' → logprob: -7.19488000869751
    4. ' v' → logprob: -7.81988000869751
    5. '0' → logprob: -8.194879531860352
    6. '(i' → logprob: -9.444879531860352
    7. '   ' → logprob: -9.694879531860352
    8. 'P' → logprob: -10.194879531860352
    9. ' ' → logprob: -10.694879531860352
    10. '(v' → logprob: -11.069879531860352

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004183941055089235
    2. ',v' → logprob: -5.629183769226074
    3. ' ,' → logprob: -7.504183769226074
    4. '+' → logprob: -11.379183769226074
    5. ',
' → logprob: -11.879183769226074
    6. ')' → logprob: -12.879183769226074
    7. ' ' → logprob: -12.879183769226074
    8. 'v' → logprob: -13.129183769226074
    9. ' +' → logprob: -13.879183769226074
    10. ',value' → logprob: -14.441683769226074

Token 64: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1438128799200058
    2. ' v' → logprob: -2.018812894821167
    3. '0' → logprob: -7.893812656402588
    4. '1' → logprob: -8.268813133239746
    5. ' ' → logprob: -8.768813133239746
    6. 'i' → logprob: -9.268813133239746
    7. ' i' → logprob: -9.893813133239746
    8. ' (' → logprob: -10.456313133239746
    9. '(v' → logprob: -10.893813133239746
    10. '(' → logprob: -10.956313133239746

Token 65: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.017237016931176186
    2. '))
' → logprob: -4.142237186431885
    3. ')' → logprob: -7.392237186431885
    4. ' ))' → logprob: -8.267236709594727
    5. '))
' → logprob: -8.642236709594727
    6. ',' → logprob: -10.392236709594727
    7. ')))' → logprob: -10.517236709594727
    8. '   ' → logprob: -10.892236709594727
    9. ' ))
' → logprob: -10.892236709594727
    10. ' ' → logprob: -11.142236709594727

Token 66: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0401800870895386
    2. '\n' → logprob: -2.165180206298828
    3. ' elif' → logprob: -2.290180206298828
    4. ' 
' → logprob: -2.415180206298828
    5. 'elif' → logprob: -2.540180206298828
    6. '
' → logprob: -2.665180206298828
    7. ' else' → logprob: -2.790180206298828
    8. '    
' → logprob: -3.290180206298828
    9. ')' → logprob: -3.790180206298828
    10. '        
' → logprob: -4.415180206298828

Token 67: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6401861310005188
    2. '       ' → logprob: -1.390186071395874
    3. 'continue' (adapté à ' continue') → logprob: -1.765186071395874
    4. ' ' → logprob: -4.265186309814453
    5. '           ' → logprob: -4.390186309814453
    6. ' else' → logprob: -5.015186309814453
    7. '   ' → logprob: -5.390186309814453
    8. ')' → logprob: -5.640186309814453
    9. ' )' → logprob: -6.015186309814453
    10. ' 
' → logprob: -6.265186309814453

Token 68: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.1679935455322266
    2. '       ' → logprob: -1.7929935455322266
    3. '\n' → logprob: -2.0429935455322266
    4. '    
' → logprob: -2.1679935455322266
    5. ' elif' → logprob: -2.9179935455322266
    6. '   ' → logprob: -3.2929935455322266
    7. '        
' → logprob: -3.4179935455322266
    8. '
' → logprob: -3.5429935455322266
    9. '  
' → logprob: -3.5429935455322266
    10. '   
' → logprob: -3.7929935455322266

Token 69: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7057827115058899
    2. ' 
' → logprob: -1.5807826519012451
    3. '    
' → logprob: -2.455782651901245
    4. '   ' → logprob: -2.705782651901245
    5. '\n' → logprob: -3.330782651901245
    6. '        
' → logprob: -3.580782651901245
    7. '
' → logprob: -3.955782651901245
    8. '  
' → logprob: -4.455782890319824
    9. ' elif' → logprob: -4.705782890319824
    10. '   
' → logprob: -5.080782890319824

Token 70: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.16239483654499054
    2. ' ' → logprob: -2.5373947620391846
    3. '        
' → logprob: -4.287395000457764
    4. '  
' → logprob: -4.787395000457764
    5. ' )' → logprob: -5.162395000457764
    6. ' elif' → logprob: -5.162395000457764
    7. ' if' → logprob: -5.537395000457764
    8. '     
' → logprob: -5.537395000457764
    9. ')' → logprob: -5.787395000457764
    10. ' else' → logprob: -5.912395000457764

Token 71: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.1908780336380005
    2. ' L' → logprob: -2.190877914428711
    3. 'v' → logprob: -2.940877914428711
    4. 'L' → logprob: -5.190877914428711
    5. ' ' → logprob: -5.815877914428711
    6. ' abs' → logprob: -8.815877914428711
    7. ' not' → logprob: -9.440877914428711
    8. ' ' → logprob: -9.565877914428711
    9. '  ' → logprob: -10.253377914428711
    10. '	v' → logprob: -10.315877914428711

Token 72: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.25197094678878784
    2. '>' → logprob: -2.0019710063934326
    3. ' <' → logprob: -2.7519710063934326
    4. '<' → logprob: -4.7519707679748535
    5. ' ' → logprob: -5.3769707679748535
    6. ' >=' → logprob: -5.3769707679748535
    7. ' <=' → logprob: -6.0019707679748535
    8. ' ==' → logprob: -6.7519707679748535
    9. '>=' → logprob: -6.8769707679748535
    10. '==' → logprob: -7.7519707679748535

Token 73: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1004055067896843
    2. ' L' → logprob: -2.35040545463562
    3. '0' → logprob: -9.2254056930542
    4. 'v' → logprob: -9.7254056930542
    5. '=' → logprob: -10.9754056930542
    6. ' ' → logprob: -11.2254056930542
    7. '=L' → logprob: -13.1004056930542
    8. ' v' → logprob: -13.2254056930542
    9. '	L' → logprob: -14.1004056930542
    10. 'P' → logprob: -14.1004056930542

Token 74: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00014168102643452585
    2. '[' → logprob: -8.875142097473145
    3. '][-' → logprob: -14.875142097473145
    4. '-' → logprob: -15.375142097473145
    5. '   ' → logprob: -15.625142097473145
    6. '
' → logprob: -15.625142097473145
    7. ' ' → logprob: -15.875142097473145
    8. ' [-' → logprob: -15.875142097473145
    9. '[
' → logprob: -16.125141143798828
    10. '0' → logprob: -16.375141143798828

Token 75: '1' (ID: 16)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.9506155252456665
    2. '[' → logprob: -1.4506155252456665
    3. '][' → logprob: -1.4506155252456665
    4. '-' → logprob: -2.450615406036377
    5. '1' → logprob: -4.200615406036377
    6. ' ' → logprob: -4.450615406036377
    7. '()][' → logprob: -4.700615406036377
    8. ''][' → logprob: -5.575615406036377
    9. '   ' → logprob: -5.700615406036377
    10. '"][' → logprob: -5.825615406036377

Token 76: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5253268480300903
    2. '[' → logprob: -0.9003268480300903
    3. ')[' → logprob: -7.525326728820801
    4. ' [' → logprob: -7.650326728820801
    5. '()[' → logprob: -7.900326728820801
    6. '>[' → logprob: -8.6503267288208
    7. ' ][' → logprob: -8.9003267288208
    8. '```' → logprob: -9.2753267288208
    9. ''][' → logprob: -9.7753267288208
    10. ']' → logprob: -9.7753267288208

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -12.687512397766113
    3. '-' → logprob: -12.812512397766113
    4. '0' → logprob: -13.500012397766113
    5. '

' → logprob: -14.125012397766113
    6. '```' → logprob: -14.187512397766113
    7. '' → logprob: -14.562512397766113
    8. '[' → logprob: -15.125012397766113
    9. '
' → logprob: -15.250012397766113
    10. '   ' → logprob: -15.375012397766113

Token 78: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001024831784889102
    2. '):
' → logprob: -7.6260247230529785
    3. ':' → logprob: -8.376025199890137
    4. ' ):' → logprob: -8.626025199890137
    5. '[' → logprob: -9.876025199890137
    6. ')' → logprob: -10.626025199890137
    7. ']:' → logprob: -10.751025199890137
    8. '):
' → logprob: -11.751025199890137
    9. ',' → logprob: -12.126025199890137
    10. ' and' → logprob: -12.376025199890137

Token 79: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12280973792076111
    2. '):' → logprob: -2.372809648513794
    3. ')' → logprob: -4.747809886932373
    4. ' :' → logprob: -5.872809886932373
    5. '           ' → logprob: -6.247809886932373
    6. ' or' → logprob: -6.372809886932373
    7. ':
' → logprob: -6.622809886932373
    8. '       ' → logprob: -6.747809886932373
    9. ' and' → logprob: -6.997809886932373
    10. '        ' → logprob: -7.122809886932373

Token 80: ' L' (ID: 451)
  Prédit: ' L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4159336984157562
    2. 'L' (adapté à ' L') → logprob: -1.9159337282180786
    3. ' while' → logprob: -2.290933609008789
    4. '           ' → logprob: -2.790933609008789
    5. 'while' → logprob: -3.665933609008789
    6. ' G' → logprob: -7.040933609008789
    7. '               ' → logprob: -7.915933609008789
    8. ')' → logprob: -8.040933609008789
    9. '(' → logprob: -8.290933609008789
    10. '            
' → logprob: -8.415933609008789

Token 81: '.append' (ID: 3709)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.058287035673856735
    2. '.append' → logprob: -3.3082871437072754
    3. '.' → logprob: -4.683287143707275
    4. '.clear' → logprob: -4.933287143707275
    5. 'pop' → logprob: -6.058287143707275
    6. '.p' → logprob: -7.058287143707275
    7. '[-' → logprob: -8.558286666870117
    8. '_pop' → logprob: -8.808286666870117
    9. '=' → logprob: -11.558286666870117
    10. 'append' → logprob: -11.683286666870117

Token 82: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.1054253011243418e-05
    2. '(' → logprob: -11.125020980834961
    3. ' ((' → logprob: -12.875020980834961
    4. '(i' → logprob: -13.250020980834961
    5. ' ' → logprob: -13.500020980834961
    6. '  ' → logprob: -15.250020980834961
    7. ')((' → logprob: -16.37502098083496
    8. ' (' → logprob: -16.50002098083496
    9. '   ' → logprob: -17.37502098083496
    10. '    ' → logprob: -18.00002098083496

Token 83: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4259644558478612e-05
    2. ' i' → logprob: -11.250014305114746
    3. '(i' → logprob: -14.125014305114746
    4. ')' → logprob: -16.00001335144043
    5. '   ' → logprob: -16.00001335144043
    6. '(' → logprob: -17.25001335144043
    7. ' ' → logprob: -17.37501335144043
    8. ')i' → logprob: -17.37501335144043
    9. ' (' → logprob: -17.50001335144043
    10. ',' → logprob: -17.75001335144043

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017195509281009436
    2. ',v' → logprob: -9.250171661376953
    3. ' ,' → logprob: -9.500171661376953
    4. '),' → logprob: -15.000171661376953
    5. ')' → logprob: -15.375171661376953
    6. ',value' → logprob: -16.250171661376953
    7. 'v' → logprob: -16.250171661376953
    8. ' ' → logprob: -16.375171661376953
    9. '‌,' → logprob: -17.000171661376953
    10. ',val' → logprob: -17.250171661376953

Token 85: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.04858759790658951
    2. ' v' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.423587799072266
    4. '	v' → logprob: -16.423587799072266
    5. ')v' → logprob: -17.548587799072266
    6. '   ' → logprob: -18.298587799072266
    7. 'vi' → logprob: -18.548587799072266
    8. '(v' → logprob: -19.173587799072266
    9. ',v' → logprob: -19.173587799072266
    10. ',' → logprob: -19.423587799072266

Token 86: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38810136914253235
    2. '))
' → logprob: -1.13810133934021
    3. ')' → logprob: -7.013101577758789
    4. ')
' → logprob: -9.388101577758789
    5. '))
' → logprob: -9.513101577758789
    6. '))

' → logprob: -9.513101577758789
    7. '       ' → logprob: -10.013101577758789
    8. '           ' → logprob: -10.638101577758789
    9. ')))' → logprob: -11.638101577758789
    10. '));' → logprob: -12.513101577758789

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06364807486534119
    2. '<|end|>' → logprob: -3.188647985458374
    3. ' else' → logprob: -4.563648223876953
    4. '
' → logprob: -5.688648223876953
    5. ' elif' → logprob: -6.563648223876953
    6. 'else' → logprob: -6.688648223876953
    7. '   ' → logprob: -7.063648223876953
    8. '<|end|>' → logprob: -7.188648223876953
    9. ')' → logprob: -7.438648223876953
    10. 'elif' → logprob: -7.688648223876953

Token 88: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5061651468276978
    2. ' else' → logprob: -1.0061651468276978
    3. '       ' → logprob: -3.631165027618408
    4. 'elif' (adapté à ' elif') → logprob: -5.506165027618408
    5. ' elif' → logprob: -7.006165027618408
    6. '	else' → logprob: -9.881165504455566
    7. '   ' → logprob: -10.631165504455566
    8. ':' → logprob: -11.756165504455566
    9. '	elif' → logprob: -11.756165504455566
    10. ')' → logprob: -12.131165504455566

Token 89: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.14557696878910065
    2. ' v' → logprob: -2.0205769538879395
    3. 'L' → logprob: -6.2705769538879395
    4. ' L' → logprob: -7.1455769538879395
    5. 'len' → logprob: -9.770577430725098
    6. 'l' → logprob: -11.020577430725098
    7. ' not' → logprob: -11.145577430725098
    8. '    ' → logprob: -11.145577430725098
    9. '   ' → logprob: -11.270577430725098
    10. 'not' → logprob: -11.520577430725098

Token 90: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09782980382442474
    2. ' ==' → logprob: -3.472829818725586
    3. ' <=' → logprob: -3.472829818725586
    4. '<' → logprob: -3.722829818725586
    5. '==' → logprob: -5.597829818725586
    6. '[' → logprob: -6.597829818725586
    7. '<=' → logprob: -6.597829818725586
    8. ' ' → logprob: -7.972829818725586
    9. ')' → logprob: -9.722829818725586
    10. ' [' → logprob: -11.160329818725586

Token 91: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.31329724192619324
    2. ' L' → logprob: -1.3132972717285156
    3. ' ' → logprob: -11.438297271728516
    4. '=' → logprob: -12.313297271728516
    5. '=L' → logprob: -12.438297271728516
    6. '_' → logprob: -12.563297271728516
    7. '<|end|>' → logprob: -12.938297271728516
    8. ')' → logprob: -13.063297271728516
    9. '	L' → logprob: -13.438297271728516
    10. ')L' → logprob: -13.563297271728516

Token 92: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.710618905955926e-05
    2. '[' → logprob: -9.250097274780273
    3. '-' → logprob: -15.750097274780273
    4. '
' → logprob: -16.125097274780273
    5. '][-' → logprob: -16.250097274780273
    6. '```' → logprob: -16.250097274780273
    7. '   ' → logprob: -16.375097274780273
    8. ' ' → logprob: -16.375097274780273
    9. ' [-' → logprob: -16.875097274780273
    10. '[
' → logprob: -17.250097274780273

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. '-' → logprob: -11.125016212463379
    3. '[-' → logprob: -14.000016212463379
    4. '```' → logprob: -15.875016212463379
    5. ' ' → logprob: -16.750015258789062
    6. '   ' → logprob: -17.125015258789062
    7. '][-' → logprob: -17.250015258789062
    8. '--' → logprob: -17.625015258789062
    9. '−' → logprob: -17.625015258789062
    10. '１' → logprob: -18.125015258789062

Token 94: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.05958956480026245
    2. '[' → logprob: -3.0595896244049072
    3. ')[' → logprob: -4.559589385986328
    4. ' ][' → logprob: -8.809589385986328
    5. '>[' → logprob: -9.934589385986328
    6. ']' → logprob: -10.434589385986328
    7. ' )[' → logprob: -10.434589385986328
    8. '')[' → logprob: -10.684589385986328
    9. ''][' → logprob: -10.684589385986328
    10. ')' → logprob: -10.684589385986328

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.375006675720215
    3. ' ' → logprob: -14.000006675720215
    4. '0' → logprob: -14.375006675720215
    5. '```' → logprob: -14.500006675720215
    6. '
' → logprob: -16.50000762939453
    7. '<|end|>' → logprob: -16.81250762939453
    8. '   ' → logprob: -16.81250762939453
    9. ')' → logprob: -16.87500762939453
    10. '][' → logprob: -17.06250762939453

Token 96: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4297674000263214
    2. '):' → logprob: -1.054767370223999
    3. '[' → logprob: -7.679767608642578
    4. '):
' → logprob: -8.429767608642578
    5. ')' → logprob: -8.679767608642578
    6. ' ):
' → logprob: -9.929767608642578
    7. ':' → logprob: -10.179767608642578
    8. '       ' → logprob: -10.679767608642578
    9. '):

' → logprob: -10.804767608642578
    10. '   ' → logprob: -10.804767608642578

Token 97: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5396245718002319
    2. '           ' → logprob: -1.664624571800232
    3. '       ' → logprob: -1.914624571800232
    4. ':
' → logprob: -2.7896246910095215
    5. '):' → logprob: -4.9146246910095215
    6. '):
' → logprob: -5.0396246910095215
    7. ' while' → logprob: -6.6646246910095215
    8. ',' → logprob: -7.1646246910095215
    9. '```' → logprob: -7.1646246910095215
    10. '   ' → logprob: -7.2896246910095215

Token 98: ' k' (ID: 372)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.14297133684158325
    2. 'while' → logprob: -2.0179712772369385
    3. '           ' → logprob: -9.39297103881836
    4. 'idx' → logprob: -10.14297103881836
    5. ' idx' → logprob: -10.64297103881836
    6. ' L' → logprob: -10.64297103881836
    7. '    ' → logprob: -11.01797103881836
    8. 'L' → logprob: -11.64297103881836
    9. 'index' → logprob: -11.64297103881836
    10. '   ' → logprob: -11.76797103881836

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1130446344614029
    2. '=' → logprob: -2.2380447387695312
    3. ',' → logprob: -8.988044738769531
    4. ' ' → logprob: -9.863044738769531
    5. 'while' → logprob: -10.738044738769531
    6. ' while' → logprob: -11.988044738769531
    7. '    ' → logprob: -13.113044738769531
    8. '=len' → logprob: -13.113044738769531
    9. '=k' → logprob: -13.113044738769531
    10. '   ' → logprob: -13.238044738769531

Token 100: ' i' (ID: 575)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2169458568096161
    2. ' L' → logprob: -1.7169458866119385
    3. 'len' → logprob: -4.216945648193359
    4. ' len' → logprob: -7.341945648193359
    5. ' ' → logprob: -12.46694564819336
    6. '0' → logprob: -12.46694564819336
    7. '-' → logprob: -13.09194564819336
    8. '  ' → logprob: -13.21694564819336
    9. '   ' → logprob: -13.71694564819336
    10. '	L' → logprob: -13.71694564819336

Token 101: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1852598637342453
    2. ' -' → logprob: -1.8102598190307617
    3. ',' → logprob: -5.435259819030762
    4. '
' → logprob: -8.435259819030762
    5. ')' → logprob: -8.685259819030762
    6. 'while' → logprob: -8.810259819030762
    7. ' ' → logprob: -9.435259819030762
    8. '       ' → logprob: -9.560259819030762
    9. '           ' → logprob: -10.185259819030762
    10. ' while' → logprob: -10.185259819030762

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006925181020051241
    2. 'L' → logprob: -5.006925106048584
    3. ' ' → logprob: -9.006925582885742
    4. ' L' → logprob: -9.631925582885742
    5. '2' → logprob: -11.006925582885742
    6. '   ' → logprob: -14.381925582885742
    7. 'li' → logprob: -14.506925582885742
    8. '           ' → logprob: -14.881925582885742
    9. '  ' → logprob: -15.006925582885742
    10. '-' → logprob: -15.131925582885742

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05495167896151543
    2. 'L' → logprob: -2.9299516677856445
    3. ' L' → logprob: -9.929951667785645
    4. ' ' → logprob: -11.679951667785645
    5. '2' → logprob: -11.929951667785645
    6. '(L' → logprob: -14.179951667785645
    7. 'len' → logprob: -14.179951667785645
    8. '0' → logprob: -14.179951667785645
    9. 'deque' → logprob: -14.679951667785645
    10. 'li' → logprob: -15.054951667785645

Token 104: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13334691524505615
    2. '<|end|>' → logprob: -2.3833470344543457
    3. ' while' → logprob: -4.383347034454346
    4. '<|end|>' → logprob: -5.133347034454346
    5. '
' → logprob: -5.508347034454346
    6. 'while' → logprob: -5.883347034454346
    7. ')' → logprob: -6.258347034454346
    8. ',' → logprob: -6.383347034454346
    9. '            
' → logprob: -6.883347034454346
    10. ' ' → logprob: -7.508347034454346

Token 105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01684301160275936
    2. ' while' → logprob: -4.391842842102051
    3. '<|end|>' → logprob: -6.016842842102051
    4. 'while' → logprob: -6.891842842102051
    5. '       ' → logprob: -8.64184284210205
    6. ',' → logprob: -9.01684284210205
    7. '
' → logprob: -9.26684284210205
    8. '            
' → logprob: -9.26684284210205
    9. '<|end|>' → logprob: -9.26684284210205
    10. '	       ' → logprob: -10.01684284210205

Token 106: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7697739005088806
    2. 'while' (adapté à ' while') → logprob: -0.7697739005088806
    3. '           ' → logprob: -2.6447739601135254
    4. '<|end|>' → logprob: -6.644773960113525
    5. '       ' → logprob: -7.019773960113525
    6. '   ' → logprob: -8.894773483276367
    7. '	while' → logprob: -9.019773483276367
    8. '
' → logprob: -9.519773483276367
    9. ',' → logprob: -9.519773483276367
    10. '<|end|>' → logprob: -10.644773483276367

Token 107: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.01319282129406929
    2. ' L' → logprob: -4.388192653656006
    3. 'k' → logprob: -7.388192653656006
    4. '(L' → logprob: -10.388193130493164
    5. '   ' → logprob: -11.638193130493164
    6. 'len' → logprob: -12.013193130493164
    7. ' k' → logprob: -12.138193130493164
    8. ' ' → logprob: -13.013193130493164
    9. '	L' → logprob: -13.513193130493164
    10. '           ' → logprob: -13.513193130493164

Token 108: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6932957768440247
    2. 'and' → logprob: -0.6932957768440247
    3. ')' → logprob: -9.3182954788208
    4. '          ' → logprob: -10.6932954788208
    5. '           ' → logprob: -11.0682954788208
    6. '[-' → logprob: -11.8182954788208
    7. '         ' → logprob: -12.8182954788208
    8. '        ' → logprob: -13.1932954788208
    9. '	and' → logprob: -13.5682954788208
    10. '       ' → logprob: -14.0682954788208

Token 109: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3275275230407715
    2. ' v' → logprob: -2.0775275230407715
    3. 'L' → logprob: -2.2025275230407715
    4. ' L' → logprob: -3.2025275230407715
    5. 'V' → logprob: -6.9525275230407715
    6. 'li' → logprob: -7.2025275230407715
    7. 'P' → logprob: -7.7025275230407715
    8. ' li' → logprob: -8.07752799987793
    9. ' P' → logprob: -8.95252799987793
    10. ' V' → logprob: -9.32752799987793

Token 110: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4778604209423065
    2. ' <' → logprob: -0.9778604507446289
    3. '<=' → logprob: -6.102860450744629
    4. ' <=' → logprob: -6.602860450744629
    5. '[' → logprob: -10.102860450744629
    6. '>' → logprob: -10.227860450744629
    7. ' ' → logprob: -10.352860450744629
    8. '<L' → logprob: -10.727860450744629
    9. ' >' → logprob: -11.352860450744629
    10. '<v' → logprob: -11.602860450744629

Token 111: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.005234713666141033
    2. ' L' → logprob: -5.255234718322754
    3. '[' → logprob: -14.755234718322754
    4. '>L' → logprob: -15.880234718322754
    5. '	L' → logprob: -16.380233764648438
    6. '=L' → logprob: -16.630233764648438
    7. '[L' → logprob: -16.755233764648438
    8. '   ' → logprob: -17.255233764648438
    9. ')L' → logprob: -17.880233764648438
    10. '(L' → logprob: -18.005233764648438

Token 112: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. '[
' → logprob: -17.750001907348633
    4. '-' → logprob: -18.250001907348633
    5. '   ' → logprob: -18.250001907348633
    6. '
' → logprob: -18.375001907348633
    7. '[k' → logprob: -18.625001907348633
    8. '[len' → logprob: -18.875001907348633
    9. '][-' → logprob: -19.000001907348633
    10. '```' → logprob: -19.000001907348633

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '[-' → logprob: -14.125001907348633
    3. '[' → logprob: -15.500001907348633
    4. '-' → logprob: -16.250001907348633
    5. 'len' → logprob: -16.375001907348633
    6. 'last' → logprob: -16.625001907348633
    7. '```' → logprob: -16.625001907348633
    8. ' ' → logprob: -17.000001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '(' → logprob: -17.875001907348633

Token 114: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0026147786993533373
    2. '[' → logprob: -6.002614974975586
    3. '1' → logprob: -10.002614974975586
    4. ']' → logprob: -10.877614974975586
    5. ')[' → logprob: -10.877614974975586
    6. ' ][' → logprob: -10.877614974975586
    7. ''][' → logprob: -11.377614974975586
    8. '>[' → logprob: -12.127614974975586
    9. '"][' → logprob: -12.127614974975586
    10. '}[' → logprob: -12.752614974975586

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.250007629394531
    3. ' ' → logprob: -13.875007629394531
    4. '```' → logprob: -14.875007629394531
    5. '][' → logprob: -15.000007629394531
    6. '   ' → logprob: -15.250007629394531
    7. '-' → logprob: -15.937507629394531
    8. ']' → logprob: -16.62500762939453
    9. '`' → logprob: -17.18750762939453
    10. '
' → logprob: -17.43750762939453

Token 116: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10467424988746643
    2. '):' → logprob: -2.3546743392944336
    3. ':' → logprob: -6.729674339294434
    4. ')' → logprob: -6.854674339294434
    5. ':
' → logprob: -7.604674339294434
    6. ']:
' → logprob: -7.979674339294434
    7. ' and' → logprob: -8.104674339294434
    8. ' ):
' → logprob: -8.229674339294434
    9. '):
' → logprob: -8.854674339294434
    10. '():
' → logprob: -8.854674339294434

Token 117: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41769254207611084
    2. ' and' → logprob: -1.7926925420761108
    3. '):
' → logprob: -2.6676926612854004
    4. ':
' → logprob: -3.7926926612854004
    5. ':' → logprob: -4.0426926612854
    6. ',' → logprob: -4.0426926612854
    7. '):' → logprob: -4.6676926612854
    8. '<|end|>' → logprob: -4.6676926612854
    9. ')' → logprob: -4.7926926612854
    10. '           ' → logprob: -5.6676926612854

Token 118: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6303869485855103
    2. 'idx' → logprob: -1.3803869485855103
    3. 'x' → logprob: -3.1303868293762207
    4. 'L' → logprob: -3.5053868293762207
    5. '               ' → logprob: -3.7553868293762207
    6. 'l' → logprob: -3.8803868293762207
    7. 'j' → logprob: -4.255386829376221
    8. 'p' → logprob: -4.505386829376221
    9. ' idx' → logprob: -4.505386829376221
    10. 'pop' → logprob: -4.505386829376221

Token 119: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1345139741897583
    2. '_idx' → logprob: -1.3845139741897583
    3. '_i' → logprob: -1.8845139741897583
    4. ' =' → logprob: -2.3845138549804688
    5. 'i' → logprob: -2.6345138549804688
    6. '=' → logprob: -2.8845138549804688
    7. 'idx' → logprob: -3.6345138549804688
    8. '_index' → logprob: -4.634513854980469
    9. ',i' → logprob: -5.384513854980469
    10. ' ,' → logprob: -6.134513854980469

Token 120: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.016168560832738876
    2. ' L' → logprob: -4.391168594360352
    3. 'k' → logprob: -5.641168594360352
    4. ' k' → logprob: -10.516168594360352
    5. 'i' → logprob: -10.891168594360352
    6. '   ' → logprob: -11.016168594360352
    7. '(' → logprob: -11.016168594360352
    8. ' ' → logprob: -12.141168594360352
    9. 'v' → logprob: -12.516168594360352
    10. '	L' → logprob: -13.016168594360352

Token 121: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.005741306114941835
    2. '[-' → logprob: -5.255741119384766
    3. 'pop' → logprob: -8.130741119384766
    4. '.' → logprob: -9.005741119384766
    5. '().' → logprob: -9.630741119384766
    6. '].' → logprob: -11.880741119384766
    7. '][-' → logprob: -12.005741119384766
    8. ' .' → logprob: -13.005741119384766
    9. ' pop' → logprob: -13.505741119384766
    10. '.p' → logprob: -13.505741119384766

Token 122: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00961583573371172
    2. '()
' → logprob: -5.134615898132324
    3. '()[' → logprob: -5.634615898132324
    4. '()

' → logprob: -9.759615898132324
    5. '()
' → logprob: -11.134615898132324
    6. '()(' → logprob: -11.259615898132324
    7. '())' → logprob: -11.759615898132324
    8. '(' → logprob: -11.884615898132324
    9. '())[' → logprob: -13.384615898132324
    10. '()\' → logprob: -13.634615898132324

Token 123: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3678138256072998
    2. ')' → logprob: -1.7428138256072998
    3. ',' → logprob: -2.3678138256073
    4. ')
' → logprob: -3.7428138256073
    5. '
' → logprob: -5.617814064025879
    6. '),' → logprob: -6.242814064025879
    7. '(' → logprob: -6.492814064025879
    8. '<|end|>' → logprob: -6.492814064025879
    9. '                
' → logprob: -6.742814064025879
    10. '+' → logprob: -7.492814064025879

Token 124: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.8436425924301147
    2. '               ' → logprob: -1.7186425924301147
    3. 'k' → logprob: -1.8436425924301147
    4. 'print' → logprob: -2.3436427116394043
    5. 'res' → logprob: -2.5936427116394043
    6. 'area' → logprob: -4.218642711639404
    7. 'd' → logprob: -4.843642711639404
    8. 'ans' → logprob: -4.843642711639404
    9. 'length' → logprob: -4.968642711639404
    10. 's' → logprob: -5.843642711639404

Token 125: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011868956498801708
    2. '.' → logprob: -7.001186847686768
    3. ' .' → logprob: -9.501187324523926
    4. '.extend' → logprob: -9.501187324523926
    5. 'append' → logprob: -10.001187324523926
    6. ',' → logprob: -10.751187324523926
    7. '=' → logprob: -11.251187324523926
    8. ')' → logprob: -12.001187324523926
    9. ').' → logprob: -12.126187324523926
    10. ' +=' → logprob: -12.251187324523926

Token 126: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.015997180715203285
    2. '(a' → logprob: -4.765997409820557
    3. '(((' → logprob: -5.640997409820557
    4. '(k' → logprob: -6.140997409820557
    5. '(' → logprob: -6.515997409820557
    6. '(max' → logprob: -9.890996932983398
    7. '([' → logprob: -10.140996932983398
    8. '(i' → logprob: -10.390996932983398
    9. '(abs' → logprob: -10.640996932983398
    10. '((((' → logprob: -12.140996932983398

Token 127: 'k' (ID: 74)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0023658976424485445
    2. 'k' → logprob: -6.252366065979004
    3. ' a' → logprob: -8.627366065979004
    4. '(a' → logprob: -8.752366065979004
    5. 'L' → logprob: -9.752366065979004
    6. '(k' → logprob: -11.252366065979004
    7. '   ' → logprob: -11.502366065979004
    8. ')' → logprob: -13.002366065979004
    9. ')a' → logprob: -13.252366065979004
    10. '(' → logprob: -13.377366065979004

Token 128: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020212961360812187
    2. ' -' → logprob: -4.1452131271362305
    3. '+' → logprob: -6.6452131271362305
    4. ',a' → logprob: -6.6452131271362305
    5. '-' → logprob: -6.8952131271362305
    6. ' ,' → logprob: -7.8952131271362305
    7. '-a' → logprob: -9.77021312713623
    8. ' +' → logprob: -9.89521312713623
    9. 'a' → logprob: -9.89521312713623
    10. ')' → logprob: -12.52021312713623

Token 129: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011706985533237457
    2. ' a' → logprob: -6.751170635223389
    3. 'L' → logprob: -15.876171112060547
    4. '(a' → logprob: -16.126171112060547
    5. ' ' → logprob: -16.626171112060547
    6. 'i' → logprob: -17.001171112060547
    7. '  ' → logprob: -17.126171112060547
    8. '	a' → logprob: -17.126171112060547
    9. '   ' → logprob: -17.876171112060547
    10. '_a' → logprob: -17.876171112060547

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002690840628929436
    2. '0' → logprob: -8.375268936157227
    3. '.' → logprob: -11.000268936157227
    4. ' ' → logprob: -11.250268936157227
    5. '1' → logprob: -12.625268936157227
    6. '(' → logprob: -13.750268936157227
    7. '][' → logprob: -13.750268936157227
    8. ')' → logprob: -13.875268936157227
    9. '()[' → logprob: -14.625268936157227
    10. ' [' → logprob: -15.125268936157227

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.87501335144043
    3. '1' → logprob: -12.12501335144043
    4. '[' → logprob: -14.87501335144043
    5. '```' → logprob: -15.50001335144043
    6. '
' → logprob: -15.93751335144043
    7. '   ' → logprob: -16.62501335144043
    8. '

' → logprob: -17.25001335144043
    9. '`' → logprob: -17.25001335144043
    10. ')' → logprob: -17.62501335144043

Token 132: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2084549516439438
    2. '+' → logprob: -2.3334548473358154
    3. ')' → logprob: -2.5834548473358154
    4. '),' → logprob: -5.2084550857543945
    5. ' +' → logprob: -5.2084550857543945
    6. ' ,' → logprob: -5.5834550857543945
    7. ')*' → logprob: -7.5834550857543945
    8. ' )' → logprob: -8.958455085754395
    9. ',
' → logprob: -9.958455085754395
    10. ')+' → logprob: -9.958455085754395

Token 133: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12363251298666
    2. ')' → logprob: -2.4986324310302734
    3. '+' → logprob: -3.9986324310302734
    4. ' +' → logprob: -4.623632431030273
    5. ' ,' → logprob: -5.373632431030273
    6. ' )' → logprob: -7.998632431030273
    7. ')*' → logprob: -7.998632431030273
    8. ',v' → logprob: -8.748632431030273
    9. ',
' → logprob: -9.123632431030273
    10. '),' → logprob: -9.748632431030273

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007181499968282878
    2. ' ' → logprob: -7.375718116760254
    3. '2' → logprob: -9.375718116760254
    4. '0' → logprob: -12.375718116760254
    5. ')' → logprob: -14.250718116760254
    6. '  ' → logprob: -15.063218116760254
    7. '   ' → logprob: -15.375718116760254
    8. '3' → logprob: -16.12571907043457
    9. '
' → logprob: -16.12571907043457
    10. 'a' → logprob: -16.18821907043457

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001097417771234177
    2. '2' → logprob: -9.750109672546387
    3. ' ' → logprob: -10.625109672546387
    4. '0' → logprob: -11.625109672546387
    5. 'v' → logprob: -11.750109672546387
    6. 'a' → logprob: -12.250109672546387
    7. '(' → logprob: -14.125109672546387
    8. '"' → logprob: -14.375109672546387
    9. ')' → logprob: -14.500109672546387
    10. '(a' → logprob: -14.625109672546387

Token 136: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00291376537643373
    2. ')' → logprob: -6.002913951873779
    3. ' ,' → logprob: -8.627913475036621
    4. '))' → logprob: -10.002913475036621
    5. ')))' → logprob: -10.252913475036621
    6. ',k' → logprob: -10.377913475036621
    7. ')*' → logprob: -10.502913475036621
    8. '),' → logprob: -10.627913475036621
    9. '```' → logprob: -11.127913475036621
    10. ',)' → logprob: -11.377913475036621

Token 137: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08042466640472412
    2. ')' → logprob: -2.7054247856140137
    3. '))' → logprob: -4.705424785614014
    4. ' ,' → logprob: -8.205424308776855
    5. '*' → logprob: -8.455424308776855
    6. ')))' → logprob: -8.705424308776855
    7. ' *' → logprob: -9.080424308776855
    8. ',)' → logprob: -9.080424308776855
    9. ')*' → logprob: -9.705424308776855
    10. ' )' → logprob: -9.705424308776855

Token 138: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6682267189025879
    2. '(a' → logprob: -0.9182267189025879
    3. ' a' → logprob: -2.793226718902588
    4. ' (' → logprob: -3.918226718902588
    5. '(' → logprob: -5.668226718902588
    6. '(L' → logprob: -6.418226718902588
    7. '(v' → logprob: -7.168226718902588
    8. 'v' → logprob: -8.04322624206543
    9. 'L' → logprob: -8.66822624206543
    10. '((' → logprob: -9.04322624206543

Token 139: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.2617008400848135e-05
    2. '1' → logprob: -10.625032424926758
    3. '[
' → logprob: -12.875032424926758
    4. ' [' → logprob: -13.750032424926758
    5. '][' → logprob: -13.750032424926758
    6. ')' → logprob: -14.375032424926758
    7. '```' → logprob: -14.375032424926758
    8. '<|end|>' → logprob: -14.875032424926758
    9. '<|end|>' → logprob: -14.875032424926758
    10. ')[' → logprob: -15.187532424926758

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005458220839500427
    2. '[' → logprob: -5.255458354949951
    3. '(' → logprob: -9.505457878112793
    4. '][' → logprob: -10.005457878112793
    5. '
' → logprob: -10.755457878112793
    6. ' ' → logprob: -11.255457878112793
    7. ']' → logprob: -11.317957878112793
    8. '-' → logprob: -11.505457878112793
    9. '```' → logprob: -11.692957878112793
    10. '0' → logprob: -12.130457878112793

Token 141: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052290961146354675
    2. '))' → logprob: -3.052290916442871
    3. ',' → logprob: -6.052290916442871
    4. ')
' → logprob: -7.302290916442871
    5. ' )' → logprob: -8.052290916442871
    6. ')))' → logprob: -9.177290916442871
    7. '))
' → logprob: -9.677290916442871
    8. ',)' → logprob: -10.302290916442871
    9. ')`' → logprob: -11.052290916442871
    10. '+' → logprob: -11.052290916442871

Token 142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49746373295783997
    2. 'k' → logprob: -2.6224637031555176
    3. ' 
' → logprob: -2.6224637031555176
    4. '\n' → logprob: -2.9974637031555176
    5. ' k' → logprob: -3.2474637031555176
    6. '       ' → logprob: -3.2474637031555176
    7. '            
' → logprob: -3.4974637031555176
    8. '        
' → logprob: -3.9974637031555176
    9. '               ' → logprob: -3.9974637031555176
    10. '            ' → logprob: -4.622463703155518

Token 143: ' L' (ID: 451)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7901300191879272
    2. '           ' → logprob: -1.4151300191879272
    3. ' k' → logprob: -2.040130138397217
    4. '            ' → logprob: -3.290130138397217
    5. ' ' → logprob: -3.540130138397217
    6. '       ' → logprob: -4.290130138397217
    7. '            
' → logprob: -4.415130138397217
    8. '(' → logprob: -4.665130138397217
    9. '    ' → logprob: -4.665130138397217
    10. 'L' (adapté à ' L') → logprob: -4.665130138397217

Token 144: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004193913657218218
    2. '.pop' → logprob: -6.0041937828063965
    3. '.' → logprob: -6.6291937828063965
    4. 'append' → logprob: -8.129194259643555
    5. '[-' → logprob: -9.504194259643555
    6. 'pop' → logprob: -11.754194259643555
    7. ' .' → logprob: -12.504194259643555
    8. '.Append' → logprob: -13.379194259643555
    9. 'Append' → logprob: -13.504194259643555
    10. '.
' → logprob: -13.629194259643555

Token 145: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.130576806142926e-05
    2. '(' → logprob: -10.500031471252441
    3. ' ((' → logprob: -13.375031471252441
    4. '(i' → logprob: -13.750031471252441
    5. ' ' → logprob: -15.250031471252441
    6. '(
' → logprob: -15.500031471252441
    7. ' (' → logprob: -15.625031471252441
    8. '  ' → logprob: -16.125030517578125
    9. ')((' → logprob: -16.375030517578125
    10. '   ' → logprob: -16.750030517578125

Token 146: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004867994866799563
    2. '(i' → logprob: -7.750486850738525
    3. ' i' → logprob: -10.125486373901367
    4. ' (' → logprob: -11.875486373901367
    5. 'k' → logprob: -12.000486373901367
    6. ')' → logprob: -14.000486373901367
    7. '(k' → logprob: -14.500486373901367
    8. '(' → logprob: -14.500486373901367
    9. ')i' → logprob: -15.000486373901367
    10. '   ' → logprob: -15.500486373901367

Token 147: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9132118225097656
    2. '[' → logprob: -0.9132118225097656
    3. '(i' → logprob: -2.5382118225097656
    4. ',' → logprob: -3.0382118225097656
    5. '0' → logprob: -4.288211822509766
    6. 'i' → logprob: -4.413211822509766
    7. '(k' → logprob: -4.788211822509766
    8. ')' → logprob: -4.788211822509766
    9. '),' → logprob: -5.163211822509766
    10. '[i' → logprob: -5.538211822509766

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00046045915223658085
    2. '1' → logprob: -7.875460624694824
    3. '[' → logprob: -10.000460624694824
    4. '
' → logprob: -11.687960624694824
    5. '(' → logprob: -12.062960624694824
    6. ' ' → logprob: -12.312960624694824
    7. '

' → logprob: -13.250460624694824
    8. 'k' → logprob: -13.437960624694824
    9. '-' → logprob: -13.562960624694824
    10. '   ' → logprob: -13.875460624694824

Token 149: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005224120686762035
    2. ',v' → logprob: -7.875522613525391
    3. ' ,' → logprob: -8.87552261352539
    4. 'v' → logprob: -13.87552261352539
    5. '),' → logprob: -14.37552261352539
    6. '+' → logprob: -15.12552261352539
    7. ',value' → logprob: -16.25052261352539
    8. 'import' → logprob: -16.62552261352539
    9. ' ' → logprob: -16.75052261352539
    10. ' +' → logprob: -16.87552261352539

Token 150: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. '	v' → logprob: -17.376171112060547
    4. ')v' → logprob: -18.251171112060547
    5. '   ' → logprob: -18.626171112060547
    6. ' ' → logprob: -19.251171112060547
    7. '$v' → logprob: -19.376171112060547
    8. '
' → logprob: -19.751171112060547
    9. 'vj' → logprob: -19.751171112060547
    10. ')' → logprob: -20.126171112060547

Token 151: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001064486219547689
    2. ')
' → logprob: -6.876064300537109
    3. '))' → logprob: -10.50106430053711
    4. ')

' → logprob: -13.62606430053711
    5. ' )' → logprob: -13.75106430053711
    6. ')))' → logprob: -14.37606430053711
    7. ')return' → logprob: -14.87606430053711
    8. ')}' → logprob: -15.75106430053711
    9. ')#' → logprob: -15.87606430053711
    10. ')n' → logprob: -16.00106430053711

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5002521276473999
    2. '<|end|>' → logprob: -2.1252522468566895
    3. ')' → logprob: -2.2502522468566895
    4. '       ' → logprob: -2.8752522468566895
    5. '
' → logprob: -3.5002522468566895
    6. 'return' → logprob: -3.7502522468566895
    7. ' ' → logprob: -5.0002522468566895
    8. ' return' → logprob: -5.1252522468566895
    9. ' 
' → logprob: -5.2502522468566895
    10. '    
' → logprob: -5.3752522468566895

Token 153: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13596707582473755
    2. '   ' → logprob: -2.8859670162200928
    3. '<|end|>' → logprob: -3.0109670162200928
    4. ']' → logprob: -5.385967254638672
    5. 'while' (adapté à ' while') → logprob: -6.010967254638672
    6. '
' → logprob: -6.135967254638672
    7. ' ' → logprob: -6.385967254638672
    8. '```' → logprob: -6.385967254638672
    9. ')
' → logprob: -7.010967254638672
    10. 'return' → logprob: -7.010967254638672

Token 154: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.012511059641838074
    2. ' L' → logprob: -4.387511253356934
    3. 'len' → logprob: -14.262511253356934
    4. ' ' → logprob: -15.512511253356934
    5. '(L' → logprob: -16.012510299682617
    6. ' len' → logprob: -16.262510299682617
    7. '   ' → logprob: -16.637510299682617
    8. 'not' → logprob: -17.137510299682617
    9. '	L' → logprob: -17.262510299682617
    10. ' not' → logprob: -17.387510299682617

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05260543152689934
    2. ':
' → logprob: -3.177605390548706
    3. ' and' → logprob: -4.927605628967285
    4. 'and' → logprob: -6.427605628967285
    5. '.pop' → logprob: -7.927605628967285
    6. '):' → logprob: -9.052605628967285
    7. '):
' → logprob: -9.802605628967285
    8. '   ' → logprob: -10.552605628967285
    9. ')' → logprob: -10.677605628967285
    10. '>' → logprob: -10.802605628967285

Token 156: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031549036502838135
    2. ' a' → logprob: -5.878154754638672
    3. '   ' → logprob: -8.003154754638672
    4. '	a' → logprob: -12.253154754638672
    5. 'k' → logprob: -12.628154754638672
    6. '>a' → logprob: -13.003154754638672
    7. '```' → logprob: -13.503154754638672
    8. '<|end|>' → logprob: -14.378154754638672
    9. 'A' → logprob: -14.878154754638672
    10. ',a' → logprob: -14.878154754638672

Token 157: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.00043615259346552193
    2. ' a' → logprob: -7.750436305999756
    3. '   ' → logprob: -12.375435829162598
    4. 'b' → logprob: -14.500435829162598
    5. 'k' → logprob: -15.500435829162598
    6. '	a' → logprob: -15.625435829162598
    7. 'A' → logprob: -16.250436782836914
    8. 'G' → logprob: -16.375436782836914
    9. '    
' → logprob: -16.500436782836914
    10. '```' → logprob: -16.500436782836914

Token 158: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132648468017578
    2. ' =' → logprob: -1.3132648468017578
    3. ')' → logprob: -13.438264846801758
    4. ' ' → logprob: -14.438264846801758
    5. 'a' → logprob: -14.938264846801758
    6. ')=' → logprob: -15.563264846801758
    7. ',' → logprob: -16.188264846801758
    8. '<|end|>' → logprob: -16.563264846801758
    9. '   ' → logprob: -16.688264846801758
    10. '  ' → logprob: -17.188264846801758

Token 159: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0067156096920371056
    2. ' L' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.756715774536133
    4. '	L' → logprob: -16.881715774536133
    5. '>L' → logprob: -17.131715774536133
    6. ' ' → logprob: -18.506715774536133
    7. '<|end|>' → logprob: -18.881715774536133
    8. '(L' → logprob: -18.881715774536133
    9. '_L' → logprob: -19.131715774536133
    10. '[' → logprob: -19.631715774536133

Token 160: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0015081972815096378
    2. 'pop' → logprob: -6.5015082359313965
    3. '.p' → logprob: -12.376507759094238
    4. '.' → logprob: -13.751507759094238
    5. ' pop' → logprob: -15.251507759094238
    6. ' .' → logprob: -16.001508712768555
    7. '(pop' → logprob: -16.501508712768555
    8. '	pop' → logprob: -16.501508712768555
    9. '_pop' → logprob: -17.626508712768555
    10. '.append' → logprob: -18.001508712768555

Token 161: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12716726958751678
    2. '()
' → logprob: -2.127167224884033
    3. ')' → logprob: -9.127167701721191
    4. '())
' → logprob: -9.877167701721191
    5. ')
' → logprob: -10.127167701721191
    6. '())' → logprob: -10.752167701721191
    7. '()
' → logprob: -11.752167701721191
    8. '(' → logprob: -12.002167701721191
    9. '()

' → logprob: -12.877167701721191
    10. '()`' → logprob: -15.502167701721191

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006743200588971376
    2. 'G' → logprob: -5.131743431091309
    3. 'k' → logprob: -7.756743431091309
    4. ' G' → logprob: -9.006743431091309
    5. 'n' → logprob: -9.506743431091309
    6. '   ' → logprob: -9.631743431091309
    7. ' k' → logprob: -10.756743431091309
    8. '
' → logprob: -10.756743431091309
    9. '<|end|>' → logprob: -11.131743431091309
    10. '           ' → logprob: -11.256743431091309

Token 163: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.11329129338264465
    2. 'k' → logprob: -2.2382912635803223
    3. '   ' → logprob: -7.863291263580322
    4. ' G' → logprob: -9.98829174041748
    5. '       ' → logprob: -10.98829174041748
    6. 'g' → logprob: -11.73829174041748
    7. ' k' → logprob: -12.61329174041748
    8. 'a' → logprob: -13.23829174041748
    9. 'r' → logprob: -13.48829174041748
    10. 'n' → logprob: -14.23829174041748

Token 164: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3871467709541321
    2. '.' → logprob: -1.1371467113494873
    3. 'append' → logprob: -8.637146949768066
    4. '.extend' → logprob: -10.262146949768066
    5. '+=' → logprob: -10.762146949768066
    6. '=' → logprob: -11.012146949768066
    7. '.=' → logprob: -11.387146949768066
    8. ' .' → logprob: -12.012146949768066
    9. ' append' → logprob: -13.637146949768066
    10. '+.' → logprob: -13.762146949768066

Token 165: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0061996690928936005
    2. '(' → logprob: -5.381199836730957
    3. '(n' → logprob: -7.131199836730957
    4. '(((' → logprob: -7.756199836730957
    5. '(len' → logprob: -8.131199836730957
    6. '(a' → logprob: -10.756199836730957
    7. '(k' → logprob: -11.256199836730957
    8. '(li' → logprob: -12.006199836730957
    9. '(
' → logprob: -12.381199836730957
    10. ' ((' → logprob: -13.131199836730957

Token 166: 'n' (ID: 77)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.291495144367218
    2. 'n' → logprob: -1.5414950847625732
    3. '(n' → logprob: -4.041495323181152
    4. 'len' → logprob: -4.291495323181152
    5. '(k' → logprob: -5.041495323181152
    6. '(len' → logprob: -7.541495323181152
    7. ' n' → logprob: -8.916495323181152
    8. ' k' → logprob: -9.166495323181152
    9. '(' → logprob: -9.666495323181152
    10. ' (' → logprob: -9.916495323181152

Token 167: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.020556602627038956
    2. '-' → logprob: -3.895556688308716
    3. ' ' → logprob: -12.020556449890137
    4. 'a' → logprob: -12.145556449890137
    5. ')' → logprob: -13.270556449890137
    6. '#' → logprob: -15.145556449890137
    7. '-a' → logprob: -15.395556449890137
    8. 'k' → logprob: -15.395556449890137
    9. '   ' → logprob: -15.770556449890137
    10. '-k' → logprob: -15.895556449890137

Token 168: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11537546664476395
    2. '1' → logprob: -2.240375518798828
    3. ' a' → logprob: -5.990375518798828
    4. ' ' → logprob: -9.990375518798828
    5. '   ' → logprob: -14.490375518798828
    6. '	a' → logprob: -15.490375518798828
    7. '(a' → logprob: -15.490375518798828
    8. '  ' → logprob: -15.865375518798828
    9. '_a' → logprob: -16.115375518798828
    10. 'а' → logprob: -16.490375518798828

Token 169: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.24179228907451e-05
    2. '0' → logprob: -10.125061988830566
    3. ' ' → logprob: -12.000061988830566
    4. '(' → logprob: -12.250061988830566
    5. '1' → logprob: -12.500061988830566
    6. '   ' → logprob: -12.500061988830566
    7. ' [' → logprob: -13.500061988830566
    8. '()[' → logprob: -14.250061988830566
    9. ')' → logprob: -14.500061988830566
    10. '{' → logprob: -15.500061988830566

Token 170: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.250001907348633
    3. ' ' → logprob: -15.500001907348633
    4. '1' → logprob: -16.625001907348633
    5. '۰' → logprob: -18.000001907348633
    6. '(' → logprob: -18.250001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '
' → logprob: -18.500001907348633
    9. '-' → logprob: -18.562501907348633
    10. '"' → logprob: -18.750001907348633

Token 171: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11000033468008041
    2. ']' → logprob: -2.3600003719329834
    3. '+' → logprob: -5.110000133514404
    4. ' )' → logprob: -6.235000133514404
    5. ' +' → logprob: -7.110000133514404
    6. ' ]' → logprob: -7.610000133514404
    7. ')+' → logprob: -9.485000610351562
    8. ')]' → logprob: -9.485000610351562
    9. ']+' → logprob: -9.485000610351562
    10. '}' → logprob: -9.860000610351562

Token 172: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6763359308242798
    2. ' *' → logprob: -0.9263359308242798
    3. ')' → logprob: -2.5513358116149902
    4. ')*' → logprob: -4.55133581161499
    5. ' )' → logprob: -5.80133581161499
    6. '+' → logprob: -5.80133581161499
    7. ' +' → logprob: -7.30133581161499
    8. ' ' → logprob: -8.301336288452148
    9. '*)' → logprob: -11.801336288452148
    10. '  ' → logprob: -12.301336288452148

Token 173: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.006722826045006514
    2. ' a' → logprob: -5.006722927093506
    3. ' ' → logprob: -12.381722450256348
    4. '   ' → logprob: -12.756722450256348
    5. '  ' → logprob: -15.006722450256348
    6. '    ' → logprob: -16.631723403930664
    7. '	a' → logprob: -17.256723403930664
    8. '
' → logprob: -18.006723403930664
    9. '       ' → logprob: -18.006723403930664
    10. '     ' → logprob: -18.131723403930664

Token 174: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002986392646562308
    2. '1' → logprob: -8.125298500061035
    3. '][' → logprob: -14.125298500061035
    4. ' [' → logprob: -14.250298500061035
    5. '```' → logprob: -14.375298500061035
    6. ']' → logprob: -15.500298500061035
    7. '(' → logprob: -15.875298500061035
    8. ')' → logprob: -16.37529945373535
    9. ''[' → logprob: -16.87529945373535
    10. '#' → logprob: -17.25029945373535

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. ' ' → logprob: -16.375
    4. '   ' → logprob: -17.375
    5. '```' → logprob: -17.625
    6. '
' → logprob: -19.1875
    7. '１' → logprob: -19.4375
    8. '  ' → logprob: -19.8125
    9. '۱' → logprob: -19.9375
    10. '0' → logprob: -20.0

Token 176: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005724519141949713
    2. '))' → logprob: -7.750572681427002
    3. ')
' → logprob: -8.875572204589844
    4. ' )' → logprob: -15.125572204589844
    5. ')`' → logprob: -15.125572204589844
    6. '()' → logprob: -15.375572204589844
    7. '})' → logprob: -15.625572204589844
    8. '())' → logprob: -15.875572204589844
    9. ')")' → logprob: -16.000572204589844
    10. ')

' → logprob: -16.125572204589844

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001804415020160377
    2. 'return' → logprob: -6.376804351806641
    3. ' return' → logprob: -9.75180435180664
    4. '<|end|>' → logprob: -11.62680435180664
    5. '
' → logprob: -11.87680435180664
    6. '       ' → logprob: -12.12680435180664
    7. ')' → logprob: -12.12680435180664
    8. '    
' → logprob: -12.25180435180664
    9. '	return' → logprob: -12.37680435180664
    10. '```' → logprob: -13.00180435180664

Token 178: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.482387900352478
    2. 'return' (adapté à ' return') → logprob: -0.982387900352478
    3. ' return' → logprob: -5.107388019561768
    4. 'G' → logprob: -6.232388019561768
    5. ' ' → logprob: -9.73238754272461
    6. '	return' → logprob: -10.10738754272461
    7. ')' → logprob: -10.23238754272461
    8. '    
' → logprob: -10.23238754272461
    9. ' G' → logprob: -10.85738754272461
    10. '<|end|>' → logprob: -10.98238754272461

Token 179: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.028535684570670128
    2. 'G' → logprob: -3.6535356044769287
    3. ' max' → logprob: -6.153535842895508
    4. 'min' → logprob: -10.278535842895508
    5. ' G' → logprob: -10.278535842895508
    6. 'sum' → logprob: -11.278535842895508
    7. '(max' → logprob: -11.778535842895508
    8. 'sorted' → logprob: -12.028535842895508
    9. 'int' → logprob: -12.653535842895508
    10. '[max' → logprob: -13.403535842895508

Token 180: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.002489214763045311
    2. '(' → logprob: -6.00248908996582
    3. '(max' → logprob: -11.25248908996582
    4. '(
' → logprob: -14.75248908996582
    5. '(g' → logprob: -16.62748908996582
    6. 'max' → logprob: -16.87748908996582
    7. '(P' → logprob: -17.25248908996582
    8. '((' → logprob: -17.50248908996582
    9. '()' → logprob: -17.87748908996582
    10. 'G' → logprob: -18.50248908996582

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -13.500003814697266
    3. ' )' → logprob: -13.625003814697266
    4. '))' → logprob: -15.000003814697266
    5. '())' → logprob: -15.375003814697266
    6. '()' → logprob: -15.375003814697266
    7. ')`' → logprob: -16.500003814697266
    8. ')return' → logprob: -17.000003814697266
    9. ')}' → logprob: -17.125003814697266
    10. '}' → logprob: -17.125003814697266

Token 182: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03455333784222603
    2. 'result' → logprob: -3.659553289413452
    3. 'max' → logprob: -5.784553527832031
    4. 'res' → logprob: -6.284553527832031
    5. 'r' → logprob: -7.409553527832031
    6. 'answer' → logprob: -8.034553527832031
    7. 's' → logprob: -8.159553527832031
    8. ')' → logprob: -8.659553527832031
    9. '#' → logprob: -8.659553527832031
    10. 'n' → logprob: -8.784553527832031

Token 183: '(square' (ID: 180503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3185001611709595
    2. '(square' → logprob: -1.3185001611709595
    3. '(s' → logprob: -5.31850004196167
    4. '('' → logprob: -8.318500518798828
    5. '("("' → logprob: -10.818500518798828
    6. '(S' → logprob: -11.318500518798828
    7. 'square' → logprob: -11.693500518798828
    8. '((' → logprob: -12.068500518798828
    9. '()' → logprob: -12.193500518798828
    10. '(max' → logprob: -12.318500518798828

Token 184: '(li' (ID: 111234)
  Prédit: '(li'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(li' → logprob: -0.0002060436672763899
    2. '(' → logprob: -8.500205993652344
    3. '(
' → logprob: -14.500205993652344
    4. ' (' → logprob: -14.875205993652344
    5. '(ls' → logprob: -15.250205993652344
    6. '(l' → logprob: -15.250205993652344
    7. '(lo' → logprob: -15.500205993652344
    8. '(lp' → logprob: -15.625205993652344
    9. ')(' → logprob: -15.875205993652344
    10. 'li' → logprob: -16.000205993652344

Token 185: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02324722334742546
    2. ')' → logprob: -3.773247241973877
    3. ')))' → logprob: -14.148246765136719
    4. '))
' → logprob: -14.398246765136719
    5. ')
' → logprob: -15.398246765136719
    6. ' ))' → logprob: -16.52324676513672
    7. '),' → logprob: -16.77324676513672
    8. '()))' → logprob: -17.02324676513672
    9. '])' → logprob: -17.39824676513672
    10. ' )' → logprob: -17.39824676513672


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 183
Tokens correctement prédits (1ère position, stricte): 73
Tokens correctement prédits (1ère position, avec adaptation): 77
Tokens correctement prédits (top 10): 155
Précision stricte (1ère position): 39.89%
Précision adaptée (1ère position): 42.08%
Précision (top 10): 84.70%
================================================================================
