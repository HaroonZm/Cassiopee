================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,k = map(int, input().split())
lag = []
for l in range(n):
    lag.append(int(input()))
w_max = 100000*100000
w_min = 0
while w_min < w_max:
    w_mid = (w_max + w_min) // 2
    tracks = 0
    current = 0
    for i in range(n):
        if lag[i] > w_mid:
            tracks = k
            break
        elif lag[i] + current > w_mid:
            tracks += 1
            current = lag[i]
        else:
            current += lag[i]
    if tracks < k:
        w_max = w_mid
    else:
        w_min = w_mid + 1
print(w_max)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',k' (ID: 35155)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.8119295835494995
    2. ' input' → logprob: -1.8119295835494995
    3. 'map' → logprob: -1.9369295835494995
    4. 'input' → logprob: -2.061929702758789
    5. ' ' → logprob: -2.311929702758789
    6. '0' → logprob: -4.061929702758789
    7. ' n' → logprob: -5.936929702758789
    8. '10' → logprob: -6.811929702758789
    9. '1' → logprob: -7.186929702758789
    10. ' list' → logprob: -9.436929702758789

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02897062338888645
    2. '(lambda' → logprob: -4.153970718383789
    3. '(int' → logprob: -5.528970718383789
    4. '<|end|>' → logprob: -5.528970718383789
    5. '```' → logprob: -5.903970718383789
    6. '(str' → logprob: -6.903970718383789
    7. ')' → logprob: -8.528970718383789
    8. '[int' → logprob: -8.778970718383789
    9. '\(' → logprob: -9.278970718383789
    10. '<|end|>' → logprob: -9.403970718383789

Token 5: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030683958902955055
    2. '(' → logprob: -3.780683994293213
    3. ')' → logprob: -5.030683994293213
    4. 'input' → logprob: -7.405683994293213
    5. '(str' → logprob: -9.655683517456055
    6. '(raw' → logprob: -10.280683517456055
    7. '(int' → logprob: -10.280683517456055
    8. ' input' → logprob: -10.655683517456055
    9. '=input' → logprob: -11.155683517456055
    10. ',input' → logprob: -11.405683517456055

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.019640590995550156
    2. ' input' → logprob: -4.0196404457092285
    3. '(input' → logprob: -6.5196404457092285
    4. ')' → logprob: -11.269640922546387
    5. ',input' → logprob: -13.269640922546387
    6. '=input' → logprob: -14.894640922546387
    7. '[input' → logprob: -16.01963996887207
    8. '(' → logprob: -16.39463996887207
    9. '```' → logprob: -16.39463996887207
    10. '<input' → logprob: -16.89463996887207

Token 7: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6452957987785339
    2. '()' → logprob: -1.0202958583831787
    3. ')' → logprob: -2.8952958583831787
    4. '(' → logprob: -3.3952958583831787
    5. '`)' → logprob: -4.7702956199646
    6. '`()' → logprob: -5.3952956199646
    7. '().' → logprob: -5.7702956199646
    8. '('' → logprob: -5.8952956199646
    9. '```' → logprob: -6.0202956199646
    10. '')' → logprob: -7.1452956199646

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0010628211311995983
    2. 'strip' → logprob: -6.876062870025635
    3. ' split' → logprob: -10.751062393188477
    4. 'rstrip' → logprob: -12.126062393188477
    5. ')' → logprob: -13.126062393188477
    6. 'spl' → logprob: -14.751062393188477
    7. '(split' → logprob: -14.876062393188477
    8. 's' → logprob: -15.876062393188477
    9. 'read' → logprob: -16.376062393188477
    10. 'startswith' → logprob: -16.751062393188477

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005306927487254143
    2. '))' → logprob: -5.630306720733643
    3. '())' → logprob: -6.505306720733643
    4. '`)' → logprob: -9.5053071975708
    5. '()' → logprob: -9.7553071975708
    6. '(' → logprob: -9.8803071975708
    7. ')`' → logprob: -12.1303071975708
    8. ' )' → logprob: -12.3803071975708
    9. '')' → logprob: -12.5053071975708
    10. ')))' → logprob: -13.0053071975708

Token 10: 'lag' (ID: 8410)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9350758790969849
    2. '\n' → logprob: -1.5600758790969849
    3. 'for' → logprob: -2.5600757598876953
    4. '#' → logprob: -2.9350757598876953
    5. 'x' → logprob: -3.0600757598876953
    6. ')' → logprob: -3.4350757598876953
    7. ',' → logprob: -3.6850757598876953
    8. '\' → logprob: -3.8100757598876953
    9. 'n' → logprob: -3.8100757598876953
    10. 's' → logprob: -4.060075759887695

Token 11: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.49370482563972473
    2. 'range' → logprob: -1.9937047958374023
    3. '[' → logprob: -2.6187047958374023
    4. 'el' → logprob: -2.7437047958374023
    5. 's' → logprob: -2.9937047958374023
    6. 'ing' → logprob: -4.368704795837402
    7. 'er' → logprob: -4.743704795837402
    8. 'r' → logprob: -5.618704795837402
    9. '(e' → logprob: -5.618704795837402
    10. '=' → logprob: -5.993704795837402

Token 12: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6064621806144714
    2. ' []' → logprob: -1.8564622402191162
    3. '[' → logprob: -2.606462240219116
    4. '0' → logprob: -2.731462240219116
    5. '[]' → logprob: -2.856462240219116
    6. ' ' → logprob: -3.356462240219116
    7. '[k' → logprob: -4.106462001800537
    8. '[n' → logprob: -4.231462001800537
    9. 'n' → logprob: -4.856462001800537
    10. '1' → logprob: -4.981462001800537

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06044912710785866
    2. 'f' → logprob: -2.9354491233825684
    3. ' for' → logprob: -5.310449123382568
    4. ' ' → logprob: -8.560449600219727
    5. '=' → logprob: -9.185449600219727
    6. 'i' → logprob: -9.810449600219727
    7. '_' → logprob: -9.810449600219727
    8. '[' → logprob: -10.685449600219727
    9. 'r' → logprob: -10.685449600219727
    10. 'F' → logprob: -10.810449600219727

Token 14: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07477261871099472
    2. ' ' → logprob: -2.699772596359253
    3. ' _' → logprob: -6.199772834777832
    4. 'i' → logprob: -6.449772834777832
    5. '_' → logprob: -6.824772834777832
    6. ' ‌' → logprob: -9.824772834777832
    7. '  ' → logprob: -10.449772834777832
    8. ' I' → logprob: -11.449772834777832
    9. ' ' → logprob: -11.824772834777832
    10. '	i' → logprob: -12.199772834777832

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14889371395111084
    2. 'n' → logprob: -3.2738938331604004
    3. 'i' → logprob: -3.3988938331604004
    4. '_' → logprob: -4.1488938331604
    5. 'a' → logprob: -4.1488938331604
    6. ' ' → logprob: -4.5238938331604
    7. 'in' → logprob: -4.6488938331604
    8. ' i' → logprob: -4.6488938331604
    9. 'o' → logprob: -6.6488938331604
    10. 'ag' → logprob: -6.8988938331604

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1270405501127243
    2. ' range' → logprob: -2.1270406246185303
    3. 'lag' → logprob: -9.62704086303711
    4. 'rang' → logprob: -12.00204086303711
    5. 'ran' → logprob: -12.25204086303711
    6. 'ange' → logprob: -12.25204086303711
    7. 'n' → logprob: -12.50204086303711
    8. '[' → logprob: -12.62704086303711
    9. 'r' → logprob: -12.75204086303711
    10. ' lag' → logprob: -12.75204086303711

Token 17: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002489926293492317
    2. '(n' → logprob: -6.127490043640137
    3. ' (' → logprob: -8.627490043640137
    4. '(k' → logprob: -9.252490043640137
    5. '(len' → logprob: -11.002490043640137
    6. '(l' → logprob: -11.627490043640137
    7. '(s' → logprob: -13.377490043640137
    8. '(space' → logprob: -14.002490043640137
    9. '((' → logprob: -14.877490043640137
    10. '(length' → logprob: -15.252490043640137

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018113177502527833
    2. ')' → logprob: -6.626811504364014
    3. '+' → logprob: -7.876811504364014
    4. ' ):' → logprob: -9.876811027526855
    5. ':' → logprob: -10.376811027526855
    6. '):
' → logprob: -11.001811027526855
    7. ' ' → logprob: -13.376811027526855
    8. '-' → logprob: -13.876811027526855
    9. '+:' → logprob: -15.001811027526855
    10. ',' → logprob: -15.001811027526855

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1300586611032486
    2. ' ' → logprob: -2.505058765411377
    3. '    ' → logprob: -3.755058765411377
    4. ' []' → logprob: -5.005058765411377
    5. ' input' → logprob: -5.880058765411377
    6. 'input' → logprob: -6.630058765411377
    7. '```' → logprob: -6.755058765411377
    8. ' lag' → logprob: -7.380058765411377
    9. '    
' → logprob: -7.380058765411377
    10. '[' → logprob: -7.880058765411377

Token 20: ' lag' (ID: 9797)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07925315946340561
    2. 'lag' (adapté à ' lag') → logprob: -3.7042531967163086
    3. 'int' → logprob: -3.8292531967163086
    4. ' lag' → logprob: -4.704253196716309
    5. 'input' → logprob: -5.704253196716309
    6. ' input' → logprob: -6.579253196716309
    7. ' ' → logprob: -6.579253196716309
    8. 'i' → logprob: -6.579253196716309
    9. 's' → logprob: -6.579253196716309
    10. 'data' → logprob: -6.704253196716309

Token 21: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3869945704936981
    2. '.' → logprob: -1.1369946002960205
    3. '.app' → logprob: -9.761994361877441
    4. '.ap' → logprob: -10.886994361877441
    5. '.extend' → logprob: -11.261994361877441
    6. ' .' → logprob: -11.636994361877441
    7. '.a' → logprob: -12.011994361877441
    8. ' =' → logprob: -12.511994361877441
    9. '.insert' → logprob: -12.761994361877441
    10. '.=' → logprob: -12.761994361877441

Token 22: '(int' (ID: 2742)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.13729643821716309
    2. '(' → logprob: -3.012296438217163
    3. '(int' → logprob: -3.262296438217163
    4. '([]' → logprob: -3.512296438217163
    5. '(input' → logprob: -5.137296676635742
    6. '([' → logprob: -5.762296676635742
    7. 'list' → logprob: -6.762296676635742
    8. '(tuple' → logprob: -8.137296676635742
    9. '((' → logprob: -9.387296676635742
    10. '(str' → logprob: -9.512296676635742

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04308517277240753
    2. '(' → logprob: -3.1680850982666016
    3. ')' → logprob: -10.168085098266602
    4. 'input' → logprob: -11.168085098266602
    5. '(
' → logprob: -11.418085098266602
    6. '()' → logprob: -12.043085098266602
    7. ' (' → logprob: -12.293085098266602
    8. '(in' → logprob: -12.793085098266602
    9. '(

' → logprob: -13.043085098266602
    10. ',input' → logprob: -13.668085098266602

Token 24: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5794907212257385
    2. '()))' → logprob: -0.8294907212257385
    3. '()' → logprob: -5.704490661621094
    4. '(' → logprob: -9.204490661621094
    5. '())))' → logprob: -9.829490661621094
    6. ')' → logprob: -11.329490661621094
    7. '()))
' → logprob: -11.704490661621094
    8. '()));' → logprob: -11.954490661621094
    9. ' ())' → logprob: -12.204490661621094
    10. '())
' → logprob: -12.329490661621094

Token 25: 'w' (ID: 86)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1675180196762085
    2. 'max' → logprob: -2.292518138885498
    3. 'm' → logprob: -2.542518138885498
    4. 's' → logprob: -2.667518138885498
    5. 'sum' → logprob: -3.042518138885498
    6. 'k' → logprob: -3.042518138885498
    7. ')' → logprob: -3.167518138885498
    8. 'i' → logprob: -3.292518138885498
    9. 'count' → logprob: -3.417518138885498
    10. 'l' → logprob: -3.667518138885498

Token 26: '_max' (ID: 13731)
  Prédit: 'hile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hile' → logprob: -0.1139172837138176
    2. 'e' → logprob: -3.113917350769043
    3. 'h' → logprob: -3.113917350769043
    4. '[i' → logprob: -5.238917350769043
    5. '[' → logprob: -5.613917350769043
    6. 'i' → logprob: -6.238917350769043
    7. '=' → logprob: -6.363917350769043
    8. 'a' → logprob: -6.488917350769043
    9. ' =' → logprob: -6.738917350769043
    10. '.' → logprob: -6.863917350769043

Token 27: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3663962185382843
    2. '_' → logprob: -1.616396188735962
    3. ' =' → logprob: -2.616396188735962
    4. ')' → logprob: -4.366396427154541
    5. '=' → logprob: -4.741396427154541
    6. ' _' → logprob: -5.866396427154541
    7. ' ' → logprob: -6.116396427154541
    8. '_max' → logprob: -6.366396427154541
    9. '[]' → logprob: -6.866396427154541
    10. '<|end|>' → logprob: -6.991396427154541

Token 28: ' ' (ID: 220)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2916586399078369
    2. 'max' → logprob: -1.416658639907837
    3. '0' → logprob: -5.541658401489258
    4. ' ' → logprob: -5.916658401489258
    5. ' lag' → logprob: -6.166658401489258
    6. 'lag' → logprob: -6.541658401489258
    7. ' k' → logprob: -10.166658401489258
    8. '100' → logprob: -10.166658401489258
    9. 'sum' → logprob: -10.666658401489258
    10. ' min' → logprob: -10.791658401489258

Token 29: '100' (ID: 1353)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008591645397245884
    2. '0' → logprob: -5.258591651916504
    3. 'lag' → logprob: -6.133591651916504
    4. '100' → logprob: -8.133591651916504
    5. 'min' → logprob: -8.758591651916504
    6. 'k' → logprob: -8.758591651916504
    7. 'sum' → logprob: -9.133591651916504
    8. ' max' → logprob: -9.258591651916504
    9. 'int' → logprob: -9.258591651916504
    10. '1' → logprob: -10.133591651916504

Token 30: '000' (ID: 1302)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7772139310836792
    2. 'for' → logprob: -1.7772139310836792
    3. 'w' → logprob: -1.9022139310836792
    4. '0' → logprob: -2.1522140502929688
    5. '<|end|>' → logprob: -4.277214050292969
    6. ' for' → logprob: -4.402214050292969
    7. '' → logprob: -4.527214050292969
    8. '+' → logprob: -4.527214050292969
    9. '*' → logprob: -4.652214050292969
    10. ' ' → logprob: -4.652214050292969

Token 31: '*' (ID: 9)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026081854477524757
    2. '<|end|>' → logprob: -4.2760820388793945
    3. 'for' → logprob: -5.7760820388793945
    4. '0' → logprob: -5.9010820388793945
    5. '
' → logprob: -6.6510820388793945
    6. '' → logprob: -6.9010820388793945
    7. ' 
' → logprob: -7.1510820388793945
    8. 'w' → logprob: -7.4010820388793945
    9. ' ' → logprob: -7.4010820388793945
    10. ' for' → logprob: -8.026082038879395

Token 32: '100' (ID: 1353)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03599630668759346
    2. 'n' → logprob: -3.910996198654175
    3. '100' → logprob: -4.910996437072754
    4. 'l' → logprob: -6.285996437072754
    5. '10' → logprob: -6.785996437072754
    6. '1' → logprob: -6.910996437072754
    7. 'lag' → logprob: -6.910996437072754
    8. '2' → logprob: -7.035996437072754
    9. ' k' → logprob: -7.660996437072754
    10. 'max' → logprob: -8.035996437072754

Token 33: '000' (ID: 1302)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5071882009506226
    2. '+' → logprob: -1.5071882009506226
    3. '0' → logprob: -2.007188320159912
    4. '<|end|>' → logprob: -3.882188320159912
    5. ' ' → logprob: -5.257188320159912
    6. '
' → logprob: -5.757188320159912
    7. '  
' → logprob: -6.382188320159912
    8. ' 
' → logprob: -6.507188320159912
    9. '+
' → logprob: -6.632188320159912
    10. '00' → logprob: -6.882188320159912

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08902137726545334
    2. '+' → logprob: -2.8390214443206787
    3. ' 
' → logprob: -4.5890212059021
    4. 'w' → logprob: -5.7140212059021
    5. ' ' → logprob: -6.0890212059021
    6. '<|end|>' → logprob: -6.0890212059021
    7. '*' → logprob: -6.4640212059021
    8. '0' → logprob: -6.5890212059021
    9. '+
' → logprob: -6.7140212059021
    10. '
' → logprob: -6.8390212059021

Token 35: 'w' (ID: 86)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02213861420750618
    2. '
' → logprob: -4.772138595581055
    3. 'w' → logprob: -5.647138595581055
    4. ' 
' → logprob: -6.022138595581055
    5. '0' → logprob: -6.522138595581055
    6. ' ' → logprob: -6.772138595581055
    7. '<|end|>' → logprob: -6.772138595581055
    8. '

' → logprob: -7.147138595581055
    9. '' → logprob: -7.272138595581055
    10. '+' → logprob: -7.397138595581055

Token 36: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.013686689548194408
    2. '_max' → logprob: -4.388686656951904
    3. ' _' → logprob: -7.513686656951904
    4. ' =' → logprob: -8.388687133789062
    5. '_=' → logprob: -9.513687133789062
    6. '[' → logprob: -10.388687133789062
    7. 'max' → logprob: -10.513687133789062
    8. 's' → logprob: -10.513687133789062
    9. '_min' → logprob: -10.638687133789062
    10. '=' → logprob: -10.638687133789062

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0033892178907990456
    2. '=' → logprob: -5.878389358520508
    3. ' ' → logprob: -8.003389358520508
    4. '_' → logprob: -8.628389358520508
    5. ',' → logprob: -10.378389358520508
    6. '<|end|>' → logprob: -11.503389358520508
    7. ' _' → logprob: -11.753389358520508
    8. ' ,' → logprob: -12.003389358520508
    9. '_=' → logprob: -12.878389358520508
    10. ' =)' → logprob: -13.003389358520508

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.523165762424469
    2. ' w' → logprob: -2.023165702819824
    3. '100' → logprob: -2.398165702819824
    4. '10' → logprob: -2.648165702819824
    5. 'w' → logprob: -2.773165702819824
    6. '0' → logprob: -3.148165702819824
    7. ' float' → logprob: -5.898165702819824
    8. 'float' → logprob: -6.023165702819824
    9. '1' → logprob: -6.148165702819824
    10. '999' → logprob: -8.148165702819824

Token 39: '0' (ID: 15)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7842074632644653
    2. 'w' → logprob: -1.1592074632644653
    3. '0' → logprob: -1.7842074632644653
    4. '10' → logprob: -3.159207344055176
    5. 'float' → logprob: -4.784207344055176
    6. '1' → logprob: -5.409207344055176
    7. '-' → logprob: -5.659207344055176
    8. '999' → logprob: -6.534207344055176
    9. 'int' → logprob: -7.409207344055176
    10. ' ' → logprob: -7.909207344055176

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2500937283039093
    2. '<|end|>' → logprob: -1.750093698501587
    3. ' 
' → logprob: -3.500093698501587
    4. ' ' → logprob: -5.250093936920166
    5. 'w' → logprob: -5.375093936920166
    6. 'n' → logprob: -6.625093936920166
    7. '```' → logprob: -6.750093936920166
    8. '
' → logprob: -6.875093936920166
    9. '<|end|>' → logprob: -6.875093936920166
    10. '' → logprob: -7.125093936920166

Token 41: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6918182373046875
    2. 'while' → logprob: -1.1918182373046875
    3. ' while' → logprob: -2.6918182373046875
    4. ' 
' → logprob: -2.8168182373046875
    5. '<|end|>' → logprob: -3.1918182373046875
    6. 'w' → logprob: -4.6918182373046875
    7. ' ' → logprob: -4.9418182373046875
    8. '```' → logprob: -5.4418182373046875
    9. 'for' → logprob: -6.3168182373046875
    10. '' → logprob: -7.1918182373046875

Token 42: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.006856386084109545
    2. 'w' → logprob: -5.006856441497803
    3. ' ' → logprob: -9.256855964660645
    4. ' (' → logprob: -11.256855964660645
    5. ' True' → logprob: -11.881855964660645
    6. '(w' → logprob: -11.881855964660645
    7. ' k' → logprob: -12.381855964660645
    8. ' abs' → logprob: -12.631855964660645
    9. ' ' → logprob: -12.881855964660645
    10. 'abs' → logprob: -13.506855964660645

Token 43: '_min' (ID: 15950)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6575943231582642
    2. '_' → logprob: -0.7825943231582642
    3. '_min' → logprob: -4.032594203948975
    4. ' <' → logprob: -6.532594203948975
    5. '<' → logprob: -6.657594203948975
    6. ' _' → logprob: -6.782594203948975
    7. '<_' → logprob: -6.907594203948975
    8. ' <=' → logprob: -7.282594203948975
    9. '<=' → logprob: -7.407594203948975
    10. '_<' → logprob: -7.532594203948975

Token 44: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2441713660955429
    2. '<' → logprob: -2.119171380996704
    3. ' <=' → logprob: -2.494171380996704
    4. '<=' → logprob: -4.369171142578125
    5. ' !=' → logprob: -7.744171142578125
    6. ' ' → logprob: -7.744171142578125
    7. '<w' → logprob: -8.494171142578125
    8. '!=' → logprob: -9.494171142578125
    9. '+' → logprob: -9.994171142578125
    10. '_' → logprob: -10.869171142578125

Token 45: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4293352961540222
    2. ' w' → logprob: -1.054335355758667
    3. '_w' → logprob: -8.054335594177246
    4. '=' → logprob: -9.179335594177246
    5. '=w' → logprob: -9.304335594177246
    6. '_' → logprob: -9.929335594177246
    7. ' ' → logprob: -10.179335594177246
    8. ' _' → logprob: -11.554335594177246
    9. ' =' → logprob: -12.054335594177246
    10. '	w' → logprob: -12.679335594177246

Token 46: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.002742469310760498
    2. '_min' → logprob: -6.002742290496826
    3. '_' → logprob: -8.377742767333984
    4. 'max' → logprob: -11.377742767333984
    5. ' _' → logprob: -11.377742767333984
    6. '_m' → logprob: -11.627742767333984
    7. '+' → logprob: -14.002742767333984
    8. '__' → logprob: -14.252742767333984
    9. '._' → logprob: -14.627742767333984
    10. '_MAX' → logprob: -14.627742767333984

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033706773538142443
    2. ' :' → logprob: -5.753370761871338
    3. ':
' → logprob: -8.75337028503418
    4. ' :
' → logprob: -11.62837028503418
    5. ' and' → logprob: -12.12837028503418
    6. ' ' → logprob: -12.50337028503418
    7. '-' → logprob: -13.12837028503418
    8. '+' → logprob: -13.25337028503418
    9. '   ' → logprob: -13.37837028503418
    10. '{' → logprob: -13.75337028503418

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0260387659072876
    2. '+' → logprob: -1.7760387659072876
    3. '<|end|>' → logprob: -1.7760387659072876
    4. ' ' → logprob: -1.9010387659072876
    5. ':' → logprob: -2.901038646697998
    6. '    ' → logprob: -3.901038646697998
    7. ' +' → logprob: -4.526038646697998
    8. 'w' → logprob: -4.901038646697998
    9. ' (' → logprob: -4.901038646697998
    10. ' w' → logprob: -5.026038646697998

Token 49: ' w' (ID: 286)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.038791298866272
    2. ' ' → logprob: -1.538791298866272
    3. ' w' → logprob: -2.4137911796569824
    4. '    ' → logprob: -2.5387911796569824
    5. '<|end|>' → logprob: -2.6637911796569824
    6. '(w' → logprob: -2.7887911796569824
    7. 'w' (adapté à ' w') → logprob: -2.7887911796569824
    8. ' (' → logprob: -4.038791179656982
    9. '     
' → logprob: -4.163791179656982
    10. '  
' → logprob: -5.163791179656982

Token 50: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -0.06653054803609848
    2. '_' → logprob: -3.816530466079712
    3. '_max' → logprob: -4.066530704498291
    4. '_min' → logprob: -4.191530704498291
    5. '_m' → logprob: -5.066530704498291
    6. '_middle' → logprob: -5.941530704498291
    7. '__' → logprob: -8.816530227661133
    8. '_val' → logprob: -8.941530227661133
    9. '_avg' → logprob: -9.691530227661133
    10. '_i' → logprob: -9.941530227661133

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01604316756129265
    2. '=' → logprob: -4.141043186187744
    3. '=int' → logprob: -12.891042709350586
    4. ' ' → logprob: -13.391042709350586
    5. ' =(' → logprob: -13.766042709350586
    6. '=(' → logprob: -13.891042709350586
    7. ',' → logprob: -13.891042709350586
    8. 's' → logprob: -14.766042709350586
    9. '=w' → logprob: -14.891042709350586
    10. '```' → logprob: -15.766042709350586

Token 52: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.08926714211702347
    2. ' (' → logprob: -2.4642672538757324
    3. '(' → logprob: -8.089266777038574
    4. '(int' → logprob: -11.839266777038574
    5. 'w' → logprob: -12.339266777038574
    6. '(l' → logprob: -13.089266777038574
    7. ' ' → logprob: -13.714266777038574
    8. '(s' → logprob: -13.964266777038574
    9. '```' → logprob: -13.964266777038574
    10. '(W' → logprob: -14.089266777038574

Token 53: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006715728435665369
    2. ' w' → logprob: -5.006715774536133
    3. '	w' → logprob: -16.131715774536133
    4. '>w' → logprob: -16.256715774536133
    5. '+w' → logprob: -17.006715774536133
    6. '_w' → logprob: -17.256715774536133
    7. '<w' → logprob: -17.256715774536133
    8. ' ' → logprob: -17.506715774536133
    9. '(w' → logprob: -17.756715774536133
    10. '=w' → logprob: -18.131715774536133

Token 54: '_max' (ID: 13731)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.002477677771821618
    2. '_max' → logprob: -6.002477645874023
    3. '_mid' → logprob: -13.877477645874023
    4. '_' → logprob: -14.377477645874023
    5. '_m' → logprob: -15.377477645874023
    6. 'min' → logprob: -15.877477645874023
    7. '_MIN' → logprob: -16.752477645874023
    8. '_low' → logprob: -18.752477645874023
    9. '_Min' → logprob: -18.752477645874023
    10. '	min' → logprob: -19.627477645874023

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3498092293739319
    2. ' +' → logprob: -1.224809169769287
    3. '+w' → logprob: -6.599809169769287
    4. ' ' → logprob: -14.099809646606445
    5. '＋' → logprob: -14.599809646606445
    6. 'w' → logprob: -15.224809646606445
    7. '<|end|>' → logprob: -15.349809646606445
    8. '+n' → logprob: -15.849809646606445
    9. ' plus' → logprob: -16.099809646606445
    10. ' ' → logprob: -16.224809646606445

Token 56: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.038044705986976624
    2. 'w' → logprob: -3.2880446910858154
    3. ' ' → logprob: -13.163044929504395
    4. '  ' → logprob: -15.288044929504395
    5. '   ' → logprob: -15.288044929504395
    6. '	w' → logprob: -15.413044929504395
    7. '1' → logprob: -15.788044929504395
    8. '```' → logprob: -15.913044929504395
    9. '    ' → logprob: -16.038043975830078
    10. '_w' → logprob: -16.163043975830078

Token 57: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0008887103176675737
    2. '_' → logprob: -7.250888824462891
    3. 'in' → logprob: -9.50088882446289
    4. '_max' → logprob: -10.00088882446289
    5. '_mid' → logprob: -10.50088882446289
    6. '_in' → logprob: -11.75088882446289
    7. '-' → logprob: -12.50088882446289
    8. '_m' → logprob: -12.87588882446289
    9. 'min' → logprob: -13.25088882446289
    10. '_id' → logprob: -13.25088882446289

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028469599783420563
    2. ')//' → logprob: -5.877847194671631
    3. ' )' → logprob: -10.377846717834473
    4. '+' → logprob: -12.127846717834473
    5. ')>>' → logprob: -12.252846717834473
    6. ' +' → logprob: -14.627846717834473
    7. '1' → logprob: -15.752846717834473
    8. '0' → logprob: -16.50284767150879
    9. '   ' → logprob: -16.62784767150879
    10. ' ' → logprob: -17.62784767150879

Token 59: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.16784711182117462
    2. '//' → logprob: -1.9178471565246582
    3. '>>' → logprob: -5.917847156524658
    4. ')//' → logprob: -5.917847156524658
    5. ')' → logprob: -6.542847156524658
    6. '```' → logprob: -7.917847156524658
    7. ' >>' → logprob: -8.6678466796875
    8. '2' → logprob: -9.9178466796875
    9. '1' → logprob: -10.6678466796875
    10. ' ' → logprob: -10.6678466796875

Token 60: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -17.375139236450195
    4. '   ' → logprob: -17.625139236450195
    5. '۲' → logprob: -18.375139236450195
    6. '２' → logprob: -18.875139236450195
    7. '  ' → logprob: -19.062639236450195
    8. '२' → logprob: -19.187639236450195
    9. '٢' → logprob: -19.437639236450195
    10. '২' → logprob: -20.000139236450195

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -17.125123977661133
    4. '```' → logprob: -17.750123977661133
    5. '  ' → logprob: -18.375123977661133
    6. '２' → logprob: -18.875123977661133
    7. '۲' → logprob: -19.000123977661133
    8. '२' → logprob: -19.687623977661133
    9. '    ' → logprob: -19.750123977661133
    10. '1' → logprob: -20.062623977661133

Token 62: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5736731290817261
    2. ':' → logprob: -1.948673129081726
    3. '<|end|>' → logprob: -2.4486732482910156
    4. ' ' → logprob: -3.0736732482910156
    5. '    
' → logprob: -3.1986732482910156
    6. ' if' → logprob: -3.8236732482910156
    7. '   ' → logprob: -3.8236732482910156
    8. '  
' → logprob: -4.073673248291016
    9. '+' → logprob: -4.823673248291016
    10. ' 
' → logprob: -4.823673248291016

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1482279896736145
    2. '<|end|>' → logprob: -2.8982279300689697
    3. ' if' → logprob: -4.148228168487549
    4. ':' → logprob: -4.148228168487549
    5. ' ' → logprob: -4.273228168487549
    6. '
' → logprob: -4.398228168487549
    7. '    
' → logprob: -4.648228168487549
    8. '  
' → logprob: -5.898228168487549
    9. '    ' → logprob: -6.023228168487549
    10. ' 
' → logprob: -6.273228168487549

Token 64: ' tracks' (ID: 22172)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.0330910682678223
    2. 'count' → logprob: -1.6580910682678223
    3. ' if' → logprob: -2.1580910682678223
    4. ' cut' → logprob: -3.1580910682678223
    5. ' sum' → logprob: -3.1580910682678223
    6. ' total' → logprob: -3.5330910682678223
    7. 'sum' → logprob: -3.5330910682678223
    8. ' cnt' → logprob: -3.9080910682678223
    9. 'cnt' → logprob: -3.9080910682678223
    10. ' max' → logprob: -4.283091068267822

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.681672990322113
    2. '=' → logprob: -1.5566730499267578
    3. '_count' → logprob: -2.681673049926758
    4. '_length' → logprob: -2.681673049926758
    5. '_needed' → logprob: -3.431673049926758
    6. '_len' → logprob: -3.931673049926758
    7. '_sum' → logprob: -4.056673049926758
    8. '_' → logprob: -4.181673049926758
    9. '_used' → logprob: -4.181673049926758
    10. '_lengths' → logprob: -5.306673049926758

Token 66: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08978617191314697
    2. '0' → logprob: -2.8397860527038574
    3. '1' → logprob: -3.7147860527038574
    4. ' [' → logprob: -6.839786052703857
    5. '[]' → logprob: -6.964786052703857
    6. ' []' → logprob: -7.089786052703857
    7. '[' → logprob: -10.089786529541016
    8. ' k' → logprob: -10.714786529541016
    9. ' []
' → logprob: -11.089786529541016
    10. '2' → logprob: -11.214786529541016

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6372374296188354
    2. '1' → logprob: -0.7622374296188354
    3. '[]' → logprob: -6.012237548828125
    4. ' ' → logprob: -6.512237548828125
    5. '[' → logprob: -8.012237548828125
    6. '[]
' → logprob: -9.012237548828125
    7. 'lag' → logprob: -9.887237548828125
    8. 'len' → logprob: -10.137237548828125
    9. 'k' → logprob: -10.387237548828125
    10. '100' → logprob: -10.637237548828125

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7703566551208496
    2. '<|end|>' → logprob: -1.2703566551208496
    3. '   ' → logprob: -1.5203566551208496
    4. '    
' → logprob: -4.52035665512085
    5. ' 
' → logprob: -5.02035665512085
    6. '<|end|>' → logprob: -5.27035665512085
    7. ' ' → logprob: -5.52035665512085
    8. ' for' → logprob: -5.77035665512085
    9. '    ' → logprob: -5.77035665512085
    10. '  
' → logprob: -6.64535665512085

Token 70: ' current' (ID: 2208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6070799231529236
    2. 'current' (adapté à ' current') → logprob: -1.3570799827575684
    3. 'length' → logprob: -2.4820799827575684
    4. 'i' → logprob: -3.2320799827575684
    5. ' for' → logprob: -3.7320799827575684
    6. 'total' → logprob: -5.357079982757568
    7. 'acc' → logprob: -5.482079982757568
    8. 'temp' → logprob: -5.607079982757568
    9. 'sum' → logprob: -5.607079982757568
    10. 'c' → logprob: -5.732079982757568

Token 71: ' =' (ID: 314)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.8955215811729431
    2. '_sum' → logprob: -1.520521640777588
    3. '_' → logprob: -1.770521640777588
    4. '_length' → logprob: -2.145521640777588
    5. '_w' → logprob: -3.145521640777588
    6. ' =' → logprob: -3.520521640777588
    7. '_len' → logprob: -5.395521640777588
    8. '=' → logprob: -5.395521640777588
    9. '_time' → logprob: -7.270521640777588
    10. '_load' → logprob: -7.270521640777588

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6363745331764221
    2. '0' → logprob: -0.7613745331764221
    3. 'w' → logprob: -6.261374473571777
    4. ' w' → logprob: -6.386374473571777
    5. 'lag' → logprob: -10.386374473571777
    6. ' -' → logprob: -10.823874473571777
    7. ' lag' → logprob: -10.886374473571777
    8. '-' → logprob: -11.323874473571777
    9. 'k' → logprob: -11.448874473571777
    10. '<|end|>' → logprob: -11.448874473571777

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001541642239317298
    2. 'w' → logprob: -6.626541614532471
    3. ' ' → logprob: -8.876542091369629
    4. 'lag' → logprob: -10.126542091369629
    5. '100' → logprob: -11.501542091369629
    6. 'k' → logprob: -11.876542091369629
    7. '1' → logprob: -11.876542091369629
    8. '-' → logprob: -13.689042091369629
    9. ' w' → logprob: -13.814042091369629
    10. 'n' → logprob: -13.939042091369629

Token 74: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28431832790374756
    2. '<|end|>' → logprob: -1.9093183279037476
    3. '
' → logprob: -2.659318447113037
    4. '    
' → logprob: -5.034318447113037
    5. ' 
' → logprob: -5.034318447113037
    6. '  
' → logprob: -5.159318447113037
    7. '<|end|>' → logprob: -5.784318447113037
    8. '   
' → logprob: -5.909318447113037
    9. '  ' → logprob: -6.534318447113037
    10. ' ' → logprob: -6.784318447113037

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03560663387179375
    2. '<|end|>' → logprob: -3.535606622695923
    3. '
' → logprob: -6.410606861114502
    4. ' for' → logprob: -6.910606861114502
    5. '<|end|>' → logprob: -7.410606861114502
    6. '    
' → logprob: -7.410606861114502
    7. '  ' → logprob: -7.535606861114502
    8. ' ' → logprob: -7.660606861114502
    9. ' 
' → logprob: -8.535606384277344
    10. '  
' → logprob: -8.785606384277344

Token 76: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5885043144226074
    2. ' for' → logprob: -0.8385043144226074
    3. '
' → logprob: -4.463504314422607
    4. '   ' → logprob: -7.963504314422607
    5. ' 
' → logprob: -8.463504791259766
    6. '<|end|>' → logprob: -9.088504791259766
    7. 'while' → logprob: -9.713504791259766
    8. ' while' → logprob: -9.838504791259766
    9. '```' → logprob: -9.838504791259766
    10. '    
' → logprob: -9.963504791259766

Token 77: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8025323152542114
    2. ' l' → logprob: -1.5525323152542114
    3. 'i' → logprob: -2.177532196044922
    4. ' i' → logprob: -2.552532196044922
    5. ' length' → logprob: -2.677532196044922
    6. 'length' → logprob: -3.552532196044922
    7. ' weight' → logprob: -4.552532196044922
    8. ' track' → logprob: -4.802532196044922
    9. 'weight' → logprob: -5.177532196044922
    10. 'x' → logprob: -5.927532196044922

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036827363073825836
    2. 'in' → logprob: -5.628682613372803
    3. 'n' → logprob: -10.128683090209961
    4. ' ' → logprob: -11.253683090209961
    5. ',' → logprob: -11.503683090209961
    6. '<|end|>' → logprob: -12.753683090209961
    7. ')' → logprob: -12.878683090209961
    8. 'range' → logprob: -13.253683090209961
    9. '   ' → logprob: -13.753683090209961
    10. 's' → logprob: -13.753683090209961

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05967007577419281
    2. ' lag' → logprob: -3.4346699714660645
    3. 'range' → logprob: -3.8096699714660645
    4. 'lag' → logprob: -5.8096699714660645
    5. '(range' → logprob: -9.247170448303223
    6. ' ' → logprob: -9.497170448303223
    7. ' rage' → logprob: -9.684670448303223
    8. ' rang' → logprob: -9.934670448303223
    9. '   ' → logprob: -10.372170448303223
    10. '  ' → logprob: -10.934670448303223

Token 80: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00032926726271398365
    2. 'n' → logprob: -8.37532901763916
    3. '(len' → logprob: -10.00032901763916
    4. '(' → logprob: -10.12532901763916
    5. '(l' → logprob: -12.25032901763916
    6. ' n' → logprob: -12.50032901763916
    7. ' (' → logprob: -12.75032901763916
    8. 'len' → logprob: -14.12532901763916
    9. '   ' → logprob: -14.62532901763916
    10. 'l' → logprob: -15.62532901763916

Token 81: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3882802128791809
    2. '):
' → logprob: -1.1382801532745361
    3. ':' → logprob: -7.013280391693115
    4. '):
' → logprob: -8.638279914855957
    5. ')' → logprob: -9.013279914855957
    6. ':
' → logprob: -9.888279914855957
    7. '   ' → logprob: -10.013279914855957
    8. ' ):' → logprob: -10.388279914855957
    9. ' ):
' → logprob: -11.013279914855957
    10. ',' → logprob: -11.013279914855957

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33890366554260254
    2. '   ' → logprob: -1.5889036655426025
    3. '    ' → logprob: -4.213903427124023
    4. '<|end|>' → logprob: -4.338903427124023
    5. ':' → logprob: -4.588903427124023
    6. ' ' → logprob: -4.713903427124023
    7. '+' → logprob: -4.963903427124023
    8. '        
' → logprob: -5.088903427124023
    9. ':
' → logprob: -5.588903427124023
    10. ' 
' → logprob: -5.713903427124023

Token 83: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.21962007880210876
    2. ' current' → logprob: -1.9696201086044312
    3. 'if' (adapté à ' if') → logprob: -3.0946199893951416
    4. ' if' → logprob: -4.719620227813721
    5. '   ' → logprob: -5.719620227813721
    6. '       ' → logprob: -9.594619750976562
    7. '	current' → logprob: -10.219619750976562
    8. ' ' → logprob: -10.469619750976562
    9. '           ' → logprob: -10.969619750976562
    10. '```' → logprob: -11.969619750976562

Token 84: ' lag' (ID: 9797)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1266777664422989
    2. 'current' → logprob: -2.2516777515411377
    3. 'lag' → logprob: -4.876677989959717
    4. ' lag' → logprob: -5.126677989959717
    5. '   ' → logprob: -9.251677513122559
    6. 'lags' → logprob: -10.126677513122559
    7. ' ' → logprob: -11.376677513122559
    8. '(current' → logprob: -11.376677513122559
    9. '	current' → logprob: -12.001677513122559
    10. 'cur' → logprob: -12.001677513122559

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.842555426876061e-06
    2. '[' → logprob: -12.375004768371582
    3. '[l' → logprob: -15.500004768371582
    4. '[n' → logprob: -15.625004768371582
    5. ' [' → logprob: -16.2500057220459
    6. 'i' → logprob: -17.3750057220459
    7. '```' → logprob: -17.7500057220459
    8. '   ' → logprob: -18.0000057220459
    9. '[s' → logprob: -18.1250057220459
    10. '[a' → logprob: -18.2500057220459

Token 86: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.35002729296684265
    2. '>' → logprob: -1.725027322769165
    3. ' +' → logprob: -2.850027322769165
    4. '+' → logprob: -3.725027322769165
    5. ' <=' → logprob: -3.725027322769165
    6. ' >=' → logprob: -5.350027084350586
    7. ' ' → logprob: -5.725027084350586
    8. '<=' → logprob: -6.475027084350586
    9. '>=' → logprob: -7.350027084350586
    10. ' <' → logprob: -8.725027084350586

Token 87: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.760874330997467
    2. '>' → logprob: -1.1358742713928223
    3. ' +' → logprob: -2.2608742713928223
    4. '+' → logprob: -2.6358742713928223
    5. ' <=' → logprob: -4.260874271392822
    6. ' >=' → logprob: -4.510874271392822
    7. '>=' → logprob: -5.135874271392822
    8. '<=' → logprob: -5.635874271392822
    9. ' ' → logprob: -8.01087474822998
    10. '<' → logprob: -8.76087474822998

Token 88: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.47444960474967957
    2. ' w' → logprob: -0.974449634552002
    3. '0' → logprob: -8.474449157714844
    4. ' ' → logprob: -9.224449157714844
    5. 'current' → logprob: -10.849449157714844
    6. '<|end|>' → logprob: -11.224449157714844
    7. ' current' → logprob: -11.349449157714844
    8. '	w' → logprob: -12.599449157714844
    9. ' ' → logprob: -12.849449157714844
    10. '   ' → logprob: -13.349449157714844

Token 89: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -3.8219583075260743e-05
    2. '_' → logprob: -11.000038146972656
    3. '_m' → logprob: -11.625038146972656
    4. '_max' → logprob: -11.875038146972656
    5. '_min' → logprob: -13.500038146972656
    6. 'mid' → logprob: -13.625038146972656
    7. ' _' → logprob: -14.000038146972656
    8. '_current' → logprob: -14.750038146972656
    9. '_middle' → logprob: -14.875038146972656
    10. ' ' → logprob: -15.000038146972656

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00856564100831747
    2. ':
' → logprob: -5.133565425872803
    3. ' or' → logprob: -6.258565425872803
    4. ' :' → logprob: -8.508565902709961
    5. ' and' → logprob: -8.633565902709961
    6. '<|end|>' → logprob: -8.633565902709961
    7. '<|end|>' → logprob: -10.633565902709961
    8. ':

' → logprob: -10.633565902709961
    9. '       ' → logprob: -10.883565902709961
    10. ',' → logprob: -11.008565902709961

Token 91: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.833378255367279
    2. '   ' → logprob: -1.0833783149719238
    3. '           ' → logprob: -2.333378314971924
    4. ' current' → logprob: -2.708378314971924
    5. 'current' → logprob: -3.333378314971924
    6. ' break' → logprob: -4.333378314971924
    7. 'break' → logprob: -5.583378314971924
    8. ':
' → logprob: -5.708378314971924
    9. ':' → logprob: -6.708378314971924
    10. '```' → logprob: -7.083378314971924

Token 92: ' tracks' (ID: 22172)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2523542046546936
    2. '       ' → logprob: -2.502354145050049
    3. '           ' → logprob: -3.127354145050049
    4. '
' → logprob: -3.377354145050049
    5. 'w' → logprob: -3.752354145050049
    6. '   ' → logprob: -4.627354145050049
    7. 'print' → logprob: -4.627354145050049
    8. 'tracks' (adapté à ' tracks') → logprob: -4.752354145050049
    9. '```' → logprob: -5.752354145050049
    10. ' break' → logprob: -6.127354145050049

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38699617981910706
    2. ' =' → logprob: -1.1369961500167847
    3. '+=' → logprob: -10.011996269226074
    4. '   ' → logprob: -10.636996269226074
    5. '           ' → logprob: -10.886996269226074
    6. '       ' → logprob: -11.761996269226074
    7. '+' → logprob: -11.886996269226074
    8. 'break' → logprob: -12.636996269226074
    9. '=-' → logprob: -12.636996269226074
    10. ' +=' → logprob: -12.761996269226074

Token 94: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.060246001929044724
    2. 'n' → logprob: -2.935245990753174
    3. '100' → logprob: -5.560245990753174
    4. ' k' → logprob: -7.560245990753174
    5. '10' → logprob: -7.935245990753174
    6. '999' → logprob: -7.935245990753174
    7. '   ' → logprob: -9.310246467590332
    8. ' n' → logprob: -9.810246467590332
    9. ' ' → logprob: -10.185246467590332
    10. 'float' → logprob: -11.060246467590332

Token 95: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004204250581096858
    2. ' +' → logprob: -8.000420570373535
    3. '-' → logprob: -9.500420570373535
    4. '1' → logprob: -13.125420570373535
    5. '+k' → logprob: -13.250420570373535
    6. '*' → logprob: -13.750420570373535
    7. '0' → logprob: -14.125420570373535
    8. '+n' → logprob: -14.375420570373535
    9. '=' → logprob: -14.625420570373535
    10. '```' → logprob: -14.625420570373535

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04323919489979744
    2. '       ' → logprob: -3.168239116668701
    3. '   ' → logprob: -9.04323959350586
    4. 'break' → logprob: -9.66823959350586
    5. ' break' → logprob: -11.54323959350586
    6. '               ' → logprob: -11.79323959350586
    7. '	       ' → logprob: -11.79323959350586
    8. '	   ' → logprob: -12.16823959350586
    9. '          ' → logprob: -12.79323959350586
    10. '	break' → logprob: -12.91823959350586

Token 97: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037894122302532196
    2. 'break' (adapté à ' break') → logprob: -3.6628940105438232
    3. ' break' → logprob: -4.537894248962402
    4. '       ' → logprob: -7.412894248962402
    5. '	break' → logprob: -9.287894248962402
    6. '   ' → logprob: -10.162894248962402
    7. '               ' → logprob: -11.037894248962402
    8. '	       ' → logprob: -11.537894248962402
    9. '            
' → logprob: -11.537894248962402
    10. '        
' → logprob: -11.662894248962402

Token 98: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04969562217593193
    2. '<|end|>' → logprob: -3.1746957302093506
    3. '
' → logprob: -5.4246954917907715
    4. ' else' → logprob: -6.9246954917907715
    5. 'else' → logprob: -7.6746954917907715
    6. '   ' → logprob: -8.29969596862793
    7. '        
' → logprob: -8.67469596862793
    8. '```' → logprob: -9.54969596862793
    9. '<|end|>' → logprob: -9.67469596862793
    10. ' 
' → logprob: -9.92469596862793

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023504134267568588
    2. '   ' → logprob: -3.7735040187835693
    3. '<|end|>' → logprob: -9.023504257202148
    4. '+' → logprob: -10.023504257202148
    5. ' ' → logprob: -10.523504257202148
    6. ' current' → logprob: -11.398504257202148
    7. '    ' → logprob: -11.523504257202148
    8. '           ' → logprob: -11.898504257202148
    9. '  ' → logprob: -12.023504257202148
    10. ' else' → logprob: -12.273504257202148

Token 100: ' elif' (ID: 9497)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.640454888343811
    2. ' if' → logprob: -1.015454888343811
    3. '   ' → logprob: -2.6404547691345215
    4. '       ' → logprob: -3.8904547691345215
    5. 'elif' (adapté à ' elif') → logprob: -5.1404547691345215
    6. ' elif' → logprob: -5.3904547691345215
    7. 'current' → logprob: -5.6404547691345215
    8. ' current' → logprob: -6.1404547691345215
    9. '
' → logprob: -7.3904547691345215
    10. '```' → logprob: -7.8904547691345215

Token 101: ' lag' (ID: 9797)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.08968165516853333
    2. 'current' → logprob: -2.464681625366211
    3. '(current' → logprob: -8.464681625366211
    4. '   ' → logprob: -8.839681625366211
    5. ' lag' → logprob: -9.214681625366211
    6. 'lag' → logprob: -9.339681625366211
    7. ' ' → logprob: -9.464681625366211
    8. '	current' → logprob: -10.339681625366211
    9. '    ' → logprob: -11.464681625366211
    10. '  ' → logprob: -11.652181625366211

Token 102: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.264322317088954e-05
    2. '[' → logprob: -10.375052452087402
    3. ' [' → logprob: -11.125052452087402
    4. '[current' → logprob: -13.125052452087402
    5. '   ' → logprob: -14.125052452087402
    6. 'i' → logprob: -14.500052452087402
    7. '[I' → logprob: -14.625052452087402
    8. '[k' → logprob: -15.000052452087402
    9. ' ' → logprob: -15.375052452087402
    10. '[j' → logprob: -15.562552452087402

Token 103: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.505472719669342
    2. '+' → logprob: -1.3804726600646973
    3. '>' → logprob: -2.5054726600646973
    4. ' >' → logprob: -3.0054726600646973
    5. ' <=' → logprob: -4.880472660064697
    6. '<=' → logprob: -5.505472660064697
    7. ' ' → logprob: -7.005472660064697
    8. '   ' → logprob: -7.505472660064697
    9. ']' → logprob: -7.630472660064697
    10. '  ' → logprob: -9.317973136901855

Token 104: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6373436450958252
    2. '+' → logprob: -1.7623436450958252
    3. ' >' → logprob: -1.7623436450958252
    4. '>' → logprob: -2.387343645095825
    5. ' <=' → logprob: -3.637343645095825
    6. '<=' → logprob: -4.762343406677246
    7. ' ' → logprob: -7.137343406677246
    8. '   ' → logprob: -8.887343406677246
    9. '  ' → logprob: -9.762343406677246
    10. 'current' → logprob: -9.887343406677246

Token 105: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.20141898095607758
    2. ' current' → logprob: -1.7014189958572388
    3. ' ' → logprob: -13.32641887664795
    4. '	current' → logprob: -13.82641887664795
    5. '   ' → logprob: -13.95141887664795
    6. '=current' → logprob: -14.20141887664795
    7. '(current' → logprob: -15.07641887664795
    8. '0' → logprob: -15.20141887664795
    9. '$current' → logprob: -15.45141887664795
    10. '[current' → logprob: -15.82641887664795

Token 106: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6476233005523682
    2. ' <=' → logprob: -0.8976233005523682
    3. '>' → logprob: -3.147623300552368
    4. '<=' → logprob: -3.647623300552368
    5. ' ' → logprob: -9.522623062133789
    6. ' <' → logprob: -10.522623062133789
    7. '<' → logprob: -10.772623062133789
    8. ' >=' → logprob: -11.147623062133789
    9. '>=' → logprob: -11.772623062133789
    10. '   ' → logprob: -12.522623062133789

Token 107: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3132724165916443
    2. ' w' → logprob: -1.313272476196289
    3. ' ' → logprob: -12.188272476196289
    4. '	w' → logprob: -12.563272476196289
    5. '   ' → logprob: -14.563272476196289
    6. '<|end|>' → logprob: -14.563272476196289
    7. '  ' → logprob: -14.688272476196289
    8. '<|end|>' → logprob: -15.563272476196289
    9. '(w' → logprob: -16.43827247619629
    10. '[w' → logprob: -16.56327247619629

Token 108: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -3.893480243277736e-05
    2. 'mid' → logprob: -10.250039100646973
    3. '_max' → logprob: -13.125039100646973
    4. 'Mid' → logprob: -14.625039100646973
    5. '_min' → logprob: -15.000039100646973
    6. '[mid' → logprob: -15.625039100646973
    7. ' mid' → logprob: -15.750039100646973
    8. 'id' → logprob: -15.750039100646973
    9. '_' → logprob: -16.625038146972656
    10. ' Mid' → logprob: -17.250038146972656

Token 109: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6346714496612549
    2. ':' → logprob: -0.7596714496612549
    3. '       ' → logprob: -6.384671211242676
    4. '           ' → logprob: -8.384671211242676
    5. '):
' → logprob: -9.634671211242676
    6. ':
' → logprob: -10.259671211242676
    7. ':

' → logprob: -11.509671211242676
    8. ',' → logprob: -11.509671211242676
    9. '   ' → logprob: -11.759671211242676
    10. ' :
' → logprob: -11.884671211242676

Token 110: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2833399474620819
    2. '           ' → logprob: -1.4083399772644043
    3. '```' → logprob: -6.908339977264404
    4. '
' → logprob: -7.283339977264404
    5. '   ' → logprob: -8.283339500427246
    6. '{
' → logprob: -9.908339500427246
    7. '<|end|>' → logprob: -9.908339500427246
    8. ':
' → logprob: -10.158339500427246
    9. '``' → logprob: -10.408339500427246
    10. '        
' → logprob: -11.033339500427246

Token 111: ' tracks' (ID: 22172)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5303717255592346
    2. 'tracks' (adapté à ' tracks') → logprob: -1.1553716659545898
    3. ' tracks' → logprob: -2.65537166595459
    4. '
' → logprob: -4.15537166595459
    5. '   ' → logprob: -5.03037166595459
    6. '```' → logprob: -6.15537166595459
    7. '           ' → logprob: -6.53037166595459
    8. '               ' → logprob: -8.90537166595459
    9. '``' → logprob: -8.90537166595459
    10. '_tracks' → logprob: -9.15537166595459

Token 112: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12695161998271942
    2. ' +=' → logprob: -2.1269516944885254
    3. '   ' → logprob: -11.376951217651367
    4. '=' → logprob: -11.751951217651367
    5. ']+=' → logprob: -13.126951217651367
    6. '+' → logprob: -14.001951217651367
    7. '```' → logprob: -14.751951217651367
    8. '       ' → logprob: -15.001951217651367
    9. '  ' → logprob: -15.751951217651367
    10. '           ' → logprob: -15.876951217651367

Token 113: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.12500762939453
    4. '```' → logprob: -19.50000762939453
    5. '  ' → logprob: -19.75000762939453
    6. '+' → logprob: -20.12500762939453
    7. '0' → logprob: -20.37500762939453
    8. 'current' → logprob: -20.75000762939453
    9. '１' → logprob: -21.62500762939453
    10. '`' → logprob: -21.93750762939453

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -19.875
    5. '0' → logprob: -20.6875
    6. 'current' → logprob: -21.0625
    7. '+' → logprob: -21.5
    8. '100' → logprob: -21.5625
    9. '۱' → logprob: -21.625
    10. '  ' → logprob: -21.625

Token 115: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16855844855308533
    2. 'current' → logprob: -2.168558359146118
    3. '           ' → logprob: -3.668558359146118
    4. ' current' → logprob: -5.543558597564697
    5. '\n' → logprob: -6.168558597564697
    6. '            
' → logprob: -6.543558597564697
    7. '        
' → logprob: -6.793558597564697
    8. '    
' → logprob: -7.043558597564697
    9. '  
' → logprob: -7.043558597564697
    10. '       ' → logprob: -7.168558597564697

Token 116: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3333304524421692
    2. '
' → logprob: -1.7083303928375244
    3. 'current' → logprob: -2.8333303928375244
    4. '       ' → logprob: -4.3333306312561035
    5. '            
' → logprob: -4.5833306312561035
    6. '        
' → logprob: -4.7083306312561035
    7. ' current' → logprob: -5.4583306312561035
    8. '    
' → logprob: -5.9583306312561035
    9. '\n' → logprob: -7.3333306312561035
    10. '  
' → logprob: -7.3333306312561035

Token 117: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' (adapté à ' current') → logprob: -0.029950646683573723
    2. ' current' → logprob: -3.5299506187438965
    3. '           ' → logprob: -8.529951095581055
    4. '
' → logprob: -13.654951095581055
    5. '   ' → logprob: -14.779951095581055
    6. '       ' → logprob: -15.404951095581055
    7. '	current' → logprob: -15.529951095581055
    8. ' ' → logprob: -15.904951095581055
    9. 'Current' → logprob: -16.154951095581055
    10. 'urrent' → logprob: -16.529951095581055

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. '<|end|>' → logprob: -14.724078178405762
    4. ' ' → logprob: -16.224077224731445
    5. '=int' → logprob: -16.224077224731445
    6. '=

' → logprob: -16.349077224731445
    7. '=
' → logprob: -16.599077224731445
    8. '＝' → logprob: -16.724077224731445
    9. 's' → logprob: -16.974077224731445
    10. '=l' → logprob: -17.349077224731445

Token 119: ' lag' (ID: 9797)
  Prédit: 'lag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lag' → logprob: -0.0008489366737194359
    2. '0' → logprob: -7.125848770141602
    3. ' lag' → logprob: -10.625848770141602
    4. 'lags' → logprob: -11.750848770141602
    5. '   ' → logprob: -12.500848770141602
    6. 'lig' → logprob: -13.125848770141602
    7. ' ' → logprob: -13.125848770141602
    8. '  ' → logprob: -14.375848770141602
    9. 'lap' → logprob: -14.750848770141602
    10. 'l' → logprob: -14.750848770141602

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00029756641015410423
    2. '[' → logprob: -8.125297546386719
    3. ' [' → logprob: -13.750297546386719
    4. '```' → logprob: -16.37529754638672
    5. '   ' → logprob: -16.62529754638672
    6. '[idx' → logprob: -17.12529754638672
    7. '[j' → logprob: -17.37529754638672
    8. '[int' → logprob: -17.50029754638672
    9. '[index' → logprob: -17.50029754638672
    10. '[ind' → logprob: -17.62529754638672

Token 121: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08027450740337372
    2. 'else' → logprob: -2.9552745819091797
    3. ' else' → logprob: -3.7052745819091797
    4. '   ' → logprob: -7.70527458190918
    5. 'elif' → logprob: -11.83027458190918
    6. '           ' → logprob: -12.20527458190918
    7. '	else' → logprob: -12.33027458190918
    8. '<|end|>' → logprob: -12.83027458190918
    9. '```' → logprob: -12.83027458190918
    10. '      ' → logprob: -13.70527458190918

Token 123: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9789978861808777
    2. ' else' → logprob: -1.1039979457855225
    3. 'else' (adapté à ' else') → logprob: -1.2289979457855225
    4. '   ' → logprob: -8.853998184204102
    5. '	else' → logprob: -10.853998184204102
    6. 'elif' → logprob: -11.603998184204102
    7. '<|end|>' → logprob: -12.603998184204102
    8. ' elif' → logprob: -13.228998184204102
    9. '_else' → logprob: -13.853998184204102
    10. '```' → logprob: -13.853998184204102

Token 124: ':
' (ID: 734)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.052104149013757706
    2. '       ' → logprob: -3.4271042346954346
    3. '           ' → logprob: -4.4271039962768555
    4. 'current' → logprob: -5.4271039962768555
    5. ':' → logprob: -7.5521039962768555
    6. ':
' → logprob: -7.5521039962768555
    7. '   ' → logprob: -8.177103996276855
    8. '        ' → logprob: -8.552103996276855
    9. '[current' → logprob: -8.927103996276855
    10. '	current' → logprob: -9.302103996276855

Token 125: '           ' (ID: 352)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.009804020635783672
    2. 'current' → logprob: -4.6348042488098145
    3. '           ' → logprob: -10.884803771972656
    4. '       ' → logprob: -11.259803771972656
    5. '	current' → logprob: -12.509803771972656
    6. '   ' → logprob: -12.884803771972656
    7. ' ' → logprob: -13.384803771972656
    8. '    ' → logprob: -13.509803771972656
    9. '(current' → logprob: -13.509803771972656
    10. ',current' → logprob: -13.634803771972656

Token 126: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.005235767923295498
    2. 'current' (adapté à ' current') → logprob: -5.25523567199707
    3. '           ' → logprob: -13.63023567199707
    4. '	current' → logprob: -15.00523567199707
    5. ' ' → logprob: -15.75523567199707
    6. 'Current' → logprob: -16.50523567199707
    7. '            ' → logprob: -16.75523567199707
    8. '(current' → logprob: -16.88023567199707
    9. '[current' → logprob: -17.00523567199707
    10. '$current' → logprob: -17.13023567199707

Token 127: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.575952410697937
    2. ' +=' → logprob: -0.825952410697937
    3. '=' → logprob: -11.325952529907227
    4. ']+=' → logprob: -14.575952529907227
    5. ' =' → logprob: -15.575952529907227
    6. '+' → logprob: -15.950952529907227
    7. '+=(' → logprob: -17.575952529907227
    8. '   ' → logprob: -17.575952529907227
    9. ' ' → logprob: -17.700952529907227
    10. '    ' → logprob: -17.950952529907227

Token 128: ' lag' (ID: 9797)
  Prédit: 'lag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lag' → logprob: -0.01815848983824253
    2. ' lag' → logprob: -4.018158435821533
    3. ' ' → logprob: -12.143158912658691
    4. '   ' → logprob: -13.768158912658691
    5. 'lags' → logprob: -14.393158912658691
    6. '  ' → logprob: -14.643158912658691
    7. 'l' → logprob: -14.893158912658691
    8. ' ' → logprob: -15.643158912658691
    9. 'lap' → logprob: -15.768158912658691
    10. 'lab' → logprob: -16.893157958984375

Token 129: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.1689596148207784e-05
    2. '[' → logprob: -9.875051498413086
    3. 'i' → logprob: -16.250051498413086
    4. '[I' → logprob: -16.500051498413086
    5. ' [' → logprob: -16.750051498413086
    6. '[user' → logprob: -17.875051498413086
    7. '[int' → logprob: -18.375051498413086
    8. '[ii' → logprob: -18.875051498413086
    9. '\[' → logprob: -19.000051498413086
    10. '[j' → logprob: -19.375051498413086

Token 130: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022302543744444847
    2. ' if' → logprob: -4.147302627563477
    3. 'if' → logprob: -6.022302627563477
    4. '
' → logprob: -6.647302627563477
    5. ' else' → logprob: -6.647302627563477
    6. 'else' → logprob: -7.272302627563477
    7. '```' → logprob: -8.897302627563477
    8. '    
' → logprob: -9.147302627563477
    9. ' tracks' → logprob: -9.397302627563477
    10. '       ' → logprob: -9.522302627563477

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019158536568284035
    2. ' if' → logprob: -4.394158363342285
    3. '   ' → logprob: -5.269158363342285
    4. 'tracks' → logprob: -7.144158363342285
    5. 'else' → logprob: -7.519158363342285
    6. 'w' → logprob: -9.644158363342285
    7. ' tracks' → logprob: -9.894158363342285
    8. '```' → logprob: -11.144158363342285
    9. ' else' → logprob: -11.894158363342285
    10. 'print' → logprob: -12.769158363342285

Token 133: ' tracks' (ID: 22172)
  Prédit: ' tracks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tracks' → logprob: -0.12724484503269196
    2. 'tracks' → logprob: -2.1272449493408203
    3. ' current' → logprob: -8.37724494934082
    4. ' w' → logprob: -10.25224494934082
    5. 'w' → logprob: -10.87724494934082
    6. 'current' → logprob: -11.37724494934082
    7. ' ' → logprob: -11.50224494934082
    8. ' (' → logprob: -13.37724494934082
    9. '_tracks' → logprob: -13.37724494934082
    10. '(tr' → logprob: -13.50224494934082

Token 134: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.9730397462844849
    2. '<=' → logprob: -1.4730397462844849
    3. ' <=' → logprob: -1.9730397462844849
    4. '<' → logprob: -1.9730397462844849
    5. '+' → logprob: -2.8480396270751953
    6. '>=' → logprob: -3.4730396270751953
    7. ' >=' → logprob: -4.098039627075195
    8. ' >' → logprob: -5.348039627075195
    9. '>' → logprob: -5.848039627075195
    10. ' +' → logprob: -6.598039627075195

Token 135: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.201457679271698
    2. ' k' → logprob: -1.7014577388763428
    3. '=k' → logprob: -10.201457977294922
    4. '=' → logprob: -12.201457977294922
    5. '	k' → logprob: -14.201457977294922
    6. ' ' → logprob: -14.201457977294922
    7. '   ' → logprob: -15.951457977294922
    8. '+k' → logprob: -16.076457977294922
    9. ' ' → logprob: -16.451457977294922
    10. '(k' → logprob: -16.451457977294922

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05493587628006935
    2. ':
' → logprob: -2.929935932159424
    3. '+' → logprob: -10.054935455322266
    4. ':

' → logprob: -12.929935455322266
    5. ' and' → logprob: -13.554935455322266
    6. ' :' → logprob: -14.054935455322266
    7. '<|end|>' → logprob: -14.054935455322266
    8. '):
' → logprob: -14.179935455322266
    9. '   ' → logprob: -14.179935455322266
    10. ',' → logprob: -14.429935455322266

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007986912503838539
    2. '   ' → logprob: -4.882987022399902
    3. ':' → logprob: -9.007987022399902
    4. '
' → logprob: -9.257987022399902
    5. ':
' → logprob: -10.132987022399902
    6. ' w' → logprob: -10.507987022399902
    7. '```' → logprob: -11.257987022399902
    8. 'w' → logprob: -11.382987022399902
    9. '        
' → logprob: -11.507987022399902
    10. '           ' → logprob: -11.882987022399902

Token 138: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.6937782168388367
    2. ' w' → logprob: -0.6937782168388367
    3. '   ' → logprob: -7.443778038024902
    4. '
' → logprob: -10.568778038024902
    5. '	w' → logprob: -11.818778038024902
    6. '       ' → logprob: -12.193778038024902
    7. '    
' → logprob: -13.068778038024902
    8. '
' → logprob: -13.443778038024902
    9. ' 
' → logprob: -14.318778038024902
    10. '    ' → logprob: -14.568778038024902

Token 139: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.1611696034669876
    2. '_min' → logprob: -1.9111696481704712
    3. '_mid' → logprob: -7.036169528961182
    4. 'max' → logprob: -9.66117000579834
    5. 'min' → logprob: -13.66117000579834
    6. '_' → logprob: -15.78617000579834
    7. 'mid' → logprob: -16.036169052124023
    8. '_m' → logprob: -16.786169052124023
    9. '=' → logprob: -16.786169052124023
    10. 'Max' → logprob: -17.286169052124023

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. '＝' → logprob: -16.35020637512207
    4. ' ' → logprob: -16.85020637512207
    5. '<|end|>' → logprob: -17.60020637512207
    6. ')' → logprob: -18.10020637512207
    7. '=w' → logprob: -18.60020637512207
    8. '=end' → logprob: -18.60020637512207
    9. ',' → logprob: -18.85020637512207
    10. '_mid' → logprob: -19.60020637512207

Token 141: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0024756586644798517
    2. ' w' → logprob: -6.002475738525391
    3. '	w' → logprob: -17.50247573852539
    4. '   ' → logprob: -18.37747573852539
    5. 'mid' → logprob: -18.50247573852539
    6. '=w' → logprob: -18.50247573852539
    7. '\' → logprob: -19.87747573852539
    8. '_w' → logprob: -20.87747573852539
    9. 'ww' → logprob: -21.00247573852539
    10. ' ' → logprob: -21.00247573852539

Token 142: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -5.061676347395405e-05
    2. 'id' → logprob: -10.00005054473877
    3. 'mid' → logprob: -13.00005054473877
    4. '_id' → logprob: -13.12505054473877
    5. '_m' → logprob: -14.75005054473877
    6. '_max' → logprob: -15.75005054473877
    7. '_' → logprob: -15.87505054473877
    8. '_middle' → logprob: -16.500051498413086
    9. '[mid' → logprob: -16.750051498413086
    10. '_min' → logprob: -17.625051498413086

Token 143: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13160370290279388
    2. 'else' → logprob: -2.131603717803955
    3. ' else' → logprob: -5.381603717803955
    4. '	else' → logprob: -9.756603240966797
    5. '
' → logprob: -12.881603240966797
    6. 'elif' → logprob: -13.756603240966797
    7. '    
' → logprob: -14.256603240966797
    8. '       ' → logprob: -14.381603240966797
    9. '_else' → logprob: -14.381603240966797
    10. '```' → logprob: -14.881603240966797

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3135460317134857
    2. 'else' → logprob: -1.313546061515808
    3. ' else' → logprob: -8.188546180725098
    4. '	else' → logprob: -12.188546180725098
    5. 'elif' → logprob: -13.938546180725098
    6. '```' → logprob: -15.813546180725098
    7. '       ' → logprob: -16.06354522705078
    8. '_else' → logprob: -16.93854522705078
    9. '  ' → logprob: -17.56354522705078
    10. '   ' → logprob: -18.06354522705078

Token 145: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.31561291217803955
    2. '   ' → logprob: -1.3156129121780396
    3. ' else' → logprob: -6.06561279296875
    4. 'elif' → logprob: -10.69061279296875
    5. '	else' → logprob: -12.56561279296875
    6. '  ' → logprob: -15.06561279296875
    7. '       ' → logprob: -15.44061279296875
    8. '```' → logprob: -16.06561279296875
    9. '_else' → logprob: -16.69061279296875
    10. ' elif' → logprob: -17.06561279296875

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7619369626045227
    2. ':
' → logprob: -1.261936902999878
    3. '       ' → logprob: -1.386936902999878
    4. '   ' → logprob: -8.636937141418457
    5. 'w' → logprob: -10.261937141418457
    6. ' :
' → logprob: -10.511937141418457
    7. ':w' → logprob: -11.136937141418457
    8. ':
' → logprob: -11.386937141418457
    9. ':

' → logprob: -12.511937141418457
    10. ' :' → logprob: -12.511937141418457

Token 147: '       ' (ID: 309)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.05399617552757263
    2. '       ' → logprob: -3.3039960861206055
    3. '   ' → logprob: -4.4289960861206055
    4. ' w' → logprob: -5.5539960861206055
    5. '    ' → logprob: -11.678996086120605
    6. '	w' → logprob: -12.053996086120605
    7. ' ' → logprob: -12.178996086120605
    8. '     ' → logprob: -12.303996086120605
    9. '  ' → logprob: -12.928996086120605
    10. '           ' → logprob: -13.553996086120605

Token 148: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.00010604646377032623
    2. ' w' → logprob: -9.875105857849121
    3. '       ' → logprob: -9.875105857849121
    4. '   ' → logprob: -12.750105857849121
    5. '	w' → logprob: -16.875106811523438
    6. '           ' → logprob: -17.000106811523438
    7. '    ' → logprob: -17.875106811523438
    8. '     ' → logprob: -18.125106811523438
    9. ' ' → logprob: -18.750106811523438
    10. '  ' → logprob: -19.125106811523438

Token 149: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -2.45848218582978e-06
    2. '_max' → logprob: -13.25000286102295
    3. 'min' → logprob: -14.75000286102295
    4. '_' → logprob: -16.375001907348633
    5. '_mid' → logprob: -16.500001907348633
    6. '_m' → logprob: -18.625001907348633
    7. '_MIN' → logprob: -19.000001907348633
    8. ' _' → logprob: -20.000001907348633
    9. 'in' → logprob: -20.625001907348633
    10. '_num' → logprob: -20.750001907348633

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761341452598572
    2. '=' → logprob: -0.8261341452598572
    3. ' +=' → logprob: -8.826133728027344
    4. '+=' → logprob: -9.951133728027344
    5. '＝' → logprob: -17.076133728027344
    6. ' ' → logprob: -17.076133728027344
    7. '=w' → logprob: -17.826133728027344
    8. '.=' → logprob: -18.076133728027344
    9. 'w' → logprob: -18.326133728027344
    10. '_=' → logprob: -19.326133728027344

Token 151: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.048587486147880554
    2. ' w' → logprob: -3.0485875606536865
    3. '	w' → logprob: -15.923587799072266
    4. '   ' → logprob: -18.173587799072266
    5. '(w' → logprob: -18.798587799072266
    6. ' ' → logprob: -19.048587799072266
    7. '_w' → logprob: -19.923587799072266
    8. '=w' → logprob: -20.048587799072266
    9. '>w' → logprob: -20.548587799072266
    10. ''w' → logprob: -20.548587799072266

Token 152: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -0.0519847646355629
    2. 'id' → logprob: -3.0519847869873047
    3. '_min' → logprob: -5.801984786987305
    4. 'mid' → logprob: -8.426984786987305
    5. '_max' → logprob: -9.051984786987305
    6. 'in' → logprob: -11.426984786987305
    7. '_id' → logprob: -11.926984786987305
    8. '+' → logprob: -12.301984786987305
    9. 'Mid' → logprob: -13.051984786987305
    10. 'ax' → logprob: -13.551984786987305

Token 153: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019481368362903595
    2. ' +' → logprob: -4.019481182098389
    3. '<|end|>' → logprob: -8.019481658935547
    4. '+
' → logprob: -8.144481658935547
    5. ' 
' → logprob: -8.269481658935547
    6. ' ' → logprob: -8.644481658935547
    7. '
' → logprob: -8.769481658935547
    8. '   ' → logprob: -10.144481658935547
    9. ' +
' → logprob: -10.644481658935547
    10. '+w' → logprob: -11.019481658935547

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.623244553338736e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -16.87506675720215
    4. '```' → logprob: -17.62506675720215
    5. '  ' → logprob: -19.75006675720215
    6. '0' → logprob: -19.87506675720215
    7. '-' → logprob: -21.12506675720215
    8. ' ' → logprob: -21.25006675720215
    9. '`' → logprob: -21.25006675720215
    10. '2' → logprob: -21.68756675720215

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -15.875006675720215
    4. '   ' → logprob: -16.6250057220459
    5. '0' → logprob: -18.5000057220459
    6. '  ' → logprob: -19.0625057220459
    7. '`' → logprob: -19.3125057220459
    8. '``' → logprob: -19.6250057220459
    9. '
' → logprob: -20.4375057220459
    10. '       ' → logprob: -20.5000057220459

Token 156: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0206720617134124e-05
    2. '
' → logprob: -12.25001049041748
    3. ')' → logprob: -12.87501049041748
    4. ' print' → logprob: -13.62501049041748
    5. 'w' → logprob: -14.87501049041748
    6. 'else' → logprob: -15.25001049041748
    7. '```' → logprob: -15.25001049041748
    8. '(print' → logprob: -15.37501049041748
    9. '#print' → logprob: -15.87501049041748
    10. '#' → logprob: -16.125009536743164

Token 157: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.546478935983032e-05
    2. '
' → logprob: -11.250025749206543
    3. ' print' → logprob: -12.000025749206543
    4. ')' → logprob: -12.500025749206543
    5. ')
' → logprob: -13.125025749206543
    6. '(print' → logprob: -15.375025749206543
    7. '```' → logprob: -16.375024795532227
    8. 'else' → logprob: -16.750024795532227
    9. 'w' → logprob: -16.750024795532227
    10. '#print' → logprob: -17.250024795532227

Token 158: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0005573204252868891
    2. '(' → logprob: -7.5005574226379395
    3. '()' → logprob: -12.625556945800781
    4. 'w' → logprob: -14.125556945800781
    5. ' (' → logprob: -15.500556945800781
    6. '((' → logprob: -16.62555694580078
    7. '(
' → logprob: -17.37555694580078
    8. '(n' → logprob: -17.87555694580078
    9. '(W' → logprob: -18.50055694580078
    10. '('' → logprob: -18.62555694580078

Token 159: '_max' (ID: 13731)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -3.7697225252486533e-06
    2. '_max' → logprob: -12.500003814697266
    3. '_' → logprob: -17.250003814697266
    4. ' _' → logprob: -18.125003814697266
    5. '_m' → logprob: -18.750003814697266
    6. '_)' → logprob: -18.750003814697266
    7. 'min' → logprob: -19.000003814697266
    8. ')_' → logprob: -19.250003814697266
    9. '_MIN' → logprob: -19.625003814697266
    10. ')' → logprob: -20.250003814697266

Token 160: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ' )' → logprob: -12.500004768371582
    3. ')
' → logprob: -14.125004768371582
    4. '))' → logprob: -16.3750057220459
    5. ')`' → logprob: -16.5000057220459
    6. '+' → logprob: -16.7500057220459
    7. ')#' → logprob: -16.7500057220459
    8. '`)' → logprob: -17.2500057220459
    9. '#' → logprob: -18.3750057220459
    10. '```' → logprob: -18.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 158
Tokens correctement prédits (1ère position, stricte): 67
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 42.41%
Précision adaptée (1ère position): 46.20%
Précision (top 10): 89.24%
================================================================================
