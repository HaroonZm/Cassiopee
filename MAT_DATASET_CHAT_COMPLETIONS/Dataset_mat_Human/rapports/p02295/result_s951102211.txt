================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
q = int(input())
for i in range(q):
    a,b,c,d,e,f,g,h = [int(i) for i in input().split()]
    A = a*d-b*c
    B = e*h-f*g
    C = d-b
    D = c-a
    E = f-h
    F = e-g
    det = C*F - D*E
    print((A*F + B*D)/det,(A*E + B*C)/det)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002115404698997736
    2. '(q' → logprob: -7.002115249633789
    3. '```' → logprob: -8.127115249633789
    4. 'q' → logprob: -8.377115249633789
    5. ''' → logprob: -8.377115249633789
    6. '('' → logprob: -8.752115249633789
    7. '("("' → logprob: -9.252115249633789
    8. '`' → logprob: -10.127115249633789
    9. ')' → logprob: -10.502115249633789
    10. '[' → logprob: -10.752115249633789

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14872492849826813
    2. ')' → logprob: -2.0237250328063965
    3. '()' → logprob: -5.5237250328063965
    4. '())' → logprob: -7.7737250328063965
    5. '(
' → logprob: -8.273724555969238
    6. '('' → logprob: -8.648724555969238
    7. '("("' → logprob: -8.898724555969238
    8. '```' → logprob: -9.023724555969238
    9. '))' → logprob: -9.148724555969238
    10. '[' → logprob: -9.398724555969238

Token 5: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3129083514213562
    2. '\n' → logprob: -1.687908411026001
    3. '*' → logprob: -3.437908411026001
    4. '%' → logprob: -3.937908411026001
    5. '\' → logprob: -4.562908172607422
    6. '#' → logprob: -5.187908172607422
    7. ' ' → logprob: -5.562908172607422
    8. ')' → logprob: -6.187908172607422
    9. '+
' → logprob: -6.562908172607422
    10. '=' → logprob: -7.062908172607422

Token 6: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03570958971977234
    2. ' i' → logprob: -3.5357096195220947
    3. '  ' → logprob: -5.160709381103516
    4. ' q' → logprob: -8.910709381103516
    5. 'i' → logprob: -10.535709381103516
    6. '_' → logprob: -11.535709381103516
    7. ' ' → logprob: -11.785709381103516
    8. ' ‌' → logprob: -11.785709381103516
    9. ' _' → logprob: -12.785709381103516
    10. ' t' → logprob: -13.160709381103516

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4438132345676422
    2. ' ' → logprob: -1.0688132047653198
    3. '(' → logprob: -5.443813323974609
    4. 'in' → logprob: -5.943813323974609
    5. '  ' → logprob: -6.068813323974609
    6. ' :' → logprob: -6.568813323974609
    7. ':' → logprob: -6.818813323974609
    8. ')' → logprob: -7.318813323974609
    9. ',' → logprob: -7.943813323974609
    10. ' n' → logprob: -8.06881332397461

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038183555006980896
    2. 'range' → logprob: -3.2881834506988525
    3. ' ' → logprob: -8.913183212280273
    4. ' q' → logprob: -12.538183212280273
    5. ' in' → logprob: -13.413183212280273
    6. '(range' → logprob: -14.163183212280273
    7. '	range' → logprob: -14.163183212280273
    8. '_range' → logprob: -15.788183212280273
    9. ')' → logprob: -15.788183212280273
    10. ' xrange' → logprob: -15.913183212280273

Token 9: '(q' (ID: 21479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002555807586759329
    2. '(q' → logprob: -6.002555847167969
    3. ' (' → logprob: -10.127555847167969
    4. '(len' → logprob: -10.752555847167969
    5. '(n' → logprob: -11.877555847167969
    6. '(i' → logprob: -12.252555847167969
    7. '(range' → logprob: -13.252555847167969
    8. '((' → logprob: -13.377555847167969
    9. '(`' → logprob: -13.502555847167969
    10. '(length' → logprob: -15.127555847167969

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030663851648569107
    2. ')' → logprob: -3.5306639671325684
    3. ':' → logprob: -7.030663967132568
    4. '+' → logprob: -11.78066349029541
    5. '):
' → logprob: -12.15566349029541
    6. ':)' → logprob: -12.65566349029541
    7. '[' → logprob: -12.90566349029541
    8. ' ):' → logprob: -13.15566349029541
    9. ',' → logprob: -13.40566349029541
    10. '():' → logprob: -14.53066349029541

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033985789865255356
    2. '    
' → logprob: -4.033985614776611
    3. '    ' → logprob: -5.158985614776611
    4. ' ' → logprob: -5.158985614776611
    5. ' 
' → logprob: -6.158985614776611
    6. '     
' → logprob: -7.533985614776611
    7. ' input' → logprob: -8.65898609161377
    8. ' print' → logprob: -8.78398609161377
    9. '```' → logprob: -8.78398609161377
    10. 'n' → logprob: -9.15898609161377

Token 12: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6045251488685608
    2. ' n' → logprob: -1.104525089263916
    3. 'n' → logprob: -2.229525089263916
    4. ' query' → logprob: -5.979525089263916
    5. ' x' → logprob: -6.229525089263916
    6. 'a' (adapté à ' a') → logprob: -6.979525089263916
    7. ' line' → logprob: -6.979525089263916
    8. ' t' → logprob: -7.104525089263916
    9. ' ' → logprob: -7.354525089263916
    10. ' a' → logprob: -7.354525089263916

Token 13: ',b' (ID: 17568)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2508680820465088
    2. '[' → logprob: -1.5008680820465088
    3. ' =' → logprob: -2.375868082046509
    4. '   ' → logprob: -2.750868082046509
    5. 'r' → logprob: -2.875868082046509
    6. '.append' → logprob: -3.000868082046509
    7. '.' → logprob: -3.375868082046509
    8. '=' → logprob: -3.500868082046509
    9. 'pp' → logprob: -3.625868082046509
    10. ',' → logprob: -3.875868082046509

Token 14: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2436138093471527
    2. ' =' → logprob: -1.618613839149475
    3. ',' → logprob: -4.1186137199401855
    4. ')' → logprob: -6.6186137199401855
    5. '   ' → logprob: -9.243614196777344
    6. '<|end|>' → logprob: -9.243614196777344
    7. '[' → logprob: -9.743614196777344
    8. ' ,' → logprob: -10.243614196777344
    9. '```' → logprob: -10.868614196777344
    10. ')=' → logprob: -10.993614196777344

Token 15: ',d' (ID: 26159)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35419514775276184
    2. '=' → logprob: -1.2291951179504395
    3. ',' → logprob: -5.6041951179504395
    4. ')' → logprob: -6.2291951179504395
    5. ' ,' → logprob: -11.104195594787598
    6. '   ' → logprob: -11.354195594787598
    7. ' ' → logprob: -11.604195594787598
    8. '=input' → logprob: -11.604195594787598
    9. ')=' → logprob: -11.979195594787598
    10. ' )' → logprob: -12.104195594787598

Token 16: ',e' (ID: 43127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2830394506454468
    2. ' =' → logprob: -1.4080394506454468
    3. ',' → logprob: -6.533039569854736
    4. ')' → logprob: -8.033039093017578
    5. '=input' → logprob: -10.158039093017578
    6. '   ' → logprob: -11.158039093017578
    7. ',e' → logprob: -11.158039093017578
    8. '>' → logprob: -11.908039093017578
    9. ' ' → logprob: -12.158039093017578
    10. ')=' → logprob: -12.408039093017578

Token 17: ',f' (ID: 38733)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6336015462875366
    2. '=' → logprob: -0.7586015462875366
    3. ',' → logprob: -7.008601665496826
    4. ')' → logprob: -10.383601188659668
    5. ' ,' → logprob: -11.133601188659668
    6. ' ' → logprob: -11.133601188659668
    7. '[' → logprob: -12.133601188659668
    8. '  ' → logprob: -12.258601188659668
    9. '```' → logprob: -12.258601188659668
    10. '`' → logprob: -12.633601188659668

Token 18: ',g' (ID: 44461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5236963629722595
    2. '=' → logprob: -0.8986963629722595
    3. ',' → logprob: -7.648696422576904
    4. ' ' → logprob: -10.273695945739746
    5. ')' → logprob: -10.398695945739746
    6. ' ,' → logprob: -11.898695945739746
    7. '   ' → logprob: -12.398695945739746
    8. '`' → logprob: -12.523695945739746
    9. '```' → logprob: -12.648695945739746
    10. '<|end|>' → logprob: -12.898695945739746

Token 19: ',h' (ID: 42751)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5243931412696838
    2. '=' → logprob: -0.8993931412696838
    3. ',' → logprob: -6.774393081665039
    4. ')' → logprob: -9.524393081665039
    5. ' ' → logprob: -10.899393081665039
    6. ' ,' → logprob: -11.899393081665039
    7. '=int' → logprob: -12.399393081665039
    8. '<|end|>' → logprob: -12.524393081665039
    9. '```' → logprob: -12.649393081665039
    10. '   ' → logprob: -12.899393081665039

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28153157234191895
    2. '=' → logprob: -1.406531572341919
    3. ',' → logprob: -8.28153133392334
    4. ')' → logprob: -9.90653133392334
    5. ' ' → logprob: -10.53153133392334
    6. '   ' → logprob: -10.65653133392334
    7. '=int' → logprob: -12.03153133392334
    8. ' ,' → logprob: -12.90653133392334
    9. '    ' → logprob: -12.90653133392334
    10. '  ' → logprob: -13.40653133392334

Token 21: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1437627226114273
    2. 'map' → logprob: -2.0187628269195557
    3. ' list' → logprob: -7.518762588500977
    4. ' input' → logprob: -8.893762588500977
    5. 'list' → logprob: -9.018762588500977
    6. 'input' → logprob: -9.143762588500977
    7. '[' → logprob: -10.018762588500977
    8. ' ' → logprob: -10.143762588500977
    9. '   ' → logprob: -10.268762588500977
    10. ' [' → logprob: -10.518762588500977

Token 22: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002487903693690896
    2. ' int' → logprob: -6.002488136291504
    3. 'map' → logprob: -11.502488136291504
    4. ' map' → logprob: -13.252488136291504
    5. '(int' → logprob: -16.127487182617188
    6. ']int' → logprob: -16.252487182617188
    7. '0' → logprob: -16.752487182617188
    8. '<int' → logprob: -17.002487182617188
    9. '[int' → logprob: -17.002487182617188
    10. '*' → logprob: -17.377487182617188

Token 23: '(i' (ID: 3649)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06383095681667328
    2. '(x' → logprob: -2.813830852508545
    3. '(' → logprob: -6.438830852508545
    4. '(i' → logprob: -8.813831329345703
    5. 'input' → logprob: -9.563831329345703
    6. ' (' → logprob: -11.313831329345703
    7. '(
' → logprob: -11.813831329345703
    8. '(

' → logprob: -12.438831329345703
    9. ' input' → logprob: -13.063831329345703
    10. '(...)' → logprob: -13.313831329345703

Token 24: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013160820119082928
    2. '(x' → logprob: -4.638160705566406
    3. 'input' → logprob: -5.888160705566406
    4. ')' → logprob: -7.513160705566406
    5. '(' → logprob: -11.013160705566406
    6. '(i' → logprob: -11.138160705566406
    7. '=input' → logprob: -11.513160705566406
    8. 'x' → logprob: -11.888160705566406
    9. ' input' → logprob: -12.138160705566406
    10. ',input' → logprob: -12.263160705566406

Token 25: ' for' (ID: 395)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0017737116431817412
    2. 'input' → logprob: -6.751773834228516
    3. '(x' → logprob: -7.501773834228516
    4. '(' → logprob: -10.376773834228516
    5. ' input' → logprob: -11.751773834228516
    6. '=input' → logprob: -13.001773834228516
    7. ']' → logprob: -13.251773834228516
    8. ')' → logprob: -13.251773834228516
    9. ' (' → logprob: -13.626773834228516
    10. 'x' → logprob: -13.626773834228516

Token 26: ' i' (ID: 575)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.006732541602104902
    2. 'input' → logprob: -5.00673246383667
    3. '(input' → logprob: -11.381732940673828
    4. ' ' → logprob: -12.756732940673828
    5. ' range' → logprob: -13.756732940673828
    6. '=input' → logprob: -14.756732940673828
    7. '_input' → logprob: -14.881732940673828
    8. ' raw' → logprob: -15.131732940673828
    9. '<|end|>' → logprob: -15.506732940673828
    10. '	input' → logprob: -15.881732940673828

Token 27: ' in' (ID: 306)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5261812806129456
    2. 'input' → logprob: -1.2761812210083008
    3. '(input' → logprob: -2.401181221008301
    4. '(' → logprob: -3.401181221008301
    5. ' in' → logprob: -5.526181221008301
    6. ' ' → logprob: -6.901181221008301
    7. ' (' → logprob: -7.526181221008301
    8. 'in' → logprob: -8.6511812210083
    9. '=input' → logprob: -8.9011812210083
    10. ']' → logprob: -9.6511812210083

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6326256394386292
    2. ' input' → logprob: -0.7576256394386292
    3. ' ' → logprob: -11.757625579833984
    4. ' range' → logprob: -12.132625579833984
    5. '(input' → logprob: -12.257625579833984
    6. 'range' → logprob: -12.257625579833984
    7. '<input' → logprob: -14.507625579833984
    8. '=input' → logprob: -14.632625579833984
    9. '  ' → logprob: -14.757625579833984
    10. '   ' → logprob: -14.757625579833984

Token 29: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011835616314783692
    2. '()' → logprob: -6.75118350982666
    3. '()]' → logprob: -11.25118350982666
    4. '()].' → logprob: -16.126184463500977
    5. '(' → logprob: -16.501184463500977
    6. '())' → logprob: -16.626184463500977
    7. ' ().' → logprob: -17.376184463500977
    8. '()
' → logprob: -17.751184463500977
    9. 'split' → logprob: -17.876184463500977
    10. '()`' → logprob: -18.501184463500977

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005958048277534544
    2. 'strip' → logprob: -7.500595569610596
    3. 'rstrip' → logprob: -10.125596046447754
    4. ' split' → logprob: -13.000596046447754
    5. 'spl' → logprob: -15.000596046447754
    6. '(split' → logprob: -15.500596046447754
    7. '.split' → logprob: -18.625595092773438
    8. 's' → logprob: -19.125595092773438
    9. ' strip' → logprob: -19.500595092773438
    10. 'replace' → logprob: -19.500595092773438

Token 31: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0032017158810049295
    2. '()' → logprob: -6.003201484680176
    3. '())' → logprob: -7.503201484680176
    4. '(' → logprob: -8.753201484680176
    5. '('' → logprob: -11.503201484680176
    6. ']' → logprob: -13.378201484680176
    7. ')]' → logprob: -13.503201484680176
    8. '()]
' → logprob: -14.253201484680176
    9. '()][' → logprob: -14.628201484680176
    10. '()],' → logprob: -14.628201484680176

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.51106196641922
    2. '   ' → logprob: -1.5110619068145752
    3. '
' → logprob: -2.886061906814575
    4. '<|end|>' → logprob: -3.386061906814575
    5. '\n' → logprob: -3.761061906814575
    6. ' if' → logprob: -3.886061906814575
    7. ',' → logprob: -5.011062145233154
    8. ' ' → logprob: -5.136062145233154
    9. ')' → logprob: -5.136062145233154
    10. '    
' → logprob: -5.636062145233154

Token 33: ' A' (ID: 355)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6739604473114014
    2. '   ' → logprob: -1.7989604473114014
    3. 'if' → logprob: -1.9239604473114014
    4. 'n' → logprob: -3.0489604473114014
    5. 'i' → logprob: -3.7989604473114014
    6. '    ' → logprob: -4.0489606857299805
    7. 'x' → logprob: -4.2989606857299805
    8. 's' → logprob: -4.7989606857299805
    9. ')' → logprob: -4.9239606857299805
    10. 'print' → logprob: -4.9239606857299805

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3455504179000854
    2. '+' → logprob: -1.4705504179000854
    3. '=' → logprob: -1.5955504179000854
    4. ' +=' → logprob: -2.720550537109375
    5. ',' → logprob: -2.970550537109375
    6. '+=' → logprob: -3.095550537109375
    7. '1' → logprob: -3.720550537109375
    8. '[' → logprob: -4.345550537109375
    9. 'B' → logprob: -4.470550537109375
    10. 'b' → logprob: -4.720550537109375

Token 35: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48479554057121277
    2. 'a' → logprob: -1.2347955703735352
    3. ' (' → logprob: -3.234795570373535
    4. ' [' → logprob: -4.234795570373535
    5. ' max' → logprob: -4.484795570373535
    6. '[a' → logprob: -4.484795570373535
    7. '(a' → logprob: -4.859795570373535
    8. ' ' → logprob: -5.984795570373535
    9. ' b' → logprob: -6.734795570373535
    10. 'max' → logprob: -7.109795570373535

Token 36: '*d' (ID: 81685)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14612434804439545
    2. ' +' → logprob: -2.5211243629455566
    3. '+b' → logprob: -3.0211243629455566
    4. '*' → logprob: -5.771124362945557
    5. '+B' → logprob: -6.021124362945557
    6. '-' → logprob: -7.646124362945557
    7. ' *' → logprob: -8.271123886108398
    8. '+a' → logprob: -9.021123886108398
    9. '*b' → logprob: -9.521123886108398
    10. ' -' → logprob: -9.521123886108398

Token 37: '-b' (ID: 2118)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0704796239733696
    2. ' +' → logprob: -2.82047963142395
    3. '-' → logprob: -5.695479393005371
    4. '*' → logprob: -5.945479393005371
    5. '+b' → logprob: -6.445479393005371
    6. ' -' → logprob: -8.320479393005371
    7. '+B' → logprob: -8.695479393005371
    8. ' *' → logprob: -8.820479393005371
    9. '+a' → logprob: -9.445479393005371
    10. ' ' → logprob: -10.070479393005371

Token 38: '*c' (ID: 83421)
  Prédit: '*c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*c' → logprob: -0.02816569060087204
    2. '*' → logprob: -4.153165817260742
    3. ' *' → logprob: -4.653165817260742
    4. '*g' → logprob: -6.903165817260742
    5. '*f' → logprob: -7.403165817260742
    6. '*h' → logprob: -7.528165817260742
    7. '<|end|>' → logprob: -8.153165817260742
    8. 'c' → logprob: -10.028165817260742
    9. '*d' → logprob: -11.403165817260742
    10. '*C' → logprob: -11.653165817260742

Token 39: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02330312877893448
    2. '*' → logprob: -5.273303031921387
    3. ')' → logprob: -5.398303031921387
    4. '+
' → logprob: -5.523303031921387
    5. ' +' → logprob: -6.148303031921387
    6. '-' → logprob: -6.148303031921387
    7. '>' → logprob: -7.023303031921387
    8. '<|end|>' → logprob: -7.398303031921387
    9. ',' → logprob: -7.523303031921387
    10. '   ' → logprob: -8.023303031921387

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6962826251983643
    2. '
' → logprob: -1.4462826251983643
    3. '\n' → logprob: -2.6962826251983643
    4. 'if' → logprob: -3.1962826251983643
    5. ' if' → logprob: -3.3212826251983643
    6. ')' → logprob: -3.4462826251983643
    7. '    
' → logprob: -4.321282386779785
    8. '+' → logprob: -4.446282386779785
    9. ')
' → logprob: -4.821282386779785
    10. '>' → logprob: -4.946282386779785

Token 41: ' B' (ID: 418)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37675127387046814
    2. ' if' → logprob: -1.6267513036727905
    3. 'if' → logprob: -2.251751184463501
    4. '\n' → logprob: -5.00175142288208
    5. ',' → logprob: -7.50175142288208
    6. '>' → logprob: -7.62675142288208
    7. '*' → logprob: -7.87675142288208
    8. '
' → logprob: -8.001750946044922
    9. '    
' → logprob: -8.001750946044922
    10. '```' → logprob: -8.126750946044922

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00593033991754055
    2. '=' → logprob: -5.130930423736572
    3. ' +=' → logprob: -14.630929946899414
    4. ' *=' → logprob: -14.755929946899414
    5. ',' → logprob: -15.255929946899414
    6. ' -=' → logprob: -16.255929946899414
    7. ' ' → logprob: -16.505929946899414
    8. '*' → logprob: -17.005929946899414
    9. '>' → logprob: -17.005929946899414
    10. '+=' → logprob: -17.005929946899414

Token 43: ' e' (ID: 319)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.28369787335395813
    2. ' a' → logprob: -1.5336978435516357
    3. 'e' → logprob: -4.408698081970215
    4. ' e' → logprob: -4.908698081970215
    5. 'b' → logprob: -5.533698081970215
    6. ' b' → logprob: -6.033698081970215
    7. 'c' → logprob: -6.658698081970215
    8. 'd' → logprob: -7.283698081970215
    9. ' c' → logprob: -7.408698081970215
    10. ' d' → logprob: -7.783698081970215

Token 44: '*h' (ID: 139295)
  Prédit: '*h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*h' → logprob: -0.12660297751426697
    2. '*f' → logprob: -2.7516028881073
    3. '*g' → logprob: -3.5016028881073
    4. '*d' → logprob: -3.7516028881073
    5. '*' → logprob: -6.626603126525879
    6. '*a' → logprob: -10.001603126525879
    7. ' *' → logprob: -10.501603126525879
    8. '*b' → logprob: -11.001603126525879
    9. '*c' → logprob: -11.251603126525879
    10. 'h' → logprob: -11.626603126525879

Token 45: '-f' (ID: 3002)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13436388969421387
    2. ' -' → logprob: -2.509363889694214
    3. '-f' → logprob: -3.134363889694214
    4. '-g' → logprob: -7.384364128112793
    5. '-e' → logprob: -8.884364128112793
    6. '-h' → logprob: -9.384364128112793
    7. '-k' → logprob: -12.634364128112793
    8. '-b' → logprob: -12.759364128112793
    9. '-
' → logprob: -12.759364128112793
    10. 'f' → logprob: -12.884364128112793

Token 46: '*g' (ID: 189048)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.023514380678534508
    2. '*g' → logprob: -3.7735142707824707
    3. '`' → logprob: -9.273514747619629
    4. ''g' → logprob: -9.648514747619629
    5. '```' → logprob: -10.773514747619629
    6. '	g' → logprob: -10.898514747619629
    7. ' g' → logprob: -11.023514747619629
    8. '[g' → logprob: -11.648514747619629
    9. '(g' → logprob: -11.648514747619629
    10. '``' → logprob: -11.773514747619629

Token 47: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4678739309310913
    2. '
' → logprob: -2.092874050140381
    3. '```' → logprob: -2.842874050140381
    4. '<|end|>' → logprob: -2.842874050140381
    5. 'A' → logprob: -2.967874050140381
    6. 'if' → logprob: -3.967874050140381
    7. '    
' → logprob: -4.717874050140381
    8. '*A' → logprob: -4.967874050140381
    9. '*' → logprob: -5.467874050140381
    10. '#' → logprob: -5.467874050140381

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2371455430984497
    2. 'if' → logprob: -1.8621455430984497
    3. '
' → logprob: -3.73714542388916
    4. ' if' → logprob: -3.86214542388916
    5. '<|end|>' → logprob: -6.11214542388916
    6. '\n' → logprob: -6.23714542388916
    7. '```' → logprob: -6.73714542388916
    8. '    
' → logprob: -6.86214542388916
    9. '+' → logprob: -6.98714542388916
    10. 'print' → logprob: -7.23714542388916

Token 49: ' C' (ID: 363)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17248274385929108
    2. '   ' → logprob: -2.17248272895813
    3. ' if' → logprob: -3.54748272895813
    4. 'x' → logprob: -4.547482967376709
    5. 'C' (adapté à ' C') → logprob: -5.922482967376709
    6. '```' → logprob: -6.547482967376709
    7. 'print' → logprob: -8.67248249053955
    8. '``' → logprob: -8.79748249053955
    9. '
' → logprob: -9.04748249053955
    10. ' ' → logprob: -9.54748249053955

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716913543641567
    2. '=' → logprob: -5.006716728210449
    3. ' =(' → logprob: -15.25671672821045
    4. ' ' → logprob: -15.25671672821045
    5. '.' → logprob: -15.63171672821045
    6. ' =
' → logprob: -15.75671672821045
    7. '  ' → logprob: -16.444217681884766
    8. ',' → logprob: -16.506717681884766
    9. '=int' → logprob: -16.569217681884766
    10. ' =)' → logprob: -16.631717681884766

Token 51: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03550941124558449
    2. ' a' → logprob: -4.1605095863342285
    3. 'g' → logprob: -5.2855095863342285
    4. 'b' → logprob: -5.2855095863342285
    5. 'A' → logprob: -5.7855095863342285
    6. '0' → logprob: -6.5355095863342285
    7. 'e' → logprob: -6.6605095863342285
    8. 'c' → logprob: -6.9105095863342285
    9. 'q' → logprob: -7.9105095863342285
    10. '1' → logprob: -8.03550910949707

Token 52: '-b' (ID: 2118)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6466042995452881
    2. '*f' → logprob: -0.7716042995452881
    3. '*h' → logprob: -4.521604537963867
    4. '*g' → logprob: -5.896604537963867
    5. 'e' → logprob: -9.146604537963867
    6. 'f' → logprob: -9.896604537963867
    7. '*c' → logprob: -10.021604537963867
    8. '*a' → logprob: -11.146604537963867
    9. ' *' → logprob: -11.396604537963867
    10. '*-' → logprob: -11.646604537963867

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' D' (ID: 415)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1942769289016724
    2. '<|end|>' → logprob: -1.3192769289016724
    3. '+' → logprob: -1.8192769289016724
    4. ' ' → logprob: -2.694276809692383
    5. '```' → logprob: -3.069276809692383
    6. ' +' → logprob: -3.694276809692383
    7. '**' → logprob: -3.944276809692383
    8. ')' → logprob: -3.944276809692383
    9. '*' → logprob: -4.069276809692383
    10. '  ' → logprob: -4.194276809692383

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012659386731684208
    2. '=' → logprob: -4.387659549713135
    3. ' ' → logprob: -9.637659072875977
    4. ' -=' → logprob: -9.887659072875977
    5. ' -' → logprob: -11.887659072875977
    6. ' +=' → logprob: -12.137659072875977
    7. '>' → logprob: -12.887659072875977
    8. ',' → logprob: -13.012659072875977
    9. ')' → logprob: -13.262659072875977
    10. '-' → logprob: -13.512659072875977

Token 57: ' c' (ID: 274)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0606171078979969
    2. 'c' → logprob: -3.810617208480835
    3. ' h' → logprob: -3.810617208480835
    4. 'a' → logprob: -5.310616970062256
    5. 'f' → logprob: -5.560616970062256
    6. 'g' → logprob: -6.060616970062256
    7. '   ' → logprob: -6.935616970062256
    8. '-h' → logprob: -7.435616970062256
    9. '-c' → logprob: -7.810616970062256
    10. ' c' → logprob: -7.935616970062256

Token 58: '-a' (ID: 8575)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.41129252314567566
    2. ' -' → logprob: -1.286292552947998
    3. '-b' → logprob: -3.786292552947998
    4. '-a' → logprob: -4.661292552947998
    5. '-f' → logprob: -4.661292552947998
    6. '-d' → logprob: -5.036292552947998
    7. '-c' → logprob: -5.536292552947998
    8. '-e' → logprob: -5.661292552947998
    9. '<|end|>' → logprob: -6.911292552947998
    10. '-h' → logprob: -7.411292552947998

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1266471892595291
    2. '<|end|>' → logprob: -2.2516472339630127
    3. ')' → logprob: -4.626646995544434
    4. '    
' → logprob: -6.876646995544434
    5. '<|end|>' → logprob: -7.501646995544434
    6. ' ' → logprob: -7.751646995544434
    7. '  ' → logprob: -8.126646995544434
    8. '```' → logprob: -8.376646995544434
    9. ',' → logprob: -8.501646995544434
    10. '  
' → logprob: -8.626646995544434

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02489081583917141
    2. '<|end|>' → logprob: -4.024890899658203
    3. 'E' → logprob: -5.899890899658203
    4. ')' → logprob: -7.024890899658203
    5. 'if' → logprob: -7.524890899658203
    6. '```' → logprob: -7.774890899658203
    7. ',' → logprob: -8.274890899658203
    8. ' if' → logprob: -8.274890899658203
    9. '       ' → logprob: -8.399890899658203
    10. ' E' → logprob: -8.524890899658203

Token 61: ' E' (ID: 457)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05261537805199623
    2. 'E' (adapté à ' E') → logprob: -3.5526154041290283
    3. 'if' → logprob: -4.927615165710449
    4. ' if' → logprob: -5.302615165710449
    5. 'x' → logprob: -5.677615165710449
    6. '```' → logprob: -6.427615165710449
    7. ' E' → logprob: -6.552615165710449
    8. '       ' → logprob: -6.802615165710449
    9. '<|end|>' → logprob: -7.927615165710449
    10. ' x' → logprob: -8.42761516571045

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005994682665914297
    2. '=' → logprob: -5.13099479675293
    3. ' ' → logprob: -10.50599479675293
    4. ',' → logprob: -11.25599479675293
    5. ' *=' → logprob: -12.25599479675293
    6. ' +=' → logprob: -12.63099479675293
    7. '*' → logprob: -13.00599479675293
    8. '  ' → logprob: -13.25599479675293
    9. 'f' → logprob: -13.38099479675293
    10. ' ,' → logprob: -13.50599479675293

Token 63: ' f' (ID: 285)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4464366137981415
    2. ' h' → logprob: -1.0714366436004639
    3. 'g' → logprob: -4.571436405181885
    4. ' g' → logprob: -5.821436405181885
    5. 'f' → logprob: -6.196436405181885
    6. ' f' → logprob: -6.946436405181885
    7. ' ' → logprob: -8.633936882019043
    8. 'H' → logprob: -8.883936882019043
    9. 'b' → logprob: -9.258936882019043
    10. 'e' → logprob: -9.258936882019043

Token 64: '-h' (ID: 4559)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3483264446258545
    2. ' -' → logprob: -2.0983264446258545
    3. '-h' → logprob: -2.8483264446258545
    4. '-c' → logprob: -3.0983264446258545
    5. '-g' → logprob: -3.4733264446258545
    6. '-e' → logprob: -4.223326683044434
    7. '-f' → logprob: -4.473326683044434
    8. '-b' → logprob: -5.348326683044434
    9. '-d' → logprob: -5.348326683044434
    10. '-a' → logprob: -6.723326683044434

Token 65: '
' (ID: 198)
  Prédit: ' F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' F' → logprob: -0.7673875689506531
    2. 'F' → logprob: -1.2673876285552979
    3. ' -' → logprob: -2.642387628555298
    4. '+' → logprob: -3.267387628555298
    5. '-' → logprob: -3.267387628555298
    6. '   ' → logprob: -3.392387628555298
    7. ' ' → logprob: -3.892387628555298
    8. '-F' → logprob: -4.392387390136719
    9. '<|end|>' → logprob: -4.517387390136719
    10. ' +' → logprob: -4.642387390136719

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7175278067588806
    2. '<|end|>' → logprob: -1.3425278663635254
    3. 'F' → logprob: -1.9675278663635254
    4. '```' → logprob: -3.2175278663635254
    5. ' F' → logprob: -4.092527866363525
    6. ' for' → logprob: -4.217527866363525
    7. 'return' → logprob: -4.467527866363525
    8. 'for' → logprob: -5.342527866363525
    9. ',' → logprob: -5.592527866363525
    10. ' =' → logprob: -6.092527866363525

Token 67: ' F' (ID: 454)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.35888656973838806
    2. '   ' → logprob: -2.108886480331421
    3. 'e' → logprob: -2.483886480331421
    4. 'return' → logprob: -3.483886480331421
    5. '<|end|>' → logprob: -3.483886480331421
    6. '>' → logprob: -4.23388671875
    7. '```' → logprob: -5.10888671875
    8. 'G' → logprob: -5.60888671875
    9. ' =' → logprob: -5.98388671875
    10. 'F' (adapté à ' F') → logprob: -6.73388671875

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22589729726314545
    2. '=' → logprob: -1.6008973121643066
    3. '-' → logprob: -9.225896835327148
    4. ' -=' → logprob: -9.350896835327148
    5. ' ' → logprob: -9.600896835327148
    6. ' -' → logprob: -10.225896835327148
    7. '*' → logprob: -10.600896835327148
    8. '`' → logprob: -10.975896835327148
    9. ' +=' → logprob: -11.100896835327148
    10. '"' → logprob: -11.100896835327148

Token 69: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2030896544456482
    2. ' e' → logprob: -1.703089714050293
    3. 'g' → logprob: -6.453089714050293
    4. ' g' → logprob: -9.828089714050293
    5. '	e' → logprob: -10.953089714050293
    6. '   ' → logprob: -11.453089714050293
    7. '<|end|>' → logprob: -11.953089714050293
    8. ' ' → logprob: -12.453089714050293
    9. '  ' → logprob: -13.328089714050293
    10. '5' → logprob: -13.703089714050293

Token 70: '-g' (ID: 6559)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.3235844075679779
    2. '-d' → logprob: -2.0735843181610107
    3. '-g' → logprob: -2.9485843181610107
    4. '-' → logprob: -3.0735843181610107
    5. '-b' → logprob: -3.6985843181610107
    6. '-a' → logprob: -4.19858455657959
    7. ' -' → logprob: -5.07358455657959
    8. '-f' → logprob: -5.19858455657959
    9. '-e' → logprob: -8.19858455657959
    10. '-D' → logprob: -10.19858455657959

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14864398539066315
    2. '<|end|>' → logprob: -3.523643970489502
    3. 'x' → logprob: -3.898643970489502
    4. '
' → logprob: -4.023643970489502
    5. 'if' → logprob: -4.273643970489502
    6. ' if' → logprob: -4.273643970489502
    7. ':' → logprob: -4.773643970489502
    8. '    
' → logprob: -4.773643970489502
    9. '  
' → logprob: -5.523643970489502
    10. ')' → logprob: -5.648643970489502

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1544428914785385
    2. '<|end|>' → logprob: -2.90444278717041
    3. 'x' → logprob: -4.15444278717041
    4. ' if' → logprob: -4.27944278717041
    5. 'if' → logprob: -4.27944278717041
    6. '\n' → logprob: -4.77944278717041
    7. '
' → logprob: -4.90444278717041
    8. ')' → logprob: -5.40444278717041
    9. ':' → logprob: -5.52944278717041
    10. 'n' → logprob: -5.77944278717041

Token 73: ' det' (ID: 1476)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2455620914697647
    2. 'if' → logprob: -1.8705620765686035
    3. '   ' → logprob: -3.3705620765686035
    4. ' if' → logprob: -3.9955620765686035
    5. 'i' → logprob: -5.7455620765686035
    6. 'n' → logprob: -7.1205620765686035
    7. ' ' → logprob: -7.4955620765686035
    8. ' x' → logprob: -7.7455620765686035
    9. ')' → logprob: -7.8705620765686035
    10. ',' → logprob: -7.8705620765686035

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05082577094435692
    2. 'ermin' → logprob: -3.300825834274292
    3. 'A' → logprob: -5.300825595855713
    4. ' ' → logprob: -5.800825595855713
    5. '=' → logprob: -6.050825595855713
    6. '_' → logprob: -7.300825595855713
    7. '  ' → logprob: -8.050826072692871
    8. '_A' → logprob: -8.050826072692871
    9. ')' → logprob: -8.675826072692871
    10. '   ' → logprob: -8.925826072692871

Token 75: ' C' (ID: 363)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2893713116645813
    2. ' A' → logprob: -1.4143712520599365
    3. 'C' → logprob: -5.164371490478516
    4. ' C' → logprob: -6.539371490478516
    5. ' ' → logprob: -8.039371490478516
    6. '(A' → logprob: -8.664371490478516
    7. '(' → logprob: -8.789371490478516
    8. '   ' → logprob: -9.039371490478516
    9. 'B' → logprob: -9.539371490478516
    10. ' (' → logprob: -9.789371490478516

Token 76: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3488095998764038
    2. ' *' → logprob: -1.2238095998764038
    3. '*A' → logprob: -8.348809242248535
    4. '*d' → logprob: -10.098809242248535
    5. '**' → logprob: -10.598809242248535
    6. '*C' → logprob: -10.848809242248535
    7. '*g' → logprob: -11.098809242248535
    8. '*f' → logprob: -11.598809242248535
    9. '*q' → logprob: -12.598809242248535
    10. '*h' → logprob: -12.973809242248535

Token 77: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.00823500007390976
    2. 'E' → logprob: -5.508234977722168
    3. 'D' → logprob: -6.133234977722168
    4. 'C' → logprob: -6.258234977722168
    5. 'A' → logprob: -10.883234977722168
    6. ' F' → logprob: -11.383234977722168
    7. 'B' → logprob: -11.758234977722168
    8. 'G' → logprob: -11.945734977722168
    9. 'H' → logprob: -12.070734977722168
    10. '```' → logprob: -12.695734977722168

Token 78: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28142786026000977
    2. ' -' → logprob: -1.4064278602600098
    3. '-D' → logprob: -8.906427383422852
    4. '-B' → logprob: -9.281427383422852
    5. '-C' → logprob: -10.531427383422852
    6. '-A' → logprob: -11.656427383422852
    7. '<|end|>' → logprob: -12.906427383422852
    8. '-E' → logprob: -13.156427383422852
    9. '>' → logprob: -13.406427383422852
    10. '```' → logprob: -13.531427383422852

Token 79: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0004129152512177825
    2. 'E' → logprob: -8.000412940979004
    3. ' D' → logprob: -9.625412940979004
    4. 'B' → logprob: -12.625412940979004
    5. '>D' → logprob: -13.250412940979004
    6. '   ' → logprob: -13.375412940979004
    7. '<|end|>' → logprob: -13.375412940979004
    8. '	D' → logprob: -13.875412940979004
    9. '-D' → logprob: -14.000412940979004
    10. '  ' → logprob: -15.375412940979004

Token 80: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3587692975997925
    2. '*C' → logprob: -1.7337692975997925
    3. 'C' → logprob: -2.108769416809082
    4. '<|end|>' → logprob: -5.983769416809082
    5. '**' → logprob: -7.483769416809082
    6. ' *' → logprob: -9.233769416809082
    7. '***' → logprob: -9.608769416809082
    8. '```' → logprob: -9.608769416809082
    9. 'B' → logprob: -10.233769416809082
    10. '`' → logprob: -10.608769416809082

Token 81: 'E' (ID: 36)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.0445127372804563e-05
    2. '<|end|>' → logprob: -11.87501049041748
    3. 'E' → logprob: -13.12501049041748
    4. 'B' → logprob: -14.25001049041748
    5. ' C' → logprob: -15.00001049041748
    6. '**' → logprob: -15.87501049041748
    7. '```' → logprob: -16.250009536743164
    8. '  ' → logprob: -16.625009536743164
    9. '<|end|>' → logprob: -17.375009536743164
    10. 'c' → logprob: -17.500009536743164

Token 82: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4720819890499115
    2. '<|end|>' → logprob: -1.5970820188522339
    3. ',' → logprob: -3.0970818996429443
    4. ')' → logprob: -3.5970818996429443
    5. '*' → logprob: -3.8470818996429443
    6. '#' → logprob: -4.597082138061523
    7. ' ' → logprob: -4.597082138061523
    8. ':
' → logprob: -4.722082138061523
    9. ' if' → logprob: -4.722082138061523
    10. '```' → logprob: -4.847082138061523

Token 83: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.17278558015823364
    2. '<|end|>' → logprob: -2.797785520553589
    3. '\' → logprob: -3.422785520553589
    4. '```' → logprob: -3.672785520553589
    5. 'if' → logprob: -4.422785758972168
    6. ' if' → logprob: -4.922785758972168
    7. '\
' → logprob: -5.672785758972168
    8. ':' → logprob: -5.672785758972168
    9. '\r' → logprob: -5.797785758972168
    10. '   ' → logprob: -6.172785758972168

Token 84: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3625762462615967
    2. '   ' → logprob: -1.4875762462615967
    3. ' if' → logprob: -2.8625762462615967
    4. '```' → logprob: -4.737576484680176
    5. 'i' → logprob: -5.737576484680176
    6. ',' → logprob: -6.112576484680176
    7. ':' → logprob: -6.112576484680176
    8. '    ' → logprob: -7.362576484680176
    9. '<|end|>' → logprob: -7.862576484680176
    10. '``' → logprob: -8.112576484680176

Token 85: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.035468459129333496
    2. '("' → logprob: -4.410468578338623
    3. '('' → logprob: -4.785468578338623
    4. '((' → logprob: -5.035468578338623
    5. '()' → logprob: -5.660468578338623
    6. '(A' → logprob: -5.785468578338623
    7. '("("' → logprob: -7.785468578338623
    8. '(abs' → logprob: -8.285468101501465
    9. '(C' → logprob: -8.660468101501465
    10. '(("' → logprob: -9.535468101501465

Token 86: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0942104309797287
    2. 'B' → logprob: -3.344210386276245
    3. ' A' → logprob: -4.094210624694824
    4. '(A' → logprob: -4.094210624694824
    5. 'a' → logprob: -5.719210624694824
    6. 'C' → logprob: -5.844210624694824
    7. '"A' → logprob: -6.094210624694824
    8. '(' → logprob: -6.094210624694824
    9. 'f' → logprob: -6.969210624694824
    10. ')' → logprob: -6.969210624694824

Token 87: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2569303512573242
    2. '*' → logprob: -1.6319303512573242
    3. '+' → logprob: -2.631930351257324
    4. ' )' → logprob: -2.631930351257324
    5. ' +' → logprob: -2.756930351257324
    6. '//' → logprob: -2.756930351257324
    7. ' //' → logprob: -2.881930351257324
    8. ',' → logprob: -3.006930351257324
    9. ' -' → logprob: -3.256930351257324
    10. ' *' → logprob: -3.381930351257324

Token 88: 'F' (ID: 37)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0448077954351902
    2. ' B' → logprob: -3.5448079109191895
    3. 'det' → logprob: -4.7948079109191895
    4. 'F' → logprob: -5.1698079109191895
    5. ' det' → logprob: -8.044807434082031
    6. ' F' → logprob: -8.919807434082031
    7. 'D' → logprob: -9.419807434082031
    8. 'C' → logprob: -9.919807434082031
    9. ' ' → logprob: -10.044807434082031
    10. '-B' → logprob: -10.169807434082031

Token 89: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3915431797504425
    2. '-' → logprob: -1.1415431499481201
    3. ')' → logprob: -6.266543388366699
    4. '-A' → logprob: -6.391543388366699
    5. '-B' → logprob: -8.1415433883667
    6. '-C' → logprob: -8.1415433883667
    7. '+' → logprob: -8.7665433883667
    8. ' )' → logprob: -9.3915433883667
    9. ')-(' → logprob: -9.6415433883667
    10. '-(' → logprob: -9.8915433883667

Token 90: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.35410308837890625
    2. 'B' → logprob: -1.2291030883789062
    3. ')' → logprob: -5.854103088378906
    4. '"' → logprob: -6.979103088378906
    5. ' ' → logprob: -7.729103088378906
    6. ' )' → logprob: -8.229103088378906
    7. ' C' → logprob: -8.604103088378906
    8. ' det' → logprob: -8.729103088378906
    9. ' "' → logprob: -9.229103088378906
    10. '"B' → logprob: -9.229103088378906

Token 91: '*' (ID: 9)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03567507863044739
    2. ')//' → logprob: -4.035675048828125
    3. ' )' → logprob: -5.035675048828125
    4. '*' → logprob: -5.035675048828125
    5. ')/' → logprob: -6.535675048828125
    6. '-' → logprob: -6.535675048828125
    7. ' -' → logprob: -6.660675048828125
    8. '*)' → logprob: -9.535675048828125
    9. ')*' → logprob: -10.410675048828125
    10. '+' → logprob: -10.410675048828125

Token 92: 'D' (ID: 35)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.006532176397740841
    2. ' C' → logprob: -5.756532192230225
    3. '*C' → logprob: -6.381532192230225
    4. 'D' → logprob: -7.256532192230225
    5. 'E' → logprob: -7.881532192230225
    6. '*' → logprob: -8.006531715393066
    7. '(C' → logprob: -9.506531715393066
    8. ')' → logprob: -10.631531715393066
    9. 'det' → logprob: -10.694031715393066
    10. 'F' → logprob: -11.194031715393066

Token 93: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.051381491124629974
    2. ' )' → logprob: -3.4263815879821777
    3. ')//' → logprob: -4.051381587982178
    4. ')/' → logprob: -9.55138111114502
    5. '))' → logprob: -10.55138111114502
    6. ' ' → logprob: -11.05138111114502
    7. '-' → logprob: -11.05138111114502
    8. ' -' → logprob: -11.30138111114502
    9. '//' → logprob: -11.55138111114502
    10. ')#' → logprob: -12.17638111114502

Token 94: 'det' (ID: 10136)
  Prédit: 'det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.12711772322654724
    2. ' det' → logprob: -2.12711763381958
    3. '(det' → logprob: -9.627118110656738
    4. 'd' → logprob: -9.877118110656738
    5. '(' → logprob: -11.002118110656738
    6. ')' → logprob: -11.502118110656738
    7. ' ' → logprob: -11.627118110656738
    8. 'float' → logprob: -12.627118110656738
    9. ' (' → logprob: -12.627118110656738
    10. '```' → logprob: -12.689618110656738

Token 95: ',(' (ID: 27243)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3120038501219824e-05
    2. ' )' → logprob: -9.875053405761719
    3. '))' → logprob: -14.125053405761719
    4. '`)' → logprob: -15.500053405761719
    5. '')' → logprob: -15.875053405761719
    6. ')#' → logprob: -16.50005340576172
    7. ' ' → logprob: -16.62505340576172
    8. ')
' → logprob: -16.87505340576172
    9. ')`' → logprob: -16.87505340576172
    10. '")' → logprob: -16.87505340576172

Token 96: 'A' (ID: 32)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.19909054040908813
    2. '-C' → logprob: -2.3240904808044434
    3. 'A' → logprob: -3.1990904808044434
    4. 'B' → logprob: -4.324090480804443
    5. '-A' → logprob: -4.949090480804443
    6. '-' → logprob: -5.199090480804443
    7. '-(' → logprob: -5.324090480804443
    8. '-B' → logprob: -5.574090480804443
    9. 'E' → logprob: -6.574090480804443
    10. ' -' → logprob: -6.824090480804443

Token 97: '*' (ID: 9)
  Prédit: '*C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*C' → logprob: -0.4743979573249817
    2. '*' → logprob: -0.9743979573249817
    3. '**' → logprob: -8.349397659301758
    4. ' *' → logprob: -10.849397659301758
    5. '*)' → logprob: -11.224397659301758
    6. ')*' → logprob: -11.224397659301758
    7. '*c' → logprob: -11.599397659301758
    8. '*A' → logprob: -11.849397659301758
    9. '*-' → logprob: -12.724397659301758
    10. '***' → logprob: -12.974397659301758

Token 98: 'E' (ID: 36)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9368229508399963
    2. 'C' → logprob: -0.9368229508399963
    3. 'E' → logprob: -2.0618228912353516
    4. '*C' → logprob: -2.4368228912353516
    5. 'F' → logprob: -6.811822891235352
    6. '-C' → logprob: -9.186822891235352
    7. ')' → logprob: -9.561822891235352
    8. ' *' → logprob: -9.811822891235352
    9. ' C' → logprob: -9.811822891235352
    10. '*-' → logprob: -10.061822891235352

Token 99: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04021749645471573
    2. '-' → logprob: -3.790217399597168
    3. '+' → logprob: -4.665217399597168
    4. ' +' → logprob: -4.915217399597168
    5. ' ' → logprob: -10.540217399597168
    6. '-D' → logprob: -11.165217399597168
    7. '+D' → logprob: -11.415217399597168
    8. ')' → logprob: -12.040217399597168
    9. '+C' → logprob: -12.165217399597168
    10. ' )' → logprob: -12.290217399597168

Token 100: ' B' (ID: 418)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.02546716295182705
    2. ' C' → logprob: -3.7754671573638916
    3. '-C' → logprob: -7.150467395782471
    4. ' -' → logprob: -7.525467395782471
    5. ')' → logprob: -7.650467395782471
    6. '-' → logprob: -9.150466918945312
    7. '   ' → logprob: -9.775466918945312
    8. '(-' → logprob: -9.900466918945312
    9. '  ' → logprob: -10.150466918945312
    10. 'B' → logprob: -10.525466918945312

Token 101: '*C' (ID: 194570)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3489345610141754
    2. '*C' → logprob: -1.223934531211853
    3. ' *' → logprob: -7.723934650421143
    4. 'C' → logprob: -10.723934173583984
    5. '*c' → logprob: -11.598934173583984
    6. '**' → logprob: -12.348934173583984
    7. ''*' → logprob: -13.473934173583984
    8. '*
' → logprob: -13.598934173583984
    9. ' ' → logprob: -13.848934173583984
    10. '()*' → logprob: -13.848934173583984

Token 102: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.022171495482325554
    2. ' )' → logprob: -4.022171497344971
    3. ')' → logprob: -5.522171497344971
    4. '/' → logprob: -12.397171020507812
    5. '   ' → logprob: -12.772171020507812
    6. '	' → logprob: -13.397171020507812
    7. ' ' → logprob: -13.647171020507812
    8. ')/(' → logprob: -13.897171020507812
    9. '/d' → logprob: -14.022171020507812
    10. ' /' → logprob: -14.022171020507812

Token 103: 'det' (ID: 10136)
  Prédit: 'det'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.007632650900632143
    2. ' det' → logprob: -4.882632732391357
    3. '(det' → logprob: -10.6326322555542
    4. '-det' → logprob: -14.1326322555542
    5. '.det' → logprob: -14.2576322555542
    6. '_det' → logprob: -14.7576322555542
    7. ')' → logprob: -16.132633209228516
    8. '   ' → logprob: -16.257633209228516
    9. ' ' → logprob: -16.382633209228516
    10. '(-' → logprob: -16.632633209228516

Token 104: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -12.375004768371582
    3. '))' → logprob: -15.250004768371582
    4. ')`' → logprob: -16.875003814697266
    5. '`)' → logprob: -17.375003814697266
    6. ')
' → logprob: -17.500003814697266
    7. '')' → logprob: -18.125003814697266
    8. '   ' → logprob: -18.250003814697266
    9. ')#' → logprob: -18.250003814697266
    10. '),' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 30.39%
Précision adaptée (1ère position): 30.39%
Précision (top 10): 71.57%
================================================================================
