================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
T = input()
P = input()

mod = 2 << 61-1
base = 1293

def gethash(S):
    H = 0
    b = 1
    for s in S[::-1]:
        H = (H + ord(s) * b) % mod
        b = b * base % mod
    return H

lp = len(P)
Hp = gethash(P)
Hs = gethash(T[:lp])
m = pow(base, lp, mod)

for i in range(len(T)-lp):
    if Hs == Hp:
        print(i)
    Hs = (Hs * base - ord(T[i]) * m + ord(T[i+lp])) % mod
if Hs == Hp:
    print(len(T)-lp)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'T' (ID: 51)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016480415361002088
    2. '('' → logprob: -7.62664794921875
    3. ''' → logprob: -7.87664794921875
    4. '.' → logprob: -8.12664794921875
    5. '"' → logprob: -8.62664794921875
    6. '()' → logprob: -9.50164794921875
    7. '(
' → logprob: -9.75164794921875
    8. '[' → logprob: -10.12664794921875
    9. '("("' → logprob: -10.62664794921875
    10. ' (' → logprob: -11.00164794921875

Token 4: 'P' (ID: 47)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013396685011684895
    2. '+' → logprob: -5.263396739959717
    3. '=' → logprob: -5.638396739959717
    4. '.strip' → logprob: -6.763396739959717
    5. '[' → logprob: -7.013396739959717
    6. '()' → logprob: -7.513396739959717
    7. '*' → logprob: -7.888396739959717
    8. '(' → logprob: -8.013396263122559
    9. '.split' → logprob: -8.513396263122559
    10. ')' → logprob: -8.638396263122559

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1514032632112503
    2. '=' → logprob: -2.2764031887054443
    3. 'r' → logprob: -3.6514031887054443
    4. '.' → logprob: -5.776403427124023
    5. '=input' → logprob: -6.276403427124023
    6. ')' → logprob: -6.651403427124023
    7. 'rocess' → logprob: -6.651403427124023
    8. '(' → logprob: -6.901403427124023
    9. '()' → logprob: -7.901403427124023
    10. ':' → logprob: -8.151403427124023

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.28522953391075134
    2. ' input' → logprob: -1.4102295637130737
    3. ' T' → logprob: -6.035229682922363
    4. 'T' → logprob: -7.035229682922363
    5. 'int' → logprob: -8.035229682922363
    6. '"' → logprob: -8.785229682922363
    7. ' ' → logprob: -10.035229682922363
    8. ''' → logprob: -10.035229682922363
    9. '""' → logprob: -10.160229682922363
    10. ' int' → logprob: -10.285229682922363

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6332773566246033
    2. '()' → logprob: -0.7582773566246033
    3. '(
' → logprob: -9.00827693939209
    4. ')' → logprob: -9.13327693939209
    5. '```' → logprob: -9.38327693939209
    6. '(

' → logprob: -9.50827693939209
    7. ''' → logprob: -9.75827693939209
    8. '('' → logprob: -10.25827693939209
    9. '"' → logprob: -10.25827693939209
    10. '`()' → logprob: -10.50827693939209

Token 8: 'mod' (ID: 4847)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22841186821460724
    2. 'if' → logprob: -1.7284119129180908
    3. 'i' → logprob: -4.603411674499512
    4. 'count' → logprob: -5.228411674499512
    5. 'while' → logprob: -5.603411674499512
    6. 'len' → logprob: -5.728411674499512
    7. 'result' → logprob: -6.728411674499512
    8. 'found' → logprob: -6.978411674499512
    9. 'print' → logprob: -8.103411674499512
    10. 'n' → logprob: -8.103411674499512

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11160936951637268
    2. '=' → logprob: -2.36160945892334
    3. '_' → logprob: -5.11160945892334
    4. 'ulus' → logprob: -6.23660945892334
    5. 'ulo' → logprob: -6.98660945892334
    6. ' ' → logprob: -6.98660945892334
    7. 'ul' → logprob: -7.86160945892334
    8. '1' → logprob: -8.11160945892334
    9. 'ule' → logprob: -8.86160945892334
    10. '100' → logprob: -8.98660945892334

Token 10: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05593749135732651
    2. ' ' → logprob: -3.0559375286102295
    3. '100' → logprob: -4.93093729019165
    4. '998' → logprob: -9.805937767028809
    5. '1' → logprob: -10.305937767028809
    6. 'int' → logprob: -11.305937767028809
    7. '101' → logprob: -14.555937767028809
    8. '(' → logprob: -14.805937767028809
    9. '0' → logprob: -14.930937767028809
    10. 'pow' → logprob: -15.180937767028809

Token 11: '2' (ID: 17)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10048691183328629
    2. '100' → logprob: -2.350486993789673
    3. '998' → logprob: -9.100486755371094
    4. '(' → logprob: -9.225486755371094
    5. 'int' → logprob: -10.350486755371094
    6. '1' → logprob: -10.475486755371094
    7. ' ' → logprob: -11.725486755371094
    8. '101' → logprob: -14.975486755371094
    9. '(int' → logprob: -15.350486755371094
    10. '123' → logprob: -15.475486755371094

Token 12: ' <<' (ID: 2256)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.1197086051106453
    2. '0' → logprob: -3.74470853805542
    3. '61' → logprob: -3.86970853805542
    4. ' **' → logprob: -4.61970853805542
    5. '10' → logprob: -4.86970853805542
    6. '63' → logprob: -4.99470853805542
    7. '56' → logprob: -5.36970853805542
    8. '00' → logprob: -5.49470853805542
    9. ' ' → logprob: -5.61970853805542
    10. '59' → logprob: -5.74470853805542

Token 13: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -0.32679975032806396
    2. '20' → logprob: -2.5767998695373535
    3. '29' → logprob: -2.8267998695373535
    4. '60' → logprob: -2.9517998695373535
    5. '19' → logprob: -4.3267998695373535
    6. '31' → logprob: -4.4517998695373535
    7. '40' → logprob: -4.8267998695373535
    8. '59' → logprob: -4.8267998695373535
    9. '28' → logprob: -4.9517998695373535
    10. '24' → logprob: -5.0767998695373535

Token 14: '61' (ID: 8954)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '30' → logprob: -0.24596327543258667
    2. '29' → logprob: -2.6209633350372314
    3. '20' → logprob: -2.7459633350372314
    4. '60' → logprob: -3.6209633350372314
    5. '31' → logprob: -4.370963096618652
    6. '19' → logprob: -4.745963096618652
    7. '28' → logprob: -4.995963096618652
    8. '24' → logprob: -4.995963096618652
    9. '59' → logprob: -5.620963096618652
    10. '26' → logprob: -6.120963096618652

Token 15: '-' (ID: 12)
  Prédit: '44'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '44' → logprob: -2.0461411476135254
    2. '5' → logprob: -2.1711411476135254
    3. '3' → logprob: -2.2961411476135254
    4. '53' → logprob: -2.2961411476135254
    5. '2' → logprob: -2.4211411476135254
    6. '4' → logprob: -2.6711411476135254
    7. '54' → logprob: -2.7961411476135254
    8. '55' → logprob: -2.7961411476135254
    9. '56' → logprob: -3.0461411476135254
    10. '43' → logprob: -3.1711411476135254

Token 16: '1' (ID: 16)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.31672847270965576
    2. '31' → logprob: -2.8167285919189453
    3. '62' → logprob: -2.9417285919189453
    4. '1' → logprob: -3.3167285919189453
    5. '0' → logprob: -3.3167285919189453
    6. '32' → logprob: -4.316728591918945
    7. '34' → logprob: -4.566728591918945
    8. '5' → logprob: -4.941728591918945
    9. '55' → logprob: -5.066728591918945
    10. '54' → logprob: -5.191728591918945

Token 17: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03480228781700134
    2. '<|end|>' → logprob: -3.784802198410034
    3. ')' → logprob: -5.034802436828613
    4. '-' → logprob: -6.159802436828613
    5. ' +' → logprob: -6.534802436828613
    6. '```' → logprob: -7.409802436828613
    7. '<|end|>' → logprob: -7.784802436828613
    8. ' ' → logprob: -9.784802436828613
    9. ' -' → logprob: -9.909802436828613
    10. '#' → logprob: -10.159802436828613

Token 18: 'base' (ID: 5423)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0162299033254385
    2. ' -' → logprob: -4.89123010635376
    3. '+' → logprob: -5.26623010635376
    4. '<|end|>' → logprob: -6.39123010635376
    5. '```' → logprob: -6.89123010635376
    6. ')' → logprob: -8.141229629516602
    7. '<|end|>' → logprob: -9.516229629516602
    8. ' ' → logprob: -10.016229629516602
    9. '9' → logprob: -10.141229629516602
    10. '**' → logprob: -10.266229629516602

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011065863072872162
    2. '=' → logprob: -4.51106595993042
    3. 's' → logprob: -11.636065483093262
    4. '_' → logprob: -12.011065483093262
    5. ' =)' → logprob: -14.136065483093262
    6. ',' → logprob: -14.886065483093262
    7. '_base' → logprob: -15.011065483093262
    8. ' ' → logprob: -15.386065483093262
    9. ' ,' → logprob: -15.511065483093262
    10. '_=' → logprob: -15.636065483093262

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.093131884932518
    2. '131' → logprob: -2.5931317806243896
    3. '31' → logprob: -4.593132019042969
    4. '127' → logprob: -6.343132019042969
    5. '10' → logprob: -7.218132019042969
    6. '911' → logprob: -8.343132019042969
    7. '257' → logprob: -8.343132019042969
    8. '26' → logprob: -8.718132019042969
    9. '256' → logprob: -8.843132019042969
    10. '129' → logprob: -8.968132019042969

Token 21: '129' (ID: 16891)
  Prédit: '131'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '131' → logprob: -0.20754124224185944
    2. '10' → logprob: -2.4575412273406982
    3. '127' → logprob: -2.9575412273406982
    4. '31' → logprob: -4.207541465759277
    5. '26' → logprob: -4.582541465759277
    6. '257' → logprob: -4.832541465759277
    7. ' ' → logprob: -5.082541465759277
    8. '256' → logprob: -5.707541465759277
    9. '100' → logprob: -6.082541465759277
    10. '129' → logprob: -6.707541465759277

Token 22: '3' (ID: 18)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.23841692507266998
    2. ' **' → logprob: -1.6134169101715088
    3. ' ' → logprob: -5.738417148590088
    4. '*' → logprob: -6.113417148590088
    5. '^' → logprob: -6.363417148590088
    6. ')' → logprob: -7.113417148590088
    7. ' ^' → logprob: -7.238417148590088
    8. '```' → logprob: -7.238417148590088
    9. '9' → logprob: -7.363417148590088
    10. '\' → logprob: -7.488417148590088

Token 23: '

' (ID: 279)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.03427300602197647
    2. ' **' → logprob: -3.6592729091644287
    3. '*' → logprob: -6.659273147583008
    4. '+' → logprob: -7.034273147583008
    5. '%' → logprob: -7.159273147583008
    6. ' ' → logprob: -7.284273147583008
    7. '```' → logprob: -7.284273147583008
    8. '^' → logprob: -7.409273147583008
    9. 'mod' → logprob: -7.659273147583008
    10. '\' → logprob: -7.909273147583008

Token 24: 'def' (ID: 1314)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.8440970778465271
    2. 'mod' → logprob: -2.219097137451172
    3. 'pow' → logprob: -2.344097137451172
    4. '*' → logprob: -2.594097137451172
    5. '
' → logprob: -2.844097137451172
    6. '#' → logprob: -2.844097137451172
    7. 'hash' → logprob: -2.969097137451172
    8. ')' → logprob: -3.969097137451172
    9. 'def' → logprob: -4.469097137451172
    10. '^' → logprob: -4.469097137451172

Token 25: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.904482364654541
    2. ' hash' → logprob: -1.029482364654541
    3. ' rolling' → logprob: -2.154482364654541
    4. ' rab' → logprob: -3.529482364654541
    5. ' compute' → logprob: -3.654482364654541
    6. ' _' → logprob: -3.654482364654541
    7. ' polynomial' → logprob: -4.404482364654541
    8. ' get' → logprob: -5.154482364654541
    9. ' calculate' → logprob: -5.279482364654541
    10. '_' → logprob: -5.779482364654541

Token 26: 'hash' (ID: 16909)
  Prédit: '_hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hash' → logprob: -0.02098114974796772
    2. '_' → logprob: -3.8959810733795166
    3. '_h' → logprob: -8.895980834960938
    4. 'Hash' → logprob: -9.145980834960938
    5. 'hash' → logprob: -9.520980834960938
    6. '_prefix' → logprob: -11.020980834960938
    7. '_code' → logprob: -11.145980834960938
    8. '_roll' → logprob: -11.145980834960938
    9. '_r' → logprob: -11.270980834960938
    10. '_token' → logprob: -11.770980834960938

Token 27: '(S' (ID: 6181)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.34583741426467896
    2. '(' → logprob: -1.3458373546600342
    3. 's' → logprob: -3.470837354660034
    4. '():' → logprob: -7.720837593078613
    5. '(x' → logprob: -8.720837593078613
    6. '(t' → logprob: -9.595837593078613
    7. '(string' → logprob: -10.345837593078613
    8. '(i' → logprob: -10.970837593078613
    9. '(T' → logprob: -10.970837593078613
    10. '(h' → logprob: -11.095837593078613

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08987050503492355
    2. ',' → logprob: -2.4648704528808594
    3. ')' → logprob: -7.464870452880859
    4. '):
' → logprob: -8.83987045288086
    5. ' ):' → logprob: -8.96487045288086
    6. ' ,' → logprob: -10.71487045288086
    7. '[i' → logprob: -11.71487045288086
    8. ',i' → logprob: -11.71487045288086
    9. ',index' → logprob: -11.83987045288086
    10. '):
' → logprob: -11.96487045288086

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3593917489051819
    2. ' hash' → logprob: -2.484391689300537
    3. ':' → logprob: -2.609391689300537
    4. ' ' → logprob: -3.109391689300537
    5. 'hash' → logprob: -3.734391689300537
    6. ' h' → logprob: -3.984391689300537
    7. '_hash' → logprob: -3.984391689300537
    8. 'h' → logprob: -4.234391689300537
    9. '(hash' → logprob: -5.359391689300537
    10. '	hash' → logprob: -5.609391689300537

Token 30: ' H' (ID: 487)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.3339291512966156
    2. 'h' → logprob: -1.458929181098938
    3. ' hash' → logprob: -3.5839290618896484
    4. 'hash' → logprob: -3.8339290618896484
    5. ' ' → logprob: -8.083929061889648
    6. '   ' → logprob: -8.083929061889648
    7. ' ans' → logprob: -8.708929061889648
    8. ' hs' → logprob: -8.958929061889648
    9. ' res' → logprob: -9.083929061889648
    10. ' val' → logprob: -9.208929061889648

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43177101016044617
    2. '=' → logprob: -1.0567710399627686
    3. ' ' → logprob: -6.1817708015441895
    4. 'ash' → logprob: -7.5567708015441895
    5. '[' → logprob: -8.806771278381348
    6. ',' → logprob: -9.431771278381348
    7. '(' → logprob: -9.931771278381348
    8. '   ' → logprob: -10.181771278381348
    9. '  ' → logprob: -10.431771278381348
    10. '[]' → logprob: -10.931771278381348

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894655108451843
    2. ' ' → logprob: -2.463946580886841
    3. '[' → logprob: -12.463946342468262
    4. ' [' → logprob: -12.963946342468262
    5. '1' → logprob: -15.088946342468262
    6. '۰' → logprob: -15.338946342468262
    7. ' ' → logprob: -15.838946342468262
    8. '[]' → logprob: -17.026447296142578
    9. '(' → logprob: -17.526447296142578
    10. 'ord' → logprob: -17.713947296142578

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009170551202259958
    2. ' ' → logprob: -7.000916957855225
    3. '[' → logprob: -12.375917434692383
    4. '1' → logprob: -14.000917434692383
    5. ' [' → logprob: -15.250917434692383
    6. '۰' → logprob: -16.938417434692383
    7. '(' → logprob: -17.313417434692383
    8. '   ' → logprob: -18.000917434692383
    9. '{' → logprob: -18.063417434692383
    10. '000' → logprob: -18.250917434692383

Token 34: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1536256074905396
    2. ' ' → logprob: -1.2786256074905396
    3. '*' → logprob: -1.9036256074905396
    4. ' for' → logprob: -2.15362548828125
    5. '   ' → logprob: -3.27862548828125
    6. ' *' → logprob: -3.52862548828125
    7. ')' → logprob: -3.65362548828125
    8. '<|end|>' → logprob: -3.65362548828125
    9. '    ' → logprob: -5.15362548828125
    10. '=' → logprob: -5.52862548828125

Token 35: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5369000434875488
    2. ' for' → logprob: -1.4119000434875488
    3. ' ' → logprob: -2.286900043487549
    4. '*' → logprob: -4.036900043487549
    5. '   ' → logprob: -4.036900043487549
    6. ':' → logprob: -4.161900043487549
    7. '=' → logprob: -5.036900043487549
    8. '
' → logprob: -5.661900043487549
    9. ')' → logprob: -6.411900043487549
    10. ' *' → logprob: -6.536900043487549

Token 36: ' b' (ID: 287)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34895485639572144
    2. ' for' → logprob: -1.2239549160003662
    3. ' ' → logprob: -8.098955154418945
    4. ')' → logprob: -9.473955154418945
    5. '   ' → logprob: -9.598955154418945
    6. ':' → logprob: -11.348955154418945
    7. '=' → logprob: -11.473955154418945
    8. '	for' → logprob: -11.848955154418945
    9. ',' → logprob: -12.098955154418945
    10. '
' → logprob: -12.848955154418945

Token 37: ' =' (ID: 314)
  Prédit: 'ase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ase' → logprob: -0.00036144492332823575
    2. '=' → logprob: -8.500361442565918
    3. 'a' → logprob: -10.000361442565918
    4. 'as' → logprob: -10.625361442565918
    5. 'for' → logprob: -11.500361442565918
    6. 'ased' → logprob: -11.625361442565918
    7. '*' → logprob: -11.625361442565918
    8. ' =' → logprob: -11.625361442565918
    9. 'ases' → logprob: -11.625361442565918
    10. 'base' → logprob: -11.625361442565918

Token 38: ' ' (ID: 220)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.35018372535705566
    2. ' base' → logprob: -1.2251837253570557
    3. '1' → logprob: -7.100183486938477
    4. ' ' → logprob: -7.600183486938477
    5. '0' → logprob: -8.725183486938477
    6. '129' → logprob: -8.975183486938477
    7. '(base' → logprob: -9.225183486938477
    8. '  ' → logprob: -12.100183486938477
    9. '	base' → logprob: -12.225183486938477
    10. '   ' → logprob: -12.600183486938477

Token 39: '1' (ID: 16)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.021899670362472534
    2. '1' → logprob: -4.021899700164795
    3. 'ase' → logprob: -5.646899700164795
    4. ' base' → logprob: -8.771899223327637
    5. '129' → logprob: -10.896899223327637
    6. '(base' → logprob: -11.271899223327637
    7. ' ' → logprob: -11.521899223327637
    8. '0' → logprob: -12.271899223327637
    9. 'se' → logprob: -13.396899223327637
    10. 'abase' → logprob: -13.396899223327637

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4562813341617584
    2. '   ' → logprob: -1.706281304359436
    3. '    
' → logprob: -2.5812814235687256
    4. 'for' → logprob: -3.4562814235687256
    5. ' for' → logprob: -3.9562814235687256
    6. '<|end|>' → logprob: -4.2062811851501465
    7. '\n' → logprob: -4.8312811851501465
    8. '  
' → logprob: -5.3312811851501465
    9. ' ' → logprob: -5.4562811851501465
    10. 'def' → logprob: -5.5812811851501465

Token 41: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -1.4464747905731201
    2. ' ' → logprob: -1.9464747905731201
    3. '   ' → logprob: -2.32147479057312
    4. ' 
' → logprob: -2.44647479057312
    5. '   
' → logprob: -2.44647479057312
    6. '
' → logprob: -2.69647479057312
    7. 'def' → logprob: -2.94647479057312
    8. '  
' → logprob: -3.19647479057312
    9. 'for' → logprob: -3.19647479057312
    10. '\n' → logprob: -3.82147479057312

Token 42: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9512367844581604
    2. '   ' → logprob: -1.3262367248535156
    3. 'for' (adapté à ' for') → logprob: -1.4512367248535156
    4. '
' → logprob: -2.9512367248535156
    5. ' ' → logprob: -3.7012367248535156
    6. '\n' → logprob: -4.326236724853516
    7. '    
' → logprob: -5.201236724853516
    8. ' 
' → logprob: -5.326236724853516
    9. '	for' → logprob: -5.451236724853516
    10. '   
' → logprob: -6.201236724853516

Token 43: ' s' (ID: 265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15143615007400513
    2. ' c' → logprob: -2.0264360904693604
    3. 'i' → logprob: -5.0264363288879395
    4. ' i' → logprob: -7.1514363288879395
    5. 'x' → logprob: -7.6514363288879395
    6. 's' → logprob: -7.7764363288879395
    7. ' ' → logprob: -8.776435852050781
    8. ' s' → logprob: -8.901435852050781
    9. 'ch' → logprob: -9.401435852050781
    10. 'e' → logprob: -10.651435852050781

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16116483509540558
    2. 'in' → logprob: -1.9111648797988892
    3. ' ' → logprob: -7.5361647605896
    4. 'i' → logprob: -8.411165237426758
    5. 'n' → logprob: -9.036165237426758
    6. '  ' → logprob: -11.286165237426758
    7. ' i' → logprob: -11.286165237426758
    8. 's' → logprob: -11.536165237426758
    9. '   ' → logprob: -12.161165237426758
    10. 'c' → logprob: -12.536165237426758

Token 45: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.048589639365673065
    2. ' S' → logprob: -3.0485897064208984
    3. ' range' → logprob: -13.923589706420898
    4. 'range' → logprob: -14.298589706420898
    5. 's' → logprob: -15.048589706420898
    6. '(S' → logprob: -15.298589706420898
    7. ' ' → logprob: -15.798589706420898
    8. ' s' → logprob: -17.1735897064209
    9. '	S' → logprob: -17.2985897064209
    10. '_S' → logprob: -17.4235897064209

Token 46: '[::-' (ID: 159890)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015276329941116273
    2. ':
' → logprob: -9.000152587890625
    3. ' :' → logprob: -11.250152587890625
    4. '   ' → logprob: -11.875152587890625
    5. '):' → logprob: -12.375152587890625
    6. 's' → logprob: -14.625152587890625
    7. '.' → logprob: -14.750152587890625
    8. '[::-' → logprob: -14.750152587890625
    9. '[:-' → logprob: -14.875152587890625
    10. '       ' → logprob: -14.875152587890625

Token 47: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0902404710650444
    2. '1' → logprob: -3.090240478515625
    3. '(s' → logprob: -5.090240478515625
    4. 'r' → logprob: -5.215240478515625
    5. ']):' → logprob: -5.340240478515625
    6. '):' → logprob: -5.465240478515625
    7. '):
' → logprob: -5.965240478515625
    8. ':' → logprob: -6.340240478515625
    9. 'er' → logprob: -6.590240478515625
    10. '(' → logprob: -6.840240478515625

Token 48: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1067458838224411
    2. '):' → logprob: -2.856745958328247
    3. ':' → logprob: -3.231745958328247
    4. ']:
' → logprob: -6.106745719909668
    5. '):
' → logprob: -7.231745719909668
    6. ']' → logprob: -7.356745719909668
    7. '>:' → logprob: -8.481745719909668
    8. '   ' → logprob: -9.106745719909668
    9. '）：' → logprob: -9.606745719909668
    10. '}:' → logprob: -9.981745719909668

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15332892537117004
    2. '   ' → logprob: -2.0283288955688477
    3. 'b' → logprob: -5.528328895568848
    4. ':' → logprob: -6.278328895568848
    5. ' ' → logprob: -6.403328895568848
    6. '<|end|>' → logprob: -7.528328895568848
    7. '        
' → logprob: -7.528328895568848
    8. ' b' → logprob: -8.028328895568848
    9. '    
' → logprob: -8.028328895568848
    10. '    ' → logprob: -8.153328895568848

Token 50: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' (adapté à ' H') → logprob: -0.18364496529102325
    2. ' H' → logprob: -1.8086450099945068
    3. 'b' → logprob: -5.933644771575928
    4. '   ' → logprob: -7.308644771575928
    5. '       ' → logprob: -8.433645248413086
    6. ' b' → logprob: -8.808645248413086
    7. '
' → logprob: -9.183645248413086
    8. ' ' → logprob: -10.558645248413086
    9. '	H' → logprob: -11.058645248413086
    10. '    ' → logprob: -11.058645248413086

Token 51: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9806693196296692
    2. '+=' → logprob: -0.9806693196296692
    3. ' +=' → logprob: -1.4806692600250244
    4. ' =' → logprob: -3.8556692600250244
    5. '+' → logprob: -7.6056694984436035
    6. ' ' → logprob: -7.9806694984436035
    7. ' ^=' → logprob: -8.480669021606445
    8. '*=' → logprob: -9.230669021606445
    9. ' *=' → logprob: -10.230669021606445
    10. '+=(' → logprob: -10.730669021606445

Token 52: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.21170982718467712
    2. ' (' → logprob: -1.8367098569869995
    3. '(' → logprob: -3.46170973777771
    4. ' ' → logprob: -10.086709976196289
    5. '(S' → logprob: -11.836709976196289
    6. '(s' → logprob: -11.836709976196289
    7. '(A' → logprob: -12.461709976196289
    8. '(
' → logprob: -12.961709976196289
    9. '(E' → logprob: -12.961709976196289
    10. '(Hash' → logprob: -13.211709976196289

Token 53: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03459986671805382
    2. ' H' → logprob: -3.409599781036377
    3. '(H' → logprob: -7.034599781036377
    4. ' (' → logprob: -9.909600257873535
    5. '(' → logprob: -11.409600257873535
    6. ' ' → logprob: -12.534600257873535
    7. '	H' → logprob: -13.409600257873535
    8. 's' → logprob: -13.534600257873535
    9. '_H' → logprob: -13.909600257873535
    10. '   ' → logprob: -14.159600257873535

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759876370429993
    2. ' +' → logprob: -0.8259876370429993
    3. ' ' → logprob: -10.450987815856934
    4. '*' → logprob: -11.700987815856934
    5. '+s' → logprob: -11.950987815856934
    6. ' *' → logprob: -12.950987815856934
    7. ' plus' → logprob: -15.075987815856934
    8. 's' → logprob: -15.200987815856934
    9. '+b' → logprob: -15.200987815856934
    10. ' ' → logprob: -15.575987815856934

Token 55: ' ord' (ID: 6608)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8477535843849182
    2. ' ord' → logprob: -1.2227535247802734
    3. 'b' → logprob: -1.5977535247802734
    4. 'ord' → logprob: -2.9727535247802734
    5. '(ord' → logprob: -4.472753524780273
    6. ' (' → logprob: -4.847753524780273
    7. ' s' → logprob: -6.847753524780273
    8. ' base' → logprob: -7.222753524780273
    9. '(' → logprob: -7.222753524780273
    10. 'base' → logprob: -7.472753524780273

Token 56: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0005015624337829649
    2. '(' → logprob: -7.62550163269043
    3. 's' → logprob: -11.25050163269043
    4. ' (' → logprob: -15.25050163269043
    5. '('' → logprob: -15.50050163269043
    6. ')' → logprob: -16.62550163269043
    7. ' s' → logprob: -17.75050163269043
    8. '(
' → logprob: -17.87550163269043
    9. '("("' → logprob: -17.87550163269043
    10. ')(' → logprob: -19.00050163269043

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002512639155611396
    2. ')*' → logprob: -6.127512454986572
    3. ' )' → logprob: -8.50251293182373
    4. '')' → logprob: -9.87751293182373
    5. '*)' → logprob: -10.12751293182373
    6. '")' → logprob: -11.37751293182373
    7. '   ' → logprob: -11.50251293182373
    8. ' ' → logprob: -13.37751293182373
    9. '  ' → logprob: -13.50251293182373
    10. '	' → logprob: -13.75251293182373

Token 58: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.056079961359500885
    2. ' *' → logprob: -2.931079864501953
    3. ')' → logprob: -7.431079864501953
    4. ' ' → logprob: -7.806079864501953
    5. ')*' → logprob: -8.931079864501953
    6. '*b' → logprob: -10.931079864501953
    7. '**' → logprob: -11.431079864501953
    8. 'b' → logprob: -11.556079864501953
    9. '   ' → logprob: -11.681079864501953
    10. ''*' → logprob: -12.431079864501953

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759430527687073
    2. ' b' → logprob: -0.8259430527687073
    3. '	b' → logprob: -12.825942993164062
    4. ')b' → logprob: -14.450942993164062
    5. ' ' → logprob: -15.450942993164062
    6. 'base' → logprob: -16.325942993164062
    7. '*b' → logprob: -16.825942993164062
    8. '   ' → logprob: -17.950942993164062
    9. '>b' → logprob: -17.950942993164062
    10. ' б' → logprob: -18.075942993164062

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004824668634682894
    2. ' )' → logprob: -5.379824638366699
    3. ')%' → logprob: -8.5048246383667
    4. '%' → logprob: -13.6298246383667
    5. '   ' → logprob: -16.004825592041016
    6. ' ' → logprob: -16.004825592041016
    7. ')
' → logprob: -16.254825592041016
    8. '）' → logprob: -16.629825592041016
    9. ')#' → logprob: -16.754825592041016
    10. ' %' → logprob: -16.879825592041016

Token 61: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5986657738685608
    2. '%' → logprob: -1.098665714263916
    3. ')' → logprob: -2.223665714263916
    4. ')%' → logprob: -5.098665714263916
    5. '%b' → logprob: -5.973665714263916
    6. ' )' → logprob: -8.348666191101074
    7. '%c' → logprob: -11.223666191101074
    8. ' ' → logprob: -12.098666191101074
    9. '%B' → logprob: -12.348666191101074
    10. '%x' → logprob: -12.473666191101074

Token 62: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00037085101939737797
    2. ' mod' → logprob: -8.000370979309082
    3. '(mod' → logprob: -10.250370979309082
    4. '	mod' → logprob: -17.250370025634766
    5. '(' → logprob: -17.500370025634766
    6. ' (' → logprob: -19.125370025634766
    7. ' ' → logprob: -19.250370025634766
    8. 'm' → logprob: -21.250370025634766
    9. '_mod' → logprob: -21.375370025634766
    10. ' мод' → logprob: -21.500370025634766

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3801267743110657
    2. '       ' → logprob: -1.255126714706421
    3. '
' → logprob: -3.880126714706421
    4. '        
' → logprob: -6.380126953125
    5. ' 
' → logprob: -6.630126953125
    6. 'b' → logprob: -6.630126953125
    7. '	' → logprob: -7.130126953125
    8. '   ' → logprob: -7.255126953125
    9. '    
' → logprob: -7.380126953125
    10. '' → logprob: -7.505126953125

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.519095778465271
    2. 'base' → logprob: -1.519095778465271
    3. '   ' → logprob: -1.894095778465271
    4. '```' → logprob: -1.894095778465271
    5. 'b' → logprob: -2.1440958976745605
    6. '``' → logprob: -3.5190958976745605
    7. '
' → logprob: -3.7690958976745605
    8. '    
' → logprob: -3.7690958976745605
    9. '	base' → logprob: -4.5190958976745605
    10. '        
' → logprob: -4.7690958976745605

Token 65: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0006009306525811553
    2. ' b' → logprob: -7.625600814819336
    3. 'base' → logprob: -9.750600814819336
    4. '   ' → logprob: -9.875600814819336
    5. '	b' → logprob: -13.250600814819336
    6. '       ' → logprob: -14.125600814819336
    7. ' base' → logprob: -14.875600814819336
    8. ' ' → logprob: -16.250600814819336
    9. '```' → logprob: -16.375600814819336
    10. '  ' → logprob: -16.625600814819336

Token 66: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.025151479989290237
    2. '=' → logprob: -3.775151491165161
    3. ' *=' → logprob: -6.400151252746582
    4. ' =' → logprob: -8.400151252746582
    5. '*' → logprob: -11.025151252746582
    6. ' ' → logprob: -14.150151252746582
    7. '	' → logprob: -14.775151252746582
    8. '+=' → logprob: -16.1501522064209
    9. ' ' → logprob: -16.2751522064209
    10. '.=' → logprob: -16.4001522064209

Token 67: ' b' (ID: 287)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.031040703877806664
    2. ' (' → logprob: -3.656040668487549
    3. 'b' → logprob: -5.656040668487549
    4. '(' → logprob: -7.281040668487549
    5. '(base' → logprob: -7.781040668487549
    6. ' b' → logprob: -9.031041145324707
    7. ' ' → logprob: -12.406041145324707
    8. '   ' → logprob: -14.031041145324707
    9. 'base' → logprob: -15.031041145324707
    10. '(mod' → logprob: -15.031041145324707

Token 68: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.003178901970386505
    2. ' *' → logprob: -5.75317907333374
    3. '*(' → logprob: -14.503178596496582
    4. ' ' → logprob: -15.378178596496582
    5. '(base' → logprob: -15.753178596496582
    6. '**' → logprob: -16.0031795501709
    7. '*=' → logprob: -16.2531795501709
    8. '*b' → logprob: -16.6281795501709
    9. '*object' → logprob: -16.8781795501709
    10. 'base' → logprob: -17.6281795501709

Token 69: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.00029685118352063
    2. ' base' → logprob: -8.125296592712402
    3. '129' → logprob: -14.375296592712402
    4. '(base' → logprob: -16.00029754638672
    5. ' ' → logprob: -16.37529754638672
    6. '	base' → logprob: -17.25029754638672
    7. 'b' → logprob: -17.87529754638672
    8. '   ' → logprob: -18.00029754638672
    9. '```' → logprob: -18.12529754638672
    10. 'bas' → logprob: -18.87529754638672

Token 70: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16026556491851807
    2. ' %' → logprob: -1.910265564918518
    3. ' mod' → logprob: -11.160265922546387
    4. ' %=' → logprob: -11.910265922546387
    5. 'mod' → logprob: -12.285265922546387
    6. '%n' → logprob: -12.410265922546387
    7. ')' → logprob: -13.035265922546387
    8. ')%' → logprob: -13.160265922546387
    9. '%d' → logprob: -13.660265922546387
    10. '%c' → logprob: -13.660265922546387

Token 71: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -4.5491004129871726e-05
    2. ' mod' → logprob: -10.000045776367188
    3. '(mod' → logprob: -16.500045776367188
    4. ' ' → logprob: -20.000045776367188
    5. '	mod' → logprob: -20.625045776367188
    6. 'moder' → logprob: -21.750045776367188
    7. 'm' → logprob: -22.750045776367188
    8. ' мод' → logprob: -23.125045776367188
    9. '```' → logprob: -23.250045776367188
    10. 'modal' → logprob: -23.250045776367188

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0698709636926651
    2. '<|end|>' → logprob: -3.944870948791504
    3. ' return' → logprob: -4.194870948791504
    4. ')' → logprob: -4.194870948791504
    5. 'return' → logprob: -5.569870948791504
    6. '	return' → logprob: -5.569870948791504
    7. '
' → logprob: -5.819870948791504
    8. ':return' → logprob: -5.944870948791504
    9. ' ' → logprob: -6.069870948791504
    10. '  ' → logprob: -7.944870948791504

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2604122757911682
    2. '<|end|>' → logprob: -2.2604122161865234
    3. ' return' → logprob: -2.7604122161865234
    4. ':return' → logprob: -3.8854122161865234
    5. 'return' → logprob: -4.260412216186523
    6. ' ' → logprob: -4.510412216186523
    7. ')' → logprob: -5.260412216186523
    8. '	return' → logprob: -5.510412216186523
    9. '  ' → logprob: -7.010412216186523
    10. '\n' → logprob: -7.010412216186523

Token 74: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45469018816947937
    2. 'return' (adapté à ' return') → logprob: -1.3296902179718018
    3. ' return' → logprob: -2.4546902179718018
    4. ')' → logprob: -4.954689979553223
    5. ':return' → logprob: -5.704689979553223
    6. '	return' → logprob: -6.079689979553223
    7. ' ' → logprob: -6.454689979553223
    8. ':' → logprob: -8.329689979553223
    9. '```' → logprob: -9.204689979553223
    10. '  ' → logprob: -9.704689979553223

Token 75: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.01416398212313652
    2. ' H' → logprob: -4.264163970947266
    3. '(H' → logprob: -15.264163970947266
    4. ' ' → logprob: -16.014163970947266
    5. '	H' → logprob: -17.014163970947266
    6. ' ' → logprob: -17.889163970947266
    7. '   ' → logprob: -18.264163970947266
    8. 'int' → logprob: -19.139163970947266
    9. ',H' → logprob: -19.264163970947266
    10. '_H' → logprob: -19.389163970947266

Token 76: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8962182998657227
    2. ')' → logprob: -2.1462182998657227
    3. '*' → logprob: -2.3962182998657227
    4. '<|end|>' → logprob: -2.5212182998657227
    5. ' ' → logprob: -2.7712182998657227
    6. '(' → logprob: -2.8962182998657227
    7. '_' → logprob: -3.1462182998657227
    8. '+' → logprob: -3.1462182998657227
    9. '[' → logprob: -3.2712182998657227
    10. '
' → logprob: -4.146218299865723

Token 77: 'lp' (ID: 27862)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.180733561515808
    2. 'def' → logprob: -1.555733561515808
    3. 'T' → logprob: -2.0557336807250977
    4. 'n' → logprob: -2.1807336807250977
    5. 't' → logprob: -2.9307336807250977
    6. 'p' → logprob: -3.5557336807250977
    7. '_' → logprob: -3.6807336807250977
    8. 'r' → logprob: -4.305733680725098
    9. 'm' → logprob: -4.305733680725098
    10. 'H' → logprob: -4.305733680725098

Token 78: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2056521773338318
    2. ' =' → logprob: -2.4556522369384766
    3. '=len' → logprob: -3.0806522369384766
    4. 'en' → logprob: -3.5806522369384766
    5. 'p' → logprob: -4.705652236938477
    6. 'len' → logprob: -5.330652236938477
    7. '_len' → logprob: -5.580652236938477
    8. '_' → logprob: -6.205652236938477
    9. 'l' → logprob: -6.580652236938477
    10. '=[]' → logprob: -7.205652236938477

Token 79: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0022625441197305918
    2. ' len' → logprob: -6.127262592315674
    3. '(len' → logprob: -10.377262115478516
    4. '[len' → logprob: -10.377262115478516
    5. '=len' → logprob: -11.627262115478516
    6. '<|end|>' → logprob: -13.252262115478516
    7. '<len' → logprob: -13.502262115478516
    8. '0' → logprob: -13.627262115478516
    9. '	len' → logprob: -13.752262115478516
    10. 'length' → logprob: -15.627262115478516

Token 80: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0001427538663847372
    2. 'P' → logprob: -9.625143051147461
    3. '(' → logprob: -9.875143051147461
    4. '(T' → logprob: -10.750143051147461
    5. '(p' → logprob: -13.125143051147461
    6. ' (' → logprob: -15.000143051147461
    7. '(S' → logprob: -15.250143051147461
    8. ')' → logprob: -15.875143051147461
    9. '(L' → logprob: -15.875143051147461
    10. '(
' → logprob: -16.50014305114746

Token 81: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ' )' → logprob: -11.750015258789062
    3. ')
' → logprob: -12.375015258789062
    4. '())' → logprob: -14.250015258789062
    5. '()' → logprob: -14.375015258789062
    6. '#' → logprob: -14.375015258789062
    7. '))' → logprob: -15.375015258789062
    8. '')' → logprob: -15.750015258789062
    9. ')

' → logprob: -15.875015258789062
    10. ')#' → logprob: -15.875015258789062

Token 82: 'Hp' (ID: 78804)
  Prédit: 'lr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lr' → logprob: -0.8754518628120422
    2. 'hr' → logprob: -1.8754518032073975
    3. 'ls' → logprob: -2.5004518032073975
    4. 'hm' → logprob: -2.8754518032073975
    5. 'hash' → logprob: -3.0004518032073975
    6. 'hl' → logprob: -3.1254518032073975
    7. 'lh' → logprob: -3.7504518032073975
    8. 'l' → logprob: -3.7504518032073975
    9. 'hp' → logprob: -3.8754518032073975
    10. 'lt' → logprob: -3.8754518032073975

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012574988417327404
    2. ' =' → logprob: -4.387575149536133
    3. '[' → logprob: -10.262575149536133
    4. 'p' → logprob: -11.262575149536133
    5. '=[]' → logprob: -12.887575149536133
    6. '=[' → logprob: -13.512575149536133
    7. ')' → logprob: -13.512575149536133
    8. ' ' → logprob: -13.512575149536133
    9. '[:]' → logprob: -13.637575149536133
    10. '=len' → logprob: -13.762575149536133

Token 84: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.049699023365974426
    2. ' get' → logprob: -3.049699068069458
    3. '(get' → logprob: -7.549698829650879
    4. 'g' → logprob: -8.674698829650879
    5. '0' → logprob: -9.049698829650879
    6. '[get' → logprob: -9.924698829650879
    7. '	get' → logprob: -10.174698829650879
    8. 'gh' → logprob: -10.174698829650879
    9. 'geh' → logprob: -10.174698829650879
    10. ' g' → logprob: -10.299698829650879

Token 85: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0011318821925669909
    2. '(P' → logprob: -7.001132011413574
    3. '(hash' → logprob: -9.126132011413574
    4. 'ash' → logprob: -9.751132011413574
    5. 'h' → logprob: -11.126132011413574
    6. '(p' → logprob: -11.501132011413574
    7. 'Hash' → logprob: -11.626132011413574
    8. 'hp' → logprob: -12.251132011413574
    9. ' hash' → logprob: -12.876132011413574
    10. '_hash' → logprob: -13.126132011413574

Token 86: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0006298751104623079
    2. '(' → logprob: -7.375629901885986
    3. '(p' → logprob: -13.000629425048828
    4. '((' → logprob: -14.250629425048828
    5. ' (' → logprob: -15.250629425048828
    6. '(
' → logprob: -16.875629425048828
    7. '('' → logprob: -17.875629425048828
    8. 'P' → logprob: -17.875629425048828
    9. '(Py' → logprob: -17.875629425048828
    10. '(S' → logprob: -18.250629425048828

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -14.625009536743164
    4. ')

' → logprob: -14.875009536743164
    5. '())' → logprob: -17.250009536743164
    6. '))' → logprob: -17.250009536743164
    7. '()' → logprob: -17.625009536743164
    8. ')#' → logprob: -18.250009536743164
    9. ')
' → logprob: -18.500009536743164
    10. ')p' → logprob: -18.625009536743164

Token 88: 'Hs' (ID: 134421)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.2894594967365265
    2. 'Hs' → logprob: -2.664459466934204
    3. 'HN' → logprob: -3.539459466934204
    4. 'hn' → logprob: -3.664459466934204
    5. 'n' → logprob: -3.789459466934204
    6. 'hl' → logprob: -4.164459705352783
    7. 'T' → logprob: -4.289459705352783
    8. 'hs' → logprob: -4.289459705352783
    9. 'Hr' → logprob: -4.539459705352783
    10. 'Hl' → logprob: -4.789459705352783

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327664256095886
    2. '=' → logprob: -0.7577664256095886
    3. 's' → logprob: -9.632766723632812
    4. '(' → logprob: -10.132766723632812
    5. ' ' → logprob: -10.382766723632812
    6. 'T' → logprob: -12.007766723632812
    7. '[' → logprob: -12.257766723632812
    8. ')' → logprob: -12.632766723632812
    9. 'f' → logprob: -13.132766723632812
    10. ',' → logprob: -13.382766723632812

Token 90: ' get' (ID: 717)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5714330077171326
    2. 'get' → logprob: -1.3214330673217773
    3. ' get' → logprob: -1.9464330673217773
    4. ' ' → logprob: -3.6964330673217773
    5. '(get' → logprob: -8.196433067321777
    6. '[get' → logprob: -8.196433067321777
    7. '[]' → logprob: -8.946433067321777
    8. ' []' → logprob: -9.446433067321777
    9. ' [' → logprob: -10.696433067321777
    10. '  ' → logprob: -10.821433067321777

Token 91: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.0007336281123571098
    2. '(hash' → logprob: -7.750733852386475
    3. 'ash' → logprob: -8.250733375549316
    4. ' hash' → logprob: -11.000733375549316
    5. 'Hash' → logprob: -11.250733375549316
    6. '(T' → logprob: -11.875733375549316
    7. '_hash' → logprob: -13.750733375549316
    8. 'h' → logprob: -13.875733375549316
    9. 's' → logprob: -14.125733375549316
    10. ')' → logprob: -14.125733375549316

Token 92: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.000182921823579818
    2. '(' → logprob: -8.75018310546875
    3. ' (' → logprob: -11.75018310546875
    4. '(S' → logprob: -12.00018310546875
    5. '<|end|>' → logprob: -12.75018310546875
    6. 'T' → logprob: -12.87518310546875
    7. '(P' → logprob: -13.75018310546875
    8. '('' → logprob: -14.12518310546875
    9. ')' → logprob: -14.25018310546875
    10. '((' → logprob: -14.75018310546875

Token 93: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.011153575964272022
    2. '[' → logprob: -5.136153697967529
    3. ')' → logprob: -5.386153697967529
    4. '[:-' → logprob: -7.886153697967529
    5. '[-' → logprob: -8.636153221130371
    6. '[len' → logprob: -10.761153221130371
    7. '[l' → logprob: -11.261153221130371
    8. 'lp' → logprob: -11.511153221130371
    9. '(lp' → logprob: -11.511153221130371
    10. '(' → logprob: -11.886153221130371

Token 94: 'lp' (ID: 27862)
  Prédit: 'lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lp' → logprob: -8.537868779967539e-06
    2. ' lp' → logprob: -11.750008583068848
    3. '(lp' → logprob: -15.000008583068848
    4. '	lp' → logprob: -16.12500762939453
    5. ')' → logprob: -16.50000762939453
    6. '_lp' → logprob: -17.12500762939453
    7. '.lp' → logprob: -17.25000762939453
    8. 'Lp' → logprob: -18.12500762939453
    9. 'len' → logprob: -18.37500762939453
    10. 'l' → logprob: -18.87500762939453

Token 95: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003660938236862421
    2. ')' → logprob: -8.0003662109375
    3. ')])' → logprob: -11.6253662109375
    4. '])
' → logprob: -11.8753662109375
    5. ']' → logprob: -12.0003662109375
    6. ' ])' → logprob: -12.7503662109375
    7. ')]' → logprob: -13.5003662109375
    8. '))' → logprob: -13.6253662109375
    9. ''])' → logprob: -14.0003662109375
    10. ']))' → logprob: -14.2503662109375

Token 96: 'm' (ID: 76)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9880843758583069
    2. 'for' → logprob: -1.238084316253662
    3. 'ans' → logprob: -1.988084316253662
    4. 'result' → logprob: -2.613084316253662
    5. 'results' → logprob: -2.738084316253662
    6. 'i' → logprob: -3.488084316253662
    7. 'answers' → logprob: -5.238084316253662
    8. 'if' → logprob: -5.363084316253662
    9. 'answer' → logprob: -5.363084316253662
    10. 'found' → logprob: -5.488084316253662

Token 97: ' =' (ID: 314)
  Prédit: 'atch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atch' → logprob: -0.11797670274972916
    2. 'atches' → logprob: -2.617976665496826
    3. 'a' → logprob: -3.492976665496826
    4. 'atching' → logprob: -5.617976665496826
    5. 'atched' → logprob: -6.867976665496826
    6. 'ap' → logprob: -6.992976665496826
    7. '=' → logprob: -6.992976665496826
    8. ' =' → logprob: -7.617976665496826
    9. 'at' → logprob: -7.867976665496826
    10. '1' → logprob: -8.992977142333984

Token 98: ' pow' (ID: 9779)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07568038254976273
    2. '[]' → logprob: -3.3256804943084717
    3. ' ' → logprob: -4.325680255889893
    4. '{}' → logprob: -4.825680255889893
    5. 'len' → logprob: -4.825680255889893
    6. ' []' → logprob: -5.075680255889893
    7. ' len' → logprob: -7.700680255889893
    8. '1' → logprob: -7.825680255889893
    9. ' {}' → logprob: -9.07568073272705
    10. '[' → logprob: -9.07568073272705

Token 99: '(base' (ID: 25314)
  Prédit: '(base'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(base' → logprob: -0.0013330980436876416
    2. 'base' → logprob: -6.626333236694336
    3. '(' → logprob: -12.376333236694336
    4. 'mod' → logprob: -13.126333236694336
    5. '_base' → logprob: -15.376333236694336
    6. '(mod' → logprob: -15.751333236694336
    7. ' base' → logprob: -15.751333236694336
    8. '	base' → logprob: -15.876333236694336
    9. '/base' → logprob: -16.376333236694336
    10. '2' → logprob: -16.876333236694336

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007133281324058771
    2. 'lp' → logprob: -5.257133483886719
    3. ' ,' → logprob: -6.632133483886719
    4. '(lp' → logprob: -7.757133483886719
    5. ' lp' → logprob: -9.382133483886719
    6. '	lp' → logprob: -10.382133483886719
    7. '_lp' → logprob: -10.757133483886719
    8. 'LP' → logprob: -12.132133483886719
    9. ',l' → logprob: -13.007133483886719
    10. ',len' → logprob: -13.132133483886719

Token 101: ' lp' (ID: 35821)
  Prédit: 'lp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lp' → logprob: -0.002493375912308693
    2. ' lp' → logprob: -6.002493381500244
    3. '(lp' → logprob: -11.502492904663086
    4. 'len' → logprob: -12.502492904663086
    5. '	lp' → logprob: -13.127492904663086
    6. '_lp' → logprob: -14.127492904663086
    7. '.lp' → logprob: -14.627492904663086
    8. ' ' → logprob: -14.877492904663086
    9. '1' → logprob: -16.502492904663086
    10. 'Lp' → logprob: -16.627492904663086

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027547070756554604
    2. '-' → logprob: -3.9025471210479736
    3. ' ,' → logprob: -5.5275468826293945
    4. ' -' → logprob: -6.1525468826293945
    5. ')' → logprob: -7.1525468826293945
    6. ',m' → logprob: -10.402546882629395
    7. ',-' → logprob: -11.277546882629395
    8. ',module' → logprob: -12.152546882629395
    9. 'mod' → logprob: -12.277546882629395
    10. ' ' → logprob: -12.402546882629395

Token 103: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0003802680876106024
    2. ' mod' → logprob: -7.875380039215088
    3. '(mod' → logprob: -16.37537956237793
    4. ')' → logprob: -17.50037956237793
    5. ' ' → logprob: -17.50037956237793
    6. '	mod' → logprob: -18.00037956237793
    7. 'int' → logprob: -20.00037956237793
    8. 'm' → logprob: -20.37537956237793
    9. '```' → logprob: -20.37537956237793
    10. '
' → logprob: -20.37537956237793

Token 104: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008232106338255107
    2. ')
' → logprob: -7.125823020935059
    3. ' )' → logprob: -11.250823020935059
    4. ')

' → logprob: -12.250823020935059
    5. ')
' → logprob: -15.625823020935059
    6. ')#' → logprob: -15.625823020935059
    7. ')m' → logprob: -16.000823974609375
    8. '))' → logprob: -16.625823974609375
    9. ')return' → logprob: -16.875823974609375
    10. ')`' → logprob: -17.125823974609375

Token 105: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1963060200214386
    2. 'i' → logprob: -1.8213059902191162
    3. 'n' → logprob: -4.571306228637695
    4. 'ans' → logprob: -6.196306228637695
    5. ' for' → logprob: -6.696306228637695
    6. 'res' → logprob: -7.196306228637695
    7. 'results' → logprob: -7.321306228637695
    8. 'result' → logprob: -7.446306228637695
    9. 'found' → logprob: -8.321306228637695
    10. 'matches' → logprob: -9.196306228637695

Token 106: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11310882866382599
    2. 'i' → logprob: -2.2381088733673096
    3. ' range' → logprob: -8.86310863494873
    4. ' ' → logprob: -9.48810863494873
    5. 'range' → logprob: -10.48810863494873
    6. '_' → logprob: -10.61310863494873
    7. ' _' → logprob: -12.23810863494873
    8. '_i' → logprob: -13.11310863494873
    9. ')' → logprob: -13.11310863494873
    10. ' in' → logprob: -13.36310863494873

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032179991248995066
    2. ' ' → logprob: -6.503218173980713
    3. 'in' → logprob: -6.503218173980713
    4. ' range' → logprob: -8.503217697143555
    5. 'range' → logprob: -12.003217697143555
    6. '  ' → logprob: -12.878217697143555
    7. ' xrange' → logprob: -13.503217697143555
    8. 'n' → logprob: -14.378217697143555
    9. ' n' → logprob: -14.378217697143555
    10. ',' → logprob: -14.378217697143555

Token 108: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931605935096741
    2. 'range' → logprob: -0.6931605935096741
    3. ' ' → logprob: -12.193161010742188
    4. '(range' → logprob: -12.318161010742188
    5. ' xrange' → logprob: -13.068161010742188
    6. '	range' → logprob: -13.568161010742188
    7. '  ' → logprob: -16.318161010742188
    8. '   ' → logprob: -16.443161010742188
    9. 'rang' → logprob: -16.943161010742188
    10. 'r' → logprob: -17.068161010742188

Token 109: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.010110076516866684
    2. '(' → logprob: -4.760109901428223
    3. '(lp' → logprob: -6.510109901428223
    4. ' (' → logprob: -12.385109901428223
    5. '(l' → logprob: -13.885109901428223
    6. 'len' → logprob: -15.385109901428223
    7. '((' → logprob: -15.885109901428223
    8. '(
' → logprob: -16.01011085510254
    9. 'lp' → logprob: -16.26011085510254
    10. ' lp' → logprob: -16.76011085510254

Token 110: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -5.526570384972729e-05
    2. '(P' → logprob: -10.500055313110352
    3. ' (' → logprob: -10.875055313110352
    4. '(' → logprob: -12.250055313110352
    5. 'T' → logprob: -13.250055313110352
    6. '(t' → logprob: -14.500055313110352
    7. ' T' → logprob: -15.000055313110352
    8. '(
' → logprob: -15.000055313110352
    9. ')' → logprob: -15.500055313110352
    10. '	T' → logprob: -15.625055313110352

Token 111: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07372155785560608
    2. '-' → logprob: -2.6987216472625732
    3. '-l' → logprob: -5.698721408843994
    4. ')):
' → logprob: -8.698721885681152
    5. ')' → logprob: -8.948721885681152
    6. ' ' → logprob: -9.698721885681152
    7. ')):' → logprob: -10.573721885681152
    8. '):
' → logprob: -11.198721885681152
    9. '):' → logprob: -11.948721885681152
    10. '))' → logprob: -12.323721885681152

Token 112: 'lp' (ID: 27862)
  Prédit: 'lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lp' → logprob: -0.006735026836395264
    2. ' lp' → logprob: -5.006734848022461
    3. '(lp' → logprob: -11.006734848022461
    4. '	lp' → logprob: -13.506734848022461
    5. ' ' → logprob: -14.506734848022461
    6. '   ' → logprob: -14.881734848022461
    7. ' (' → logprob: -15.381734848022461
    8. '_lp' → logprob: -15.631734848022461
    9. 'len' → logprob: -15.881734848022461
    10. '
' → logprob: -16.13173484802246

Token 113: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02992832474410534
    2. ' +' → logprob: -3.529928207397461
    3. '):' → logprob: -8.779928207397461
    4. '):
' → logprob: -11.279928207397461
    5. '1' → logprob: -11.904928207397461
    6. '+
' → logprob: -13.029928207397461
    7. ')' → logprob: -14.279928207397461
    8. ' ' → logprob: -14.404928207397461
    9. ' plus' → logprob: -15.154928207397461
    10. '+:' → logprob: -15.404928207397461

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23899641633033752
    2. '<|end|>' → logprob: -1.6139963865280151
    3. '<|end|>' → logprob: -5.738996505737305
    4. ' if' → logprob: -5.738996505737305
    5. '    
' → logprob: -6.238996505737305
    6. '	if' → logprob: -6.613996505737305
    7. '
' → logprob: -6.863996505737305
    8. ' ' → logprob: -7.738996505737305
    9. ' 
' → logprob: -8.113996505737305
    10. '```' → logprob: -8.363996505737305

Token 115: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15754711627960205
    2. 'Hs' → logprob: -2.6575469970703125
    3. ' if' → logprob: -3.6575469970703125
    4. ' H' → logprob: -3.7825469970703125
    5. 'if' (adapté à ' if') → logprob: -4.4075469970703125
    6. 'next' → logprob: -5.5325469970703125
    7. ' next' → logprob: -5.7825469970703125
    8. 'H' → logprob: -6.2825469970703125
    9. '    ' → logprob: -6.5325469970703125
    10. '	H' → logprob: -6.6575469970703125

Token 116: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.09256076067686081
    2. ' Hp' → logprob: -2.8425607681274414
    3. 'Hs' → logprob: -3.9675607681274414
    4. 'Hp' → logprob: -4.592560768127441
    5. ' ' → logprob: -7.467560768127441
    6. 'H' → logprob: -7.842560768127441
    7. '(H' → logprob: -9.967560768127441
    8. '	H' → logprob: -10.842560768127441
    9. ' ' → logprob: -10.842560768127441
    10. ' (' → logprob: -12.092560768127441

Token 117: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.930552313453518e-05
    2. ' ==' → logprob: -11.000049591064453
    3. '==' → logprob: -11.250049591064453
    4. '[s' → logprob: -12.500049591064453
    5. '_s' → logprob: -12.875049591064453
    6. '=' → logprob: -13.125049591064453
    7. '(s' → logprob: -13.125049591064453
    8. '```' → logprob: -13.125049591064453
    9. ' s' → logprob: -13.625049591064453
    10. ')' → logprob: -14.187549591064453

Token 118: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.10094833374023438
    2. '==' → logprob: -2.3509483337402344
    3. '=' → logprob: -7.350948333740234
    4. ' =' → logprob: -9.350948333740234
    5. ')' → logprob: -12.225948333740234
    6. ' ' → logprob: -12.725948333740234
    7. ' ' → logprob: -12.975948333740234
    8. 's' → logprob: -15.100948333740234
    9. '	' → logprob: -15.225948333740234
    10. ')==' → logprob: -15.350948333740234

Token 119: ' Hp' (ID: 160691)
  Prédit: 'Hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hp' → logprob: -0.003179259831085801
    2. ' Hp' → logprob: -5.75317907333374
    3. ' ' → logprob: -13.753179550170898
    4. 'Hs' → logprob: -15.253179550170898
    5. '   ' → logprob: -15.878179550170898
    6. '  ' → logprob: -17.1281795501709
    7. 'H' → logprob: -17.2531795501709
    8. '
' → logprob: -17.7531795501709
    9. 'Hb' → logprob: -18.5031795501709
    10. 'HP' → logprob: -18.6281795501709

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036281042266637087
    2. ':
' → logprob: -5.628628253936768
    3. ' and' → logprob: -10.75362777709961
    4. ':

' → logprob: -13.12862777709961
    5. 'and' → logprob: -14.00362777709961
    6. ' :' → logprob: -14.12862777709961
    7. ':
' → logprob: -14.50362777709961
    8. ':return' → logprob: -14.50362777709961
    9. '   ' → logprob: -14.62862777709961
    10. ',' → logprob: -14.87862777709961

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03681463003158569
    2. 'print' → logprob: -3.7868146896362305
    3. '   ' → logprob: -4.6618146896362305
    4. ' print' → logprob: -5.5368146896362305
    5. '	print' → logprob: -10.66181468963623
    6. '           ' → logprob: -11.78681468963623
    7. '
' → logprob: -11.91181468963623
    8. '     ' → logprob: -11.91181468963623
    9. '    ' → logprob: -11.91181468963623
    10. '<|end|>' → logprob: -12.16181468963623

Token 122: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0028953328728675842
    2. ' print' → logprob: -5.877895355224609
    3. '   ' → logprob: -9.37789535522461
    4. '
' → logprob: -13.00289535522461
    5. 'pr' → logprob: -13.62789535522461
    6. '	print' → logprob: -14.12789535522461
    7. '       ' → logprob: -15.50289535522461
    8. 'prin' → logprob: -15.50289535522461
    9. 'break' → logprob: -15.62789535522461
    10. '    ' → logprob: -15.75289535522461

Token 123: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00011653638648567721
    2. 'i' → logprob: -9.625116348266602
    3. '(' → logprob: -10.000116348266602
    4. '(T' → logprob: -13.000116348266602
    5. '("' → logprob: -13.750116348266602
    6. '()' → logprob: -14.375116348266602
    7. ' (' → logprob: -15.000116348266602
    8. '((' → logprob: -15.750116348266602
    9. ' i' → logprob: -16.1251163482666
    10. '('' → logprob: -16.2501163482666

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017731155967339873
    2. ')
' → logprob: -6.376772880554199
    3. ',' → logprob: -10.1267728805542
    4. ' )' → logprob: -11.0017728805542
    5. '   ' → logprob: -11.8767728805542
    6. '")' → logprob: -13.3767728805542
    7. ',)' → logprob: -13.3767728805542
    8. ':' → logprob: -14.5017728805542
    9. ':)' → logprob: -14.5017728805542
    10. '')' → logprob: -14.6267728805542

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011563967913389206
    2. '    
' → logprob: -5.136563777923584
    3. 'Hs' → logprob: -5.761563777923584
    4. ' H' → logprob: -6.761563777923584
    5. '```' → logprob: -8.386564254760742
    6. 'H' → logprob: -8.386564254760742
    7. '
' → logprob: -8.636564254760742
    8. ' 
' → logprob: -8.886564254760742
    9. '#' → logprob: -9.011564254760742
    10. '  
' → logprob: -9.386564254760742

Token 126: ' H' (ID: 487)
  Prédit: 'Hs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hs' → logprob: -0.006984130013734102
    2. '   ' → logprob: -5.631984233856201
    3. ' H' → logprob: -5.881984233856201
    4. '    
' → logprob: -8.381983757019043
    5. '#' → logprob: -9.256983757019043
    6. 'hs' → logprob: -9.881983757019043
    7. 'b' → logprob: -10.131983757019043
    8. ' ' → logprob: -10.131983757019043
    9. '```' → logprob: -10.756983757019043
    10. ' b' → logprob: -11.131983757019043

Token 127: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.292907877039397e-06
    2. 'S' → logprob: -13.12500286102295
    3. '=' → logprob: -14.62500286102295
    4. '_s' → logprob: -15.00000286102295
    5. '=s' → logprob: -16.625003814697266
    6. ' s' → logprob: -16.625003814697266
    7. '```' → logprob: -16.875003814697266
    8. '(s' → logprob: -17.125003814697266
    9. ' =' → logprob: -17.375003814697266
    10. '[s' → logprob: -17.750003814697266

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197138875722885
    2. ' =' → logprob: -2.811971426010132
    3. '=
' → logprob: -13.811971664428711
    4. '=(' → logprob: -14.061971664428711
    5. ' =(' → logprob: -14.561971664428711
    6. '*=' → logprob: -15.436971664428711
    7. ' ' → logprob: -15.436971664428711
    8. ' -=' → logprob: -15.686971664428711
    9. '＝' → logprob: -15.811971664428711
    10. '-=' → logprob: -16.06197166442871

Token 129: ' (' (ID: 350)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.004801295697689056
    2. ' (' → logprob: -5.879801273345947
    3. '(' → logprob: -6.379801273345947
    4. '((' → logprob: -8.129801750183105
    5. ' ' → logprob: -13.754801750183105
    6. '   ' → logprob: -14.379801750183105
    7. '(
' → logprob: -14.629801750183105
    8. '(h' → logprob: -14.879801750183105
    9. ' ((' → logprob: -15.004801750183105
    10. '(S' → logprob: -15.129801750183105

Token 130: 'Hs' (ID: 134421)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.01714175194501877
    2. 'Hs' → logprob: -4.267141819000244
    3. ' (' → logprob: -6.267141819000244
    4. '(' → logprob: -7.767141819000244
    5. 'H' → logprob: -8.267141342163086
    6. ' H' → logprob: -8.642141342163086
    7. '((' → logprob: -9.142141342163086
    8. 'HS' → logprob: -9.892141342163086
    9. '   ' → logprob: -11.517141342163086
    10. '(
' → logprob: -11.767141342163086

Token 131: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14365141093730927
    2. '-' → logprob: -2.0186514854431152
    3. ' *' → logprob: -7.643651485443115
    4. '*' → logprob: -8.268651008605957
    5. ' ' → logprob: -8.393651008605957
    6. '+' → logprob: -12.518651008605957
    7. ' ' → logprob: -13.018651008605957
    8. '-base' → logprob: -13.268651008605957
    9. '   ' → logprob: -14.143651008605957
    10. '
' → logprob: -14.143651008605957

Token 132: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0013304755557328463
    2. ' base' → logprob: -6.626330375671387
    3. '(base' → logprob: -13.626330375671387
    4. 'mod' → logprob: -13.751330375671387
    5. 'pow' → logprob: -14.251330375671387
    6. '	base' → logprob: -14.376330375671387
    7. '
' → logprob: -15.251330375671387
    8. '129' → logprob: -15.626330375671387
    9. ')' → logprob: -15.876330375671387
    10. ' ' → logprob: -16.001331329345703

Token 133: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018175341188907623
    2. '-' → logprob: -4.01817512512207
    3. '+' → logprob: -11.39317512512207
    4. ' +' → logprob: -11.64317512512207
    5. ' ' → logprob: -12.89317512512207
    6. ')' → logprob: -13.26817512512207
    7. '   ' → logprob: -15.26817512512207
    8. '  ' → logprob: -15.89317512512207
    9. '
' → logprob: -16.14317512512207
    10. ' -
' → logprob: -16.14317512512207

Token 134: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.02424744889140129
    2. '(ord' → logprob: -3.774247407913208
    3. ' ord' → logprob: -7.524247646331787
    4. '   ' → logprob: -7.899247646331787
    5. '(' → logprob: -9.649247169494629
    6. 'mod' → logprob: -11.774247169494629
    7. ' (' → logprob: -12.024247169494629
    8. 'pow' → logprob: -12.649247169494629
    9. 'ords' → logprob: -13.274247169494629
    10. '    ' → logprob: -13.524247169494629

Token 135: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.00010509284038562328
    2. '(' → logprob: -9.250104904174805
    3. 'T' → logprob: -12.000104904174805
    4. '(
' → logprob: -13.000104904174805
    5. ' (' → logprob: -15.375104904174805
    6. '[T' → logprob: -16.250104904174805
    7. ')' → logprob: -16.500104904174805
    8. '(

' → logprob: -17.375104904174805
    9. '((' → logprob: -18.000104904174805
    10. '   ' → logprob: -18.125104904174805

Token 136: '[i' (ID: 1768)
  Prédit: '[T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[T' → logprob: -0.029806500300765038
    2. '[i' → logprob: -3.529806613922119
    3. '[' → logprob: -9.904806137084961
    4. 'T' → logprob: -12.529806137084961
    5. '[
' → logprob: -13.779806137084961
    6. '(T' → logprob: -14.779806137084961
    7. '[len' → logprob: -14.904806137084961
    8. '[I' → logprob: -14.904806137084961
    9. '	T' → logprob: -16.52980613708496
    10. '   ' → logprob: -16.77980613708496

Token 137: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016340012662112713
    2. ')*' → logprob: -6.876634120941162
    3. '*)' → logprob: -8.001633644104004
    4. ' )' → logprob: -8.626633644104004
    5. '`)' → logprob: -10.376633644104004
    6. '   ' → logprob: -10.876633644104004
    7. '")' → logprob: -11.501633644104004
    8. '])' → logprob: -11.626633644104004
    9. '')' → logprob: -11.876633644104004
    10. '	' → logprob: -12.376633644104004

Token 138: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2469986230134964
    2. ')' → logprob: -1.87199866771698
    3. ' *' → logprob: -3.3719985485076904
    4. ')*' → logprob: -3.6219985485076904
    5. '*m' → logprob: -5.7469987869262695
    6. '*)' → logprob: -8.49699878692627
    7. '   ' → logprob: -8.62199878692627
    8. '*b' → logprob: -9.12199878692627
    9. '*p' → logprob: -9.49699878692627
    10. '*f' → logprob: -10.37199878692627

Token 139: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00015955790877342224
    2. ' m' → logprob: -8.75015926361084
    3. '(m' → logprob: -14.37515926361084
    4. '
' → logprob: -15.87515926361084
    5. 'pow' → logprob: -15.87515926361084
    6. '	m' → logprob: -16.125160217285156
    7. '   ' → logprob: -16.750160217285156
    8. ' ' → logprob: -17.125160217285156
    9. ')m' → logprob: -17.625160217285156
    10. ')' → logprob: -18.125160217285156

Token 140: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16044163703918457
    2. '+' → logprob: -1.9104416370391846
    3. '%' → logprob: -8.785441398620605
    4. ')' → logprob: -9.785441398620605
    5. ' %' → logprob: -12.285441398620605
    6. ' ' → logprob: -13.285441398620605
    7. ')%' → logprob: -13.910441398620605
    8. ' )' → logprob: -15.535441398620605
    9. ' +
' → logprob: -15.660441398620605
    10. '```' → logprob: -15.910441398620605

Token 141: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.01306070201098919
    2. ' ord' → logprob: -4.388060569763184
    3. 'mod' → logprob: -7.638060569763184
    4. '(ord' → logprob: -9.888060569763184
    5. ' mod' → logprob: -12.138060569763184
    6. '   ' → logprob: -12.513060569763184
    7. 'ords' → logprob: -12.888060569763184
    8. ' ' → logprob: -13.138060569763184
    9. '    ' → logprob: -13.513060569763184
    10. ')' → logprob: -14.388060569763184

Token 142: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -2.3557529857498594e-05
    2. '(' → logprob: -10.75002384185791
    3. ' (' → logprob: -13.25002384185791
    4. ')' → logprob: -16.250022888183594
    5. '[T' → logprob: -16.750022888183594
    6. 'T' → logprob: -16.875022888183594
    7. '(
' → logprob: -17.250022888183594
    8. '((' → logprob: -18.000022888183594
    9. '{' → logprob: -18.750022888183594
    10. ')(' → logprob: -19.125022888183594

Token 143: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.06868857890367508
    2. '[T' → logprob: -2.8186886310577393
    3. 'T' → logprob: -5.19368839263916
    4. '[' → logprob: -6.81868839263916
    5. '[
' → logprob: -10.69368839263916
    6. ' T' → logprob: -11.94368839263916
    7. '   ' → logprob: -12.56868839263916
    8. 'i' → logprob: -12.56868839263916
    9. '{' → logprob: -12.81868839263916
    10. '{i' → logprob: -13.31868839263916

Token 144: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007152927573770285
    2. ' +' → logprob: -7.250715255737305
    3. '+l' → logprob: -12.625715255737305
    4. '+
' → logprob: -13.250715255737305
    5. '+p' → logprob: -15.625715255737305
    6. '+i' → logprob: -16.250715255737305
    7. '+xml' → logprob: -17.250715255737305
    8. '＋' → logprob: -17.500715255737305
    9. 'lp' → logprob: -18.375715255737305
    10. ' +
' → logprob: -18.500715255737305

Token 145: 'lp' (ID: 27862)
  Prédit: 'lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lp' → logprob: -1.1398757123970427e-05
    2. ' lp' → logprob: -11.875011444091797
    3. '	lp' → logprob: -12.750011444091797
    4. '(lp' → logprob: -14.625011444091797
    5. '_lp' → logprob: -14.875011444091797
    6. 'pl' → logprob: -14.875011444091797
    7. '.lp' → logprob: -15.500011444091797
    8. '{' → logprob: -18.375011444091797
    9. '
' → logprob: -18.750011444091797
    10. '+' → logprob: -18.875011444091797

Token 146: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1794743686914444
    2. ']))' → logprob: -2.304474353790283
    3. '])' → logprob: -2.804474353790283
    4. ')' → logprob: -5.804474353790283
    5. ''))' → logprob: -8.054474830627441
    6. '']))' → logprob: -8.804474830627441
    7. ' ))' → logprob: -9.054474830627441
    8. ']' → logprob: -9.429474830627441
    9. ')))' → logprob: -10.179474830627441
    10. '   ' → logprob: -10.304474830627441

Token 147: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5705313086509705
    2. ' %' → logprob: -0.9455313086509705
    3. '%' → logprob: -3.3205313682556152
    4. ' mod' → logprob: -5.445531368255615
    5. ')%' → logprob: -5.695531368255615
    6. ' ' → logprob: -6.945531368255615
    7. 'mod' → logprob: -7.195531368255615
    8. ' )' → logprob: -7.695531368255615
    9. '<|end|>' → logprob: -9.445530891418457
    10. '(mod' → logprob: -9.695530891418457

Token 148: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.04860462248325348
    2. ' mod' → logprob: -3.048604726791382
    3. '(mod' → logprob: -11.048604965209961
    4. '	mod' → logprob: -14.423604965209961
    5. ' ' → logprob: -14.673604965209961
    6. ' ' → logprob: -16.29860496520996
    7. '```' → logprob: -16.67360496520996
    8. ' 
' → logprob: -16.79860496520996
    9. '
' → logprob: -17.04860496520996
    10. ' мод' → logprob: -17.29860496520996

Token 149: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 150: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.36646902561187744
    2. '<|end|>' → logprob: -1.7414690256118774
    3. 'if' → logprob: -2.991468906402588
    4. ')' → logprob: -3.491468906402588
    5. '+' → logprob: -3.741468906402588
    6. '```' → logprob: -4.366468906402588
    7. '#' → logprob: -5.241468906402588
    8. 'i' → logprob: -5.866468906402588
    9. 'for' → logprob: -6.366468906402588
    10. '(' → logprob: -7.116468906402588

Token 151: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.0901484340429306
    2. 'H' → logprob: -2.465148448944092
    3. 'Hs' → logprob: -6.965148448944092
    4. ' ' → logprob: -9.340147972106934
    5. ' get' → logprob: -10.090147972106934
    6. ' ' → logprob: -10.465147972106934
    7. ' len' → logprob: -10.715147972106934
    8. 's' → logprob: -11.715147972106934
    9. ' T' → logprob: -11.715147972106934
    10. 'HS' → logprob: -11.715147972106934

Token 152: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.7146746763028204e-05
    2. 'S' → logprob: -10.62503719329834
    3. '```' → logprob: -12.37503719329834
    4. '==' → logprob: -12.87503719329834
    5. '   ' → logprob: -13.50003719329834
    6. ' ==' → logprob: -14.12503719329834
    7. ' ' → logprob: -14.25003719329834
    8. '=' → logprob: -14.87503719329834
    9. 'Ss' → logprob: -14.87503719329834
    10. '  ' → logprob: -14.87503719329834

Token 153: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12694691121578217
    2. '==' → logprob: -2.1269469261169434
    3. '=' → logprob: -11.501946449279785
    4. ' ' → logprob: -12.626946449279785
    5. ' =' → logprob: -12.876946449279785
    6. ' ' → logprob: -13.126946449279785
    7. '==
' → logprob: -15.001946449279785
    8. ')==' → logprob: -15.876946449279785
    9. ')' → logprob: -16.0019474029541
    10. ']==' → logprob: -16.8769474029541

Token 154: ' Hp' (ID: 160691)
  Prédit: 'Hp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hp' → logprob: -0.011048054322600365
    2. ' Hp' → logprob: -4.511047840118408
    3. ' ' → logprob: -15.386048316955566
    4. 'H' → logprob: -17.63604736328125
    5. '
' → logprob: -18.38604736328125
    6. 'HP' → logprob: -18.38604736328125
    7. 'P' → logprob: -19.01104736328125
    8. 'Hs' → logprob: -19.38604736328125
    9. '  ' → logprob: -19.63604736328125
    10. 'Hm' → logprob: -19.76104736328125

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16024240851402283
    2. ':
' → logprob: -1.9102424383163452
    3. '   ' → logprob: -11.035242080688477
    4. ':
' → logprob: -14.410242080688477
    5. ':

' → logprob: -14.660242080688477
    6. ' :
' → logprob: -14.785242080688477
    7. '):
' → logprob: -15.910242080688477
    8. ' :' → logprob: -16.160242080688477
    9. '       ' → logprob: -16.410242080688477
    10. '==' → logprob: -16.660242080688477

Token 156: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6943970322608948
    2. '   ' → logprob: -0.9443970322608948
    3. 'print' → logprob: -2.19439697265625
    4. '	print' → logprob: -8.69439697265625
    5. '       ' → logprob: -9.56939697265625
    6. '```' → logprob: -10.69439697265625
    7. '  ' → logprob: -12.19439697265625
    8. ' ' → logprob: -12.19439697265625
    9. '    
' → logprob: -12.44439697265625
    10. '    ' → logprob: -12.44439697265625

Token 157: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0031803252641111612
    2. ' print' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.003180503845215
    4. '	print' → logprob: -15.628180503845215
    5. '```' → logprob: -15.878180503845215
    6. '
' → logprob: -17.3781795501709
    7. '.print' → logprob: -18.7531795501709
    8. '    
' → logprob: -18.8781795501709
    9. ' 
' → logprob: -19.5031795501709
    10. ' ' → logprob: -19.7531795501709

Token 158: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -4.127333340875339e-06
    2. 'len' → logprob: -13.250003814697266
    3. '(' → logprob: -13.625003814697266
    4. '(lp' → logprob: -14.125003814697266
    5. '[len' → logprob: -15.500003814697266
    6. '()' → logprob: -16.500003814697266
    7. '((' → logprob: -16.750003814697266
    8. '<len' → logprob: -17.750003814697266
    9. '(length' → logprob: -18.125003814697266
    10. '(ls' → logprob: -18.375003814697266

Token 159: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -1.0280383548888494e-06
    2. 'T' → logprob: -14.375000953674316
    3. '(' → logprob: -14.875000953674316
    4. '(t' → logprob: -17.875001907348633
    5. '(P' → logprob: -18.000001907348633
    6. ' (' → logprob: -18.250001907348633
    7. '```' → logprob: -19.625001907348633
    8. '	T' → logprob: -19.750001907348633
    9. '[T' → logprob: -19.875001907348633
    10. '()' → logprob: -19.875001907348633

Token 160: ')-' (ID: 14080)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.610020637512207
    2. ')' → logprob: -1.360020637512207
    3. '-' → logprob: -2.235020637512207
    4. ')-' → logprob: -3.360020637512207
    5. '()-' → logprob: -3.610020637512207
    6. '(lp' → logprob: -4.735020637512207
    7. ' -' → logprob: -4.860020637512207
    8. '()' → logprob: -5.110020637512207
    9. '-p' → logprob: -5.610020637512207
    10. '-)' → logprob: -6.360020637512207

Token 161: 'lp' (ID: 27862)
  Prédit: 'lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lp' → logprob: -1.0325924449716695e-05
    2. ' lp' → logprob: -11.50001049041748
    3. '	lp' → logprob: -16.500009536743164
    4. '_lp' → logprob: -17.125009536743164
    5. '(lp' → logprob: -17.500009536743164
    6. '.lp' → logprob: -18.375009536743164
    7. 'LP' → logprob: -19.625009536743164
    8. 'Lp' → logprob: -19.875009536743164
    9. '   ' → logprob: -20.625009536743164
    10. ' ' → logprob: -20.750009536743164

Token 162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. ' )' → logprob: -12.375009536743164
    3. '))' → logprob: -13.125009536743164
    4. '())' → logprob: -13.250009536743164
    5. ')
' → logprob: -14.375009536743164
    6. '()' → logprob: -15.375009536743164
    7. ')`' → logprob: -15.500009536743164
    8. '`)' → logprob: -16.250009536743164
    9. ')")' → logprob: -16.250009536743164
    10. '```' → logprob: -16.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 160
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 136
Précision stricte (1ère position): 36.88%
Précision adaptée (1ère position): 39.38%
Précision (top 10): 85.00%
================================================================================
