================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
t = input()
p = input()

for i in range(len(t) - len(p) + 1):
    if t[i:i + len(p)] == p:
        print(i)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 't' (ID: 83)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003512168535962701
    2. '('' → logprob: -5.878512382507324
    3. ''' → logprob: -8.003512382507324
    4. '"' → logprob: -9.003512382507324
    5. '("("' → logprob: -9.003512382507324
    6. '(
' → logprob: -10.003512382507324
    7. '()' → logprob: -10.628512382507324
    8. ' (' → logprob: -11.628512382507324
    9. '.' → logprob: -12.128512382507324
    10. '`' → logprob: -12.378512382507324

Token 4: 'p' (ID: 79)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1368415802717209
    2. '+' → logprob: -2.3868415355682373
    3. '=' → logprob: -3.6368415355682373
    4. '(' → logprob: -6.386841773986816
    5. ')' → logprob: -6.511841773986816
    6. '.strip' → logprob: -7.011841773986816
    7. '\n' → logprob: -7.136841773986816
    8. ' ' → logprob: -7.261841773986816
    9. '*' → logprob: -7.261841773986816
    10. '\' → logprob: -7.511841773986816

Token 5: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004678497789427638
    2. '=' → logprob: -8.625468254089355
    3. ' =' → logprob: -9.750468254089355
    4. '.' → logprob: -10.250468254089355
    5. 't' → logprob: -10.250468254089355
    6. ')' → logprob: -10.625468254089355
    7. ' r' → logprob: -10.875468254089355
    8. 'er' → logprob: -11.375468254089355
    9. 'u' → logprob: -11.500468254089355
    10. '+' → logprob: -11.625468254089355

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7591778039932251
    2. ' t' → logprob: -1.509177803993225
    3. 't' → logprob: -1.884177803993225
    4. ' input' → logprob: -2.1341776847839355
    5. ''' → logprob: -4.3841776847839355
    6. 'int' → logprob: -5.0091776847839355
    7. '"' → logprob: -5.0091776847839355
    8. ' ' → logprob: -5.5091776847839355
    9. ' []' → logprob: -6.0091776847839355
    10. '''' → logprob: -6.3841776847839355

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5770784020423889
    2. '()' → logprob: -0.8270784020423889
    3. ')' → logprob: -7.577078342437744
    4. '(
' → logprob: -9.202078819274902
    5. '(

' → logprob: -9.202078819274902
    6. '```' → logprob: -9.577078819274902
    7. '`()' → logprob: -9.577078819274902
    8. '`' → logprob: -10.202078819274902
    9. ' ' → logprob: -10.327078819274902
    10. ' (' → logprob: -10.327078819274902

Token 8: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2326507419347763
    2. 'for' → logprob: -1.8576507568359375
    3. 'i' → logprob: -3.6076507568359375
    4. 'm' → logprob: -4.2326507568359375
    5. 'while' → logprob: -5.9826507568359375
    6. 'count' → logprob: -6.2326507568359375
    7. 'n' → logprob: -7.1076507568359375
    8. 's' → logprob: -7.1076507568359375
    9. 'print' → logprob: -7.6076507568359375
    10. 'f' → logprob: -7.6076507568359375

Token 9: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005037117283791304
    2. '  ' → logprob: -6.005037307739258
    3. ' i' → logprob: -6.005037307739258
    4. ' t' → logprob: -10.880037307739258
    5. ' p' → logprob: -11.005037307739258
    6. 'i' → logprob: -11.630037307739258
    7. ' ' → logprob: -11.630037307739258
    8. ' )' → logprob: -11.630037307739258
    9. ' ‌' → logprob: -12.255037307739258
    10. '_' → logprob: -12.505037307739258

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18095608055591583
    2. 'n' → logprob: -2.4309561252593994
    3. 'in' → logprob: -3.3059561252593994
    4. ' ' → logprob: -3.4309561252593994
    5. ' n' → logprob: -4.93095588684082
    6. '  ' → logprob: -7.05595588684082
    7. ')' → logprob: -9.18095588684082
    8. '   ' → logprob: -9.68095588684082
    9. ',' → logprob: -10.05595588684082
    10. 'nt' → logprob: -10.18095588684082

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0017342021455988288
    2. 'range' → logprob: -6.501734256744385
    3. ' ' → logprob: -8.501733779907227
    4. ' t' → logprob: -11.876733779907227
    5. ' p' → logprob: -12.001733779907227
    6. '	range' → logprob: -12.501733779907227
    7. ' xrange' → logprob: -12.626733779907227
    8. ''' → logprob: -13.001733779907227
    9. '"' → logprob: -13.501733779907227
    10. 't' → logprob: -13.751733779907227

Token 12: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.20143361389636993
    2. '(' → logprob: -1.7014336585998535
    3. '(length' → logprob: -11.951433181762695
    4. ' (' → logprob: -12.076433181762695
    5. '(t' → logprob: -13.326433181762695
    6. '(l' → logprob: -13.576433181762695
    7. 'len' → logprob: -13.576433181762695
    8. '(range' → logprob: -14.201433181762695
    9. ' len' → logprob: -14.451433181762695
    10. '((' → logprob: -14.576433181762695

Token 13: '(t' (ID: 2025)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0555499829351902
    2. '(' → logprob: -3.3055500984191895
    3. '(t' → logprob: -4.0555500984191895
    4. 'p' → logprob: -11.055549621582031
    5. '(s' → logprob: -11.555549621582031
    6. 't' → logprob: -12.805549621582031
    7. 's' → logprob: -14.680549621582031
    8. ' (' → logprob: -15.180549621582031
    9. '('' → logprob: -15.680549621582031
    10. '(
' → logprob: -15.680549621582031

Token 14: ')' (ID: 8)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.06114033982157707
    2. '):' → logprob: -3.561140298843384
    3. '))' → logprob: -3.811140298843384
    4. ')' → logprob: -4.936140537261963
    5. '-' → logprob: -7.561140537261963
    6. ')):
' → logprob: -7.686140537261963
    7. '+' → logprob: -8.686140060424805
    8. ':' → logprob: -9.311140060424805
    9. ' -' → logprob: -9.811140060424805
    10. '[' → logprob: -10.186140060424805

Token 15: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024172168225049973
    2. ')' → logprob: -3.899172067642212
    3. ' ):' → logprob: -6.399172306060791
    4. '+' → logprob: -7.149172306060791
    5. ':' → logprob: -8.274171829223633
    6. '-' → logprob: -8.649171829223633
    7. '   ' → logprob: -9.149171829223633
    8. ']:' → logprob: -9.149171829223633
    9. '>' → logprob: -9.399171829223633
    10. '):
' → logprob: -9.649171829223633

Token 16: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10159985721111298
    2. ' len' → logprob: -2.351599931716919
    3. '(len' → logprob: -6.72659969329834
    4. '1' → logprob: -9.72659969329834
    5. ' ' → logprob: -9.97659969329834
    6. '	len' → logprob: -9.97659969329834
    7. '<len' → logprob: -11.47659969329834
    8. '[len' → logprob: -11.47659969329834
    9. '=len' → logprob: -11.72659969329834
    10. '  ' → logprob: -12.60159969329834

Token 17: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00193149340339005
    2. '(' → logprob: -6.251931667327881
    3. 'p' → logprob: -13.376931190490723
    4. '(s' → logprob: -14.626931190490723
    5. '(t' → logprob: -14.876931190490723
    6. ' (' → logprob: -15.626931190490723
    7. '(
' → logprob: -16.37693214416504
    8. '(i' → logprob: -17.12693214416504
    9. '(P' → logprob: -17.37693214416504
    10. '(q' → logprob: -17.50193214416504

Token 18: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04990975558757782
    2. ' +' → logprob: -3.049909830093384
    3. ')' → logprob: -6.799909591674805
    4. ')+' → logprob: -9.174909591674805
    5. '):' → logprob: -9.924909591674805
    6. ')):' → logprob: -10.299909591674805
    7. ' ' → logprob: -11.549909591674805
    8. '))' → logprob: -11.799909591674805
    9. '+)' → logprob: -13.799909591674805
    10. '+i' → logprob: -14.674909591674805

Token 19: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033733759075403214
    2. ' +' → logprob: -3.40873384475708
    3. '):' → logprob: -9.533733367919922
    4. ')' → logprob: -12.408733367919922
    5. '+i' → logprob: -12.658733367919922
    6. '+:' → logprob: -12.783733367919922
    7. ')+' → logprob: -13.283733367919922
    8. '+)' → logprob: -13.783733367919922
    9. ' ' → logprob: -14.283733367919922
    10. '{' → logprob: -14.658733367919922

Token 20: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009122979827225208
    2. ' ' → logprob: -7.000912189483643
    3. '```' → logprob: -14.8759126663208
    4. ')' → logprob: -15.3759126663208
    5. '   ' → logprob: -16.500911712646484
    6. '１' → logprob: -17.688411712646484
    7. '`' → logprob: -18.250911712646484
    8. '' → logprob: -18.313411712646484
    9. ' )' → logprob: -18.563411712646484
    10. '۱' → logprob: -18.938411712646484

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. ')' → logprob: -16.500003814697266
    4. '```' → logprob: -16.750003814697266
    5. '１' → logprob: -17.125003814697266
    6. '   ' → logprob: -18.000003814697266
    7. '' → logprob: -18.062503814697266
    8. '{' → logprob: -18.562503814697266
    9. '۱' → logprob: -18.750003814697266
    10. '0' → logprob: -18.750003814697266

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015220028581097722
    2. ':' → logprob: -6.876522064208984
    3. ')' → logprob: -7.876522064208984
    4. ' ):' → logprob: -9.251522064208984
    5. '):
' → logprob: -11.626522064208984
    6. '   ' → logprob: -14.126522064208984
    7. ' :' → logprob: -14.251522064208984
    8. ']:' → logprob: -14.251522064208984
    9. ':)' → logprob: -14.376522064208984
    10. '():' → logprob: -14.626522064208984

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07838742434978485
    2. ' if' → logprob: -2.703387498855591
    3. 'if' → logprob: -5.328387260437012
    4. ' ' → logprob: -5.828387260437012
    5. '    ' → logprob: -8.828387260437012
    6. '	if' → logprob: -8.953387260437012
    7. '  ' → logprob: -9.703387260437012
    8. '    
' → logprob: -9.953387260437012
    9. '[' → logprob: -10.078387260437012
    10. ':' → logprob: -10.203387260437012

Token 24: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3467327058315277
    2. 'if' (adapté à ' if') → logprob: -1.34673273563385
    3. '   ' → logprob: -3.4717326164245605
    4. '    ' → logprob: -7.0967326164245605
    5. 'i' → logprob: -7.7217326164245605
    6. ' i' → logprob: -7.8467326164245605
    7. ' ' → logprob: -9.096733093261719
    8. ' for' → logprob: -10.721733093261719
    9. '  ' → logprob: -11.096733093261719
    10. 'for' → logprob: -11.971733093261719

Token 25: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.003601617179811001
    2. 't' → logprob: -5.628601551055908
    3. '   ' → logprob: -15.003602027893066
    4. '`t' → logprob: -15.003602027893066
    5. '	t' → logprob: -15.003602027893066
    6. ' ' → logprob: -16.37860107421875
    7. '    ' → logprob: -16.50360107421875
    8. '(t' → logprob: -16.75360107421875
    9. ' ' → logprob: -17.00360107421875
    10. ')' → logprob: -17.12860107421875

Token 26: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011164903844473884
    2. '[' → logprob: -9.12511157989502
    3. '.startswith' → logprob: -13.00011157989502
    4. '[
' → logprob: -16.000112533569336
    5. '[j' → logprob: -16.500112533569336
    6. 'i' → logprob: -16.750112533569336
    7. '   ' → logprob: -17.000112533569336
    8. '```' → logprob: -17.250112533569336
    9. '[I' → logprob: -17.250112533569336
    10. ' [' → logprob: -18.250112533569336

Token 27: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.5079514384269714
    2. ':' → logprob: -1.0079514980316162
    3. ']==' → logprob: -4.382951259613037
    4. '==' → logprob: -4.507951259613037
    5. ':].' → logprob: -5.382951259613037
    6. ']' → logprob: -6.007951259613037
    7. ':]' → logprob: -6.507951259613037
    8. ' :' → logprob: -7.382951259613037
    9. ' ==' → logprob: -7.757951259613037
    10. '...' → logprob: -10.382951736450195

Token 28: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002046647947281599
    2. ' +' → logprob: -6.252046585083008
    3. '==' → logprob: -10.627046585083008
    4. 'len' → logprob: -10.752046585083008
    5. ':i' → logprob: -10.877046585083008
    6. ']+' → logprob: -11.252046585083008
    7. '   ' → logprob: -11.377046585083008
    8. ']' → logprob: -12.002046585083008
    9. '+i' → logprob: -12.252046585083008
    10. '<len' → logprob: -12.377046585083008

Token 29: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -9.627176768844947e-05
    2. ' len' → logprob: -9.250096321105957
    3. '(len' → logprob: -16.00009536743164
    4. '[len' → logprob: -17.00009536743164
    5. '=len' → logprob: -19.25009536743164
    6. '	len' → logprob: -19.62509536743164
    7. '   ' → logprob: -19.75009536743164
    8. '<len' → logprob: -20.12509536743164
    9. ' ' → logprob: -20.50009536743164
    10. '```' → logprob: -21.25009536743164

Token 30: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00028088156250305474
    2. '(' → logprob: -8.25028133392334
    3. 'p' → logprob: -10.87528133392334
    4. ' (' → logprob: -15.00028133392334
    5. ')' → logprob: -16.000280380249023
    6. '```' → logprob: -16.750280380249023
    7. ' ' → logprob: -17.125280380249023
    8. '(
' → logprob: -17.250280380249023
    9. ')p' → logprob: -17.750280380249023
    10. ']' → logprob: -17.875280380249023

Token 31: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005519753787666559
    2. ']==' → logprob: -5.755519866943359
    3. ')]' → logprob: -6.130519866943359
    4. ' ]' → logprob: -9.00551986694336
    5. ')' → logprob: -10.50551986694336
    6. ']]' → logprob: -12.63051986694336
    7. '`]' → logprob: -13.25551986694336
    8. '']' → logprob: -13.50551986694336
    9. ')==' → logprob: -13.63051986694336
    10. '])' → logprob: -14.00551986694336

Token 32: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38695216178894043
    2. '==' → logprob: -1.1369521617889404
    3. '=' → logprob: -9.51195240020752
    4. ' =' → logprob: -12.63695240020752
    5. ']==' → logprob: -13.76195240020752
    6. '===' → logprob: -14.01195240020752
    7. ')==' → logprob: -14.13695240020752
    8. ')' → logprob: -14.38695240020752
    9. '   ' → logprob: -15.76195240020752
    10. '=='' → logprob: -16.011951446533203

Token 33: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38687217235565186
    2. ' p' → logprob: -1.1368721723556519
    3. ' ' → logprob: -14.761872291564941
    4. ''p' → logprob: -15.261872291564941
    5. '	p' → logprob: -15.511872291564941
    6. '(p' → logprob: -16.261871337890625
    7. ''' → logprob: -16.761871337890625
    8. ' ' → logprob: -17.136871337890625
    9. '   ' → logprob: -17.386871337890625
    10. ')' → logprob: -17.511871337890625

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.976922744186595e-05
    2. ' :' → logprob: -10.625040054321289
    3. ':
' → logprob: -12.125040054321289
    4. '):' → logprob: -12.250040054321289
    5. ':**' → logprob: -12.750040054321289
    6. '():' → logprob: -14.500040054321289
    7. ':return' → logprob: -15.000040054321289
    8. '   ' → logprob: -15.000040054321289
    9. '':' → logprob: -15.250040054321289
    10. '：' → logprob: -15.625040054321289

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038714904338121414
    2. '    ' → logprob: -4.03871488571167
    3. 'print' → logprob: -4.66371488571167
    4. '   ' → logprob: -4.66371488571167
    5. ' print' → logprob: -6.91371488571167
    6. '      ' → logprob: -8.663715362548828
    7. '     ' → logprob: -9.163715362548828
    8. '        ' → logprob: -9.788715362548828
    9. ':' → logprob: -10.288715362548828
    10. '           ' → logprob: -10.663715362548828

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0046210684813559055
    2. '   ' → logprob: -6.1296210289001465
    3. ' print' → logprob: -6.3796210289001465
    4. '       ' → logprob: -7.2546210289001465
    5. '    ' → logprob: -10.629621505737305
    6. '	print' → logprob: -13.254621505737305
    7. '           ' → logprob: -14.004621505737305
    8. 'pr' → logprob: -14.379621505737305
    9. ' ' → logprob: -14.504621505737305
    10. '        ' → logprob: -15.254621505737305

Token 37: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000158842682139948
    2. '(' → logprob: -8.75015926361084
    3. 'i' → logprob: -15.00015926361084
    4. '('' → logprob: -18.125158309936523
    5. '((' → logprob: -18.125158309936523
    6. '(f' → logprob: -18.625158309936523
    7. '("("' → logprob: -18.875158309936523
    8. '()' → logprob: -19.250158309936523
    9. '(a' → logprob: -19.625158309936523
    10. '(j' → logprob: -19.625158309936523

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -14.625000953674316
    4. '   ' → logprob: -16.250001907348633
    5. '))' → logprob: -16.750001907348633
    6. ')`' → logprob: -17.375001907348633
    7. '')' → logprob: -17.875001907348633
    8. '`)' → logprob: -17.875001907348633
    9. ' ' → logprob: -18.125001907348633
    10. '）' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 36
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 41.67%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 88.89%
================================================================================
