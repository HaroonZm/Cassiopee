================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!/usr/bin/env python

"""
input:
3
0 0 3 0 1 1 2 -1
0 0 3 0 3 1 3 -1
0 0 3 0 3 -2 5 0

output:
1
1
0
"""

import sys

EPS = 1e-9

def cross(a, b):
    return a.real * b.imag - a.imag * b.real

def dot(a, b):
    return a.real * b.real + a.imag * b.imag

def check_ccw(p0, p1, p2):
    # flag = float('inf')
    a, b = p1 - p0, p2 - p0
    if cross(a, b) > EPS:
        # print('COUNTER_CLOCKWISE')
        flag = 1
    elif cross(a, b) < -1 * EPS:
        # print('CLOCKWISE')
        flag = -1
    elif dot(a, b) < -1 * EPS:
        # print('ONLINE_BACK')
        flag = 2
    elif abs(a) < abs(b):
        # print('ONLINE_FRONT')
        flag = -2
    else:
        # print('ON_SEGMENT')
        flag = 0
    return flag

def check_intersection(_lines):
    for line in _lines:
        line = tuple(map(int, line))
        p0, p1, p2, p3 = (x + y * 1j for x, y in zip(line[::2], line[1::2]))
        flag = (check_ccw(p0, p1, p2) * check_ccw(p0, p1, p3) <= 0) and \
               (check_ccw(p2, p3, p0) * check_ccw(p2, p3, p1) <= 0)

        if flag:
            print('1')
        else:
            print('0')

    return None

if __name__ == '__main__':
    _input = sys.stdin.readlines()
    l_num = int(_input[0])
    lines = map(lambda x: x.split(), _input[1:])

    check_intersection(lines)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!/' (ID: 20670)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/env'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/env' → logprob: -0.6017017960548401
    2. '/python' → logprob: -1.3517017364501953
    3. '/' → logprob: -1.8517017364501953
    4. '/bin' → logprob: -3.4767017364501953
    5. '/bash' → logprob: -5.351701736450195
    6. 'python' → logprob: -7.351701736450195
    7. '/b' → logprob: -11.476701736450195
    8. 'env' → logprob: -11.601701736450195
    9. '#!/' → logprob: -11.851701736450195
    10. '/usr' → logprob: -11.976701736450195

Token 4: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38691186904907227
    2. ' python' → logprob: -1.1369118690490723
    3. 'bash' → logprob: -10.636911392211914
    4. ' bash' → logprob: -11.261911392211914
    5. '/python' → logprob: -13.886911392211914
    6. 'perl' → logprob: -14.136911392211914
    7. 'node' → logprob: -14.511911392211914
    8. 'py' → logprob: -15.011911392211914
    9. 'ruby' → logprob: -15.136911392211914
    10. ' node' → logprob: -15.386911392211914

Token 5: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.16474248468875885
    2. '\' → logprob: -2.2897424697875977
    3. '```' → logprob: -3.6647424697875977
    4. 'import' → logprob: -4.164742469787598
    5. '  
' → logprob: -5.914742469787598
    6. '3' → logprob: -5.914742469787598
    7. ' 
' → logprob: -7.164742469787598
    8. '#' → logprob: -7.539742469787598
    9. '\r' → logprob: -7.539742469787598
    10. '' → logprob: -7.789742469787598

Token 6: '"""
' (ID: 15611)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011567160487174988
    2. '```' → logprob: -5.261567115783691
    3. '-' → logprob: -6.136567115783691
    4. '#' → logprob: -6.386567115783691
    5. '-import' → logprob: -7.261567115783691
    6. '\n' → logprob: -7.386567115783691
    7. 'python' → logprob: -8.261567115783691
    8. 'im' → logprob: -8.386567115783691
    9. ' import' → logprob: -9.011567115783691
    10. 'print' → logprob: -9.136567115783691

Token 7: 'input' (ID: 2586)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.058612313121557236
    2. '#' → logprob: -3.55861234664917
    3. 'import' → logprob: -4.30861234664917
    4. 'from' → logprob: -6.30861234664917
    5. 'u' → logprob: -6.30861234664917
    6. '"""
' → logprob: -6.55861234664917
    7. 'p' → logprob: -6.55861234664917
    8. 'a' → logprob: -6.80861234664917
    9. 'f' → logprob: -7.05861234664917
    10. 'i' → logprob: -7.05861234664917

Token 8: ':
' (ID: 734)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.36851558089256287
    2. ')' → logprob: -2.1185154914855957
    3. '```' → logprob: -3.3685154914855957
    4. ':' → logprob: -3.8685154914855957
    5. '_' → logprob: -3.9935154914855957
    6. '("""' → logprob: -4.368515491485596
    7. 'text' → logprob: -4.368515491485596
    8. '_file' → logprob: -4.743515491485596
    9. '_data' → logprob: -4.868515491485596
    10. '_string' → logprob: -4.993515491485596

Token 9: '3' (ID: 18)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.17423094809055328
    2. '```' → logprob: -2.1742310523986816
    3. '#' → logprob: -4.299231052398682
    4. '``' → logprob: -5.049231052398682
    5. '"""
' → logprob: -5.549231052398682
    6. 'def' → logprob: -5.799231052398682
    7. 'a' → logprob: -5.924231052398682
    8. '""' → logprob: -6.299231052398682
    9. '"' → logprob: -6.549231052398682
    10. 'text' → logprob: -6.674231052398682

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.45035606622695923
    2. '+' → logprob: -1.3253560066223145
    3. '
' → logprob: -3.2003560066223145
    4. '```' → logprob: -3.7003560066223145
    5. '+
' → logprob: -4.3253560066223145
    6. '*' → logprob: -5.2003560066223145
    7. '\' → logprob: -6.0753560066223145
    8. '4' → logprob: -6.0753560066223145
    9. '2' → logprob: -6.7003560066223145
    10. ' ' → logprob: -6.9503560066223145

Token 11: '0' (ID: 15)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4207077920436859
    2. '\n' → logprob: -1.5457078218460083
    3. ' ' → logprob: -3.0457077026367188
    4. '```' → logprob: -3.7957077026367188
    5. '4' → logprob: -4.045707702636719
    6. '*' → logprob: -4.420707702636719
    7. '\' → logprob: -5.170707702636719
    8. ')' → logprob: -5.420707702636719
    9. '3' → logprob: -5.920707702636719
    10. 'a' → logprob: -6.045707702636719

Token 12: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6522341966629028
    2. '\n' → logprob: -0.9022341966629028
    3. '0' → logprob: -4.152234077453613
    4. ' ' → logprob: -4.152234077453613
    5. '3' → logprob: -4.402234077453613
    6. '<|end|>' → logprob: -5.027234077453613
    7. '4' → logprob: -5.152234077453613
    8. '1' → logprob: -5.277234077453613
    9. '2' → logprob: -5.902234077453613
    10. ' 
' → logprob: -6.152234077453613

Token 13: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2548399865627289
    2. '2' → logprob: -2.5048398971557617
    3. '4' → logprob: -2.8798398971557617
    4. ' ' → logprob: -3.2548398971557617
    5. '3' → logprob: -4.254839897155762
    6. '0' → logprob: -4.379839897155762
    7. '5' → logprob: -5.004839897155762
    8. '\n' → logprob: -5.004839897155762
    9. '10' → logprob: -5.504839897155762
    10. '7' → logprob: -6.879839897155762

Token 14: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1623194217681885
    2. '\n' → logprob: -1.4123194217681885
    3. ' ' → logprob: -2.1623194217681885
    4. '3' → logprob: -2.2873194217681885
    5. '0' → logprob: -2.7873194217681885
    6. ' 
' → logprob: -2.9123194217681885
    7. '1' → logprob: -3.1623194217681885
    8. '<|end|>' → logprob: -3.7873194217681885
    9. '2' → logprob: -4.787319183349609
    10. ' 

' → logprob: -5.037319183349609

Token 15: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3900171220302582
    2. '0' → logprob: -1.5150171518325806
    3. ' ' → logprob: -3.390017032623291
    4. '3' → logprob: -3.640017032623291
    5. '2' → logprob: -4.140017032623291
    6. '4' → logprob: -4.265017032623291
    7. '\n' → logprob: -5.140017032623291
    8. '<|end|>' → logprob: -5.640017032623291
    9. '7' → logprob: -6.640017032623291
    10. '
' → logprob: -7.515017032623291

Token 16: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8412453532218933
    2. '\n' → logprob: -0.8412453532218933
    3. '<|end|>' → logprob: -3.341245412826538
    4. '```' → logprob: -3.591245412826538
    5. ' 
' → logprob: -3.966245412826538
    6. ' ' → logprob: -4.341245174407959
    7. '+' → logprob: -4.716245174407959
    8. '0' → logprob: -5.091245174407959
    9. '' → logprob: -5.216245174407959
    10. '*' → logprob: -5.466245174407959

Token 17: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21563072502613068
    2. '3' → logprob: -3.0906307697296143
    3. '<|end|>' → logprob: -3.2156307697296143
    4. '
' → logprob: -3.3406307697296143
    5. '0' → logprob: -3.9656307697296143
    6. '```' → logprob: -4.340630531311035
    7. '4' → logprob: -4.465630531311035
    8. ' ' → logprob: -5.090630531311035
    9. ' 
' → logprob: -5.090630531311035
    10. '  
' → logprob: -5.590630531311035

Token 19: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6657317876815796
    2. ' ' → logprob: -1.1657317876815796
    3. '0' → logprob: -2.665731906890869
    4. '\n' → logprob: -3.165731906890869
    5. '4' → logprob: -3.915731906890869
    6. '1' → logprob: -4.165731906890869
    7. '<|end|>' → logprob: -4.415731906890869
    8. '2' → logprob: -4.540731906890869
    9. ' 
' → logprob: -6.540731906890869
    10. '```' → logprob: -6.915731906890869

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0539968013763428
    2. '2' → logprob: -1.5539968013763428
    3. '3' → logprob: -1.8039968013763428
    4. '\n' → logprob: -2.0539968013763428
    5. '0' → logprob: -2.4289968013763428
    6. ' 
' → logprob: -4.053997039794922
    7. '  
' → logprob: -4.428997039794922
    8. '6' → logprob: -4.428997039794922
    9. '7' → logprob: -5.678997039794922
    10. '<|end|>' → logprob: -6.178997039794922

Token 21: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28623607754707336
    2. '0' → logprob: -1.786236047744751
    3. '3' → logprob: -3.286236047744751
    4. ' ' → logprob: -3.536236047744751
    5. '4' → logprob: -5.41123628616333
    6. '7' → logprob: -5.78623628616333
    7. '6' → logprob: -5.91123628616333
    8. '1' → logprob: -6.28623628616333
    9. '\n' → logprob: -7.28623628616333
    10. '```' → logprob: -7.41123628616333

Token 22: ' ' (ID: 220)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2775181531906128
    2. '3' → logprob: -2.1525182723999023
    3. '0' → logprob: -3.0275182723999023
    4. '2' → logprob: -3.9025182723999023
    5. ' ' → logprob: -4.277518272399902
    6. '
' → logprob: -4.402518272399902
    7. '```' → logprob: -5.152518272399902
    8. '\' → logprob: -5.277518272399902
    9. '1' → logprob: -5.402518272399902
    10. '4' → logprob: -5.652518272399902

Token 23: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9191709160804749
    2. '<|end|>' → logprob: -1.54417085647583
    3. '0' → logprob: -1.91917085647583
    4. '\n' → logprob: -2.66917085647583
    5. ' ' → logprob: -2.79417085647583
    6. '2' → logprob: -3.41917085647583
    7. '4' → logprob: -4.16917085647583
    8. '7' → logprob: -4.16917085647583
    9. '```' → logprob: -4.41917085647583
    10. '
' → logprob: -4.66917085647583

Token 24: ' -' (ID: 533)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6347781419754028
    2. '2' → logprob: -1.6347781419754028
    3. ' ' → logprob: -2.0097780227661133
    4. '0' → logprob: -2.6347780227661133
    5. '\n' → logprob: -3.8847780227661133
    6. '7' → logprob: -4.259778022766113
    7. '4' → logprob: -4.509778022766113
    8. '```' → logprob: -5.384778022766113
    9. '6' → logprob: -5.759778022766113
    10. '8' → logprob: -5.884778022766113

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34876686334609985
    2. '2' → logprob: -1.598766803741455
    3. '0' → logprob: -2.848766803741455
    4. '3' → logprob: -4.098766803741455
    5. '4' → logprob: -4.598766803741455
    6. '-' → logprob: -6.348766803741455
    7. ' ' → logprob: -6.723766803741455
    8. '```' → logprob: -6.848766803741455
    9. '5' → logprob: -7.098766803741455
    10. '8' → logprob: -7.223766803741455

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3360713720321655
    2. '\n' → logprob: -1.4610713720321655
    3. '<|end|>' → logprob: -2.086071491241455
    4. ' ' → logprob: -2.336071491241455
    5. '```' → logprob: -2.961071491241455
    6. '3' → logprob: -3.086071491241455
    7. '2' → logprob: -3.211071491241455
    8. '0' → logprob: -3.211071491241455
    9. ' 
' → logprob: -3.461071491241455
    10. '\' → logprob: -3.711071491241455

Token 27: '0' (ID: 15)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3173201084136963
    2. '3' → logprob: -1.6923201084136963
    3. '"""' → logprob: -1.6923201084136963
    4. '\n' → logprob: -1.8173201084136963
    5. '<|end|>' → logprob: -3.0673201084136963
    6. '0' → logprob: -3.4423201084136963
    7. '2' → logprob: -3.5673201084136963
    8. '
' → logprob: -3.5673201084136963
    9. '4' → logprob: -4.192319869995117
    10. '7' → logprob: -4.817319869995117

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2305242270231247
    2. '<|end|>' → logprob: -2.3555243015289307
    3. ' 

' → logprob: -2.6055243015289307
    4. ' 
' → logprob: -4.105524063110352
    5. '```' → logprob: -5.605524063110352
    6. '0' → logprob: -5.605524063110352
    7. '\n' → logprob: -5.730524063110352
    8. '3' → logprob: -6.230524063110352
    9. '
' → logprob: -6.730524063110352
    10. '1' → logprob: -6.855524063110352

Token 29: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9306797385215759
    2. '0' → logprob: -1.1806797981262207
    3. ' ' → logprob: -1.4306797981262207
    4. '1' → logprob: -3.4306797981262207
    5. '2' → logprob: -3.9306797981262207
    6. '4' → logprob: -5.555679798126221
    7. '.' → logprob: -6.930679798126221
    8. '-' → logprob: -6.930679798126221
    9. '7' → logprob: -7.555679798126221
    10. '6' → logprob: -7.805679798126221

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15060026943683624
    2. '3' → logprob: -2.4006001949310303
    3. '<|end|>' → logprob: -3.4006001949310303
    4. '0' → logprob: -4.775600433349609
    5. '2' → logprob: -5.650600433349609
    6. '4' → logprob: -7.025600433349609
    7. '  ' → logprob: -7.150600433349609
    8. '<|end|>' → logprob: -7.400600433349609
    9. '1' → logprob: -7.525600433349609
    10. ' \' → logprob: -8.40060043334961

Token 31: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4519572854042053
    2. ' ' → logprob: -1.8269572257995605
    3. '0' → logprob: -2.4519572257995605
    4. '4' → logprob: -3.0769572257995605
    5. '2' → logprob: -3.0769572257995605
    6. '1' → logprob: -3.8269572257995605
    7. '5' → logprob: -6.9519572257995605
    8. '7' → logprob: -7.8269572257995605
    9. '6' → logprob: -7.9519572257995605
    10. '-' → logprob: -8.076957702636719

Token 32: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03061969392001629
    2. '0' → logprob: -4.2806196212768555
    3. '<|end|>' → logprob: -4.7806196212768555
    4. '4' → logprob: -6.1556196212768555
    5. '2' → logprob: -6.2806196212768555
    6. '  ' → logprob: -6.9056196212768555
    7. '3' → logprob: -7.0306196212768555
    8. '1' → logprob: -7.7806196212768555
    9. '.' → logprob: -8.155619621276855
    10. '```' → logprob: -8.280619621276855

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.225818932056427
    2. ' ' → logprob: -1.6008188724517822
    3. '1' → logprob: -9.100818634033203
    4. '3' → logprob: -9.100818634033203
    5. '<|end|>' → logprob: -9.225818634033203
    6. '-' → logprob: -10.475818634033203
    7. ' -' → logprob: -11.225818634033203
    8. '2' → logprob: -11.225818634033203
    9. '<|end|>' → logprob: -11.725818634033203
    10. '```' → logprob: -12.538318634033203

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03732064366340637
    2. '3' → logprob: -4.662320613861084
    3. '1' → logprob: -4.787320613861084
    4. '<|end|>' → logprob: -5.537320613861084
    5. '2' → logprob: -5.662320613861084
    6. '0' → logprob: -6.162320613861084
    7. '```' → logprob: -6.287320613861084
    8. ''' → logprob: -6.537320613861084
    9. ' 
' → logprob: -7.037320613861084
    10. '"' → logprob: -7.537320613861084

Token 35: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9589462280273438
    2. '3' → logprob: -1.0839462280273438
    3. '2' → logprob: -1.8339462280273438
    4. '0' → logprob: -2.5839462280273438
    5. '4' → logprob: -4.083946228027344
    6. ' ' → logprob: -4.083946228027344
    7. '-' → logprob: -5.208946228027344
    8. '5' → logprob: -6.208946228027344
    9. '6' → logprob: -6.833946228027344
    10. '7' → logprob: -7.958946228027344

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09966515749692917
    2. '<|end|>' → logprob: -2.7246651649475098
    3. '```' → logprob: -4.97466516494751
    4. '0' → logprob: -5.09966516494751
    5. '3' → logprob: -5.59966516494751
    6. '2' → logprob: -5.72466516494751
    7. '4' → logprob: -6.59966516494751
    8. '1' → logprob: -6.72466516494751
    9. ''' → logprob: -6.72466516494751
    10. ' ```' → logprob: -6.72466516494751

Token 37: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15065820515155792
    2. '3' → logprob: -2.775658130645752
    3. '1' → logprob: -3.525658130645752
    4. '0' → logprob: -4.025658130645752
    5. '<|end|>' → logprob: -4.025658130645752
    6. '2' → logprob: -4.650658130645752
    7. '```' → logprob: -7.275658130645752
    8. '-' → logprob: -7.275658130645752
    9. '4' → logprob: -7.775658130645752
    10. ' -' → logprob: -8.77565860748291

Token 38: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14964091777801514
    2. '<|end|>' → logprob: -2.8996410369873047
    3. '2' → logprob: -3.3996410369873047
    4. '0' → logprob: -3.8996410369873047
    5. '3' → logprob: -4.149641036987305
    6. '```' → logprob: -6.149641036987305
    7. '4' → logprob: -6.274641036987305
    8. ' 

' → logprob: -6.649641036987305
    9. ' 
' → logprob: -6.774641036987305
    10. '[' → logprob: -6.899641036987305

Token 39: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13607175648212433
    2. ' ' → logprob: -2.1360716819763184
    3. '3' → logprob: -5.136071681976318
    4. '0' → logprob: -6.511071681976318
    5. '-' → logprob: -6.886071681976318
    6. '1' → logprob: -8.011072158813477
    7. ' -' → logprob: -9.386072158813477
    8. '<|end|>' → logprob: -9.511072158813477
    9. '```' → logprob: -9.636072158813477
    10. '  ' → logprob: -10.011072158813477

Token 40: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.290702223777771
    2. '2' → logprob: -2.5407023429870605
    3. '0' → logprob: -2.6657023429870605
    4. '3' → logprob: -2.9157023429870605
    5. '<|end|>' → logprob: -4.6657023429870605
    6. '4' → logprob: -4.7907023429870605
    7. '1' → logprob: -5.0407023429870605
    8. ''' → logprob: -5.5407023429870605
    9. '[' → logprob: -5.6657023429870605
    10. '6' → logprob: -5.9157023429870605

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0023706546053290367
    2. '2' → logprob: -6.752370834350586
    3. '0' → logprob: -7.252370834350586
    4. ' ' → logprob: -8.377370834350586
    5. '3' → logprob: -9.002370834350586
    6. '<|end|>' → logprob: -9.877370834350586
    7. '```' → logprob: -10.752370834350586
    8. '4' → logprob: -10.752370834350586
    9. '5' → logprob: -11.814870834350586
    10. '.' → logprob: -12.189870834350586

Token 42: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8706566691398621
    2. '
' → logprob: -1.3706567287445068
    3. '"""' → logprob: -2.245656728744507
    4. '```' → logprob: -2.745656728744507
    5. '"""
' → logprob: -2.870656728744507
    6. '"""

' → logprob: -3.870656728744507
    7. '0' → logprob: -4.245656490325928
    8. ' 
' → logprob: -4.495656490325928
    9. '\' → logprob: -4.870656490325928
    10. ' ' → logprob: -5.120656490325928

Token 43: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0703285932540894
    2. '\n' → logprob: -1.9453285932540894
    3. '2' → logprob: -2.070328712463379
    4. '0' → logprob: -2.320328712463379
    5. '```' → logprob: -2.820328712463379
    6. '4' → logprob: -3.070328712463379
    7. '"""' → logprob: -3.195328712463379
    8. '1' → logprob: -3.195328712463379
    9. ' ' → logprob: -3.695328712463379
    10. '"""
' → logprob: -4.570328712463379

Token 44: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1699565351009369
    2. '\n' → logprob: -2.6699564456939697
    3. '```' → logprob: -3.5449564456939697
    4. ' ' → logprob: -3.7949564456939697
    5. ' 
' → logprob: -4.669956684112549
    6. '' → logprob: -5.169956684112549
    7. '#' → logprob: -5.419956684112549
    8. '"""' → logprob: -5.544956684112549
    9. ' 

' → logprob: -6.044956684112549
    10. '

' → logprob: -6.169956684112549

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.945094355614856e-05
    2. ' ' → logprob: -9.625069618225098
    3. '1' → logprob: -13.125069618225098
    4. '<|end|>' → logprob: -13.875069618225098
    5. '3' → logprob: -15.625069618225098
    6. '2' → logprob: -15.750069618225098
    7. '<|end|>' → logprob: -15.750069618225098
    8. '```' → logprob: -17.87506866455078
    9. '.' → logprob: -18.00006866455078
    10. '00' → logprob: -18.25006866455078

Token 46: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2269545793533325
    2. '3' → logprob: -1.3519545793533325
    3. '"""' → logprob: -1.7269545793533325
    4. '```' → logprob: -2.226954460144043
    5. ' """' → logprob: -2.601954460144043
    6. '\n' → logprob: -4.101954460144043
    7. '2' → logprob: -4.601954460144043
    8. '#' → logprob: -4.726954460144043
    9. '4' → logprob: -4.726954460144043
    10. '<|end|>' → logprob: -4.976954460144043

Token 47: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.005173158831894398
    2. ' ' → logprob: -6.380173206329346
    3. '1' → logprob: -6.505173206329346
    4. '0' → logprob: -7.130173206329346
    5. '4' → logprob: -7.505173206329346
    6. '2' → logprob: -7.630173206329346
    7. '-' → logprob: -10.130172729492188
    8. '5' → logprob: -10.630172729492188
    9. '7' → logprob: -10.755172729492188
    10. '```' → logprob: -10.880172729492188

Token 48: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08058106899261475
    2. '0' → logprob: -3.0805811882019043
    3. '4' → logprob: -4.080581188201904
    4. '.' → logprob: -5.580581188201904
    5. '2' → logprob: -5.955581188201904
    6. '<|end|>' → logprob: -5.955581188201904
    7. '3' → logprob: -6.205581188201904
    8. '6' → logprob: -7.455581188201904
    9. '```' → logprob: -7.455581188201904
    10. ' ```' → logprob: -7.705581188201904

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01009933091700077
    2. ' ' → logprob: -4.635099411010742
    3. '<|end|>' → logprob: -8.510099411010742
    4. '-' → logprob: -9.010099411010742
    5. '```' → logprob: -11.760099411010742
    6. '<|end|>' → logprob: -12.635099411010742
    7. '1' → logprob: -13.135099411010742
    8. ' ' → logprob: -14.010099411010742
    9. '2' → logprob: -14.135099411010742
    10. '.' → logprob: -14.385099411010742

Token 50: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07270339131355286
    2. '<|end|>' → logprob: -3.3227033615112305
    3. '3' → logprob: -4.6977033615112305
    4. '1' → logprob: -4.6977033615112305
    5. ' """' → logprob: -5.4477033615112305
    6. '2' → logprob: -5.8227033615112305
    7. '4' → logprob: -6.0727033615112305
    8. '```' → logprob: -6.3227033615112305
    9. '0' → logprob: -6.8227033615112305
    10. '"""' → logprob: -7.0727033615112305

Token 51: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6163147687911987
    2. '2' → logprob: -1.6163147687911987
    3. '1' → logprob: -1.8663147687911987
    4. '0' → logprob: -2.7413148880004883
    5. '4' → logprob: -3.4913148880004883
    6. '-' → logprob: -4.741314888000488
    7. '5' → logprob: -6.366314888000488
    8. ' ' → logprob: -7.116314888000488
    9. '7' → logprob: -8.491314888000488
    10. '6' → logprob: -8.491314888000488

Token 52: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038703545928001404
    2. '0' → logprob: -4.913703441619873
    3. '4' → logprob: -5.038703441619873
    4. '1' → logprob: -5.288703441619873
    5. '2' → logprob: -5.413703441619873
    6. '6' → logprob: -5.788703441619873
    7. '3' → logprob: -5.913703441619873
    8. '```' → logprob: -5.913703441619873
    9. '<|end|>' → logprob: -6.163703441619873
    10. '.' → logprob: -6.913703441619873

Token 53: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007373527158051729
    2. '2' → logprob: -5.007373332977295
    3. ' ' → logprob: -8.132373809814453
    4. '3' → logprob: -8.757373809814453
    5. '0' → logprob: -9.007373809814453
    6. '<|end|>' → logprob: -10.819873809814453
    7. '```' → logprob: -11.569873809814453
    8. '4' → logprob: -11.632373809814453
    9. '.' → logprob: -12.007373809814453
    10. '5' → logprob: -12.507373809814453

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04512506350874901
    2. '2' → logprob: -4.6701250076293945
    3. '3' → logprob: -4.7951250076293945
    4. '<|end|>' → logprob: -4.7951250076293945
    5. '0' → logprob: -5.0451250076293945
    6. '4' → logprob: -5.5451250076293945
    7. '1' → logprob: -5.7951250076293945
    8. '```' → logprob: -6.5451250076293945
    9. ' ```' → logprob: -6.6701250076293945
    10. ' -' → logprob: -7.7951250076293945

Token 55: '5' (ID: 20)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5866353511810303
    2. '2' → logprob: -1.4616353511810303
    3. '3' → logprob: -2.3366353511810303
    4. '1' → logprob: -2.5866353511810303
    5. '0' → logprob: -3.7116353511810303
    6. ' -' → logprob: -4.461635589599609
    7. '-' → logprob: -6.086635589599609
    8. '<|end|>' → logprob: -7.211635589599609
    9. '4' → logprob: -7.836635589599609
    10. '```' → logprob: -8.96163558959961

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3412310481071472
    2. '2' → logprob: -2.841231107711792
    3. '3' → logprob: -2.966231107711792
    4. '4' → logprob: -3.091231107711792
    5. '0' → logprob: -3.216231107711792
    6. '<|end|>' → logprob: -3.466231107711792
    7. '6' → logprob: -3.841231107711792
    8. ' -' → logprob: -4.341230869293213
    9. '```' → logprob: -4.966230869293213
    10. '-' → logprob: -5.216230869293213

Token 57: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8868629932403564
    2. '0' → logprob: -1.1368629932403564
    3. '2' → logprob: -1.5118629932403564
    4. '-' → logprob: -3.8868629932403564
    5. ' ' → logprob: -4.261862754821777
    6. ' -' → logprob: -4.761862754821777
    7. '3' → logprob: -6.011862754821777
    8. '4' → logprob: -7.761862754821777
    9. '5' → logprob: -8.136862754821777
    10. '<|end|>' → logprob: -8.636862754821777

Token 58: '

' (ID: 279)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9282975792884827
    2. '\n' → logprob: -1.553297519683838
    3. '```' → logprob: -2.053297519683838
    4. '
' → logprob: -2.053297519683838
    5. '#' → logprob: -3.428297519683838
    6. '"""
' → logprob: -3.928297519683838
    7. '"""

' → logprob: -4.428297519683838
    8. 'import' → logprob: -4.803297519683838
    9. '\' → logprob: -5.053297519683838
    10. '"' → logprob: -5.053297519683838

Token 59: 'output' (ID: 6130)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.07235272228717804
    2. '"""
' → logprob: -3.947352647781372
    3. '```' → logprob: -4.447352886199951
    4. '#' → logprob: -4.697352886199951
    5. '"' → logprob: -5.072352886199951
    6. 'a' → logprob: -5.572352886199951
    7. '""' → logprob: -5.572352886199951
    8. '0' → logprob: -6.197352886199951
    9. '
' → logprob: -6.572352886199951
    10. 'd' → logprob: -6.572352886199951

Token 60: ':
' (ID: 734)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8677138090133667
    2. '```' → logprob: -1.4927138090133667
    3. '4' → logprob: -2.6177139282226562
    4. '"""' → logprob: -2.8677139282226562
    5. '0' → logprob: -2.9927139282226562
    6. '7' → logprob: -3.2427139282226562
    7. '\n' → logprob: -3.3677139282226562
    8. '2' → logprob: -3.4927139282226562
    9. ':' → logprob: -3.9927139282226562
    10. '1' → logprob: -3.9927139282226562

Token 61: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.4421255588531494
    2. '-' → logprob: -1.8171255588531494
    3. '2' → logprob: -1.9421255588531494
    4. '1' → logprob: -1.9421255588531494
    5. '4' → logprob: -2.1921255588531494
    6. '0' → logprob: -2.5671255588531494
    7. '6' → logprob: -2.6921255588531494
    8. '9' → logprob: -3.8171255588531494
    9. '7' → logprob: -4.19212532043457
    10. '8' → logprob: -4.81712532043457

Token 62: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6602960228919983
    2. 'a' → logprob: -2.4102959632873535
    3. '#' → logprob: -2.5352959632873535
    4. 'd' → logprob: -2.5352959632873535
    5. 'def' → logprob: -2.9102959632873535
    6. 'p' → logprob: -3.0352959632873535
    7. '```' → logprob: -3.0352959632873535
    8. '3' → logprob: -3.9102959632873535
    9. '4' → logprob: -4.0352959632873535
    10. 'from' → logprob: -4.5352959632873535

Token 63: '1' (ID: 16)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1920422315597534
    2. '#' → logprob: -1.5670422315597534
    3. '```' → logprob: -2.192042350769043
    4. 'd' → logprob: -2.317042350769043
    5. '3' → logprob: -3.192042350769043
    6. '4' → logprob: -3.192042350769043
    7. '2' → logprob: -3.317042350769043
    8. '0' → logprob: -3.567042350769043
    9. 'a' → logprob: -3.567042350769043
    10. 'n' → logprob: -3.817042350769043

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6871492266654968
    2. '```' → logprob: -1.6871492862701416
    3. '#' → logprob: -2.1871492862701416
    4. '0' → logprob: -2.8121492862701416
    5. '\n' → logprob: -3.0621492862701416
    6. '2' → logprob: -4.0621490478515625
    7. '3' → logprob: -4.0621490478515625
    8. 'def' → logprob: -4.3121490478515625
    9. '#!/' → logprob: -4.6871490478515625
    10. 'import' → logprob: -4.8121490478515625

Token 65: '0' (ID: 15)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9861157536506653
    2. '#' → logprob: -1.6111156940460205
    3. '2' → logprob: -1.9861156940460205
    4. '0' → logprob: -2.7361156940460205
    5. '#!/' → logprob: -2.9861156940460205
    6. '"""' → logprob: -3.1111156940460205
    7. '3' → logprob: -3.2361156940460205
    8. '1' → logprob: -3.7361156940460205
    9. '\n' → logprob: -4.1111159324646
    10. '4' → logprob: -4.2361159324646

Token 66: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2517731189727783
    2. 'n' → logprob: -1.3767731189727783
    3. '```' → logprob: -1.6267731189727783
    4. '#' → logprob: -2.2517731189727783
    5. '
' → logprob: -2.5017731189727783
    6. 'd' → logprob: -4.251772880554199
    7. 'a' → logprob: -4.501772880554199
    8. '0' → logprob: -4.751772880554199
    9. 'def' → logprob: -5.001772880554199
    10. '-' → logprob: -5.251772880554199

Token 67: '"""

' (ID: 34508)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6954184770584106
    2. 'def' → logprob: -1.4454184770584106
    3. '```' → logprob: -1.5704184770584106
    4. 'n' → logprob: -3.320418357849121
    5. 'from' → logprob: -4.320418357849121
    6. 'a' → logprob: -5.445418357849121
    7. '#' → logprob: -6.320418357849121
    8. 'import' → logprob: -7.695418357849121
    9. '``' → logprob: -8.070418357849121
    10. 'p' → logprob: -8.195418357849121

Token 68: 'import' (ID: 561)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8818709850311279
    2. 'n' → logprob: -1.006870985031128
    3. '```' → logprob: -2.256870985031128
    4. '#' → logprob: -2.756870985031128
    5. 'a' → logprob: -3.381870985031128
    6. 'def' → logprob: -4.881871223449707
    7. 'i' → logprob: -6.631871223449707
    8. 't' → logprob: -6.756871223449707
    9. '
' → logprob: -6.756871223449707
    10. 'import' → logprob: -7.006871223449707

Token 69: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.04876847192645073
    2. ' math' → logprob: -3.0487685203552246
    3. ' numpy' → logprob: -9.048768043518066
    4. ' itertools' → logprob: -10.298768043518066
    5. 'sys' → logprob: -11.048768043518066
    6. ' sym' → logprob: -11.423768043518066
    7. ' collections' → logprob: -14.173768043518066
    8. ' ' → logprob: -14.298768043518066
    9. 'math' → logprob: -14.548768043518066
    10. ' ' → logprob: -15.048768043518066

Token 70: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005511450115591288
    2. '
' → logprob: -6.380511283874512
    3. 'data' → logprob: -6.380511283874512
    4. 'd' → logprob: -6.755511283874512
    5. 'for' → logprob: -8.130511283874512
    6. 'n' → logprob: -8.380511283874512
    7. '```' → logprob: -8.755511283874512
    8. 'input' → logprob: -9.255511283874512
    9. '_' → logprob: -10.255511283874512
    10. '\' → logprob: -10.255511283874512

Token 71: 'EPS' (ID: 82793)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023504599928855896
    2. 'data' → logprob: -4.023504734039307
    3. 'for' → logprob: -5.898504734039307
    4. 'input' → logprob: -6.273504734039307
    5. 'd' → logprob: -7.648504734039307
    6. 'n' → logprob: -8.398504257202148
    7. 'class' → logprob: -12.898504257202148
    8. 'from' → logprob: -13.148504257202148
    9. 'import' → logprob: -13.898504257202148
    10. 'sys' → logprob: -14.023504257202148

Token 72: ' =' (ID: 314)
  Prédit: 'ILON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILON' → logprob: -0.45128870010375977
    2. '=' → logprob: -1.2012887001037598
    3. ' =' → logprob: -2.8262887001037598
    4. '   ' → logprob: -6.20128870010376
    5. 'I' → logprob: -8.326288223266602
    6. '_' → logprob: -8.326288223266602
    7. '    ' → logprob: -8.951288223266602
    8. ' ' → logprob: -9.951288223266602
    9. 'IL' → logprob: -9.951288223266602
    10. 'ilon' → logprob: -9.951288223266602

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12693408131599426
    2. '1' → logprob: -2.126934051513672
    3. '0' → logprob: -12.251934051513672
    4. '10' → logprob: -14.376934051513672
    5. '2' → logprob: -15.751934051513672
    6. '9' → logprob: -16.126934051513672
    7. ' ' → logprob: -16.251934051513672
    8. '=' → logprob: -16.626934051513672
    9. '3' → logprob: -16.876934051513672
    10. '(' → logprob: -17.376934051513672

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.248469718324486e-05
    2. ' ' → logprob: -11.500022888183594
    3. '0' → logprob: -12.000022888183594
    4. '10' → logprob: -12.125022888183594
    5. '-' → logprob: -14.625022888183594
    6. '.' → logprob: -15.625022888183594
    7. '=' → logprob: -16.625022888183594
    8. '(' → logprob: -16.750022888183594
    9. '3' → logprob: -18.750022888183594
    10. '2' → logprob: -18.875022888183594

Token 75: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006815764936618507
    2. 'e' → logprob: -7.375681400299072
    3. '```' → logprob: -10.50068187713623
    4. '0' → logprob: -10.87568187713623
    5. '-
' → logprob: -13.12568187713623
    6. '−' → logprob: -13.50068187713623
    7. '3' → logprob: -13.62568187713623
    8. '{-' → logprob: -14.62568187713623
    9. '2' → logprob: -14.75068187713623
    10. '^-' → logprob: -15.12568187713623

Token 76: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00012928384239785373
    2. '9' → logprob: -9.000129699707031
    3. '10' → logprob: -13.250129699707031
    4. '8' → logprob: -13.500129699707031
    5. '7' → logprob: -14.000129699707031
    6. '```' → logprob: -14.500129699707031
    7. '12' → logprob: -15.250129699707031
    8. '6' → logprob: -15.250129699707031
    9. '

' → logprob: -15.625129699707031
    10. '−' → logprob: -15.625129699707031

Token 77: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.045413993299007416
    2. '10' → logprob: -3.5454139709472656
    3. '8' → logprob: -4.545413970947266
    4. '7' → logprob: -5.795413970947266
    5. '12' → logprob: -6.670413970947266
    6. '09' → logprob: -8.545413970947266
    7. '6' → logprob: -8.795413970947266
    8. '15' → logprob: -9.170413970947266
    9. '14' → logprob: -9.420413970947266
    10. '11' → logprob: -10.420413970947266

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1619071662425995
    2. 'def' → logprob: -1.9119071960449219
    3. '

' → logprob: -6.661907196044922
    4. '
' → logprob: -8.911907196044922
    5. 'import' → logprob: -9.536907196044922
    6. ' def' → logprob: -9.661907196044922
    7. '```' → logprob: -9.661907196044922
    8. 'class' → logprob: -10.911907196044922
    9. ' 
' → logprob: -10.911907196044922
    10. '\' → logprob: -11.286907196044922

Token 79: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01105442550033331
    2. 'class' → logprob: -4.511054515838623
    3. '
' → logprob: -12.636054039001465
    4. ' def' → logprob: -13.386054039001465
    5. ' class' → logprob: -14.511054039001465
    6. '```' → logprob: -14.761054039001465
    7. 'import' → logprob: -15.136054039001465
    8. 'from' → logprob: -15.261054039001465
    9. '

' → logprob: -15.761054039001465
    10. ' 
' → logprob: -16.76105499267578

Token 80: ' cross' (ID: 8088)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.779281735420227
    2. ' is' → logprob: -2.1542816162109375
    3. ' line' → logprob: -2.1542816162109375
    4. ' main' → logprob: -2.9042816162109375
    5. ' float' → logprob: -3.4042816162109375
    6. ' point' → logprob: -3.4042816162109375
    7. ' cc' → logprob: -3.4042816162109375
    8. ' cross' → logprob: -3.5292816162109375
    9. ' intersect' → logprob: -3.6542816162109375
    10. ' sign' → logprob: -4.1542816162109375

Token 81: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06372100859880447
    2. '_product' → logprob: -3.188720941543579
    3. '(' → logprob: -4.063721179962158
    4. 'product' → logprob: -6.813721179962158
    5. '(A' → logprob: -7.688721179962158
    6. ' product' → logprob: -8.188720703125
    7. '(p' → logprob: -8.688720703125
    8. 'Product' → logprob: -8.688720703125
    9. '_vector' → logprob: -8.688720703125
    10. '<|end|>' → logprob: -8.813720703125

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020983952563256025
    2. ' ,' → logprob: -7.127098560333252
    3. ',b' → logprob: -7.627098560333252
    4. ',p' → logprob: -8.002098083496094
    5. ',a' → logprob: -8.127098083496094
    6. '<|end|>' → logprob: -10.377098083496094
    7. '_,' → logprob: -10.877098083496094
    8. '):' → logprob: -11.252098083496094
    9. ',A' → logprob: -11.377098083496094
    10. '[' → logprob: -11.502098083496094

Token 83: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011061973869800568
    2. ' b' → logprob: -4.511062145233154
    3. '<|end|>' → logprob: -12.011061668395996
    4. '<|end|>' → logprob: -12.886061668395996
    5. ')' → logprob: -13.136061668395996
    6. ')b' → logprob: -14.136061668395996
    7. ' ' → logprob: -14.386061668395996
    8. '	b' → logprob: -14.386061668395996
    9. 'p' → logprob: -15.386061668395996
    10. 'a' → logprob: -15.511061668395996

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027588685043156147
    2. ',' → logprob: -6.377758979797363
    3. '):
' → logprob: -6.877758979797363
    4. ':' → logprob: -11.752758979797363
    5. ')' → logprob: -11.877758979797363
    6. ' ):' → logprob: -11.877758979797363
    7. '):
' → logprob: -13.127758979797363
    8. ' ,' → logprob: -15.127758979797363
    9. '):

' → logprob: -15.377758979797363
    10. '   ' → logprob: -15.752758979797363

Token 85: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07859505712985992
    2. '):' → logprob: -2.8285951614379883
    3. '   ' → logprob: -5.078595161437988
    4. '**' → logprob: -6.203595161437988
    5. ',' → logprob: -6.578595161437988
    6. ':return' → logprob: -6.828595161437988
    7. ':**' → logprob: -6.828595161437988
    8. ':
' → logprob: -7.078595161437988
    9. '[' → logprob: -7.203595161437988
    10. ' :' → logprob: -7.703595161437988

Token 86: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6449103355407715
    2. 'return' (adapté à ' return') → logprob: -1.1449103355407715
    3. 'a' → logprob: -1.8949103355407715
    4. ' return' → logprob: -5.0199103355407715
    5. ' a' → logprob: -9.39491081237793
    6. '	return' → logprob: -11.89491081237793
    7. '```' → logprob: -12.51991081237793
    8. '    
' → logprob: -13.14491081237793
    9. 'x' → logprob: -13.39491081237793
    10. '  ' → logprob: -14.14491081237793

Token 87: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.306760805164231e-05
    2. ' a' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.75001335144043
    4. '	a' → logprob: -20.12501335144043
    5. ' ' → logprob: -21.25001335144043
    6. '(a' → logprob: -22.00001335144043
    7. '  ' → logprob: -22.50001335144043
    8. 'а' → logprob: -22.87501335144043
    9. '```' → logprob: -25.25001335144043
    10. '_a' → logprob: -25.37501335144043

Token 88: '.real' (ID: 63800)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.771655115589965e-05
    2. 'x' → logprob: -11.125018119812012
    3. '.x' → logprob: -13.250018119812012
    4. ' [' → logprob: -14.500018119812012
    5. '[x' → logprob: -15.125018119812012
    6. '.' → logprob: -15.750018119812012
    7. ' ' → logprob: -16.500017166137695
    8. '0' → logprob: -17.125017166137695
    9. '```' → logprob: -17.625017166137695
    10. '
' → logprob: -17.750017166137695

Token 89: ' *' (ID: 425)
  Prédit: '*b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.6941180229187012
    2. '*' → logprob: -0.9441180229187012
    3. ' *' → logprob: -2.194118022918701
    4. '*y' → logprob: -13.81911849975586
    5. ' ' → logprob: -14.06911849975586
    6. 'b' → logprob: -14.06911849975586
    7. '*object' → logprob: -14.56911849975586
    8. '*x' → logprob: -14.94411849975586
    9. '*d' → logprob: -15.31911849975586
    10. '*p' → logprob: -15.31911849975586

Token 90: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. ' b' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.75
    4. '	b' → logprob: -20.125
    5. '(b' → logprob: -23.25
    6. '  ' → logprob: -23.625
    7. ' ' → logprob: -23.75
    8. ')b' → logprob: -24.375
    9. '*b' → logprob: -24.75
    10. 'imag' → logprob: -24.875

Token 91: '.imag' (ID: 171484)
  Prédit: '.imag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.imag' → logprob: -0.001665184972807765
    2. 'imag' → logprob: -6.501665115356445
    3. '.' → logprob: -8.876665115356445
    4. '.im' → logprob: -10.751665115356445
    5. 'Imag' → logprob: -13.876665115356445
    6. '.con' → logprob: -15.251665115356445
    7. ' imag' → logprob: -16.251665115356445
    8. '.image' → logprob: -16.376665115356445
    9. '_im' → logprob: -16.376665115356445
    10. ' imaginary' → logprob: -16.501665115356445

Token 92: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014276683330536
    2. '-' → logprob: -1.701427698135376
    3. ' ' → logprob: -11.826427459716797
    4. '  ' → logprob: -12.076427459716797
    5. ' ' → logprob: -14.576427459716797
    6. '   ' → logprob: -14.826427459716797
    7. '```' → logprob: -16.076427459716797
    8. '<|end|>' → logprob: -16.326427459716797
    9. '    ' → logprob: -16.451427459716797
    10. '−' → logprob: -16.951427459716797

Token 93: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001502598519437015
    2. ' a' → logprob: -6.501502513885498
    3. '	a' → logprob: -15.126502990722656
    4. '<|end|>' → logprob: -18.501502990722656
    5. ' ' → logprob: -18.751502990722656
    6. '   ' → logprob: -18.751502990722656
    7. '  ' → logprob: -19.501502990722656
    8. 'b' → logprob: -19.876502990722656
    9. '(a' → logprob: -20.376502990722656
    10. 'а' → logprob: -20.626502990722656

Token 94: '.imag' (ID: 171484)
  Prédit: '.imag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.imag' → logprob: -0.5862308740615845
    2. '.real' → logprob: -0.8362308740615845
    3. 'imag' → logprob: -4.711230754852295
    4. '.im' → logprob: -7.086230754852295
    5. 'real' → logprob: -8.211231231689453
    6. '.' → logprob: -9.836231231689453
    7. 'b' → logprob: -10.836231231689453
    8. '.con' → logprob: -11.336231231689453
    9. 'complex' → logprob: -11.336231231689453
    10. '.cross' → logprob: -11.836231231689453

Token 95: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5767059326171875
    2. ' *' → logprob: -0.8267059326171875
    3. '*b' → logprob: -7.2017059326171875
    4. ' ' → logprob: -11.826705932617188
    5. '*object' → logprob: -12.076705932617188
    6. 'b' → logprob: -12.826705932617188
    7. '*out' → logprob: -13.451705932617188
    8. '**' → logprob: -13.451705932617188
    9. '<|end|>' → logprob: -14.576705932617188
    10. '*a' → logprob: -14.951705932617188

Token 96: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019505366217345
    2. 'a' → logprob: -6.251950740814209
    3. ' b' → logprob: -11.00195026397705
    4. 'c' → logprob: -13.75195026397705
    5. 'real' → logprob: -14.00195026397705
    6. '<|end|>' → logprob: -14.25195026397705
    7. '0' → logprob: -14.50195026397705
    8. ' ' → logprob: -14.75195026397705
    9. ' a' → logprob: -14.87695026397705
    10. '```' → logprob: -15.62695026397705

Token 97: '.real' (ID: 63800)
  Prédit: 'real'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'real' → logprob: -0.14822295308113098
    2. '.real' → logprob: -2.0232229232788086
    3. ' real' → logprob: -5.773222923278809
    4. 'Real' → logprob: -7.273222923278809
    5. '(real' → logprob: -7.648222923278809
    6. '_real' → logprob: -7.898222923278809
    7. 'm' → logprob: -8.023222923278809
    8. 'complex' → logprob: -9.273222923278809
    9. 'con' → logprob: -9.398222923278809
    10. 'imag' → logprob: -9.898222923278809

Token 98: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16780710220336914
    2. 'def' → logprob: -2.667807102203369
    3. '\n' → logprob: -3.792807102203369
    4. '\' → logprob: -4.667807102203369
    5. '    
' → logprob: -4.667807102203369
    6. '<|end|>' → logprob: -4.667807102203369
    7. '' → logprob: -4.917807102203369
    8. '*' → logprob: -4.917807102203369
    9. '

' → logprob: -5.542807102203369
    10. '```' → logprob: -5.792807102203369

Token 99: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00032497590291313827
    2. '
' → logprob: -8.375325202941895
    3. ' def' → logprob: -9.875325202941895
    4. '\' → logprob: -10.875325202941895
    5. '```' → logprob: -11.125325202941895
    6. 'newline' → logprob: -13.625325202941895
    7. '\n' → logprob: -13.750325202941895
    8. '

' → logprob: -13.875325202941895
    9. '
' → logprob: -14.125325202941895
    10. 'd' → logprob: -14.125325202941895

Token 100: ' dot' (ID: 16579)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.150063395500183
    2. 'on' → logprob: -2.4000635147094727
    3. ' intersect' → logprob: -2.4000635147094727
    4. 'inter' → logprob: -2.5250635147094727
    5. ' dot' → logprob: -2.5250635147094727
    6. 'dot' → logprob: -2.7750635147094727
    7. ' line' → logprob: -3.0250635147094727
    8. ' orientation' → logprob: -3.1500635147094727
    9. ' cc' → logprob: -3.4000635147094727
    10. ' is' → logprob: -3.9000635147094727

Token 101: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06198213994503021
    2. '(' → logprob: -2.8119821548461914
    3. ' (' → logprob: -11.436982154846191
    4. 'a' → logprob: -13.436982154846191
    5. '(A' → logprob: -14.186982154846191
    6. '<|end|>' → logprob: -14.561982154846191
    7. '((' → logprob: -15.436982154846191
    8. '<|end|>' → logprob: -16.186981201171875
    9. '(`' → logprob: -16.436981201171875
    10. '()' → logprob: -16.561981201171875

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001227276516146958
    2. ' ,' → logprob: -9.250123023986816
    3. ',b' → logprob: -11.500123023986816
    4. ',a' → logprob: -11.625123023986816
    5. ')' → logprob: -12.500123023986816
    6. '(' → logprob: -13.500123023986816
    7. '(a' → logprob: -13.500123023986816
    8. '<|end|>' → logprob: -15.375123023986816
    9. ',
' → logprob: -16.6251220703125
    10. ' a' → logprob: -16.7501220703125

Token 103: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018152983859181404
    2. ' b' → logprob: -4.018153190612793
    3. 'a' → logprob: -12.893153190612793
    4. '<|end|>' → logprob: -14.393153190612793
    5. ' a' → logprob: -16.518152236938477
    6. ' ' → logprob: -17.393152236938477
    7. ')b' → logprob: -17.393152236938477
    8. ')' → logprob: -18.393152236938477
    9. '	b' → logprob: -18.393152236938477
    10. '(b' → logprob: -19.893152236938477

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025051478296518326
    2. '):
' → logprob: -6.002505302429199
    3. ')' → logprob: -11.1275053024292
    4. ' ):' → logprob: -11.5025053024292
    5. ',' → logprob: -12.8775053024292
    6. '):
' → logprob: -13.6275053024292
    7. ':' → logprob: -14.8775053024292
    8. '):

' → logprob: -15.5025053024292
    9. '   ' → logprob: -16.002504348754883
    10. ')**' → logprob: -16.752504348754883

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06833682209253311
    2. ' return' → logprob: -2.8183367252349854
    3. 'return' → logprob: -5.0683369636535645
    4. '	return' → logprob: -10.193336486816406
    5. ' a' → logprob: -11.943336486816406
    6. '=' → logprob: -12.318336486816406
    7. 'a' → logprob: -12.943336486816406
    8. ' =' → logprob: -13.193336486816406
    9. ' ' → logprob: -13.818336486816406
    10. '    ' → logprob: -13.943336486816406

Token 106: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019486293895170093
    2. ' a' → logprob: -6.251948833465576
    3. '(a' → logprob: -11.501948356628418
    4. 'return' (adapté à ' return') → logprob: -11.751948356628418
    5. ' return' → logprob: -13.251948356628418
    6. '	a' → logprob: -16.251949310302734
    7. ' (' → logprob: -16.751949310302734
    8. '   ' → logprob: -17.376949310302734
    9. ' ' → logprob: -19.376949310302734
    10. '(' → logprob: -20.626949310302734

Token 107: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004130522720515728
    2. ' a' → logprob: -5.5041303634643555
    3. '(a' → logprob: -9.879130363464355
    4. ' (' → logprob: -14.254130363464355
    5. '	a' → logprob: -15.629130363464355
    6. 'abs' → logprob: -18.004131317138672
    7. '   ' → logprob: -18.004131317138672
    8. ' ' → logprob: -18.254131317138672
    9. '(' → logprob: -18.379131317138672
    10. ' abs' → logprob: -20.879131317138672

Token 108: '.real' (ID: 63800)
  Prédit: '.real'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.real' → logprob: -0.0004366294015198946
    2. '.' → logprob: -7.750436782836914
    3. '.con' → logprob: -12.750436782836914
    4. 'real' → logprob: -12.875436782836914
    5. '.imag' → logprob: -15.250436782836914
    6. ' .' → logprob: -15.625436782836914
    7. '.re' → logprob: -17.125436782836914
    8. 'a' → logprob: -18.125436782836914
    9. ').' → logprob: -18.500436782836914
    10. '.Real' → logprob: -18.750436782836914

Token 109: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20141743123531342
    2. ' *' → logprob: -1.7014174461364746
    3. '*a' → logprob: -13.076416969299316
    4. '*b' → logprob: -13.826416969299316
    5. '**' → logprob: -14.451416969299316
    6. '*object' → logprob: -15.576416969299316
    7. ' ' → logprob: -15.701416969299316
    8. ' ' → logprob: -16.451417922973633
    9. '*out' → logprob: -18.076417922973633
    10. '＊' → logprob: -18.326417922973633

Token 110: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024779161904007196
    2. ' b' → logprob: -6.002478122711182
    3. 'a' → logprob: -13.002477645874023
    4. ' a' → logprob: -17.877477645874023
    5. '	b' → logprob: -19.002477645874023
    6. ' ' → logprob: -19.502477645874023
    7. '*b' → logprob: -20.502477645874023
    8. '  ' → logprob: -21.627477645874023
    9. ')b' → logprob: -21.752477645874023
    10. ' б' → logprob: -22.877477645874023

Token 111: '.real' (ID: 63800)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00012201975914649665
    2. '*b' → logprob: -9.7501220703125
    3. 'a' → logprob: -10.3751220703125
    4. '*a' → logprob: -11.5001220703125
    5. ' *' → logprob: -11.7501220703125
    6. ' ' → logprob: -12.6251220703125
    7. 'con' → logprob: -13.3751220703125
    8. 'imag' → logprob: -13.6251220703125
    9. ' ' → logprob: -13.7501220703125
    10. 'real' → logprob: -14.0001220703125

Token 112: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519477307796478
    2. '+' → logprob: -1.5019477605819702
    3. '+a' → logprob: -11.126947402954102
    4. '+b' → logprob: -13.376947402954102
    5. ' ' → logprob: -14.376947402954102
    6. ' ' → logprob: -14.501947402954102
    7. '+
' → logprob: -15.626947402954102
    8. ' +
' → logprob: -15.626947402954102
    9. '   ' → logprob: -15.751947402954102
    10. 'a' → logprob: -16.3769474029541

Token 113: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.038050562143325806
    2. ' a' → logprob: -3.288050651550293
    3. 'b' → logprob: -11.788050651550293
    4. ' b' → logprob: -13.663050651550293
    5. '	a' → logprob: -15.663050651550293
    6. '   ' → logprob: -16.038049697875977
    7. ' ' → logprob: -16.538049697875977
    8. '  ' → logprob: -16.788049697875977
    9. '    ' → logprob: -18.538049697875977
    10. '_a' → logprob: -19.788049697875977

Token 114: '.imag' (ID: 171484)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0790669173002243
    2. ' b' → logprob: -2.5790669918060303
    3. 'imag' → logprob: -8.70406723022461
    4. ' imag' → logprob: -12.20406723022461
    5. '.imag' → logprob: -13.07906723022461
    6. '	b' → logprob: -13.57906723022461
    7. '.b' → logprob: -14.45406723022461
    8. ' ' → logprob: -14.57906723022461
    9. '*b' → logprob: -14.70406723022461
    10. ' imaginary' → logprob: -14.70406723022461

Token 115: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5943447947502136
    2. ' *' → logprob: -1.3443448543548584
    3. '*b' → logprob: -2.4693448543548584
    4. ' b' → logprob: -2.9693448543548584
    5. 'b' → logprob: -2.9693448543548584
    6. ' ' → logprob: -10.094345092773438
    7. ' ' → logprob: -12.469345092773438
    8. '*object' → logprob: -13.469345092773438
    9. '	b' → logprob: -13.594345092773438
    10. '<|end|>' → logprob: -13.969345092773438

Token 116: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078401252627373
    2. ' b' → logprob: -5.504078388214111
    3. ' ' → logprob: -18.754077911376953
    4. ')b' → logprob: -19.379077911376953
    5. '	b' → logprob: -20.129077911376953
    6. '   ' → logprob: -21.129077911376953
    7. '<|end|>' → logprob: -21.254077911376953
    8. '1' → logprob: -21.254077911376953
    9. '  ' → logprob: -21.379077911376953
    10. ' б' → logprob: -21.379077911376953

Token 117: '.imag' (ID: 171484)
  Prédit: 'imag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imag' → logprob: -0.29057207703590393
    2. '.imag' → logprob: -1.4155720472335815
    3. 'real' → logprob: -5.540572166442871
    4. '.real' → logprob: -5.540572166442871
    5. 'im' → logprob: -7.165572166442871
    6. '.im' → logprob: -7.665572166442871
    7. '<|end|>' → logprob: -9.540572166442871
    8. '.' → logprob: -10.415572166442871
    9. ' imaginary' → logprob: -10.665572166442871
    10. ' imag' → logprob: -11.040572166442871

Token 118: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0024401010014116764
    2. ' def' → logprob: -7.002439975738525
    3. '```' → logprob: -7.252439975738525
    4. '
' → logprob: -7.877439975738525
    5. 'newline' → logprob: -8.752440452575684
    6. '\n' → logprob: -9.002440452575684
    7. '<|end|>' → logprob: -10.252440452575684
    8. ')' → logprob: -10.502440452575684
    9. '#' → logprob: -10.877440452575684
    10. '\' → logprob: -11.377440452575684

Token 119: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.134509021649137e-05
    2. '
' → logprob: -9.75006103515625
    3. '

' → logprob: -13.00006103515625
    4. ' def' → logprob: -14.62506103515625
    5. '#' → logprob: -16.37506103515625
    6. 'class' → logprob: -16.50006103515625
    7. '
' → logprob: -17.12506103515625
    8. '\' → logprob: -17.37506103515625
    9. '```' → logprob: -17.62506103515625
    10. '    
' → logprob: -17.75006103515625

Token 120: ' check' (ID: 2371)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8371139168739319
    2. ' line' → logprob: -2.087113857269287
    3. ' main' → logprob: -2.212113857269287
    4. ' segment' → logprob: -2.337113857269287
    5. ' intersect' → logprob: -3.337113857269287
    6. 'inter' → logprob: -3.587113857269287
    7. 'on' → logprob: -3.962113857269287
    8. ' vector' → logprob: -4.087113857269287
    9. ' cc' → logprob: -4.087113857269287
    10. 'def' → logprob: -4.087113857269287

Token 121: '_cc' (ID: 69524)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5085960626602173
    2. '_segments' → logprob: -1.3835960626602173
    3. '_inter' → logprob: -3.2585959434509277
    4. '(a' → logprob: -3.2585959434509277
    5. '_line' → logprob: -3.3835959434509277
    6. '_segment' → logprob: -4.633595943450928
    7. '_lines' → logprob: -5.008595943450928
    8. '(line' → logprob: -5.383595943450928
    9. '_points' → logprob: -5.758595943450928
    10. '_col' → logprob: -5.883595943450928

Token 122: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00015824666479602456
    2. '(' → logprob: -10.000158309936523
    3. 'd' → logprob: -10.875158309936523
    4. 'c' → logprob: -11.000158309936523
    5. 'ｗ' → logprob: -11.125158309936523
    6. '()' → logprob: -12.375158309936523
    7. 'p' → logprob: -12.625158309936523
    8. '
' → logprob: -12.625158309936523
    9. '_' → logprob: -12.750158309936523
    10. 'ircle' → logprob: -12.875158309936523

Token 123: '(p' (ID: 2407)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.046545617282390594
    2. '(p' → logprob: -3.2965455055236816
    3. '(' → logprob: -5.546545505523682
    4. '(A' → logprob: -5.546545505523682
    5. '((' → logprob: -8.42154598236084
    6. '(point' → logprob: -8.67154598236084
    7. '(points' → logprob: -8.92154598236084
    8. '(ax' → logprob: -10.17154598236084
    9. '(line' → logprob: -10.42154598236084
    10. '(x' → logprob: -10.54654598236084

Token 124: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.40166157484054565
    2. ',' → logprob: -1.1516616344451904
    3. '0' → logprob: -4.901661396026611
    4. 'a' → logprob: -5.901661396026611
    5. ',p' → logprob: -6.526661396026611
    6. '):' → logprob: -7.276661396026611
    7. '_,' → logprob: -7.526661396026611
    8. ',a' → logprob: -7.776661396026611
    9. 'oints' → logprob: -8.40166187286377
    10. 'p' → logprob: -8.52666187286377

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002676368225365877
    2. ',p' → logprob: -6.002676486968994
    3. ' ,' → logprob: -8.627676010131836
    4. 'p' → logprob: -11.252676010131836
    5. '0' → logprob: -12.752676010131836
    6. ' p' → logprob: -13.877676010131836
    7. '_,' → logprob: -13.877676010131836
    8. ',a' → logprob: -13.877676010131836
    9. ',
' → logprob: -14.752676010131836
    10. ',b' → logprob: -14.752676010131836

Token 126: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06198807805776596
    2. ' p' → logprob: -2.811988115310669
    3. 'a' → logprob: -11.06198787689209
    4. ' a' → logprob: -12.56198787689209
    5. ' ' → logprob: -15.18698787689209
    6. '   ' → logprob: -15.18698787689209
    7. '	p' → logprob: -15.68698787689209
    8. 'q' → logprob: -15.81198787689209
    9. 'def' → logprob: -16.311988830566406
    10. '```' → logprob: -16.686988830566406

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '2' → logprob: -12.000008583068848
    3. '3' → logprob: -13.250008583068848
    4. '```' → logprob: -15.625008583068848
    5. 'p' → logprob: -16.00000762939453
    6. '0' → logprob: -17.62500762939453
    7. 'oint' → logprob: -18.12500762939453
    8. 'oints' → logprob: -18.75000762939453
    9. '``' → logprob: -19.50000762939453
    10. '' → logprob: -19.62500762939453

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.3458322731312364e-06
    2. ',p' → logprob: -12.000007629394531
    3. ' ,' → logprob: -13.875007629394531
    4. '):' → logprob: -16.50000762939453
    5. 'p' → logprob: -16.87500762939453
    6. ',
' → logprob: -18.37500762939453
    7. '_,' → logprob: -19.37500762939453
    8. '   ' → logprob: -20.62500762939453
    9. '‌,' → logprob: -20.87500762939453
    10. ',a' → logprob: -21.00000762939453

Token 129: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001044243574142456
    2. ' p' → logprob: -6.876044273376465
    3. 'q' → logprob: -11.876044273376465
    4. '   ' → logprob: -14.438544273376465
    5. ' ' → logprob: -14.626044273376465
    6. ')' → logprob: -14.813544273376465
    7. 'r' → logprob: -14.876044273376465
    8. ',' → logprob: -15.001044273376465
    9. '):
' → logprob: -15.063544273376465
    10. 'def' → logprob: -15.063544273376465

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006305903079919517
    2. 'oint' → logprob: -8.125630378723145
    3. '0' → logprob: -8.250630378723145
    4. ')' → logprob: -11.125630378723145
    5. 'oints' → logprob: -11.375630378723145
    6. ',' → logprob: -11.375630378723145
    7. '):
' → logprob: -11.500630378723145
    8. '```' → logprob: -11.750630378723145
    9. 't' → logprob: -12.625630378723145
    10. '₂' → logprob: -12.875630378723145

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016623330884613097
    2. '):
' → logprob: -9.500165939331055
    3. ' ):' → logprob: -9.750165939331055
    4. ')' → logprob: -10.375165939331055
    5. ',' → logprob: -13.750165939331055
    6. ':' → logprob: -15.000165939331055
    7. '):
' → logprob: -15.250165939331055
    8. ' ' → logprob: -17.500165939331055
    9. '   ' → logprob: -17.500165939331055
    10. ']:' → logprob: -17.625165939331055

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008239185553975403
    2. ':' → logprob: -7.500823974609375
    3. '(p' → logprob: -9.125823974609375
    4. '(' → logprob: -9.500823974609375
    5. '    
' → logprob: -10.875823974609375
    6. ':
' → logprob: -11.875823974609375
    7. ' return' → logprob: -11.875823974609375
    8. '):
' → logprob: -12.000823974609375
    9. '):' → logprob: -12.125823974609375
    10. '>' → logprob: -12.125823974609375

Token 133: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08797762542963028
    2. 'return' → logprob: -3.337977647781372
    3. 'vec' → logprob: -3.837977647781372
    4. 'a' → logprob: -4.712977409362793
    5. '   ' → logprob: -4.712977409362793
    6. 'area' → logprob: -5.087977409362793
    7. ' v' → logprob: -7.462977409362793
    8. 'd' → logprob: -7.712977409362793
    9. ' return' → logprob: -8.087977409362793
    10. 'ab' → logprob: -8.087977409362793

Token 134: ' flag' (ID: 9641)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2841908633708954
    2. 'return' → logprob: -2.0341908931732178
    3. 'vec' → logprob: -2.2841908931732178
    4. 'area' → logprob: -4.784190654754639
    5. 'a' → logprob: -6.409190654754639
    6. 'cross' → logprob: -7.159190654754639
    7. 'd' → logprob: -7.534190654754639
    8. 'cp' → logprob: -7.784190654754639
    9. 'diff' → logprob: -7.784190654754639
    10. ' return' → logprob: -7.784190654754639

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4866909682750702
    2. '=' → logprob: -0.9866909980773926
    3. '   ' → logprob: -4.486690998077393
    4. ':' → logprob: -7.611690998077393
    5. ' ' → logprob: -8.736690521240234
    6. 'return' → logprob: -8.861690521240234
    7. '=p' → logprob: -9.611690521240234
    8. ',' → logprob: -9.736690521240234
    9. ')' → logprob: -9.736690521240234
    10. ' return' → logprob: -10.236690521240234

Token 136: ' float' (ID: 4428)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.8284845948219299
    2. '1' → logprob: -0.9534845948219299
    3. '(p' → logprob: -2.953484535217285
    4. '0' → logprob: -3.328484535217285
    5. ' cross' → logprob: -3.453484535217285
    6. 'int' → logprob: -4.203484535217285
    7. 'abs' → logprob: -4.953484535217285
    8. ' ' → logprob: -5.203484535217285
    9. '(' → logprob: -5.203484535217285
    10. '((' → logprob: -5.328484535217285

Token 137: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.022294150665402412
    2. '("' → logprob: -4.022294044494629
    3. '('-' → logprob: -6.397294044494629
    4. '(p' → logprob: -6.897294044494629
    5. '(c' → logprob: -7.147294044494629
    6. '(' → logprob: -8.022294044494629
    7. '(point' → logprob: -10.022294044494629
    8. '((' → logprob: -10.397294044494629
    9. '()' → logprob: -10.897294044494629
    10. '32' → logprob: -10.897294044494629

Token 138: 'inf' (ID: 22226)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.300106406211853
    2. 'inf' → logprob: -1.800106406211853
    3. 'nan' → logprob: -2.0501065254211426
    4. '('' → logprob: -2.3001065254211426
    5. '0' → logprob: -2.6751065254211426
    6. ''p' → logprob: -2.8001065254211426
    7. '')' → logprob: -3.0501065254211426
    8. '1' → logprob: -3.3001065254211426
    9. 'p' → logprob: -3.6751065254211426
    10. 'abs' → logprob: -4.425106525421143

Token 139: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023193759843707085
    2. '')' → logprob: -4.398193836212158
    3. ')
' → logprob: -4.898193836212158
    4. ' if' → logprob: -6.148193836212158
    5. 'if' → logprob: -7.398193836212158
    6. '')
' → logprob: -9.648193359375
    7. '   ' → logprob: -9.648193359375
    8. ')return' → logprob: -9.898193359375
    9. ' )' → logprob: -10.273193359375
    10. '")' → logprob: -10.398193359375

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006676886696368456
    2. ')' → logprob: -5.25667667388916
    3. '    ' → logprob: -7.50667667388916
    4. ',' → logprob: -8.38167667388916
    5. '<|end|>' → logprob: -8.38167667388916
    6. '    
' → logprob: -10.00667667388916
    7. '  ' → logprob: -10.13167667388916
    8. '#' → logprob: -10.13167667388916
    9. ' if' → logprob: -10.25667667388916
    10. ':' → logprob: -10.75667667388916

Token 141: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1281685829162598
    2. '   ' → logprob: -1.1281685829162598
    3. 'return' → logprob: -1.7531685829162598
    4. 'vec' → logprob: -2.7531685829162598
    5. 'val' → logprob: -2.7531685829162598
    6. 'cross' → logprob: -4.37816858291626
    7. 'area' → logprob: -4.75316858291626
    8. ' return' → logprob: -5.12816858291626
    9. 'cp' → logprob: -5.12816858291626
    10. 'd' → logprob: -5.50316858291626

Token 142: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10034652054309845
    2. '=' → logprob: -2.350346565246582
    3. 'b' → logprob: -9.600346565246582
    4. '=(' → logprob: -10.975346565246582
    5. 'p' → logprob: -11.100346565246582
    6. '=p' → logprob: -11.850346565246582
    7. ' =(' → logprob: -12.100346565246582
    8. ' ' → logprob: -12.350346565246582
    9. ',' → logprob: -12.350346565246582
    10. '=b' → logprob: -12.725346565246582

Token 143: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014195004478096962
    2. ' b' → logprob: -4.264194965362549
    3. 'p' → logprob: -10.514195442199707
    4. ' p' → logprob: -13.514195442199707
    5. 'c' → logprob: -14.014195442199707
    6. 'a' → logprob: -14.014195442199707
    7. ' ' → logprob: -14.389195442199707
    8. 'v' → logprob: -16.26419448852539
    9. '	b' → logprob: -16.38919448852539
    10. 'vec' → logprob: -16.63919448852539

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31341323256492615
    2. ' =' → logprob: -1.3134132623672485
    3. ',' → logprob: -8.813413619995117
    4. '=p' → logprob: -13.938413619995117
    5. ')' → logprob: -14.063413619995117
    6. ' =)' → logprob: -15.813413619995117
    7. '=a' → logprob: -15.938413619995117
    8. 'p' → logprob: -16.063413619995117
    9. '＝' → logprob: -16.438413619995117
    10. 'a' → logprob: -16.438413619995117

Token 145: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014279029332101345
    2. ' p' → logprob: -4.264278888702393
    3. '(p' → logprob: -9.13927936553955
    4. ' (' → logprob: -12.51427936553955
    5. '	p' → logprob: -13.38927936553955
    6. '(' → logprob: -14.01427936553955
    7. '   ' → logprob: -14.26427936553955
    8. 'complex' → logprob: -15.13927936553955
    9. ' complex' → logprob: -15.26427936553955
    10. ' ' → logprob: -15.51427936553955

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -12.375009536743164
    3. '0' → logprob: -12.750009536743164
    4. '=' → logprob: -14.375009536743164
    5. ',' → logprob: -14.625009536743164
    6. '(' → logprob: -15.000009536743164
    7. ' =' → logprob: -15.625009536743164
    8. ')' → logprob: -16.125009536743164
    9. ' ' → logprob: -17.000009536743164
    10. '' → logprob: -17.062509536743164

Token 147: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026594143360853195
    2. ' -' → logprob: -3.6515941619873047
    3. '-p' → logprob: -8.151594161987305
    4. 'p' → logprob: -13.276594161987305
    5. ' ' → logprob: -13.901594161987305
    6. '-user' → logprob: -13.901594161987305
    7. ' p' → logprob: -14.276594161987305
    8. '=' → logprob: -14.526594161987305
    9. '-=' → logprob: -15.651594161987305
    10. ',' → logprob: -16.026594161987305

Token 148: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. '<|end|>' → logprob: -18.501928329467773
    4. '0' → logprob: -18.751928329467773
    5. '	p' → logprob: -19.376928329467773
    6. '<|end|>' → logprob: -19.626928329467773
    7. ' ' → logprob: -20.251928329467773
    8. 'a' → logprob: -20.251928329467773
    9. '<p' → logprob: -20.251928329467773
    10. ')p' → logprob: -20.376928329467773

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. 'o' → logprob: -16.0
    3. '۰' → logprob: -17.875
    4. '1' → logprob: -18.0625
    5. '2' → logprob: -18.125
    6. ' ' → logprob: -18.5
    7. 'p' → logprob: -19.0625
    8. 'a' → logprob: -19.3125
    9. 'O' → logprob: -19.375
    10. 'c' → logprob: -19.375

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006697369273751974
    2. 'p' → logprob: -5.381697177886963
    3. 'a' → logprob: -7.506697177886963
    4. 'b' → logprob: -7.506697177886963
    5. ' p' → logprob: -7.506697177886963
    6. ',p' → logprob: -8.631697654724121
    7. ' ,' → logprob: -9.256697654724121
    8. ' a' → logprob: -9.756697654724121
    9. ' b' → logprob: -10.631697654724121
    10. ' and' → logprob: -11.131697654724121

Token 151: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2519332468509674
    2. ' p' → logprob: -1.501933217048645
    3. '   ' → logprob: -12.626933097839355
    4. ' ' → logprob: -14.251933097839355
    5. '	p' → logprob: -16.001934051513672
    6. '  ' → logprob: -16.376934051513672
    7. '<p' → logprob: -18.501934051513672
    8. ' ' → logprob: -18.626934051513672
    9. '(p' → logprob: -18.626934051513672
    10. '<|end|>' → logprob: -19.001934051513672

Token 152: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -16.375
    3. 't' → logprob: -17.0
    4. '0' → logprob: -17.0
    5. '۲' → logprob: -17.25
    6. '２' → logprob: -17.625
    7. '₂' → logprob: -17.75
    8. '   ' → logprob: -17.9375
    9. 'ython' → logprob: -17.9375
    10. '```' → logprob: -18.0

Token 153: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4740963280200958
    2. '-' → logprob: -0.9740962982177734
    3. '-p' → logprob: -10.974096298217773
    4. ' ' → logprob: -13.724096298217773
    5. 'p' → logprob: -15.349096298217773
    6. '<|end|>' → logprob: -15.474096298217773
    7. ')' → logprob: -16.599096298217773
    8. ',' → logprob: -16.724096298217773
    9. '<|end|>' → logprob: -16.849096298217773
    10. '[' → logprob: -16.974096298217773

Token 154: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007674533873796463
    2. ' p' → logprob: -4.882674694061279
    3. '0' → logprob: -9.632674217224121
    4. '<|end|>' → logprob: -13.257674217224121
    5. ' ' → logprob: -14.632674217224121
    6. '[' → logprob: -15.757674217224121
    7. '<p' → logprob: -16.382675170898438
    8. ')' → logprob: -16.757675170898438
    9. '	p' → logprob: -17.007675170898438
    10. ')p' → logprob: -17.132675170898438

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.662937372922897e-05
    2. '1' → logprob: -9.250096321105957
    3. ' ' → logprob: -15.625096321105957
    4. '۰' → logprob: -15.625096321105957
    5. '01' → logprob: -17.687597274780273
    6. 'o' → logprob: -17.750097274780273
    7. '０' → logprob: -18.250097274780273
    8. '<|end|>' → logprob: -18.437597274780273
    9. '০' → logprob: -18.500097274780273
    10. 'start' → logprob: -19.000097274780273

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002004410926019773
    2. '
' → logprob: -9.125200271606445
    3. 'return' → logprob: -9.875200271606445
    4. ' return' → logprob: -11.375200271606445
    5. ',' → logprob: -11.875200271606445
    6. '    
' → logprob: -12.125200271606445
    7. '<|end|>' → logprob: -12.125200271606445
    8. '	return' → logprob: -12.375200271606445
    9. '<|end|>' → logprob: -13.375200271606445
    10. ')' → logprob: -13.750200271606445

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.741137283621356e-05
    2. 'return' → logprob: -10.750057220458984
    3. ' return' → logprob: -11.250057220458984
    4. '    
' → logprob: -11.750057220458984
    5. ',' → logprob: -12.500057220458984
    6. '
' → logprob: -13.375057220458984
    7. '    ' → logprob: -13.625057220458984
    8. ')' → logprob: -13.625057220458984
    9. '  ' → logprob: -14.000057220458984
    10. '       ' → logprob: -14.125057220458984

Token 158: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5084940791130066
    2. '   ' → logprob: -1.3834941387176514
    3. 'c' → logprob: -2.3834941387176514
    4. 'cross' → logprob: -4.008493900299072
    5. ' return' → logprob: -4.133493900299072
    6. 'cr' → logprob: -5.008493900299072
    7. 'val' → logprob: -5.258493900299072
    8. 'z' → logprob: -6.133493900299072
    9. 'cp' → logprob: -6.633493900299072
    10. 'v' → logprob: -6.883493900299072

Token 159: ' cross' (ID: 8088)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5068878531455994
    2. 'cross' → logprob: -1.2568879127502441
    3. ' abs' → logprob: -2.756887912750244
    4. ' cross' → logprob: -3.006887912750244
    5. '(abs' → logprob: -9.006887435913086
    6. ' ' → logprob: -11.256887435913086
    7. '   ' → logprob: -11.756887435913086
    8. 'fabs' → logprob: -11.881887435913086
    9. 'c' → logprob: -12.881887435913086
    10. '  ' → logprob: -13.006887435913086

Token 160: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.87500286102295
    3. ' (' → logprob: -14.25000286102295
    4. 'a' → logprob: -14.37500286102295
    5. '(
' → logprob: -15.50000286102295
    6. '(b' → logprob: -17.875001907348633
    7. ')' → logprob: -18.000001907348633
    8. '
' → logprob: -18.500001907348633
    9. ')(' → logprob: -18.875001907348633
    10. '```' → logprob: -19.000001907348633

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06259068101644516
    2. ',b' → logprob: -3.1875905990600586
    3. '(a' → logprob: -4.312590599060059
    4. '(b' → logprob: -5.687590599060059
    5. ',a' → logprob: -6.562590599060059
    6. ' ,' → logprob: -6.937590599060059
    7. ')' → logprob: -9.062590599060059
    8. '(' → logprob: -9.937590599060059
    9. 'a' → logprob: -10.812590599060059
    10. 'b' → logprob: -11.312590599060059

Token 162: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004078639671206474
    2. ' b' → logprob: -5.5040788650512695
    3. ' ' → logprob: -16.004077911376953
    4. 'p' → logprob: -17.254077911376953
    5. 'a' → logprob: -17.254077911376953
    6. ')b' → logprob: -17.754077911376953
    7. '	b' → logprob: -18.129077911376953
    8. ')' → logprob: -18.379077911376953
    9. '   ' → logprob: -18.379077911376953
    10. '(b' → logprob: -18.879077911376953

Token 163: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5276849269866943
    2. ' >' → logprob: -1.4026849269866943
    3. '>' → logprob: -1.9026849269866943
    4. ')>' → logprob: -4.527685165405273
    5. ' )' → logprob: -5.777685165405273
    6. ' ' → logprob: -8.027685165405273
    7. '()>' → logprob: -8.402685165405273
    8. ' <' → logprob: -8.527685165405273
    9. '()' → logprob: -9.027685165405273
    10. '<' → logprob: -9.402685165405273

Token 164: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5246540307998657
    2. '>' → logprob: -0.8996540307998657
    3. '()>' → logprob: -6.774653911590576
    4. ' <' → logprob: -8.774654388427734
    5. '<' → logprob: -9.274654388427734
    6. '()' → logprob: -9.524654388427734
    7. ' ' → logprob: -10.399654388427734
    8. ')' → logprob: -11.524654388427734
    9. ')>' → logprob: -11.774654388427734
    10. ' ' → logprob: -12.774654388427734

Token 165: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.48616430163383484
    2. ' EPS' → logprob: -0.9861643314361572
    3. '0' → logprob: -4.861164093017578
    4. ' ' → logprob: -5.486164093017578
    5. 'E' → logprob: -10.236164093017578
    6. 'EP' → logprob: -10.486164093017578
    7. 'ES' → logprob: -10.986164093017578
    8. '+' → logprob: -11.236164093017578
    9. ' +' → logprob: -11.736164093017578
    10. ' EP' → logprob: -11.736164093017578

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05352655425667763
    2. ' :' → logprob: -3.1785266399383545
    3. ':return' → logprob: -4.803526401519775
    4. '>' → logprob: -6.928526401519775
    5. ' ' → logprob: -8.178526878356934
    6. '):' → logprob: -8.303526878356934
    7. ' return' → logprob: -8.678526878356934
    8. ':
' → logprob: -8.928526878356934
    9. '+' → logprob: -8.928526878356934
    10. ')' → logprob: -9.553526878356934

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022313790395855904
    2. ' return' → logprob: -6.252231597900391
    3. '1' → logprob: -9.00223159790039
    4. 'return' → logprob: -9.50223159790039
    5. '0' → logprob: -10.62723159790039
    6. '   ' → logprob: -10.75223159790039
    7. ' ' → logprob: -11.00223159790039
    8. '<|end|>' → logprob: -12.25223159790039
    9. ':' → logprob: -12.37723159790039
    10. '	' → logprob: -12.62723159790039

Token 168: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7775803208351135
    2. ' return' → logprob: -0.9025803208351135
    3. '       ' → logprob: -2.0275802612304688
    4. '1' → logprob: -6.027580261230469
    5. '   ' → logprob: -7.402580261230469
    6. '
' → logprob: -9.027580261230469
    7. ' ' → logprob: -9.902580261230469
    8. '	return' → logprob: -10.402580261230469
    9. ':return' → logprob: -11.152580261230469
    10. '2' → logprob: -11.277580261230469

Token 169: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008190065622329712
    2. '       ' → logprob: -5.633190155029297
    3. ' return' → logprob: -5.758190155029297
    4. '   ' → logprob: -6.883190155029297
    5. '1' → logprob: -8.133190155029297
    6. ':return' → logprob: -11.008190155029297
    7. '    ' → logprob: -11.383190155029297
    8. '
' → logprob: -11.383190155029297
    9. '  ' → logprob: -11.633190155029297
    10. '	return' → logprob: -11.633190155029297

Token 170: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.21435289084911346
    2. '(' → logprob: -1.7143528461456299
    3. '(True' → logprob: -5.089353084564209
    4. '('' → logprob: -5.214353084564209
    5. '"' → logprob: -7.714353084564209
    6. '1' → logprob: -7.964353084564209
    7. '("+' → logprob: -8.96435260772705
    8. 'True' → logprob: -9.21435260772705
    9. '(+' → logprob: -9.33935260772705
    10. 'return' → logprob: -10.21435260772705

Token 171: 'COUN' (ID: 107888)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0452941432595253
    2. ' ' → logprob: -3.1702940464019775
    3. ' return' → logprob: -6.920294284820557
    4. '2' → logprob: -7.795294284820557
    5. 'return' → logprob: -8.795293807983398
    6. '')' → logprob: -8.795293807983398
    7. ' +' → logprob: -9.295293807983398
    8. '0' → logprob: -9.420293807983398
    9. ''' → logprob: -9.670293807983398
    10. '3' → logprob: -9.920293807983398

Token 172: 'TER' (ID: 6147)
  Prédit: 'TER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TER' → logprob: -0.016050910577178
    2. 'ter' → logprob: -4.641050815582275
    3. 'T' → logprob: -6.266050815582275
    4. '```' → logprob: -6.516050815582275
    5. '
' → logprob: -7.391050815582275
    6. '   ' → logprob: -7.766050815582275
    7. 'TE' → logprob: -7.766050815582275
    8. 't' → logprob: -8.266051292419434
    9. '``' → logprob: -8.766051292419434
    10. '       ' → logprob: -9.516051292419434

Token 173: '_CLOCK' (ID: 102378)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.36564797163009644
    2. '_CLOCK' → logprob: -1.2406480312347412
    3. 'clock' → logprob: -4.615647792816162
    4. ' CLOCK' → logprob: -5.990647792816162
    5. '_clock' → logprob: -6.240647792816162
    6. '-clock' → logprob: -7.115647792816162
    7. '')' → logprob: -7.115647792816162
    8. ')' → logprob: -7.240647792816162
    9. ' clockwise' → logprob: -9.49064826965332
    10. '-' → logprob: -9.99064826965332

Token 174: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -0.00046570412814617157
    2. 'wise' → logprob: -8.500465393066406
    3. '```' → logprob: -9.125465393066406
    4. ')' → logprob: -9.625465393066406
    5. '')' → logprob: -9.750465393066406
    6. 'Wise' → logprob: -10.750465393066406
    7. '`)' → logprob: -12.750465393066406
    8. ' wise' → logprob: -14.000465393066406
    9. ''''' → logprob: -14.375465393066406
    10. '   ' → logprob: -14.500465393066406

Token 175: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.06880076229572296
    2. ' ')' → logprob: -2.818800687789917
    3. ' return' → logprob: -6.318800926208496
    4. ')' → logprob: -6.568800926208496
    5. ' ')
' → logprob: -7.568800926208496
    6. '')
' → logprob: -7.818800926208496
    7. ''' → logprob: -7.818800926208496
    8. '()' → logprob: -8.068800926208496
    9. '('' → logprob: -8.068800926208496
    10. ' )' → logprob: -8.568800926208496

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01916554942727089
    2. ' return' → logprob: -4.144165515899658
    3. '<|end|>' → logprob: -6.644165515899658
    4. '           ' → logprob: -7.269165515899658
    5. ' ' → logprob: -7.394165515899658
    6. '   ' → logprob: -9.269165992736816
    7. 'return' → logprob: -9.519165992736816
    8. ',' → logprob: -10.019165992736816
    9. ':return' → logprob: -10.144165992736816
    10. '(' → logprob: -10.519165992736816

Token 177: ' flag' (ID: 9641)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06628523766994476
    2. ' return' → logprob: -3.3162851333618164
    3. '       ' → logprob: -3.6912851333618164
    4. '1' → logprob: -5.941285133361816
    5. '0' → logprob: -9.191285133361816
    6. '           ' → logprob: -9.441285133361816
    7. '3' → logprob: -10.441285133361816
    8. '2' → logprob: -11.066285133361816
    9. ':return' → logprob: -11.691285133361816
    10. '   ' → logprob: -11.691285133361816

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892746478319168
    2. '=' → logprob: -2.578927516937256
    3. ' ' → logprob: -10.328927040100098
    4. 's' → logprob: -13.078927040100098
    5. ':' → logprob: -14.703927040100098
    6. ',' → logprob: -14.828927040100098
    7. '1' → logprob: -14.953927040100098
    8. '>' → logprob: -15.203927040100098
    9. ')' → logprob: -15.703927040100098
    10. ' +=' → logprob: -15.703927040100098

Token 179: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011151456274092197
    2. ' ' → logprob: -4.511151313781738
    3. '+' → logprob: -9.636151313781738
    4. ' +' → logprob: -11.136151313781738
    5. '0' → logprob: -11.261151313781738
    6. '"' → logprob: -12.761151313781738
    7. '2' → logprob: -13.261151313781738
    8. '  ' → logprob: -13.386151313781738
    9. '   ' → logprob: -13.761151313781738
    10. '`' → logprob: -14.948651313781738

Token 180: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0029361024498939514
    2. ' ' → logprob: -6.002935886383057
    3. '+' → logprob: -7.752935886383057
    4. ' +' → logprob: -11.252936363220215
    5. '0' → logprob: -11.752936363220215
    6. '2' → logprob: -12.752936363220215
    7. '   ' → logprob: -13.752936363220215
    8. '  ' → logprob: -13.877936363220215
    9. '"' → logprob: -14.002936363220215
    10. 'True' → logprob: -14.002936363220215

Token 181: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 183: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.008721405640244484
    2. ' elif' → logprob: -5.133721351623535
    3. '   ' → logprob: -6.133721351623535
    4. '<|end|>' → logprob: -7.633721351623535
    5. '	elif' → logprob: -9.758721351623535
    6. 'else' → logprob: -10.008721351623535
    7. '  ' → logprob: -11.258721351623535
    8. ')' → logprob: -12.258721351623535
    9. ' else' → logprob: -12.508721351623535
    10. '#elif' → logprob: -13.133721351623535

Token 184: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.7013862729072571
    2. 'cross' → logprob: -0.7013862729072571
    3. 'abs' → logprob: -5.201386451721191
    4. ' abs' → logprob: -5.951386451721191
    5. '-' → logprob: -10.576386451721191
    6. '-cross' → logprob: -10.701386451721191
    7. ' ' → logprob: -11.201386451721191
    8. ' -' → logprob: -11.701386451721191
    9. '   ' → logprob: -12.326386451721191
    10. '-c' → logprob: -12.763886451721191

Token 185: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.875003814697266
    3. ' (' → logprob: -14.250003814697266
    4. '(b' → logprob: -15.625003814697266
    5. 'a' → logprob: -17.500003814697266
    6. '(A' → logprob: -19.000003814697266
    7. ' ' → logprob: -19.125003814697266
    8. '(
' → logprob: -19.875003814697266
    9. ' a' → logprob: -20.875003814697266
    10. '(-' → logprob: -21.000003814697266

Token 186: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004027583636343479
    2. ',' → logprob: -6.004027366638184
    3. '(b' → logprob: -6.879027366638184
    4. '(' → logprob: -7.879027366638184
    5. ')' → logprob: -9.379027366638184
    6. ' (' → logprob: -11.129027366638184
    7. '<' → logprob: -11.129027366638184
    8. '   ' → logprob: -12.004027366638184
    9. ' <' → logprob: -12.254027366638184
    10. ' ' → logprob: -12.754027366638184

Token 187: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0013263145228847861
    2. ' b' → logprob: -6.626326084136963
    3. ' ' → logprob: -15.251326560974121
    4. ')b' → logprob: -16.626325607299805
    5. '	b' → logprob: -16.876325607299805
    6. '-b' → logprob: -17.751325607299805
    7. '<|end|>' → logprob: -18.001325607299805
    8. ')' → logprob: -18.126325607299805
    9. '-' → logprob: -18.563825607299805
    10. '0' → logprob: -18.688825607299805

Token 188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04047706350684166
    2. ' <' → logprob: -3.7904770374298096
    3. ')<' → logprob: -4.665477275848389
    4. '<' → logprob: -4.915477275848389
    5. ' )' → logprob: -8.41547679901123
    6. '()' → logprob: -9.91547679901123
    7. '()<' → logprob: -10.91547679901123
    8. '   ' → logprob: -11.04047679901123
    9. ' ' → logprob: -11.41547679901123
    10. ',' → logprob: -12.41547679901123

Token 189: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31333115696907043
    2. '<' → logprob: -1.313331127166748
    3. '()<' → logprob: -10.563331604003906
    4. ' ' → logprob: -10.813331604003906
    5. ')' → logprob: -12.438331604003906
    6. '<E' → logprob: -12.563331604003906
    7. ')<' → logprob: -12.563331604003906
    8. '<-' → logprob: -12.813331604003906
    9. '()' → logprob: -13.313331604003906
    10. '>' → logprob: -13.563331604003906

Token 190: ' -' (ID: 533)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.0707562118768692
    2. '-' → logprob: -3.070756196975708
    3. ' -' → logprob: -3.820756196975708
    4. '-A' → logprob: -11.820755958557129
    5. '-US' → logprob: -13.570755958557129
    6. '-P' → logprob: -14.070755958557129
    7. '-IP' → logprob: -14.070755958557129
    8. '-U' → logprob: -14.195755958557129
    9. '-Q' → logprob: -14.570755958557129
    10. '-END' → logprob: -15.445755958557129

Token 191: '1' (ID: 16)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.005258779972791672
    2. ' EPS' → logprob: -5.255258560180664
    3. 'EP' → logprob: -10.880258560180664
    4. 'ES' → logprob: -12.755258560180664
    5. 'ESP' → logprob: -13.505258560180664
    6. 'EOS' → logprob: -14.380258560180664
    7. 'EPT' → logprob: -14.630258560180664
    8. '1' → logprob: -15.130258560180664
    9. ' ' → logprob: -16.130258560180664
    10. 'EEP' → logprob: -16.380258560180664

Token 192: ' *' (ID: 425)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.07014882564544678
    2. ' EPS' → logprob: -2.6951489448547363
    3. 'E' → logprob: -9.570148468017578
    4. 'EP' → logprob: -9.820148468017578
    5. '*' → logprob: -10.320148468017578
    6. '1' → logprob: -11.320148468017578
    7. 'ES' → logprob: -11.445148468017578
    8. '0' → logprob: -11.570148468017578
    9. ' *' → logprob: -12.070148468017578
    10. ' ' → logprob: -12.195148468017578

Token 193: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.00038455575122497976
    2. ' EPS' → logprob: -7.875384330749512
    3. 'EP' → logprob: -13.125384330749512
    4. 'ESP' → logprob: -13.500384330749512
    5. 'ES' → logprob: -14.375384330749512
    6. 'EOS' → logprob: -15.500384330749512
    7. 'EPT' → logprob: -16.125385284423828
    8. 'ESS' → logprob: -17.875385284423828
    9. 'EEP' → logprob: -18.000385284423828
    10. ' ' → logprob: -18.000385284423828

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012744600884616375
    2. ':
' → logprob: -4.387744426727295
    3. ' :' → logprob: -9.262744903564453
    4. '   ' → logprob: -9.762744903564453
    5. '       ' → logprob: -10.137744903564453
    6. '<|end|>' → logprob: -11.637744903564453
    7. ' :
' → logprob: -11.887744903564453
    8. '=' → logprob: -11.887744903564453
    9. '):
' → logprob: -12.012744903564453
    10. ',' → logprob: -12.512744903564453

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0987640917301178
    2. '0' → logprob: -3.098764181137085
    3. '=' → logprob: -4.098763942718506
    4. ' ' → logprob: -4.473763942718506
    5. '   ' → logprob: -4.598763942718506
    6. '<|end|>' → logprob: -5.723763942718506
    7. ' =' → logprob: -6.223763942718506
    8. ',' → logprob: -6.973763942718506
    9. '    ' → logprob: -7.098763942718506
    10. '2' → logprob: -7.223763942718506

Token 196: ' #' (ID: 1069)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18027544021606445
    2. 'flag' → logprob: -2.4302754402160645
    3. ' -' → logprob: -2.6802754402160645
    4. ' flag' → logprob: -4.9302754402160645
    5. '   ' → logprob: -7.0552754402160645
    6. '       ' → logprob: -8.680274963378906
    7. '	flag' → logprob: -9.430274963378906
    8. '	' → logprob: -11.055274963378906
    9. ' ' → logprob: -11.305274963378906
    10. '0' → logprob: -11.430274963378906

Token 197: ' print' (ID: 2123)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.014186662621796131
    2. ' flag' → logprob: -4.264186859130859
    3. '   ' → logprob: -11.01418685913086
    4. '	flag' → logprob: -12.63918685913086
    5. '  ' → logprob: -13.63918685913086
    6. ' ' → logprob: -13.76418685913086
    7. '(flag' → logprob: -14.88918685913086
    8. '    ' → logprob: -15.13918685913086
    9. '
' → logprob: -15.88918685913086
    10. '.flag' → logprob: -16.26418685913086

Token 198: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.011917894706130028
    2. '(-' → logprob: -4.511918067932129
    3. '('-' → logprob: -7.511918067932129
    4. '(' → logprob: -8.136918067932129
    5. '=' → logprob: -11.761918067932129
    6. ' ('' → logprob: -12.011918067932129
    7. '('='' → logprob: -12.886918067932129
    8. '='' → logprob: -13.261918067932129
    9. '-' → logprob: -13.261918067932129
    10. 'flag' → logprob: -13.511918067932129

Token 199: 'CLOCK' (ID: 181115)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -4.1318875446449965e-05
    2. ' -' → logprob: -10.250041007995605
    3. '2' → logprob: -12.250041007995605
    4. '0' → logprob: -14.875041007995605
    5. ' ' → logprob: -15.500041007995605
    6. '1' → logprob: -15.750041007995605
    7. '=-' → logprob: -16.500041961669922
    8. '   ' → logprob: -16.750041961669922
    9. '
' → logprob: -16.875041961669922
    10. '=' → logprob: -16.875041961669922

Token 200: 'WISE' (ID: 38559)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07592470943927765
    2. 'wise' → logprob: -3.3259246349334717
    3. ' -' → logprob: -3.8259246349334717
    4. ')' → logprob: -4.825924873352051
    5. '-wise' → logprob: -5.450924873352051
    6. ')-' → logprob: -7.200924873352051
    7. 'flag' → logprob: -7.325924873352051
    8. '_flag' → logprob: -8.20092487335205
    9. '<|end|>' → logprob: -8.57592487335205
    10. ' ' → logprob: -8.70092487335205

Token 201: '')
' (ID: 2515)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.309843510389328
    2. '')
' → logprob: -1.5598435401916504
    3. '')' → logprob: -3.1848435401916504
    4. '   ' → logprob: -4.68484354019165
    5. '       ' → logprob: -6.68484354019165
    6. '<|end|>' → logprob: -6.93484354019165
    7. '=' → logprob: -7.05984354019165
    8. ' ')
' → logprob: -7.30984354019165
    9. '1' → logprob: -8.309843063354492
    10. ''):' → logprob: -8.434843063354492

Token 202: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09561052173376083
    2. ' =' → logprob: -2.9706106185913086
    3. '   ' → logprob: -3.4706106185913086
    4. '       ' → logprob: -5.095610618591309
    5. '<|end|>' → logprob: -6.595610618591309
    6. ' ' → logprob: -8.470610618591309
    7. 'flag' → logprob: -8.595610618591309
    8. ')' → logprob: -8.595610618591309
    9. ' flag' → logprob: -8.720610618591309
    10. ',' → logprob: -8.970610618591309

Token 203: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.012028264813125134
    2. ' flag' → logprob: -4.512028217315674
    3. '-' → logprob: -7.637028217315674
    4. '   ' → logprob: -8.262028694152832
    5. '       ' → logprob: -9.387028694152832
    6. '0' → logprob: -9.762028694152832
    7. '	flag' → logprob: -9.762028694152832
    8. ' -' → logprob: -10.512028694152832
    9. '  ' → logprob: -12.637028694152832
    10. ' ' → logprob: -13.262028694152832

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759621858596802
    2. ' =' → logprob: -0.8259621858596802
    3. '=-' → logprob: -10.70096206665039
    4. ' ' → logprob: -15.70096206665039
    5. '   ' → logprob: -16.20096206665039
    6. '＝' → logprob: -17.70096206665039
    7. '=(-' → logprob: -18.07596206665039
    8. '-' → logprob: -18.45096206665039
    9. ',' → logprob: -18.57596206665039
    10. '=
' → logprob: -19.07596206665039

Token 205: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006279678200371563
    2. ' -' → logprob: -7.3756279945373535
    3. '2' → logprob: -14.375627517700195
    4. ' ' → logprob: -14.625627517700195
    5. '0' → logprob: -15.500627517700195
    6. '   ' → logprob: -16.000627517700195
    7. '−' → logprob: -17.125627517700195
    8. '  ' → logprob: -17.750627517700195
    9. '	' → logprob: -17.750627517700195
    10. '-
' → logprob: -18.000627517700195

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -16.875001907348633
    4. '2' → logprob: -18.250001907348633
    5. '１' → logprob: -19.562501907348633
    6. '  ' → logprob: -19.750001907348633
    7. '   ' → logprob: -19.812501907348633
    8. '0' → logprob: -20.062501907348633
    9. '۱' → logprob: -20.312501907348633
    10. '-' → logprob: -20.312501907348633

Token 207: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6368069052696228
    2. '<|end|>' → logprob: -0.7618069052696228
    3. 'elif' → logprob: -6.761806964874268
    4. ' else' → logprob: -7.011806964874268
    5. 'else' → logprob: -7.136806964874268
    6. '<|end|>' → logprob: -7.511806964874268
    7. ' elif' → logprob: -8.01180648803711
    8. ')' → logprob: -8.76180648803711
    9. '	elif' → logprob: -9.01180648803711
    10. '  ' → logprob: -9.88680648803711

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01619449071586132
    2. 'else' → logprob: -4.3911943435668945
    3. ' else' → logprob: -6.3911943435668945
    4. '<|end|>' → logprob: -6.7661943435668945
    5. 'elif' → logprob: -7.2661943435668945
    6. ' elif' → logprob: -10.391194343566895
    7. ')' → logprob: -10.391194343566895
    8. '	else' → logprob: -10.516194343566895
    9. '	elif' → logprob: -10.766194343566895
    10. '```' → logprob: -11.266194343566895

Token 209: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.26743683218955994
    2. '   ' → logprob: -1.5174368619918823
    3. ' else' → logprob: -4.517436981201172
    4. 'elif' (adapté à ' elif') → logprob: -5.517436981201172
    5. '	else' → logprob: -8.517436981201172
    6. '<|end|>' → logprob: -8.767436981201172
    7. '	elif' → logprob: -10.267436981201172
    8. ' elif' → logprob: -10.392436981201172
    9. '_else' → logprob: -11.142436981201172
    10. '```' → logprob: -11.892436981201172

Token 210: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.9313807487487793
    2. 'dot' → logprob: -1.0563807487487793
    3. 'abs' → logprob: -1.5563807487487793
    4. ' abs' → logprob: -3.0563807487487793
    5. '(dot' → logprob: -8.181381225585938
    6. ' ' → logprob: -11.306381225585938
    7. '0' → logprob: -11.931381225585938
    8. '(abs' → logprob: -12.056381225585938
    9. '   ' → logprob: -12.931381225585938
    10. 'fabs' → logprob: -13.431381225585938

Token 211: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. 'a' → logprob: -16.125001907348633
    4. ' (' → logprob: -16.375001907348633
    5. '((' → logprob: -16.375001907348633
    6. '<|end|>' → logprob: -17.875001907348633
    7. '(p' → logprob: -18.375001907348633
    8. '(A' → logprob: -18.375001907348633
    9. '(b' → logprob: -19.000001907348633
    10. '(
' → logprob: -19.125001907348633

Token 212: ',' (ID: 11)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00138118676841259
    2. ',' → logprob: -6.6263813972473145
    3. '(' → logprob: -10.501380920410156
    4. ',a' → logprob: -11.251380920410156
    5. ' (' → logprob: -12.501380920410156
    6. '(b' → logprob: -12.876380920410156
    7. ')(' → logprob: -13.126380920410156
    8. ')' → logprob: -13.251380920410156
    9. ' ,' → logprob: -13.626380920410156
    10. '<|end|>' → logprob: -13.751380920410156

Token 213: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003662020608317107
    2. 'b' → logprob: -8.0003662109375
    3. ' a' → logprob: -10.7503662109375
    4. '(a' → logprob: -11.6253662109375
    5. ',a' → logprob: -16.1253662109375
    6. '	a' → logprob: -16.3753662109375
    7. '[a' → logprob: -16.3753662109375
    8. '(b' → logprob: -17.3753662109375
    9. ')a' → logprob: -17.3753662109375
    10. ' b' → logprob: -17.5003662109375

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03489796444773674
    2. ')<' → logprob: -3.784898042678833
    3. '<' → logprob: -4.784897804260254
    4. ' <' → logprob: -6.409897804260254
    5. '()<' → logprob: -7.284897804260254
    6. ')<=' → logprob: -8.034897804260254
    7. ' )' → logprob: -8.784897804260254
    8. '<=' → logprob: -9.034897804260254
    9. '>' → logprob: -9.659897804260254
    10. ')>' → logprob: -9.659897804260254

Token 215: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.05127289146184921
    2. ' <' → logprob: -3.0512728691101074
    3. '>' → logprob: -6.676272869110107
    4. '()<' → logprob: -6.676272869110107
    5. ')<' → logprob: -10.051273345947266
    6. ' >' → logprob: -10.176273345947266
    7. '>=' → logprob: -10.676273345947266
    8. ')' → logprob: -10.801273345947266
    9. ' ' → logprob: -12.051273345947266
    10. '(' → logprob: -12.551273345947266

Token 216: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09311645478010178
    2. '-E' → logprob: -2.468116521835327
    3. '-P' → logprob: -5.968116283416748
    4. ' -' → logprob: -6.718116283416748
    5. '-A' → logprob: -9.718116760253906
    6. '0' → logprob: -10.093116760253906
    7. '-c' → logprob: -10.343116760253906
    8. '-e' → logprob: -10.718116760253906
    9. '-I' → logprob: -11.093116760253906
    10. '-python' → logprob: -11.218116760253906

Token 217: '1' (ID: 16)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.00021307668066583574
    2. ' EPS' → logprob: -8.750212669372559
    3. '1' → logprob: -10.125212669372559
    4. 'EP' → logprob: -11.875212669372559
    5. 'ESP' → logprob: -12.500212669372559
    6. 'ES' → logprob: -13.750212669372559
    7. '0' → logprob: -13.875212669372559
    8. ' ' → logprob: -14.500212669372559
    9. 'EPT' → logprob: -14.500212669372559
    10. 'eps' → logprob: -15.625212669372559

Token 218: ' *' (ID: 425)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.048857931047677994
    2. ' EPS' → logprob: -3.0488579273223877
    3. '1' → logprob: -9.298857688903809
    4. '0' → logprob: -10.048857688903809
    5. '*' → logprob: -10.923857688903809
    6. '   ' → logprob: -10.923857688903809
    7. ' ' → logprob: -11.173857688903809
    8. ' ' → logprob: -11.173857688903809
    9. 'ESP' → logprob: -11.173857688903809
    10. 'EP' → logprob: -11.798857688903809

Token 219: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0009284949628636241
    2. ' EPS' → logprob: -7.0009284019470215
    3. 'EP' → logprob: -11.87592887878418
    4. 'ESP' → logprob: -12.50092887878418
    5. '1' → logprob: -13.25092887878418
    6. '0' → logprob: -13.37592887878418
    7. 'ES' → logprob: -13.62592887878418
    8. ' ' → logprob: -13.75092887878418
    9. 'eps' → logprob: -15.62592887878418
    10. 'EPT' → logprob: -15.62592887878418

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010124349035322666
    2. ':
' → logprob: -4.635124206542969
    3. ' :' → logprob: -9.260124206542969
    4. '<|end|>' → logprob: -9.385124206542969
    5. '):' → logprob: -9.760124206542969
    6. '):
' → logprob: -10.260124206542969
    7. '   ' → logprob: -10.760124206542969
    8. ',' → logprob: -11.260124206542969
    9. ':return' → logprob: -11.260124206542969
    10. ' :
' → logprob: -11.635124206542969

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08973974734544754
    2. '0' → logprob: -2.8397397994995117
    3. ':' → logprob: -4.964739799499512
    4. ' ' → logprob: -5.089739799499512
    5. '   ' → logprob: -5.339739799499512
    6. '=' → logprob: -5.589739799499512
    7. '1' → logprob: -5.964739799499512
    8. '<|end|>' → logprob: -6.964739799499512
    9. ' =' → logprob: -7.089739799499512
    10. ',' → logprob: -7.464739799499512

Token 222: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43986085057258606
    2. '-' → logprob: -1.9398608207702637
    3. '       ' → logprob: -2.4398608207702637
    4. ' ' → logprob: -2.9398608207702637
    5. ' -' → logprob: -3.1898608207702637
    6. '   ' → logprob: -4.439860820770264
    7. '1' → logprob: -5.439860820770264
    8. 'return' → logprob: -5.439860820770264
    9. 'flag' → logprob: -5.564860820770264
    10. ' return' → logprob: -5.689860820770264

Token 223: ' print' (ID: 2123)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.42903679609298706
    2. '-' → logprob: -1.4290368556976318
    3. '0' → logprob: -2.304036855697632
    4. ' ' → logprob: -5.304036617279053
    5. 'return' → logprob: -6.179036617279053
    6. ' -' → logprob: -6.804036617279053
    7. 'flag' → logprob: -7.679036617279053
    8. '2' → logprob: -8.054037094116211
    9. 'print' → logprob: -8.679037094116211
    10. '   ' → logprob: -9.429037094116211

Token 224: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11261941492557526
    2. '('' → logprob: -2.612619400024414
    3. '0' → logprob: -3.737619400024414
    4. '(-' → logprob: -4.987619400024414
    5. ' (' → logprob: -6.362619400024414
    6. ' ' → logprob: -7.862619400024414
    7. '=' → logprob: -8.987619400024414
    8. '-' → logprob: -9.362619400024414
    9. ' ('' → logprob: -9.487619400024414
    10. ''' → logprob: -9.987619400024414

Token 225: 'ONLINE' (ID: 193356)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005171707598492503
    2. '1' → logprob: -7.87551736831665
    3. '-' → logprob: -9.000516891479492
    4. ' ' → logprob: -11.750516891479492
    5. '0' → logprob: -12.250516891479492
    6. '180' → logprob: -14.750516891479492
    7. '
' → logprob: -15.125516891479492
    8. ' -' → logprob: -16.125516891479492
    9. 'flag' → logprob: -16.750516891479492
    10. '--' → logprob: -17.125516891479492

Token 226: '_BACK' (ID: 48735)
  Prédit: 'BACK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BACK' → logprob: -0.02653098851442337
    2. '_BACK' → logprob: -3.6515309810638428
    3. 'back' → logprob: -9.026531219482422
    4. ' BACK' → logprob: -10.401531219482422
    5. '```' → logprob: -10.901531219482422
    6. '_B' → logprob: -11.276531219482422
    7. 'B' → logprob: -11.276531219482422
    8. '_back' → logprob: -12.026531219482422
    9. '-back' → logprob: -12.651531219482422
    10. 'BE' → logprob: -12.651531219482422

Token 227: '')
' (ID: 2515)
  Prédit: 'ward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.5098512768745422
    2. 'WARD' → logprob: -1.0098512172698975
    3. '')' → logprob: -3.3848512172698975
    4. 'word' → logprob: -7.259851455688477
    5. 'WORD' → logprob: -8.134851455688477
    6. '')
' → logprob: -9.009851455688477
    7. 'wards' → logprob: -10.009851455688477
    8. 'Ward' → logprob: -10.509851455688477
    9. ' ward' → logprob: -10.634851455688477
    10. '1' → logprob: -11.634851455688477

Token 228: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.391970694065094
    2. ' =' → logprob: -1.5169706344604492
    3. '       ' → logprob: -3.141970634460449
    4. '   ' → logprob: -3.266970634460449
    5. '1' → logprob: -5.016970634460449
    6. '0' → logprob: -5.516970634460449
    7. '=-' → logprob: -5.641970634460449
    8. ' ' → logprob: -6.266970634460449
    9. ':' → logprob: -6.516970634460449
    10. ' -' → logprob: -6.641970634460449

Token 229: ' flag' (ID: 9641)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3383994698524475
    2. 'return' → logprob: -1.3383994102478027
    3. 'flag' (adapté à ' flag') → logprob: -4.838399410247803
    4. ' return' → logprob: -5.213399410247803
    5. '1' → logprob: -5.588399410247803
    6. ' -' → logprob: -5.838399410247803
    7. '       ' → logprob: -5.963399410247803
    8. '           ' → logprob: -7.088399410247803
    9. '   ' → logprob: -7.463399410247803
    10. '0' → logprob: -7.963399410247803

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326746940612793
    2. ' =' → logprob: -1.313267469406128
    3. '=-' → logprob: -12.313267707824707
    4. '=
' → logprob: -14.438267707824707
    5. ' =
' → logprob: -15.188267707824707
    6. ' ' → logprob: -16.18826675415039
    7. ')' → logprob: -16.56326675415039
    8. ',' → logprob: -16.68826675415039
    9. '＝' → logprob: -17.06326675415039
    10. ' =)' → logprob: -17.68826675415039

Token 231: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015598179015796632
    2. ' ' → logprob: -9.12515640258789
    3. '1' → logprob: -10.25015640258789
    4. '-' → logprob: -11.37515640258789
    5. ' -' → logprob: -16.00015640258789
    6. '0' → logprob: -17.00015640258789
    7. '  ' → logprob: -18.25015640258789
    8. '   ' → logprob: -18.37515640258789
    9. '۲' → logprob: -18.87515640258789
    10. '```' → logprob: -19.12515640258789

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. '-' → logprob: -10.875019073486328
    3. ' ' → logprob: -14.500019073486328
    4. '２' → logprob: -18.125019073486328
    5. '1' → logprob: -18.500019073486328
    6. '0' → logprob: -19.000019073486328
    7. ' -' → logprob: -20.000019073486328
    8. '   ' → logprob: -21.125019073486328
    9. '۲' → logprob: -21.375019073486328
    10. '```' → logprob: -21.875019073486328

Token 233: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009594622533768415
    2. 'elif' → logprob: -7.375959396362305
    3. ' elif' → logprob: -9.125959396362305
    4. ')' → logprob: -9.500959396362305
    5. '<|end|>' → logprob: -9.500959396362305
    6. 'else' → logprob: -11.250959396362305
    7. ' else' → logprob: -11.625959396362305
    8. '	elif' → logprob: -11.625959396362305
    9. '```' → logprob: -11.750959396362305
    10. 'return' → logprob: -11.750959396362305

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016341203590855002
    2. 'elif' → logprob: -6.626634120941162
    3. ')' → logprob: -9.001633644104004
    4. 'else' → logprob: -9.626633644104004
    5. '```' → logprob: -10.126633644104004
    6. ' elif' → logprob: -10.376633644104004
    7. '<|end|>' → logprob: -11.751633644104004
    8. ' else' → logprob: -11.876633644104004
    9. '	elif' → logprob: -11.876633644104004
    10. 'return' → logprob: -12.001633644104004

Token 235: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5291825532913208
    2. 'elif' (adapté à ' elif') → logprob: -0.9041825532913208
    3. ' elif' → logprob: -5.279182434082031
    4. 'else' → logprob: -7.654182434082031
    5. '```' → logprob: -9.154182434082031
    6. '2' → logprob: -9.404182434082031
    7. ')' → logprob: -9.529182434082031
    8. '	elif' → logprob: -9.779182434082031
    9. '=' → logprob: -9.904182434082031
    10. '  ' → logprob: -10.779182434082031

Token 236: ' abs' (ID: 8443)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.13200178742408752
    2. 'abs' → logprob: -2.5070018768310547
    3. ' dot' → logprob: -3.2570018768310547
    4. ' abs' → logprob: -6.257001876831055
    5. '(dot' → logprob: -6.507001876831055
    6. 'cross' → logprob: -9.382001876831055
    7. 'a' → logprob: -10.132001876831055
    8. '(abs' → logprob: -10.632001876831055
    9. 'dp' → logprob: -11.257001876831055
    10. 'EPS' → logprob: -11.507001876831055

Token 237: '(a' (ID: 6271)
  Prédit: '(dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -1.3902033970225602e-05
    2. 'dot' → logprob: -11.250014305114746
    3. '(' → logprob: -14.500014305114746
    4. '((' → logprob: -16.25001335144043
    5. '(abs' → logprob: -16.75001335144043
    6. '(a' → logprob: -17.00001335144043
    7. '.dot' → logprob: -17.37501335144043
    8. ' dot' → logprob: -17.75001335144043
    9. '(d' → logprob: -17.75001335144043
    10. '1' → logprob: -18.00001335144043

Token 238: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042673349380493164
    2. '-' → logprob: -4.417673110961914
    3. 'a' → logprob: -4.542673110961914
    4. '*' → logprob: -5.917673110961914
    5. '<|end|>' → logprob: -6.042673110961914
    6. ' ' → logprob: -6.792673110961914
    7. ')**' → logprob: -6.917673110961914
    8. '*a' → logprob: -7.292673110961914
    9. ' -' → logprob: -7.292673110961914
    10. '(a' → logprob: -7.292673110961914

Token 239: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4849718511104584
    2. '<' → logprob: -1.6099718809127808
    3. ' <=' → logprob: -2.109971761703491
    4. '<=' → logprob: -3.234971761703491
    5. ' -' → logprob: -4.85997200012207
    6. '**' → logprob: -5.85997200012207
    7. '()<' → logprob: -5.85997200012207
    8. ' ' → logprob: -5.98497200012207
    9. '-' → logprob: -6.48497200012207
    10. ')<=' → logprob: -6.48497200012207

Token 240: ' abs' (ID: 8443)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.00032926726271398365
    2. ' EPS' → logprob: -8.25032901763916
    3. '1' → logprob: -9.87532901763916
    4. ' ' → logprob: -12.37532901763916
    5. 'abs' → logprob: -12.62532901763916
    6. 'eps' → logprob: -13.12532901763916
    7. 'E' → logprob: -13.25032901763916
    8. '=' → logprob: -13.25032901763916
    9. '   ' → logprob: -13.50032901763916
    10. '  ' → logprob: -14.37532901763916

Token 241: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.013155407272279263
    2. 'EPS' → logprob: -4.763155460357666
    3. 'b' → logprob: -5.638155460357666
    4. ' EPS' → logprob: -7.388155460357666
    5. '(E' → logprob: -9.513154983520508
    6. '(' → logprob: -9.513154983520508
    7. ' b' → logprob: -9.763154983520508
    8. '(p' → logprob: -10.138154983520508
    9. '=' → logprob: -10.763154983520508
    10. '=b' → logprob: -10.888154983520508

Token 242: '):
' (ID: 1883)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.010912537574768
    2. ' -' → logprob: -1.135912537574768
    3. '+' → logprob: -1.260912537574768
    4. '-' → logprob: -4.0109124183654785
    5. ')' → logprob: -4.6359124183654785
    6. '   ' → logprob: -6.8859124183654785
    7. 'EPS' → logprob: -7.0109124183654785
    8. ' ' → logprob: -7.6359124183654785
    9. ' EPS' → logprob: -7.8859124183654785
    10. '*' → logprob: -8.385912895202637

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016622049733996391
    2. '1' → logprob: -7.001662254333496
    3. '3' → logprob: -8.251662254333496
    4. ' ' → logprob: -8.501662254333496
    5. '2' → logprob: -9.001662254333496
    6. '=' → logprob: -10.001662254333496
    7. '   ' → logprob: -10.501662254333496
    8. '0' → logprob: -10.626662254333496
    9. '4' → logprob: -11.501662254333496
    10. ' =' → logprob: -11.876662254333496

Token 244: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2754614353179932
    2. '       ' → logprob: -1.5254614353179932
    3. ' ' → logprob: -1.9004614353179932
    4. '1' → logprob: -2.150461435317993
    5. ' flag' → logprob: -2.400461435317993
    6. '2' → logprob: -2.775461435317993
    7. 'flag' → logprob: -3.775461435317993
    8. '0' → logprob: -4.150461196899414
    9. '3' → logprob: -4.275461196899414
    10. '4' → logprob: -4.400461196899414

Token 245: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4843999147415161
    2. 'flag' → logprob: -1.7343999147415161
    3. '1' → logprob: -1.9843999147415161
    4. '3' → logprob: -2.1093997955322266
    5. ' flag' → logprob: -2.3593997955322266
    6. '   ' → logprob: -2.6093997955322266
    7. ' ' → logprob: -2.8593997955322266
    8. '=' → logprob: -3.1093997955322266
    9. '2' → logprob: -4.484399795532227
    10. ' print' → logprob: -4.609399795532227

Token 246: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0006226073601283133
    2. '(' → logprob: -7.500622749328613
    3. ' ('' → logprob: -10.000622749328613
    4. ''' → logprob: -10.875622749328613
    5. '("' → logprob: -13.500622749328613
    6. ' (' → logprob: -14.500622749328613
    7. ' ' → logprob: -14.500622749328613
    8. '(('' → logprob: -14.500622749328613
    9. '   ' → logprob: -14.750622749328613
    10. '(
' → logprob: -14.875622749328613

Token 247: 'ONLINE' (ID: 193356)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5164580941200256
    2. '1' → logprob: -1.3914580345153809
    3. '0' → logprob: -3.016458034515381
    4. 'flag' → logprob: -3.016458034515381
    5. 'ONLINE' → logprob: -3.641458034515381
    6. '2' → logprob: -4.266458034515381
    7. '-' → logprob: -5.391458034515381
    8. '4' → logprob: -5.891458034515381
    9. '=' → logprob: -6.391458034515381
    10. ''' → logprob: -6.516458034515381

Token 248: '_FRONT' (ID: 130295)
  Prédit: '_FRONT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FRONT' → logprob: -0.22961434721946716
    2. '_BACK' → logprob: -2.2296142578125
    3. '_FORWARD' → logprob: -2.6046142578125
    4. 'BACK' → logprob: -4.4796142578125
    5. 'FR' → logprob: -4.8546142578125
    6. '_front' → logprob: -6.6046142578125
    7. '```' → logprob: -7.3546142578125
    8. 'FOR' → logprob: -7.8546142578125
    9. ' FRONT' → logprob: -7.8546142578125
    10. 'front' → logprob: -7.8546142578125

Token 249: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.4516512453556061
    2. '   ' → logprob: -1.8266512155532837
    3. '')
' → logprob: -1.9516512155532837
    4. '3' → logprob: -3.5766513347625732
    5. '       ' → logprob: -4.326651096343994
    6. ''):
' → logprob: -4.701651096343994
    7. '1' → logprob: -5.326651096343994
    8. 'flag' → logprob: -6.701651096343994
    9. ')' → logprob: -7.076651096343994
    10. '2' → logprob: -7.326651096343994

Token 250: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5940389037132263
    2. '       ' → logprob: -0.8440389037132263
    3. '2' → logprob: -5.094038963317871
    4. '4' → logprob: -6.094038963317871
    5. ' ' → logprob: -6.219038963317871
    6. '1' → logprob: -6.344038963317871
    7. '=' → logprob: -6.594038963317871
    8. '3' → logprob: -7.469038963317871
    9. '```' → logprob: -7.719038963317871
    10. ' =' → logprob: -7.844038963317871

Token 251: ' flag' (ID: 9641)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9302932620048523
    2. '-' → logprob: -1.430293321609497
    3. 'flag' (adapté à ' flag') → logprob: -1.430293321609497
    4. '3' → logprob: -3.180293321609497
    5. '1' → logprob: -3.555293321609497
    6. '   ' → logprob: -3.930293321609497
    7. ' flag' → logprob: -4.055293083190918
    8. ' -' → logprob: -4.680293083190918
    9. ' ' → logprob: -4.930293083190918
    10. 'return' → logprob: -6.555293083190918

Token 252: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003178306156769395
    2. ' =' → logprob: -5.753178119659424
    3. '=-' → logprob: -14.628178596496582
    4. '=
' → logprob: -16.753177642822266
    5. '   ' → logprob: -17.628177642822266
    6. '0' → logprob: -18.003177642822266
    7. '1' → logprob: -18.503177642822266
    8. '＝' → logprob: -18.628177642822266
    9. ' ' → logprob: -19.253177642822266
    10. '2' → logprob: -19.753177642822266

Token 253: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007709788624197245
    2. ' -' → logprob: -5.507709980010986
    3. '3' → logprob: -5.632709980010986
    4. ' ' → logprob: -11.132709503173828
    5. '1' → logprob: -11.757709503173828
    6. '4' → logprob: -12.007709503173828
    7. '```' → logprob: -12.507709503173828
    8. '  ' → logprob: -12.632709503173828
    9. '−' → logprob: -12.632709503173828
    10. '2' → logprob: -13.132709503173828

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.469590491382405e-05
    2. '1' → logprob: -9.62507438659668
    3. '

' → logprob: -13.18757438659668
    4. '
' → logprob: -13.37507438659668
    5. '3' → logprob: -13.87507438659668
    6. ' ' → logprob: -13.93757438659668
    7. '   ' → logprob: -14.31257438659668
    8. '２' → logprob: -14.37507438659668
    9. '```' → logprob: -14.50007438659668
    10. '-' → logprob: -15.31257438659668

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005654225824400783
    2. '       ' → logprob: -8.250565528869629
    3. 'else' → logprob: -9.500565528869629
    4. '<|end|>' → logprob: -9.625565528869629
    5. ' else' → logprob: -9.875565528869629
    6. '  ' → logprob: -10.875565528869629
    7. ')' → logprob: -11.375565528869629
    8. 'return' → logprob: -11.500565528869629
    9. ':
' → logprob: -11.625565528869629
    10. ':' → logprob: -11.875565528869629

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04861347749829292
    2. ':' → logprob: -3.4236135482788086
    3. '=' → logprob: -4.548613548278809
    4. 'else' → logprob: -6.173613548278809
    5. '       ' → logprob: -7.048613548278809
    6. '<|end|>' → logprob: -8.298613548278809
    7. ' =' → logprob: -8.548613548278809
    8. ' else' → logprob: -8.798613548278809
    9. ')' → logprob: -8.923613548278809
    10. '=True' → logprob: -9.423613548278809

Token 257: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44018658995628357
    2. 'else' (adapté à ' else') → logprob: -1.190186619758606
    3. '0' → logprob: -3.5651865005493164
    4. ' else' → logprob: -4.315186500549316
    5. ':' → logprob: -5.440186500549316
    6. '=' → logprob: -6.065186500549316
    7. '2' → logprob: -6.690186500549316
    8. '==' → logprob: -7.565186500549316
    9. '```' → logprob: -7.940186500549316
    10. '1' → logprob: -8.065186500549316

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02734224498271942
    2. ':
' → logprob: -4.152342319488525
    3. '       ' → logprob: -4.527342319488525
    4. '   ' → logprob: -8.027341842651367
    5. ' :' → logprob: -10.152341842651367
    6. '=' → logprob: -10.652341842651367
    7. '0' → logprob: -11.527341842651367
    8. '    ' → logprob: -12.152341842651367
    9. ' =' → logprob: -12.152341842651367
    10. '      ' → logprob: -12.652341842651367

Token 259: '       ' (ID: 309)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0038674199022352695
    2. ' ' → logprob: -6.1288676261901855
    3. '   ' → logprob: -6.5038676261901855
    4. '       ' → logprob: -9.128867149353027
    5. '    ' → logprob: -10.003867149353027
    6. 'flag' → logprob: -11.253867149353027
    7. '  ' → logprob: -12.503867149353027
    8. '	' → logprob: -12.628867149353027
    9. '        ' → logprob: -13.003867149353027
    10. '2' → logprob: -13.003867149353027

Token 260: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04327617585659027
    2. 'flag' → logprob: -3.168276071548462
    3. ' ' → logprob: -8.793275833129883
    4. ' flag' → logprob: -9.043275833129883
    5. '   ' → logprob: -12.418275833129883
    6. '	flag' → logprob: -13.543275833129883
    7. 'return' → logprob: -15.043275833129883
    8. 'flags' → logprob: -15.043275833129883
    9. '(flag' → logprob: -15.668275833129883
    10. '```' → logprob: -15.668275833129883

Token 261: ' print' (ID: 2123)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.532878577709198
    2. '0' → logprob: -0.907878577709198
    3. ' flag' → logprob: -5.157878398895264
    4. '   ' → logprob: -5.907878398895264
    5. ' ' → logprob: -6.782878398895264
    6. '    ' → logprob: -10.407878875732422
    7. '  ' → logprob: -11.032878875732422
    8. 'print' → logprob: -11.032878875732422
    9. '	flag' → logprob: -11.407878875732422
    10. '1' → logprob: -12.282878875732422

Token 262: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3856574594974518
    2. '0' → logprob: -1.5106574296951294
    3. '('' → logprob: -2.385657548904419
    4. ' ' → logprob: -6.26065731048584
    5. '=' → logprob: -6.26065731048584
    6. ''' → logprob: -6.51065731048584
    7. '(
' → logprob: -6.76065731048584
    8. 'flag' → logprob: -8.26065731048584
    9. ' (' → logprob: -8.51065731048584
    10. ' '' → logprob: -10.38565731048584

Token 263: 'ON' (ID: 975)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'flag' → logprob: -15.125001907348633
    4. ''' → logprob: -16.875001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '1' → logprob: -17.125001907348633
    7. '-' → logprob: -17.250001907348633
    8. '０' → logprob: -17.375001907348633
    9. '```' → logprob: -18.000001907348633
    10. '2' → logprob: -18.437501907348633

Token 264: '_SEG' (ID: 135738)
  Prédit: '_SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SEG' → logprob: -0.22221598029136658
    2. '_EDGE' → logprob: -2.5972158908843994
    3. '_POINT' → logprob: -2.7222158908843994
    4. '0' → logprob: -4.2222161293029785
    5. '_ZERO' → logprob: -4.4722161293029785
    6. 'POINT' → logprob: -5.3472161293029785
    7. '_AXIS' → logprob: -5.8472161293029785
    8. 'SEG' → logprob: -5.9722161293029785
    9. '_POS' → logprob: -6.0972161293029785
    10. '_SITE' → logprob: -6.2222161293029785

Token 265: 'MENT' (ID: 9640)
  Prédit: 'MENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MENT' → logprob: -0.001757764141075313
    2. '   ' → logprob: -7.126757621765137
    3. 'мент' → logprob: -8.251757621765137
    4. '```' → logprob: -8.626757621765137
    5. 'ment' → logprob: -9.251757621765137
    6. ')' → logprob: -9.501757621765137
    7. '1' → logprob: -9.626757621765137
    8. ')
' → logprob: -10.001757621765137
    9. 'メント' → logprob: -10.126757621765137
    10. '  ' → logprob: -10.751757621765137

Token 266: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.03859894722700119
    2. '')' → logprob: -3.2885990142822266
    3. ')
' → logprob: -8.163599014282227
    4. ' ')
' → logprob: -9.288599014282227
    5. ')' → logprob: -9.413599014282227
    6. '   ' → logprob: -10.413599014282227
    7. '1' → logprob: -10.663599014282227
    8. '')
' → logprob: -11.163599014282227
    9. '0' → logprob: -11.163599014282227
    10. '')

' → logprob: -12.413599014282227

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013639887794852257
    2. '   ' → logprob: -4.7636399269104
    3. ' ' → logprob: -6.3886399269104
    4. '=' → logprob: -7.1386399269104
    5. ' =' → logprob: -7.2636399269104
    6. '        ' → logprob: -7.2636399269104
    7. '    ' → logprob: -7.6386399269104
    8. '```' → logprob: -9.013639450073242
    9. '0' → logprob: -9.388639450073242
    10. '           ' → logprob: -9.638639450073242

Token 268: ' flag' (ID: 9641)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000835716025903821
    2. ' ' → logprob: -7.25083589553833
    3. 'flag' (adapté à ' flag') → logprob: -9.000835418701172
    4. ' flag' → logprob: -13.000835418701172
    5. '   ' → logprob: -16.750835418701172
    6. 'return' → logprob: -17.375835418701172
    7. '=' → logprob: -17.875835418701172
    8. '1' → logprob: -18.125835418701172
    9. '```' → logprob: -18.125835418701172
    10. '  ' → logprob: -18.750835418701172

Token 269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078401252627373
    2. ' =' → logprob: -5.504078388214111
    3. '=
' → logprob: -18.879077911376953
    4. '＝' → logprob: -19.004077911376953
    5. '=}' → logprob: -19.879077911376953
    6. ' =)' → logprob: -20.879077911376953
    7. '=

' → logprob: -21.004077911376953
    8. ')' → logprob: -21.129077911376953
    9. '==' → logprob: -21.254077911376953
    10. '   ' → logprob: -21.379077911376953

Token 270: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '۰' → logprob: -21.625001907348633
    4. '０' → logprob: -22.250001907348633
    5. '1' → logprob: -23.125001907348633
    6. '00' → logprob: -23.500001907348633
    7. 'zero' → logprob: -24.000001907348633
    8. '3' → logprob: -24.125001907348633
    9. '=' → logprob: -24.375001907348633
    10. '   ' → logprob: -24.500001907348633

Token 271: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -19.375
    4. '０' → logprob: -19.625
    5. '00' → logprob: -19.875
    6. '012' → logprob: -20.875
    7. 'zero' → logprob: -21.625
    8. '000' → logprob: -22.0
    9. '03' → logprob: -22.125
    10. 'O' → logprob: -22.125

Token 272: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010153028415516019
    2. '	return' → logprob: -8.126015663146973
    3. ' return' → logprob: -8.376015663146973
    4. '<|end|>' → logprob: -8.626015663146973
    5. '    
' → logprob: -9.001015663146973
    6. 'return' → logprob: -10.251015663146973
    7. ' ' → logprob: -10.626015663146973
    8. '
' → logprob: -10.751015663146973
    9. '       ' → logprob: -11.001015663146973
    10. ')' → logprob: -11.001015663146973

Token 273: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005150146782398224
    2. '	return' → logprob: -5.880150318145752
    3. ' return' → logprob: -6.755150318145752
    4. '<|end|>' → logprob: -7.630150318145752
    5. 'return' → logprob: -7.880150318145752
    6. '    
' → logprob: -8.630149841308594
    7. ':return' → logprob: -9.505149841308594
    8. '
' → logprob: -10.880149841308594
    9. '```' → logprob: -12.005149841308594
    10. '       ' → logprob: -12.380149841308594

Token 274: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004358433187007904
    2. 'return' (adapté à ' return') → logprob: -6.254358291625977
    3. ' return' → logprob: -6.379358291625977
    4. '	return' → logprob: -7.254358291625977
    5. ':return' → logprob: -12.129358291625977
    6. '       ' → logprob: -12.254358291625977
    7. '<|end|>' → logprob: -12.379358291625977
    8. '    
' → logprob: -12.504358291625977
    9. ' ' → logprob: -13.504358291625977
    10. '    ' → logprob: -13.504358291625977

Token 275: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -4.320199877838604e-07
    2. ' flag' → logprob: -14.75
    3. '(flag' → logprob: -21.25
    4. 'flags' → logprob: -21.5
    5. '	flag' → logprob: -22.25
    6. '   ' → logprob: -22.75
    7. 'fl' → logprob: -23.375
    8. 'filter' → logprob: -23.625
    9. '  ' → logprob: -24.875
    10. '```' → logprob: -25.75

Token 276: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6548053622245789
    2. '<|end|>' → logprob: -0.9048053622245789
    3. ')' → logprob: -3.5298054218292236
    4. ' ' → logprob: -3.7798054218292236
    5. '   ' → logprob: -4.6548051834106445
    6. '```' → logprob: -5.9048051834106445
    7. ' def' → logprob: -6.2798051834106445
    8. '.' → logprob: -6.6548051834106445
    9. ',' → logprob: -6.7798051834106445
    10. '    
' → logprob: -7.1548051834106445

Token 277: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11302343755960464
    2. 'for' → logprob: -2.863023519515991
    3. 'import' → logprob: -3.613023519515991
    4. ' for' → logprob: -5.113023281097412
    5. 'if' → logprob: -5.363023281097412
    6. 'input' → logprob: -5.738023281097412
    7. 'p' → logprob: -5.863023281097412
    8. 'n' → logprob: -5.863023281097412
    9. ' def' → logprob: -7.613023281097412
    10. '```' → logprob: -7.738023281097412

Token 278: ' check' (ID: 2371)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.021330706775188446
    2. ' main' → logprob: -3.8963305950164795
    3. 'solve' → logprob: -8.146330833435059
    4. 'is' → logprob: -8.396330833435059
    5. 'inter' → logprob: -9.396330833435059
    6. 'check' → logprob: -9.521330833435059
    7. 'segment' → logprob: -10.146330833435059
    8. 'cc' → logprob: -10.771330833435059
    9. 'intersection' → logprob: -11.146330833435059
    10. 'line' → logprob: -11.896330833435059

Token 279: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -0.4880100190639496
    2. '_parallel' → logprob: -1.613010048866272
    3. '_segments' → logprob: -2.2380099296569824
    4. '_segment' → logprob: -3.6130099296569824
    5. '_' → logprob: -4.488009929656982
    6. '_seg' → logprob: -4.738009929656982
    7. '_line' → logprob: -5.113009929656982
    8. '_overlap' → logprob: -5.613009929656982
    9. '_l' → logprob: -5.988009929656982
    10. '_cc' → logprob: -6.363009929656982

Token 280: 'section' (ID: 6471)
  Prédit: 'sect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -0.20196639001369476
    2. 'section' → logprob: -1.701966404914856
    3. 's' → logprob: -7.951966285705566
    4. 'sec' → logprob: -8.951966285705566
    5. 'sects' → logprob: -10.326966285705566
    6. 'sections' → logprob: -10.951966285705566
    7. 'set' → logprob: -11.701966285705566
    8. '```' → logprob: -13.076966285705566
    9. 'import' → logprob: -13.326966285705566
    10. 'SECTION' → logprob: -13.451966285705566

Token 281: '(_' (ID: 4963)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.001391423400491476
    2. '(line' → logprob: -7.626391410827637
    3. '(l' → logprob: -8.251391410827637
    4. '(a' → logprob: -8.251391410827637
    5. '(' → logprob: -8.376391410827637
    6. '(s' → logprob: -9.001391410827637
    7. ' (' → logprob: -11.751391410827637
    8. '(segment' → logprob: -12.626391410827637
    9. '(seg' → logprob: -12.876391410827637
    10. '((' → logprob: -12.876391410827637

Token 282: 'lines' (ID: 10105)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012444430962204933
    2. 'a' → logprob: -4.512444496154785
    3. '(p' → logprob: -7.137444496154785
    4. 's' → logprob: -8.887444496154785
    5. 'segment' → logprob: -9.012444496154785
    6. '0' → logprob: -9.262444496154785
    7. '(a' → logprob: -9.637444496154785
    8. '```' → logprob: -10.262444496154785
    9. 'seg' → logprob: -10.387444496154785
    10. 'l' → logprob: -10.512444496154785

Token 283: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.031048793345689774
    2. '):
' → logprob: -3.6560487747192383
    3. ',' → logprob: -6.781048774719238
    4. '(line' → logprob: -7.031048774719238
    5. '(lines' → logprob: -7.281048774719238
    6. 'lines' → logprob: -8.281048774719238
    7. ')' → logprob: -8.531048774719238
    8. '(l' → logprob: -8.531048774719238
    9. 'ines' → logprob: -8.656048774719238
    10. 's' → logprob: -8.656048774719238

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005936501547694206
    2. '(p' → logprob: -5.380936622619629
    3. '(' → logprob: -7.505936622619629
    4. '[' → logprob: -8.255936622619629
    5. '(lines' → logprob: -9.005936622619629
    6. '(a' → logprob: -9.130936622619629
    7. '    
' → logprob: -9.880936622619629
    8. '(line' → logprob: -10.255936622619629
    9. 'lines' → logprob: -10.630936622619629
    10. 'a' → logprob: -10.630936622619629

Token 285: ' for' (ID: 395)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.33511078357696533
    2. ' p' → logprob: -1.4601107835769653
    3. '   ' → logprob: -3.210110664367676
    4. 'l' → logprob: -4.960110664367676
    5. ' l' → logprob: -6.460110664367676
    6. 'a' → logprob: -7.210110664367676
    7. '(p' → logprob: -7.210110664367676
    8. ' lines' → logprob: -7.335110664367676
    9. 'lines' → logprob: -7.710110664367676
    10. ' a' → logprob: -7.835110664367676

Token 286: ' line' (ID: 2543)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.916066586971283
    2. ' i' → logprob: -1.2910666465759277
    3. ' p' → logprob: -2.1660666465759277
    4. 'p' → logprob: -2.1660666465759277
    5. ' line' → logprob: -3.2910666465759277
    6. 'line' → logprob: -4.041066646575928
    7. 'l' → logprob: -4.541066646575928
    8. '(p' → logprob: -4.916066646575928
    9. ' (' → logprob: -5.041066646575928
    10. ' l' → logprob: -5.166066646575928

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020571433007717133
    2. 'in' → logprob: -4.520571231842041
    3. 's' → logprob: -5.520571231842041
    4. '_' → logprob: -5.520571231842041
    5. ',' → logprob: -7.520571231842041
    6. '[' → logprob: -8.7705717086792
    7. '_line' → logprob: -9.2705717086792
    8. '   ' → logprob: -9.2705717086792
    9. ' _' → logprob: -9.3955717086792
    10. '_in' → logprob: -9.5205717086792

Token 288: ' _' (ID: 1175)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0019341122824698687
    2. ' _' → logprob: -6.501934051513672
    3. ' range' → logprob: -8.376934051513672
    4. 'range' → logprob: -9.001934051513672
    5. '_line' → logprob: -10.751934051513672
    6. '_range' → logprob: -11.876934051513672
    7. ' ' → logprob: -12.001934051513672
    8. '_ranges' → logprob: -12.251934051513672
    9. 'lines' → logprob: -12.501934051513672
    10. '   ' → logprob: -12.626934051513672

Token 289: 'lines' (ID: 10105)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.18067282438278198
    2. 'lines' → logprob: -1.8056728839874268
    3. 'line' → logprob: -7.680672645568848
    4. 's' → logprob: -9.055672645568848
    5. '```' → logprob: -9.805672645568848
    6. 'Lines' → logprob: -10.430672645568848
    7. ' lines' → logprob: -10.430672645568848
    8. ')' → logprob: -10.555672645568848
    9. '_line' → logprob: -10.680672645568848
    10. '   ' → logprob: -10.930672645568848

Token 290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010237517766654491
    2. ',' → logprob: -5.010237693786621
    3. '):' → logprob: -6.635237693786621
    4. ':
' → logprob: -6.760237693786621
    5. ' in' → logprob: -8.010237693786621
    6. '   ' → logprob: -8.260237693786621
    7. ' =' → logprob: -9.010237693786621
    8. '[' → logprob: -9.010237693786621
    9. '=' → logprob: -10.135237693786621
    10. ' :' → logprob: -10.260237693786621

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011102055199444294
    2. ',' → logprob: -4.886102199554443
    3. '        
' → logprob: -7.011102199554443
    4. ':' → logprob: -7.261102199554443
    5. '    ' → logprob: -7.511102199554443
    6. '[' → logprob: -8.386101722717285
    7. '   ' → logprob: -8.386101722717285
    8. '<|end|>' → logprob: -8.511101722717285
    9. ' ' → logprob: -9.136101722717285
    10. '      ' → logprob: -9.136101722717285

Token 292: ' line' (ID: 2543)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.2478083372116089
    2. 'p' → logprob: -2.2478084564208984
    3. '       ' → logprob: -2.3728084564208984
    4. ' points' → logprob: -4.872808456420898
    5. ' x' → logprob: -5.372808456420898
    6. 'x' → logprob: -6.497808456420898
    7. 'points' → logprob: -6.747808456420898
    8. ' a' → logprob: -7.372808456420898
    9. '   ' → logprob: -7.497808456420898
    10. ' s' → logprob: -7.622808456420898

Token 293: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6600278615951538
    2. ' =' → logprob: -1.0350278615951538
    3. 's' → logprob: -2.5350279808044434
    4. '_points' → logprob: -4.160027980804443
    5. '=line' → logprob: -5.035027980804443
    6. '_tokens' → logprob: -5.160027980804443
    7. 'points' → logprob: -5.410027980804443
    8. '[' → logprob: -5.535027980804443
    9. 'tokens' → logprob: -6.535027980804443
    10. 'a' → logprob: -6.785027980804443

Token 294: ' tuple' (ID: 31311)
  Prédit: '[line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[line' → logprob: -0.13517846167087555
    2. '[list' → logprob: -3.010178565979004
    3. '[' → logprob: -3.260178565979004
    4. 'list' → logprob: -3.385178565979004
    5. '[(' → logprob: -6.635178565979004
    6. '[
' → logprob: -6.760178565979004
    7. 'line' → logprob: -6.760178565979004
    8. '(line' → logprob: -7.385178565979004
    9. 'tuple' → logprob: -8.135178565979004
    10. '(list' → logprob: -9.135178565979004

Token 295: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.9593002200126648
    2. '(line' → logprob: -0.9593002200126648
    3. '(com' → logprob: -1.4593002796173096
    4. '([' → logprob: -7.9593000411987305
    5. '(tuple' → logprob: -8.33430004119873
    6. '(' → logprob: -8.70930004119873
    7. 'complex' → logprob: -8.83430004119873
    8. '((' → logprob: -9.33430004119873
    9. 'map' → logprob: -9.33430004119873
    10. '(float' → logprob: -9.83430004119873

Token 296: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.396698921918869
    2. '(float' → logprob: -1.6466989517211914
    3. '(com' → logprob: -2.0216989517211914
    4. 'complex' → logprob: -6.396698951721191
    5. 'int' → logprob: -8.021698951721191
    6. '(lambda' → logprob: -8.771698951721191
    7. '(' → logprob: -9.271698951721191
    8. 'float' → logprob: -9.396698951721191
    9. '(
' → logprob: -11.896698951721191
    10. '(str' → logprob: -12.021698951721191

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31434211134910583
    2. ',line' → logprob: -1.3143421411514282
    3. '(line' → logprob: -7.564342021942139
    4. ',input' → logprob: -7.689342021942139
    5. ' ,' → logprob: -9.564342498779297
    6. 'line' → logprob: -11.314342498779297
    7. '[line' → logprob: -12.439342498779297
    8. ' line' → logprob: -12.439342498779297
    9. ',
' → logprob: -13.189342498779297
    10. '))' → logprob: -13.814342498779297

Token 298: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.002250291872769594
    2. ' line' → logprob: -6.1272501945495605
    3. '(line' → logprob: -10.252250671386719
    4. 'input' → logprob: -11.752250671386719
    5. '[line' → logprob: -12.252250671386719
    6. 'map' → logprob: -12.627250671386719
    7. '_line' → logprob: -12.752250671386719
    8. ')' → logprob: -13.502250671386719
    9. ',line' → logprob: -13.627250671386719
    10. 'str' → logprob: -13.752250671386719

Token 299: '))
' (ID: 2210)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.25353842973709106
    2. '.strip' → logprob: -1.5035383701324463
    3. '))' → logprob: -6.628538608551025
    4. 'strip' → logprob: -8.878538131713867
    5. 'split' → logprob: -9.128538131713867
    6. '.' → logprob: -10.878538131713867
    7. '.rstrip' → logprob: -11.253538131713867
    8. '().' → logprob: -13.128538131713867
    9. '.replace' → logprob: -13.878538131713867
    10. ' .' → logprob: -14.003538131713867

Token 300: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07314568758010864
    2. ')' → logprob: -3.323145627975464
    3. '        
' → logprob: -4.448145866394043
    4. '<|end|>' → logprob: -4.698145866394043
    5. ',' → logprob: -5.448145866394043
    6. '[' → logprob: -5.948145866394043
    7. '   ' → logprob: -6.698145866394043
    8. '
' → logprob: -7.073145866394043
    9. '<|end|>' → logprob: -7.698145866394043
    10. ' ' → logprob: -8.073145866394043

Token 301: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.01673317514359951
    2. ' p' → logprob: -5.141733169555664
    3. '(p' → logprob: -5.266733169555664
    4. 'x' → logprob: -5.891733169555664
    5. '       ' → logprob: -6.266733169555664
    6. '(x' → logprob: -8.391733169555664
    7. 'a' → logprob: -8.641733169555664
    8. 's' → logprob: -8.766733169555664
    9. '   ' → logprob: -9.266733169555664
    10. 'points' → logprob: -9.641733169555664

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016229959146585315
    2. ' =' → logprob: -10.000162124633789
    3. '=' → logprob: -10.500162124633789
    4. '_' → logprob: -10.750162124633789
    5. '[' → logprob: -11.000162124633789
    6. 'a' → logprob: -11.375162124633789
    7. '(' → logprob: -11.625162124633789
    8. ' ' → logprob: -12.125162124633789
    9. '=(' → logprob: -12.250162124633789
    10. '=[' → logprob: -12.625162124633789

Token 303: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.437059223651886
    2. '=' → logprob: -1.0620591640472412
    3. ',' → logprob: -4.81205940246582
    4. '=p' → logprob: -9.56205940246582
    5. '=line' → logprob: -9.68705940246582
    6. ',p' → logprob: -10.81205940246582
    7. 'p' → logprob: -10.93705940246582
    8. '<|end|>' → logprob: -11.93705940246582
    9. '=lambda' → logprob: -13.31205940246582
    10. ' ,' → logprob: -13.31205940246582

Token 304: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2519766092300415
    2. ' p' → logprob: -1.5019766092300415
    3. 'complex' → logprob: -10.62697696685791
    4. ' complex' → logprob: -11.62697696685791
    5. ' ' → logprob: -12.50197696685791
    6. '    ' → logprob: -12.87697696685791
    7. '   ' → logprob: -13.62697696685791
    8. ',' → logprob: -13.75197696685791
    9. '  ' → logprob: -13.87697696685791
    10. '(p' → logprob: -14.12697696685791

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.73446003627032e-05
    2. '=' → logprob: -9.750097274780273
    3. ' =' → logprob: -11.250097274780273
    4. '0' → logprob: -11.500097274780273
    5. '3' → logprob: -12.375097274780273
    6. '2' → logprob: -12.625097274780273
    7. '```' → logprob: -13.000097274780273
    8. ',' → logprob: -13.750097274780273
    9. 'oints' → logprob: -14.000097274780273
    10. ' ' → logprob: -14.250097274780273

Token 306: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47433969378471375
    2. '=' → logprob: -0.9743397235870361
    3. ',' → logprob: -8.349339485168457
    4. '=line' → logprob: -10.599339485168457
    5. '=p' → logprob: -13.974339485168457
    6. ')' → logprob: -16.724340438842773
    7. 'p' → logprob: -16.974340438842773
    8. '=
' → logprob: -17.099340438842773
    9. ',p' → logprob: -17.099340438842773
    10. ' =
' → logprob: -17.224340438842773

Token 307: ' p' (ID: 275)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.015361246652901173
    2. ' complex' → logprob: -4.515361309051514
    3. 'p' → logprob: -5.515361309051514
    4. '(com' → logprob: -8.390360832214355
    5. ' p' → logprob: -10.640360832214355
    6. '(p' → logprob: -11.640360832214355
    7. '(' → logprob: -12.390360832214355
    8. 'map' → logprob: -13.015360832214355
    9. '_complex' → logprob: -13.140360832214355
    10. '   ' → logprob: -13.390360832214355

Token 308: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.47840893268585205
    2. '2' → logprob: -0.978408932685852
    3. '=' → logprob: -6.7284088134765625
    4. 'oints' → logprob: -6.7284088134765625
    5. ' =' → logprob: -6.8534088134765625
    6. '=line' → logprob: -8.478408813476562
    7. ',' → logprob: -8.853408813476562
    8. '```' → logprob: -9.353408813476562
    9. '1' → logprob: -9.478408813476562
    10. '(line' → logprob: -9.728408813476562

Token 309: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16597963869571686
    2. ' =' → logprob: -1.9159796237945557
    3. ',' → logprob: -5.165979862213135
    4. '=line' → logprob: -10.915979385375977
    5. '=p' → logprob: -12.040979385375977
    6. ',p' → logprob: -12.540979385375977
    7. 'p' → logprob: -12.665979385375977
    8. ',line' → logprob: -15.415979385375977
    9. ' p' → logprob: -16.040979385375977
    10. ' ,' → logprob: -16.540979385375977

Token 310: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16029895842075348
    2. ' p' → logprob: -1.9102989435195923
    3. '=' → logprob: -9.910299301147461
    4. ' =' → logprob: -11.035299301147461
    5. 'q' → logprob: -12.535299301147461
    6. ' ' → logprob: -13.410299301147461
    7. '=p' → logprob: -13.660299301147461
    8. ',' → logprob: -13.910299301147461
    9. ' q' → logprob: -15.035299301147461
    10. 's' → logprob: -15.160299301147461

Token 311: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4422907829284668
    2. '2' → logprob: -1.0672907829284668
    3. '3' → logprob: -4.317290782928467
    4. '1' → logprob: -9.567291259765625
    5. '=' → logprob: -10.317291259765625
    6. ' =' → logprob: -11.067291259765625
    7. '23' → logprob: -11.317291259765625
    8. 'oints' → logprob: -11.442291259765625
    9. '```' → logprob: -12.317291259765625
    10. '=None' → logprob: -13.192291259765625

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416350994259119
    2. ' =' → logprob: -4.264163494110107
    3. '=(' → logprob: -17.389163970947266
    4. '=line' → logprob: -17.514163970947266
    5. ',' → logprob: -17.639163970947266
    6. '=p' → logprob: -18.514163970947266
    7. ' ' → logprob: -19.264163970947266
    8. '＝' → logprob: -19.514163970947266
    9. '   ' → logprob: -20.014163970947266
    10. '=int' → logprob: -20.139163970947266

Token 313: ' (' (ID: 350)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.004698426462709904
    2. ' complex' → logprob: -5.754698276519775
    3. '(com' → logprob: -6.504698276519775
    4. 'map' → logprob: -12.004698753356934
    5. '   ' → logprob: -12.129698753356934
    6. '(' → logprob: -12.879698753356934
    7. '[' → logprob: -13.004698753356934
    8. 'com' → logprob: -13.254698753356934
    9. ' (' → logprob: -13.504698753356934
    10. '_complex' → logprob: -13.879698753356934

Token 314: 'x' (ID: 87)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.00023178798437584192
    2. ' complex' → logprob: -8.375231742858887
    3. '(com' → logprob: -14.375231742858887
    4. ')' → logprob: -15.250231742858887
    5. '[' → logprob: -15.375231742858887
    6. '   ' → logprob: -17.000232696533203
    7. '_complex' → logprob: -17.750232696533203
    8. '0' → logprob: -18.000232696533203
    9. 'line' → logprob: -18.500232696533203
    10. '(' → logprob: -18.750232696533203

Token 315: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.104573369026184
    2. '=line' → logprob: -1.604573369026184
    3. '0' → logprob: -1.729573369026184
    4. '+' → logprob: -1.729573369026184
    5. ' for' → logprob: -2.8545732498168945
    6. '(line' → logprob: -4.2295732498168945
    7. '[line' → logprob: -4.8545732498168945
    8. '=' → logprob: -4.9795732498168945
    9. ',' → logprob: -5.2295732498168945
    10. 'complex' → logprob: -5.2295732498168945

Token 316: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2762587368488312
    2. '0' → logprob: -1.7762587070465088
    3. '1' → logprob: -2.651258707046509
    4. 'complex' → logprob: -7.151258945465088
    5. ' y' → logprob: -7.776258945465088
    6. '(y' → logprob: -9.15125846862793
    7. ' ' → logprob: -9.52625846862793
    8. 'yi' → logprob: -9.77625846862793
    9. '(' → logprob: -10.40125846862793
    10. 'yj' → logprob: -10.90125846862793

Token 317: ' *' (ID: 425)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.013435851782560349
    2. 'j' → logprob: -4.6384358406066895
    3. '*' → logprob: -5.7634358406066895
    4. ' ' → logprob: -7.8884358406066895
    5. '
' → logprob: -10.013436317443848
    6. '```' → logprob: -10.013436317443848
    7. '0' → logprob: -10.888436317443848
    8. 'for' → logprob: -11.638436317443848
    9. '

' → logprob: -12.013436317443848
    10. '-' → logprob: -12.138436317443848

Token 318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '0' → logprob: -14.250001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '```' → logprob: -15.750001907348633
    5. '-' → logprob: -17.500001907348633
    6. 'j' → logprob: -17.875001907348633
    7. '
' → logprob: -18.875001907348633
    8. '.' → logprob: -19.250001907348633
    9. '``' → logprob: -19.250001907348633
    10. '2' → logprob: -19.375001907348633

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.0
    3. '0' → logprob: -16.25
    4. '```' → logprob: -16.25
    5. 'j' → logprob: -18.125
    6. '-' → logprob: -18.625
    7. '
' → logprob: -18.75
    8. '2' → logprob: -19.5
    9. '``' → logprob: -19.625
    10. '

' → logprob: -19.875

Token 320: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.023293538717553e-05
    2. '1' → logprob: -11.375030517578125
    3. '```' → logprob: -11.625030517578125
    4. '.' → logprob: -13.000030517578125
    5. '
' → logprob: -13.375030517578125
    6. '   ' → logprob: -13.750030517578125
    7. '*' → logprob: -13.875030517578125
    8. '.j' → logprob: -14.125030517578125
    9. 'J' → logprob: -14.125030517578125
    10. '-' → logprob: -14.250030517578125

Token 321: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25269073247909546
    2. 'for' → logprob: -1.5026907920837402
    3. ')' → logprob: -7.25269079208374
    4. ' ' → logprob: -10.252690315246582
    5. '0' → logprob: -12.127690315246582
    6. '	for' → logprob: -12.502690315246582
    7. '
' → logprob: -12.877690315246582
    8. 'p' → logprob: -13.627690315246582
    9. '  ' → logprob: -13.752690315246582
    10. ' )' → logprob: -13.877690315246582

Token 322: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04184645786881447
    2. 'line' → logprob: -3.916846513748169
    3. '(x' → logprob: -4.41684627532959
    4. ' x' → logprob: -5.04184627532959
    5. ' line' → logprob: -7.16684627532959
    6. '(' → logprob: -7.79184627532959
    7. '[x' → logprob: -8.04184627532959
    8. ' (' → logprob: -8.16684627532959
    9. '[' → logprob: -8.29184627532959
    10. '(line' → logprob: -8.66684627532959

Token 323: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34925562143325806
    2. ' in' → logprob: -1.3492555618286133
    3. ',' → logprob: -3.3492555618286133
    4. ',y' → logprob: -9.349255561828613
    5. ',x' → logprob: -9.599255561828613
    6. ' ,' → logprob: -10.474255561828613
    7. 'x' → logprob: -10.599255561828613
    8. ',p' → logprob: -11.724255561828613
    9. ' ' → logprob: -12.099255561828613
    10. ',line' → logprob: -12.349255561828613

Token 324: ' y' (ID: 342)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.7472059726715088
    2. 'line' → logprob: -1.8722059726715088
    3. '(line' → logprob: -1.9972059726715088
    4. '((' → logprob: -2.122205972671509
    5. ' in' → logprob: -2.247205972671509
    6. 'in' → logprob: -2.247205972671509
    7. 'y' → logprob: -3.122205972671509
    8. '(' → logprob: -3.622205972671509
    9. '(x' → logprob: -3.747205972671509
    10. ' (' → logprob: -3.872205972671509

Token 325: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10030242055654526
    2. ' in' → logprob: -2.3503024578094482
    3. ')' → logprob: -9.850302696228027
    4. ',' → logprob: -10.225302696228027
    5. ' ' → logprob: -13.350302696228027
    6. 'line' → logprob: -14.100302696228027
    7. '
' → logprob: -14.350302696228027
    8. '),' → logprob: -14.350302696228027
    9. ',line' → logprob: -14.850302696228027
    10. ' )' → logprob: -15.600302696228027

Token 326: ' zip' (ID: 16216)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.15060047805309296
    2. '[line' → logprob: -2.5256004333496094
    3. '(zip' → logprob: -3.9006004333496094
    4. ' zip' → logprob: -4.025600433349609
    5. '((' → logprob: -4.900600433349609
    6. 'zip' → logprob: -5.275600433349609
    7. '[' → logprob: -5.400600433349609
    8. '(line' → logprob: -6.150600433349609
    9. '[((' → logprob: -7.150600433349609
    10. '[
' → logprob: -7.275600433349609

Token 327: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.20279811322689056
    2. 'line' → logprob: -1.7027981281280518
    3. '(*' → logprob: -7.327797889709473
    4. '((' → logprob: -8.202797889709473
    5. '[line' → logprob: -8.202797889709473
    6. '([' → logprob: -9.827797889709473
    7. '(' → logprob: -10.452797889709473
    8. '[' → logprob: -10.702797889709473
    9. ' line' → logprob: -11.077797889709473
    10. '((*' → logprob: -11.327797889709473

Token 328: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2217617928981781
    2. '[' → logprob: -1.7217618227005005
    3. '[:' → logprob: -4.596761703491211
    4. ',line' → logprob: -5.471761703491211
    5. '(' → logprob: -6.721761703491211
    6. ',(' → logprob: -7.096761703491211
    7. ',[' → logprob: -7.096761703491211
    8. ' ,' → logprob: -7.346761703491211
    9. '       ' → logprob: -7.471761703491211
    10. '(line' → logprob: -7.846761703491211

Token 329: '::' (ID: 742)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5244220495223999
    2. '0' → logprob: -1.1494220495224
    3. ':' → logprob: -3.1494221687316895
    4. '(' → logprob: -3.5244221687316895
    5. '::' → logprob: -4.0244221687316895
    6. '[:' → logprob: -8.274421691894531
    7. '   ' → logprob: -8.524421691894531
    8. 'range' → logprob: -8.774421691894531
    9. ' ' → logprob: -9.149421691894531
    10. ' :' → logprob: -9.524421691894531

Token 330: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. '4' → logprob: -11.87501049041748
    3. ' ' → logprob: -13.25001049041748
    4. '1' → logprob: -15.31251049041748
    5. '
' → logprob: -15.31251049041748
    6. '8' → logprob: -15.50001049041748
    7. '])' → logprob: -15.93751049041748
    8. '   ' → logprob: -16.250009536743164
    9. '```' → logprob: -16.250009536743164
    10. '	' → logprob: -16.625009536743164

Token 331: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.001985021401196718
    2. ',' → logprob: -6.2519850730896
    3. ' ],' → logprob: -11.126984596252441
    4. '],
' → logprob: -11.626984596252441
    5. ']' → logprob: -11.876984596252441
    6. '],[' → logprob: -12.126984596252441
    7. 'line' → logprob: -12.251984596252441
    8. ',line' → logprob: -12.751984596252441
    9. '   ' → logprob: -12.876984596252441
    10. ':' → logprob: -13.126984596252441

Token 332: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.007615848444402218
    2. ' line' → logprob: -4.88261604309082
    3. '   ' → logprob: -12.63261604309082
    4. ' ' → logprob: -12.75761604309082
    5. '	line' → logprob: -14.13261604309082
    6. '[' → logprob: -14.25761604309082
    7. '(line' → logprob: -14.75761604309082
    8. '[line' → logprob: -14.88261604309082
    9. '  ' → logprob: -15.13261604309082
    10. '#line' → logprob: -15.38261604309082

Token 333: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6953640580177307
    2. '[' → logprob: -0.6953640580177307
    3. '4' → logprob: -6.445363998413086
    4. '][' → logprob: -8.195363998413086
    5. '(' → logprob: -9.195363998413086
    6. '])' → logprob: -9.195363998413086
    7. '1' → logprob: -9.445363998413086
    8. ' ' → logprob: -11.070363998413086
    9. ':' → logprob: -11.320363998413086
    10. '   ' → logprob: -11.820363998413086

Token 334: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.911954500945285e-05
    2. '1' → logprob: -9.500088691711426
    3. '3' → logprob: -12.625088691711426
    4. '::' → logprob: -13.125088691711426
    5. ']))' → logprob: -13.250088691711426
    6. '])' → logprob: -13.500088691711426
    7. ' ' → logprob: -13.500088691711426
    8. '4' → logprob: -13.875088691711426
    9. '[' → logprob: -14.125088691711426
    10. 'None' → logprob: -14.375088691711426

Token 335: '::' (ID: 742)
  Prédit: '::'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::' → logprob: -6.802049756515771e-05
    2. '2' → logprob: -10.500067710876465
    3. ':' → logprob: -11.000067710876465
    4. '::
' → logprob: -11.500067710876465
    5. ']))' → logprob: -11.625067710876465
    6. '::-' → logprob: -13.500067710876465
    7. '4' → logprob: -13.625067710876465
    8. ' ::' → logprob: -14.250067710876465
    9. '::_' → logprob: -14.875067710876465
    10. ']))
' → logprob: -15.000067710876465

Token 336: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ']))' → logprob: -15.625000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '])' → logprob: -16.125
    5. '1' → logprob: -17.0
    6. '3' → logprob: -17.5
    7. '```' → logprob: -18.375
    8. '   ' → logprob: -18.75
    9. ']))
' → logprob: -18.75
    10. '])[' → logprob: -19.25

Token 337: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.010145004838705063
    2. '])' → logprob: -5.13514518737793
    3. '))' → logprob: -5.51014518737793
    4. ']))
' → logprob: -9.38514518737793
    5. ')])' → logprob: -10.76014518737793
    6. ']' → logprob: -10.88514518737793
    7. ')]' → logprob: -10.88514518737793
    8. ')))' → logprob: -12.76014518737793
    9. '']))' → logprob: -12.76014518737793
    10. ':' → logprob: -12.88514518737793

Token 338: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33965665102005005
    2. '
' → logprob: -1.3396565914154053
    3. '    
' → logprob: -4.464656829833984
    4. '       ' → logprob: -4.839656829833984
    5. '        
' → logprob: -5.964656829833984
    6. '<|end|>' → logprob: -6.089656829833984
    7. '```' → logprob: -6.964656829833984
    8. 'def' → logprob: -8.964656829833984
    9. ')' → logprob: -8.964656829833984
    10. '<|end|>' → logprob: -8.964656829833984

Token 339: ' flag' (ID: 9641)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8559233546257019
    2. 'flag' (adapté à ' flag') → logprob: -2.3559234142303467
    3. 's' → logprob: -2.4809234142303467
    4. 'if' → logprob: -2.7309234142303467
    5. 'd' → logprob: -2.8559234142303467
    6. ' flag' → logprob: -3.3559234142303467
    7. ' s' → logprob: -3.4809234142303467
    8. 'a' → logprob: -3.6059234142303467
    9. 'v' → logprob: -3.7309234142303467
    10. 'c' → logprob: -3.8559234142303467

Token 340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04320346191525459
    2. '=' → logprob: -3.168203353881836
    3. '1' → logprob: -8.793203353881836
    4. '0' → logprob: -10.793203353881836
    5. 's' → logprob: -11.043203353881836
    6. ' ' → logprob: -12.418203353881836
    7. '_' → logprob: -12.543203353881836
    8. ',' → logprob: -12.793203353881836
    9. '=line' → logprob: -13.293203353881836
    10. ' =
' → logprob: -14.668203353881836

Token 341: ' (' (ID: 350)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.07973144203424454
    2. ' check' → logprob: -3.5797314643859863
    3. '(check' → logprob: -3.8297314643859863
    4. '0' → logprob: -3.9547314643859863
    5. 'max' → logprob: -5.579731464385986
    6. '1' → logprob: -6.829731464385986
    7. ' ' → logprob: -7.079731464385986
    8. '(' → logprob: -7.829731464385986
    9. ' max' → logprob: -8.079730987548828
    10. 'min' → logprob: -8.579730987548828

Token 342: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.004124588333070278
    2. ' check' → logprob: -6.004124641418457
    3. 'max' → logprob: -7.379124641418457
    4. '(check' → logprob: -7.504124641418457
    5. 'min' → logprob: -9.254124641418457
    6. '0' → logprob: -9.379124641418457
    7. '
' → logprob: -9.504124641418457
    8. 'abs' → logprob: -9.629124641418457
    9. ' ' → logprob: -10.129124641418457
    10. '   ' → logprob: -10.254124641418457

Token 343: '_cc' (ID: 69524)
  Prédit: '_cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -1.7432603272027336e-06
    2. '_inter' → logprob: -14.375001907348633
    3. 'cc' → logprob: -14.500001907348633
    4. '_' → logprob: -15.125001907348633
    5. '_CC' → logprob: -16.250001907348633
    6. '(cc' → logprob: -16.875001907348633
    7. ')' → logprob: -17.875001907348633
    8. '_ll' → logprob: -18.500001907348633
    9. '_line' → logprob: -18.875001907348633
    10. '	cc' → logprob: -18.875001907348633

Token 344: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0004207826859783381
    2. 'W' → logprob: -8.000420570373535
    3. '(p' → logprob: -9.875420570373535
    4. 'p' → logprob: -10.625420570373535
    5. '_w' → logprob: -12.875420570373535
    6. 'wp' → logprob: -13.625420570373535
    7. '(w' → logprob: -14.375420570373535
    8. 'cw' → logprob: -14.375420570373535
    9. 'c' → logprob: -14.750420570373535
    10. '0' → logprob: -15.000420570373535

Token 345: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -9.491498531133402e-06
    2. ')(' → logprob: -12.250009536743164
    3. ' (' → logprob: -12.750009536743164
    4. ')' → logprob: -13.875009536743164
    5. 'p' → logprob: -14.750009536743164
    6. '(' → logprob: -15.750009536743164
    7. '(
' → logprob: -16.125009536743164
    8. ' p' → logprob: -17.500009536743164
    9. '
' → logprob: -17.500009536743164
    10. ')p' → logprob: -17.500009536743164

Token 346: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001298927003517747
    2. '1' → logprob: -6.876298904418945
    3. '2' → logprob: -8.376298904418945
    4. '3' → logprob: -10.626298904418945
    5. ',' → logprob: -12.688798904418945
    6. '[' → logprob: -13.313798904418945
    7. '```' → logprob: -13.438798904418945
    8. 'p' → logprob: -13.813798904418945
    9. ')' → logprob: -14.063798904418945
    10. '_' → logprob: -15.001298904418945

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006704242900013924
    2. ',p' → logprob: -5.256704330444336
    3. '(p' → logprob: -7.256704330444336
    4. ' ,' → logprob: -7.381704330444336
    5. 'p' → logprob: -9.006704330444336
    6. ',
' → logprob: -11.881704330444336
    7. ' p' → logprob: -12.131704330444336
    8. '(' → logprob: -13.506704330444336
    9. ' ' → logprob: -14.006704330444336
    10. '
' → logprob: -14.256704330444336

Token 348: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.020546795800328255
    2. ' p' → logprob: -3.8955469131469727
    3. ')' → logprob: -13.145546913146973
    4. '   ' → logprob: -13.770546913146973
    5. ')p' → logprob: -14.645546913146973
    6. ' ' → logprob: -14.770546913146973
    7. '       ' → logprob: -15.020546913146973
    8. '	p' → logprob: -15.270546913146973
    9. '  ' → logprob: -16.270545959472656
    10. '           ' → logprob: -16.270545959472656

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008865646668709815
    2. '2' → logprob: -7.6258864402771
    3. '3' → logprob: -7.8758864402771
    4. 'p' → logprob: -11.250886917114258
    5. '```' → logprob: -13.750886917114258
    6. '0' → logprob: -14.438386917114258
    7. 'a' → logprob: -14.875886917114258
    8. ',' → logprob: -15.125886917114258
    9. '
' → logprob: -15.500886917114258
    10. ' ' → logprob: -15.563386917114258

Token 350: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004366271197795868
    2. '(p' → logprob: -6.504366397857666
    3. ',p' → logprob: -6.504366397857666
    4. ' ,' → logprob: -6.754366397857666
    5. 'p' → logprob: -8.629365921020508
    6. ',
' → logprob: -11.879365921020508
    7. ' p' → logprob: -12.754365921020508
    8. '(' → logprob: -13.254365921020508
    9. ')' → logprob: -13.754365921020508
    10. '   ' → logprob: -13.879365921020508

Token 351: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00020616286201402545
    2. ' p' → logprob: -8.500205993652344
    3. '   ' → logprob: -13.500205993652344
    4. '(p' → logprob: -15.250205993652344
    5. ' ' → logprob: -15.500205993652344
    6. '  ' → logprob: -15.875205993652344
    7. ')' → logprob: -16.000205993652344
    8. '	p' → logprob: -16.000205993652344
    9. ')p' → logprob: -16.000205993652344
    10. '<p' → logprob: -16.125205993652344

Token 352: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010401944164186716
    2. '3' → logprob: -6.876039981842041
    3. '
' → logprob: -13.1260404586792
    4. ' ' → logprob: -13.6260404586792
    5. ')' → logprob: -14.1260404586792
    6. '0' → logprob: -14.3135404586792
    7. '```' → logprob: -14.7510404586792
    8. '   ' → logprob: -15.2510404586792
    9. ')
' → logprob: -15.2510404586792
    10. 'p' → logprob: -15.4385404586792

Token 353: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002265636110678315
    2. ' )' → logprob: -6.877265453338623
    3. ')*' → logprob: -7.377265453338623
    4. '),' → logprob: -7.752265453338623
    5. '   ' → logprob: -9.502265930175781
    6. ')
' → logprob: -9.877265930175781
    7. '))' → logprob: -11.252265930175781
    8. ' ' → logprob: -12.127265930175781
    9. '       ' → logprob: -12.252265930175781
    10. '
' → logprob: -12.377265930175781

Token 354: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.064993716776371
    2. ' *' → logprob: -2.9399936199188232
    3. ')' → logprob: -5.064993858337402
    4. '*
' → logprob: -6.189993858337402
    5. ')*' → logprob: -6.564993858337402
    6. '*

' → logprob: -9.314993858337402
    7. '*)' → logprob: -9.814993858337402
    8. ' *
' → logprob: -9.939993858337402
    9. '   ' → logprob: -10.439993858337402
    10. '=' → logprob: -10.689993858337402

Token 355: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.01252296008169651
    2. ' check' → logprob: -4.387523174285889
    3. '
' → logprob: -12.38752269744873
    4. ')' → logprob: -12.76252269744873
    5. '           ' → logprob: -13.26252269744873
    6. '	check' → logprob: -13.51252269744873
    7. '(check' → logprob: -13.63752269744873
    8. ' ' → logprob: -14.26252269744873
    9. '.check' → logprob: -15.01252269744873
    10. '   ' → logprob: -15.26252269744873

Token 356: '_cc' (ID: 69524)
  Prédit: '_cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -0.00018911674851551652
    2. 'cc' → logprob: -8.625188827514648
    3. '(cc' → logprob: -12.250188827514648
    4. 'check' → logprob: -13.500188827514648
    5. '_check' → logprob: -13.750188827514648
    6. '(check' → logprob: -14.375188827514648
    7. '```' → logprob: -15.250188827514648
    8. '_CC' → logprob: -15.375188827514648
    9. '(' → logprob: -15.625188827514648
    10. 'CC' → logprob: -15.750188827514648

Token 357: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00011641718447208405
    2. 'W' → logprob: -9.375116348266602
    3. 'p' → logprob: -11.125116348266602
    4. 'cw' → logprob: -13.000116348266602
    5. '(p' → logprob: -13.375116348266602
    6. 'wc' → logprob: -13.375116348266602
    7. '```' → logprob: -13.375116348266602
    8. '   ' → logprob: -13.875116348266602
    9. '_w' → logprob: -14.187616348266602
    10. '(w' → logprob: -14.187616348266602

Token 358: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.759734732331708e-05
    2. '(' → logprob: -11.625017166137695
    3. ' (' → logprob: -12.375017166137695
    4. '(
' → logprob: -13.125017166137695
    5. ')' → logprob: -13.500017166137695
    6. 'p' → logprob: -14.375017166137695
    7. ')(' → logprob: -15.625017166137695
    8. '```' → logprob: -16.875017166137695
    9. '(P' → logprob: -17.375017166137695
    10. '
' → logprob: -17.500017166137695

Token 359: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0375523716211319
    2. '3' → logprob: -3.7875523567199707
    3. '1' → logprob: -5.412552356719971
    4. '2' → logprob: -5.662552356719971
    5. 'p' → logprob: -5.662552356719971
    6. '(p' → logprob: -6.537552356719971
    7. '(' → logprob: -7.412552356719971
    8. ',' → logprob: -8.162552833557129
    9. ')' → logprob: -9.162552833557129
    10. '```' → logprob: -9.787552833557129

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034261439577676356
    2. ',p' → logprob: -8.00034236907959
    3. ' ,' → logprob: -12.37534236907959
    4. ',
' → logprob: -13.37534236907959
    5. 'p' → logprob: -14.37534236907959
    6. '(p' → logprob: -15.37534236907959
    7. '<|end|>' → logprob: -15.37534236907959
    8. ' p' → logprob: -16.500343322753906
    9. ',

' → logprob: -16.625343322753906
    10. '(' → logprob: -16.625343322753906

Token 361: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005236717872321606
    2. ' p' → logprob: -5.255236625671387
    3. '<|end|>' → logprob: -13.255236625671387
    4. '1' → logprob: -14.255236625671387
    5. ' ' → logprob: -15.880236625671387
    6. ')' → logprob: -16.130237579345703
    7. '```' → logprob: -16.380237579345703
    8. ')p' → logprob: -16.630237579345703
    9. '   ' → logprob: -16.880237579345703
    10. '<p' → logprob: -17.255237579345703

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008293279446661472
    2. '3' → logprob: -4.883293151855469
    3. '2' → logprob: -7.383293151855469
    4. ' ' → logprob: -10.383293151855469
    5. ',' → logprob: -11.008293151855469
    6. ')' → logprob: -12.258293151855469
    7. '   ' → logprob: -12.758293151855469
    8. '```' → logprob: -13.008293151855469
    9. '-' → logprob: -13.383293151855469
    10. '<|end|>' → logprob: -14.008293151855469

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3502556085586548
    2. '(p' → logprob: -1.2252556085586548
    3. ',p' → logprob: -6.600255489349365
    4. '(' → logprob: -8.725255966186523
    5. ' ,' → logprob: -9.100255966186523
    6. 'p' → logprob: -9.475255966186523
    7. ',
' → logprob: -10.225255966186523
    8. ' (' → logprob: -10.600255966186523
    9. ')' → logprob: -11.350255966186523
    10. ',(' → logprob: -11.475255966186523

Token 364: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.506661833962426e-05
    2. ' p' → logprob: -9.37508487701416
    3. '(p' → logprob: -15.87508487701416
    4. ')p' → logprob: -17.125085830688477
    5. ')' → logprob: -17.750085830688477
    6. '   ' → logprob: -18.500085830688477
    7. '<p' → logprob: -19.125085830688477
    8. '
' → logprob: -19.250085830688477
    9. '	p' → logprob: -19.250085830688477
    10. '3' → logprob: -19.375085830688477

Token 365: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.319370302458992e-06
    2. ')' → logprob: -13.687505722045898
    3. '۳' → logprob: -14.250005722045898
    4. '
' → logprob: -14.312505722045898
    5. '2' → logprob: -14.750005722045898
    6. ' ' → logprob: -15.000005722045898
    7. '৩' → logprob: -15.500005722045898
    8. '٣' → logprob: -15.687505722045898
    9. '[' → logprob: -15.750005722045898
    10. '३' → logprob: -15.812505722045898

Token 366: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08562710881233215
    2. ' <=' → logprob: -3.7106270790100098
    3. '<=' → logprob: -3.8356270790100098
    4. ')<=' → logprob: -3.9606270790100098
    5. ' )' → logprob: -4.08562707901001
    6. ')>=' → logprob: -9.960627555847168
    7. ')<' → logprob: -10.210627555847168
    8. '<' → logprob: -12.085627555847168
    9. '>=' → logprob: -12.085627555847168
    10. ' >=' → logprob: -12.085627555847168

Token 367: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5490221977233887
    2. ')' → logprob: -1.4240221977233887
    3. ' <=' → logprob: -2.0490221977233887
    4. '>' → logprob: -3.6740221977233887
    5. ')<=' → logprob: -4.424022197723389
    6. '>=' → logprob: -4.674022197723389
    7. ' >' → logprob: -6.174022197723389
    8. ' >=' → logprob: -6.549022197723389
    9. ')>' → logprob: -6.799022197723389
    10. '<' → logprob: -7.299022197723389

Token 368: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026169343618676066
    2. ' ' → logprob: -8.250261306762695
    3. '
' → logprob: -15.000261306762695
    4. ')' → logprob: -17.250261306762695
    5. '۰' → logprob: -18.250261306762695
    6. '<|end|>' → logprob: -18.625261306762695
    7. '  
' → logprob: -19.250261306762695
    8. '   ' → logprob: -19.375261306762695
    9. '1' → logprob: -19.750261306762695
    10. '  ' → logprob: -19.750261306762695

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '-' → logprob: -16.37500762939453
    4. ')' → logprob: -17.50000762939453
    5. '۰' → logprob: -17.75000762939453
    6. '
' → logprob: -18.12500762939453
    7. '０' → logprob: -18.87500762939453
    8. '00' → logprob: -19.37500762939453
    9. '1' → logprob: -19.75000762939453
    10. '```' → logprob: -19.75000762939453

Token 370: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016817348077893257
    2. ')' → logprob: -4.641817569732666
    3. 'and' → logprob: -5.141817569732666
    4. ' )' → logprob: -6.766817569732666
    5. ' ' → logprob: -10.391817092895508
    6. ' or' → logprob: -12.641817092895508
    7. '    ' → logprob: -13.391817092895508
    8. '        ' → logprob: -14.016817092895508
    9. '<|end|>' → logprob: -14.391817092895508
    10. '	and' → logprob: -14.891817092895508

Token 371: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005935909226536751
    2. 'and' → logprob: -5.130936145782471
    3. '<|end|>' → logprob: -12.630935668945312
    4. ' ' → logprob: -13.630935668945312
    5. '	and' → logprob: -14.130935668945312
    6. '   ' → logprob: -14.505935668945312
    7. ' or' → logprob: -14.880935668945312
    8. '    ' → logprob: -15.130935668945312
    9. '       ' → logprob: -15.380935668945312
    10. '        ' → logprob: -16.130935668945312

Token 372: ' \
' (ID: 6814)
  Prédit: '(check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.006782046519219875
    2. ' (' → logprob: -5.006782054901123
    3. '   ' → logprob: -9.881781578063965
    4. 'check' → logprob: -11.881781578063965
    5. '(' → logprob: -12.756781578063965
    6. ' check' → logprob: -13.631781578063965
    7. ' ' → logprob: -13.881781578063965
    8. '  ' → logprob: -13.881781578063965
    9. '
' → logprob: -14.006781578063965
    10. '((' → logprob: -14.756781578063965

Token 373: '              ' (ID: 4442)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16114766895771027
    2. '(check' → logprob: -1.9111477136611938
    3. '   ' → logprob: -7.536147594451904
    4. ' check' → logprob: -8.411148071289062
    5. 'check' → logprob: -9.411148071289062
    6. '           ' → logprob: -10.911148071289062
    7. '       ' → logprob: -10.911148071289062
    8. '(' → logprob: -11.411148071289062
    9. ' ' → logprob: -11.536148071289062
    10. '  ' → logprob: -11.786148071289062

Token 374: ' (' (ID: 350)
  Prédit: '(check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(check' → logprob: -0.0703640803694725
    2. ' (' → logprob: -2.695363998413086
    3. 'check' → logprob: -8.195363998413086
    4. ' check' → logprob: -9.320363998413086
    5. '   ' → logprob: -10.695363998413086
    6. '(' (adapté à ' (') → logprob: -10.695363998413086
    7. ' ' → logprob: -12.070363998413086
    8. '  ' → logprob: -12.820363998413086
    9. '((' → logprob: -13.070363998413086
    10. '
' → logprob: -13.070363998413086

Token 375: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0019487487152218819
    2. '(check' → logprob: -6.876948833465576
    3. ' check' → logprob: -7.001948833465576
    4. ' (' → logprob: -12.626948356628418
    5. ')' → logprob: -14.251948356628418
    6. '   ' → logprob: -14.876948356628418
    7. '
' → logprob: -15.126948356628418
    8. '           ' → logprob: -15.251948356628418
    9. '  ' → logprob: -15.626948356628418
    10. ' ' → logprob: -15.751948356628418

Token 376: '_cc' (ID: 69524)
  Prédit: '_cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -3.214019307051785e-05
    2. 'cc' → logprob: -10.375032424926758
    3. '
' → logprob: -15.125032424926758
    4. 'def' → logprob: -16.000032424926758
    5. '(cc' → logprob: -16.125032424926758
    6. '_CC' → logprob: -16.500032424926758
    7. ' cc' → logprob: -16.875032424926758
    8. '_' → logprob: -16.875032424926758
    9. '```' → logprob: -16.875032424926758
    10. 'CC' → logprob: -17.125032424926758

Token 377: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.6550729419104755e-05
    2. 'cw' → logprob: -11.625036239624023
    3. 'W' → logprob: -12.000036239624023
    4. '_w' → logprob: -12.375036239624023
    5. 'wc' → logprob: -12.625036239624023
    6. '```' → logprob: -13.250036239624023
    7. 'p' → logprob: -13.375036239624023
    8. '
' → logprob: -13.375036239624023
    9. '(p' → logprob: -14.312536239624023
    10. 'wv' → logprob: -14.500036239624023

Token 378: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.478889215737581e-05
    2. 'p' → logprob: -9.875054359436035
    3. '(' → logprob: -12.750054359436035
    4. ')' → logprob: -16.25005531311035
    5. '(
' → logprob: -16.37505531311035
    6. ' (' → logprob: -16.50005531311035
    7. ' p' → logprob: -17.25005531311035
    8. '<p' → logprob: -17.25005531311035
    9. '```' → logprob: -18.25005531311035
    10. '(line' → logprob: -18.37505531311035

Token 379: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010245933663100004
    2. '2' → logprob: -7.2510247230529785
    3. '1' → logprob: -8.12602424621582
    4. 'p' → logprob: -12.12602424621582
    5. ' ' → logprob: -12.75102424621582
    6. '3' → logprob: -13.12602424621582
    7. ',' → logprob: -13.25102424621582
    8. ')' → logprob: -13.25102424621582
    9. '(p' → logprob: -14.12602424621582
    10. '[' → logprob: -14.25102424621582

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007193420315161347
    2. ',p' → logprob: -7.3757195472717285
    3. ' ,' → logprob: -10.12571907043457
    4. '(p' → logprob: -10.25071907043457
    5. 'p' → logprob: -11.25071907043457
    6. '(' → logprob: -12.87571907043457
    7. ' p' → logprob: -13.87571907043457
    8. '<|end|>' → logprob: -14.62571907043457
    9. ' ' → logprob: -15.75071907043457
    10. ',
' → logprob: -16.12571907043457

Token 381: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005530327325686812
    2. ' p' → logprob: -7.500553131103516
    3. '<|end|>' → logprob: -17.500553131103516
    4. ' ' → logprob: -17.625553131103516
    5. ',' → logprob: -18.750553131103516
    6. ')' → logprob: -18.750553131103516
    7. '```' → logprob: -18.750553131103516
    8. ')p' → logprob: -18.875553131103516
    9. '<p' → logprob: -19.375553131103516
    10. '   ' → logprob: -19.625553131103516

Token 382: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.625000953674316
    3. '<|end|>' → logprob: -15.750000953674316
    4. 'p' → logprob: -16.375
    5. '۳' → logprob: -16.75
    6. '0' → logprob: -16.75
    7. '  ' → logprob: -17.4375
    8. '   ' → logprob: -17.4375
    9. '1' → logprob: -17.8125
    10. 'line' → logprob: -18.125

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011865830048918724
    2. 'p' → logprob: -4.886865615844727
    3. ',p' → logprob: -5.636865615844727
    4. '(p' → logprob: -7.386865615844727
    5. ' p' → logprob: -10.136865615844727
    6. ' ,' → logprob: -10.886865615844727
    7. '[' → logprob: -12.761865615844727
    8. '<|end|>' → logprob: -13.511865615844727
    9. '(' → logprob: -13.636865615844727
    10. '[p' → logprob: -14.011865615844727

Token 384: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.541112427134067e-05
    2. ' p' → logprob: -9.500075340270996
    3. '(p' → logprob: -15.875075340270996
    4. '<|end|>' → logprob: -15.875075340270996
    5. '0' → logprob: -16.250076293945312
    6. ')' → logprob: -17.125076293945312
    7. ' ' → logprob: -17.500076293945312
    8. ')p' → logprob: -17.625076293945312
    9. '   ' → logprob: -18.250076293945312
    10. '<p' → logprob: -18.375076293945312

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.750000953674316
    3. 'p' → logprob: -16.375
    4. '1' → logprob: -17.0
    5. '۰' → logprob: -17.125
    6. '2' → logprob: -17.5
    7. 'o' → logprob: -17.5
    8. '<|end|>' → logprob: -17.5625
    9. '   ' → logprob: -17.8125
    10. ')' → logprob: -17.8125

Token 386: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.8497312895488e-05
    2. ')' → logprob: -10.000068664550781
    3. ',p' → logprob: -11.125068664550781
    4. ' ,' → logprob: -12.000068664550781
    5. 'p' → logprob: -13.750068664550781
    6. ',
' → logprob: -14.375068664550781
    7. '<p' → logprob: -16.12506866455078
    8. '(p' → logprob: -16.25006866455078
    9. ')p' → logprob: -16.50006866455078
    10. '),' → logprob: -16.75006866455078

Token 387: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3700019419193268
    2. ',' → logprob: -1.2450019121170044
    3. '*' → logprob: -3.870002031326294
    4. ')' → logprob: -8.120001792907715
    5. ' ,' → logprob: -9.620001792907715
    6. ' *
' → logprob: -10.495001792907715
    7. ' ' → logprob: -11.245001792907715
    8. '*,' → logprob: -11.370001792907715
    9. ')*' → logprob: -11.370001792907715
    10. '()*' → logprob: -12.245001792907715

Token 388: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0021924946922808886
    2. ' check' → logprob: -6.127192497253418
    3. '(check' → logprob: -11.877192497253418
    4. '
' → logprob: -15.502192497253418
    5. '.check' → logprob: -16.2521915435791
    6. '	check' → logprob: -16.7521915435791
    7. '_check' → logprob: -17.2521915435791
    8. ')' → logprob: -17.2521915435791
    9. '```' → logprob: -17.8771915435791
    10. '`' → logprob: -18.5021915435791

Token 389: '_cc' (ID: 69524)
  Prédit: '_cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -0.004110103938728571
    2. 'cc' → logprob: -5.504110336303711
    3. '(cc' → logprob: -11.754110336303711
    4. '0' → logprob: -12.379110336303711
    5. 'Cc' → logprob: -12.629110336303711
    6. 'def' → logprob: -12.879110336303711
    7. '(p' → logprob: -13.129110336303711
    8. 'CC' → logprob: -13.254110336303711
    9. '
' → logprob: -13.379110336303711
    10. '(' → logprob: -13.504110336303711

Token 390: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.800739018013701e-05
    2. '_w' → logprob: -10.8750581741333
    3. 'W' → logprob: -11.0000581741333
    4. 'p' → logprob: -12.1250581741333
    5. 'cw' → logprob: -12.2500581741333
    6. '
' → logprob: -13.3750581741333
    7. '(w' → logprob: -13.5000581741333
    8. '(' → logprob: -13.6250581741333
    9. '0' → logprob: -13.7500581741333
    10. 'c' → logprob: -14.1250581741333

Token 391: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0564331205387134e-05
    2. 'p' → logprob: -11.75001049041748
    3. '(' → logprob: -13.37501049041748
    4. ')' → logprob: -15.25001049041748
    5. '```' → logprob: -15.50001049041748
    6. '<p' → logprob: -15.62501049041748
    7. ' (' → logprob: -15.62501049041748
    8. '(
' → logprob: -15.75001049041748
    9. '[p' → logprob: -17.375011444091797
    10. '<|end|>' → logprob: -17.375011444091797

Token 392: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0009716100175864995
    2. 'p' → logprob: -7.000971794128418
    3. '(' → logprob: -10.125971794128418
    4. '(p' → logprob: -11.125971794128418
    5. ' ' → logprob: -13.125971794128418
    6. '```' → logprob: -13.625971794128418
    7. ' p' → logprob: -14.875971794128418
    8. '[' → logprob: -15.125971794128418
    9. ')' → logprob: -15.250971794128418
    10. ',' → logprob: -15.250971794128418

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017456236528232694
    2. ',p' → logprob: -6.376745700836182
    3. ' ,' → logprob: -10.501745223999023
    4. 'p' → logprob: -11.626745223999023
    5. '(p' → logprob: -12.751745223999023
    6. ' p' → logprob: -12.876745223999023
    7. '[' → logprob: -15.251745223999023
    8. ' ' → logprob: -15.376745223999023
    9. ',
' → logprob: -15.751745223999023
    10. ',line' → logprob: -16.001745223999023

Token 394: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00011272187111899257
    2. ' p' → logprob: -9.125112533569336
    3. '```' → logprob: -13.625112533569336
    4. '3' → logprob: -13.875112533569336
    5. ' ' → logprob: -14.750112533569336
    6. ')' → logprob: -15.875112533569336
    7. '...' → logprob: -15.875112533569336
    8. '   ' → logprob: -15.875112533569336
    9. '<p' → logprob: -16.125112533569336
    10. '``' → logprob: -16.375112533569336

Token 395: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.500003814697266
    3. '1' → logprob: -14.750003814697266
    4. '   ' → logprob: -14.750003814697266
    5. 'line' → logprob: -14.812503814697266
    6. '
' → logprob: -15.875003814697266
    7. '```' → logprob: -16.062503814697266
    8. 'm' → logprob: -16.250003814697266
    9. '    ' → logprob: -16.250003814697266
    10. ' line' → logprob: -16.375003814697266

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012983977794647217
    2. 'p' → logprob: -5.012983798980713
    3. '(p' → logprob: -5.512983798980713
    4. ',p' → logprob: -6.137983798980713
    5. '(' → logprob: -10.387984275817871
    6. ' ,' → logprob: -11.262984275817871
    7. ' p' → logprob: -12.262984275817871
    8. ',
' → logprob: -13.262984275817871
    9. '```' → logprob: -13.637984275817871
    10. '<p' → logprob: -14.262984275817871

Token 397: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00026896485360339284
    2. ' p' → logprob: -8.250268936157227
    3. '1' → logprob: -12.250268936157227
    4. '   ' → logprob: -13.625268936157227
    5. '
' → logprob: -14.875268936157227
    6. ' ' → logprob: -14.875268936157227
    7. '     ' → logprob: -15.375268936157227
    8. '       ' → logprob: -15.625268936157227
    9. '    ' → logprob: -16.000268936157227
    10. '  ' → logprob: -16.125268936157227

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. '3' → logprob: -11.625012397766113
    3. '0' → logprob: -13.875012397766113
    4. '```' → logprob: -14.000012397766113
    5. ' ' → logprob: -14.250012397766113
    6. '
' → logprob: -14.500012397766113
    7. ')' → logprob: -14.875012397766113
    8. '   ' → logprob: -16.18751335144043
    9. 'p' → logprob: -16.68751335144043
    10. '2' → logprob: -17.06251335144043

Token 399: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.23156683146953583
    2. ')' → logprob: -1.8565667867660522
    3. '<=' → logprob: -3.481566905975342
    4. ')<=' → logprob: -3.981566905975342
    5. ' )' → logprob: -7.106566905975342
    6. ']<=' → logprob: -9.106566429138184
    7. ' ' → logprob: -9.731566429138184
    8. '()' → logprob: -10.481566429138184
    9. '[]' → logprob: -10.981566429138184
    10. '   ' → logprob: -11.356566429138184

Token 400: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.31338492035865784
    2. '<=' → logprob: -1.3133848905563354
    3. ')<=' → logprob: -9.688385009765625
    4. ')' → logprob: -9.813385009765625
    5. '```' → logprob: -13.063385009765625
    6. '<' → logprob: -13.563385009765625
    7. ' ' → logprob: -14.313385009765625
    8. ' )' → logprob: -14.563385009765625
    9. '[' → logprob: -14.688385009765625
    10. ']<=' → logprob: -14.688385009765625

Token 401: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006720229052007198
    2. ' ' → logprob: -5.006720066070557
    3. '   ' → logprob: -13.131720542907715
    4. ')' → logprob: -14.006720542907715
    5. '  ' → logprob: -15.069220542907715
    6. '<|end|>' → logprob: -15.506720542907715
    7. '```' → logprob: -15.506720542907715
    8. '
' → logprob: -15.944220542907715
    9. '۰' → logprob: -16.0692195892334
    10. '00' → logprob: -16.3192195892334

Token 402: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003374886582605541
    2. ' ' → logprob: -8.000337600708008
    3. ')' → logprob: -14.250337600708008
    4. '   ' → logprob: -14.375337600708008
    5. '00' → logprob: -15.937837600708008
    6. '  ' → logprob: -16.062837600708008
    7. '```' → logprob: -16.250337600708008
    8. '
' → logprob: -16.750337600708008
    9. '۰' → logprob: -17.062837600708008
    10. '`' → logprob: -17.500337600708008

Token 403: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005620885640382767
    2. ')
' → logprob: -8.250561714172363
    3. '       ' → logprob: -9.000561714172363
    4. '<|end|>' → logprob: -9.625561714172363
    5. ' )' → logprob: -9.875561714172363
    6. ')return' → logprob: -10.625561714172363
    7. '):' → logprob: -11.375561714172363
    8. '):
' → logprob: -11.875561714172363
    9. '   ' → logprob: -12.000561714172363
    10. '<|end|>' → logprob: -13.125561714172363

Token 404: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005180051666684449
    2. '   ' → logprob: -8.375517845153809
    3. '<|end|>' → logprob: -9.250517845153809
    4. 'return' → logprob: -9.625517845153809
    5. '        
' → logprob: -10.000517845153809
    6. '	' → logprob: -11.375517845153809
    7. '           ' → logprob: -11.375517845153809
    8. '
' → logprob: -11.625517845153809
    9. ' return' → logprob: -11.750517845153809
    10. ')' → logprob: -12.375517845153809

Token 405: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5445066690444946
    2. 'if' (adapté à ' if') → logprob: -1.0445066690444946
    3. 'print' → logprob: -3.544506549835205
    4. 'yield' → logprob: -3.794506549835205
    5. ' if' → logprob: -4.294506549835205
    6. ' yield' → logprob: -6.169506549835205
    7. '   ' → logprob: -7.794506549835205
    8. 'return' → logprob: -7.919506549835205
    9. ' print' → logprob: -9.919507026672363
    10. '           ' → logprob: -10.669507026672363

Token 406: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3132656216621399
    2. ' flag' → logprob: -1.3132655620574951
    3. '	flag' → logprob: -13.188265800476074
    4. '           ' → logprob: -13.688265800476074
    5. '(flag' → logprob: -14.563265800476074
    6. '   ' → logprob: -14.938265800476074
    7. '       ' → logprob: -16.813264846801758
    8. ' ' → logprob: -17.813264846801758
    9. '    ' → logprob: -17.938264846801758
    10. '_flag' → logprob: -18.188264846801758

Token 407: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029686689376831055
    2. ':
' → logprob: -6.127968788146973
    3. '==' → logprob: -8.002968788146973
    4. ':return' → logprob: -9.127968788146973
    5. '           ' → logprob: -9.252968788146973
    6. ' ==' → logprob: -9.377968788146973
    7. '       ' → logprob: -9.627968788146973
    8. ' :' → logprob: -10.752968788146973
    9. '):' → logprob: -10.877968788146973
    10. '=True' → logprob: -11.252968788146973

Token 408: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015015328535810113
    2. 'return' → logprob: -7.501501560211182
    3. ' return' → logprob: -7.876501560211182
    4. '	       ' → logprob: -8.376501083374023
    5. 'print' → logprob: -8.751501083374023
    6. '		' → logprob: -9.501501083374023
    7. ' print' → logprob: -10.376501083374023
    8. '               ' → logprob: -11.251501083374023
    9. '       ' → logprob: -11.251501083374023
    10. '
' → logprob: -11.376501083374023

Token 409: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.040039654821157455
    2. 'return' → logprob: -3.415039539337158
    3. 'yield' → logprob: -5.290039539337158
    4. '           ' → logprob: -6.915039539337158
    5. ' print' → logprob: -8.665040016174316
    6. '       ' → logprob: -9.165040016174316
    7. ' return' → logprob: -10.415040016174316
    8. ' yield' → logprob: -11.290040016174316
    9. '   ' → logprob: -11.290040016174316
    10. '```' → logprob: -12.790040016174316

Token 410: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018542143516242504
    2. '1' → logprob: -8.625185012817383
    3. '('' → logprob: -12.250185012817383
    4. '("' → logprob: -14.000185012817383
    5. '(
' → logprob: -15.500185012817383
    6. '"' → logprob: -18.750185012817383
    7. ' (' → logprob: -19.250185012817383
    8. ' ' → logprob: -19.875185012817383
    9. '`' → logprob: -20.625185012817383
    10. '()' → logprob: -20.875185012817383

Token 411: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '   ' → logprob: -17.625
    4. ''' → logprob: -18.5
    5. '       ' → logprob: -19.125
    6. '           ' → logprob: -19.625
    7. '１' → logprob: -19.625
    8. '               ' → logprob: -20.0
    9. '                   ' → logprob: -20.25
    10. '0' → logprob: -20.25

Token 412: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.019203681498765945
    2. '')
' → logprob: -4.0192036628723145
    3. ')' → logprob: -6.8942036628723145
    4. ')
' → logprob: -10.769204139709473
    5. '')
' → logprob: -11.519204139709473
    6. ''' → logprob: -13.269204139709473
    7. '\n' → logprob: -13.644204139709473
    8. '")' → logprob: -13.644204139709473
    9. '   ' → logprob: -14.019204139709473
    10. 'else' → logprob: -14.144204139709473

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02650117501616478
    2. '           ' → logprob: -3.651501178741455
    3. 'else' → logprob: -9.151500701904297
    4. '   ' → logprob: -9.776500701904297
    5. ' else' → logprob: -11.026500701904297
    6. '```' → logprob: -12.151500701904297
    7. '<|end|>' → logprob: -12.276500701904297
    8. '	   ' → logprob: -13.276500701904297
    9. ' ' → logprob: -13.401500701904297
    10. 'continue' → logprob: -13.401500701904297

Token 414: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3545687198638916
    2. 'else' (adapté à ' else') → logprob: -1.3545687198638916
    3. ' else' → logprob: -3.2295687198638916
    4. '   ' → logprob: -7.8545684814453125
    5. '           ' → logprob: -8.354568481445312
    6. '	else' → logprob: -9.104568481445312
    7. ' ' → logprob: -9.354568481445312
    8. '	' → logprob: -10.854568481445312
    9. '     ' → logprob: -11.104568481445312
    10. '      ' → logprob: -11.979568481445312

Token 415: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1629515439271927
    2. ':' → logprob: -2.0379514694213867
    3. ':
' → logprob: -4.412951469421387
    4. '       ' → logprob: -4.912951469421387
    5. '          ' → logprob: -8.912951469421387
    6. '               ' → logprob: -9.037951469421387
    7. '   ' → logprob: -9.287951469421387
    8. '         ' → logprob: -9.787951469421387
    9. ' print' → logprob: -9.787951469421387
    10. '        ' → logprob: -10.662951469421387

Token 416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14297454059123993
    2. 'print' → logprob: -2.142974615097046
    3. ' print' → logprob: -4.142974376678467
    4. '       ' → logprob: -11.142974853515625
    5. '		' → logprob: -11.392974853515625
    6. '	print' → logprob: -12.392974853515625
    7. '	       ' → logprob: -12.517974853515625
    8. '```' → logprob: -12.517974853515625
    9. '   ' → logprob: -13.392974853515625
    10. '(print' → logprob: -14.142974853515625

Token 417: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005532711511477828
    2. ' print' → logprob: -7.500553131103516
    3. '           ' → logprob: -15.500553131103516
    4. '       ' → logprob: -17.000553131103516
    5. '	print' → logprob: -17.500553131103516
    6. '```' → logprob: -17.875553131103516
    7. '   ' → logprob: -19.875553131103516
    8. '.print' → logprob: -20.125553131103516
    9. 'pr' → logprob: -20.750553131103516
    10. 'printf' → logprob: -21.000553131103516

Token 418: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. '("' → logprob: -16.750001907348633
    4. '()' → logprob: -17.000001907348633
    5. '(
' → logprob: -17.875001907348633
    6. ''' → logprob: -18.375001907348633
    7. ' ('' → logprob: -19.500001907348633
    8. '(('' → logprob: -20.125001907348633
    9. '('(' → logprob: -21.125001907348633
    10. '('.')' → logprob: -21.250001907348633

Token 419: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ''' → logprob: -12.75000286102295
    3. '('' → logprob: -20.500003814697266
    4. '０' → logprob: -20.500003814697266
    5. ' ' → logprob: -20.750003814697266
    6. '۰' → logprob: -20.750003814697266
    7. '')' → logprob: -21.375003814697266
    8. '٠' → logprob: -22.750003814697266
    9. '০' → logprob: -23.250003814697266
    10. '"' → logprob: -23.875003814697266

Token 420: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31339284777641296
    2. '')' → logprob: -1.3133928775787354
    3. '<|end|>' → logprob: -9.563392639160156
    4. '")' → logprob: -10.188392639160156
    5. '```' → logprob: -11.688392639160156
    6. ')
' → logprob: -12.063392639160156
    7. '`)' → logprob: -12.438392639160156
    8. '')
' → logprob: -13.563392639160156
    9. ' )' → logprob: -13.813392639160156
    10. '\n' → logprob: -14.438392639160156

Token 421: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013787815347313881
    2. 'for' → logprob: -5.513787746429443
    3. 'def' → logprob: -5.513787746429443
    4. 'lines' → logprob: -5.638787746429443
    5. 'n' → logprob: -6.263787746429443
    6. ' if' → logprob: -10.013788223266602
    7. 'data' → logprob: -10.138788223266602
    8. 'num' → logprob: -10.513788223266602
    9. '#' → logprob: -10.888788223266602
    10. '```' → logprob: -11.388788223266602

Token 422: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0908796414732933
    2. 'lines' → logprob: -2.8408796787261963
    3. '
' → logprob: -5.215879440307617
    4. '<|end|>' → logprob: -5.215879440307617
    5. 'n' → logprob: -5.465879440307617
    6. '#' → logprob: -5.590879440307617
    7. 'def' → logprob: -6.090879440307617
    8. '_lines' → logprob: -6.340879440307617
    9. 'for' → logprob: -6.590879440307617
    10. 'input' → logprob: -6.965879440307617

Token 423: ' None' (ID: 4662)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2690931260585785
    2. 'lines' → logprob: -2.1440930366516113
    3. 'def' → logprob: -2.2690930366516113
    4. '<|end|>' → logprob: -5.394093036651611
    5. '
' → logprob: -6.269093036651611
    6. 'n' → logprob: -6.519093036651611
    7. '_lines' → logprob: -6.644093036651611
    8. 'for' → logprob: -6.644093036651611
    9. '#' → logprob: -6.769093036651611
    10. 'input' → logprob: -7.144093036651611

Token 424: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004454923793673515
    2. 'n' → logprob: -6.254455089569092
    3. 'lines' → logprob: -6.754455089569092
    4. 'def' → logprob: -6.879455089569092
    5. 'for' → logprob: -8.254454612731934
    6. 'data' → logprob: -10.254454612731934
    7. 'input' → logprob: -11.004454612731934
    8. ' if' → logprob: -12.004454612731934
    9. 'num' → logprob: -12.504454612731934
    10. '```' → logprob: -12.879454612731934

Token 425: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00467291846871376
    2. 'n' → logprob: -6.254673004150391
    3. 'def' → logprob: -6.254673004150391
    4. 'lines' → logprob: -7.254673004150391
    5. 'for' → logprob: -9.25467300415039
    6. 'input' → logprob: -11.75467300415039
    7. 'data' → logprob: -12.25467300415039
    8. '_lines' → logprob: -13.00467300415039
    9. ' if' → logprob: -14.12967300415039
    10. 'num' → logprob: -14.75467300415039

Token 426: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.014174791052937508
    2. '__' → logprob: -4.264174938201904
    3. '_name' → logprob: -11.764174461364746
    4. 'name' → logprob: -13.264174461364746
    5. '___' → logprob: -14.014174461364746
    6. '_' → logprob: -14.139174461364746
    7. ' ' → logprob: -16.639175415039062
    8. 'Name' → logprob: -16.764175415039062
    9. ' ___' → logprob: -16.889175415039062
    10. ' name' → logprob: -17.389175415039062

Token 427: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22601035237312317
    2. ' __' → logprob: -1.6010103225708008
    3. ' ==' → logprob: -8.1010103225708
    4. 'name' → logprob: -8.9760103225708
    5. '_' → logprob: -9.7260103225708
    6. '_name' → logprob: -9.7260103225708
    7. '__':
' → logprob: -11.9760103225708
    8. ' _' → logprob: -12.1010103225708
    9. '__
' → logprob: -12.1010103225708
    10. '==' → logprob: -12.1010103225708

Token 428: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010270876373397186
    2. '==' → logprob: -9.625102996826172
    3. ' ==' → logprob: -11.125102996826172
    4. '__.__' → logprob: -11.375102996826172
    5. '__
' → logprob: -13.000102996826172
    6. '__.' → logprob: -13.250102996826172
    7. '____' → logprob: -13.500102996826172
    8. '___' → logprob: -13.625102996826172
    9. '=="' → logprob: -13.625102996826172
    10. '_' → logprob: -14.875102996826172

Token 429: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015138531103730202
    2. ' ==' → logprob: -4.515138626098633
    3. '==' → logprob: -5.515138626098633
    4. '=="' → logprob: -10.640138626098633
    5. '=='' → logprob: -11.890138626098633
    6. '__.__' → logprob: -12.140138626098633
    7. '___' → logprob: -12.515138626098633
    8. '__
' → logprob: -12.640138626098633
    9. '__.' → logprob: -13.015138626098633
    10. ' __' → logprob: -13.015138626098633

Token 430: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01818377524614334
    2. ''' → logprob: -4.018183708190918
    3. '__' → logprob: -10.768183708190918
    4. ' "__' → logprob: -11.393183708190918
    5. '"name' → logprob: -14.893183708190918
    6. ' '__' → logprob: -15.018183708190918
    7. '   ' → logprob: -15.393183708190918
    8. '"user' → logprob: -15.768183708190918
    9. ''"' → logprob: -16.393184661865234
    10. ''name' → logprob: -17.018184661865234

Token 431: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.5491004129871726e-05
    2. 'name' → logprob: -10.000045776367188
    3. '_main' → logprob: -18.750045776367188
    4. '__' → logprob: -19.375045776367188
    5. ' main' → logprob: -20.000045776367188
    6. 'm' → logprob: -20.000045776367188
    7. 'ma' → logprob: -20.125045776367188
    8. '(main' → logprob: -22.250045776367188
    9. '	main' → logprob: -22.875045776367188
    10. 'maine' → logprob: -23.125045776367188

Token 432: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.005446604453027248
    2. '__' → logprob: -5.255446434020996
    3. '__":
' → logprob: -8.755446434020996
    4. '_' → logprob: -10.380446434020996
    5. '__:' → logprob: -11.630446434020996
    6. '':
' → logprob: -12.130446434020996
    7. '():
' → logprob: -12.255446434020996
    8. ':' → logprob: -12.880446434020996
    9. '':' → logprob: -13.755446434020996
    10. ':
' → logprob: -14.005446434020996

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011419138871133327
    2. ' n' → logprob: -5.386419296264648
    3. 'n' → logprob: -5.636419296264648
    4. ' lines' → logprob: -6.386419296264648
    5. ' input' → logprob: -6.636419296264648
    6. 'input' → logprob: -8.761419296264648
    7. '	n' → logprob: -10.636419296264648
    8. '	lines' → logprob: -11.136419296264648
    9. 'lines' → logprob: -12.386419296264648
    10. 'import' → logprob: -12.511419296264648

Token 434: ' _' (ID: 1175)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09883181750774384
    2. 'input' → logprob: -2.59883189201355
    3. '   ' → logprob: -4.098831653594971
    4. ' input' → logprob: -6.348831653594971
    5. ' n' → logprob: -7.348831653594971
    6. 'import' → logprob: -7.598831653594971
    7. 'N' → logprob: -8.598832130432129
    8. 't' → logprob: -10.473832130432129
    9. 'num' → logprob: -10.848832130432129
    10. 'lines' → logprob: -10.973832130432129

Token 435: 'input' (ID: 2586)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.03687024489045143
    2. 'ines' → logprob: -4.16187047958374
    3. '=' → logprob: -4.66187047958374
    4. 'n' → logprob: -5.03687047958374
    5. ' =' → logprob: -5.91187047958374
    6. 'input' → logprob: -6.53687047958374
    7. 'ine' → logprob: -8.161870002746582
    8. '_lines' → logprob: -8.786870002746582
    9. 'import' → logprob: -9.911870002746582
    10. '   ' → logprob: -12.161870002746582

Token 436: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034354906529188156
    2. ' =' → logprob: -3.9093549251556396
    3. '_lines' → logprob: -4.4093546867370605
    4. '=sys' → logprob: -7.5343546867370605
    5. 'lines' → logprob: -7.6593546867370605
    6. '_' → logprob: -8.534355163574219
    7. '_=' → logprob: -8.784355163574219
    8. 's' → logprob: -9.409355163574219
    9. 'ines' → logprob: -9.534355163574219
    10. '_data' → logprob: -11.284355163574219

Token 437: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.002206997014582157
    2. ' sys' → logprob: -6.252206802368164
    3. '[' → logprob: -8.252206802368164
    4. '(sys' → logprob: -12.252206802368164
    5. '[int' → logprob: -12.502206802368164
    6. ' [' → logprob: -12.752206802368164
    7. '[s' → logprob: -13.252206802368164
    8. 'list' → logprob: -13.252206802368164
    9. '=sys' → logprob: -13.627206802368164
    10. '[list' → logprob: -14.127206802368164

Token 438: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.5491004129871726e-05
    2. 'stdin' → logprob: -11.125045776367188
    3. '.argv' → logprob: -11.250045776367188
    4. '.' → logprob: -11.250045776367188
    5. '.stdout' → logprob: -12.375045776367188
    6. '.stderr' → logprob: -15.875045776367188
    7. '.std' → logprob: -16.125045776367188
    8. ' stdin' → logprob: -16.750045776367188
    9. '(stdin' → logprob: -16.875045776367188
    10. '._' → logprob: -17.375045776367188

Token 439: '.readlines' (ID: 92237)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3922101855278015
    2. '.readlines' → logprob: -1.1422102451324463
    3. '.read' → logprob: -5.517210006713867
    4. 'read' → logprob: -6.767210006713867
    5. '.' → logprob: -8.892210006713867
    6. 'lines' → logprob: -12.017210006713867
    7. 'buffer' → logprob: -12.392210006713867
    8. '.buffer' → logprob: -12.517210006713867
    9. '_read' → logprob: -14.142210006713867
    10. 'import' → logprob: -14.392210006713867

Token 440: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.7146746763028204e-05
    2. ' ()' → logprob: -11.25003719329834
    3. '()
' → logprob: -12.25003719329834
    4. '()[' → logprob: -12.25003719329834
    5. '())' → logprob: -12.75003719329834
    6. '()]' → logprob: -12.87503719329834
    7. '()`' → logprob: -13.00003719329834
    8. '(' → logprob: -13.12503719329834
    9. '(True' → logprob: -13.25003719329834
    10. '（）' → logprob: -14.00003719329834

Token 441: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23258300125598907
    2. '   ' → logprob: -1.6075830459594727
    3. ' n' → logprob: -5.607583045959473
    4. 'num' → logprob: -5.982583045959473
    5. 't' → logprob: -7.732583045959473
    6. 'lines' → logprob: -8.857583045959473
    7. '_n' → logprob: -9.482583045959473
    8. '
' → logprob: -9.607583045959473
    9. '	n' → logprob: -10.357583045959473
    10. '    
' → logprob: -10.357583045959473

Token 442: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001970031065866351
    2. '_n' → logprob: -7.626969814300537
    3. 'lines' → logprob: -7.876969814300537
    4. 't' → logprob: -8.126970291137695
    5. 'N' → logprob: -8.376970291137695
    6. 'num' → logprob: -8.626970291137695
    7. 'for' → logprob: -8.876970291137695
    8. 'T' → logprob: -9.001970291137695
    9. '   ' → logprob: -10.126970291137695
    10. ' n' → logprob: -10.251970291137695

Token 443: '_num' (ID: 9834)
  Prédit: 'ines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.00018220659694634378
    2. '_lines' → logprob: -9.375182151794434
    3. 'ine' → logprob: -10.000182151794434
    4. '_' → logprob: -10.625182151794434
    5. ' =' → logprob: -11.750182151794434
    6. 'lines' → logprob: -11.875182151794434
    7. '=' → logprob: -12.125182151794434
    8. 'inen' → logprob: -14.000182151794434
    9. '   ' → logprob: -14.250182151794434
    10. 'nes' → logprob: -14.250182151794434

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05283443629741669
    2. '=' → logprob: -3.5528345108032227
    3. 'ines' → logprob: -3.8028345108032227
    4. 'ine' → logprob: -8.302834510803223
    5. '   ' → logprob: -8.677834510803223
    6. '=int' → logprob: -10.427834510803223
    7. 's' → logprob: -10.927834510803223
    8. 'e' → logprob: -11.677834510803223
    9. '       ' → logprob: -11.927834510803223
    10. 'es' → logprob: -11.927834510803223

Token 445: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005536287208087742
    2. ' int' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.125554084777832
    4. '_int' → logprob: -15.375554084777832
    5. '=int' → logprob: -15.625554084777832
    6. 'len' → logprob: -17.500553131103516
    7. '	int' → logprob: -18.375553131103516
    8. '[int' → logprob: -18.500553131103516
    9. '(int' → logprob: -18.750553131103516
    10. '
' → logprob: -18.875553131103516

Token 446: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.011158295907080173
    2. '_input' → logprob: -4.511158466339111
    3. '(' → logprob: -9.136157989501953
    4. '(
' → logprob: -14.136157989501953
    5. '_line' → logprob: -14.886157989501953
    6. '_' → logprob: -15.011157989501953
    7. ' _' → logprob: -15.261157989501953
    8. '((_' → logprob: -15.386157989501953
    9. '(

' → logprob: -15.511157989501953
    10. ')(_' → logprob: -15.761157989501953

Token 447: 'input' (ID: 2586)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.006715728435665369
    2. 'input' → logprob: -5.006715774536133
    3. '(input' → logprob: -15.131715774536133
    4. ' input' → logprob: -16.756715774536133
    5. 'Input' → logprob: -17.381715774536133
    6. '[input' → logprob: -18.006715774536133
    7. ' _' → logprob: -18.881715774536133
    8. '<input' → logprob: -19.006715774536133
    9. '_INPUT' → logprob: -19.131715774536133
    10. 'line' → logprob: -19.131715774536133

Token 448: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. '()[' → logprob: -15.500001907348633
    4. '0' → logprob: -17.750001907348633
    5. '```' → logprob: -18.500001907348633
    6. ' [' → logprob: -18.750001907348633
    7. '.pop' → logprob: -19.125001907348633
    8. ')' → logprob: -19.875001907348633
    9. '[
' → logprob: -20.375001907348633
    10. '([' → logprob: -20.375001907348633

Token 449: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '[' → logprob: -21.5
    4. '
' → logprob: -21.75
    5. '   ' → logprob: -22.0
    6. '1' → logprob: -22.875
    7. '۰' → logprob: -23.0
    8. '000' → logprob: -23.125
    9. '```' → logprob: -23.375
    10. '00' → logprob: -23.75

Token 450: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012914314866065979
    2. '].' → logprob: -4.387914180755615
    3. '.strip' → logprob: -8.387914657592773
    4. ')' → logprob: -9.262914657592773
    5. ']' → logprob: -9.762914657592773
    6. 'strip' → logprob: -12.012914657592773
    7. '.rstrip' → logprob: -12.012914657592773
    8. 'rstrip' → logprob: -12.762914657592773
    9. '])-' → logprob: -12.887914657592773
    10. ' ])' → logprob: -13.137914657592773

Token 451: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31439948081970215
    2. '_lines' → logprob: -1.3143994808197021
    3. 'lines' → logprob: -6.939399719238281
    4. 'for' → logprob: -9.814399719238281
    5. '	lines' → logprob: -9.939399719238281
    6. ' lines' → logprob: -10.689399719238281
    7. '    
' → logprob: -10.814399719238281
    8. ' for' → logprob: -12.814399719238281
    9. '_input' → logprob: -12.939399719238281
    10. '  ' → logprob: -13.064399719238281

Token 452: ' lines' (ID: 8698)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.4744828939437866
    2. 'lines' (adapté à ' lines') → logprob: -1.0994828939437866
    3. '   ' → logprob: -3.599483013153076
    4. 'check' → logprob: -4.974483013153076
    5. ' lines' → logprob: -4.974483013153076
    6. 'for' → logprob: -6.724483013153076
    7. ' check' → logprob: -7.224483013153076
    8. 'data' → logprob: -7.724483013153076
    9. 'input' → logprob: -7.974483013153076
    10. ' for' → logprob: -8.724482536315918

Token 453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024473309516907
    2. ' =' → logprob: -1.9102447032928467
    3. '_lines' → logprob: -11.160244941711426
    4. '=_' → logprob: -12.410244941711426
    5. '=line' → logprob: -14.410244941711426
    6. 'lines' → logprob: -14.660244941711426
    7. 'ines' → logprob: -15.410244941711426
    8. '＝' → logprob: -15.535244941711426
    9. ' lines' → logprob: -15.535244941711426
    10. 's' → logprob: -15.535244941711426

Token 454: ' map' (ID: 4014)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002645098604261875
    2. '[_' → logprob: -6.002645015716553
    3. '[i' → logprob: -9.377645492553711
    4. '[' → logprob: -10.502645492553711
    5. '[input' → logprob: -10.752645492553711
    6. '[line' → logprob: -10.877645492553711
    7. ' [' → logprob: -11.752645492553711
    8. ' _' → logprob: -12.377645492553711
    9. '[x' → logprob: -13.627645492553711
    10. '_line' → logprob: -13.877645492553711

Token 455: '(lambda' (ID: 43341)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.05040567368268967
    2. '(lambda' → logprob: -3.050405740737915
    3. '(int' → logprob: -6.425405502319336
    4. '(list' → logprob: -8.800405502319336
    5. '(' → logprob: -10.425405502319336
    6. '(None' → logprob: -11.925405502319336
    7. '(strip' → logprob: -12.800405502319336
    8. '(sys' → logprob: -13.175405502319336
    9. '(split' → logprob: -13.800405502319336
    10. '(line' → logprob: -13.925405502319336

Token 456: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2130286693572998
    2. 'line' → logprob: -2.2130286693573
    3. 'lambda' → logprob: -2.7130286693573
    4. 'str' → logprob: -4.713028907775879
    5. 's' → logprob: -4.963028907775879
    6. '(lambda' → logprob: -9.838028907775879
    7. ' x' → logprob: -10.088028907775879
    8. 'l' → logprob: -10.088028907775879
    9. 'list' → logprob: -11.088028907775879
    10. ' line' → logprob: -11.213028907775879

Token 457: ':' (ID: 25)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015635553747415543
    2. ':' → logprob: -4.5156354904174805
    3. ' x' → logprob: -6.0156354904174805
    4. ':x' → logprob: -6.7656354904174805
    5. 'line' → logprob: -8.01563549041748
    6. 'str' → logprob: -8.01563549041748
    7. '(x' → logprob: -8.51563549041748
    8. ':str' → logprob: -9.14063549041748
    9. 'strip' → logprob: -12.26563549041748
    10. '(str' → logprob: -12.76563549041748

Token 458: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.7697225252486533e-06
    2. ' x' → logprob: -12.500003814697266
    3. 'list' → logprob: -19.250003814697266
    4. 'str' → logprob: -20.125003814697266
    5. '	x' → logprob: -22.500003814697266
    6. ')x' → logprob: -22.750003814697266
    7. '(x' → logprob: -23.000003814697266
    8. '"x' → logprob: -24.875003814697266
    9. '<x' → logprob: -24.875003814697266
    10. '   ' → logprob: -25.000003814697266

Token 459: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.17460322380065918
    2. '.rstrip' → logprob: -2.424603223800659
    3. '.split' → logprob: -2.674603223800659
    4. ' .' → logprob: -6.674603462219238
    5. ':' → logprob: -7.174603462219238
    6. '.' → logprob: -7.549603462219238
    7. 'rstrip' → logprob: -10.049603462219238
    8. '[:-' → logprob: -10.049603462219238
    9. 'x' → logprob: -10.299603462219238
    10. 'split' → logprob: -11.174603462219238

Token 460: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0019054391887038946
    2. '()' → logprob: -7.12690544128418
    3. '(),'' → logprob: -7.50190544128418
    4. ',' → logprob: -8.25190544128418
    5. '(','' → logprob: -9.37690544128418
    6. '()),' → logprob: -9.50190544128418
    7. '(),
' → logprob: -10.37690544128418
    8. '('\' → logprob: -10.37690544128418
    9. ',x' → logprob: -10.87690544128418
    10. '('' → logprob: -11.50190544128418

Token 461: ' _' (ID: 1175)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0022373280953615904
    2. '   ' → logprob: -6.502237319946289
    3. 'list' → logprob: -7.252237319946289
    4. '_list' → logprob: -11.502237319946289
    5. ' ' → logprob: -12.627237319946289
    6. ' _' → logprob: -13.252237319946289
    7. 'Input' → logprob: -13.502237319946289
    8. ' list' → logprob: -13.502237319946289
    9. '  ' → logprob: -13.877237319946289
    10. 'lambda' → logprob: -13.877237319946289

Token 462: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1637164789135568e-05
    2. '_input' → logprob: -11.375011444091797
    3. '_' → logprob: -17.875011444091797
    4. 'int' → logprob: -18.250011444091797
    5. 'lines' → logprob: -18.500011444091797
    6. 'output' → logprob: -18.625011444091797
    7. ' input' → logprob: -19.000011444091797
    8. 'Input' → logprob: -19.250011444091797
    9. 'import' → logprob: -19.375011444091797
    10. 'inp' → logprob: -19.625011444091797

Token 463: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023572170175611973
    2. '(' → logprob: -8.375235557556152
    3. '   ' → logprob: -12.500235557556152
    4. ' [' → logprob: -14.125235557556152
    5. ')[' → logprob: -15.000235557556152
    6. '1' → logprob: -15.250235557556152
    7. '()[' → logprob: -15.750235557556152
    8. ')' → logprob: -16.87523651123047
    9. ',' → logprob: -17.75023651123047
    10. '[
' → logprob: -18.87523651123047

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. 'range' → logprob: -11.375014305114746
    3. ' ' → logprob: -14.000014305114746
    4. '   ' → logprob: -14.375014305114746
    5. '(' → logprob: -14.625014305114746
    6. 'slice' → logprob: -15.875014305114746
    7. '```' → logprob: -16.25001335144043
    8. 'None' → logprob: -16.37501335144043
    9. '...' → logprob: -17.12501335144043
    10. '  ' → logprob: -17.25001335144043

Token 465: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38738372921943665
    2. ':l' → logprob: -1.1373836994171143
    3. ':]' → logprob: -8.637383460998535
    4. ':],' → logprob: -8.887383460998535
    5. '])' → logprob: -9.387383460998535
    6. ':)' → logprob: -10.762383460998535
    7. 'l' → logprob: -11.137383460998535
    8. ' :' → logprob: -11.262383460998535
    9. ':])
' → logprob: -11.387383460998535
    10. ':L' → logprob: -12.137383460998535

Token 466: '])

' (ID: 21045)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5512794852256775
    2. '])' → logprob: -1.1762795448303223
    3. '1' → logprob: -2.1762795448303223
    4. ':l' → logprob: -7.551279544830322
    5. '(' → logprob: -7.926279544830322
    6. ' l' → logprob: -8.551279067993164
    7. '(l' → logprob: -8.676279067993164
    8. ']))' → logprob: -9.051279067993164
    9. ']' → logprob: -9.301279067993164
    10. ',' → logprob: -9.426279067993164

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38723668456077576
    2. 'check' → logprob: -1.1372367143630981
    3. '	check' → logprob: -8.762236595153809
    4. ' check' → logprob: -9.387236595153809
    5. '```' → logprob: -9.887236595153809
    6. '    
' → logprob: -10.387236595153809
    7. '
' → logprob: -10.637236595153809
    8. '_check' → logprob: -11.637236595153809
    9. '(check' → logprob: -12.387236595153809
    10. '.check' → logprob: -13.137236595153809

Token 468: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' (adapté à ' check') → logprob: -9.088346359931165e-07
    2. 'for' → logprob: -15.125000953674316
    3. 'lines' → logprob: -15.500000953674316
    4. '
' → logprob: -15.625000953674316
    5. ' check' → logprob: -16.625
    6. 'print' → logprob: -17.375
    7. '   ' → logprob: -17.75
    8. 'list' → logprob: -18.625
    9. '```' → logprob: -20.25
    10. '_check' → logprob: -20.875

Token 469: '_inter' (ID: 16818)
  Prédit: '_inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inter' → logprob: -3.531315314830863e-06
    2. 'intersection' → logprob: -12.875003814697266
    3. 'inter' → logprob: -13.875003814697266
    4. '_lines' → logprob: -18.500003814697266
    5. '_in' → logprob: -19.375003814697266
    6. '(inter' → logprob: -19.750003814697266
    7. 'Intersection' → logprob: -20.375003814697266
    8. '```' → logprob: -20.375003814697266
    9. ' intersection' → logprob: -20.625003814697266
    10. 's' → logprob: -20.875003814697266

Token 470: 'section' (ID: 6471)
  Prédit: 'section'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'section' → logprob: -3.857719275401905e-05
    2. 's' → logprob: -10.500038146972656
    3. 'sections' → logprob: -12.375038146972656
    4. 'ection' → logprob: -13.125038146972656
    5. 'intersection' → logprob: -13.250038146972656
    6. '```' → logprob: -14.250038146972656
    7. 'set' → logprob: -14.500038146972656
    8. '_section' → logprob: -14.750038146972656
    9. 'estion' → logprob: -14.875038146972656
    10. '<section' → logprob: -15.250038146972656

Token 471: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -6.2729995988775045e-06
    2. '(list' → logprob: -12.000006675720215
    3. 'lines' → logprob: -16.6250057220459
    4. '(' → logprob: -20.2500057220459
    5. '(line' → logprob: -20.3750057220459
    6. ' (' → logprob: -20.7500057220459
    7. ' lines' → logprob: -21.2500057220459
    8. '	lines' → logprob: -21.7500057220459
    9. '((' → logprob: -21.8750057220459
    10. '(rows' → logprob: -21.8750057220459

Token 472: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.000000953674316
    3. ')
' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.875001907348633
    5. '))' → logprob: -17.125001907348633
    6. ')}' → logprob: -18.625001907348633
    7. ' ' → logprob: -19.625001907348633
    8. '())' → logprob: -19.625001907348633
    9. ')}}' → logprob: -20.250001907348633
    10. '}' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 470
Tokens correctement prédits (1ère position, stricte): 185
Tokens correctement prédits (1ère position, avec adaptation): 191
Tokens correctement prédits (top 10): 392
Précision stricte (1ère position): 39.36%
Précision adaptée (1ère position): 40.64%
Précision (top 10): 83.40%
================================================================================
