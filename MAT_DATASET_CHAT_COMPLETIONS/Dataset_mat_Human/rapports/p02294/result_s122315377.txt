================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#! /usr/bin/env python3

from typing import List, Tuple
from math import sqrt
from enum import IntEnum

EPS = 1e-10

def float_equal(x: float, y: float) -> bool:
    return abs(x - y) < EPS

class PointLocation(IntEnum):
    COUNTER_CLOCKWISE = 1
    CCW = 1
    CLOCKWISE = -1
    CW = -1
    ONLINE_BACK = 2
    O_B = 2
    ONLINE_FRONT = -2
    O_F = -2
    ON_SEGMENT = 0
    O_S = 0

PL = PointLocation

class Point:

    def __init__(self, x: float=0.0, y: float=0.0) -> None:
        self.x = x
        self.y = y

    def __repr__(self) -> str:
        return "Point({}, {})".format(self.x, self.y)

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Point):
            # print("NotImplemented in Point")
            return NotImplemented
        return float_equal(self.x, other.x) and \
            float_equal(self.y, other.y)

    def __add__(self, other: 'Point') -> 'Point':
        return Point(self.x + other.x, self.y + other.y)

    def __sub__(self, other: 'Point') -> 'Point':
        return Point(self.x - other.x, self.y - other.y)

    def __mul__(self, k: float) -> 'Point':
        return Point(self.x * k, self.y * k)

    def __rmul__(self, k: float) -> 'Point':
        return self * k

    def __truediv__(self, k: float) -> 'Point':
        return Point(self.x / k, self.y / k)

    def __lt__(self, other: 'Point') -> bool:
        return self.y < other.y \
            if abs(self.x - other.x) < EPS \
            else self.x < other.x

    def norm(self):
        return self.x * self.x + self.y * self.y

    def abs(self):
        return sqrt(self.norm())

    def dot(self, other: 'Point') -> float:
        return self.x * other.x + self.y * other.y

    def cross(self, other: 'Point') -> float:
        return self.x * other.y - self.y * other.x

    def is_orthogonal(self, other: 'Point') -> bool:
        return float_equal(self.dot(other), 0.0)

    def is_parallel(self, other: 'Point') -> bool:
        return float_equal(self.cross(other), 0.0)

    def distance(self, other: 'Point') -> float:
        return (self - other).abs()

    def in_side_of(self, seg: 'Segment') -> bool:
        return seg.vector().dot(
            Segment(seg.p1, self).vector()) >= 0

    def in_width_of(self, seg: 'Segment') -> bool:
        return \
            self.in_side_of(seg) and \
            self.in_side_of(seg.reverse())

    def distance_to_line(self, seg: 'Segment') -> float:
        return \
            abs((self - seg.p1).cross(seg.vector())) / \
            seg.length()

    def distance_to_segment(self, seg: 'Segment') -> float:
        if not self.in_side_of(seg):
            return self.distance(seg.p1)
        if not self.in_side_of(seg.reverse()):
            return self.distance(seg.p2)
        else:
            return self.distance_to_line(seg)

    def location(self, seg: 'Segment') -> PointLocation:
        p = self - seg.p1
        d = seg.vector().cross(p)
        if d > EPS:
            return PointLocation.COUNTER_CLOCKWISE
        if d < -EPS:
            return PointLocation.CLOCKWISE
        if seg.vector().dot(p) < 0.0:
            return PointLocation.ONLINE_BACK
        if seg.vector().norm() < p.norm():
            return PointLocation.ONLINE_FRONT
        return PointLocation.ON_SEGMENT

Vector = Point

class Segment:

    def __init__(self, p1: Point = None, p2: Point = None) -> None:
        self.p1: Point = Point() if p1 is None else p1
        self.p2: Point = Point() if p2 is None else p2

    def __repr__(self) -> str:
        return "Segment({}, {})".format(self.p1, self.p2)

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Segment):
            # print("NotImplemented in Segment")
            return NotImplemented
        return self.p1 == other.p1 and self.p2 == other.p2

    def vector(self) -> Vector:
        return self.p2 - self.p1

    def reverse(self) -> 'Segment':
        return Segment(self.p2, self.p1)

    def length(self) -> float:
        return self.p1.distance(self.p2)

    def is_orthogonal(self, other: 'Segment') -> bool:
        return self.vector().is_orthogonal(other.vector())

    def is_parallel(self, other: 'Segment') -> bool:
        return self.vector().is_parallel(other.vector())

    def projection(self, p: Point) -> Point:
        v = self.vector()
        vp = p - self.p1
        return v.dot(vp) / v.norm() * v + self.p1

    def reflection(self, p: Point) -> Point:
        x = self.projection(p)
        return p + 2 * (x - p)

    def intersect_ratio(self, other: 'Segment') -> Tuple[float, float]:
        a = self.vector()
        b = other.vector()
        c = self.p1 - other.p1
        s = b.cross(c) / a.cross(b)
        t = a.cross(c) / a.cross(b)
        return s, t

    def intersects(self, other: 'Segment') -> bool:
        d0 = self.p1.location(other)
        d1 = self.p2.location(other)
        d2 = other.p1.location(self)
        d3 = other.p2.location(self)
        return d0 * d1 * d2 * d3 == 0 or \
            (d0 * d1 == -1 and d2 * d3 == -1)

    def intersection(self, other: 'Segment') -> Point:
        s, _ = self.intersect_ratio(other)
        return self.p1 + s * self.vector()

    def distance_with_segment(self, other: 'Segment') -> float:
        if not self.is_parallel(other) and \
                self.intersects(other):
            return 0
        else:
            return min(
                self.p1.distance_to_segment(other),
                self.p2.distance_to_segment(other),
                other.p1.distance_to_segment(self),
                other.p2.distance_to_segment(self))

Line = Segment

class Circle:

    def __init__(self, c: Point=None, r: float=0.0) -> None:
        self.c: Point = Point() if c is None else c
        self.r: float = r

    def __eq__(self, other: object) -> bool:
        if not isinstance(other, Circle):
            return NotImplemented
        return self.c == other.c and self.r == other.r

    def __repr__(self) -> str:
        return "Circle({}, {})".format(self.c, self.r)

def main() -> None:
    q = int(input())

    for _ in range(q):
        x0, y0, x1, y1, x2, y2, x3, y3 = \
            [int(x) for x in input().split()]
        s1 = Segment(Point(x0, y0), Point(x1, y1))
        s2 = Segment(Point(x2, y2), Point(x3, y3))
        print(1 if s1.intersects(s2) else 0)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: ' /' (ID: 820)
  → Token d'amorce (pas de prédiction)

Token 2: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 3: '/bin' (ID: 20950)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3869136571884155
    2. '/bin' → logprob: -1.1369136571884155
    3. '/b' → logprob: -10.136913299560547
    4. '/local' → logprob: -13.761913299560547
    5. '/env' → logprob: -14.261913299560547
    6. '/
' → logprob: -15.011913299560547
    7. 'bin' → logprob: -15.011913299560547
    8. 'b' → logprob: -15.136913299560547
    9. ' /' → logprob: -15.761913299560547
    10. '/bash' → logprob: -16.261913299560547

Token 4: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.017557302489876747
    2. '/python' → logprob: -4.267557144165039
    3. '/env' → logprob: -5.767557144165039
    4. 'python' → logprob: -8.892557144165039
    5. '/bash' → logprob: -9.517557144165039
    6. '/bin' → logprob: -10.142557144165039
    7. '/usr' → logprob: -13.142557144165039
    8. ' /' → logprob: -13.267557144165039
    9. '/b' → logprob: -13.517557144165039
    10. 'env' → logprob: -13.892557144165039

Token 5: ' python' (ID: 22752)
  Prédit: 'python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'python' → logprob: -0.38690099120140076
    2. ' python' → logprob: -1.1369010210037231
    3. 'p' → logprob: -11.511900901794434
    4. 'py' → logprob: -12.011900901794434
    5. 'bash' → logprob: -12.511900901794434
    6. ' Python' → logprob: -12.886900901794434
    7. ' bash' → logprob: -13.136900901794434
    8. '/python' → logprob: -13.636900901794434
    9. ' ' → logprob: -14.011900901794434
    10. ' p' → logprob: -14.011900901794434

Token 6: '3' (ID: 18)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5377206206321716
    2. '3' → logprob: -1.6627206802368164
    3. '```' → logprob: -2.5377206802368164
    4. '\' → logprob: -3.2877206802368164
    5. ' 
' → logprob: -3.5377206802368164
    6. 'import' → logprob: -4.037720680236816
    7. '' → logprob: -4.162720680236816
    8. '  
' → logprob: -4.162720680236816
    9. '#' → logprob: -4.787720680236816
    10. '-' → logprob: -5.162720680236816

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06664910167455673
    2. 'import' → logprob: -3.1916491985321045
    3. '\' → logprob: -4.941648960113525
    4. '' → logprob: -5.316648960113525
    5. ' 
' → logprob: -5.566648960113525
    6. '  
' → logprob: -6.191648960113525
    7. '
' → logprob: -6.566648960113525
    8. '```' → logprob: -6.691648960113525
    9. '#' → logprob: -7.566648960113525
    10. '#!/' → logprob: -7.941648960113525

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3345230519771576
    2. '\n' → logprob: -1.33452308177948
    3. '
' → logprob: -5.2095232009887695
    4. '' → logprob: -5.5845232009887695
    5. ' 
' → logprob: -5.5845232009887695
    6. '#' → logprob: -6.2095232009887695
    7. 'print' → logprob: -6.5845232009887695
    8. '#!/' → logprob: -6.9595232009887695
    9. '  
' → logprob: -7.3345232009887695
    10. '```' → logprob: -7.3345232009887695

Token 9: ' typing' (ID: 34152)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.07526785135269165
    2. ' ' → logprob: -3.075267791748047
    3. ' collections' → logprob: -4.700267791748047
    4. ' math' → logprob: -5.325267791748047
    5. ' sys' → logprob: -5.450267791748047
    6. ' flask' → logprob: -6.575267791748047
    7. ' pathlib' → logprob: -7.075267791748047
    8. ' import' → logprob: -7.200267791748047
    9. 'os' → logprob: -7.200267791748047
    10. ' functools' → logprob: -7.325267791748047

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20159831643104553
    2. 'import' → logprob: -1.7015982866287231
    3. '.' → logprob: -9.451598167419434
    4. '_import' → logprob: -10.451598167419434
    5. '.import' → logprob: -10.576598167419434
    6. ' ' → logprob: -10.576598167419434
    7. '```' → logprob: -11.826598167419434
    8. 'from' → logprob: -12.576598167419434
    9. '	import' → logprob: -12.826598167419434
    10. ' imports' → logprob: -13.076598167419434

Token 11: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.7253528833389282
    2. ' Any' → logprob: -0.7253528833389282
    3. 'Any' → logprob: -3.9753527641296387
    4. ' Generator' → logprob: -4.975352764129639
    5. 'List' → logprob: -5.475352764129639
    6. ' Callable' → logprob: -7.350352764129639
    7. ' Optional' → logprob: -7.600352764129639
    8. ' Union' → logprob: -8.600353240966797
    9. ' Iterator' → logprob: -8.725353240966797
    10. 'Generator' → logprob: -8.975353240966797

Token 12: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00496250856667757
    2. '
' → logprob: -6.00496244430542
    3. '```' → logprob: -7.37996244430542
    4. '\' → logprob: -7.62996244430542
    5. '\n' → logprob: -7.87996244430542
    6. '<|end|>' → logprob: -8.004962921142578
    7. 'import' → logprob: -8.754962921142578
    8. '

' → logprob: -8.754962921142578
    9. ' def' → logprob: -9.754962921142578
    10. 'de' → logprob: -9.879962921142578

Token 13: ' Tuple' (ID: 50841)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.30565279722213745
    2. ' Optional' → logprob: -1.9306528568267822
    3. 'Tuple' → logprob: -2.5556528568267822
    4. 'Any' → logprob: -3.9306528568267822
    5. 'Dict' → logprob: -5.305652618408203
    6. ' Tuple' → logprob: -5.680652618408203
    7. 'Union' → logprob: -5.930652618408203
    8. 'Named' → logprob: -6.305652618408203
    9. 'Callable' → logprob: -6.305652618408203
    10. ' Union' → logprob: -6.430652618408203

Token 14: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5520128011703491
    2. 'def' → logprob: -1.8020128011703491
    3. '

' → logprob: -2.0520129203796387
    4. '\n' → logprob: -2.4270129203796387
    5. '```' → logprob: -3.9270129203796387
    6. 'import' → logprob: -4.552012920379639
    7. '\' → logprob: -5.052012920379639
    8. 'd' → logprob: -6.802012920379639
    9. '<|end|>' → logprob: -6.927012920379639
    10. '
' → logprob: -7.427012920379639

Token 15: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6417900919914246
    2. 'def' → logprob: -0.7667900919914246
    3. '```' → logprob: -5.51678991317749
    4. 'de' → logprob: -6.51678991317749
    5. '\' → logprob: -6.51678991317749
    6. 'import' → logprob: -7.01678991317749
    7. '
' → logprob: -7.51678991317749
    8. '\n' → logprob: -8.766790390014648
    9. 'class' → logprob: -8.766790390014648
    10. 'a' → logprob: -9.391790390014648

Token 16: ' math' (ID: 13324)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.35397225618362427
    2. ' dat' → logprob: -1.8539721965789795
    3. ' collections' → logprob: -2.1039721965789795
    4. ' math' → logprob: -5.103972434997559
    5. 'typing' → logprob: -5.478972434997559
    6. ' sys' → logprob: -5.728972434997559
    7. 'collections' → logprob: -5.728972434997559
    8. ' itertools' → logprob: -6.853972434997559
    9. 'dat' → logprob: -7.353972434997559
    10. ' os' → logprob: -8.353972434997559

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.023392226547002792
    2. 'import' → logprob: -3.7733922004699707
    3. ' ' → logprob: -9.898392677307129
    4. '	import' → logprob: -10.398392677307129
    5. '_import' → logprob: -11.023392677307129
    6. '.' → logprob: -11.148392677307129
    7. '<|end|>' → logprob: -11.273392677307129
    8. ' importar' → logprob: -12.023392677307129
    9. ' im' → logprob: -12.398392677307129
    10. '<|end|>' → logprob: -12.773392677307129

Token 18: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.12355508655309677
    2. 'sqrt' → logprob: -2.3735551834106445
    3. ' ceil' → logprob: -4.1235551834106445
    4. ' factorial' → logprob: -6.6235551834106445
    5. ' inf' → logprob: -6.8735551834106445
    6. 'ceil' → logprob: -6.9985551834106445
    7. ' gcd' → logprob: -7.2485551834106445
    8. ' pi' → logprob: -7.8735551834106445
    9. ' floor' → logprob: -7.9985551834106445
    10. 'pow' → logprob: -8.373555183410645

Token 19: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4396094083786011
    2. '
' → logprob: -1.564609408378601
    3. 'def' → logprob: -2.0646095275878906
    4. '```' → logprob: -4.189609527587891
    5. '


' → logprob: -7.064609527587891
    6. 'import' → logprob: -7.564609527587891
    7. '\' → logprob: -7.689609527587891
    8. '
' → logprob: -7.939609527587891
    9. '``' → logprob: -8.06460952758789
    10. '\n' → logprob: -8.18960952758789

Token 20: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05542728304862976
    2. '

' → logprob: -3.805427312850952
    3. '
' → logprob: -4.305427074432373
    4. '```' → logprob: -4.805427074432373
    5. 'd' → logprob: -5.055427074432373
    6. 'class' → logprob: -6.680427074432373
    7. '\' → logprob: -7.055427074432373
    8. '\n' → logprob: -7.430427074432373
    9. '``' → logprob: -8.680427551269531
    10. 'de' → logprob: -9.055427551269531

Token 21: ' enum' (ID: 15238)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.9740593433380127
    2. ' collections' → logprob: -1.0990593433380127
    3. ' itertools' → logprob: -1.4740593433380127
    4. ' math' → logprob: -3.0990593433380127
    5. ' random' → logprob: -5.599059104919434
    6. ' sys' → logprob: -5.974059104919434
    7. ' operator' → logprob: -6.224059104919434
    8. ' statistics' → logprob: -6.349059104919434
    9. ' functools' → logprob: -7.099059104919434
    10. 'collections' → logprob: -7.224059104919434

Token 22: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6954250335693359
    2. ' import' → logprob: -0.6954250335693359
    3. '	import' → logprob: -7.195425033569336
    4. '<|end|>' → logprob: -7.195425033569336
    5. '_import' → logprob: -8.195425033569336
    6. ' ' → logprob: -8.820425033569336
    7. 'ort' → logprob: -9.945425033569336
    8. ' ' → logprob: -10.070425033569336
    9. 'ERATION' → logprob: -10.195425033569336
    10. '<|end|>' → logprob: -10.320425033569336

Token 23: ' Int' (ID: 4185)
  Prédit: ' Enum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Enum' → logprob: -0.0001317871210630983
    2. ' Int' → logprob: -9.250131607055664
    3. 'Enum' → logprob: -10.250131607055664
    4. '.Enum' → logprob: -15.500131607055664
    5. '(Enum' → logprob: -16.875131607055664
    6. ' enum' → logprob: -17.125131607055664
    7. 'enum' → logprob: -18.875131607055664
    8. '_enum' → logprob: -19.000131607055664
    9. 'Int' → logprob: -19.375131607055664
    10. '	Int' → logprob: -19.500131607055664

Token 24: 'Enum' (ID: 11817)
  Prédit: 'Enum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Enum' → logprob: -0.00018161057960242033
    2. 'Flag' → logprob: -8.750181198120117
    3. 'er' → logprob: -11.250181198120117
    4. 'enum' → logprob: -12.000181198120117
    5. 'Error' → logprob: -14.125181198120117
    6. '.Enum' → logprob: -14.250181198120117
    7. 'Enums' → logprob: -14.500181198120117
    8. 'En' → logprob: -14.625181198120117
    9. '(Enum' → logprob: -14.625181198120117
    10. '_enum' → logprob: -15.250181198120117

Token 25: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2626883387565613
    2. '
' → logprob: -1.512688398361206
    3. 'class' → logprob: -4.637688159942627
    4. '
' → logprob: -7.887688159942627
    5. '


' → logprob: -8.012688636779785
    6. '```' → logprob: -9.012688636779785
    7. ' class' → logprob: -9.762688636779785
    8. '\n' → logprob: -9.887688636779785
    9. '' → logprob: -10.637688636779785
    10. '<|end|>' → logprob: -11.262688636779785

Token 26: 'EPS' (ID: 82793)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4256468117237091
    2. 'c' → logprob: -1.8006467819213867
    3. '
' → logprob: -1.8006467819213867
    4. '

' → logprob: -4.175646781921387
    5. 'C' → logprob: -8.175646781921387
    6. '
' → logprob: -9.175646781921387
    7. ' class' → logprob: -9.175646781921387
    8. 'cl' → logprob: -9.300646781921387
    9. 'clas' → logprob: -9.425646781921387
    10. '\n' → logprob: -10.050646781921387

Token 27: ' =' (ID: 314)
  Prédit: 'ILON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILON' → logprob: -0.07764501869678497
    2. '=' → logprob: -2.7026450634002686
    3. '_' → logprob: -5.2026448249816895
    4. ' =' → logprob: -6.9526448249816895
    5. 'ilon' → logprob: -7.5776448249816895
    6. '_=' → logprob: -7.7026448249816895
    7. '=_' → logprob: -9.702645301818848
    8. 'I' → logprob: -9.952645301818848
    9. '__' → logprob: -10.202645301818848
    10. 'ION' → logprob: -10.952645301818848

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05492696538567543
    2. '1' → logprob: -2.929926872253418
    3. ' ' → logprob: -10.679926872253418
    4. '0' → logprob: -11.429926872253418
    5. '10' → logprob: -11.679926872253418
    6. '2' → logprob: -13.804926872253418
    7. '5' → logprob: -14.679926872253418
    8. '  ' → logprob: -15.554926872253418
    9. '6' → logprob: -15.679926872253418
    10. '9' → logprob: -15.804926872253418

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.472211968386546e-05
    2. ' ' → logprob: -9.500094413757324
    3. '0' → logprob: -11.125094413757324
    4. '10' → logprob: -13.125094413757324
    5. '   ' → logprob: -13.375094413757324
    6. '2' → logprob: -14.375094413757324
    7. '3' → logprob: -15.875094413757324
    8. '    ' → logprob: -16.00009536743164
    9. '9' → logprob: -16.50009536743164
    10. '  ' → logprob: -16.50009536743164

Token 30: 'e' (ID: 68)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09506888687610626
    2. '0' → logprob: -2.72006893157959
    3. 'e' → logprob: -3.72006893157959
    4. '```' → logprob: -8.34506893157959
    5. '00' → logprob: -9.34506893157959
    6. '000' → logprob: -9.34506893157959
    7. '6' → logprob: -10.09506893157959
    8. '3' → logprob: -10.22006893157959
    9. '−' → logprob: -11.22006893157959
    10. 'E' → logprob: -11.34506893157959

Token 31: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001843485952122137
    2. '9' → logprob: -9.500184059143066
    3. '6' → logprob: -10.875184059143066
    4. '7' → logprob: -11.000184059143066
    5. '5' → logprob: -11.500184059143066
    6. '8' → logprob: -11.500184059143066
    7. '3' → logprob: -11.625184059143066
    8. '4' → logprob: -12.000184059143066
    9. '06' → logprob: -12.125184059143066
    10. '05' → logprob: -12.250184059143066

Token 32: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5301368832588196
    2. '7' → logprob: -1.0301368236541748
    3. '8' → logprob: -3.530136823654175
    4. '09' → logprob: -4.780137062072754
    5. '07' → logprob: -5.280137062072754
    6. '10' → logprob: -5.405137062072754
    7. '6' → logprob: -5.655137062072754
    8. '08' → logprob: -6.780137062072754
    9. '12' → logprob: -6.780137062072754
    10. '5' → logprob: -7.155137062072754

Token 33: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.06835741549730301
    2. '
' → logprob: -2.818357467651367
    3. 'class' → logprob: -5.193357467651367
    4. '
' → logprob: -7.318357467651367
    5. '' → logprob: -9.693357467651367
    6. '


' → logprob: -10.568357467651367
    7. '

' → logprob: -11.193357467651367
    8. '```' → logprob: -11.193357467651367
    9. ' class' → logprob: -11.693357467651367
    10. '\n' → logprob: -12.068357467651367

Token 34: 'def' (ID: 1314)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.07748980820178986
    2. '
' → logprob: -3.0774898529052734
    3. '

' → logprob: -3.5774898529052734
    4. 'c' → logprob: -8.077489852905273
    5. ' class' → logprob: -9.577489852905273
    6. '
' → logprob: -10.452489852905273
    7. '```' → logprob: -10.452489852905273
    8. '\n' → logprob: -10.827489852905273
    9. 'clas' → logprob: -10.827489852905273
    10. 'C' → logprob: -11.202489852905273

Token 35: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1704171746969223
    2. ' calculate' → logprob: -2.920417070388794
    3. ' compute' → logprob: -3.170417070388794
    4. ' space' → logprob: -3.170417070388794
    5. ' solve' → logprob: -5.670417308807373
    6. ' sqrt' → logprob: -6.295417308807373
    7. ' find' → logprob: -6.420417308807373
    8. ' distance' → logprob: -6.545417308807373
    9. ' s' → logprob: -6.795417308807373
    10. ' closest' → logprob: -6.920417308807373

Token 36: '_equal' (ID: 27882)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6577244400978088
    2. ' _' → logprob: -1.657724380493164
    3. '_equal' → logprob: -2.032724380493164
    4. '_compare' → logprob: -2.782724380493164
    5. '_equals' → logprob: -3.407724380493164
    6. '_eq' → logprob: -4.157724380493164
    7. '_val' → logprob: -4.282724380493164
    8. '32' → logprob: -4.407724380493164
    9. '_s' → logprob: -5.407724380493164
    10. ' ' → logprob: -6.032724380493164

Token 37: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18163259327411652
    2. '(a' → logprob: -1.8066326379776
    3. ' (' → logprob: -6.4316325187683105
    4. '(x' → logprob: -8.431632995605469
    5. '(s' → logprob: -11.181632995605469
    6. '(value' → logprob: -11.806632995605469
    7. '(lhs' → logprob: -12.181632995605469
    8. '<|end|>' → logprob: -12.556632995605469
    9. '(

' → logprob: -12.931632995605469
    10. '("("' → logprob: -13.056632995605469

Token 38: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028016636497341096
    2. ' ,' → logprob: -8.500280380249023
    3. ',x' → logprob: -10.500280380249023
    4. ',y' → logprob: -10.625280380249023
    5. ':' → logprob: -11.000280380249023
    6. '):' → logprob: -12.375280380249023
    7. ')' → logprob: -13.250280380249023
    8. ',a' → logprob: -14.750280380249023
    9. 'y' → logprob: -15.375280380249023
    10. ',
' → logprob: -16.000280380249023

Token 39: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.47448956966400146
    2. ' float' → logprob: -0.9744895696640015
    3. ')' → logprob: -8.724489212036133
    4. ',float' → logprob: -9.349489212036133
    5. ' y' → logprob: -9.974489212036133
    6. ' ' → logprob: -10.224489212036133
    7. ',' → logprob: -10.849489212036133
    8. 'x' → logprob: -10.974489212036133
    9. 'y' → logprob: -11.099489212036133
    10. '(float' → logprob: -11.724489212036133

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ' ,' → logprob: -10.25003719329834
    3. ')' → logprob: -14.00003719329834
    4. ',x' → logprob: -14.62503719329834
    5. ',y' → logprob: -15.75003719329834
    6. ',float' → logprob: -16.250036239624023
    7. ',)' → logprob: -16.750036239624023
    8. ',

' → logprob: -16.875036239624023
    9. '‌,' → logprob: -17.250036239624023
    10. ',
' → logprob: -17.500036239624023

Token 41: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5759478807449341
    2. ' y' → logprob: -0.8259478807449341
    3. '	y' → logprob: -12.325947761535645
    4. ')' → logprob: -13.325947761535645
    5. ' ' → logprob: -13.575947761535645
    6. ')y' → logprob: -14.450947761535645
    7. '   ' → logprob: -16.20094871520996
    8. '  ' → logprob: -16.82594871520996
    9. '<|end|>' → logprob: -16.82594871520996
    10. ' ' → logprob: -16.82594871520996

Token 42: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22128964960575104
    2. ':' → logprob: -1.7212896347045898
    3. '):' → logprob: -3.97128963470459
    4. ',' → logprob: -7.47128963470459
    5. ' )' → logprob: -8.84628963470459
    6. ')->' → logprob: -9.34628963470459
    7. ' ):' → logprob: -12.09628963470459
    8. ',)' → logprob: -12.34628963470459
    9. ':)' → logprob: -12.47128963470459
    10. '):
' → logprob: -12.59628963470459

Token 43: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.2819838523864746
    2. 'float' → logprob: -1.4069838523864746
    3. ')' → logprob: -7.156983852386475
    4. ' )' → logprob: -10.156984329223633
    5. ' ' → logprob: -12.031984329223633
    6. '	float' → logprob: -13.156984329223633
    7. '<float' → logprob: -13.656984329223633
    8. ',float' → logprob: -13.781984329223633
    9. ' ' → logprob: -13.906984329223633
    10. '(float' → logprob: -14.031984329223633

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00045474470243789256
    2. ' )' → logprob: -7.875454902648926
    3. '):' → logprob: -10.250454902648926
    4. ',' → logprob: -10.375454902648926
    5. ')->' → logprob: -11.875454902648926
    6. ' ):' → logprob: -15.375454902648926
    7. '   ' → logprob: -15.625454902648926
    8. ' ,' → logprob: -15.750454902648926
    9. ' )->' → logprob: -15.750454902648926
    10. ',)' → logprob: -16.50045394897461

Token 45: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.2597830295562744
    2. '->' → logprob: -1.5097830295562744
    3. ')' → logprob: -5.634782791137695
    4. ':' → logprob: -6.009782791137695
    5. ')->' → logprob: -6.384782791137695
    6. '   ' → logprob: -9.634782791137695
    7. ' )->' → logprob: -11.009782791137695
    8. ' ' → logprob: -11.134782791137695
    9. ' :' → logprob: -12.384782791137695
    10. '>' → logprob: -13.009782791137695

Token 46: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.07889397442340851
    2. ' bool' → logprob: -2.5788938999176025
    3. ' ' → logprob: -13.328893661499023
    4. 'float' → logprob: -14.203893661499023
    5. '	bool' → logprob: -14.453893661499023
    6. 'int' → logprob: -14.578893661499023
    7. ' ' → logprob: -14.828893661499023
    8. '<bool' → logprob: -15.078893661499023
    9. '  ' → logprob: -16.453893661499023
    10. '   ' → logprob: -16.703893661499023

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.8193366486229934e-05
    2. ' :' → logprob: -11.375018119812012
    3. '):' → logprob: -12.875018119812012
    4. ':
' → logprob: -13.875018119812012
    5. '->' → logprob: -14.000018119812012
    6. ' ->' → logprob: -14.250018119812012
    7. ':**' → logprob: -14.375018119812012
    8. ':return' → logprob: -14.375018119812012
    9. ')' → logprob: -15.500018119812012
    10. '   ' → logprob: -16.375019073486328

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07478644698858261
    2. ':' → logprob: -2.699786424636841
    3. ' return' → logprob: -5.94978666305542
    4. ':return' → logprob: -7.19978666305542
    5. '<|end|>' → logprob: -8.199786186218262
    6. ' ' → logprob: -8.199786186218262
    7. '    ' → logprob: -8.324786186218262
    8. '):' → logprob: -8.324786186218262
    9. '  ' → logprob: -9.074786186218262
    10. ' :' → logprob: -9.074786186218262

Token 49: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22022242844104767
    2. ' return' → logprob: -1.9702224731445312
    3. 'return' (adapté à ' return') → logprob: -2.8452224731445312
    4. 'abs' → logprob: -9.970222473144531
    5. ' abs' → logprob: -10.220222473144531
    6. '	return' → logprob: -10.720222473144531
    7. '    ' → logprob: -12.345222473144531
    8. 'eturn' → logprob: -13.970222473144531
    9. '```' → logprob: -14.595222473144531
    10. ':return' → logprob: -14.845222473144531

Token 50: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.5759621262550354
    2. 'abs' → logprob: -0.8259621262550354
    3. '(abs' → logprob: -10.95096206665039
    4. '   ' → logprob: -12.57596206665039
    5. ' ' → logprob: -14.07596206665039
    6. 'fabs' → logprob: -14.57596206665039
    7. ' fabs' → logprob: -16.07596206665039
    8. '.abs' → logprob: -16.07596206665039
    9. '_abs' → logprob: -16.57596206665039
    10. '```' → logprob: -16.70096206665039

Token 51: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005234002135694027
    2. '(' → logprob: -5.2552337646484375
    3. 'x' → logprob: -16.380233764648438
    4. '(
' → logprob: -16.755233764648438
    5. ' (' → logprob: -17.755233764648438
    6. '((' → logprob: -18.630233764648438
    7. ' ' → logprob: -19.255233764648438
    8. ')' → logprob: -19.630233764648438
    9. '(

' → logprob: -19.755233764648438
    10. '(s' → logprob: -20.005233764648438

Token 52: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2811690866947174
    2. ' -' → logprob: -1.406169056892395
    3. ' ' → logprob: -11.406168937683105
    4. '-x' → logprob: -12.281168937683105
    5. '   ' → logprob: -13.656168937683105
    6. ')' → logprob: -14.031168937683105
    7. '(x' → logprob: -14.781168937683105
    8. '-y' → logprob: -15.531168937683105
    9. '  ' → logprob: -16.156169891357422
    10. '-)' → logprob: -16.531169891357422

Token 53: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029751179739832878
    2. ' y' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.15475082397461
    4. '	y' → logprob: -15.40475082397461
    5. ' ' → logprob: -15.65475082397461
    6. '    ' → logprob: -17.40475082397461
    7. ')y' → logprob: -17.77975082397461
    8. '  ' → logprob: -18.02975082397461
    9. '<|end|>' → logprob: -18.02975082397461
    10. ')' → logprob: -18.15475082397461

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010044389637187123
    2. ')<' → logprob: -9.375100135803223
    3. ')<=' → logprob: -11.125100135803223
    4. ' )' → logprob: -14.250100135803223
    5. '<' → logprob: -16.00010108947754
    6. '）' → logprob: -16.75010108947754
    7. '0' → logprob: -18.75010108947754
    8. '<=' → logprob: -19.25010108947754
    9. '   ' → logprob: -19.37510108947754
    10. '))' → logprob: -19.75010108947754

Token 55: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0808204710483551
    2. ' <' → logprob: -2.5808205604553223
    3. '<=' → logprob: -6.705820560455322
    4. '<E' → logprob: -7.830820560455322
    5. ' <=' → logprob: -8.330820083618164
    6. ' ' → logprob: -10.705820083618164
    7. ')' → logprob: -11.080820083618164
    8. 'EPS' → logprob: -11.330820083618164
    9. '<T' → logprob: -13.080820083618164
    10. ')<' → logprob: -13.205820083618164

Token 56: ' EPS' (ID: 66979)
  Prédit: ' EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EPS' → logprob: -0.16022492945194244
    2. 'EPS' → logprob: -1.9102249145507812
    3. ' ' → logprob: -15.410224914550781
    4. 'EP' → logprob: -15.535224914550781
    5. ' ' → logprob: -15.660224914550781
    6. ' EP' → logprob: -16.03522491455078
    7. 'ES' → logprob: -16.66022491455078
    8. ' ESP' → logprob: -18.16022491455078
    9. '   ' → logprob: -18.41022491455078
    10. 'eps' → logprob: -18.53522491455078

Token 57: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1406993418931961
    2. '
' → logprob: -2.1406993865966797
    3. '\n' → logprob: -4.76569938659668
    4. 'def' → logprob: -6.39069938659668
    5. '


' → logprob: -6.64069938659668
    6. '' → logprob: -7.89069938659668
    7. '<|end|>' → logprob: -7.89069938659668
    8. ' 

' → logprob: -8.26569938659668
    9. '```' → logprob: -8.26569938659668
    10. 'newline' → logprob: -8.26569938659668

Token 58: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.08061803132295609
    2. '
' → logprob: -2.955618143081665
    3. '

' → logprob: -3.705618143081665
    4. ' class' → logprob: -8.455617904663086
    5. '\n' → logprob: -8.705617904663086
    6. '```' → logprob: -8.705617904663086
    7. 'def' → logprob: -8.955617904663086
    8. '
' → logprob: -9.955617904663086
    9. '' → logprob: -11.080617904663086
    10. '\' → logprob: -11.205617904663086

Token 59: ' Point' (ID: 9971)
  Prédit: ' Int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Int' → logprob: -0.3423845171928406
    2. ' Point' → logprob: -1.4673845767974854
    3. ' Direction' → logprob: -3.3423845767974854
    4. ' ' → logprob: -4.592384338378906
    5. 'Int' → logprob: -5.092384338378906
    6. 'Point' → logprob: -6.967384338378906
    7. ' Shape' → logprob: -6.967384338378906
    8. ' Vec' → logprob: -7.092384338378906
    9. 'Direction' → logprob: -7.092384338378906
    10. ' Distance' → logprob: -7.342384338378906

Token 60: 'Location' (ID: 5998)
  Prédit: '(Int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Int' → logprob: -0.023747820407152176
    2. ':' → logprob: -3.7737479209899902
    3. '(' → logprob: -8.273747444152832
    4. ':Int' → logprob: -8.773747444152832
    5. '(int' → logprob: -10.023747444152832
    6. '(Enum' → logprob: -11.148747444152832
    7. '<Int' → logprob: -11.523747444152832
    8. '(I' → logprob: -12.523747444152832
    9. '2' → logprob: -12.773747444152832
    10. ' :' → logprob: -13.273747444152832

Token 61: '(Int' (ID: 57654)
  Prédit: '(Int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Int' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.625014305114746
    3. '(Enum' → logprob: -12.875014305114746
    4. '(int' → logprob: -13.625014305114746
    5. '(I' → logprob: -14.250014305114746
    6. ':Int' → logprob: -14.625014305114746
    7. ' (' → logprob: -15.750014305114746
    8. ':' → logprob: -15.750014305114746
    9. '<Int' → logprob: -16.250015258789062
    10. '(Integer' → logprob: -16.375015258789062

Token 62: 'Enum' (ID: 11817)
  Prédit: 'Enum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Enum' → logprob: -3.650518920039758e-06
    2. '(Enum' → logprob: -13.875003814697266
    3. '.Enum' → logprob: -14.000003814697266
    4. ' Enum' → logprob: -14.250003814697266
    5. 'Enumeration' → logprob: -14.875003814697266
    6. '_ENUM' → logprob: -15.000003814697266
    7. '_enum' → logprob: -15.625003814697266
    8. 'Enums' → logprob: -15.625003814697266
    9. 'enum' → logprob: -15.750003814697266
    10. 'Enumerator' → logprob: -17.375003814697266

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003503626212477684
    2. '):
' → logprob: -8.375349998474121
    3. ':' → logprob: -9.625349998474121
    4. ')' → logprob: -10.000349998474121
    5. ' ):' → logprob: -13.000349998474121
    6. '   ' → logprob: -13.125349998474121
    7. '):
' → logprob: -14.000349998474121
    8. '}:' → logprob: -14.375349998474121
    9. '>):' → logprob: -14.875349998474121
    10. '<|end|>' → logprob: -14.875349998474121

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12247450649738312
    2. 'Inside' → logprob: -2.872474431991577
    3. '0' → logprob: -3.497474431991577
    4. '3' → logprob: -5.122474670410156
    5. ' on' → logprob: -5.747474670410156
    6. 'INS' → logprob: -5.747474670410156
    7. ' inside' → logprob: -6.122474670410156
    8. '  ' → logprob: -6.247474670410156
    9. ' ' → logprob: -6.247474670410156
    10. '_inside' → logprob: -6.497474670410156

Token 65: ' COUN' (ID: 107160)
  Prédit: 'INS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INS' → logprob: -0.664249837398529
    2. 'ON' → logprob: -0.914249837398529
    3. 'IN' → logprob: -3.289249897003174
    4. 'Inside' → logprob: -4.289249897003174
    5. '   ' → logprob: -4.414249897003174
    6. '0' → logprob: -5.289249897003174
    7. 'UNKNOWN' → logprob: -5.664249897003174
    8. 'COUN' (adapté à ' COUN') → logprob: -5.914249897003174
    9. 'OUT' → logprob: -6.539249897003174
    10. ' ' → logprob: -6.789249897003174

Token 66: 'TER' (ID: 6147)
  Prédit: 'TER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TER' → logprob: -0.0006477446295320988
    2. 'T' → logprob: -8.25064754486084
    3. 'TERS' → logprob: -8.25064754486084
    4. 'TS' → logprob: -10.37564754486084
    5. 'TE' → logprob: -10.50064754486084
    6. 'TERY' → logprob: -10.87564754486084
    7. 'TERN' → logprob: -11.00064754486084
    8. 'TERM' → logprob: -11.25064754486084
    9. '_TER' → logprob: -12.87564754486084
    10. 'TEGER' → logprob: -13.12564754486084

Token 67: '_CLOCK' (ID: 102378)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.4741020202636719
    2. '_CLOCK' → logprob: -0.9741020202636719
    3. 'clock' → logprob: -11.724102020263672
    4. ' CLOCK' → logprob: -11.849102020263672
    5. '_clock' → logprob: -12.474102020263672
    6. 'CLK' → logprob: -13.099102020263672
    7. 'Clock' → logprob: -13.849102020263672
    8. 'C' → logprob: -14.099102020263672
    9. '   ' → logprob: -14.349102020263672
    10. '_CLK' → logprob: -15.099102020263672

Token 68: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -0.00679186312481761
    2. '```' → logprob: -5.256792068481445
    3. '   ' → logprob: -6.881792068481445
    4. 'wise' → logprob: -9.006792068481445
    5. '       ' → logprob: -9.256792068481445
    6. 'Wise' → logprob: -9.881792068481445
    7. '           ' → logprob: -9.881792068481445
    8. '-' → logprob: -9.881792068481445
    9. '    ' → logprob: -10.381792068481445
    10. 'W' → logprob: -10.756792068481445

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194188952445984
    2. ' =' → logprob: -1.5019419193267822
    3. '   ' → logprob: -11.376941680908203
    4. ',' → logprob: -14.001941680908203
    5. ' ' → logprob: -15.126941680908203
    6. '  ' → logprob: -16.251941680908203
    7. '    ' → logprob: -16.501941680908203
    8. '```' → logprob: -17.251941680908203
    9. '＝' → logprob: -17.251941680908203
    10. '(' → logprob: -17.501941680908203

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.875021934509277
    3. '0' → logprob: -13.250021934509277
    4. '+' → logprob: -14.000021934509277
    5. '１' → logprob: -16.37502098083496
    6. '2' → logprob: -16.87502098083496
    7. '++' → logprob: -17.37502098083496
    8. '```' → logprob: -17.50002098083496
    9. '   ' → logprob: -17.75002098083496
    10. ' +' → logprob: -17.75002098083496

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.0590548703912646e-05
    2. ' ' → logprob: -11.000030517578125
    3. '+' → logprob: -11.500030517578125
    4. '0' → logprob: -13.000030517578125
    5. '++' → logprob: -15.000030517578125
    6. '   ' → logprob: -15.125030517578125
    7. '2' → logprob: -15.125030517578125
    8. ' +' → logprob: -15.625030517578125
    9. '１' → logprob: -15.875030517578125
    10. '90' → logprob: -16.000030517578125

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020304692443460226
    2. ',' → logprob: -6.252030372619629
    3. '    
' → logprob: -10.502030372619629
    4. ')' → logprob: -10.752030372619629
    5. '0' → logprob: -11.377030372619629
    6. '  ' → logprob: -12.127030372619629
    7. '    ' → logprob: -12.127030372619629
    8. ',
' → logprob: -12.377030372619629
    9. '.' → logprob: -12.502030372619629
    10. ' ' → logprob: -12.752030372619629

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00181928975507617
    2. ',' → logprob: -6.376819133758545
    3. 'CLOCK' → logprob: -10.001819610595703
    4. ')' → logprob: -11.376819610595703
    5. ' clockwise' → logprob: -11.626819610595703
    6. '  ' → logprob: -11.751819610595703
    7. '    
' → logprob: -12.001819610595703
    8. '    ' → logprob: -12.376819610595703
    9. '0' → logprob: -12.376819610595703
    10. 'C' → logprob: -12.626819610595703

Token 74: ' CC' (ID: 21547)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.00041577612864784896
    2. '   ' → logprob: -8.000415802001953
    3. ' CLOCK' → logprob: -10.250415802001953
    4. '_CLOCK' → logprob: -11.125415802001953
    5. 'clock' → logprob: -11.625415802001953
    6. 'COL' → logprob: -12.250415802001953
    7. '  ' → logprob: -12.375415802001953
    8. ' ' → logprob: -12.375415802001953
    9. '0' → logprob: -13.000415802001953
    10. '`' → logprob: -14.375415802001953

Token 75: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0015415230300277472
    2. 'WISE' → logprob: -7.501541614532471
    3. '_' → logprob: -8.001541137695312
    4. '   ' → logprob: -8.751541137695312
    5. '_W' → logprob: -9.376541137695312
    6. 'w' → logprob: -9.376541137695312
    7. '__' → logprob: -9.501541137695312
    8. 'WR' → logprob: -9.876541137695312
    9. '```' → logprob: -10.126541137695312
    10. '       ' → logprob: -10.501541137695312

Token 76: ' =' (ID: 314)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.021262433379888535
    2. 'LOCK' → logprob: -4.0212626457214355
    3. '_CLOCK' → logprob: -7.2712626457214355
    4. 'WISE' → logprob: -7.2712626457214355
    5. '_W' → logprob: -8.021262168884277
    6. 'w' → logprob: -8.146262168884277
    7. '=' → logprob: -8.396262168884277
    8. ' =' → logprob: -8.521262168884277
    9. 'WR' → logprob: -9.396262168884277
    10. 'CLOCK' → logprob: -9.521262168884277

Token 77: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04814008250832558
    2. '1' → logprob: -3.173140048980713
    3. ' ' → logprob: -5.298140048980713
    4. '   ' → logprob: -10.298140525817871
    5. '-' → logprob: -10.548140525817871
    6. '  ' → logprob: -10.798140525817871
    7. 'COUN' → logprob: -10.923140525817871
    8. ' -' → logprob: -12.173140525817871
    9. '3' → logprob: -12.423140525817871
    10. '0' → logprob: -12.798140525817871

Token 78: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0034431421663612127
    2. '1' → logprob: -5.753443241119385
    3. ' ' → logprob: -8.628442764282227
    4. '-' → logprob: -9.628442764282227
    5. '=' → logprob: -12.003442764282227
    6. '3' → logprob: -12.128442764282227
    7. '0' → logprob: -12.503442764282227
    8. '90' → logprob: -13.503442764282227
    9. '>' → logprob: -13.878442764282227
    10. '+' → logprob: -14.378442764282227

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004405786283314228
    2. ' ' → logprob: -6.379405975341797
    3. '  ' → logprob: -6.629405975341797
    4. ',' → logprob: -7.379405975341797
    5. '    
' → logprob: -8.504405975341797
    6. '    ' → logprob: -8.504405975341797
    7. '
' → logprob: -9.004405975341797
    8. ')' → logprob: -9.879405975341797
    9. 'C' → logprob: -9.879405975341797
    10. '<|end|>' → logprob: -10.629405975341797

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022458923049271107
    2. 'C' → logprob: -7.002245903015137
    3. '    
' → logprob: -7.877245903015137
    4. ',' → logprob: -7.877245903015137
    5. '  ' → logprob: -8.502245903015137
    6. '    ' → logprob: -8.877245903015137
    7. '
' → logprob: -9.502245903015137
    8. ' ' → logprob: -10.002245903015137
    9. ')' → logprob: -11.002245903015137
    10. 'COUN' → logprob: -11.002245903015137

Token 81: ' CLOCK' (ID: 149973)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' (adapté à ' CLOCK') → logprob: -0.0031977968756109476
    2. 'COL' → logprob: -6.37819766998291
    3. ' CLOCK' → logprob: -6.87819766998291
    4. '   ' → logprob: -9.00319766998291
    5. 'CW' → logprob: -9.62819766998291
    6. ',' → logprob: -9.87819766998291
    7. 'C' → logprob: -10.12819766998291
    8. '_CLOCK' → logprob: -10.25319766998291
    9. 'clock' → logprob: -10.75319766998291
    10. ' clockwise' → logprob: -10.87819766998291

Token 82: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -0.45613712072372437
    2. '_CLOCK' → logprob: -1.0811371803283691
    3. 'wise' → logprob: -4.581137180328369
    4. '_W' → logprob: -4.831137180328369
    5. 'W' → logprob: -5.706137180328369
    6. '_COUNTER' → logprob: -6.206137180328369
    7. 'CLOCK' → logprob: -6.331137180328369
    8. 'Wise' → logprob: -7.331137180328369
    9. '   ' → logprob: -7.956137180328369
    10. '_clock' → logprob: -9.206136703491211

Token 83: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931969523429871
    2. ' =' → logprob: -0.6931969523429871
    3. ',' → logprob: -10.818197250366211
    4. ' ' → logprob: -10.943197250366211
    5. '   ' → logprob: -11.943197250366211
    6. '<|end|>' → logprob: -12.818197250366211
    7. '  ' → logprob: -13.818197250366211
    8. ' =
' → logprob: -14.443197250366211
    9. ')' → logprob: -15.068197250366211
    10. ' ,' → logprob: -15.568197250366211

Token 84: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0013019033940508962
    2. '2' → logprob: -7.1263017654418945
    3. ' -' → logprob: -7.6263017654418945
    4. ' ' → logprob: -12.126301765441895
    5. '3' → logprob: -13.001301765441895
    6. '−' → logprob: -14.751301765441895
    7. '-
' → logprob: -15.501301765441895
    8. '0' → logprob: -15.501301765441895
    9. '\-' → logprob: -15.501301765441895
    10. '  ' → logprob: -15.501301765441895

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '１' → logprob: -16.625001907348633
    4. '2' → logprob: -17.937501907348633
    5. '```' → logprob: -18.000001907348633
    6. '-' → logprob: -18.562501907348633
    7. '۱' → logprob: -18.625001907348633
    8. '=' → logprob: -18.687501907348633
    9. '१' → logprob: -19.125001907348633
    10. '  ' → logprob: -19.187501907348633

Token 86: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029366982635110617
    2. '<|end|>' → logprob: -6.002936840057373
    3. ',' → logprob: -9.127936363220215
    4. '    
' → logprob: -9.377936363220215
    5. '    ' → logprob: -9.377936363220215
    6. ')' → logprob: -9.752936363220215
    7. '  ' → logprob: -10.002936363220215
    8. ' ' → logprob: -10.627936363220215
    9. '
' → logprob: -11.127936363220215
    10. '```' → logprob: -11.877936363220215

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007160080131143332
    2. '    ' → logprob: -8.250716209411621
    3. '  ' → logprob: -8.500716209411621
    4. ' ' → logprob: -9.625716209411621
    5. '    
' → logprob: -9.625716209411621
    6. '<|end|>' → logprob: -10.000716209411621
    7. '```' → logprob: -10.625716209411621
    8. ',' → logprob: -11.000716209411621
    9. '
' → logprob: -11.875716209411621
    10. ')' → logprob: -12.000716209411621

Token 88: ' CW' (ID: 72492)
  Prédit: 'CW'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CW' (adapté à ' CW') → logprob: -0.22817391157150269
    2. '   ' → logprob: -1.7281739711761475
    3. 'C' → logprob: -4.353173732757568
    4. '0' → logprob: -5.228173732757568
    5. '1' → logprob: -6.228173732757568
    6. ' ' → logprob: -6.353173732757568
    7. ' CW' → logprob: -7.103173732757568
    8. 'CLOCK' → logprob: -7.353173732757568
    9. 'COL' → logprob: -7.603173732757568
    10. 'CLK' → logprob: -7.853173732757568

Token 89: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520309090614319
    2. ' =' → logprob: -1.502030849456787
    3. '=-' → logprob: -9.252031326293945
    4. ':' → logprob: -13.502031326293945
    5. '=
' → logprob: -13.502031326293945
    6. ' ' → logprob: -13.877031326293945
    7. '<|end|>' → logprob: -13.877031326293945
    8. ',' → logprob: -15.252031326293945
    9. ')' → logprob: -15.252031326293945
    10. '=(-' → logprob: -15.377031326293945

Token 90: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.029805226251482964
    2. ' -' → logprob: -3.5298051834106445
    3. ' ' → logprob: -10.779805183410645
    4. '1' → logprob: -10.779805183410645
    5. '   ' → logprob: -11.654805183410645
    6. '  ' → logprob: -13.404805183410645
    7. '0' → logprob: -14.279805183410645
    8. '<|end|>' → logprob: -14.279805183410645
    9. '```' → logprob: -15.279805183410645
    10. '    ' → logprob: -15.279805183410645

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -18.0
    4. '<|end|>' → logprob: -18.5
    5. '-' → logprob: -18.625
    6. '2' → logprob: -18.875
    7. '１' → logprob: -18.875
    8. '   ' → logprob: -19.0625
    9. '0' → logprob: -19.75
    10. '  ' → logprob: -20.0

Token 92: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025580688379704952
    2. '<|end|>' → logprob: -7.25255823135376
    3. '    
' → logprob: -7.37755823135376
    4. '0' → logprob: -7.37755823135376
    5. ' ' → logprob: -9.002557754516602
    6. ')' → logprob: -9.002557754516602
    7. '    ' → logprob: -9.502557754516602
    8. '```' → logprob: -9.627557754516602
    9. ',' → logprob: -9.752557754516602
    10. '  ' → logprob: -9.877557754516602

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017255148850381374
    2. 'COL' → logprob: -6.751725673675537
    3. ' ' → logprob: -8.251725196838379
    4. '0' → logprob: -9.626725196838379
    5. '  ' → logprob: -10.251725196838379
    6. 'NONE' → logprob: -10.501725196838379
    7. 'C' → logprob: -10.751725196838379
    8. '    ' → logprob: -11.251725196838379
    9. ')' → logprob: -11.251725196838379
    10. ' COL' → logprob: -11.251725196838379

Token 94: ' ONLINE' (ID: 71293)
  Prédit: 'ON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ON' → logprob: -0.6730349063873291
    2. 'ONLINE' (adapté à ' ONLINE') → logprob: -0.7980349063873291
    3. 'COL' → logprob: -3.548034906387329
    4. '   ' → logprob: -5.29803466796875
    5. '0' → logprob: -6.29803466796875
    6. 'CENTER' → logprob: -7.04803466796875
    7. 'ONTO' → logprob: -7.79803466796875
    8. 'COUN' → logprob: -8.04803466796875
    9. ' ON' → logprob: -8.04803466796875
    10. 'BET' → logprob: -8.04803466796875

Token 95: '_BACK' (ID: 48735)
  Prédit: '_BACK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_BACK' → logprob: -0.5454828143119812
    2. '_' → logprob: -2.170482873916626
    3. 'BACK' → logprob: -2.295482873916626
    4. '=' → logprob: -2.545482873916626
    5. 'ONLINE' → logprob: -3.295482873916626
    6. '_ON' → logprob: -3.795482873916626
    7. '_CENTER' → logprob: -5.045482635498047
    8. ' =' → logprob: -5.545482635498047
    9. '_SIDE' → logprob: -5.545482635498047
    10. 'CENTER' → logprob: -5.920482635498047

Token 96: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016929874196648598
    2. '=-' → logprob: -4.516930103302002
    3. ' =' → logprob: -5.391930103302002
    4. 'WARD' → logprob: -7.266930103302002
    5. ' ' → logprob: -8.766929626464844
    6. '   ' → logprob: -8.891929626464844
    7. '  ' → logprob: -9.141929626464844
    8. '-' → logprob: -9.266929626464844
    9. '    ' → logprob: -10.141929626464844
    10. '=(-' → logprob: -11.766929626464844

Token 97: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010998018842656165
    2. '0' → logprob: -9.750109672546387
    3. ' ' → logprob: -9.875109672546387
    4. '   ' → logprob: -16.250110626220703
    5. '  ' → logprob: -16.750110626220703
    6. '1' → logprob: -17.250110626220703
    7. '２' → logprob: -18.500110626220703
    8. '-' → logprob: -19.500110626220703
    9. '	' → logprob: -19.625110626220703
    10. '۲' → logprob: -19.875110626220703

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. '0' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.500006675720215
    4. '-' → logprob: -16.3750057220459
    5. '1' → logprob: -17.3750057220459
    6. '２' → logprob: -18.5000057220459
    7. '   ' → logprob: -18.7500057220459
    8. '3' → logprob: -19.7500057220459
    9. '	' → logprob: -20.5000057220459
    10. ' -' → logprob: -20.6250057220459

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00011021859245374799
    2. '<|end|>' → logprob: -10.125110626220703
    3. '
' → logprob: -10.625110626220703
    4. '    
' → logprob: -11.000110626220703
    5. 'ONLINE' → logprob: -11.875110626220703
    6. '  ' → logprob: -11.875110626220703
    7. '    ' → logprob: -12.500110626220703
    8. '```' → logprob: -12.750110626220703
    9. ' ' → logprob: -13.125110626220703
    10. '<|end|>' → logprob: -13.250110626220703

Token 100: '   ' (ID: 271)
  Prédit: 'ONLINE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONLINE' → logprob: -0.5779431462287903
    2. '   ' → logprob: -0.8279431462287903
    3. ' ONLINE' → logprob: -7.577943325042725
    4. '2' → logprob: -7.827943325042725
    5. '  ' → logprob: -7.952943325042725
    6. ' ' → logprob: -8.202942848205566
    7. 'ON' → logprob: -8.452942848205566
    8. '	ON' → logprob: -9.327942848205566
    9. '```' → logprob: -9.702942848205566
    10. '3' → logprob: -10.202942848205566

Token 101: ' O' (ID: 532)
  Prédit: 'ONLINE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ONLINE' → logprob: -0.18750259280204773
    2. 'ON' → logprob: -1.8125026226043701
    3. 'BACK' → logprob: -5.312502384185791
    4. '   ' → logprob: -6.812502384185791
    5. ' ONLINE' → logprob: -7.062502384185791
    6. 'online' → logprob: -9.31250286102295
    7. 'OL' → logprob: -9.43750286102295
    8. 'ONT' → logprob: -9.43750286102295
    9. '	ON' → logprob: -9.43750286102295
    10. '_ON' → logprob: -9.43750286102295

Token 102: '_B' (ID: 3201)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -8.101369894575328e-05
    2. 'NL' → logprob: -9.500081062316895
    3. 'n' → logprob: -12.375081062316895
    4. 'ONLINE' → logprob: -13.750081062316895
    5. 'LINE' → logprob: -15.125081062316895
    6. ' N' → logprob: -15.125081062316895
    7. 'INLINE' → logprob: -16.125080108642578
    8. 'NAL' → logprob: -17.000080108642578
    9. 'NFL' → logprob: -17.125080108642578
    10. 'NST' → logprob: -18.000080108642578

Token 103: ' =' (ID: 314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.051311612129211426
    2. 'ACK' → logprob: -3.176311492919922
    3. 'K' → logprob: -5.051311492919922
    4. 'NK' → logprob: -7.051311492919922
    5. 'NE' → logprob: -8.551311492919922
    6. 'CK' → logprob: -8.676311492919922
    7. 'F' → logprob: -8.926311492919922
    8. '```' → logprob: -9.551311492919922
    9. 'R' → logprob: -9.926311492919922
    10. 'LINE' → logprob: -10.051311492919922

Token 104: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484770953655243
    2. '2' → logprob: -1.2234771251678467
    3. '   ' → logprob: -10.973477363586426
    4. '  ' → logprob: -11.473477363586426
    5. '<|end|>' → logprob: -13.223477363586426
    6. '    ' → logprob: -13.473477363586426
    7. '=' → logprob: -14.473477363586426
    8. '1' → logprob: -14.723477363586426
    9. '<|end|>' → logprob: -15.848477363586426
    10. '0' → logprob: -15.973477363586426

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.375019073486328
    4. '3' → logprob: -17.375019073486328
    5. '  ' → logprob: -17.625019073486328
    6. '0' → logprob: -18.250019073486328
    7. '1' → logprob: -19.000019073486328
    8. '۲' → logprob: -19.250019073486328
    9. '-' → logprob: -19.875019073486328
    10. '２' → logprob: -20.125019073486328

Token 106: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012414522469043732
    2. 'ONLINE' → logprob: -4.887414455413818
    3. '  ' → logprob: -6.012414455413818
    4. ' ' → logprob: -6.637414455413818
    5. ' ONLINE' → logprob: -8.262414932250977
    6. '
' → logprob: -8.262414932250977
    7. '    ' → logprob: -8.887414932250977
    8. '```' → logprob: -9.012414932250977
    9. '    
' → logprob: -9.387414932250977
    10. '<|end|>' → logprob: -9.637414932250977

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00679186312481761
    2. 'ONLINE' → logprob: -5.131792068481445
    3. ' ONLINE' → logprob: -8.006792068481445
    4. '  ' → logprob: -8.506792068481445
    5. '    ' → logprob: -8.881792068481445
    6. ' ' → logprob: -9.631792068481445
    7. '```' → logprob: -9.756792068481445
    8. '    
' → logprob: -10.131792068481445
    9. '	ON' → logprob: -12.006792068481445
    10. '<|end|>' → logprob: -12.006792068481445

Token 108: ' ONLINE' (ID: 71293)
  Prédit: 'ONLINE'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONLINE' (adapté à ' ONLINE') → logprob: -0.002008814597502351
    2. 'ON' → logprob: -6.25200891494751
    3. 'ONTO' → logprob: -10.502008438110352
    4. ' ONLINE' → logprob: -10.752008438110352
    5. '   ' → logprob: -11.502008438110352
    6. '_ON' → logprob: -12.127008438110352
    7. '	ON' → logprob: -12.377008438110352
    8. 'BACK' → logprob: -12.752008438110352
    9. 'ONT' → logprob: -13.252008438110352
    10. 'online' → logprob: -13.377008438110352

Token 109: '_FRONT' (ID: 130295)
  Prédit: '_FRONT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FRONT' → logprob: -0.04305628314614296
    2. '_ON' → logprob: -3.9180562496185303
    3. '_FR' → logprob: -5.043056488037109
    4. 'FR' → logprob: -5.293056488037109
    5. '_FORWARD' → logprob: -5.668056488037109
    6. '_RIGHT' → logprob: -6.793056488037109
    7. '_BE' → logprob: -7.043056488037109
    8. '_SIDE' → logprob: -7.043056488037109
    9. 'F' → logprob: -7.918056488037109
    10. '_END' → logprob: -7.918056488037109

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760288238525391
    2. '=' → logprob: -0.8260288238525391
    3. '<|end|>' → logprob: -9.576028823852539
    4. ':' → logprob: -11.576028823852539
    5. ')' → logprob: -11.826028823852539
    6. ',' → logprob: -13.951028823852539
    7. '<|end|>' → logprob: -14.326028823852539
    8. ' ' → logprob: -14.701028823852539
    9. '=True' → logprob: -14.951028823852539
    10. ' =)' → logprob: -15.701028823852539

Token 111: ' -' (ID: 533)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0010998494690284133
    2. ' ' → logprob: -6.876100063323975
    3. '-' → logprob: -9.751099586486816
    4. '4' → logprob: -12.376099586486816
    5. ' -' → logprob: -12.501099586486816
    6. '  ' → logprob: -14.626099586486816
    7. '３' → logprob: -15.751099586486816
    8. '   ' → logprob: -15.751099586486816
    9. '۳' → logprob: -16.876100540161133
    10. '	' → logprob: -17.376100540161133

Token 112: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. '1' → logprob: -12.500008583068848
    3. ' ' → logprob: -13.500008583068848
    4. '۲' → logprob: -14.125008583068848
    5. '２' → logprob: -14.125008583068848
    6. '२' → logprob: -15.000008583068848
    7. '```' → logprob: -15.187508583068848
    8. '২' → logprob: -15.937508583068848
    9. '   ' → logprob: -16.12500762939453
    10. '-' → logprob: -16.18750762939453

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18832430243492126
    2. '<|end|>' → logprob: -2.188324213027954
    3. ' ' → logprob: -2.938324213027954
    4. '  ' → logprob: -5.438324451446533
    5. ',' → logprob: -7.313324451446533
    6. ')' → logprob: -7.813324451446533
    7. '    ' → logprob: -8.063323974609375
    8. '<|end|>' → logprob: -8.313323974609375
    9. ':' → logprob: -9.188323974609375
    10. ' 
' → logprob: -9.438323974609375

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06602303683757782
    2. '<|end|>' → logprob: -2.941023111343384
    3. ' ' → logprob: -5.191022872924805
    4. '  ' → logprob: -5.441022872924805
    5. '    ' → logprob: -8.066022872924805
    6. ' 
' → logprob: -8.941022872924805
    7. '<|end|>' → logprob: -8.941022872924805
    8. '```' → logprob: -9.066022872924805
    9. '
' → logprob: -9.441022872924805
    10. ' O' → logprob: -9.941022872924805

Token 115: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' (adapté à ' O') → logprob: -0.003860758850350976
    2. ' O' → logprob: -5.628860950469971
    3. 'OF' → logprob: -8.628860473632812
    4. '   ' → logprob: -9.628860473632812
    5. ' OF' → logprob: -12.378860473632812
    6. ' ' → logprob: -12.503860473632812
    7. '	O' → logprob: -12.878860473632812
    8. '  ' → logprob: -13.128860473632812
    9. '.O' → logprob: -14.628860473632812
    10. '0' → logprob: -14.753860473632812

Token 116: '_F' (ID: 2729)
  Prédit: '_F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_F' → logprob: -0.0009821972344070673
    2. '_' → logprob: -7.000982284545898
    3. '_B' → logprob: -10.625982284545898
    4. '_A' → logprob: -12.000982284545898
    5. '_S' → logprob: -12.125982284545898
    6. '```' → logprob: -12.125982284545898
    7. '_C' → logprob: -12.500982284545898
    8. '_
' → logprob: -12.625982284545898
    9. '_FRONT' → logprob: -12.625982284545898
    10. ' _' → logprob: -12.750982284545898

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38693565130233765
    2. ' =' → logprob: -1.1369357109069824
    3. ':' → logprob: -10.136935234069824
    4. '=-' → logprob: -10.761935234069824
    5. ')' → logprob: -13.386935234069824
    6. ' ' → logprob: -13.886935234069824
    7. '<|end|>' → logprob: -14.636935234069824
    8. '-' → logprob: -15.511935234069824
    9. '   ' → logprob: -15.636935234069824
    10. ' -' → logprob: -16.13693618774414

Token 118: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.542423165636137e-05
    2. ' -' → logprob: -9.375085830688477
    3. '2' → logprob: -14.625085830688477
    4. '   ' → logprob: -17.125085830688477
    5. ' ' → logprob: -18.375085830688477
    6. '  ' → logprob: -18.750085830688477
    7. '' → logprob: -19.875085830688477
    8. '(-' → logprob: -20.250085830688477
    9. '	' → logprob: -20.500085830688477
    10. '−' → logprob: -20.500085830688477

Token 119: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '２' → logprob: -16.62500762939453
    4. '<|end|>' → logprob: -16.87500762939453
    5. '   ' → logprob: -17.50000762939453
    6. '۲' → logprob: -17.50000762939453
    7. '```' → logprob: -18.06250762939453
    8. '  ' → logprob: -18.12500762939453
    9. '২' → logprob: -18.50000762939453
    10. '₂' → logprob: -18.81250762939453

Token 120: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016301481809932739
    2. 'ONLINE' → logprob: -9.250163078308105
    3. '<|end|>' → logprob: -10.625163078308105
    4. '    
' → logprob: -11.250163078308105
    5. '```' → logprob: -11.500163078308105
    6. ')' → logprob: -12.125163078308105
    7. '  ' → logprob: -12.750163078308105
    8. ' ONLINE' → logprob: -12.875163078308105
    9. ' ' → logprob: -13.500163078308105
    10. '    ' → logprob: -14.000163078308105

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003807669272646308
    2. 'ONLINE' → logprob: -5.628807544708252
    3. ' ONLINE' → logprob: -9.50380802154541
    4. '```' → logprob: -10.00380802154541
    5. '    
' → logprob: -10.62880802154541
    6. '	ON' → logprob: -11.25380802154541
    7. '<|end|>' → logprob: -11.37880802154541
    8. '  ' → logprob: -12.00380802154541
    9. ')' → logprob: -12.12880802154541
    10. 'IND' → logprob: -12.37880802154541

Token 122: ' ON' (ID: 9949)
  Prédit: 'ON'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ON' (adapté à ' ON') → logprob: -0.017628053203225136
    2. 'ONLINE' → logprob: -4.267628192901611
    3. ' ON' → logprob: -6.642628192901611
    4. '_ON' → logprob: -7.142628192901611
    5. 'ONTO' → logprob: -7.767628192901611
    6. '	ON' → logprob: -8.392627716064453
    7. 'ONT' → logprob: -8.392627716064453
    8. 'ONS' → logprob: -8.517627716064453
    9. '.ON' → logprob: -9.767627716064453
    10. 'オン' → logprob: -10.142627716064453

Token 123: '_SEG' (ID: 135738)
  Prédit: '_LINE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LINE' → logprob: -0.10182663798332214
    2. 'LINE' → logprob: -2.3518266677856445
    3. '_' → logprob: -7.4768266677856445
    4. '_SEG' → logprob: -7.7268266677856445
    5. '_POINT' → logprob: -8.851826667785645
    6. '_line' → logprob: -9.476826667785645
    7. '_L' → logprob: -9.726826667785645
    8. 'line' → logprob: -10.226826667785645
    9. '_EDGE' → logprob: -10.226826667785645
    10. '_THE' → logprob: -10.226826667785645

Token 124: 'MENT' (ID: 9640)
  Prédit: 'MENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MENT' → logprob: -9.078839502763003e-05
    2. '   ' → logprob: -9.875090599060059
    3. 'EMENT' → logprob: -10.375090599060059
    4. '```' → logprob: -12.750090599060059
    5. '  ' → logprob: -13.750090599060059
    6. 'メント' → logprob: -14.625090599060059
    7. 'AMENT' → logprob: -14.625090599060059
    8. 'MENTS' → logprob: -14.750090599060059
    9. '    
' → logprob: -14.875090599060059
    10. '_' → logprob: -15.250090599060059

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474109411239624
    2. '=' → logprob: -0.974109411239624
    3. '   ' → logprob: -10.974109649658203
    4. ':' → logprob: -12.099109649658203
    5. ' ' → logprob: -12.099109649658203
    6. '  ' → logprob: -13.724109649658203
    7. '<|end|>' → logprob: -14.099109649658203
    8. ',' → logprob: -14.599109649658203
    9. '    ' → logprob: -14.849109649658203
    10. ')' → logprob: -15.224109649658203

Token 126: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -14.75048828125
    4. '3' → logprob: -16.75048828125
    5. '    ' → logprob: -17.25048828125
    6. '  ' → logprob: -17.75048828125
    7. '۰' → logprob: -18.00048828125
    8. '０' → logprob: -18.37548828125
    9. '=' → logprob: -18.87548828125
    10. '000' → logprob: -19.12548828125

Token 127: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '０' → logprob: -17.625001907348633
    4. '۰' → logprob: -18.625001907348633
    5. '000' → logprob: -19.375001907348633
    6. '03' → logprob: -19.875001907348633
    7. '00' → logprob: -19.875001907348633
    8. '012' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.625001907348633
    10. '  ' → logprob: -22.250001907348633

Token 128: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24809691309928894
    2. '   ' → logprob: -2.1230969429016113
    3. ':' → logprob: -2.9980969429016113
    4. '<|end|>' → logprob: -3.3730969429016113
    5. 'newline' → logprob: -5.623096942901611
    6. '```' → logprob: -5.873096942901611
    7. '    
' → logprob: -5.998096942901611
    8. '' → logprob: -6.748096942901611
    9. '

' → logprob: -6.998096942901611
    10. '0' → logprob: -6.998096942901611

Token 129: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7625969052314758
    2. '
' → logprob: -1.137596845626831
    3. '<|end|>' → logprob: -2.387596845626831
    4. '   ' → logprob: -2.887596845626831
    5. '

' → logprob: -3.512596845626831
    6. ':' → logprob: -4.01259708404541
    7. '```' → logprob: -5.51259708404541
    8. '    
' → logprob: -5.63759708404541
    9. ' def' → logprob: -6.26259708404541
    10. '<|end|>' → logprob: -6.26259708404541

Token 130: ' O' (ID: 532)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' (adapté à ' O') → logprob: -0.018191616982221603
    2. ' O' → logprob: -4.393191814422607
    3. '   ' → logprob: -5.268191814422607
    4. 'OS' → logprob: -8.26819133758545
    5. '	O' → logprob: -9.76819133758545
    6. '0' → logprob: -10.01819133758545
    7. '  ' → logprob: -10.26819133758545
    8. ' ' → logprob: -10.39319133758545
    9. 'OSE' → logprob: -11.14319133758545
    10. 'ON' → logprob: -11.39319133758545

Token 131: '_S' (ID: 1875)
  Prédit: '_S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_S' → logprob: -0.03737359121441841
    2. '_N' → logprob: -3.5373735427856445
    3. '_' → logprob: -4.9123735427856445
    4. 'S' → logprob: -9.162373542785645
    5. 'N' → logprob: -9.412373542785645
    6. '_SEG' → logprob: -10.537373542785645
    7. '__' → logprob: -11.912373542785645
    8. '_
' → logprob: -12.537373542785645
    9. '```' → logprob: -13.037373542785645
    10. '_NS' → logprob: -13.537373542785645

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868776261806488
    2. ' =' → logprob: -1.1368776559829712
    3. ' ' → logprob: -12.88687801361084
    4. ':' → logprob: -13.26187801361084
    5. '   ' → logprob: -14.01187801361084
    6. '0' → logprob: -14.13687801361084
    7. '  ' → logprob: -15.51187801361084
    8. ',' → logprob: -16.011877059936523
    9. '_' → logprob: -16.136877059936523
    10. ')' → logprob: -16.261877059936523

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008614808320999146
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -16.383615493774414
    4. '=' → logprob: -16.383615493774414
    5. '۰' → logprob: -16.758615493774414
    6. '  ' → logprob: -16.883615493774414
    7. ' ' → logprob: -18.133615493774414
    8. '０' → logprob: -18.446115493774414
    9. '०' → logprob: -19.133615493774414
    10. '```' → logprob: -19.133615493774414

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '=' → logprob: -17.687519073486328
    4. '۰' → logprob: -17.875019073486328
    5. '  ' → logprob: -19.187519073486328
    6. '1' → logprob: -19.437519073486328
    7. '०' → logprob: -19.437519073486328
    8. '０' → logprob: -19.500019073486328
    9. ' ' → logprob: -19.625019073486328
    10. '   ' → logprob: -19.750019073486328

Token 135: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6515460014343262
    2. '

' → logprob: -1.0265460014343262
    3. 'def' → logprob: -2.901546001434326
    4. 'class' → logprob: -2.901546001434326
    5. '<|end|>' → logprob: -5.276546001434326
    6. '


' → logprob: -6.151546001434326
    7. '   ' → logprob: -7.651546001434326
    8. '    
' → logprob: -7.776546001434326
    9. '```' → logprob: -7.901546001434326
    10. '<|end|>' → logprob: -8.026546478271484

Token 136: 'PL' (ID: 5173)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.059108980000019073
    2. 'def' → logprob: -3.1841089725494385
    3. '

' → logprob: -4.434109210968018
    4. '
' → logprob: -6.059109210968018
    5. '(' → logprob: -6.809109210968018
    6. ' class' → logprob: -8.93410873413086
    7. '(
' → logprob: -9.05910873413086
    8. '


' → logprob: -9.43410873413086
    9. '(class' → logprob: -10.30910873413086
    10. '(Point' → logprob: -10.55910873413086

Token 137: ' =' (ID: 314)
  Prédit: 'OC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OC' → logprob: -0.2830074727535248
    2. ' =' → logprob: -2.7830073833465576
    3. 'AYER' → logprob: -3.1580073833465576
    4. 'ATFORM' → logprob: -3.1580073833465576
    5. '=' → logprob: -4.158007621765137
    6. 'ANE' → logprob: -4.408007621765137
    7. 'O' → logprob: -4.533007621765137
    8. 'ACE' → logprob: -4.533007621765137
    9. 'oc' → logprob: -4.783007621765137
    10. '_point' → logprob: -5.533007621765137

Token 138: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.25195586681365967
    2. ' Point' → logprob: -1.5019558668136597
    3. '	Point' → logprob: -11.00195598602295
    4. '_Point' → logprob: -12.87695598602295
    5. '.Point' → logprob: -13.00195598602295
    6. ' ' → logprob: -13.37695598602295
    7. '<Point' → logprob: -13.50195598602295
    8. 'Points' → logprob: -14.12695598602295
    9. 'oint' → logprob: -14.25195598602295
    10. '(Point' → logprob: -15.62695598602295

Token 139: 'Location' (ID: 5998)
  Prédit: 'Location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Location' → logprob: -1.8312570318812504e-05
    2. '(Location' → logprob: -12.000018119812012
    3. '.Location' → logprob: -12.250018119812012
    4. '<Location' → logprob: -12.250018119812012
    5. ' Location' → logprob: -13.500018119812012
    6. '_location' → logprob: -14.750018119812012
    7. '_LOCATION' → logprob: -15.750018119812012
    8. 'Locations' → logprob: -15.875018119812012
    9. 'location' → logprob: -16.125019073486328
    10. ')' → logprob: -16.125019073486328

Token 140: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023599375039339066
    2. 'def' → logprob: -4.523599147796631
    3. '(' → logprob: -4.648599147796631
    4. '(
' → logprob: -7.148599147796631
    5. '#' → logprob: -8.398599624633789
    6. '.

' → logprob: -8.523599624633789
    7. ')' → logprob: -8.648599624633789
    8. ',' → logprob: -8.773599624633789
    9. '.
' → logprob: -8.773599624633789
    10. ':' → logprob: -9.023599624633789

Token 141: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.09291376173496246
    2. 'def' → logprob: -2.467913866043091
    3. '
' → logprob: -6.467913627624512
    4. '(
' → logprob: -6.592913627624512
    5. '(' → logprob: -7.092913627624512
    6. '

' → logprob: -9.467913627624512
    7. '(class' → logprob: -9.967913627624512
    8. ' class' → logprob: -10.592913627624512
    9. '```' → logprob: -11.342913627624512
    10. 'Point' → logprob: -12.467913627624512

Token 142: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.0014197572600096464
    2. ' Vector' → logprob: -6.626419544219971
    3. ' Vec' → logprob: -9.501420021057129
    4. 'Point' → logprob: -11.126420021057129
    5. '_Point' → logprob: -13.626420021057129
    6. ' Segment' → logprob: -14.501420021057129
    7. '	Point' → logprob: -14.626420021057129
    8. ' ' → logprob: -15.001420021057129
    9. ' Geometry' → logprob: -15.251420021057129
    10. 'Vector' → logprob: -15.376420021057129

Token 143: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006329743773676455
    2. ':
' → logprob: -7.3756327629089355
    3. '):' → logprob: -12.500633239746094
    4. ':

' → logprob: -13.750633239746094
    5. '():' → logprob: -14.375633239746094
    6. '>:' → logprob: -14.625633239746094
    7. '(object' → logprob: -15.750633239746094
    8. ':**' → logprob: -16.125633239746094
    9. ':def' → logprob: -16.375633239746094
    10. '_:' → logprob: -16.625633239746094

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44763755798339844
    2. ':' → logprob: -1.1976375579833984
    3. '    ' → logprob: -3.9476375579833984
    4. ' ' → logprob: -4.822637557983398
    5. '<|end|>' → logprob: -4.947637557983398
    6. ')' → logprob: -5.322637557983398
    7. '    
' → logprob: -5.447637557983398
    8. '):' → logprob: -5.447637557983398
    9. 'def' → logprob: -5.697637557983398
    10. '  ' → logprob: -6.197637557983398

Token 145: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0827765241265297
    2. ' def' → logprob: -2.5827765464782715
    3. '   ' → logprob: -5.9577765464782715
    4. '__' → logprob: -6.8327765464782715
    5. ' __' → logprob: -8.457776069641113
    6. ' ' → logprob: -13.957776069641113
    7. '    
' → logprob: -14.082776069641113
    8. '	def' → logprob: -14.207776069641113
    9. 'x' → logprob: -14.957776069641113
    10. '    ' → logprob: -15.332776069641113

Token 146: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.057663820683956146
    2. ' def' → logprob: -3.432663917541504
    3. 'init' → logprob: -4.557663917541504
    4. '_init' → logprob: -5.182663917541504
    5. ' init' → logprob: -5.682663917541504
    6. ' ' → logprob: -6.432663917541504
    7. '__' → logprob: -6.807663917541504
    8. 'def' → logprob: -7.432663917541504
    9. ' _' → logprob: -8.057663917541504
    10. 'nit' → logprob: -9.057663917541504

Token 147: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.3856492842023727e-06
    2. 'ini' → logprob: -14.250000953674316
    3. 'in' → logprob: -14.875000953674316
    4. 'i' → logprob: -15.250000953674316
    5. 'int' → logprob: -17.375001907348633
    6. '_init' → logprob: -18.250001907348633
    7. 'inite' → logprob: -18.875001907348633
    8. ' init' → logprob: -19.000001907348633
    9. 'inti' → logprob: -19.750001907348633
    10. 'innit' → logprob: -21.500001907348633

Token 148: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04952682927250862
    2. '(self' → logprob: -3.0495269298553467
    3. '(' → logprob: -7.424526691436768
    4. '__(
' → logprob: -8.799527168273926
    5. '__' → logprob: -8.924527168273926
    6. ' (' → logprob: -10.799527168273926
    7. '<|end|>' → logprob: -11.424527168273926
    8. 'self' → logprob: -11.674527168273926
    9. '<>(' → logprob: -12.049527168273926
    10. '__((' → logprob: -12.424527168273926

Token 149: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4974866644479334e-05
    2. ' self' → logprob: -11.125015258789062
    3. '
' → logprob: -16.125015258789062
    4. '	self' → logprob: -17.250015258789062
    5. '(self' → logprob: -18.375015258789062
    6. ',' → logprob: -18.500015258789062
    7. '0' → logprob: -18.625015258789062
    8. '   ' → logprob: -18.875015258789062
    9. ',self' → logprob: -19.500015258789062
    10. ')' → logprob: -19.625015258789062

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034774013329297304
    2. 'self' → logprob: -8.500348091125488
    3. ' ,' → logprob: -8.875348091125488
    4. ' self' → logprob: -13.250348091125488
    5. '__,' → logprob: -13.625348091125488
    6. ',self' → logprob: -14.250348091125488
    7. '_,' → logprob: -15.125348091125488
    8. ' ' → logprob: -16.500347137451172
    9. '_self' → logprob: -16.625347137451172
    10. ')' → logprob: -16.625347137451172

Token 151: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04886406287550926
    2. ' x' → logprob: -3.0488641262054443
    3. 'self' → logprob: -8.298864364624023
    4. ' self' → logprob: -10.548864364624023
    5. '	x' → logprob: -13.673864364624023
    6. ' ' → logprob: -15.548864364624023
    7. '   ' → logprob: -15.923864364624023
    8. ')x' → logprob: -16.798864364624023
    9. ')' → logprob: -17.798864364624023
    10. '_x' → logprob: -17.923864364624023

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07002434879541397
    2. ',' → logprob: -2.695024251937866
    3. '=' → logprob: -9.820024490356445
    4. ':int' → logprob: -11.320024490356445
    5. ' ,' → logprob: -11.445024490356445
    6. ' :' → logprob: -12.195024490356445
    7. ':,' → logprob: -13.070024490356445
    8. '):' → logprob: -13.445024490356445
    9. '<|end|>' → logprob: -14.570024490356445
    10. ')' → logprob: -15.070024490356445

Token 153: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.07891105115413666
    2. ' float' → logprob: -2.578911066055298
    3. 'int' → logprob: -10.828910827636719
    4. ' int' → logprob: -14.328910827636719
    5. '	float' → logprob: -15.328910827636719
    6. '(float' → logprob: -15.453910827636719
    7. '=float' → logprob: -15.703910827636719
    8. 'flo' → logprob: -16.07891082763672
    9. ' ' → logprob: -16.70391082763672
    10. '   ' → logprob: -16.82891082763672

Token 154: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016587569552939385
    2. ' ,' → logprob: -8.750165939331055
    3. '=' → logprob: -12.500165939331055
    4. ':' → logprob: -12.875165939331055
    5. '‌,' → logprob: -15.750165939331055
    6. '<|end|>' → logprob: -15.875165939331055
    7. ',x' → logprob: -16.000165939331055
    8. ',float' → logprob: -16.125165939331055
    9. ',
' → logprob: -16.250165939331055
    10. '):' → logprob: -16.250165939331055

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009762583300471306
    2. ' ' → logprob: -4.634762763977051
    3. '   ' → logprob: -12.63476276397705
    4. ')' → logprob: -13.75976276397705
    5. '=' → logprob: -13.88476276397705
    6. '    ' → logprob: -15.38476276397705
    7. ',' → logprob: -15.57226276397705
    8. '  ' → logprob: -15.63476276397705
    9. ' )' → logprob: -16.259761810302734
    10. '     ' → logprob: -16.384761810302734

Token 156: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11302365362644196
    2. '.' → logprob: -2.2380237579345703
    3. '.,' → logprob: -8.98802375793457
    4. ')' → logprob: -10.11302375793457
    5. ' ,' → logprob: -10.61302375793457
    6. '<|end|>' → logprob: -12.61302375793457
    7. ',float' → logprob: -13.23802375793457
    8. ' ' → logprob: -13.86302375793457
    9. '<|end|>' → logprob: -13.98802375793457
    10. ',
' → logprob: -14.11302375793457

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.87500286102295
    3. ')' → logprob: -14.25000286102295
    4. '.' → logprob: -14.62500286102295
    5. 'float' → logprob: -15.00000286102295
    6. '   ' → logprob: -15.50000286102295
    7. '```' → logprob: -17.500001907348633
    8. '  ' → logprob: -17.500001907348633
    9. ',' → logprob: -17.750001907348633
    10. '):
' → logprob: -18.125001907348633

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.56233171664644e-05
    2. ' ,' → logprob: -10.125055313110352
    3. ',x' → logprob: -11.875055313110352
    4. '<|end|>' → logprob: -12.625055313110352
    5. ',y' → logprob: -12.875055313110352
    6. '‌,' → logprob: -13.750055313110352
    7. ',float' → logprob: -14.375055313110352
    8. ',p' → logprob: -15.625055313110352
    9. ',
' → logprob: -15.875055313110352
    10. ' ' → logprob: -15.875055313110352

Token 159: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47407716512680054
    2. ' y' → logprob: -0.9740771651268005
    3. '	y' → logprob: -16.099077224731445
    4. ' ' → logprob: -16.474077224731445
    5. 'x' → logprob: -19.349077224731445
    6. ' ' → logprob: -19.474077224731445
    7. ',y' → logprob: -19.599077224731445
    8. '    ' → logprob: -19.724077224731445
    9. ')y' → logprob: -19.974077224731445
    10. '<|end|>' → logprob: -19.974077224731445

Token 160: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037269224412739277
    2. '=' → logprob: -5.753726959228516
    3. ')' → logprob: -8.003726959228516
    4. '):' → logprob: -9.253726959228516
    5. '<|end|>' → logprob: -10.253726959228516
    6. '<|end|>' → logprob: -10.378726959228516
    7. ' :' → logprob: -10.753726959228516
    8. ',' → logprob: -10.753726959228516
    9. '=float' → logprob: -12.253726959228516
    10. '=None' → logprob: -13.753726959228516

Token 161: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21861417591571808
    2. 'float' → logprob: -1.8436142206192017
    3. ' ' → logprob: -3.843614101409912
    4. ' float' → logprob: -4.093614101409912
    5. '=float' → logprob: -11.34361457824707
    6. '<float' → logprob: -12.59361457824707
    7. '_float' → logprob: -12.96861457824707
    8. '	float' → logprob: -13.09361457824707
    9. ')' → logprob: -13.21861457824707
    10. '(float' → logprob: -13.21861457824707

Token 162: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001537169300718233
    2. '0' → logprob: -9.875153541564941
    3. ':' → logprob: -10.000153541564941
    4. ' =' → logprob: -10.750153541564941
    5. '=float' → logprob: -10.750153541564941
    6. ')' → logprob: -11.625153541564941
    7. ' ' → logprob: -12.625153541564941
    8. '):' → logprob: -13.875153541564941
    9. '=None' → logprob: -15.000153541564941
    10. ')=' → logprob: -15.375153541564941

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001326433615759015
    2. ' ' → logprob: -6.626326560974121
    3. ')' → logprob: -15.501326560974121
    4. 'float' → logprob: -16.751325607299805
    5. '   ' → logprob: -16.876325607299805
    6. '  ' → logprob: -17.126325607299805
    7. '
' → logprob: -17.563825607299805
    8. '1' → logprob: -18.126325607299805
    9. '```' → logprob: -18.188825607299805
    10. ' float' → logprob: -18.438825607299805

Token 164: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000816773681435734
    2. ')' → logprob: -7.125816822052002
    3. '.)' → logprob: -12.625816345214844
    4. ',' → logprob: -12.875816345214844
    5. '0' → logprob: -13.000816345214844
    6. '):
' → logprob: -13.500816345214844
    7. '):' → logprob: -13.750816345214844
    8. '.
' → logprob: -14.500816345214844
    9. ' )' → logprob: -14.750816345214844
    10. ' .' → logprob: -15.875816345214844

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. ')' → logprob: -13.00000286102295
    3. ' ' → logprob: -14.37500286102295
    4. '```' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.500003814697266
    6. '5' → logprob: -17.625003814697266
    7. '):
' → logprob: -17.750003814697266
    8. 'float' → logprob: -18.125003814697266
    9. 'def' → logprob: -18.250003814697266
    10. '1' → logprob: -18.375003814697266

Token 166: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032688570208847523
    2. ')' → logprob: -5.753268718719482
    3. '):
' → logprob: -9.37826919555664
    4. ':' → logprob: -12.75326919555664
    5. ' ):' → logprob: -13.00326919555664
    6. ',' → logprob: -14.25326919555664
    7. '   ' → logprob: -14.87826919555664
    8. '):
' → logprob: -15.75326919555664
    9. '),' → logprob: -16.75326919555664
    10. ' ' → logprob: -17.37826919555664

Token 167: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020342117932159454
    2. '):' → logprob: -8.625203132629395
    3. ':
' → logprob: -11.500203132629395
    4. ',' → logprob: -12.000203132629395
    5. ' :' → logprob: -12.375203132629395
    6. '():' → logprob: -13.875203132629395
    7. ':**' → logprob: -14.125203132629395
    8. ':def' → logprob: -15.125203132629395
    9. ':void' → logprob: -15.625203132629395
    10. ':return' → logprob: -15.875203132629395

Token 168: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06196802109479904
    2. ' None' → logprob: -2.8119680881500244
    3. 'Point' → logprob: -15.686967849731445
    4. '_None' → logprob: -16.311967849731445
    5. 'float' → logprob: -16.686967849731445
    6. ' ' → logprob: -17.436967849731445
    7. '(None' → logprob: -17.936967849731445
    8. '   ' → logprob: -18.061967849731445
    9. 'none' → logprob: -18.186967849731445
    10. '=None' → logprob: -18.311967849731445

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041756415157578886
    2. '):' → logprob: -8.000417709350586
    3. ':
' → logprob: -9.625417709350586
    4. ',' → logprob: -11.625417709350586
    5. '       ' → logprob: -13.125417709350586
    6. '):
' → logprob: -13.625417709350586
    7. '():' → logprob: -14.125417709350586
    8. ' :' → logprob: -14.250417709350586
    9. '   ' → logprob: -14.375417709350586
    10. ')' → logprob: -14.625417709350586

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013131031300872564
    2. '   ' → logprob: -9.250131607055664
    3. 'self' → logprob: -11.250131607055664
    4. ' self' → logprob: -11.500131607055664
    5. 'x' → logprob: -12.750131607055664
    6. ' ' → logprob: -13.250131607055664
    7. '<|end|>' → logprob: -13.250131607055664
    8. '	' → logprob: -13.500131607055664
    9. '    ' → logprob: -14.125131607055664
    10. '      ' → logprob: -14.625131607055664

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.32658424973487854
    2. '       ' → logprob: -1.3265842199325562
    3. ' self' → logprob: -4.326584339141846
    4. '   ' → logprob: -11.451583862304688
    5. ' ' → logprob: -12.576583862304688
    6. '	self' → logprob: -12.701583862304688
    7. '        ' → logprob: -13.576583862304688
    8. '      ' → logprob: -14.201583862304688
    9. '	' → logprob: -14.451583862304688
    10. ' ' → logprob: -14.701583862304688

Token 172: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0040964470244944096
    2. '.x' → logprob: -5.504096508026123
    3. ' .' → logprob: -11.004096031188965
    4. 'x' → logprob: -14.254096031188965
    5. '._' → logprob: -14.754096031188965
    6. '.
' → logprob: -15.754096031188965
    7. '.space' → logprob: -16.50409698486328
    8. '.__' → logprob: -16.75409698486328
    9. '.

' → logprob: -17.37909698486328
    10. '.user' → logprob: -18.50409698486328

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2889632284641266
    2. '=' → logprob: -1.4139631986618042
    3. ',' → logprob: -5.038963317871094
    4. '<|end|>' → logprob: -6.913963317871094
    5. ' ,' → logprob: -8.788963317871094
    6. ' ' → logprob: -9.413963317871094
    7. ')' → logprob: -10.413963317871094
    8. '<|end|>' → logprob: -10.913963317871094
    9. ' =)' → logprob: -11.788963317871094
    10. ' =
' → logprob: -12.413963317871094

Token 174: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1602349877357483
    2. ' x' → logprob: -1.9102349281311035
    3. 'float' → logprob: -12.160235404968262
    4. '0' → logprob: -12.785235404968262
    5. ' float' → logprob: -12.910235404968262
    6. ' ' → logprob: -15.535235404968262
    7. '	x' → logprob: -16.660234451293945
    8. '   ' → logprob: -19.035234451293945
    9. '(x' → logprob: -19.285234451293945
    10. '$x' → logprob: -20.410234451293945

Token 175: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013002450577914715
    2. '   ' → logprob: -4.763002395629883
    3. '<|end|>' → logprob: -5.763002395629883
    4. ' ' → logprob: -7.638002395629883
    5. 'self' → logprob: -8.888002395629883
    6. '
' → logprob: -9.013002395629883
    7. '    
' → logprob: -9.138002395629883
    8. '    ' → logprob: -9.263002395629883
    9. '        
' → logprob: -9.638002395629883
    10. '  ' → logprob: -10.138002395629883

Token 177: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5161140561103821
    2. 'self' (adapté à ' self') → logprob: -1.0161139965057373
    3. ' self' → logprob: -3.7661139965057373
    4. ' y' → logprob: -4.016114234924316
    5. '       ' → logprob: -14.766114234924316
    6. ' ' → logprob: -15.141114234924316
    7. ' ' → logprob: -16.01611328125
    8. ',y' → logprob: -16.39111328125
    9. '
' → logprob: -16.64111328125
    10. '   ' → logprob: -17.01611328125

Token 178: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006750782020390034
    2. '.y' → logprob: -5.006750583648682
    3. ' .' → logprob: -10.50675106048584
    4. 'y' → logprob: -12.25675106048584
    5. '.x' → logprob: -12.75675106048584
    6. '<|end|>' → logprob: -16.006750106811523
    7. '.
' → logprob: -16.131750106811523
    8. '.py' → logprob: -16.131750106811523
    9. ' y' → logprob: -16.381750106811523
    10. ' ' → logprob: -17.256750106811523

Token 179: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 180: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008615515194833279
    2. ' y' → logprob: -4.758615493774414
    3. '0' → logprob: -14.133615493774414
    4. ' ' → logprob: -15.508615493774414
    5. '	y' → logprob: -17.258615493774414
    6. 'x' → logprob: -17.883615493774414
    7. '   ' → logprob: -18.758615493774414
    8. '
' → logprob: -19.383615493774414
    9. ' ' → logprob: -19.633615493774414
    10. 'yj' → logprob: -19.758615493774414

Token 181: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7287077307701111
    2. '
' → logprob: -1.6037077903747559
    3. '    
' → logprob: -1.6037077903747559
    4. '<|end|>' → logprob: -2.603707790374756
    5. '  
' → logprob: -3.978707790374756
    6. ' 
' → logprob: -4.478707790374756
    7. ' ' → logprob: -5.603707790374756
    8. 'def' → logprob: -6.353707790374756
    9. '<|end|>' → logprob: -6.603707790374756
    10. '   
' → logprob: -7.228707790374756

Token 183: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006584043148905039
    2. ' def' → logprob: -5.131584167480469
    3. '   ' → logprob: -7.631584167480469
    4. '    
' → logprob: -9.131584167480469
    5. '@property' → logprob: -10.131584167480469
    6. ' ' → logprob: -12.506584167480469
    7. 'd' → logprob: -12.756584167480469
    8. ' 
' → logprob: -12.881584167480469
    9. '@' → logprob: -12.881584167480469
    10. '
' → logprob: -13.006584167480469

Token 184: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11055101454257965
    2. ' __' → logprob: -2.610551118850708
    3. ' def' → logprob: -4.610550880432129
    4. ' repr' → logprob: -5.485550880432129
    5. '_repr' → logprob: -5.485550880432129
    6. ' _' → logprob: -6.110550880432129
    7. ' x' → logprob: -6.110550880432129
    8. ' ' → logprob: -6.360550880432129
    9. ' add' → logprob: -6.360550880432129
    10. ' str' → logprob: -6.735550880432129

Token 185: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0015530710807070136
    2. 'repr' → logprob: -7.126553058624268
    3. 'init' → logprob: -7.626553058624268
    4. 'add' → logprob: -8.501553535461426
    5. 'str' → logprob: -10.001553535461426
    6. 'lt' → logprob: -11.376553535461426
    7. ' eq' → logprob: -15.001553535461426
    8. 'le' → logprob: -15.501553535461426
    9. 'neg' → logprob: -15.876553535461426
    10. 'ne' → logprob: -16.25155258178711

Token 186: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10211587697267532
    2. '__' → logprob: -2.3521158695220947
    3. '__(
' → logprob: -6.727116107940674
    4. '__('' → logprob: -7.352116107940674
    5. '__("' → logprob: -10.602115631103516
    6. '__((' → logprob: -10.977115631103516
    7. '_' → logprob: -11.602115631103516
    8. '___' → logprob: -12.227115631103516
    9. '(' → logprob: -12.602115631103516
    10. '__.__' → logprob: -12.852115631103516

Token 187: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.47626737493556e-05
    2. ')' → logprob: -10.37503433227539
    3. ' self' → logprob: -12.62503433227539
    4. '(self' → logprob: -16.00003433227539
    5. '):' → logprob: -18.12503433227539
    6. '
' → logprob: -18.50003433227539
    7. '):
' → logprob: -18.62503433227539
    8. 's' → logprob: -18.87503433227539
    9. 'sel' → logprob: -19.00003433227539
    10. '),' → logprob: -19.00003433227539

Token 188: ')' (ID: 8)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7068642973899841
    2. ')' → logprob: -1.706864356994629
    3. 'self' → logprob: -2.081864356994629
    4. '):' → logprob: -2.331864356994629
    5. '__)' → logprob: -3.581864356994629
    6. '__(' → logprob: -4.206864356994629
    7. '__,' → logprob: -4.831864356994629
    8. ',' → logprob: -4.831864356994629
    9. ').__' → logprob: -4.831864356994629
    10. '__:' → logprob: -4.831864356994629

Token 189: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08436714112758636
    2. ':' → logprob: -3.209367036819458
    3. '(' → logprob: -4.209367275238037
    4. ' ->' → logprob: -4.584367275238037
    5. 'self' → logprob: -4.959367275238037
    6. '->' → logprob: -6.209367275238037
    7. ':
' → logprob: -6.584367275238037
    8. '(
' → logprob: -6.834367275238037
    9. '       ' → logprob: -7.209367275238037
    10. '   ' → logprob: -7.334367275238037

Token 190: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.04858771339058876
    2. ' str' → logprob: -3.0485877990722656
    3. 'stri' → logprob: -15.923587799072266
    4. '[str' → logprob: -16.298587799072266
    5. ' ' → logprob: -17.048587799072266
    6. 'string' → logprob: -17.298587799072266
    7. '	str' → logprob: -17.423587799072266
    8. '(str' → logprob: -17.798587799072266
    9. ':str' → logprob: -17.923587799072266
    10. 'st' → logprob: -18.673587799072266

Token 191: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.021936405450105667
    2. '(' → logprob: -4.396936416625977
    3. ':' → logprob: -4.771936416625977
    4. '       ' → logprob: -7.521936416625977
    5. '(
' → logprob: -8.521936416625977
    6. 'self' → logprob: -9.396936416625977
    7. ':
' → logprob: -9.896936416625977
    8. '(s' → logprob: -11.271936416625977
    9. '   ' → logprob: -11.396936416625977
    10. ':self' → logprob: -11.771936416625977

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00883922167122364
    2. ' f' → logprob: -5.258839130401611
    3. 'f' → logprob: -5.633839130401611
    4. '      ' → logprob: -11.38383960723877
    5. '     ' → logprob: -12.50883960723877
    6. '   ' → logprob: -12.63383960723877
    7. '    ' → logprob: -12.75883960723877
    8. 'return' → logprob: -13.63383960723877
    9. '           ' → logprob: -14.63383960723877
    10. '(f' → logprob: -14.88383960723877

Token 193: ' return' (ID: 622)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5698747634887695
    2. 'return' (adapté à ' return') → logprob: -1.3198747634887695
    3. '       ' → logprob: -1.8198747634887695
    4. ' f' → logprob: -5.5698747634887695
    5. ' return' → logprob: -6.8198747634887695
    6. '   ' → logprob: -8.19487476348877
    7. '           ' → logprob: -12.06987476348877
    8. '     ' → logprob: -12.94487476348877
    9. '    ' → logprob: -14.19487476348877
    10. '      ' → logprob: -14.56987476348877

Token 194: ' "' (ID: 392)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.25192973017692566
    2. 'f' → logprob: -1.501929759979248
    3. ' ' → logprob: -15.50192928314209
    4. '	f' → logprob: -15.75192928314209
    5. '   ' → logprob: -15.75192928314209
    6. '(f' → logprob: -16.876930236816406
    7. ''f' → logprob: -17.376930236816406
    8. '"' → logprob: -18.126930236816406
    9. 'F' → logprob: -18.501930236816406
    10. ''' → logprob: -19.126930236816406

Token 195: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0035934215411543846
    2. 'f' → logprob: -6.003593444824219
    3. '(Point' → logprob: -6.878593444824219
    4. ' Point' → logprob: -10.628593444824219
    5. '"' → logprob: -10.628593444824219
    6. '<Point' → logprob: -11.128593444824219
    7. '({' → logprob: -11.878593444824219
    8. '("' → logprob: -12.503593444824219
    9. '{' → logprob: -12.753593444824219
    10. '(f' → logprob: -12.878593444824219

Token 196: '({},' (ID: 45594)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.23172974586486816
    2. '("' → logprob: -1.7317297458648682
    3. '(' → logprob: -4.106729507446289
    4. '({},' → logprob: -5.231729507446289
    5. '("+' → logprob: -5.606729507446289
    6. '(x' → logprob: -6.106729507446289
    7. '(f' → logprob: -6.856729507446289
    8. '(%' → logprob: -8.106729507446289
    9. '("{' → logprob: -8.231729507446289
    10. '({"' → logprob: -8.231729507446289

Token 197: ' {})' (ID: 75167)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03863278776407242
    2. '{' → logprob: -4.038632869720459
    3. '{})' → logprob: -4.913632869720459
    4. '{},' → logprob: -5.163632869720459
    5. '{}' → logprob: -5.413632869720459
    6. ' self' → logprob: -6.163632869720459
    7. '{}.' → logprob: -8.2886323928833
    8. 'f' → logprob: -9.5386323928833
    9. ' {})' → logprob: -9.5386323928833
    10. ' {:.' → logprob: -9.6636323928833

Token 198: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.0953122228384018
    2. '.format' → logprob: -2.5953121185302734
    3. '.' → logprob: -4.220312118530273
    4. ')' → logprob: -6.970312118530273
    5. ').' → logprob: -8.720312118530273
    6. '{}".' → logprob: -8.720312118530273
    7. 'self' → logprob: -9.720312118530273
    8. '}".' → logprob: -9.845312118530273
    9. '"' → logprob: -10.095312118530273
    10. 'format' → logprob: -10.345312118530273

Token 199: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -4.4849443838757e-06
    2. ' format' → logprob: -13.125004768371582
    3. 'form' → logprob: -13.625004768371582
    4. '(format' → logprob: -14.750004768371582
    5. 'f' → logprob: -15.375004768371582
    6. '	format' → logprob: -15.375004768371582
    7. '__' → logprob: -15.625004768371582
    8. '.format' → logprob: -17.125003814697266
    9. 'x' → logprob: -17.125003814697266
    10. 'forma' → logprob: -17.500003814697266

Token 200: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.756989700486884e-05
    2. '(' → logprob: -9.37508773803711
    3. 'self' → logprob: -13.00008773803711
    4. '(
' → logprob: -15.00008773803711
    5. '(s' → logprob: -16.37508773803711
    6. ' (' → logprob: -16.87508773803711
    7. ',self' → logprob: -19.50008773803711
    8. 's' → logprob: -19.50008773803711
    9. '(

' → logprob: -19.50008773803711
    10. '(sel' → logprob: -19.50008773803711

Token 201: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -8.578184497309849e-05
    2. '.' → logprob: -9.375085830688477
    3. ' .' → logprob: -14.625085830688477
    4. 'x' → logprob: -14.875085830688477
    5. ',x' → logprob: -17.875085830688477
    6. ').' → logprob: -17.875085830688477
    7. ',' → logprob: -18.125085830688477
    8. 'self' → logprob: -18.750085830688477
    9. '.xlabel' → logprob: -19.250085830688477
    10. '._' → logprob: -19.875085830688477

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ',
' → logprob: -13.125003814697266
    3. ' ,' → logprob: -13.375003814697266
    4. ',self' → logprob: -14.875003814697266
    5. ',

' → logprob: -16.125003814697266
    6. '‌,' → logprob: -17.750003814697266
    7. ',y' → logprob: -18.250003814697266
    8. '<|end|>' → logprob: -18.250003814697266
    9. ',",' → logprob: -18.500003814697266
    10. ',\
' → logprob: -18.500003814697266

Token 203: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020817816257477
    2. ' self' → logprob: -2.350208282470703
    3. '       ' → logprob: -13.475208282470703
    4. '	self' → logprob: -16.600208282470703
    5. '        ' → logprob: -17.600208282470703
    6. '   ' → logprob: -18.100208282470703
    7. '    ' → logprob: -18.225208282470703
    8. ' ' → logprob: -18.225208282470703
    9. '(self' → logprob: -18.600208282470703
    10. '           ' → logprob: -18.725208282470703

Token 204: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.011051828041672707
    2. '.' → logprob: -4.511051654815674
    3. 'y' → logprob: -13.261052131652832
    4. ' .' → logprob: -14.386052131652832
    5. '.x' → logprob: -14.636052131652832
    6. ',y' → logprob: -14.761052131652832
    7. ',' → logprob: -15.261052131652832
    8. ' y' → logprob: -15.511052131652832
    9. ').' → logprob: -15.761052131652832
    10. ')' → logprob: -16.011051177978516

Token 205: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -13.87500286102295
    3. ',' → logprob: -14.00000286102295
    4. '))' → logprob: -14.75000286102295
    5. ')
' → logprob: -15.00000286102295
    6. '),' → logprob: -16.250003814697266
    7. '<|end|>' → logprob: -16.250003814697266
    8. '}' → logprob: -17.000003814697266
    9. ')}' → logprob: -17.375003814697266
    10. ')return' → logprob: -17.625003814697266

Token 206: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.715347170829773
    2. '   ' → logprob: -0.840347170829773
    3. '    
' → logprob: -2.7153472900390625
    4. '<|end|>' → logprob: -4.8403472900390625
    5. ' 
' → logprob: -5.5903472900390625
    6. '  
' → logprob: -7.9653472900390625
    7. '<|end|>' → logprob: -8.090347290039062
    8. '

' → logprob: -8.215347290039062
    9. ')' → logprob: -8.965347290039062
    10. '        
' → logprob: -9.215347290039062

Token 207: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020747773349285126
    2. '   ' → logprob: -4.020747661590576
    3. '    
' → logprob: -6.395747661590576
    4. ' def' → logprob: -7.145747661590576
    5. '
' → logprob: -10.520748138427734
    6. ' 
' → logprob: -10.895748138427734
    7. '        
' → logprob: -11.020748138427734
    8. '    ' → logprob: -11.395748138427734
    9. '  
' → logprob: -11.645748138427734
    10. ' ' → logprob: -11.645748138427734

Token 208: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17240488529205322
    2. ' __' → logprob: -2.0474047660827637
    3. ' def' → logprob: -3.6724047660827637
    4. ' ' → logprob: -6.297404766082764
    5. ' x' → logprob: -7.547404766082764
    6. ' _' → logprob: -8.172405242919922
    7. ' add' → logprob: -8.547405242919922
    8. '__' → logprob: -8.672405242919922
    9. 'def' → logprob: -9.047405242919922
    10. '_x' → logprob: -9.172405242919922

Token 209: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.008863329887390137
    2. 'add' → logprob: -4.75886344909668
    3. 'lt' → logprob: -8.63386344909668
    4. 'sub' → logprob: -9.63386344909668
    5. 'neg' → logprob: -13.25886344909668
    6. 'hash' → logprob: -13.63386344909668
    7. 'init' → logprob: -13.75886344909668
    8. 'mul' → logprob: -14.50886344909668
    9. 'ne' → logprob: -15.75886344909668
    10. 'abs' → logprob: -15.75886344909668

Token 210: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.031361691653728485
    2. '__' → logprob: -3.6563615798950195
    3. '(' → logprob: -5.4063615798950195
    4. '(self' → logprob: -8.03136157989502
    5. '_' → logprob: -8.90636157989502
    6. '__(
' → logprob: -10.40636157989502
    7. '__((' → logprob: -10.53136157989502
    8. ' (' → logprob: -11.53136157989502
    9. '_(' → logprob: -11.53136157989502
    10. '__('' → logprob: -11.65636157989502

Token 211: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.191489642835222e-05
    2. 'other' → logprob: -10.375041961669922
    3. ' self' → logprob: -11.500041961669922
    4. ')' → logprob: -14.875041961669922
    5. '(self' → logprob: -16.625041961669922
    6. '
' → logprob: -16.625041961669922
    7. ' ' → logprob: -17.875041961669922
    8. '0' → logprob: -18.500041961669922
    9. ' other' → logprob: -18.625041961669922
    10. '	self' → logprob: -18.875041961669922

Token 212: ',' (ID: 11)
  Prédit: '__,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__,' → logprob: -0.7323184609413147
    2. '__(' → logprob: -1.23231840133667
    3. '__' → logprob: -1.48231840133667
    4. ',' → logprob: -8.482318878173828
    5. '__(*' → logprob: -9.607318878173828
    6. '__((' → logprob: -9.732318878173828
    7. '__,
' → logprob: -10.107318878173828
    8. '__('' → logprob: -10.357318878173828
    9. ',__' → logprob: -10.982318878173828
    10. '__(
' → logprob: -10.982318878173828

Token 213: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.014164329506456852
    2. ' other' → logprob: -4.264164447784424
    3. 'self' → logprob: -15.389163970947266
    4. 'o' → logprob: -15.514163970947266
    5. 'Other' → logprob: -15.889163970947266
    6. 'oth' → logprob: -16.139163970947266
    7. ' ' → logprob: -16.639163970947266
    8. '(other' → logprob: -16.764163970947266
    9. 'point' → logprob: -16.889163970947266
    10. '__' → logprob: -17.639163970947266

Token 214: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6975349187850952
    2. '):' → logprob: -0.6975349187850952
    3. ':' → logprob: -5.572535037994385
    4. ' ):' → logprob: -8.072534561157227
    5. ' )' → logprob: -8.447534561157227
    6. '):
' → logprob: -10.322534561157227
    7. ',' → logprob: -12.572534561157227
    8. ' ' → logprob: -12.697534561157227
    9. ')->' → logprob: -13.322534561157227
    10. '),' → logprob: -13.572534561157227

Token 215: ' object' (ID: 2817)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.23405040800571442
    2. ')' → logprob: -1.7340503931045532
    3. ' ' → logprob: -4.234050273895264
    4. ' ):' → logprob: -4.984050273895264
    5. ' None' → logprob: -5.734050273895264
    6. 'None' → logprob: -6.234050273895264
    7. '):' → logprob: -6.609050273895264
    8. ' object' → logprob: -6.859050273895264
    9. 'Point' → logprob: -6.859050273895264
    10. ' ):
' → logprob: -7.109050273895264

Token 216: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.522638169466518e-05
    2. ' )' → logprob: -11.250024795532227
    3. '):' → logprob: -11.375024795532227
    4. ')->' → logprob: -14.625024795532227
    5. ':' → logprob: -16.125024795532227
    6. '   ' → logprob: -16.500024795532227
    7. '):
' → logprob: -16.875024795532227
    8. ',)' → logprob: -18.000024795532227
    9. ')is' → logprob: -18.250024795532227
    10. ' ' → logprob: -18.375024795532227

Token 217: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005931997671723366
    2. ')' → logprob: -5.630931854248047
    3. '->' → logprob: -6.880931854248047
    4. ' ->' → logprob: -7.255931854248047
    5. ')->' → logprob: -8.005931854248047
    6. '):' → logprob: -8.505931854248047
    7. '       ' → logprob: -10.630931854248047
    8. '   ' → logprob: -11.630931854248047
    9. ':return' → logprob: -11.880931854248047
    10. ':
' → logprob: -12.005931854248047

Token 218: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00671584764495492
    2. ' bool' → logprob: -5.006715774536133
    3. '<bool' → logprob: -15.131715774536133
    4. '	bool' → logprob: -15.631715774536133
    5. '(bool' → logprob: -17.881715774536133
    6. ' ' → logprob: -19.006715774536133
    7. ',bool' → logprob: -19.006715774536133
    8. 'True' → logprob: -19.006715774536133
    9. '.bool' → logprob: -20.256715774536133
    10. '   ' → logprob: -20.381715774536133

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.951771421066951e-05
    2. ':
' → logprob: -10.875029563903809
    3. '):' → logprob: -11.750029563903809
    4. ' :' → logprob: -13.250029563903809
    5. ':return' → logprob: -15.000029563903809
    6. '():' → logprob: -15.875029563903809
    7. '   ' → logprob: -16.500028610229492
    8. '       ' → logprob: -16.625028610229492
    9. ':**' → logprob: -16.750028610229492
    10. ':def' → logprob: -17.250028610229492

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025107357650995255
    2. ' if' → logprob: -6.6275105476379395
    3. ' return' → logprob: -8.002511024475098
    4. 'if' → logprob: -8.502511024475098
    5. ' isinstance' → logprob: -8.627511024475098
    6. '    ' → logprob: -9.127511024475098
    7. ':' → logprob: -9.127511024475098
    8. '   ' → logprob: -9.502511024475098
    9. 'return' → logprob: -9.627511024475098
    10. '      ' → logprob: -10.252511024475098

Token 221: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.318365216255188
    2. 'is' → logprob: -1.318365216255188
    3. '       ' → logprob: -5.568365097045898
    4. 'return' → logprob: -7.443365097045898
    5. 'not' → logprob: -8.068365097045898
    6. ' isinstance' → logprob: -8.693365097045898
    7. ' if' → logprob: -8.818365097045898
    8. '           ' → logprob: -10.068365097045898
    9. '   ' → logprob: -11.318365097045898
    10. 'assert' → logprob: -13.568365097045898

Token 222: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20155349373817444
    2. ' not' → logprob: -1.701553463935852
    3. ' isinstance' → logprob: -8.951553344726562
    4. 'is' → logprob: -12.076553344726562
    5. '   ' → logprob: -12.576553344726562
    6. '	not' → logprob: -14.326553344726562
    7. '(not' → logprob: -15.326553344726562
    8. ' ' → logprob: -15.451553344726562
    9. 'no' → logprob: -15.826553344726562
    10. 'n' → logprob: -16.076553344726562

Token 223: ' isinstance' (ID: 25889)
  Prédit: ' isinstance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.029753033071756363
    2. 'is' → logprob: -3.5297529697418213
    3. '(is' → logprob: -12.904752731323242
    4. 'Is' → logprob: -16.404752731323242
    5. ' hasattr' → logprob: -17.154752731323242
    6. 'type' → logprob: -17.529752731323242
    7. '   ' → logprob: -18.279752731323242
    8. '  ' → logprob: -19.404752731323242
    9. ' is' → logprob: -19.404752731323242
    10. 'import' → logprob: -19.654752731323242

Token 224: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -7.73183855926618e-05
    2. 'other' → logprob: -9.500077247619629
    3. ' other' → logprob: -13.000077247619629
    4. 'Other' → logprob: -16.250078201293945
    5. '(' → logprob: -19.625078201293945
    6. '(self' → logprob: -19.750078201293945
    7. '_other' → logprob: -20.250078201293945
    8. 'OTHER' → logprob: -21.250078201293945
    9. '.other' → logprob: -21.750078201293945
    10. ' (' → logprob: -22.500078201293945

Token 225: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00022940391500014812
    2. 'other' → logprob: -9.375229835510254
    3. '(self' → logprob: -9.750229835510254
    4. '(' → logprob: -10.250229835510254
    5. ',' → logprob: -10.250229835510254
    6. ' (' → logprob: -11.750229835510254
    7. ' other' → logprob: -12.000229835510254
    8. '(Point' → logprob: -14.000229835510254
    9. ')' → logprob: -14.875229835510254
    10. 'self' → logprob: -15.875229835510254

Token 226: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.07889044284820557
    2. ' Point' → logprob: -2.578890323638916
    3. '	Point' → logprob: -14.828890800476074
    4. 'self' → logprob: -15.578890800476074
    5. '(Point' → logprob: -16.453889846801758
    6. '   ' → logprob: -17.203889846801758
    7. '_Point' → logprob: -17.703889846801758
    8. 'Points' → logprob: -17.828889846801758
    9. ' ' → logprob: -18.453889846801758
    10. ' self' → logprob: -18.703889846801758

Token 227: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31347745656967163
    2. '):
' → logprob: -1.3134775161743164
    3. ')' → logprob: -8.563477516174316
    4. ' ):' → logprob: -11.313477516174316
    5. '):
' → logprob: -12.063477516174316
    6. '):

' → logprob: -12.438477516174316
    7. ' ):
' → logprob: -13.313477516174316
    8. '   ' → logprob: -14.438477516174316
    9. ':' → logprob: -15.938477516174316
    10. ' ' → logprob: -16.3134765625

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.697387966094539e-05
    2. 'return' → logprob: -10.000086784362793
    3. ' return' → logprob: -10.250086784362793
    4. '            
' → logprob: -13.250086784362793
    5. '               ' → logprob: -13.750086784362793
    6. '            ' → logprob: -14.375086784362793
    7. '0' → logprob: -14.750086784362793
    8. '
' → logprob: -15.000086784362793
    9. ',' → logprob: -15.250086784362793
    10. '		' → logprob: -15.625086784362793

Token 229: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.029868509620428085
    2. ' return' → logprob: -3.5298686027526855
    3. '           ' → logprob: -9.529868125915527
    4. '       ' → logprob: -10.029868125915527
    5. ':return' → logprob: -14.404868125915527
    6. 'False' → logprob: -15.154868125915527
    7. '	return' → logprob: -16.154869079589844
    8. '{return' → logprob: -16.279869079589844
    9. 'Return' → logprob: -16.654869079589844
    10. '
' → logprob: -16.654869079589844

Token 230: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.000206401280593127
    2. ' return' → logprob: -8.500205993652344
    3. '       ' → logprob: -13.500205993652344
    4. '           ' → logprob: -13.500205993652344
    5. 'Return' → logprob: -16.250205993652344
    6. '   ' → logprob: -17.125205993652344
    7. ':return' → logprob: -18.125205993652344
    8. '	return' → logprob: -19.000205993652344
    9. 'False' → logprob: -19.500205993652344
    10. '               ' → logprob: -19.750205993652344

Token 231: '("' (ID: 568)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.0047724610194563866
    2. '(' → logprob: -6.129772663116455
    3. 'False' → logprob: -6.254772663116455
    4. '()' → logprob: -8.504772186279297
    5. '("' → logprob: -9.129772186279297
    6. '(True' → logprob: -9.254772186279297
    7. 'return' → logprob: -9.379772186279297
    8. ' False' → logprob: -9.504772186279297
    9. '(return' → logprob: -10.254772186279297
    10. '(
' → logprob: -10.879772186279297

Token 232: 'Not' (ID: 2874)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004837603308260441
    2. ' False' → logprob: -5.504837512969971
    3. '(False' → logprob: -7.629837512969971
    4. 'return' → logprob: -8.379837989807129
    5. 'Not' → logprob: -10.629837989807129
    6. ' return' → logprob: -11.504837989807129
    7. '")' → logprob: -13.254837989807129
    8. '   ' → logprob: -13.879837989807129
    9. 'True' → logprob: -14.129837989807129
    10. 'false' → logprob: -14.129837989807129

Token 233: 'Implemented' (ID: 42030)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -1.1625547409057617
    2. 'True' → logprob: -1.4125547409057617
    3. '(False' → logprob: -1.9125547409057617
    4. 'Implemented' → logprob: -2.7875547409057617
    5. 'False' → logprob: -2.7875547409057617
    6. 'Equal' → logprob: -3.5375547409057617
    7. ' True' → logprob: -3.5375547409057617
    8. 'implemented' → logprob: -3.7875547409057617
    9. '(' → logprob: -4.162554740905762
    10. '(return' → logprob: -4.537554740905762

Token 234: ' in' (ID: 306)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5164397954940796
    2. '")
' → logprob: -1.0164397954940796
    3. 'return' → logprob: -4.141439914703369
    4. ' return' → logprob: -5.016439914703369
    5. ' ")
' → logprob: -5.266439914703369
    6. ')' → logprob: -5.391439914703369
    7. ' ")' → logprob: -6.016439914703369
    8. ')
' → logprob: -6.266439914703369
    9. '   ' → logprob: -6.391439914703369
    10. ')")' → logprob: -7.141439914703369

Token 235: ' Point' (ID: 9971)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32001352310180664
    2. ' return' → logprob: -1.3200135231018066
    3. 'def' → logprob: -5.695013523101807
    4. 'self' → logprob: -6.445013523101807
    5. '__' → logprob: -6.945013523101807
    6. '
' → logprob: -8.445013046264648
    7. '")' → logprob: -9.320013046264648
    8. '   ' → logprob: -9.320013046264648
    9. ')' → logprob: -9.820013046264648
    10. ' self' → logprob: -9.820013046264648

Token 236: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.13882514834403992
    2. '")
' → logprob: -2.1388251781463623
    3. ')' → logprob: -5.638824939727783
    4. 'return' → logprob: -5.888824939727783
    5. ' return' → logprob: -6.263824939727783
    6. ')")' → logprob: -7.263824939727783
    7. ' ")
' → logprob: -7.513824939727783
    8. ' ")' → logprob: -7.513824939727783
    9. '   ' → logprob: -7.763824939727783
    10. ')")
' → logprob: -7.888824939727783

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005173751153051853
    2. 'return' → logprob: -5.755173683166504
    3. ' return' → logprob: -6.255173683166504
    4. '
' → logprob: -10.005173683166504
    5. '       ' → logprob: -10.880173683166504
    6. '               ' → logprob: -12.505173683166504
    7. '          ' → logprob: -13.880173683166504
    8. '		' → logprob: -14.005173683166504
    9. ',' → logprob: -14.505173683166504
    10. '   ' → logprob: -14.755173683166504

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005985465249978006
    2. ' return' → logprob: -7.500598430633545
    3. '           ' → logprob: -10.000598907470703
    4. '       ' → logprob: -16.625598907470703
    5. '{return' → logprob: -19.125598907470703
    6. ':return' → logprob: -19.250598907470703
    7. 'Return' → logprob: -19.625598907470703
    8. '   ' → logprob: -19.750598907470703
    9. '```' → logprob: -19.875598907470703
    10. '	return' → logprob: -20.000598907470703

Token 239: ' Not' (ID: 4037)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0070699588395655155
    2. 'Not' → logprob: -5.007070064544678
    3. ' False' → logprob: -8.00706958770752
    4. ' Not' → logprob: -10.75706958770752
    5. '   ' → logprob: -16.007070541381836
    6. '(False' → logprob: -17.632070541381836
    7. 'false' → logprob: -18.257070541381836
    8. 'not' → logprob: -18.507070541381836
    9. '       ' → logprob: -19.007070541381836
    10. '_Not' → logprob: -19.382070541381836

Token 240: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -6.24179228907451e-05
    2. 'implemented' → logprob: -9.875061988830566
    3. 'Implement' → logprob: -11.625061988830566
    4. ' implemented' → logprob: -14.625061988830566
    5. 'Implementation' → logprob: -15.000061988830566
    6. 'Equal' → logprob: -15.000061988830566
    7. '   ' → logprob: -15.000061988830566
    8. 'Impl' → logprob: -15.500061988830566
    9. ' Implement' → logprob: -16.000062942504883
    10. '_IMPLEMENT' → logprob: -16.250062942504883

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018435632809996605
    2. '
' → logprob: -6.376843452453613
    3. '        
' → logprob: -9.001843452453613
    4. 'return' → logprob: -12.751843452453613
    5. ')' → logprob: -13.001843452453613
    6. '<|end|>' → logprob: -13.001843452453613
    7. '  
' → logprob: -13.251843452453613
    8. ' return' → logprob: -13.251843452453613
    9. '      ' → logprob: -13.501843452453613
    10. '        ' → logprob: -14.001843452453613

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.456358823925257e-05
    2. '
' → logprob: -10.000064849853516
    3. '        
' → logprob: -11.500064849853516
    4. 'return' → logprob: -12.000064849853516
    5. '   ' → logprob: -13.875064849853516
    6. ' return' → logprob: -14.250064849853516
    7. '      ' → logprob: -15.125064849853516
    8. '	' → logprob: -15.250064849853516
    9. '    
' → logprob: -16.750064849853516
    10. '     ' → logprob: -16.750064849853516

Token 243: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3874744474887848
    2. 'return' (adapté à ' return') → logprob: -1.1374744176864624
    3. ' return' → logprob: -7.512474536895752
    4. '   ' → logprob: -10.387474060058594
    5. '
' → logprob: -10.887474060058594
    6. '	return' → logprob: -12.762474060058594
    7. '        
' → logprob: -12.887474060058594
    8. '	' → logprob: -14.012474060058594
    9. '	   ' → logprob: -15.387474060058594
    10. '           ' → logprob: -16.012474060058594

Token 244: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0019372005481272936
    2. ' float' → logprob: -6.251937389373779
    3. 'self' → logprob: -12.126936912536621
    4. '   ' → logprob: -12.876936912536621
    5. '(float' → logprob: -15.751936912536621
    6. 'abs' → logprob: -16.001937866210938
    7. 'flo' → logprob: -16.126937866210938
    8. ' ' → logprob: -16.376937866210938
    9. '
' → logprob: -17.126937866210938
    10. '       ' → logprob: -17.251937866210938

Token 245: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -2.1008713702030946e-06
    2. 'equal' → logprob: -13.250001907348633
    3. '_EQUAL' → logprob: -16.125001907348633
    4. 'Equal' → logprob: -17.500001907348633
    5. '_equ' → logprob: -17.625001907348633
    6. '(equal' → logprob: -18.000001907348633
    7. '_equals' → logprob: -18.125001907348633
    8. ' equal' → logprob: -18.375001907348633
    9. '_' → logprob: -18.625001907348633
    10. '.equal' → logprob: -19.000001907348633

Token 246: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.319370302458992e-06
    2. '(' → logprob: -12.250005722045898
    3. 'self' → logprob: -14.750005722045898
    4. '(
' → logprob: -17.0000057220459
    5. '(this' → logprob: -17.6250057220459
    6. '=self' → logprob: -20.8750057220459
    7. '	self' → logprob: -20.8750057220459
    8. '
' → logprob: -21.1250057220459
    9. '   ' → logprob: -21.2500057220459
    10. '[self' → logprob: -21.8750057220459

Token 247: '.x' (ID: 3700)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07160361111164093
    2. '.x' → logprob: -2.821603536605835
    3. '.' → logprob: -5.321603775024414
    4. '(' → logprob: -5.446603775024414
    5. 'self' → logprob: -8.821603775024414
    6. '(x' → logprob: -9.071603775024414
    7. '.self' → logprob: -10.571603775024414
    8. '(
' → logprob: -10.696603775024414
    9. '(.' → logprob: -10.946603775024414
    10. 'x' → logprob: -11.071603775024414

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024084746837615967
    2. ' ,' → logprob: -8.37524127960205
    3. 'other' → logprob: -11.62524127960205
    4. '(other' → logprob: -14.87524127960205
    5. ' other' → logprob: -15.25024127960205
    6. '<|end|>' → logprob: -15.50024127960205
    7. ',
' → logprob: -15.75024127960205
    8. ',self' → logprob: -16.375240325927734
    9. ')' → logprob: -16.500240325927734
    10. ',y' → logprob: -16.750240325927734

Token 249: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011048408225178719
    2. ' other' → logprob: -4.511048316955566
    3. '(other' → logprob: -14.511048316955566
    4. 'Other' → logprob: -16.886049270629883
    5. 'self' → logprob: -16.886049270629883
    6. '.other' → logprob: -17.386049270629883
    7. '_other' → logprob: -18.261049270629883
    8. ' ' → logprob: -18.636049270629883
    9. 'othe' → logprob: -19.261049270629883
    10. '
' → logprob: -19.511049270629883

Token 250: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.1270340532064438
    2. '.' → logprob: -2.1270339488983154
    3. ').' → logprob: -10.002034187316895
    4. ' .' → logprob: -10.502034187316895
    5. '.y' → logprob: -11.252034187316895
    6. ')' → logprob: -11.502034187316895
    7. '.
' → logprob: -12.627034187316895
    8. ' ' → logprob: -13.252034187316895
    9. 'x' → logprob: -13.377034187316895
    10. '[' → logprob: -13.752034187316895

Token 251: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021775043569505215
    2. ' and' → logprob: -6.752177715301514
    3. 'and' → logprob: -7.252177715301514
    4. ' )' → logprob: -8.127177238464355
    5. '       ' → logprob: -13.502177238464355
    6. '        ' → logprob: -14.752177238464355
    7. ')&&' → logprob: -15.127177238464355
    8. '   ' → logprob: -15.752177238464355
    9. ')
' → logprob: -15.752177238464355
    10. '           ' → logprob: -16.752178192138672

Token 252: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759934186935425
    2. 'and' → logprob: -0.8259934186935425
    3. '       ' → logprob: -10.325993537902832
    4. '	and' → logprob: -12.200993537902832
    5. '   ' → logprob: -12.325993537902832
    6. '        ' → logprob: -12.700993537902832
    7. '    ' → logprob: -12.950993537902832
    8. ' ' → logprob: -13.450993537902832
    9. ')' → logprob: -13.575993537902832
    10. '           ' → logprob: -13.950993537902832

Token 253: ' \
' (ID: 6814)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.1602243334054947
    2. 'float' → logprob: -1.9102243185043335
    3. '        ' → logprob: -16.91022491455078
    4. '       ' → logprob: -16.91022491455078
    5. '(float' → logprob: -17.41022491455078
    6. ' ' → logprob: -18.16022491455078
    7. '.float' → logprob: -18.41022491455078
    8. '	float' → logprob: -18.53522491455078
    9. ' ' → logprob: -18.78522491455078
    10. ',float' → logprob: -19.03522491455078

Token 254: '           ' (ID: 352)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.3133500814437866
    2. ' float' → logprob: -1.3133500814437866
    3. '       ' → logprob: -9.438349723815918
    4. '        ' → logprob: -12.063349723815918
    5. '           ' → logprob: -14.438349723815918
    6. '(float' → logprob: -14.563349723815918
    7. '               ' → logprob: -14.938349723815918
    8. 'abs' → logprob: -15.188349723815918
    9. '.float' → logprob: -15.563349723815918
    10. ' ' → logprob: -15.688349723815918

Token 255: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' (adapté à ' float') → logprob: -0.008615754544734955
    2. ' float' → logprob: -4.758615970611572
    3. '       ' → logprob: -14.133615493774414
    4. '           ' → logprob: -15.258615493774414
    5. '        ' → logprob: -16.258615493774414
    6. '         ' → logprob: -16.758615493774414
    7. 'self' → logprob: -16.758615493774414
    8. 'abs' → logprob: -18.008615493774414
    9. '     ' → logprob: -18.133615493774414
    10. '          ' → logprob: -18.133615493774414

Token 256: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -4.429896944202483e-05
    2. 'equal' → logprob: -10.125043869018555
    3. '_EQUAL' → logprob: -13.375043869018555
    4. '_equals' → logprob: -13.500043869018555
    5. 'Equal' → logprob: -14.250043869018555
    6. ' equal' → logprob: -14.750043869018555
    7. '_' → logprob: -15.750043869018555
    8. '(equal' → logprob: -16.625043869018555
    9. '.equal' → logprob: -16.875043869018555
    10. '_equ' → logprob: -18.500043869018555

Token 257: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.190178904333152e-05
    2. '(' → logprob: -10.375031471252441
    3. 'self' → logprob: -14.750031471252441
    4. '(
' → logprob: -15.375031471252441
    5. ' (' → logprob: -18.250032424926758
    6. ' self' → logprob: -19.125032424926758
    7. '(s' → logprob: -20.375032424926758
    8. '<|end|>' → logprob: -20.375032424926758
    9. ',self' → logprob: -20.625032424926758
    10. '[self' → logprob: -21.000032424926758

Token 258: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.000789259618613869
    2. '.' → logprob: -7.750789165496826
    3. 'self' → logprob: -8.750789642333984
    4. 'y' → logprob: -8.750789642333984
    5. '.s' → logprob: -11.625789642333984
    6. '       ' → logprob: -12.250789642333984
    7. '.py' → logprob: -12.250789642333984
    8. '.self' → logprob: -12.250789642333984
    9. ' .' → logprob: -12.875789642333984
    10. 's' → logprob: -13.125789642333984

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.566264295950532e-05
    2. '(other' → logprob: -10.125085830688477
    3. ' ,' → logprob: -11.250085830688477
    4. 'other' → logprob: -11.875085830688477
    5. 'self' → logprob: -11.875085830688477
    6. ')' → logprob: -12.125085830688477
    7. '(' → logprob: -12.625085830688477
    8. '(self' → logprob: -12.625085830688477
    9. ',self' → logprob: -13.125085830688477
    10. '           ' → logprob: -13.500085830688477

Token 260: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07890576124191284
    2. ' other' → logprob: -2.5789058208465576
    3. 'self' → logprob: -11.203906059265137
    4. '(other' → logprob: -13.078906059265137
    5. 'Other' → logprob: -15.953906059265137
    6. ' self' → logprob: -16.07890510559082
    7. '.other' → logprob: -16.82890510559082
    8. '           ' → logprob: -18.07890510559082
    9. '       ' → logprob: -18.20390510559082
    10. '_other' → logprob: -18.32890510559082

Token 261: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -1.8670179997570813e-05
    2. '.' → logprob: -11.250019073486328
    3. 'y' → logprob: -13.125019073486328
    4. ')' → logprob: -13.125019073486328
    5. ',' → logprob: -14.250019073486328
    6. '.x' → logprob: -14.500019073486328
    7. ',y' → logprob: -15.250019073486328
    8. ' .' → logprob: -15.500019073486328
    9. ' y' → logprob: -18.000019073486328
    10. '.py' → logprob: -18.375019073486328

Token 262: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. '       ' → logprob: -11.250020027160645
    3. ')
' → logprob: -12.125020027160645
    4. ' )' → logprob: -14.625020027160645
    5. '   ' → logprob: -14.875020027160645
    6. ')return' → logprob: -15.750020027160645
    7. '<|end|>' → logprob: -16.750019073486328
    8. '))' → logprob: -16.750019073486328
    9. ')\
' → logprob: -17.375019073486328
    10. ')#' → logprob: -17.375019073486328

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6465026140213013
    2. '<|end|>' → logprob: -1.0215026140213013
    3. '    
' → logprob: -2.6465024948120117
    4. '
' → logprob: -4.396502494812012
    5. ')' → logprob: -4.896502494812012
    6. ' ' → logprob: -4.896502494812012
    7. '  
' → logprob: -5.521502494812012
    8. ' 
' → logprob: -5.646502494812012
    9. '<|end|>' → logprob: -6.146502494812012
    10. '    ' → logprob: -6.396502494812012

Token 264: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2411360889673233
    2. '    
' → logprob: -2.616136074066162
    3. '
' → logprob: -2.741136074066162
    4. ' 
' → logprob: -3.491136074066162
    5. 'def' (adapté à ' def') → logprob: -3.616136074066162
    6. ' def' → logprob: -4.241136074066162
    7. '  
' → logprob: -6.866136074066162
    8. ' ' → logprob: -6.991136074066162
    9. '   
' → logprob: -7.116136074066162
    10. '        
' → logprob: -7.366136074066162

Token 265: ' __' (ID: 2516)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.5750335454940796
    2. 'sub' → logprob: -1.2000335454940796
    3. '__' → logprob: -2.075033664703369
    4. 'add' → logprob: -6.200033664703369
    5. '_sub' → logprob: -6.200033664703369
    6. '_lt' → logprob: -6.325033664703369
    7. 'def' → logprob: -6.450033664703369
    8. 'abs' → logprob: -6.950033664703369
    9. 'ne' → logprob: -7.325033664703369
    10. ' __' → logprob: -7.825033664703369

Token 266: 'add' (ID: 964)
  Prédit: 'lt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lt' → logprob: -0.22820018231868744
    2. 'add' → logprob: -1.7282001972198486
    3. 'hash' → logprob: -3.9782001972198486
    4. 'sub' → logprob: -4.9781999588012695
    5. 'neg' → logprob: -7.6031999588012695
    6. 'ne' → logprob: -8.47819995880127
    7. 'mul' → logprob: -9.72819995880127
    8. 'le' → logprob: -10.10319995880127
    9. 'str' → logprob: -11.85319995880127
    10. 'repr' → logprob: -12.60319995880127

Token 267: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6230700016021729
    2. '__(' → logprob: -0.8730700016021729
    3. ' (' → logprob: -3.998070001602173
    4. '__' → logprob: -3.998070001602173
    5. '(self' → logprob: -5.748069763183594
    6. '_' → logprob: -5.873069763183594
    7. '<|end|>' → logprob: -6.373069763183594
    8. ' ' → logprob: -6.998069763183594
    9. '__(
' → logprob: -8.623069763183594
    10. '_(' → logprob: -8.998069763183594

Token 268: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033391619217582047
    2. ' self' → logprob: -8.125333786010742
    3. '(self' → logprob: -10.250333786010742
    4. 'other' → logprob: -14.125333786010742
    5. ')' → logprob: -14.750333786010742
    6. '
' → logprob: -14.750333786010742
    7. ' ' → logprob: -15.000333786010742
    8. '<|end|>' → logprob: -15.000333786010742
    9. '	self' → logprob: -15.750333786010742
    10. '   ' → logprob: -16.250333786010742

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05000467225909233
    2. ' ,' → logprob: -4.050004482269287
    3. '__' → logprob: -4.800004482269287
    4. 'self' → logprob: -4.925004482269287
    5. '__(' → logprob: -5.300004482269287
    6. '<|end|>' → logprob: -5.925004482269287
    7. '__,' → logprob: -6.050004482269287
    8. ')' → logprob: -6.175004482269287
    9. ' ' → logprob: -6.800004482269287
    10. '(self' → logprob: -6.925004482269287

Token 270: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.541562020778656
    2. ' other' → logprob: -1.0415620803833008
    3. 'self' → logprob: -2.791562080383301
    4. ' self' → logprob: -5.541562080383301
    5. ' ' → logprob: -12.0415620803833
    6. 'Other' → logprob: -13.1665620803833
    7. ' o' → logprob: -13.2915620803833
    8. '_other' → logprob: -14.1665620803833
    9. 'o' → logprob: -14.2915620803833
    10. 'oth' → logprob: -14.7915620803833

Token 271: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1798819601535797
    2. ')' → logprob: -2.054882049560547
    3. ':' → logprob: -3.554882049560547
    4. '):
' → logprob: -5.804882049560547
    5. '<|end|>' → logprob: -5.804882049560547
    6. ' ):' → logprob: -7.429882049560547
    7. '<|end|>' → logprob: -7.804882049560547
    8. ' )' → logprob: -8.554882049560547
    9. ' ' → logprob: -8.679882049560547
    10. 'self' → logprob: -9.179882049560547

Token 272: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.6367770433425903
    2. 'Point' → logprob: -0.7617770433425903
    3. ')' → logprob: -7.136776924133301
    4. 'self' → logprob: -7.136776924133301
    5. ' other' → logprob: -7.261776924133301
    6. ' ' → logprob: -7.636776924133301
    7. ' self' → logprob: -7.886776924133301
    8. ' object' → logprob: -8.2617769241333
    9. 'object' → logprob: -8.3867769241333
    10. 'other' → logprob: -9.2617769241333

Token 273: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -6.64708495605737e-05
    2. ' Point' → logprob: -9.625066757202148
    3. '	Point' → logprob: -15.875066757202148
    4. '_Point' → logprob: -16.37506675720215
    5. '_point' → logprob: -17.25006675720215
    6. '.Point' → logprob: -17.25006675720215
    7. 'Points' → logprob: -17.37506675720215
    8. '<Point' → logprob: -17.62506675720215
    9. ' ' → logprob: -17.87506675720215
    10. 'point' → logprob: -18.12506675720215

Token 274: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004659742116928101
    2. ')' → logprob: -5.379659652709961
    3. ''):' → logprob: -10.504659652709961
    4. ''):
' → logprob: -12.254659652709961
    5. ':' → logprob: -13.004659652709961
    6. ' ')' → logprob: -13.254659652709961
    7. '")' → logprob: -13.254659652709961
    8. ''' → logprob: -14.629659652709961
    9. '')->' → logprob: -15.004659652709961
    10. '   ' → logprob: -15.254659652709961

Token 275: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001099491841159761
    2. ')' → logprob: -7.501099586486816
    3. '->' → logprob: -8.251099586486816
    4. ' ->' → logprob: -8.501099586486816
    5. '):' → logprob: -9.876099586486816
    6. ')->' → logprob: -10.626099586486816
    7. ' :' → logprob: -13.126099586486816
    8. ':return' → logprob: -13.251099586486816
    9. ':
' → logprob: -13.626099586486816
    10. '   ' → logprob: -14.751099586486816

Token 276: ' '' (ID: 461)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.9061446785926819
    2. ''' → logprob: -1.156144618988037
    3. ' Point' → logprob: -1.656144618988037
    4. ' '' → logprob: -2.406144618988037
    5. ''s' → logprob: -9.156145095825195
    6. '_Point' → logprob: -10.531145095825195
    7. ' ' → logprob: -10.906145095825195
    8. '"' → logprob: -11.156145095825195
    9. '	Point' → logprob: -12.156145095825195
    10. '<Point' → logprob: -12.281145095825195

Token 277: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.848420551046729e-05
    2. ' Point' → logprob: -9.7500581741333
    3. '	Point' → logprob: -16.375059127807617
    4. 'Points' → logprob: -17.500059127807617
    5. '_Point' → logprob: -18.125059127807617
    6. '(Point' → logprob: -18.750059127807617
    7. '.Point' → logprob: -18.750059127807617
    8. '_point' → logprob: -18.750059127807617
    9. '<Point' → logprob: -19.125059127807617
    10. 'point' → logprob: -19.375059127807617

Token 278: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5783194303512573
    2. '':' → logprob: -0.8283194303512573
    3. '):' → logprob: -6.703319549560547
    4. '':
' → logprob: -7.578319549560547
    5. ':
' → logprob: -8.328319549560547
    6. ''' → logprob: -8.828319549560547
    7. ''):' → logprob: -9.328319549560547
    8. '(':' → logprob: -10.203319549560547
    9. ' ':' → logprob: -10.578319549560547
    10. '':'' → logprob: -10.828319549560547

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0367945171892643
    2. 'return' → logprob: -4.161794662475586
    3. ' return' → logprob: -4.411794662475586
    4. 'Point' → logprob: -5.661794662475586
    5. '   ' → logprob: -5.911794662475586
    6. ' Point' → logprob: -7.036794662475586
    7. '<|end|>' → logprob: -7.286794662475586
    8. '(Point' → logprob: -7.911794662475586
    9. '<Point' → logprob: -10.286794662475586
    10. '    ' → logprob: -10.786794662475586

Token 280: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1280335634946823
    2. 'Point' → logprob: -2.1280336380004883
    3. '       ' → logprob: -7.128033638000488
    4. ' return' → logprob: -8.128033638000488
    5. ' Point' → logprob: -13.003033638000488
    6. 'Return' → logprob: -13.128033638000488
    7. '   ' → logprob: -13.128033638000488
    8. '        
' → logprob: -14.253033638000488
    9. '(Point' → logprob: -15.628033638000488
    10. '
' → logprob: -16.253032684326172

Token 281: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.6931514739990234
    2. ' Point' → logprob: -0.6931514739990234
    3. '	Point' → logprob: -12.693151473999023
    4. '(Point' → logprob: -14.943151473999023
    5. ' ' → logprob: -14.943151473999023
    6. '   ' → logprob: -15.318151473999023
    7. '_Point' → logprob: -16.068151473999023
    8. 'self' → logprob: -16.818151473999023
    9. 'Points' → logprob: -17.193151473999023
    10. '.Point' → logprob: -17.193151473999023

Token 282: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009243228123523295
    2. '(' → logprob: -7.000924110412598
    3. 'self' → logprob: -11.375924110412598
    4. '(
' → logprob: -13.500924110412598
    5. ' (' → logprob: -18.500925064086914
    6. '((' → logprob: -18.625925064086914
    7. '(s' → logprob: -18.875925064086914
    8. ' self' → logprob: -19.000925064086914
    9. '(this' → logprob: -19.750925064086914
    10. '	self' → logprob: -20.250925064086914

Token 283: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001181181170977652
    2. '.' → logprob: -6.751181125640869
    3. 'x' → logprob: -12.001181602478027
    4. ' .' → logprob: -12.251181602478027
    5. ' ' → logprob: -18.25118064880371
    6. ' x' → logprob: -19.75118064880371
    7. '._' → logprob: -19.87618064880371
    8. '.
' → logprob: -19.87618064880371
    9. ').' → logprob: -19.87618064880371
    10. '.s' → logprob: -20.25118064880371

Token 284: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023246755823493004
    2. '+' → logprob: -3.7732467651367188
    3. '+self' → logprob: -14.398246765136719
    4. ' +
' → logprob: -15.398246765136719
    5. ' ' → logprob: -15.523246765136719
    6. '    ' → logprob: -16.39824676513672
    7. '+y' → logprob: -17.02324676513672
    8. ' plus' → logprob: -17.02324676513672
    9. '   ' → logprob: -17.52324676513672
    10. ',' → logprob: -17.89824676513672

Token 285: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16022513806819916
    2. ' other' → logprob: -1.9102251529693604
    3. '(other' → logprob: -14.285224914550781
    4. '.other' → logprob: -15.785224914550781
    5. 'Other' → logprob: -16.03522491455078
    6. '_other' → logprob: -16.16022491455078
    7. ' ' → logprob: -18.66022491455078
    8. 'OTHER' → logprob: -19.28522491455078
    9. 'others' → logprob: -19.66022491455078
    10. '其他' → logprob: -20.16022491455078

Token 286: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.003183420980349183
    2. '.' → logprob: -5.753183364868164
    3. ' .' → logprob: -12.253183364868164
    4. 'x' → logprob: -14.128183364868164
    5. '<|end|>' → logprob: -17.378183364868164
    6. '.xaml' → logprob: -17.628183364868164
    7. '.xhtml' → logprob: -17.628183364868164
    8. '.gridx' → logprob: -17.628183364868164
    9. ').' → logprob: -17.878183364868164
    10. '.xtext' → logprob: -17.878183364868164

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009588662651367486
    2. ' ,' → logprob: -7.0009589195251465
    3. ')' → logprob: -10.250958442687988
    4. ',
' → logprob: -11.750958442687988
    5. '<|end|>' → logprob: -13.125958442687988
    6. ',self' → logprob: -13.750958442687988
    7. '       ' → logprob: -15.000958442687988
    8. ' ,
' → logprob: -15.625958442687988
    9. ' )' → logprob: -16.000959396362305
    10. '   ' → logprob: -16.250959396362305

Token 288: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.10020915418863297
    2. 'self' → logprob: -2.3502092361450195
    3. ' other' → logprob: -13.60020923614502
    4. ' ' → logprob: -14.97520923614502
    5. '	self' → logprob: -14.97520923614502
    6. '       ' → logprob: -15.22520923614502
    7. '(self' → logprob: -15.97520923614502
    8. 'other' → logprob: -17.100208282470703
    9. ' ' → logprob: -17.225208282470703
    10. '<|end|>' → logprob: -17.225208282470703

Token 289: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00413812231272459
    2. '.' → logprob: -5.504137992858887
    3. 'y' → logprob: -9.754137992858887
    4. ' y' → logprob: -14.129137992858887
    5. ' .' → logprob: -14.129137992858887
    6. '.x' → logprob: -15.754137992858887
    7. '	y' → logprob: -16.879138946533203
    8. '.
' → logprob: -17.879138946533203
    9. '.py' → logprob: -18.004138946533203
    10. ' ' → logprob: -18.004138946533203

Token 290: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141392946243286
    2. '+' → logprob: -1.701413869857788
    3. '+y' → logprob: -15.076414108276367
    4. '<|end|>' → logprob: -16.076414108276367
    5. ')' → logprob: -16.326414108276367
    6. ' +
' → logprob: -16.326414108276367
    7. '+
' → logprob: -17.201414108276367
    8. '+)' → logprob: -17.326414108276367
    9. '+self' → logprob: -17.701414108276367
    10. ' ' → logprob: -17.951414108276367

Token 291: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015059324214234948
    2. ' other' → logprob: -6.5015058517456055
    3. 'self' → logprob: -12.751505851745605
    4. '(other' → logprob: -14.126505851745605
    5. 'Other' → logprob: -18.126506805419922
    6. '.other' → logprob: -18.751506805419922
    7. ' self' → logprob: -19.876506805419922
    8. '_other' → logprob: -20.001506805419922
    9. '   ' → logprob: -21.001506805419922
    10. ' ' → logprob: -21.126506805419922

Token 292: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.005666513927280903
    2. '.' → logprob: -5.755666732788086
    3. 'y' → logprob: -6.005666732788086
    4. ')' → logprob: -11.630666732788086
    5. '.x' → logprob: -12.755666732788086
    6. '<|end|>' → logprob: -12.880666732788086
    7. '+' → logprob: -13.130666732788086
    8. ' y' → logprob: -13.255666732788086
    9. '+y' → logprob: -14.505666732788086
    10. '-' → logprob: -14.755666732788086

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.610702363715973e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -14.625009536743164
    4. '   ' → logprob: -17.625009536743164
    5. ')

' → logprob: -17.875009536743164
    6. '),' → logprob: -18.000009536743164
    7. '<|end|>' → logprob: -18.000009536743164
    8. ')return' → logprob: -18.625009536743164
    9. '       ' → logprob: -19.500009536743164
    10. '}' → logprob: -19.625009536743164

Token 294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5459798574447632
    2. '<|end|>' → logprob: -1.0459798574447632
    3. '```' → logprob: -3.7959799766540527
    4. ' ' → logprob: -4.295979976654053
    5. 'def' → logprob: -5.045979976654053
    6. ')' → logprob: -5.045979976654053
    7. ' 
' → logprob: -5.420979976654053
    8. '<|end|>' → logprob: -5.920979976654053
    9. '[' → logprob: -6.045979976654053
    10. '    
' → logprob: -6.295979976654053

Token 295: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.292402058839798
    2. '<|end|>' → logprob: -1.5424020290374756
    3. '   ' → logprob: -3.7924020290374756
    4. ' ' → logprob: -5.042402267456055
    5. ' def' → logprob: -5.292402267456055
    6. ')' → logprob: -6.167402267456055
    7. '
' → logprob: -7.042402267456055
    8. '```' → logprob: -7.417402267456055
    9. '<|end|>' → logprob: -8.042402267456055
    10. '.' → logprob: -8.542402267456055

Token 296: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.011117971502244473
    2. '__' → logprob: -4.511117935180664
    3. ' ' → logprob: -10.261117935180664
    4. '.__' → logprob: -11.261117935180664
    5. 'sub' → logprob: -12.011117935180664
    6. ' def' → logprob: -12.136117935180664
    7. 'def' → logprob: -12.886117935180664
    8. ' -' → logprob: -13.511117935180664
    9. ''' → logprob: -13.886117935180664
    10. '-' → logprob: -14.261117935180664

Token 297: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -6.153795766294934e-06
    2. 'mul' → logprob: -12.500005722045898
    3. '-' → logprob: -13.000005722045898
    4. 'neg' → logprob: -16.5000057220459
    5. ' sub' → logprob: -17.7500057220459
    6. '-
' → logprob: -18.7500057220459
    7. '
' → logprob: -19.3750057220459
    8. 'Sub' → logprob: -19.7500057220459
    9. '_sub' → logprob: -20.1250057220459
    10. ' -' → logprob: -20.3750057220459

Token 298: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.044549018144607544
    2. '__' → logprob: -3.294548988342285
    3. '__('' → logprob: -5.044548988342285
    4. '__((' → logprob: -10.794548988342285
    5. '__(
' → logprob: -11.169548988342285
    6. '__("' → logprob: -12.544548988342285
    7. '__(*' → logprob: -12.544548988342285
    8. '__.__' → logprob: -15.294548988342285
    9. '__[' → logprob: -16.6695499420166
    10. '(' → logprob: -16.7945499420166

Token 299: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.842555426876061e-06
    2. ' self' → logprob: -12.750004768371582
    3. '(self' → logprob: -13.875004768371582
    4. 'other' → logprob: -14.500004768371582
    5. '<|end|>' → logprob: -14.875004768371582
    6. ')' → logprob: -16.8750057220459
    7. ''s' → logprob: -17.6250057220459
    8. '	self' → logprob: -18.2500057220459
    9. ''' → logprob: -18.7500057220459
    10. '0' → logprob: -19.1250057220459

Token 300: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.18441987037658691
    2. '__' → logprob: -1.809419870376587
    3. '__('' → logprob: -5.559419631958008
    4. '(' → logprob: -7.809419631958008
    5. '__(
' → logprob: -8.559419631958008
    6. '__((' → logprob: -9.059419631958008
    7. '__(*' → logprob: -10.309419631958008
    8. '(self' → logprob: -10.434419631958008
    9. 'self' → logprob: -11.434419631958008
    10. '__[' → logprob: -12.309419631958008

Token 301: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.16090910136699677
    2. ' other' → logprob: -1.9109090566635132
    3. 'self' → logprob: -7.410909175872803
    4. 'Other' → logprob: -9.785908699035645
    5. '<|end|>' → logprob: -11.660908699035645
    6. '(other' → logprob: -11.785908699035645
    7. ' self' → logprob: -12.035908699035645
    8. '_other' → logprob: -13.910908699035645
    9. '.other' → logprob: -14.660908699035645
    10. ' ' → logprob: -15.660908699035645

Token 302: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.2166411478538066e-05
    2. ''' → logprob: -11.000052452087402
    3. '('' → logprob: -11.500052452087402
    4. ')' → logprob: -12.000052452087402
    5. ' :' → logprob: -12.000052452087402
    6. '):' → logprob: -13.250052452087402
    7. '[' → logprob: -13.500052452087402
    8. ' '' → logprob: -13.625052452087402
    9. '<Point' → logprob: -13.625052452087402
    10. ':'' → logprob: -13.875052452087402

Token 303: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.062081512063741684
    2. ' '' → logprob: -2.8120815753936768
    3. 'Point' → logprob: -9.812081336975098
    4. ' Point' → logprob: -9.812081336975098
    5. ' ' → logprob: -14.062081336975098
    6. '<Point' → logprob: -14.187081336975098
    7. ')' → logprob: -14.562081336975098
    8. '')' → logprob: -14.937081336975098
    9. '(Point' → logprob: -15.062081336975098
    10. '.Point' → logprob: -15.187081336975098

Token 304: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -7.107425062713446e-06
    2. ' Point' → logprob: -12.000006675720215
    3. '	Point' → logprob: -15.125006675720215
    4. '.Point' → logprob: -15.625006675720215
    5. '<Point' → logprob: -15.750006675720215
    6. '_point' → logprob: -15.875006675720215
    7. ''' → logprob: -16.50000762939453
    8. '_Point' → logprob: -16.62500762939453
    9. '(Point' → logprob: -17.12500762939453
    10. '-point' → logprob: -18.00000762939453

Token 305: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -4.167648876318708e-05
    2. ')' → logprob: -10.125041961669922
    3. '")' → logprob: -14.125041961669922
    4. ''):
' → logprob: -14.250041961669922
    5. ''):' → logprob: -15.875041961669922
    6. ''' → logprob: -17.500041961669922
    7. ' ')' → logprob: -18.375041961669922
    8. '')
' → logprob: -18.375041961669922
    9. '')->' → logprob: -18.875041961669922
    10. '`)' → logprob: -19.000041961669922

Token 306: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07967529445886612
    2. ':' → logprob: -3.0796751976013184
    3. '->' → logprob: -4.204675197601318
    4. ' ->' → logprob: -4.204675197601318
    5. ' ' → logprob: -8.329675674438477
    6. ',' → logprob: -9.329675674438477
    7. ')->' → logprob: -9.329675674438477
    8. '   ' → logprob: -9.454675674438477
    9. ' )' → logprob: -9.579675674438477
    10. ' :' → logprob: -9.704675674438477

Token 307: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5869014263153076
    2. ' '' → logprob: -1.0869014263153076
    3. ' Point' → logprob: -2.5869014263153076
    4. 'Point' → logprob: -3.4619014263153076
    5. '.Point' → logprob: -10.961901664733887
    6. '<Point' → logprob: -10.961901664733887
    7. '(Point' → logprob: -11.586901664733887
    8. ''s' → logprob: -11.961901664733887
    9. '['' → logprob: -12.211901664733887
    10. '	Point' → logprob: -12.336901664733887

Token 308: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.723352049040841e-06
    2. ' Point' → logprob: -12.375004768371582
    3. '	Point' → logprob: -15.250004768371582
    4. '(Point' → logprob: -16.625003814697266
    5. '.Point' → logprob: -16.625003814697266
    6. '<Point' → logprob: -17.000003814697266
    7. '_Point' → logprob: -17.250003814697266
    8. ''' → logprob: -17.625003814697266
    9. '_point' → logprob: -17.750003814697266
    10. 'point' → logprob: -19.125003814697266

Token 309: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.04165837541222572
    2. '':
' → logprob: -4.416658401489258
    3. '):' → logprob: -4.541658401489258
    4. ''' → logprob: -4.791658401489258
    5. ''):' → logprob: -5.166658401489258
    6. ':' → logprob: -6.666658401489258
    7. ''):
' → logprob: -6.916658401489258
    8. '')' → logprob: -7.291658401489258
    9. '):
' → logprob: -7.541658401489258
    10. ')' → logprob: -7.916658401489258

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04977717250585556
    2. ' return' → logprob: -3.0497772693634033
    3. 'return' → logprob: -6.799777030944824
    4. '   ' → logprob: -10.049777030944824
    5. ' Point' → logprob: -10.924777030944824
    6. 'Point' → logprob: -11.924777030944824
    7. ' ' → logprob: -12.549777030944824
    8. '	return' → logprob: -13.049777030944824
    9. '      ' → logprob: -14.549777030944824
    10. '    ' → logprob: -15.799777030944824

Token 311: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0017163509037345648
    2. ' Point' → logprob: -6.501716136932373
    3. 'return' (adapté à ' return') → logprob: -8.501716613769531
    4. ' return' → logprob: -11.501716613769531
    5. 'Return' → logprob: -14.751716613769531
    6. '	Point' → logprob: -16.12671661376953
    7. '(Point' → logprob: -16.25171661376953
    8. '       ' → logprob: -17.75171661376953
    9. '   ' → logprob: -17.87671661376953
    10. '<Point' → logprob: -18.12671661376953

Token 312: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.10020828247070312
    2. ' Point' → logprob: -2.350208282470703
    3. '	Point' → logprob: -13.475208282470703
    4. '(Point' → logprob: -15.600208282470703
    5. '_Point' → logprob: -16.850208282470703
    6. '.Point' → logprob: -17.725208282470703
    7. ' ' → logprob: -17.975208282470703
    8. '<Point' → logprob: -18.225208282470703
    9. '   ' → logprob: -19.475208282470703
    10. '_point' → logprob: -19.475208282470703

Token 313: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. 'self' → logprob: -16.625001907348633
    4. '(
' → logprob: -17.250001907348633
    5. ' (' → logprob: -20.375001907348633
    6. '       ' → logprob: -22.000001907348633
    7. ' self' → logprob: -22.750001907348633
    8. '(s' → logprob: -22.750001907348633
    9. '   ' → logprob: -22.875001907348633
    10. '=self' → logprob: -23.000001907348633

Token 314: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0008515591034665704
    2. '.' → logprob: -7.250851631164551
    3. 'x' → logprob: -8.87585163116455
    4. ' .' → logprob: -13.75085163116455
    5. '<|end|>' → logprob: -14.37585163116455
    6. '<|end|>' → logprob: -15.87585163116455
    7. ' x' → logprob: -16.875850677490234
    8. ',' → logprob: -18.375850677490234
    9. '.xtext' → logprob: -18.500850677490234
    10. '.s' → logprob: -18.625850677490234

Token 315: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02327890694141388
    2. '-' → logprob: -3.7732789516448975
    3. '-self' → logprob: -10.898279190063477
    4. '<|end|>' → logprob: -11.898279190063477
    5. 'self' → logprob: -12.398279190063477
    6. '(self' → logprob: -13.648279190063477
    7. ' self' → logprob: -14.148279190063477
    8. ' ' → logprob: -14.273279190063477
    9. ' -
' → logprob: -14.398279190063477
    10. '(' → logprob: -15.773279190063477

Token 316: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1269323080778122
    2. ' other' → logprob: -2.126932382583618
    3. '(other' → logprob: -12.751932144165039
    4. 'Other' → logprob: -14.001932144165039
    5. '_other' → logprob: -15.376932144165039
    6. '<|end|>' → logprob: -15.751932144165039
    7. '.other' → logprob: -16.37693214416504
    8. 'OTHER' → logprob: -19.12693214416504
    9. ' Other' → logprob: -19.62693214416504
    10. 'self' → logprob: -20.12693214416504

Token 317: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.012514598667621613
    2. '.' → logprob: -4.387514591217041
    3. 'x' → logprob: -12.8875150680542
    4. ' .' → logprob: -13.7625150680542
    5. '<|end|>' → logprob: -14.1375150680542
    6. '<|end|>' → logprob: -15.5125150680542
    7. ',' → logprob: -17.012514114379883
    8. '.gridx' → logprob: -17.512514114379883
    9. '.point' → logprob: -17.637514114379883
    10. ' x' → logprob: -17.637514114379883

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -10.250035285949707
    3. ')' → logprob: -16.125036239624023
    4. ',
' → logprob: -16.625036239624023
    5. '<|end|>' → logprob: -16.750036239624023
    6. '),' → logprob: -17.375036239624023
    7. ',y' → logprob: -19.125036239624023
    8. '',' → logprob: -19.500036239624023
    9. '   ' → logprob: -19.500036239624023
    10. 's' → logprob: -20.000036239624023

Token 319: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.1602274775505066
    2. ' other' → logprob: -1.9102275371551514
    3. 'self' → logprob: -13.53522777557373
    4. 'Other' → logprob: -13.78522777557373
    5. '(other' → logprob: -14.53522777557373
    6. '<|end|>' → logprob: -15.41022777557373
    7. '.other' → logprob: -16.035226821899414
    8. '_other' → logprob: -16.035226821899414
    9. ' self' → logprob: -18.160226821899414
    10. ' ' → logprob: -18.410226821899414

Token 320: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.03397461026906967
    2. '.' → logprob: -3.4089746475219727
    3. 'y' → logprob: -8.158974647521973
    4. '.x' → logprob: -10.158974647521973
    5. ' .' → logprob: -13.408974647521973
    6. '<|end|>' → logprob: -14.283974647521973
    7. ' y' → logprob: -15.033974647521973
    8. '.py' → logprob: -15.283974647521973
    9. '<|end|>' → logprob: -15.408974647521973
    10. ')' → logprob: -15.783974647521973

Token 321: ' -' (ID: 533)
  Prédit: '.y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.9465961456298828
    2. '.' → logprob: -1.1965961456298828
    3. ')' → logprob: -1.3215961456298828
    4. '.other' → logprob: -3.821596145629883
    5. '.x' → logprob: -4.696596145629883
    6. '<|end|>' → logprob: -5.071596145629883
    7. ' .' → logprob: -6.196596145629883
    8. '<|end|>' → logprob: -6.946596145629883
    9. '.point' → logprob: -7.696596145629883
    10. '[' → logprob: -7.821596145629883

Token 322: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0024758970830589533
    2. ' other' → logprob: -6.002475738525391
    3. '(other' → logprob: -15.50247573852539
    4. '.other' → logprob: -16.75247573852539
    5. 'Other' → logprob: -19.75247573852539
    6. '_other' → logprob: -20.00247573852539
    7. 'self' → logprob: -21.50247573852539
    8. 'Point' → logprob: -21.62747573852539
    9. '-other' → logprob: -21.87747573852539
    10. 'othe' → logprob: -22.75247573852539

Token 323: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.2415735125541687
    2. '.y' → logprob: -2.1165735721588135
    3. '.' → logprob: -2.6165735721588135
    4. 'Point' → logprob: -4.616573333740234
    5. ')' → logprob: -5.241573333740234
    6. '.Point' → logprob: -5.866573333740234
    7. '.point' → logprob: -6.616573333740234
    8. '_point' → logprob: -7.491573333740234
    9. '-point' → logprob: -8.116573333740234
    10. ' Point' → logprob: -8.741573333740234

Token 324: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '<|end|>' → logprob: -13.000004768371582
    3. ' )' → logprob: -13.750004768371582
    4. ')
' → logprob: -13.750004768371582
    5. '       ' → logprob: -16.0000057220459
    6. ')return' → logprob: -16.5000057220459
    7. '   ' → logprob: -16.6250057220459
    8. '<|end|>' → logprob: -17.2500057220459
    9. '),' → logprob: -17.5000057220459
    10. ')

' → logprob: -18.2500057220459

Token 325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03243042528629303
    2. '<|end|>' → logprob: -3.782430410385132
    3. '    
' → logprob: -6.032430648803711
    4. '<|end|>' → logprob: -6.282430648803711
    5. ')' → logprob: -6.407430648803711
    6. ':' → logprob: -7.157430648803711
    7. '```' → logprob: -7.532430648803711
    8. ' ' → logprob: -8.157430648803711
    9. ' def' → logprob: -8.282430648803711
    10. 'def' → logprob: -8.532430648803711

Token 326: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38735508918762207
    2. 'def' (adapté à ' def') → logprob: -1.137355089187622
    3. ' def' → logprob: -8.512354850769043
    4. ')' → logprob: -8.887354850769043
    5. '    
' → logprob: -9.887354850769043
    6. ' ' → logprob: -10.262354850769043
    7. '  ' → logprob: -10.387354850769043
    8. '*' → logprob: -12.387354850769043
    9. '    ' → logprob: -12.512354850769043
    10. '```' → logprob: -12.637354850769043

Token 327: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05639887973666191
    2. ' __' → logprob: -3.181398868560791
    3. 'dot' → logprob: -4.431398868560791
    4. 'def' → logprob: -6.931398868560791
    5. 'mul' → logprob: -9.30639934539795
    6. '.__' → logprob: -9.43139934539795
    7. ' dot' → logprob: -9.55639934539795
    8. '```' → logprob: -9.80639934539795
    9. '_dot' → logprob: -10.55639934539795
    10. ' def' → logprob: -11.18139934539795

Token 328: 'mul' (ID: 44857)
  Prédit: 'mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.0003478593716863543
    2. 'neg' → logprob: -8.000348091125488
    3. 'lt' → logprob: -11.875348091125488
    4. 'abs' → logprob: -13.000348091125488
    5. 'rm' → logprob: -13.125348091125488
    6. 'tr' → logprob: -15.000348091125488
    7. 'mult' → logprob: -15.125348091125488
    8. 'xor' → logprob: -16.000347137451172
    9. 'eq' → logprob: -16.250347137451172
    10. 'repr' → logprob: -16.625347137451172

Token 329: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.05522064119577408
    2. '(self' → logprob: -2.930220603942871
    3. '(' → logprob: -8.555220603942871
    4. '__' → logprob: -9.680220603942871
    5. '__(
' → logprob: -9.805220603942871
    6. '__(*' → logprob: -11.305220603942871
    7. '__('' → logprob: -12.055220603942871
    8. '*(' → logprob: -12.805220603942871
    9. ' (' → logprob: -12.930220603942871
    10. '__((' → logprob: -13.055220603942871

Token 330: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00030578780570067465
    2. ' self' → logprob: -8.625306129455566
    3. '(self' → logprob: -9.750306129455566
    4. '   ' → logprob: -9.875306129455566
    5. ' ' → logprob: -12.125306129455566
    6. '       ' → logprob: -12.250306129455566
    7. '
' → logprob: -12.250306129455566
    8. 'def' → logprob: -15.375306129455566
    9. '1' → logprob: -15.625306129455566
    10. '0' → logprob: -15.750306129455566

Token 331: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.013586737215518951
    2. '__(' → logprob: -4.513586521148682
    3. '(' → logprob: -6.263586521148682
    4. ' (' → logprob: -7.763586521148682
    5. 'self' → logprob: -8.76358699798584
    6. '```' → logprob: -11.76358699798584
    7. ''(' → logprob: -12.13858699798584
    8. ' ' → logprob: -12.26358699798584
    9. '__(
' → logprob: -12.38858699798584
    10. '*(' → logprob: -12.51358699798584

Token 332: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06173068284988403
    2. ' self' → logprob: -3.3117306232452393
    3. 'other' → logprob: -3.8117306232452393
    4. ' other' → logprob: -6.686730861663818
    5. ' ' → logprob: -10.18673038482666
    6. '   ' → logprob: -12.31173038482666
    7. '(self' → logprob: -12.43673038482666
    8. '```' → logprob: -13.31173038482666
    9. 'scalar' → logprob: -13.31173038482666
    10. 'Other' → logprob: -13.68673038482666

Token 333: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001387850963510573
    2. ')' → logprob: -7.376388072967529
    3. '<|end|>' → logprob: -7.751388072967529
    4. '):' → logprob: -9.126387596130371
    5. '<|end|>' → logprob: -9.251387596130371
    6. ' :' → logprob: -9.376387596130371
    7. ' ' → logprob: -10.876387596130371
    8. '  ' → logprob: -12.251387596130371
    9. '   ' → logprob: -13.001387596130371
    10. '(' → logprob: -13.126387596130371

Token 334: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.061977993696928024
    2. ' float' → logprob: -2.8119781017303467
    3. '(float' → logprob: -12.186978340148926
    4. 'int' → logprob: -12.936978340148926
    5. '=float' → logprob: -13.811978340148926
    6. ' ' → logprob: -14.311978340148926
    7. '	float' → logprob: -14.436978340148926
    8. '<float' → logprob: -15.061978340148926
    9. ' int' → logprob: -16.56197738647461
    10. '   ' → logprob: -16.81197738647461

Token 335: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0059643457643687725
    2. '):' → logprob: -5.130964279174805
    3. '):
' → logprob: -11.255964279174805
    4. ':' → logprob: -11.255964279174805
    5. ')->' → logprob: -12.630964279174805
    6. '<|end|>' → logprob: -13.005964279174805
    7. ' )' → logprob: -13.630964279174805
    8. ',' → logprob: -14.380964279174805
    9. '<|end|>' → logprob: -14.380964279174805
    10. '),' → logprob: -14.505964279174805

Token 336: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058931536972522736
    2. ')' → logprob: -2.933931589126587
    3. '->' → logprob: -6.308931350708008
    4. ' ->' → logprob: -6.683931350708008
    5. '):' → logprob: -7.683931350708008
    6. ')->' → logprob: -8.058931350708008
    7. '<|end|>' → logprob: -9.808931350708008
    8. ' :' → logprob: -10.183931350708008
    9. '   ' → logprob: -10.433931350708008
    10. ',' → logprob: -10.433931350708008

Token 337: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.43898531794548035
    2. 'Point' → logprob: -1.1889853477478027
    3. ' '' → logprob: -3.5639853477478027
    4. ' Point' → logprob: -3.8139853477478027
    5. 'float' → logprob: -7.938985347747803
    6. ' float' → logprob: -11.688984870910645
    7. ''s' → logprob: -12.188984870910645
    8. '	Point' → logprob: -12.188984870910645
    9. '_Point' → logprob: -12.563984870910645
    10. ' ' → logprob: -12.688984870910645

Token 338: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -6.2729995988775045e-06
    2. ' Point' → logprob: -12.000006675720215
    3. '	Point' → logprob: -17.6250057220459
    4. '_point' → logprob: -18.1250057220459
    5. '<Point' → logprob: -18.7500057220459
    6. '_Point' → logprob: -18.7500057220459
    7. '.Point' → logprob: -18.8750057220459
    8. '(Point' → logprob: -19.2500057220459
    9. 'Points' → logprob: -20.2500057220459
    10. '-point' → logprob: -20.8750057220459

Token 339: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04537719115614891
    2. '':' → logprob: -3.170377254486084
    3. '):' → logprob: -6.420377254486084
    4. ':
' → logprob: -7.795377254486084
    5. ''' → logprob: -8.920376777648926
    6. '':
' → logprob: -9.170376777648926
    7. ''):' → logprob: -10.670376777648926
    8. '):
' → logprob: -11.045376777648926
    9. ' :' → logprob: -11.295376777648926
    10. '**' → logprob: -12.045376777648926

Token 340: '       ' (ID: 309)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.41573625802993774
    2. '       ' → logprob: -1.165736198425293
    3. ' Point' → logprob: -4.290736198425293
    4. '   ' → logprob: -4.415736198425293
    5. ' return' → logprob: -6.415736198425293
    6. 'return' → logprob: -7.665736198425293
    7. '	Point' → logprob: -7.790736198425293
    8. '(Point' → logprob: -9.415736198425293
    9. '<Point' → logprob: -10.790736198425293
    10. '.Point' → logprob: -11.290736198425293

Token 341: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00020807012333534658
    2. 'return' (adapté à ' return') → logprob: -8.500207901000977
    3. ' Point' → logprob: -12.500207901000977
    4. ' return' → logprob: -14.500207901000977
    5. 'Return' → logprob: -15.500207901000977
    6. '	Point' → logprob: -17.000207901000977
    7. '       ' → logprob: -17.250207901000977
    8. 'Points' → logprob: -17.500207901000977
    9. '(Point' → logprob: -18.375207901000977
    10. '<Point' → logprob: -18.875207901000977

Token 342: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.10021012276411057
    2. ' Point' → logprob: -2.350210189819336
    3. '	Point' → logprob: -12.725210189819336
    4. '(Point' → logprob: -15.725210189819336
    5. '.Point' → logprob: -15.975210189819336
    6. '_Point' → logprob: -16.350210189819336
    7. '   ' → logprob: -16.850210189819336
    8. '<Point' → logprob: -17.225210189819336
    9. ' ' → logprob: -17.475210189819336
    10. 'Points' → logprob: -18.100210189819336

Token 343: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.500001907348633
    3. 'self' → logprob: -18.000001907348633
    4. '(s' → logprob: -18.000001907348633
    5. '(
' → logprob: -18.750001907348633
    6. '[self' → logprob: -20.500001907348633
    7. '(x' → logprob: -21.000001907348633
    8. '(this' → logprob: -21.125001907348633
    9. ' (' → logprob: -21.250001907348633
    10. '(Self' → logprob: -21.250001907348633

Token 344: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0007144584087654948
    2. '.' → logprob: -7.250714302062988
    3. 'x' → logprob: -12.500714302062988
    4. ' .' → logprob: -14.250714302062988
    5. ' ' → logprob: -17.250715255737305
    6. 'self' → logprob: -18.125715255737305
    7. '<|end|>' → logprob: -18.125715255737305
    8. ' x' → logprob: -18.250715255737305
    9. '0' → logprob: -18.625715255737305
    10. '	x' → logprob: -18.750715255737305

Token 345: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.010105586610734463
    2. '*k' → logprob: -4.760105609893799
    3. '*' → logprob: -6.510105609893799
    4. '*self' → logprob: -13.76010513305664
    5. ' k' → logprob: -15.63510513305664
    6. '*object' → logprob: -16.26010513305664
    7. 'k' → logprob: -16.38510513305664
    8. '*x' → logprob: -16.51010513305664
    9. '*K' → logprob: -16.51010513305664
    10. ' ' → logprob: -16.63510513305664

Token 346: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00861456897109747
    2. ' k' → logprob: -4.758614540100098
    3. '	k' → logprob: -20.383615493774414
    4. 'kx' → logprob: -21.258615493774414
    5. '{k' → logprob: -21.383615493774414
    6. '_k' → logprob: -21.633615493774414
    7. ',k' → logprob: -22.633615493774414
    8. ' ' → logprob: -22.758615493774414
    9. '<|end|>' → logprob: -22.758615493774414
    10. '(k' → logprob: -23.258615493774414

Token 347: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ' ,' → logprob: -13.125003814697266
    3. ',
' → logprob: -14.250003814697266
    4. ',self' → logprob: -15.375003814697266
    5. '<|end|>' → logprob: -15.500003814697266
    6. ')' → logprob: -15.875003814697266
    7. ',k' → logprob: -16.375003814697266
    8. ',

' → logprob: -16.875003814697266
    9. '‌,' → logprob: -18.625003814697266
    10. ',float' → logprob: -18.875003814697266

Token 348: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759420990943909
    2. ' self' → logprob: -0.8259420990943909
    3. '	self' → logprob: -14.200942039489746
    4. ' ' → logprob: -14.325942039489746
    5. ' k' → logprob: -14.575942039489746
    6. '<|end|>' → logprob: -15.075942039489746
    7. '(self' → logprob: -15.825942039489746
    8. 'k' → logprob: -15.950942039489746
    9. '       ' → logprob: -16.325942993164062
    10. ' ' → logprob: -17.200942993164062

Token 349: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.08086994290351868
    2. 'y' → logprob: -2.5808699131011963
    3. '.' → logprob: -6.830870151519775
    4. ' y' → logprob: -7.330870151519775
    5. '.x' → logprob: -8.830869674682617
    6. '<|end|>' → logprob: -10.955869674682617
    7. '*y' → logprob: -11.080869674682617
    8. 'k' → logprob: -11.205869674682617
    9. 'x' → logprob: -11.330869674682617
    10. ' ' → logprob: -11.830869674682617

Token 350: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -2.7729658540920354e-05
    2. '*' → logprob: -10.500027656555176
    3. '*k' → logprob: -16.625028610229492
    4. '<|end|>' → logprob: -16.750028610229492
    5. ' ' → logprob: -17.000028610229492
    6. ' ' → logprob: -18.875028610229492
    7. ')' → logprob: -18.875028610229492
    8. '*object' → logprob: -19.625028610229492
    9. ' **' → logprob: -20.875028610229492
    10. '<|end|>' → logprob: -21.125028610229492

Token 351: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005233763717114925
    2. ' k' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.880233764648438
    4. 'x' → logprob: -18.630233764648438
    5. '   ' → logprob: -19.005233764648438
    6. ')' → logprob: -19.130233764648438
    7. '	k' → logprob: -19.255233764648438
    8. 'y' → logprob: -19.255233764648438
    9. 'kx' → logprob: -19.255233764648438
    10. 'self' → logprob: -19.505233764648438

Token 352: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.25
    3. ' )' → logprob: -16.875
    4. '<|end|>' → logprob: -17.0
    5. '),' → logprob: -18.5
    6. ')

' → logprob: -19.0
    7. '}' → logprob: -19.25
    8. ')return' → logprob: -19.25
    9. ')}' → logprob: -19.875
    10. '   ' → logprob: -20.375

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22087126970291138
    2. ' ' → logprob: -2.3458712100982666
    3. '<|end|>' → logprob: -2.3458712100982666
    4. ' 
' → logprob: -6.470871448516846
    5. '
' → logprob: -7.220871448516846
    6. '  ' → logprob: -7.345871448516846
    7. '    
' → logprob: -7.345871448516846
    8. ')' → logprob: -7.470871448516846
    9. ' def' → logprob: -7.720871448516846
    10. '    ' → logprob: -8.095870971679688

Token 354: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7416051626205444
    2. ' ' → logprob: -1.6166051626205444
    3. 'def' (adapté à ' def') → logprob: -1.8666051626205444
    4. '<|end|>' → logprob: -1.9916051626205444
    5. '
' → logprob: -3.991605281829834
    6. ' def' → logprob: -5.116605281829834
    7. ')' → logprob: -6.116605281829834
    8. '*' → logprob: -6.991605281829834
    9. '  ' → logprob: -7.116605281829834
    10. ' 
' → logprob: -7.241605281829834

Token 355: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3134342432022095
    2. '__' → logprob: -1.3134342432022095
    3. '/__' → logprob: -9.688434600830078
    4. ' def' → logprob: -9.813434600830078
    5. 'def' → logprob: -10.188434600830078
    6. '```' → logprob: -12.063434600830078
    7. 'mul' → logprob: -12.938434600830078
    8. ' _' → logprob: -13.313434600830078
    9. ' ' → logprob: -13.313434600830078
    10. '.__' → logprob: -13.563434600830078

Token 356: 'rm' (ID: 21373)
  Prédit: 'rm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.31327301263809204
    2. 'tr' → logprob: -1.3132729530334473
    3. 'rf' → logprob: -12.688273429870605
    4. 'flo' → logprob: -13.063273429870605
    5. 'mul' → logprob: -13.313273429870605
    6. '(tr' → logprob: -14.188273429870605
    7. 'tru' → logprob: -14.313273429870605
    8. '.tr' → logprob: -14.438273429870605
    9. '```' → logprob: -14.563273429870605
    10. ' tr' → logprob: -14.563273429870605

Token 357: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.8624639324116288e-06
    2. 'ult' → logprob: -13.250001907348633
    3. '__' → logprob: -18.000001907348633
    4. 'ultiply' → logprob: -18.250001907348633
    5. 'ulit' → logprob: -18.750001907348633
    6. 'ull' → logprob: -18.875001907348633
    7. 'uls' → logprob: -19.125001907348633
    8. ' ul' → logprob: -19.750001907348633
    9. 'ул' → logprob: -20.125001907348633
    10. '_ul' → logprob: -20.250001907348633

Token 358: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3136504888534546
    2. '__' → logprob: -1.3136504888534546
    3. '__(*' → logprob: -8.063650131225586
    4. '__('' → logprob: -10.063650131225586
    5. '__((' → logprob: -10.688650131225586
    6. '__(
' → logprob: -12.063650131225586
    7. '__("' → logprob: -13.688650131225586
    8. '__.__' → logprob: -14.438650131225586
    9. '__*/' → logprob: -15.313650131225586
    10. '(' → logprob: -15.313650131225586

Token 359: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018006093159783632
    2. ' self' → logprob: -8.6251802444458
    3. '
' → logprob: -15.7501802444458
    4. 'k' → logprob: -16.250179290771484
    5. '(self' → logprob: -16.750179290771484
    6. ' ' → logprob: -17.250179290771484
    7. 'def' → logprob: -17.375179290771484
    8. 's' → logprob: -17.375179290771484
    9. '	self' → logprob: -18.125179290771484
    10. '   ' → logprob: -18.625179290771484

Token 360: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.34833383560180664
    2. 'self' → logprob: -1.9733338356018066
    3. '(self' → logprob: -2.2233338356018066
    4. '__' → logprob: -3.2233338356018066
    5. ',' → logprob: -6.098333835601807
    6. '__,' → logprob: -6.223333835601807
    7. ' self' → logprob: -7.098333835601807
    8. 'k' → logprob: -7.098333835601807
    9. '__(*' → logprob: -7.723333835601807
    10. '(' → logprob: -8.848333358764648

Token 361: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0010434092255309224
    2. ' k' → logprob: -6.876043319702148
    3. 'self' → logprob: -12.126043319702148
    4. '<|end|>' → logprob: -12.376043319702148
    5. 'x' → logprob: -15.001043319702148
    6. ')' → logprob: -15.751043319702148
    7. ' ' → logprob: -16.12604331970215
    8. 's' → logprob: -16.25104331970215
    9. '	k' → logprob: -16.25104331970215
    10. ' self' → logprob: -16.87604331970215

Token 362: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05348078906536102
    2. '<|end|>' → logprob: -3.053480863571167
    3. ')' → logprob: -5.678480625152588
    4. '<|end|>' → logprob: -7.303480625152588
    5. ' :' → logprob: -7.428480625152588
    6. '):' → logprob: -8.928481101989746
    7. '=' → logprob: -11.303481101989746
    8. ' ' → logprob: -11.678481101989746
    9. '):
' → logprob: -11.928481101989746
    10. '  ' → logprob: -12.303481101989746

Token 363: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008632057346403599
    2. ' float' → logprob: -4.758632183074951
    3. '=float' → logprob: -12.008631706237793
    4. '<float' → logprob: -12.008631706237793
    5. '(float' → logprob: -12.633631706237793
    6. '.float' → logprob: -14.383631706237793
    7. '	float' → logprob: -14.633631706237793
    8. ',float' → logprob: -14.758631706237793
    9. 'Float' → logprob: -15.383631706237793
    10. '_float' → logprob: -15.758631706237793

Token 364: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. '):' → logprob: -12.750007629394531
    3. ' )' → logprob: -12.750007629394531
    4. '')' → logprob: -13.375007629394531
    5. ')->' → logprob: -16.00000762939453
    6. '):
' → logprob: -16.12500762939453
    7. '   ' → logprob: -17.62500762939453
    8. '),' → logprob: -17.87500762939453
    9. ')
' → logprob: -18.75000762939453
    10. ':' → logprob: -18.75000762939453

Token 365: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.292428582906723
    2. ':' → logprob: -1.4174286127090454
    3. ' ->' → logprob: -5.042428493499756
    4. '->' → logprob: -5.917428493499756
    5. ' :' → logprob: -7.167428493499756
    6. '):' → logprob: -8.292428970336914
    7. ',' → logprob: -8.292428970336914
    8. '=' → logprob: -8.667428970336914
    9. '   ' → logprob: -8.792428970336914
    10. ')->' → logprob: -9.542428970336914

Token 366: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.5009227395057678
    2. ' '' → logprob: -1.250922679901123
    3. 'Point' → logprob: -2.625922679901123
    4. ''' → logprob: -3.375922679901123
    5. ' self' → logprob: -7.500922679901123
    6. 'self' → logprob: -8.750923156738281
    7. ' ' → logprob: -9.125923156738281
    8. ' return' → logprob: -9.375923156738281
    9. ' def' → logprob: -10.000923156738281
    10. ' point' → logprob: -10.000923156738281

Token 367: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.4849443838757e-06
    2. ' Point' → logprob: -12.375004768371582
    3. '	Point' → logprob: -16.250003814697266
    4. '<Point' → logprob: -17.125003814697266
    5. '.Point' → logprob: -17.250003814697266
    6. '_point' → logprob: -17.375003814697266
    7. '(Point' → logprob: -17.500003814697266
    8. '_Point' → logprob: -18.250003814697266
    9. 'Points' → logprob: -18.875003814697266
    10. 'point' → logprob: -18.875003814697266

Token 368: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4773949682712555
    2. '':
' → logprob: -0.9773949384689331
    3. ''' → logprob: -5.852395057678223
    4. '':
' → logprob: -8.352395057678223
    5. '':

' → logprob: -9.102395057678223
    6. '):
' → logprob: -10.727395057678223
    7. ':' → logprob: -11.477395057678223
    8. ''>' → logprob: -11.852395057678223
    9. ':
' → logprob: -11.852395057678223
    10. ''):
' → logprob: -11.977395057678223

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014271864667534828
    2. 'return' → logprob: -4.8892717361450195
    3. ' return' → logprob: -5.0142717361450195
    4. '	return' → logprob: -15.13927173614502
    5. ' Point' → logprob: -15.26427173614502
    6. '   ' → logprob: -15.63927173614502
    7. 'Point' → logprob: -15.63927173614502
    8. '{return' → logprob: -16.139272689819336
    9. '      ' → logprob: -16.389272689819336
    10. '```' → logprob: -16.514272689819336

Token 370: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005811501177959144
    2. ' return' → logprob: -7.50058126449585
    3. '       ' → logprob: -10.750580787658691
    4. 'Point' → logprob: -12.125580787658691
    5. '   ' → logprob: -14.000580787658691
    6. 'self' → logprob: -15.000580787658691
    7. 'Return' → logprob: -17.875581741333008
    8. '	return' → logprob: -18.000581741333008
    9. '
' → logprob: -18.625581741333008
    10. '{return' → logprob: -18.750581741333008

Token 371: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11536505818367004
    2. ' self' → logprob: -2.8653650283813477
    3. 'Point' → logprob: -2.9903650283813477
    4. ' Point' → logprob: -6.365365028381348
    5. '(self' → logprob: -13.490365028381348
    6. ' ' → logprob: -13.990365028381348
    7. 'point' → logprob: -14.240365028381348
    8. '_Point' → logprob: -14.240365028381348
    9. 'Points' → logprob: -14.365365028381348
    10. 'Self' → logprob: -14.365365028381348

Token 372: ' *' (ID: 425)
  Prédit: '.__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -2.6537622034084052e-05
    2. '__' → logprob: -10.87502670288086
    3. '*' → logprob: -12.12502670288086
    4. '.*' → logprob: -13.50002670288086
    5. ' *' → logprob: -15.12502670288086
    6. ' __' → logprob: -15.37502670288086
    7. '._' → logprob: -16.12502670288086
    8. '.' → logprob: -16.37502670288086
    9. '*k' → logprob: -17.62502670288086
    10. ' ' → logprob: -20.75002670288086

Token 373: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.7697225252486533e-06
    2. ' k' → logprob: -12.500003814697266
    3. 'kx' → logprob: -21.500003814697266
    4. '	k' → logprob: -22.500003814697266
    5. '{k' → logprob: -23.625003814697266
    6. '_k' → logprob: -24.250003814697266
    7. '=k' → logprob: -25.750003814697266
    8. '(k' → logprob: -26.125003814697266
    9. '*k' → logprob: -26.125003814697266
    10. 'x' → logprob: -26.125003814697266

Token 374: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5092264413833618
    2. '<|end|>' → logprob: -1.2592264413833618
    3. '
' → logprob: -2.3842263221740723
    4. '    
' → logprob: -4.634226322174072
    5. 'def' → logprob: -5.134226322174072
    6. '\n' → logprob: -6.259226322174072
    7. '<|end|>' → logprob: -6.634226322174072
    8. '  
' → logprob: -6.759226322174072
    9. '```' → logprob: -7.009226322174072
    10. ' 
' → logprob: -7.384226322174072

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022117510437965393
    2. 'def' → logprob: -4.397117614746094
    3. '
' → logprob: -5.022117614746094
    4. '

' → logprob: -7.397117614746094
    5. '\n' → logprob: -7.522117614746094
    6. ' def' → logprob: -7.772117614746094
    7. ' ' → logprob: -7.897117614746094
    8. '    
' → logprob: -8.147117614746094
    9. '@property' → logprob: -8.522117614746094
    10. '```' → logprob: -9.397117614746094

Token 376: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08165369927883148
    2. '   ' → logprob: -3.206653594970703
    3. '@property' → logprob: -3.456653594970703
    4. ')' → logprob: -5.206653594970703
    5. ' def' → logprob: -8.081653594970703
    6. '.' → logprob: -8.456653594970703
    7. '```' → logprob: -9.081653594970703
    8. ':' → logprob: -9.581653594970703
    9. '(' → logprob: -10.206653594970703
    10. '):' → logprob: -10.331653594970703

Token 377: ' __' (ID: 2516)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.2715294063091278
    2. 'norm' → logprob: -2.02152943611145
    3. '__' → logprob: -2.52152943611145
    4. 'length' → logprob: -4.396529197692871
    5. 'abs' → logprob: -5.396529197692871
    6. ' dot' → logprob: -5.646529197692871
    7. ' __' → logprob: -6.521529197692871
    8. ' norm' → logprob: -7.021529197692871
    9. 'distance' → logprob: -7.271529197692871
    10. 'dist' → logprob: -7.396529197692871

Token 378: 'tr' (ID: 371)
  Prédit: 'tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.00026765360962599516
    2. 'neg' → logprob: -9.37526798248291
    3. 'lt' → logprob: -9.50026798248291
    4. 'abs' → logprob: -9.50026798248291
    5. 'flo' → logprob: -10.75026798248291
    6. 'str' → logprob: -12.87526798248291
    7. 'tru' → logprob: -13.62526798248291
    8. 'bool' → logprob: -13.75026798248291
    9. '```' → logprob: -13.75026798248291
    10. '.tr' → logprob: -14.00026798248291

Token 379: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.0010517460759729147
    2. 'ue' → logprob: -7.501051902770996
    3. 'u' → logprob: -7.626051902770996
    4. 'ud' → logprob: -13.376051902770996
    5. 'uen' → logprob: -13.501051902770996
    6. '__' → logprob: -13.751051902770996
    7. 'div' → logprob: -13.876051902770996
    8. '```' → logprob: -13.876051902770996
    9. 'uf' → logprob: -14.126051902770996
    10. '
' → logprob: -14.251051902770996

Token 380: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -1.6240566083070007e-06
    2. '__' → logprob: -13.750001907348633
    3. 'IV' → logprob: -15.750001907348633
    4. 'div' → logprob: -16.000001907348633
    5. 'ivs' → logprob: -16.250001907348633
    6. 'ivi' → logprob: -17.000001907348633
    7. 'v' → logprob: -17.125001907348633
    8. 'ivr' → logprob: -17.375001907348633
    9. 'i' → logprob: -18.000001907348633
    10. 'ef' → logprob: -18.750001907348633

Token 381: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012412987649440765
    2. '(self' → logprob: -4.762413024902344
    3. '__' → logprob: -6.137413024902344
    4. '(' → logprob: -7.262413024902344
    5. '__(
' → logprob: -7.762413024902344
    6. '__((' → logprob: -8.387413024902344
    7. '__('' → logprob: -8.637413024902344
    8. '__(*' → logprob: -9.387413024902344
    9. '__("' → logprob: -12.262413024902344
    10. ' (' → logprob: -12.387413024902344

Token 382: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001170132018160075
    2. ' self' → logprob: -9.125117301940918
    3. '(self' → logprob: -11.750117301940918
    4. '   ' → logprob: -16.7501163482666
    5. '	self' → logprob: -16.7501163482666
    6. 'k' → logprob: -18.5001163482666
    7. ' ' → logprob: -18.6251163482666
    8. 'def' → logprob: -18.8751163482666
    9. ')' → logprob: -19.1251163482666
    10. '
' → logprob: -19.2501163482666

Token 383: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.042798541486263275
    2. '__(' → logprob: -3.7927985191345215
    3. '(' → logprob: -4.2927985191345215
    4. 'self' → logprob: -5.5427985191345215
    5. ' (' → logprob: -6.4177985191345215
    6. ',' → logprob: -9.91779899597168
    7. ' self' → logprob: -10.29279899597168
    8. ' ' → logprob: -10.91779899597168
    9. '_(' → logprob: -11.16779899597168
    10. '__' → logprob: -11.54279899597168

Token 384: ' k' (ID: 372)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26114022731781006
    2. ' self' → logprob: -1.51114022731781
    3. 'k' → logprob: -4.8861403465271
    4. ' k' → logprob: -7.5111403465271
    5. '(self' → logprob: -7.6361403465271
    6. ' ' → logprob: -8.261139869689941
    7. '   ' → logprob: -9.636139869689941
    8. '```' → logprob: -10.011139869689941
    9. 'float' → logprob: -10.136139869689941
    10. ')' → logprob: -10.511139869689941

Token 385: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013234536163508892
    2. ' :' → logprob: -7.501323223114014
    3. '<|end|>' → logprob: -7.501323223114014
    4. ')' → logprob: -8.626323699951172
    5. '):' → logprob: -10.876323699951172
    6. '<|end|>' → logprob: -11.501323699951172
    7. ' ' → logprob: -13.001323699951172
    8. ':return' → logprob: -13.001323699951172
    9. '```' → logprob: -14.376323699951172
    10. ':void' → logprob: -14.501323699951172

Token 386: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.018151817843317986
    2. ' float' → logprob: -4.018151760101318
    3. '(float' → logprob: -13.393152236938477
    4. '=float' → logprob: -15.143152236938477
    5. '	float' → logprob: -16.768152236938477
    6. '<float' → logprob: -16.768152236938477
    7. ' ' → logprob: -17.518152236938477
    8. 'f' → logprob: -17.768152236938477
    9. ',float' → logprob: -17.893152236938477
    10. '```' → logprob: -18.268152236938477

Token 387: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005016815848648548
    2. '):' → logprob: -7.62550163269043
    3. ':' → logprob: -11.37550163269043
    4. ')->' → logprob: -13.50050163269043
    5. ' )' → logprob: -14.37550163269043
    6. '):
' → logprob: -15.37550163269043
    7. ' ' → logprob: -17.00050163269043
    8. '   ' → logprob: -17.50050163269043
    9. '),' → logprob: -17.75050163269043
    10. ').' → logprob: -17.75050163269043

Token 388: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004484269011300057
    2. '->' → logprob: -8.250448226928711
    3. ')' → logprob: -9.500448226928711
    4. ' ->' → logprob: -9.500448226928711
    5. ' :' → logprob: -10.500448226928711
    6. '):' → logprob: -12.625448226928711
    7. ':
' → logprob: -13.000448226928711
    8. ')->' → logprob: -13.500448226928711
    9. ':return' → logprob: -13.750448226928711
    10. '>' → logprob: -14.375448226928711

Token 389: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07783252000808716
    2. ' '' → logprob: -3.2028324604034424
    3. 'k' → logprob: -4.7028326988220215
    4. 'Point' → logprob: -4.7028326988220215
    5. ' k' → logprob: -5.3278326988220215
    6. 'float' → logprob: -5.5778326988220215
    7. ' float' → logprob: -5.7028326988220215
    8. ' Point' → logprob: -5.7028326988220215
    9. ' ' → logprob: -8.077832221984863
    10. 'self' → logprob: -9.327832221984863

Token 390: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.002476135268807411
    2. 'float' → logprob: -6.002476215362549
    3. ' Point' → logprob: -15.12747573852539
    4. '	Point' → logprob: -16.87747573852539
    5. ' float' → logprob: -17.62747573852539
    6. 'point' → logprob: -17.75247573852539
    7. '```' → logprob: -18.25247573852539
    8. 'Float' → logprob: -18.25247573852539
    9. 'Points' → logprob: -18.50247573852539
    10. '(Point' → logprob: -18.50247573852539

Token 391: '':
' (ID: 7669)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5237628817558289
    2. ':' → logprob: -1.0237629413604736
    3. '':' → logprob: -3.7737629413604736
    4. '):
' → logprob: -4.3987627029418945
    5. ')' → logprob: -4.7737627029418945
    6. '<|end|>' → logprob: -6.6487627029418945
    7. ':
' → logprob: -6.7737627029418945
    8. ''):' → logprob: -7.0237627029418945
    9. '   ' → logprob: -8.023762702941895
    10. ''):
' → logprob: -8.773762702941895

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007366081699728966
    2. ' return' → logprob: -7.750736713409424
    3. 'return' → logprob: -8.125736236572266
    4. 'Point' → logprob: -12.500736236572266
    5. '   ' → logprob: -12.750736236572266
    6. ' Point' → logprob: -12.875736236572266
    7. '      ' → logprob: -15.000736236572266
    8. ' ' → logprob: -15.625736236572266
    9. '	return' → logprob: -16.000736236572266
    10. '     ' → logprob: -16.875736236572266

Token 393: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0485965758562088
    2. 'Point' → logprob: -3.0485966205596924
    3. ' return' → logprob: -11.798596382141113
    4. '       ' → logprob: -13.548596382141113
    5. ' Point' → logprob: -15.673596382141113
    6. '   ' → logprob: -16.42359733581543
    7. 'Return' → logprob: -17.67359733581543
    8. '```' → logprob: -18.04859733581543
    9. '	return' → logprob: -18.79859733581543
    10. 'assert' → logprob: -19.29859733581543

Token 394: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03805021569132805
    2. ' Point' → logprob: -3.2880501747131348
    3. 'self' → logprob: -11.788050651550293
    4. ' self' → logprob: -14.288050651550293
    5. '	Point' → logprob: -14.663050651550293
    6. '(Point' → logprob: -17.163049697875977
    7. '_Point' → logprob: -17.788049697875977
    8. 'Points' → logprob: -18.538049697875977
    9. ' ' → logprob: -18.663049697875977
    10. '_point' → logprob: -18.913049697875977

Token 395: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. 'self' → logprob: -18.375
    4. '(
' → logprob: -18.75
    5. ' (' → logprob: -21.0
    6. '(this' → logprob: -22.25
    7. '(s' → logprob: -22.5
    8. '((' → logprob: -22.5
    9. ' self' → logprob: -22.75
    10. '=self' → logprob: -23.0

Token 396: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00020592445798683912
    2. '.' → logprob: -8.500205993652344
    3. 'x' → logprob: -13.375205993652344
    4. ' .' → logprob: -14.250205993652344
    5. '._' → logprob: -17.000205993652344
    6. '<|end|>' → logprob: -17.125205993652344
    7. '```' → logprob: -17.625205993652344
    8. ').' → logprob: -17.875205993652344
    9. ' ' → logprob: -18.125205993652344
    10. '.__' → logprob: -18.250205993652344

Token 397: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.12748056650161743
    2. '/' → logprob: -2.1274805068969727
    3. '/k' → logprob: -7.502480506896973
    4. ' ' → logprob: -15.502480506896973
    5. ' ' → logprob: -16.00248146057129
    6. '   ' → logprob: -16.37748146057129
    7. ' /
' → logprob: -17.37748146057129
    8. '/usr' → logprob: -17.62748146057129
    9. '/div' → logprob: -17.75248146057129
    10. '/d' → logprob: -18.00248146057129

Token 398: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.001170225441455841
    2. ' k' → logprob: -6.7511701583862305
    3. '	k' → logprob: -22.126171112060547
    4. '{k' → logprob: -22.626171112060547
    5. '_k' → logprob: -22.751171112060547
    6. 'kx' → logprob: -23.501171112060547
    7. ' к' → logprob: -24.626171112060547
    8. ',k' → logprob: -25.001171112060547
    9. ' ' → logprob: -25.126171112060547
    10. '(k' → logprob: -25.251171112060547

Token 399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4498052223643754e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',k' → logprob: -14.000014305114746
    4. ')' → logprob: -15.000014305114746
    5. ',
' → logprob: -15.500014305114746
    6. ' ' → logprob: -17.500015258789062
    7. '<|end|>' → logprob: -18.750015258789062
    8. '   ' → logprob: -19.750015258789062
    9. 's' → logprob: -20.125015258789062
    10. ',float' → logprob: -20.500015258789062

Token 400: ' self' (ID: 1051)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.009335147216916084
    2. ' k' → logprob: -4.759335041046143
    3. 'self' → logprob: -7.259335041046143
    4. ' self' → logprob: -11.0093355178833
    5. '   ' → logprob: -16.134334564208984
    6. '       ' → logprob: -16.259334564208984
    7. ' ' → logprob: -17.509334564208984
    8. '	k' → logprob: -17.884334564208984
    9. '  ' → logprob: -19.009334564208984
    10. '    ' → logprob: -19.134334564208984

Token 401: '.y' (ID: 4486)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0845928192138672
    2. 'y' → logprob: -1.2095928192138672
    3. '.y' → logprob: -1.2095928192138672
    4. ' y' → logprob: -3.709592819213867
    5. '.' → logprob: -4.084592819213867
    6. 'x' → logprob: -4.459592819213867
    7. '.x' → logprob: -5.084592819213867
    8. ' ' → logprob: -6.209592819213867
    9. '.py' → logprob: -6.709592819213867
    10. '<|end|>' → logprob: -6.959592819213867

Token 402: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5802514553070068
    2. ',' → logprob: -0.8302514553070068
    3. '<|end|>' → logprob: -6.205251693725586
    4. ' )' → logprob: -6.830251693725586
    5. ' ,' → logprob: -8.330251693725586
    6. '),' → logprob: -8.455251693725586
    7. ' ' → logprob: -8.580251693725586
    8. ' ' → logprob: -8.705251693725586
    9. ',k' → logprob: -8.830251693725586
    10. ' k' → logprob: -9.205251693725586

Token 403: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.4391956685576588e-05
    2. ' k' → logprob: -10.625024795532227
    3. ' ' → logprob: -21.000024795532227
    4. '	k' → logprob: -21.000024795532227
    5. '```' → logprob: -21.000024795532227
    6. '   ' → logprob: -21.250024795532227
    7. '
' → logprob: -21.875024795532227
    8. 'float' → logprob: -22.125024795532227
    9. 'kx' → logprob: -22.250024795532227
    10. '_k' → logprob: -22.250024795532227

Token 404: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.125
    4. ')

' → logprob: -18.0
    5. '<|end|>' → logprob: -18.375
    6. '),' → logprob: -18.75
    7. '}' → logprob: -19.375
    8. ').' → logprob: -20.125
    9. ')return' → logprob: -20.875
    10. '   ' → logprob: -20.875

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014655010774731636
    2. 'def' → logprob: -5.264655113220215
    3. ':' → logprob: -5.514655113220215
    4. '```' → logprob: -6.139655113220215
    5. '    
' → logprob: -6.264655113220215
    6. '@property' → logprob: -7.889655113220215
    7. '<|end|>' → logprob: -8.764655113220215
    8. '
' → logprob: -8.764655113220215
    9. '\n' → logprob: -9.014655113220215
    10. '(' → logprob: -9.889655113220215

Token 406: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38818681240081787
    2. 'def' (adapté à ' def') → logprob: -1.1381868124008179
    3. ')' → logprob: -7.888186931610107
    4. ' def' → logprob: -8.01318645477295
    5. '    
' → logprob: -8.38818645477295
    6. '@property' → logprob: -8.51318645477295
    7. ':' → logprob: -9.38818645477295
    8. ' ' → logprob: -11.01318645477295
    9. '.' → logprob: -11.26318645477295
    10. '```' → logprob: -11.26318645477295

Token 407: ' __' (ID: 2516)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.6507376432418823
    2. 'abs' → logprob: -0.9007376432418823
    3. 'norm' → logprob: -2.650737762451172
    4. 'length' → logprob: -6.775737762451172
    5. ' dot' → logprob: -9.650737762451172
    6. 'distance' → logprob: -9.650737762451172
    7. 'dist' → logprob: -9.900737762451172
    8. '__' → logprob: -10.025737762451172
    9. 'len' → logprob: -10.650737762451172
    10. ' norm' → logprob: -11.025737762451172

Token 408: 'lt' (ID: 3199)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.054296452552080154
    2. 'lt' → logprob: -3.0542964935302734
    3. 'abs' → logprob: -5.554296493530273
    4. 'pow' → logprob: -6.804296493530273
    5. 'flo' → logprob: -8.179296493530273
    6. 'pos' → logprob: -8.929296493530273
    7. 'hash' → logprob: -9.054296493530273
    8. 'mul' → logprob: -10.304296493530273
    9. 'xor' → logprob: -10.304296493530273
    10. 'getitem' → logprob: -10.304296493530273

Token 409: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003408263437449932
    2. '__' → logprob: -8.000340461730957
    3. '__(
' → logprob: -13.250340461730957
    4. '(self' → logprob: -13.500340461730957
    5. '__('' → logprob: -13.500340461730957
    6. '(' → logprob: -14.375340461730957
    7. '__((' → logprob: -16.125341415405273
    8. '_(' → logprob: -16.875341415405273
    9. '__(*' → logprob: -17.000341415405273
    10. '__("' → logprob: -17.625341415405273

Token 410: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.5716304410016164e-05
    2. ' self' → logprob: -10.250035285949707
    3. '(self' → logprob: -16.000036239624023
    4. '
' → logprob: -17.500036239624023
    5. '0' → logprob: -17.625036239624023
    6. '   ' → logprob: -17.875036239624023
    7. '       ' → logprob: -18.000036239624023
    8. 'other' → logprob: -18.250036239624023
    9. ' ' → logprob: -18.500036239624023
    10. '	self' → logprob: -18.500036239624023

Token 411: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01451945211738348
    2. '__(' → logprob: -4.639519214630127
    3. '(' → logprob: -5.389519214630127
    4. ' (' → logprob: -9.389519691467285
    5. 'self' → logprob: -9.389519691467285
    6. '_(' → logprob: -12.139519691467285
    7. ''(' → logprob: -12.264519691467285
    8. ')(' → logprob: -12.889519691467285
    9. ',' → logprob: -13.264519691467285
    10. '```' → logprob: -13.889519691467285

Token 412: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.03289228677749634
    2. 'self' → logprob: -3.5328922271728516
    3. ' other' → logprob: -5.782892227172852
    4. ' self' → logprob: -9.782892227172852
    5. 'Other' → logprob: -14.907892227172852
    6. ' ' → logprob: -15.282892227172852
    7. '(other' → logprob: -17.53289222717285
    8. '   ' → logprob: -17.90789222717285
    9. '_other' → logprob: -18.03289222717285
    10. 'o' → logprob: -18.15789222717285

Token 413: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038264848990365863
    2. ')' → logprob: -8.375382423400879
    3. ' :' → logprob: -9.125382423400879
    4. ',' → logprob: -11.250382423400879
    5. '(' → logprob: -11.625382423400879
    6. 'self' → logprob: -12.125382423400879
    7. '):' → logprob: -12.375382423400879
    8. '<|end|>' → logprob: -13.000382423400879
    9. '(self' → logprob: -13.250382423400879
    10. ' (' → logprob: -13.750382423400879

Token 414: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31379038095474243
    2. ' '' → logprob: -1.3137903213500977
    3. 'Point' → logprob: -8.563790321350098
    4. ' Point' → logprob: -9.063790321350098
    5. 'object' → logprob: -9.188790321350098
    6. ' ' → logprob: -10.063790321350098
    7. ''s' → logprob: -10.563790321350098
    8. ' object' → logprob: -11.063790321350098
    9. ')' → logprob: -11.938790321350098
    10. '<Point' → logprob: -12.063790321350098

Token 415: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.65101717156358e-05
    2. ' Point' → logprob: -9.250096321105957
    3. '	Point' → logprob: -16.125097274780273
    4. '_point' → logprob: -16.500097274780273
    5. '_Point' → logprob: -16.625097274780273
    6. '<Point' → logprob: -17.375097274780273
    7. '.Point' → logprob: -17.375097274780273
    8. '(Point' → logprob: -18.750097274780273
    9. ' ' → logprob: -19.500097274780273
    10. 'Points' → logprob: -19.750097274780273

Token 416: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.005235648714005947
    2. ')' → logprob: -5.25523567199707
    3. '")' → logprob: -13.88023567199707
    4. ':' → logprob: -15.00523567199707
    5. ''' → logprob: -15.13023567199707
    6. ''):
' → logprob: -16.13023567199707
    7. ' ')' → logprob: -16.63023567199707
    8. ')'' → logprob: -16.88023567199707
    9. '`)' → logprob: -17.00523567199707
    10. '')
' → logprob: -18.63023567199707

Token 417: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3766261339187622
    2. '->' → logprob: -1.3766261339187622
    3. ' ->' → logprob: -3.1266260147094727
    4. ':' → logprob: -4.501626014709473
    5. '(self' → logprob: -5.876626014709473
    6. '       ' → logprob: -6.751626014709473
    7. '   ' → logprob: -7.001626014709473
    8. ')->' → logprob: -7.251626014709473
    9. 'self' → logprob: -7.876626014709473
    10. '```' → logprob: -9.501626014709473

Token 418: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.12692947685718536
    2. ' bool' → logprob: -2.126929521560669
    3. '<bool' → logprob: -14.62692928314209
    4. '	bool' → logprob: -15.00192928314209
    5. 'True' → logprob: -15.12692928314209
    6. ' ' → logprob: -15.75192928314209
    7. '(bool' → logprob: -16.376930236816406
    8. ':' → logprob: -16.626930236816406
    9. ')' → logprob: -17.376930236816406
    10. ' True' → logprob: -18.001930236816406

Token 419: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002197836758568883
    2. ':
' → logprob: -7.002197742462158
    3. '):' → logprob: -7.002197742462158
    4. '       ' → logprob: -8.752198219299316
    5. '():' → logprob: -9.502198219299316
    6. '):
' → logprob: -10.127198219299316
    7. '<|end|>' → logprob: -10.502198219299316
    8. '   ' → logprob: -10.752198219299316
    9. ' :' → logprob: -11.002198219299316
    10. '():
' → logprob: -11.502198219299316

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010386446956545115
    2. 'return' → logprob: -7.626038551330566
    3. '<|end|>' → logprob: -8.376038551330566
    4. 'if' → logprob: -8.501038551330566
    5. ' if' → logprob: -9.501038551330566
    6. ' return' → logprob: -10.626038551330566
    7. '{return' → logprob: -12.501038551330566
    8. '0' → logprob: -13.126038551330566
    9. '   ' → logprob: -13.751038551330566
    10. '	return' → logprob: -13.876038551330566

Token 421: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7878143191337585
    2. 'self' → logprob: -1.2878143787384033
    3. 'if' → logprob: -1.7878143787384033
    4. '(self' → logprob: -2.2878143787384033
    5. ' return' → logprob: -8.537814140319824
    6. '   ' → logprob: -9.412814140319824
    7. '       ' → logprob: -9.787814140319824
    8. ' self' → logprob: -10.037814140319824
    9. ' (' → logprob: -10.162814140319824
    10. ' if' → logprob: -10.537814140319824

Token 422: ' self' (ID: 1051)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16103008389472961
    2. 'self' → logprob: -1.9110300540924072
    3. ' (' → logprob: -7.286030292510986
    4. ' self' → logprob: -9.411029815673828
    5. '(' → logprob: -11.161029815673828
    6. '((' → logprob: -11.911029815673828
    7. '(
' → logprob: -12.286029815673828
    8. '(x' → logprob: -12.911029815673828
    9. '   ' → logprob: -13.036029815673828
    10. '	self' → logprob: -13.286029815673828

Token 423: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.004078758880496025
    2. '.y' → logprob: -5.5040788650512695
    3. '.' → logprob: -15.87907886505127
    4. 'x' → logprob: -17.004077911376953
    5. '.t' → logprob: -18.004077911376953
    6. 'y' → logprob: -18.504077911376953
    7. '.s' → logprob: -18.754077911376953
    8. ' .' → logprob: -19.129077911376953
    9. '.to' → logprob: -19.504077911376953
    10. '<x' → logprob: -19.879077911376953

Token 424: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.001965627772733569
    2. ' <' → logprob: -6.251965522766113
    3. ',' → logprob: -10.751965522766113
    4. '==' → logprob: -13.126965522766113
    5. '<com' → logprob: -13.126965522766113
    6. '()<' → logprob: -13.751965522766113
    7. ' ' → logprob: -13.876965522766113
    8. '[' → logprob: -14.251965522766113
    9. '<int' → logprob: -14.251965522766113
    10. '!=' → logprob: -14.626965522766113

Token 425: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0019286326132714748
    2. ' other' → logprob: -6.251928806304932
    3. '(other' → logprob: -17.751928329467773
    4. ' ' → logprob: -18.376928329467773
    5. '.other' → logprob: -19.376928329467773
    6. '   ' → logprob: -20.001928329467773
    7. 'othe' → logprob: -20.376928329467773
    8. 'oth' → logprob: -20.501928329467773
    9. 'Other' → logprob: -20.501928329467773
    10. '0' → logprob: -21.251928329467773

Token 426: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -3.452426608419046e-05
    2. '.' → logprob: -10.37503433227539
    3. '.x' → logprob: -13.12503433227539
    4. 'y' → logprob: -13.75003433227539
    5. ' .' → logprob: -16.00003433227539
    6. '.other' → logprob: -17.62503433227539
    7. '.<' → logprob: -18.87503433227539
    8. '.
' → logprob: -19.62503433227539
    9. '._' → logprob: -19.87503433227539
    10. '.z' → logprob: -20.75003433227539

Token 427: ' \
' (ID: 6814)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.5697131752967834
    2. ' or' → logprob: -1.3197131156921387
    3. 'if' → logprob: -1.8197131156921387
    4. ' if' → logprob: -5.319713115692139
    5. '	or' → logprob: -9.944713592529297
    6. '           ' → logprob: -10.444713592529297
    7. '   ' → logprob: -10.694713592529297
    8. '       ' → logprob: -11.444713592529297
    9. 'and' → logprob: -11.819713592529297
    10. 'If' → logprob: -12.694713592529297

Token 428: '           ' (ID: 352)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.16883738338947296
    2. ' or' → logprob: -1.9188374280929565
    3. 'if' → logprob: -4.793837547302246
    4. ' if' → logprob: -8.293837547302246
    5. '	or' → logprob: -10.543837547302246
    6. '   ' → logprob: -11.668837547302246
    7. '       ' → logprob: -12.543837547302246
    8. 'and' → logprob: -13.043837547302246
    9. ' ' → logprob: -13.293837547302246
    10. '           ' → logprob: -14.043837547302246

Token 429: ' if' (ID: 538)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.2695012092590332
    2. ' or' → logprob: -2.144501209259033
    3. 'if' (adapté à ' if') → logprob: -2.144501209259033
    4. ' if' → logprob: -6.269501209259033
    5. '           ' → logprob: -10.019500732421875
    6. '	or' → logprob: -11.144500732421875
    7. 'and' → logprob: -11.519500732421875
    8. '   ' → logprob: -11.769500732421875
    9. ' ' → logprob: -12.144500732421875
    10. '       ' → logprob: -12.644500732421875

Token 430: ' abs' (ID: 8443)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4382074475288391
    2. 'float' → logprob: -1.4382073879241943
    3. 'self' → logprob: -2.4382073879241943
    4. ' not' → logprob: -3.5632073879241943
    5. ' float' → logprob: -6.938207626342773
    6. ' self' → logprob: -8.063207626342773
    7. 'abs' → logprob: -8.563207626342773
    8. '   ' → logprob: -9.188207626342773
    9. '!' → logprob: -9.938207626342773
    10. '(float' → logprob: -9.938207626342773

Token 431: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.125015258789062
    3. '(s' → logprob: -15.500015258789062
    4. '((' → logprob: -16.500015258789062
    5. 'self' → logprob: -16.750015258789062
    6. '(other' → logprob: -17.875015258789062
    7. ' (' → logprob: -19.125015258789062
    8. '(sel' → logprob: -19.125015258789062
    9. '(
' → logprob: -19.500015258789062
    10. ' self' → logprob: -20.125015258789062

Token 432: '.x' (ID: 3700)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008484598365612328
    2. '.y' → logprob: -7.750848293304443
    3. '(' → logprob: -8.500848770141602
    4. '(y' → logprob: -8.625848770141602
    5. '(other' → logprob: -10.500848770141602
    6. '(s' → logprob: -12.500848770141602
    7. '((' → logprob: -13.375848770141602
    8. 'self' → logprob: -14.750848770141602
    9. '(
' → logprob: -15.125848770141602
    10. 'y' → logprob: -15.375848770141602

Token 433: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06234654039144516
    2. ' -' → logprob: -2.8123464584350586
    3. '-other' → logprob: -7.937346458435059
    4. ' ' → logprob: -11.687346458435059
    5. '-self' → logprob: -11.812346458435059
    6. 'other' → logprob: -12.687346458435059
    7. '  ' → logprob: -14.562346458435059
    8. '(other' → logprob: -14.562346458435059
    9. '   ' → logprob: -14.687346458435059
    10. ')' → logprob: -15.437346458435059

Token 434: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -9.615255839889869e-05
    2. ' other' → logprob: -9.250096321105957
    3. '(other' → logprob: -17.75009536743164
    4. ' ' → logprob: -18.87509536743164
    5. '0' → logprob: -19.00009536743164
    6. '   ' → logprob: -19.37509536743164
    7. 'Other' → logprob: -19.50009536743164
    8. 'self' → logprob: -19.62509536743164
    9. '.other' → logprob: -20.62509536743164
    10. '  ' → logprob: -20.87509536743164

Token 435: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.704273118884885e-07
    2. 'x' → logprob: -14.875000953674316
    3. '.' → logprob: -15.125000953674316
    4. ' .' → logprob: -18.375
    5. '[' → logprob: -19.0
    6. ' ' → logprob: -19.125
    7. ' x' → logprob: -19.5
    8. '.y' → logprob: -19.75
    9. '(x' → logprob: -19.75
    10. '<|end|>' → logprob: -20.0

Token 436: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012047229334712029
    2. ')<' → logprob: -4.637047290802002
    3. ')>' → logprob: -6.137047290802002
    4. ' )' → logprob: -9.887046813964844
    5. ')>=' → logprob: -10.012046813964844
    6. ')<=' → logprob: -10.512046813964844
    7. ' ' → logprob: -13.637046813964844
    8. '|' → logprob: -14.637046813964844
    9. '）' → logprob: -14.762046813964844
    10. '<' → logprob: -14.887046813964844

Token 437: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.30439791083335876
    2. '<' → logprob: -2.0543978214263916
    3. '>=' → logprob: -2.3043978214263916
    4. ' >' → logprob: -3.9293978214263916
    5. ' >=' → logprob: -4.554398059844971
    6. ' <' → logprob: -5.554398059844971
    7. ' ' → logprob: -8.929397583007812
    8. ')>=' → logprob: -10.054397583007812
    9. '<=' → logprob: -10.304397583007812
    10. '><' → logprob: -10.554397583007812

Token 438: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -9.610702363715973e-06
    2. '1' → logprob: -11.625009536743164
    3. ' EPS' → logprob: -14.500009536743164
    4. 'EP' → logprob: -16.125009536743164
    5. 'ESP' → logprob: -17.375009536743164
    6. 'EPT' → logprob: -18.000009536743164
    7. 'eps' → logprob: -18.250009536743164
    8. ' ' → logprob: -18.625009536743164
    9. '10' → logprob: -18.875009536743164
    10. '   ' → logprob: -19.000009536743164

Token 439: ' \
' (ID: 6814)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25193464756011963
    2. ' else' → logprob: -1.5019346475601196
    3. 'and' → logprob: -13.126935005187988
    4. 'or' → logprob: -14.126935005187988
    5. ' or' → logprob: -14.126935005187988
    6. '	else' → logprob: -14.376935005187988
    7. '           ' → logprob: -15.126935005187988
    8. '\
' → logprob: -15.501935005187988
    9. '        ' → logprob: -15.751935005187988
    10. 'elif' → logprob: -15.876935005187988

Token 440: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.018154039978981018
    2. ' else' → logprob: -4.018154144287109
    3. '           ' → logprob: -13.39315414428711
    4. '       ' → logprob: -13.64315414428711
    5. '	else' → logprob: -14.14315414428711
    6. 'and' → logprob: -15.39315414428711
    7. '   ' → logprob: -16.26815414428711
    8. ':' → logprob: -16.64315414428711
    9. '_else' → logprob: -16.76815414428711
    10. '        ' → logprob: -17.39315414428711

Token 441: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.00862131267786026
    2. ' else' → logprob: -4.7586212158203125
    3. '           ' → logprob: -12.008621215820312
    4. '       ' → logprob: -15.258621215820312
    5. '	else' → logprob: -15.508621215820312
    6. '          ' → logprob: -17.008621215820312
    7. 'and' → logprob: -17.383621215820312
    8. '               ' → logprob: -17.383621215820312
    9. 'els' → logprob: -17.508621215820312
    10. ' ' → logprob: -17.883621215820312

Token 442: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.517272024415433e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -15.625075340270996
    4. '	self' → logprob: -18.50007438659668
    5. ' ' → logprob: -19.12507438659668
    6. '   ' → logprob: -19.25007438659668
    7. '  ' → logprob: -20.00007438659668
    8. '[self' → logprob: -20.62507438659668
    9. 'float' → logprob: -21.25007438659668
    10. '
' → logprob: -21.37507438659668

Token 443: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00021688752167392522
    2. 'x' → logprob: -8.500216484069824
    3. '.' → logprob: -11.875216484069824
    4. '<x' → logprob: -12.000216484069824
    5. '<' → logprob: -16.12521743774414
    6. '.<' → logprob: -16.62521743774414
    7. '<|end|>' → logprob: -16.62521743774414
    8. ' <' → logprob: -18.12521743774414
    9. ' .' → logprob: -18.25021743774414
    10. ' x' → logprob: -19.12521743774414

Token 444: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.03365250304341316
    2. '<' → logprob: -3.4086525440216064
    3. '<|end|>' → logprob: -12.658652305603027
    4. ' ' → logprob: -13.283652305603027
    5. '<x' → logprob: -15.033652305603027
    6. '<class' → logprob: -15.033652305603027
    7. ' >' → logprob: -15.283652305603027
    8. '[' → logprob: -15.658652305603027
    9. ' ' → logprob: -15.783652305603027
    10. '<size' → logprob: -16.283653259277344

Token 445: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0024756586644798517
    2. ' other' → logprob: -6.002475738525391
    3. '(other' → logprob: -17.12747573852539
    4. 'othe' → logprob: -17.62747573852539
    5. 'oth' → logprob: -19.00247573852539
    6. ' ' → logprob: -19.00247573852539
    7. '   ' → logprob: -19.12747573852539
    8. 'Other' → logprob: -19.12747573852539
    9. '.other' → logprob: -19.25247573852539
    10. '_other' → logprob: -20.37747573852539

Token 446: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0022730084601789713
    2. '.' → logprob: -6.127273082733154
    3. 'x' → logprob: -9.377272605895996
    4. '<|end|>' → logprob: -13.002272605895996
    5. ' .' → logprob: -14.752272605895996
    6. '<|end|>' → logprob: -15.127272605895996
    7. '<x' → logprob: -16.877273559570312
    8. '.xtext' → logprob: -17.127273559570312
    9. '	x' → logprob: -17.502273559570312
    10. '.xhtml' → logprob: -17.627273559570312

Token 447: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44099190831184387
    2. '<|end|>' → logprob: -1.6909918785095215
    3. ':' → logprob: -2.3159918785095215
    4. 'def' (adapté à ' def') → logprob: -2.9409918785095215
    5. ')' → logprob: -4.4409918785095215
    6. ' def' → logprob: -5.8159918785095215
    7. '```' → logprob: -6.8159918785095215
    8. ' ' → logprob: -6.9409918785095215
    9. '       ' → logprob: -7.1909918785095215
    10. '
' → logprob: -7.4409918785095215

Token 450: ' norm' (ID: 7882)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.007315661758184433
    2. 'y' → logprob: -5.882315635681152
    3. 'distance' → logprob: -6.132315635681152
    4. ' __' → logprob: -6.632315635681152
    5. '_y' → logprob: -7.507315635681152
    6. 'dist' → logprob: -9.132315635681152
    7. 'hash' → logprob: -9.507315635681152
    8. 'dot' → logprob: -9.757315635681152
    9. 'def' → logprob: -9.757315635681152
    10. 'norm' → logprob: -10.382315635681152

Token 451: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012682090746238828
    2. '()' → logprob: -7.37626838684082
    3. '(' → logprob: -7.50126838684082
    4. '(s' → logprob: -10.50126838684082
    5. 'self' → logprob: -10.75126838684082
    6. '_squared' → logprob: -11.37626838684082
    7. '2' → logprob: -11.75126838684082
    8. 's' → logprob: -12.00126838684082
    9. '()(' → logprob: -12.37626838684082
    10. 'sq' → logprob: -12.75126838684082

Token 452: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015078646130859852
    2. '()' → logprob: -4.265078544616699
    3. '(' → logprob: -7.765078544616699
    4. 'self' → logprob: -8.5150785446167
    5. ')' → logprob: -9.0150785446167
    6. '())' → logprob: -9.0150785446167
    7. '()(' → logprob: -11.0150785446167
    8. 's' → logprob: -11.8900785446167
    9. '   ' → logprob: -12.5150785446167
    10. ' (' → logprob: -12.8900785446167

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028513329103589058
    2. 'return' → logprob: -3.6535134315490723
    3. ' return' → logprob: -6.778513431549072
    4. '   ' → logprob: -7.653513431549072
    5. '	' → logprob: -7.903513431549072
    6. 'self' → logprob: -9.278512954711914
    7. '	return' → logprob: -9.403512954711914
    8. ' ' → logprob: -11.153512954711914
    9. ' self' → logprob: -11.278512954711914
    10. '(self' → logprob: -12.153512954711914

Token 454: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009020820260047913
    2. 'self' → logprob: -4.759020805358887
    3. ' return' → logprob: -8.134020805358887
    4. '   ' → logprob: -9.134020805358887
    5. ' self' → logprob: -13.009020805358887
    6. '       ' → logprob: -13.884020805358887
    7. '	return' → logprob: -14.259020805358887
    8. 'def' → logprob: -14.884020805358887
    9. '(self' → logprob: -15.009020805358887
    10. '  ' → logprob: -16.884021759033203

Token 455: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010348338400945067
    2. ' self' → logprob: -6.876034736633301
    3. '(self' → logprob: -13.6260347366333
    4. 'sqrt' → logprob: -14.2510347366333
    5. '	self' → logprob: -16.376035690307617
    6. 'math' → logprob: -17.001035690307617
    7. '   ' → logprob: -17.126035690307617
    8. 's' → logprob: -17.751035690307617
    9. ' ' → logprob: -18.001035690307617
    10. ' sqrt' → logprob: -18.751035690307617

Token 456: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.03836413845419884
    2. 'self' → logprob: -3.2883641719818115
    3. 'x' → logprob: -8.78836441040039
    4. '.s' → logprob: -9.16336441040039
    5. ' self' → logprob: -10.41336441040039
    6. '.self' → logprob: -11.16336441040039
    7. '(self' → logprob: -11.66336441040039
    8. '.' → logprob: -12.53836441040039
    9. 's' → logprob: -12.66336441040039
    10. '[self' → logprob: -13.78836441040039

Token 457: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0402352511882782
    2. '*' → logprob: -3.2902352809906006
    3. '*self' → logprob: -6.2902350425720215
    4. ' *' → logprob: -8.91523551940918
    5. ' **' → logprob: -9.16523551940918
    6. '2' → logprob: -9.41523551940918
    7. '*x' → logprob: -11.29023551940918
    8. ' ' → logprob: -13.04023551940918
    9. '*p' → logprob: -14.29023551940918
    10. '```' → logprob: -14.91523551940918

Token 458: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008872798644006252
    2. '2' → logprob: -7.250887393951416
    3. ' self' → logprob: -9.000886917114258
    4. '<|end|>' → logprob: -10.125886917114258
    5. '
' → logprob: -11.625886917114258
    6. '	self' → logprob: -14.000886917114258
    7. '*self' → logprob: -14.000886917114258
    8. ' ' → logprob: -14.625886917114258
    9. '4' → logprob: -14.625886917114258
    10. '<|end|>' → logprob: -14.625886917114258

Token 459: '.x' (ID: 3700)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011593853123486042
    2. 'self' → logprob: -6.876159191131592
    3. '.x' → logprob: -9.12615966796875
    4. '+' → logprob: -11.87615966796875
    5. '2' → logprob: -12.50115966796875
    6. '```' → logprob: -13.50115966796875
    7. ' x' → logprob: -13.87615966796875
    8. ' +' → logprob: -13.87615966796875
    9. '+x' → logprob: -14.37615966796875
    10. '+self' → logprob: -14.75115966796875

Token 460: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2524811029434204
    2. '+' → logprob: -1.5024811029434204
    3. '+self' → logprob: -7.502480983734131
    4. '+
' → logprob: -16.87748146057129
    5. '+y' → logprob: -17.00248146057129
    6. 'self' → logprob: -17.50248146057129
    7. '   ' → logprob: -18.12748146057129
    8. '＋' → logprob: -18.62748146057129
    9. ' +
' → logprob: -18.75248146057129
    10. ' ' → logprob: -19.00248146057129

Token 461: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003357006062287837
    2. ' self' → logprob: -8.000335693359375
    3. '(self' → logprob: -15.750335693359375
    4. '	self' → logprob: -16.625335693359375
    5. '   ' → logprob: -16.750335693359375
    6. ' ' → logprob: -17.625335693359375
    7. '       ' → logprob: -18.250335693359375
    8. '<|end|>' → logprob: -19.375335693359375
    9. '  ' → logprob: -19.500335693359375
    10. '[self' → logprob: -19.750335693359375

Token 462: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.28410983085632324
    2. 'self' → logprob: -1.7841098308563232
    3. '.y' → logprob: -2.5341098308563232
    4. ' self' → logprob: -11.159110069274902
    5. '.' → logprob: -11.784110069274902
    6. '.self' → logprob: -12.784110069274902
    7. '<|end|>' → logprob: -13.034110069274902
    8. '   ' → logprob: -13.284110069274902
    9. 's' → logprob: -13.409110069274902
    10. ' y' → logprob: -13.534110069274902

Token 463: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0797545462846756
    2. ' *' → logprob: -2.579754590988159
    3. '*self' → logprob: -7.07975435256958
    4. '*y' → logprob: -11.704754829406738
    5. '**' → logprob: -12.079754829406738
    6. ' ' → logprob: -12.454754829406738
    7. '   ' → logprob: -13.204754829406738
    8. '*object' → logprob: -13.454754829406738
    9. '*this' → logprob: -15.079754829406738
    10. ' ' → logprob: -15.204754829406738

Token 464: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00031139038037508726
    2. ' self' → logprob: -8.125311851501465
    3. 'y' → logprob: -11.375311851501465
    4. '*self' → logprob: -13.375311851501465
    5. '	self' → logprob: -13.875311851501465
    6. '(self' → logprob: -14.500311851501465
    7. '<|end|>' → logprob: -15.250311851501465
    8. '0' → logprob: -15.375311851501465
    9. '-self' → logprob: -16.62531089782715
    10. ' ' → logprob: -16.75031089782715

Token 465: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0030990466475486755
    2. '2' → logprob: -5.878098964691162
    3. ' y' → logprob: -8.62809944152832
    4. '1' → logprob: -10.12809944152832
    5. '.y' → logprob: -10.37809944152832
    6. '*y' → logprob: -10.87809944152832
    7. '	y' → logprob: -11.62809944152832
    8. '<|end|>' → logprob: -12.00309944152832
    9. ' ' → logprob: -12.75309944152832
    10. '<|end|>' → logprob: -13.62809944152832

Token 466: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01785232312977314
    2. '<|end|>' → logprob: -5.267852306365967
    3. 'def' → logprob: -5.392852306365967
    4. '    
' → logprob: -5.642852306365967
    5. '
' → logprob: -6.017852306365967
    6. ')' → logprob: -7.517852306365967
    7. '```' → logprob: -7.642852306365967
    8. ' def' → logprob: -7.642852306365967
    9. '<|end|>' → logprob: -8.767852783203125
    10. '  
' → logprob: -9.642852783203125

Token 468: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005534812342375517
    2. '   ' → logprob: -5.255534648895264
    3. ' def' → logprob: -8.130535125732422
    4. '    
' → logprob: -12.630535125732422
    5. '	def' → logprob: -13.380535125732422
    6. ')' → logprob: -14.130535125732422
    7. '@property' → logprob: -14.755535125732422
    8. '
' → logprob: -15.880535125732422
    9. '```' → logprob: -16.130535125732422
    10. '  ' → logprob: -16.380535125732422

Token 469: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.004378024954348803
    2. 'norm' → logprob: -5.754377841949463
    3. ' abs' → logprob: -6.879377841949463
    4. ' norm' → logprob: -9.629378318786621
    5. 'length' → logprob: -10.129378318786621
    6. 'len' → logprob: -10.504378318786621
    7. 'absolute' → logprob: -10.754378318786621
    8. 'dist' → logprob: -12.129378318786621
    9. 'm' → logprob: -12.754378318786621
    10. 'dot' → logprob: -13.129378318786621

Token 470: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00016337241686414927
    2. '(' → logprob: -9.250163078308105
    3. '().' → logprob: -11.875163078308105
    4. ' ()' → logprob: -11.875163078308105
    5. '()>' → logprob: -12.000163078308105
    6. '();' → logprob: -12.125163078308105
    7. '()<<' → logprob: -12.250163078308105
    8. '()(' → logprob: -12.500163078308105
    9. '<|end|>' → logprob: -12.625163078308105
    10. '()+' → logprob: -12.750163078308105

Token 471: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4986957609653473
    2. '(self' → logprob: -1.123695731163025
    3. ')' → logprob: -2.8736958503723145
    4. '())' → logprob: -5.3736958503723145
    5. '(' → logprob: -5.7486958503723145
    6. 'self' → logprob: -6.6236958503723145
    7. '():' → logprob: -7.2486958503723145
    8. ')(' → logprob: -7.9986958503723145
    9. '():
' → logprob: -8.623695373535156
    10. '());' → logprob: -8.748695373535156

Token 472: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03271565958857536
    2. 'sqrt' → logprob: -4.532715797424316
    3. ' return' → logprob: -4.657715797424316
    4. '   ' → logprob: -5.282715797424316
    5. 'return' → logprob: -5.282715797424316
    6. ' sqrt' → logprob: -6.407715797424316
    7. 'self' → logprob: -10.157715797424316
    8. '(self' → logprob: -10.657715797424316
    9. ' self' → logprob: -11.532715797424316
    10. ' ' → logprob: -11.532715797424316

Token 473: ' return' (ID: 622)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.004351555835455656
    2. 'return' (adapté à ' return') → logprob: -5.754351615905762
    3. ' sqrt' → logprob: -6.754351615905762
    4. '   ' → logprob: -12.629351615905762
    5. ' return' → logprob: -13.004351615905762
    6. '.sqrt' → logprob: -14.004351615905762
    7. 's' → logprob: -14.254351615905762
    8. 'import' → logprob: -15.129351615905762
    9. '       ' → logprob: -16.379350662231445
    10. 'qrt' → logprob: -17.754350662231445

Token 474: ' sqrt' (ID: 44237)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.02975917048752308
    2. ' sqrt' → logprob: -3.529759168624878
    3. 's' → logprob: -12.029759407043457
    4. '   ' → logprob: -13.529759407043457
    5. '.sqrt' → logprob: -14.654759407043457
    6. '(s' → logprob: -15.529759407043457
    7. 'float' → logprob: -15.779759407043457
    8. 'self' → logprob: -15.779759407043457
    9. ' hypot' → logprob: -16.02975845336914
    10. ' ' → logprob: -16.15475845336914

Token 475: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026217024424113333
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -14.750262260437012
    4. '((' → logprob: -15.625262260437012
    5. 'self' → logprob: -15.750262260437012
    6. '(s' → logprob: -16.125261306762695
    7. ' (' → logprob: -17.000261306762695
    8. '(this' → logprob: -18.875261306762695
    9. '(sel' → logprob: -19.375261306762695
    10. '(abs' → logprob: -19.500261306762695

Token 476: '.norm' (ID: 73834)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5657297372817993
    2. '(self' → logprob: -1.6907297372817993
    3. '.norm' → logprob: -1.8157297372817993
    4. '.x' → logprob: -3.1907296180725098
    5. '.' → logprob: -3.5657296180725098
    6. ' self' → logprob: -5.19072961807251
    7. 'norm' → logprob: -5.56572961807251
    8. ')' → logprob: -6.06572961807251
    9. '(' → logprob: -6.44072961807251
    10. '.self' → logprob: -6.44072961807251

Token 477: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0007725820760242641
    2. '()' → logprob: -7.250772476196289
    3. ' ())' → logprob: -10.000772476196289
    4. '())
' → logprob: -11.250772476196289
    5. ')' → logprob: -12.625772476196289
    6. '()
' → logprob: -14.750772476196289
    7. '())

' → logprob: -15.125772476196289
    8. '(' → logprob: -15.875772476196289
    9. '();)' → logprob: -16.75077247619629
    10. '()))' → logprob: -17.00077247619629

Token 478: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4158240258693695
    2. 'def' → logprob: -1.415824055671692
    3. '<|end|>' → logprob: -2.9158239364624023
    4. ')' → logprob: -3.2908239364624023
    5. '#' → logprob: -6.165823936462402
    6. '```' → logprob: -6.665823936462402
    7. '    
' → logprob: -7.540823936462402
    8. '
' → logprob: -8.040823936462402
    9. '<|end|>' → logprob: -8.040823936462402
    10. '@property' → logprob: -8.290823936462402

Token 479: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0036484147422015667
    2. '   ' → logprob: -5.628648281097412
    3. ' def' → logprob: -10.12864875793457
    4. ')' → logprob: -12.25364875793457
    5. '@property' → logprob: -13.75364875793457
    6. '    
' → logprob: -14.12864875793457
    7. '.' → logprob: -14.50364875793457
    8. '	def' → logprob: -14.75364875793457
    9. '#' → logprob: -15.25364875793457
    10. '```' → logprob: -15.37864875793457

Token 480: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.009261442348361015
    2. 'polar' → logprob: -6.259261608123779
    3. ' dot' → logprob: -6.384261608123779
    4. 'con' → logprob: -6.634261608123779
    5. 'unit' → logprob: -6.634261608123779
    6. 'normalize' → logprob: -6.884261608123779
    7. 'arg' → logprob: -7.384261608123779
    8. 'angle' → logprob: -7.759261608123779
    9. 'norm' → logprob: -7.884261608123779
    10. 'rot' → logprob: -8.884261131286621

Token 481: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015300170343834907
    2. '(' → logprob: -8.875152587890625
    3. ' (' → logprob: -12.250152587890625
    4. '<|end|>' → logprob: -12.500152587890625
    5. '(
' → logprob: -13.000152587890625
    6. '<|end|>' → logprob: -13.750152587890625
    7. '(other' → logprob: -14.000152587890625
    8. '(this' → logprob: -15.875152587890625
    9. 'self' → logprob: -15.875152587890625
    10. '(s' → logprob: -16.250152587890625

Token 482: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017557413084432483
    2. '(' → logprob: -7.001755714416504
    3. '(other' → logprob: -7.376755714416504
    4. ' (' → logprob: -8.876755714416504
    5. ')(' → logprob: -9.876755714416504
    6. ')' → logprob: -11.251755714416504
    7. ',' → logprob: -11.876755714416504
    8. '(
' → logprob: -12.876755714416504
    9. '<|end|>' → logprob: -14.126755714416504
    10. '<|end|>' → logprob: -14.251755714416504

Token 483: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.06689421087503433
    2. 'self' → logprob: -3.316894292831421
    3. ' other' → logprob: -3.566894292831421
    4. ' self' → logprob: -8.56689453125
    5. '(other' → logprob: -13.31689453125
    6. '   ' → logprob: -13.81689453125
    7. ' ' → logprob: -13.94189453125
    8. ')' → logprob: -14.06689453125
    9. '_other' → logprob: -14.19189453125
    10. 'Other' → logprob: -14.31689453125

Token 484: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.37430134415626526
    2. ')' → logprob: -1.2493013143539429
    3. 'self' → logprob: -4.749301433563232
    4. ',' → logprob: -4.874301433563232
    5. '(' → logprob: -5.499301433563232
    6. '):' → logprob: -6.249301433563232
    7. ':' → logprob: -6.374301433563232
    8. '<|end|>' → logprob: -8.249300956726074
    9. '<|end|>' → logprob: -8.374300956726074
    10. ')(' → logprob: -8.499300956726074

Token 485: ' '' (ID: 461)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.30815786123275757
    2. ')' → logprob: -2.5581579208374023
    3. 'other' → logprob: -2.8081579208374023
    4. ''' → logprob: -3.3081579208374023
    5. ' other' → logprob: -3.3081579208374023
    6. ' Point' → logprob: -3.8081579208374023
    7. 'self' → logprob: -4.058157920837402
    8. ' '' → logprob: -5.933157920837402
    9. 'Other' → logprob: -6.183157920837402
    10. '')' → logprob: -6.308157920837402

Token 486: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -8.061054359131958e-06
    2. ' Point' → logprob: -11.750007629394531
    3. '	Point' → logprob: -16.12500762939453
    4. '<Point' → logprob: -17.50000762939453
    5. '_point' → logprob: -17.87500762939453
    6. '_Point' → logprob: -18.50000762939453
    7. '.Point' → logprob: -18.50000762939453
    8. ''' → logprob: -18.75000762939453
    9. '(Point' → logprob: -19.25000762939453
    10. 'point' → logprob: -19.75000762939453

Token 487: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.004081247374415398
    2. ')' → logprob: -5.5040812492370605
    3. '")' → logprob: -13.629080772399902
    4. ''):
' → logprob: -13.879080772399902
    5. ''):' → logprob: -15.504080772399902
    6. ''' → logprob: -15.504080772399902
    7. ' ')' → logprob: -16.25408172607422
    8. '   ' → logprob: -17.12908172607422
    9. '`)' → logprob: -17.12908172607422
    10. '')->' → logprob: -17.37908172607422

Token 488: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6800116896629333
    2. '->' → logprob: -1.1800117492675781
    3. ' ->' → logprob: -1.8050117492675781
    4. ':' → logprob: -4.305011749267578
    5. ')->' → logprob: -5.430011749267578
    6. '   ' → logprob: -6.180011749267578
    7. '       ' → logprob: -6.805011749267578
    8. '(self' → logprob: -8.305011749267578
    9. ',' → logprob: -8.805011749267578
    10. '=' → logprob: -9.805011749267578

Token 489: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.023246407508850098
    2. ' float' → logprob: -3.7732462882995605
    3. '(float' → logprob: -14.898246765136719
    4. ''' → logprob: -15.398246765136719
    5. 'int' → logprob: -16.14824676513672
    6. '	float' → logprob: -16.77324676513672
    7. '<float' → logprob: -16.89824676513672
    8. ' ' → logprob: -17.14824676513672
    9. 'flo' → logprob: -17.64824676513672
    10. 'Float' → logprob: -18.77324676513672

Token 490: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0057575455866754055
    2. ':
' → logprob: -5.8807573318481445
    3. '):' → logprob: -6.8807573318481445
    4. '       ' → logprob: -7.6307573318481445
    5. '(self' → logprob: -7.7557573318481445
    6. '():' → logprob: -8.005757331848145
    7. '   ' → logprob: -8.505757331848145
    8. '):
' → logprob: -8.505757331848145
    9. '():
' → logprob: -9.130757331848145
    10. ')' → logprob: -10.130757331848145

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019326817709952593
    2. 'return' → logprob: -6.251932621002197
    3. ' return' → logprob: -12.501933097839355
    4. '   ' → logprob: -16.00193214416504
    5. 'self' → logprob: -16.00193214416504
    6. '	' → logprob: -16.50193214416504
    7. '
' → logprob: -17.00193214416504
    8. '	return' → logprob: -17.87693214416504
    9. '      ' → logprob: -18.12693214416504
    10. '        
' → logprob: -18.12693214416504

Token 492: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.244413766078651e-05
    2. 'self' → logprob: -9.500082015991211
    3. '       ' → logprob: -12.500082015991211
    4. ' return' → logprob: -12.500082015991211
    5. '	return' → logprob: -17.37508201599121
    6. '   ' → logprob: -18.37508201599121
    7. '```' → logprob: -21.12508201599121
    8. ':return' → logprob: -21.50008201599121
    9. '
' → logprob: -22.12508201599121
    10. '(self' → logprob: -22.12508201599121

Token 493: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.620622712536715e-05
    2. ' self' → logprob: -10.000045776367188
    3. '
' → logprob: -15.000045776367188
    4. '(self' → logprob: -15.125045776367188
    5. '       ' → logprob: -18.000045776367188
    6. '   ' → logprob: -18.125045776367188
    7. '	self' → logprob: -19.500045776367188
    8. '[self' → logprob: -20.500045776367188
    9. 'Self' → logprob: -20.875045776367188
    10. '```' → logprob: -20.875045776367188

Token 494: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -6.0033853515051305e-05
    2. '.' → logprob: -9.750060081481934
    3. ' .' → logprob: -14.000060081481934
    4. 'x' → logprob: -14.000060081481934
    5. '.
' → logprob: -20.625059127807617
    6. ' x' → logprob: -21.625059127807617
    7. 'self' → logprob: -22.125059127807617
    8. ' ' → logprob: -22.375059127807617
    9. '.y' → logprob: -22.625059127807617
    10. '```' → logprob: -22.750059127807617

Token 495: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07889672368764877
    2. ' *' → logprob: -2.5788967609405518
    3. '*object' → logprob: -11.953896522521973
    4. '**' → logprob: -14.828896522521973
    5. '*out' → logprob: -16.57889747619629
    6. ' ' → logprob: -17.07889747619629
    7. '*self' → logprob: -18.57889747619629
    8. '＊' → logprob: -18.70389747619629
    9. 'other' → logprob: -18.95389747619629
    10. '   ' → logprob: -18.95389747619629

Token 496: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00033546582562848926
    2. ' other' → logprob: -8.000335693359375
    3. '(other' → logprob: -18.000335693359375
    4. 'Other' → logprob: -19.875335693359375
    5. '.other' → logprob: -20.625335693359375
    6. '_other' → logprob: -21.375335693359375
    7. 'OTHER' → logprob: -23.500335693359375
    8. ' ' → logprob: -23.625335693359375
    9. '
' → logprob: -24.875335693359375
    10. '-other' → logprob: -25.000335693359375

Token 497: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.05180762708187103
    2. '.' → logprob: -3.3018076419830322
    3. 'x' → logprob: -4.301807403564453
    4. '.other' → logprob: -9.301807403564453
    5. ' x' → logprob: -11.301807403564453
    6. 'other' → logprob: -11.676807403564453
    7. ' .' → logprob: -12.301807403564453
    8. '<|end|>' → logprob: -12.551807403564453
    9. ' ' → logprob: -13.301807403564453
    10. '.y' → logprob: -13.551807403564453

Token 498: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326788663864136
    2. ' +' → logprob: -1.3132679462432861
    3. '+self' → logprob: -12.188267707824707
    4. '+
' → logprob: -14.688267707824707
    5. '       ' → logprob: -14.938267707824707
    6. ' +
' → logprob: -16.438268661499023
    7. '   ' → logprob: -16.688268661499023
    8. '<|end|>' → logprob: -16.813268661499023
    9. '+y' → logprob: -17.063268661499023
    10. '        ' → logprob: -17.188268661499023

Token 499: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05786310136318207
    2. 'other' → logprob: -3.3078629970550537
    3. ' self' → logprob: -4.057863235473633
    4. ' other' → logprob: -6.057863235473633
    5. 'Other' → logprob: -14.932863235473633
    6. '	self' → logprob: -15.557863235473633
    7. '       ' → logprob: -15.807863235473633
    8. ' ' → logprob: -15.932863235473633
    9. '_other' → logprob: -16.057863235473633
    10. '(self' → logprob: -16.432863235473633

Token 500: '.y' (ID: 4486)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.052952367812395096
    2. ' other' → logprob: -3.302952289581299
    3. 'y' → logprob: -4.427952289581299
    4. ' y' → logprob: -6.802952289581299
    5. '.other' → logprob: -6.927952289581299
    6. '.y' → logprob: -7.177952289581299
    7. 'self' → logprob: -13.052952766418457
    8. '(other' → logprob: -13.552952766418457
    9. '_other' → logprob: -13.927952766418457
    10. '.' → logprob: -14.052952766418457

Token 501: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6330364346504211
    2. '*' → logprob: -0.7580364346504211
    3. '.' → logprob: -8.383036613464355
    4. ' ' → logprob: -9.258036613464355
    5. '   ' → logprob: -10.633036613464355
    6. '<|end|>' → logprob: -10.633036613464355
    7. '.y' → logprob: -10.883036613464355
    8. '.other' → logprob: -11.633036613464355
    9. '*y' → logprob: -11.758036613464355
    10. 'y' → logprob: -12.258036613464355

Token 502: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.002475777640938759
    2. ' other' → logprob: -6.002475738525391
    3. '(other' → logprob: -16.50247573852539
    4. 'y' → logprob: -17.25247573852539
    5. '.other' → logprob: -17.87747573852539
    6. 'Other' → logprob: -18.37747573852539
    7. '_other' → logprob: -18.50247573852539
    8. ' ' → logprob: -18.75247573852539
    9. ' y' → logprob: -19.00247573852539
    10. 'othe' → logprob: -20.00247573852539

Token 503: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.26233285665512085
    2. '.y' → logprob: -1.5123329162597656
    3. '<|end|>' → logprob: -4.637332916259766
    4. ' y' → logprob: -7.887332916259766
    5. '<|end|>' → logprob: -8.762332916259766
    6. '.' → logprob: -10.262332916259766
    7. '*y' → logprob: -10.262332916259766
    8. ')' → logprob: -11.512332916259766
    9. '	y' → logprob: -11.637332916259766
    10. ',y' → logprob: -11.762332916259766

Token 504: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22023820877075195
    2. '```' → logprob: -2.345238208770752
    3. 'def' → logprob: -2.470238208770752
    4. '
' → logprob: -4.720238208770752
    5. ' def' → logprob: -5.095238208770752
    6. '    
' → logprob: -6.345238208770752
    7. '``' → logprob: -8.595237731933594
    8. ' ' → logprob: -9.595237731933594
    9. '  
' → logprob: -9.845237731933594
    10. '	def' → logprob: -10.095237731933594

Token 506: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00010628487507347018
    2. '   ' → logprob: -9.250105857849121
    3. ' def' → logprob: -11.500105857849121
    4. '	def' → logprob: -17.250106811523438
    5. '    
' → logprob: -18.500106811523438
    6. '
' → logprob: -19.625106811523438
    7. '  ' → logprob: -19.625106811523438
    8. ' ' → logprob: -20.250106811523438
    9. '```' → logprob: -20.375106811523438
    10. '@' → logprob: -20.875106811523438

Token 507: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0037478215526789427
    2. 'det' → logprob: -5.628747940063477
    3. ' cross' → logprob: -8.878747940063477
    4. 'norm' → logprob: -13.128747940063477
    5. 'outer' → logprob: -13.878747940063477
    6. 'abs' → logprob: -14.003747940063477
    7. 'def' → logprob: -14.128747940063477
    8. ' det' → logprob: -14.128747940063477
    9. '_cross' → logprob: -14.253747940063477
    10. 'Cross' → logprob: -14.378747940063477

Token 508: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00044044392416253686
    2. '(' → logprob: -7.75044059753418
    3. ' (' → logprob: -12.50044059753418
    4. '(other' → logprob: -12.87544059753418
    5. '<|end|>' → logprob: -13.62544059753418
    6. '<|end|>' → logprob: -14.00044059753418
    7. 'self' → logprob: -14.25044059753418
    8. '(
' → logprob: -15.25044059753418
    9. ',' → logprob: -16.00044059753418
    10. ')' → logprob: -16.50044059753418

Token 509: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.027272529900074005
    2. '(other' → logprob: -3.6522724628448486
    3. ' (' → logprob: -7.777272701263428
    4. '(' → logprob: -8.02727222442627
    5. ',' → logprob: -9.52727222442627
    6. ')' → logprob: -10.15227222442627
    7. '<|end|>' → logprob: -10.40227222442627
    8. '<|end|>' → logprob: -10.77727222442627
    9. ':' → logprob: -11.27727222442627
    10. '(next' → logprob: -11.77727222442627

Token 510: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.03806042671203613
    2. ' other' → logprob: -3.288060426712036
    3. 'self' → logprob: -11.038060188293457
    4. 'Other' → logprob: -13.038060188293457
    5. '(other' → logprob: -14.538060188293457
    6. ' self' → logprob: -15.913060188293457
    7. '.other' → logprob: -16.163061141967773
    8. '_other' → logprob: -16.913061141967773
    9. 'OTHER' → logprob: -19.163061141967773
    10. ' ' → logprob: -19.538061141967773

Token 511: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013731836341321468
    2. ')' → logprob: -4.638731956481934
    3. '('' → logprob: -5.763731956481934
    4. '):' → logprob: -8.388731956481934
    5. ''' → logprob: -8.513731956481934
    6. '   ' → logprob: -9.763731956481934
    7. ')'' → logprob: -9.763731956481934
    8. ' :' → logprob: -10.013731956481934
    9. ' ('' → logprob: -10.013731956481934
    10. ' '' → logprob: -10.138731956481934

Token 512: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3870117664337158
    2. ' '' → logprob: -1.1370117664337158
    3. ' ' → logprob: -9.512011528015137
    4. 'Point' → logprob: -10.762011528015137
    5. ''s' → logprob: -10.762011528015137
    6. 'self' → logprob: -12.637011528015137
    7. '   ' → logprob: -12.637011528015137
    8. ')' → logprob: -12.637011528015137
    9. ' Point' → logprob: -12.637011528015137
    10. ' self' → logprob: -13.637011528015137

Token 513: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.652451464906335e-05
    2. ' Point' → logprob: -11.250016212463379
    3. ''' → logprob: -12.625016212463379
    4. '	Point' → logprob: -17.250017166137695
    5. '(Point' → logprob: -17.250017166137695
    6. '_point' → logprob: -18.125017166137695
    7. '.Point' → logprob: -18.125017166137695
    8. '<Point' → logprob: -18.500017166137695
    9. '_Point' → logprob: -19.875017166137695
    10. ' ' → logprob: -20.000017166137695

Token 514: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0485965758562088
    2. ')' → logprob: -3.0485966205596924
    3. ''):
' → logprob: -13.048596382141113
    4. '   ' → logprob: -13.048596382141113
    5. '")' → logprob: -13.298596382141113
    6. ''' → logprob: -14.173596382141113
    7. '()' → logprob: -14.423596382141113
    8. ' ')' → logprob: -14.423596382141113
    9. ''):' → logprob: -14.923596382141113
    10. '`)' → logprob: -15.298596382141113

Token 515: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001395592000335455
    2. '->' → logprob: -7.5013957023620605
    3. ')' → logprob: -7.6263957023620605
    4. '(' → logprob: -8.626395225524902
    5. ' ->' → logprob: -9.126395225524902
    6. ':' → logprob: -11.001395225524902
    7. 'self' → logprob: -11.251395225524902
    8. '   ' → logprob: -11.626395225524902
    9. 'def' → logprob: -12.126395225524902
    10. ',' → logprob: -12.126395225524902

Token 516: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.6090579628944397
    2. ' float' → logprob: -0.8590579628944397
    3. ' other' → logprob: -4.109057903289795
    4. 'other' → logprob: -4.234057903289795
    5. 'self' → logprob: -7.359057903289795
    6. ' self' → logprob: -7.859057903289795
    7. 'Point' → logprob: -7.859057903289795
    8. ' Point' → logprob: -9.359058380126953
    9. ' ' → logprob: -9.609058380126953
    10. 'Other' → logprob: -10.234058380126953

Token 517: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4603334963321686
    2. '(self' → logprob: -1.0853334665298462
    3. '   ' → logprob: -4.335333347320557
    4. ':' → logprob: -4.460333347320557
    5. 'self' → logprob: -5.960333347320557
    6. ' self' → logprob: -6.585333347320557
    7. '(' → logprob: -7.085333347320557
    8. ':
' → logprob: -7.210333347320557
    9. '):
' → logprob: -8.960333824157715
    10. ',' → logprob: -8.960333824157715

Token 518: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03825492411851883
    2. 'return' → logprob: -3.288254976272583
    3. ' return' → logprob: -8.663254737854004
    4. 'self' → logprob: -10.288254737854004
    5. '```' → logprob: -12.288254737854004
    6. '	return' → logprob: -13.913254737854004
    7. '{return' → logprob: -14.788254737854004
    8. '	' → logprob: -15.038254737854004
    9. '   ' → logprob: -15.788254737854004
    10. ' self' → logprob: -16.78825569152832

Token 519: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005295784678310156
    2. 'return' (adapté à ' return') → logprob: -5.255295753479004
    3. ' self' → logprob: -9.755295753479004
    4. ' return' → logprob: -13.005295753479004
    5. '   ' → logprob: -13.505295753479004
    6. '(self' → logprob: -14.755295753479004
    7. '       ' → logprob: -17.25529670715332
    8. '```' → logprob: -18.25529670715332
    9. '
' → logprob: -18.63029670715332
    10. '	self' → logprob: -19.00529670715332

Token 520: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001706247916445136
    2. ' self' → logprob: -6.376706123352051
    3. '(self' → logprob: -12.87670612335205
    4. '
' → logprob: -14.25170612335205
    5. '   ' → logprob: -14.50170612335205
    6. ' ' → logprob: -15.62670612335205
    7. '```' → logprob: -17.001707077026367
    8. '	self' → logprob: -17.376707077026367
    9. '       ' → logprob: -17.376707077026367
    10. '  ' → logprob: -18.626707077026367

Token 521: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.856408536899835e-05
    2. 'x' → logprob: -10.500028610229492
    3. '.' → logprob: -13.875028610229492
    4. ' .' → logprob: -19.000028610229492
    5. ' x' → logprob: -20.375028610229492
    6. '0' → logprob: -20.625028610229492
    7. '.y' → logprob: -20.750028610229492
    8. 'self' → logprob: -20.875028610229492
    9. 'import' → logprob: -21.000028610229492
    10. '_x' → logprob: -21.125028610229492

Token 522: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.01416398212313652
    2. '*' → logprob: -4.264163970947266
    3. '*object' → logprob: -14.764163970947266
    4. '*out' → logprob: -16.514163970947266
    5. ' ' → logprob: -17.764163970947266
    6. '*self' → logprob: -18.014163970947266
    7. '**' → logprob: -18.764163970947266
    8. 'other' → logprob: -19.889163970947266
    9. '*y' → logprob: -20.139163970947266
    10. '
' → logprob: -21.764163970947266

Token 523: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -2.15310683415737e-05
    2. ' other' → logprob: -10.750021934509277
    3. '(other' → logprob: -18.37502098083496
    4. '.other' → logprob: -21.37502098083496
    5. 'Other' → logprob: -21.50002098083496
    6. '_other' → logprob: -22.75002098083496
    7. 'oth' → logprob: -24.00002098083496
    8. '-other' → logprob: -24.12502098083496
    9. 'OTHER' → logprob: -24.87502098083496
    10. ' ' → logprob: -25.00002098083496

Token 524: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.387274831533432
    2. 'y' → logprob: -1.1372748613357544
    3. '.' → logprob: -7.887274742126465
    4. ' y' → logprob: -11.012274742126465
    5. '*y' → logprob: -12.137274742126465
    6. '```' → logprob: -13.512274742126465
    7. '	y' → logprob: -14.137274742126465
    8. '   ' → logprob: -14.387274742126465
    9. '*' → logprob: -14.387274742126465
    10. '.py' → logprob: -14.762274742126465

Token 525: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029750952497124672
    2. '-' → logprob: -3.5297510623931885
    3. '<|end|>' → logprob: -15.90475082397461
    4. ' ' → logprob: -16.15475082397461
    5. ',' → logprob: -16.65475082397461
    6. ' –' → logprob: -16.90475082397461
    7. ' ' → logprob: -17.02975082397461
    8. '—' → logprob: -17.02975082397461
    9. '−' → logprob: -18.02975082397461
    10. ' -
' → logprob: -18.15475082397461

Token 526: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006757290568202734
    2. 'other' → logprob: -5.2567572593688965
    3. ' self' → logprob: -6.5067572593688965
    4. ' other' → logprob: -10.506757736206055
    5. '       ' → logprob: -14.381757736206055
    6. '	self' → logprob: -15.006757736206055
    7. '(self' → logprob: -15.256757736206055
    8. '   ' → logprob: -15.881757736206055
    9. ' ' → logprob: -16.131757736206055
    10. '<|end|>' → logprob: -16.131757736206055

Token 527: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6581133604049683
    2. '.y' → logprob: -0.9081133604049683
    3. 'x' → logprob: -2.658113479614258
    4. '.x' → logprob: -4.908113479614258
    5. '.' → logprob: -6.658113479614258
    6. 'self' → logprob: -9.533113479614258
    7. 'other' → logprob: -11.533113479614258
    8. '[' → logprob: -11.533113479614258
    9. 's' → logprob: -11.783113479614258
    10. ' y' → logprob: -11.783113479614258

Token 528: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1602877974510193
    2. '*' → logprob: -1.910287857055664
    3. '<|end|>' → logprob: -10.285287857055664
    4. '*object' → logprob: -10.660287857055664
    5. '*out' → logprob: -13.035287857055664
    6. ' ' → logprob: -13.535287857055664
    7. 'other' → logprob: -14.535287857055664
    8. '[' → logprob: -14.785287857055664
    9. '*self' → logprob: -14.910287857055664
    10. '<|end|>' → logprob: -15.285287857055664

Token 529: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00012356207298580557
    2. ' other' → logprob: -9.000123977661133
    3. '(other' → logprob: -16.625123977661133
    4. '.other' → logprob: -17.750123977661133
    5. '_other' → logprob: -18.625123977661133
    6. 'Other' → logprob: -19.375123977661133
    7. '<|end|>' → logprob: -20.875123977661133
    8. 'OTHER' → logprob: -21.750123977661133
    9. '-other' → logprob: -22.000123977661133
    10. 'othe' → logprob: -23.000123977661133

Token 530: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.004623441956937313
    2. 'x' → logprob: -5.3796234130859375
    3. '.' → logprob: -13.129623413085938
    4. 'cross' → logprob: -14.379623413085938
    5. '{x' → logprob: -15.504623413085938
    6. 'point' → logprob: -16.004623413085938
    7. '	x' → logprob: -16.379623413085938
    8. '.cross' → logprob: -17.129623413085938
    9. '<x' → logprob: -17.504623413085938
    10. ' x' → logprob: -17.504623413085938

Token 531: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 532: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16373538970947266
    2. '   ' → logprob: -1.9137353897094727
    3. '```' → logprob: -6.788735389709473
    4. ' def' → logprob: -7.163735389709473
    5. '<|end|>' → logprob: -7.663735389709473
    6. '
' → logprob: -7.788735389709473
    7. '    
' → logprob: -8.663735389709473
    8. ')' → logprob: -8.788735389709473
    9. '<|end|>' → logprob: -9.163735389709473
    10. '	def' → logprob: -9.538735389709473

Token 533: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00047094907495193183
    2. '   ' → logprob: -7.750471115112305
    3. ' def' → logprob: -10.375471115112305
    4. '@' → logprob: -12.000471115112305
    5. '
' → logprob: -14.000471115112305
    6. '	def' → logprob: -14.500471115112305
    7. '```' → logprob: -14.750471115112305
    8. '#' → logprob: -15.250471115112305
    9. '    
' → logprob: -15.375471115112305
    10. 'from' → logprob: -15.875471115112305

Token 534: ' is' (ID: 382)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.1668843030929565
    2. 'rotate' → logprob: -1.2918843030929565
    3. 'rot' → logprob: -2.041884422302246
    4. 'norm' → logprob: -2.416884422302246
    5. 'angle' → logprob: -2.541884422302246
    6. 'abs' → logprob: -3.791884422302246
    7. 'det' → logprob: -3.916884422302246
    8. 'dist' → logprob: -3.916884422302246
    9. 'polar' → logprob: -3.916884422302246
    10. 'normalize' → logprob: -4.541884422302246

Token 535: '_' (ID: 62)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.3335340023040771
    2. '_zero' → logprob: -1.3335340023040771
    3. '_' → logprob: -1.5835340023040771
    4. '_parallel' → logprob: -1.5835340023040771
    5. '_counter' → logprob: -3.583534002304077
    6. '0' → logprob: -5.208534240722656
    7. '_vertical' → logprob: -5.458534240722656
    8. '_horizontal' → logprob: -5.583534240722656
    9. '_online' → logprob: -5.708534240722656
    10. '_point' → logprob: -5.958534240722656

Token 536: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -0.41727203130722046
    2. 'zero' → logprob: -2.0422720909118652
    3. 'parallel' → logprob: -2.4172720909118652
    4. 'on' → logprob: -2.9172720909118652
    5. 'origin' → logprob: -3.6672720909118652
    6. 'counter' → logprob: -4.542272090911865
    7. 'online' → logprob: -4.542272090911865
    8. '0' → logprob: -5.042272090911865
    9. 'norm' → logprob: -5.667272090911865
    10. 'unit' → logprob: -5.667272090911865

Token 537: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -0.0038853425066918135
    2. '(Point' → logprob: -5.628885269165039
    3. '(self' → logprob: -8.878885269165039
    4. 'og' → logprob: -9.503885269165039
    5. '_point' → logprob: -10.878885269165039
    6. 'Point' → logprob: -11.128885269165039
    7. 'o' → logprob: -11.253885269165039
    8. '   ' → logprob: -11.878885269165039
    9. 'agonal' → logprob: -12.378885269165039
    10. 'ogan' → logprob: -13.128885269165039

Token 538: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001955537445610389
    2. '(' → logprob: -9.125195503234863
    3. ' (' → logprob: -9.375195503234863
    4. '   ' → logprob: -14.375195503234863
    5. ' ' → logprob: -15.375195503234863
    6. '(
' → logprob: -15.500195503234863
    7. '(s' → logprob: -15.625195503234863
    8. 'self' → logprob: -16.12519645690918
    9. '('' → logprob: -16.25019645690918
    10. '(other' → logprob: -16.75019645690918

Token 539: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04280002415180206
    2. '(' → logprob: -3.917799949645996
    3. '(other' → logprob: -4.542799949645996
    4. ',' → logprob: -5.167799949645996
    5. ' (' → logprob: -5.917799949645996
    6. ')(' → logprob: -6.417799949645996
    7. ')' → logprob: -7.292799949645996
    8. '('' → logprob: -8.167799949645996
    9. '   ' → logprob: -9.167799949645996
    10. '(
' → logprob: -10.167799949645996

Token 540: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.07267289608716965
    2. ' other' → logprob: -2.8226728439331055
    3. 'self' → logprob: -4.5726728439331055
    4. ' self' → logprob: -8.072672843933105
    5. ' ' → logprob: -12.947672843933105
    6. 'Other' → logprob: -13.572672843933105
    7. '(other' → logprob: -13.947672843933105
    8. '   ' → logprob: -14.447672843933105
    9. '(self' → logprob: -15.447672843933105
    10. '_other' → logprob: -15.572672843933105

Token 541: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009249635972082615
    2. ')' → logprob: -4.759249687194824
    3. ',' → logprob: -8.634249687194824
    4. '):' → logprob: -8.884249687194824
    5. 'self' → logprob: -9.134249687194824
    6. '       ' → logprob: -10.009249687194824
    7. '(self' → logprob: -10.009249687194824
    8. '   ' → logprob: -10.384249687194824
    9. '):
' → logprob: -10.509249687194824
    10. ''' → logprob: -10.884249687194824

Token 542: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0019627707079052925
    2. ' '' → logprob: -6.251962661743164
    3. ')' → logprob: -10.626962661743164
    4. '   ' → logprob: -12.751962661743164
    5. 'Point' → logprob: -13.626962661743164
    6. '       ' → logprob: -13.876962661743164
    7. ' ' → logprob: -14.001962661743164
    8. 'self' → logprob: -14.251962661743164
    9. '')' → logprob: -14.501962661743164
    10. '"' → logprob: -14.501962661743164

Token 543: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.001962297596037388
    2. ''' → logprob: -6.251962184906006
    3. ' Point' → logprob: -10.376962661743164
    4. '	Point' → logprob: -14.501962661743164
    5. '(Point' → logprob: -14.876962661743164
    6. '.Point' → logprob: -14.876962661743164
    7. '<Point' → logprob: -15.126962661743164
    8. ')' → logprob: -15.251962661743164
    9. ''s' → logprob: -15.376962661743164
    10. '')' → logprob: -15.501962661743164

Token 544: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10022197663784027
    2. '')' → logprob: -2.350221872329712
    3. '):
' → logprob: -12.850221633911133
    4. '   ' → logprob: -12.850221633911133
    5. ''' → logprob: -12.975221633911133
    6. '`)' → logprob: -13.100221633911133
    7. ''):
' → logprob: -13.350221633911133
    8. '")' → logprob: -13.850221633911133
    9. '       ' → logprob: -14.350221633911133
    10. ' ')' → logprob: -14.475221633911133

Token 545: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.2221403867006302
    2. ')' → logprob: -1.9721404314041138
    3. ' ->' → logprob: -2.847140312194824
    4. ':' → logprob: -6.972140312194824
    5. '   ' → logprob: -7.722140312194824
    6. '       ' → logprob: -7.847140312194824
    7. ')->' → logprob: -8.597140312194824
    8. '(self' → logprob: -10.597140312194824
    9. 'self' → logprob: -11.222140312194824
    10. '()' → logprob: -11.722140312194824

Token 546: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -4.3822154111694545e-05
    2. ' bool' → logprob: -10.125043869018555
    3. 'float' → logprob: -12.750043869018555
    4. '   ' → logprob: -15.000043869018555
    5. '<bool' → logprob: -15.250043869018555
    6. ' ' → logprob: -16.500043869018555
    7. ''' → logprob: -16.625043869018555
    8. '	bool' → logprob: -17.250043869018555
    9. '```' → logprob: -17.250043869018555
    10. '
' → logprob: -18.250043869018555

Token 547: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11653310060501099
    2. ':
' → logprob: -2.741533041000366
    3. '       ' → logprob: -3.241533041000366
    4. '():
' → logprob: -6.241533279418945
    5. '):
' → logprob: -6.491533279418945
    6. '(self' → logprob: -7.116533279418945
    7. '):' → logprob: -7.741533279418945
    8. ')' → logprob: -7.991533279418945
    9. '   ' → logprob: -8.116533279418945
    10. '<|end|>' → logprob: -8.116533279418945

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0643092691898346
    2. '   ' → logprob: -2.8143093585968018
    3. 'return' → logprob: -6.064309120178223
    4. ' return' → logprob: -11.314309120178223
    5. '	return' → logprob: -13.564309120178223
    6. '	' → logprob: -14.189309120178223
    7. '    ' → logprob: -16.43931007385254
    8. ' ' → logprob: -16.81431007385254
    9. '	   ' → logprob: -17.06431007385254
    10. '           ' → logprob: -17.43931007385254

Token 549: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006217439658939838
    2. '   ' → logprob: -5.2562174797058105
    3. '       ' → logprob: -7.0062174797058105
    4. ' return' → logprob: -9.506217002868652
    5. '	return' → logprob: -13.381217002868652
    6. 'abs' → logprob: -14.256217002868652
    7. ' ' → logprob: -15.881217002868652
    8. '  ' → logprob: -16.63121795654297
    9. 'float' → logprob: -17.00621795654297
    10. 'def' → logprob: -17.25621795654297

Token 550: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.01149456761777401
    2. 'abs' → logprob: -4.7614946365356445
    3. ' float' → logprob: -5.8864946365356445
    4. ' abs' → logprob: -9.761494636535645
    5. '   ' → logprob: -10.636494636535645
    6. ' ' → logprob: -12.136494636535645
    7. 'self' → logprob: -12.386494636535645
    8. '  ' → logprob: -13.011494636535645
    9. 'fabs' → logprob: -13.136494636535645
    10. 'flo' → logprob: -13.761494636535645

Token 551: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -1.0445127372804563e-05
    2. 'equal' → logprob: -11.75001049041748
    3. 'abs' → logprob: -13.50001049041748
    4. '_abs' → logprob: -13.87501049041748
    5. '(abs' → logprob: -15.87501049041748
    6. '_absolute' → logprob: -16.375009536743164
    7. '_exact' → logprob: -17.375009536743164
    8. 'Equal' → logprob: -17.750009536743164
    9. '_EQUAL' → logprob: -19.000009536743164
    10. '(equal' → logprob: -19.125009536743164

Token 552: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.750001907348633
    3. 'self' → logprob: -14.750001907348633
    4. '(
' → logprob: -18.375001907348633
    5. ' (' → logprob: -18.500001907348633
    6. '(this' → logprob: -19.000001907348633
    7. '((' → logprob: -19.250001907348633
    8. '(abs' → logprob: -20.125001907348633
    9. '0' → logprob: -20.250001907348633
    10. '   ' → logprob: -21.375001907348633

Token 553: '.dot' (ID: 52692)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0042601581662893295
    2. 'self' → logprob: -5.629260063171387
    3. '(' → logprob: -7.504260063171387
    4. '(
' → logprob: -9.879260063171387
    5. '.dot' → logprob: -11.629260063171387
    6. 'dot' → logprob: -12.004260063171387
    7. ' (' → logprob: -12.129260063171387
    8. ' self' → logprob: -12.129260063171387
    9. '   ' → logprob: -12.254260063171387
    10. '0' → logprob: -12.254260063171387

Token 554: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.50001335144043
    3. 'other' → logprob: -12.75001335144043
    4. '(self' → logprob: -15.37501335144043
    5. '(
' → logprob: -18.12501335144043
    6. ' other' → logprob: -18.37501335144043
    7. ' (' → logprob: -18.37501335144043
    8. '0' → logprob: -19.25001335144043
    9. '   ' → logprob: -19.37501335144043
    10. '(o' → logprob: -20.50001335144043

Token 555: '),' (ID: 936)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7998150587081909
    2. '(),' → logprob: -1.299815058708191
    3. ',' → logprob: -1.549815058708191
    4. '(other' → logprob: -3.0498151779174805
    5. '),' → logprob: -4.9248151779174805
    6. '()),' → logprob: -5.4248151779174805
    7. ' (' → logprob: -5.6748151779174805
    8. '()' → logprob: -7.4248151779174805
    9. '(self' → logprob: -7.7998151779174805
    10. ' ,' → logprob: -7.9248151779174805

Token 556: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -19.8750057220459
    4. '  ' → logprob: -22.6250057220459
    5. '۰' → logprob: -23.0000057220459
    6. ')' → logprob: -23.7500057220459
    7. '00' → logprob: -23.8750057220459
    8. '０' → logprob: -24.1250057220459
    9. '    ' → logprob: -24.7500057220459
    10. '```' → logprob: -24.8750057220459

Token 557: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.750001907348633
    4. '  ' → logprob: -21.500001907348633
    5. '۰' → logprob: -21.750001907348633
    6. ')' → logprob: -22.250001907348633
    7. '０' → logprob: -22.625001907348633
    8. '00' → logprob: -22.625001907348633
    9. '    ' → logprob: -23.125001907348633
    10. 'zero' → logprob: -23.375001907348633

Token 558: '.' (ID: 13)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031988697592169046
    2. '.' → logprob: -5.753199100494385
    3. ' )' → logprob: -11.628198623657227
    4. '0' → logprob: -12.128198623657227
    5. ')
' → logprob: -12.753198623657227
    6. '   ' → logprob: -14.253198623657227
    7. '())' → logprob: -14.378198623657227
    8. '.)' → logprob: -14.378198623657227
    9. ' ' → logprob: -15.003198623657227
    10. '))' → logprob: -15.253198623657227

Token 559: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -13.625000953674316
    3. ' ' → logprob: -18.500001907348633
    4. '```' → logprob: -19.250001907348633
    5. '   ' → logprob: -20.125001907348633
    6. '00' → logprob: -21.375001907348633
    7. '０' → logprob: -21.625001907348633
    8. '.' → logprob: -21.875001907348633
    9. ')
' → logprob: -22.000001907348633
    10. '))' → logprob: -22.125001907348633

Token 560: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.895480277715251e-06
    2. ')
' → logprob: -12.125008583068848
    3. ' )' → logprob: -13.125008583068848
    4. '       ' → logprob: -14.375008583068848
    5. '<|end|>' → logprob: -14.750008583068848
    6. '   ' → logprob: -15.125008583068848
    7. ')return' → logprob: -16.875009536743164
    8. ')

' → logprob: -17.000009536743164
    9. '())' → logprob: -17.000009536743164
    10. '),' → logprob: -17.500009536743164

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006209384882822633
    2. 'def' → logprob: -7.5006208419799805
    3. '```' → logprob: -9.75062084197998
    4. ' def' → logprob: -11.62562084197998
    5. '       ' → logprob: -14.37562084197998
    6. '	def' → logprob: -16.375621795654297
    7. '  ' → logprob: -16.875621795654297
    8. ' ' → logprob: -17.500621795654297
    9. '    ' → logprob: -17.625621795654297
    10. '    
' → logprob: -17.750621795654297

Token 562: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015547400107607245
    2. '   ' → logprob: -6.7515549659729
    3. ' def' → logprob: -7.8765549659729
    4. '	def' → logprob: -13.501554489135742
    5. '    
' → logprob: -13.626554489135742
    6. 'return' → logprob: -14.376554489135742
    7. '
' → logprob: -14.751554489135742
    8. ' ' → logprob: -15.376554489135742
    9. '```' → logprob: -15.376554489135742
    10. '  ' → logprob: -15.626554489135742

Token 563: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -9.317247167928144e-05
    2. ' is' → logprob: -10.250093460083008
    3. 'abs' → logprob: -11.250093460083008
    4. 'cc' → logprob: -11.375093460083008
    5. 'project' → logprob: -12.000093460083008
    6. 'proj' → logprob: -12.250093460083008
    7. 'projection' → logprob: -12.375093460083008
    8. 'cross' → logprob: -12.875093460083008
    9. 'unit' → logprob: -13.125093460083008
    10. 'normalize' → logprob: -13.375093460083008

Token 564: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.0017758574103936553
    2. '_' → logprob: -6.501775741577148
    3. '_op' → logprob: -9.251775741577148
    4. '_zero' → logprob: -9.626775741577148
    5. '_par' → logprob: -10.001775741577148
    6. '_per' → logprob: -10.626775741577148
    7. '_col' → logprob: -11.251775741577148
    8. '_equal' → logprob: -11.751775741577148
    9. 'parallel' → logprob: -12.126775741577148
    10. '_point' → logprob: -12.751775741577148

Token 565: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -10.750027656555176
    3. ' (' → logprob: -12.000027656555176
    4. '   ' → logprob: -15.875027656555176
    5. '(
' → logprob: -16.125028610229492
    6. '(s' → logprob: -16.625028610229492
    7. 'self' → logprob: -17.000028610229492
    8. '       ' → logprob: -17.125028610229492
    9. ' ' → logprob: -17.875028610229492
    10. '(this' → logprob: -18.000028610229492

Token 566: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008833077736198902
    2. ',' → logprob: -5.133832931518555
    3. ')' → logprob: -6.008832931518555
    4. ')(' → logprob: -8.508832931518555
    5. '(' → logprob: -8.883832931518555
    6. ' (' → logprob: -10.258832931518555
    7. '(other' → logprob: -10.508832931518555
    8. '),' → logprob: -11.633832931518555
    9. 'self' → logprob: -11.633832931518555
    10. '):
' → logprob: -12.258832931518555

Token 567: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.05045079439878464
    2. ' other' → logprob: -3.0504508018493652
    3. 'self' → logprob: -6.300450801849365
    4. ' self' → logprob: -10.675450325012207
    5. '(other' → logprob: -13.300450325012207
    6. 'Other' → logprob: -13.800450325012207
    7. '.other' → logprob: -15.550450325012207
    8. '   ' → logprob: -17.300451278686523
    9. '_other' → logprob: -17.300451278686523
    10. '       ' → logprob: -17.300451278686523

Token 568: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0394747368991375
    2. ')' → logprob: -3.7894747257232666
    3. '('' → logprob: -4.289474964141846
    4. ''' → logprob: -6.664474964141846
    5. '   ' → logprob: -7.164474964141846
    6. '):' → logprob: -9.664474487304688
    7. '):
' → logprob: -10.039474487304688
    8. '(self' → logprob: -10.289474487304688
    9. ',' → logprob: -10.664474487304688
    10. ' ' → logprob: -10.789474487304688

Token 569: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005008886568248272
    2. 'Point' → logprob: -5.880008697509766
    3. ' '' → logprob: -6.130008697509766
    4. '(Point' → logprob: -11.880008697509766
    5. ' Point' → logprob: -12.130008697509766
    6. '<Point' → logprob: -12.880008697509766
    7. ')' → logprob: -13.005008697509766
    8. ' ' → logprob: -13.380008697509766
    9. '   ' → logprob: -13.505008697509766
    10. '.Point' → logprob: -13.505008697509766

Token 570: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.531315314830863e-06
    2. ''' → logprob: -13.125003814697266
    3. ' Point' → logprob: -13.500003814697266
    4. '	Point' → logprob: -18.125003814697266
    5. '<Point' → logprob: -18.625003814697266
    6. '_point' → logprob: -18.875003814697266
    7. '(Point' → logprob: -19.250003814697266
    8. '.Point' → logprob: -19.375003814697266
    9. '-point' → logprob: -19.750003814697266
    10. '_Point' → logprob: -20.000003814697266

Token 571: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023119196703191847
    2. '')' → logprob: -8.37523078918457
    3. 'self' → logprob: -14.75023078918457
    4. '(self' → logprob: -16.50023078918457
    5. '   ' → logprob: -16.75023078918457
    6. ')'' → logprob: -17.00023078918457
    7. '):
' → logprob: -17.25023078918457
    8. '")' → logprob: -17.50023078918457
    9. '`)' → logprob: -17.50023078918457
    10. ''' → logprob: -17.75023078918457

Token 572: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6946387887001038
    2. ' ->' → logprob: -0.9446387887001038
    3. ')' → logprob: -2.194638729095459
    4. '(self' → logprob: -7.694638729095459
    5. ')->' → logprob: -10.569639205932617
    6. '   ' → logprob: -11.444639205932617
    7. ':' → logprob: -11.444639205932617
    8. '>' → logprob: -11.569639205932617
    9. '       ' → logprob: -11.944639205932617
    10. '(' → logprob: -13.444639205932617

Token 573: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.3425219549390022e-05
    2. ' bool' → logprob: -11.25001335144043
    3. '<bool' → logprob: -15.87501335144043
    4. 'float' → logprob: -16.75001335144043
    5. '	bool' → logprob: -16.75001335144043
    6. '```' → logprob: -17.50001335144043
    7. '(bool' → logprob: -17.62501335144043
    8. 'True' → logprob: -17.62501335144043
    9. 'return' → logprob: -18.37501335144043
    10. ' ' → logprob: -18.62501335144043

Token 574: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7054600715637207
    2. '       ' → logprob: -1.2054600715637207
    3. ':' → logprob: -1.7054600715637207
    4. '(' → logprob: -4.705460071563721
    5. ')' → logprob: -5.205460071563721
    6. ':
' → logprob: -5.705460071563721
    7. '->' → logprob: -5.830460071563721
    8. 'self' → logprob: -6.330460071563721
    9. '   ' → logprob: -6.830460071563721
    10. ' ->' → logprob: -7.955460071563721

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014410654548555613
    2. 'return' → logprob: -6.75144100189209
    3. '   ' → logprob: -8.37644100189209
    4. ' return' → logprob: -10.12644100189209
    5. '	return' → logprob: -14.87644100189209
    6. '	' → logprob: -16.876441955566406
    7. '```' → logprob: -16.876441955566406
    8. '{return' → logprob: -17.876441955566406
    9. ':return' → logprob: -18.251441955566406
    10. '	   ' → logprob: -18.501441955566406

Token 576: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00043949027894996107
    2. '       ' → logprob: -8.000439643859863
    3. ' return' → logprob: -9.750439643859863
    4. '   ' → logprob: -10.000439643859863
    5. '	return' → logprob: -15.875439643859863
    6. ' ' → logprob: -16.375438690185547
    7. '           ' → logprob: -16.750438690185547
    8. '  ' → logprob: -18.500438690185547
    9. '     ' → logprob: -19.250438690185547
    10. '    ' → logprob: -19.375438690185547

Token 577: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -9.372294698550832e-06
    2. 'abs' → logprob: -12.375009536743164
    3. ' float' → logprob: -12.625009536743164
    4. 'self' → logprob: -13.625009536743164
    5. '   ' → logprob: -15.375009536743164
    6. 'flo' → logprob: -15.875009536743164
    7. '
' → logprob: -16.500009536743164
    8. 'fabs' → logprob: -17.000009536743164
    9. '(float' → logprob: -17.625009536743164
    10. '	float' → logprob: -17.750009536743164

Token 578: '_equal' (ID: 27882)
  Prédit: '_equal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_equal' → logprob: -0.0002622894535306841
    2. 'equal' → logprob: -8.250262260437012
    3. 'abs' → logprob: -14.375262260437012
    4. 'Equal' → logprob: -15.250262260437012
    5. '_EQUAL' → logprob: -16.625263214111328
    6. ' equal' → logprob: -17.375263214111328
    7. '_abs' → logprob: -17.875263214111328
    8. '.equal' → logprob: -19.000263214111328
    9. 'self' → logprob: -19.375263214111328
    10. 'float' → logprob: -19.500263214111328

Token 579: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07953184843063354
    2. '(abs' → logprob: -2.5795319080352783
    3. 'abs' → logprob: -7.579531669616699
    4. 'self' → logprob: -8.9545316696167
    5. '(' → logprob: -13.8295316696167
    6. ' abs' → logprob: -15.0795316696167
    7. '(
' → logprob: -15.7045316696167
    8. '
' → logprob: -16.704532623291016
    9. '   ' → logprob: -16.704532623291016
    10. '((' → logprob: -16.829532623291016

Token 580: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -2.696889623621246e-06
    2. 'cross' → logprob: -13.25000286102295
    3. '.abs' → logprob: -14.62500286102295
    4. '.' → logprob: -14.87500286102295
    5. '.dot' → logprob: -16.625001907348633
    6. '.Cross' → logprob: -16.875001907348633
    7. ' .' → logprob: -17.125001907348633
    8. ' cross' → logprob: -18.375001907348633
    9. '.c' → logprob: -18.625001907348633
    10. '   ' → logprob: -19.125001907348633

Token 581: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.318681188422488e-05
    2. 'other' → logprob: -11.25001335144043
    3. '(' → logprob: -17.25001335144043
    4. ' other' → logprob: -18.12501335144043
    5. '(
' → logprob: -20.12501335144043
    6. 'Other' → logprob: -20.25001335144043
    7. 'OTHER' → logprob: -21.50001335144043
    8. ')' → logprob: -21.62501335144043
    9. '.other' → logprob: -21.75001335144043
    10. '(object' → logprob: -22.12501335144043

Token 582: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01320682093501091
    2. '),' → logprob: -4.388206958770752
    3. '(),' → logprob: -7.638206958770752
    4. '(other' → logprob: -8.638206481933594
    5. ' ,' → logprob: -10.763206481933594
    6. '   ' → logprob: -12.013206481933594
    7. 'other' → logprob: -12.263206481933594
    8. ' other' → logprob: -13.638206481933594
    9. '(' → logprob: -13.763206481933594
    10. ')' → logprob: -14.138206481933594

Token 583: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000204851632588543
    2. ' ' → logprob: -8.500205039978027
    3. '   ' → logprob: -13.625205039978027
    4. '  ' → logprob: -17.00020408630371
    5. '       ' → logprob: -18.50020408630371
    6. '```' → logprob: -19.37520408630371
    7. '    ' → logprob: -19.62520408630371
    8. '     ' → logprob: -20.18770408630371
    9. '	' → logprob: -20.50020408630371
    10. '۰' → logprob: -20.56270408630371

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.750085830688477
    4. '  ' → logprob: -16.625085830688477
    5. '```' → logprob: -19.062585830688477
    6. '۰' → logprob: -19.625085830688477
    7. '    ' → logprob: -19.687585830688477
    8. '       ' → logprob: -20.500085830688477
    9. '     ' → logprob: -20.625085830688477
    10. ')' → logprob: -20.625085830688477

Token 585: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00027218335890211165
    2. ')' → logprob: -8.375271797180176
    3. '0' → logprob: -10.125271797180176
    4. '.)' → logprob: -14.125271797180176
    5. '   ' → logprob: -15.500271797180176
    6. ' ' → logprob: -15.500271797180176
    7. '```' → logprob: -16.000272750854492
    8. ').' → logprob: -16.250272750854492
    9. ')
' → logprob: -16.500272750854492
    10. 'e' → logprob: -17.875272750854492

Token 586: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '       ' → logprob: -19.5
    4. '   ' → logprob: -19.75
    5. '```' → logprob: -20.0
    6. ')' → logprob: -20.875
    7. '000' → logprob: -21.125
    8. '00' → logprob: -21.25
    9. '           ' → logprob: -22.625
    10. 'zero' → logprob: -24.125

Token 587: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8087270038668066e-05
    2. ')
' → logprob: -10.500027656555176
    3. '       ' → logprob: -16.000028610229492
    4. ')return' → logprob: -16.000028610229492
    5. ')

' → logprob: -16.250028610229492
    6. '<|end|>' → logprob: -16.375028610229492
    7. '   ' → logprob: -16.750028610229492
    8. ' )' → logprob: -17.125028610229492
    9. '))' → logprob: -17.750028610229492
    10. '())' → logprob: -18.375028610229492

Token 588: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38974300026893616
    2. 'def' → logprob: -1.1397429704666138
    3. '
' → logprob: -6.639742851257324
    4. '```' → logprob: -6.639742851257324
    5. '#' → logprob: -10.014742851257324
    6. 'class' → logprob: -10.264742851257324
    7. '<|end|>' → logprob: -10.264742851257324
    8. ' def' → logprob: -10.389742851257324
    9. '	def' → logprob: -10.639742851257324
    10. '    
' → logprob: -10.639742851257324

Token 589: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.023381508886814117
    2. '   ' → logprob: -3.773381471633911
    3. ' def' → logprob: -9.648381233215332
    4. '#' → logprob: -10.773381233215332
    5. 'class' → logprob: -10.898381233215332
    6. ' ' → logprob: -11.898381233215332
    7. '	def' → logprob: -11.898381233215332
    8. '<|end|>' → logprob: -12.648381233215332
    9. '    
' → logprob: -13.148381233215332
    10. ')' → logprob: -13.148381233215332

Token 590: ' distance' (ID: 9324)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.7108840346336365
    2. 'rot' → logprob: -1.9608840942382812
    3. 'angle' → logprob: -2.3358840942382812
    4. 'project' → logprob: -2.7108840942382812
    5. 'polar' → logprob: -2.9608840942382812
    6. 'arg' → logprob: -3.5858840942382812
    7. 'projection' → logprob: -3.7108840942382812
    8. ' rotate' → logprob: -4.085884094238281
    9. 'ort' → logprob: -4.085884094238281
    10. 'distance' → logprob: -4.460884094238281

Token 591: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001972884638234973
    2. '(' → logprob: -6.251972675323486
    3. ' (' → logprob: -10.876973152160645
    4. '_to' → logprob: -11.376973152160645
    5. '   ' → logprob: -13.126973152160645
    6. 'self' → logprob: -13.376973152160645
    7. '(Point' → logprob: -13.501973152160645
    8. 'To' → logprob: -13.876973152160645
    9. '<|end|>' → logprob: -13.876973152160645
    10. '<|end|>' → logprob: -14.001973152160645

Token 592: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012580640614032745
    2. '(' → logprob: -4.762580871582031
    3. ')(' → logprob: -6.512580871582031
    4. 'to' → logprob: -7.387580871582031
    5. 'self' → logprob: -7.512580871582031
    6. ')' → logprob: -7.762580871582031
    7. '_to' → logprob: -8.137580871582031
    8. '   ' → logprob: -9.012580871582031
    9. ' (' → logprob: -9.387580871582031
    10. 'def' → logprob: -9.637580871582031

Token 593: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.006853904575109482
    2. 'self' → logprob: -5.006854057312012
    3. ' other' → logprob: -9.381854057312012
    4. 'p' → logprob: -9.881854057312012
    5. ' self' → logprob: -13.256854057312012
    6. '   ' → logprob: -14.006854057312012
    7. ' ' → logprob: -15.256854057312012
    8. 'point' → logprob: -15.756854057312012
    9. ' p' → logprob: -16.506853103637695
    10. '_other' → logprob: -17.131853103637695

Token 594: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004055282333865762
    2. '):' → logprob: -8.125405311584473
    3. ')' → logprob: -9.250405311584473
    4. ' :' → logprob: -11.875405311584473
    5. ',' → logprob: -12.625405311584473
    6. '):
' → logprob: -13.875405311584473
    7. '<|end|>' → logprob: -14.375405311584473
    8. '```' → logprob: -15.125405311584473
    9. '   ' → logprob: -15.625405311584473
    10. '[' → logprob: -15.750405311584473

Token 595: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00038455575122497976
    2. ' '' → logprob: -7.875384330749512
    3. ')' → logprob: -13.000384330749512
    4. 'Point' → logprob: -13.875384330749512
    5. ' ' → logprob: -15.000384330749512
    6. 'object' → logprob: -15.500384330749512
    7. '<Point' → logprob: -15.750384330749512
    8. '(Point' → logprob: -15.875384330749512
    9. '')' → logprob: -16.000385284423828
    10. '   ' → logprob: -16.125385284423828

Token 596: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.702754474943504e-05
    2. ''' → logprob: -10.25003719329834
    3. ' Point' → logprob: -13.50003719329834
    4. '	Point' → logprob: -16.125036239624023
    5. '_point' → logprob: -17.250036239624023
    6. 'self' → logprob: -17.625036239624023
    7. '.Point' → logprob: -17.875036239624023
    8. '(Point' → logprob: -17.875036239624023
    9. '_Point' → logprob: -17.875036239624023
    10. '<Point' → logprob: -18.750036239624023

Token 597: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20141880214214325
    2. '')' → logprob: -1.7014187574386597
    3. '")' → logprob: -13.32641887664795
    4. '`)' → logprob: -13.70141887664795
    5. ':' → logprob: -14.20141887664795
    6. '   ' → logprob: -14.70141887664795
    7. ''' → logprob: -14.70141887664795
    8. '()' → logprob: -14.95141887664795
    9. '(self' → logprob: -15.45141887664795
    10. ' ')' → logprob: -15.70141887664795

Token 598: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.12885893881320953
    2. ' ->' → logprob: -2.753859043121338
    3. ')' → logprob: -2.878859043121338
    4. '   ' → logprob: -8.12885856628418
    5. ')->' → logprob: -8.37885856628418
    6. ':' → logprob: -8.50385856628418
    7. '       ' → logprob: -8.75385856628418
    8. '()' → logprob: -10.00385856628418
    9. '(self' → logprob: -10.50385856628418
    10. '()->' → logprob: -10.75385856628418

Token 599: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.008614808320999146
    2. ' float' → logprob: -4.758615016937256
    3. '<float' → logprob: -16.258615493774414
    4. '	float' → logprob: -16.383615493774414
    5. '(float' → logprob: -17.633615493774414
    6. ''' → logprob: -18.508615493774414
    7. '```' → logprob: -18.883615493774414
    8. '=float' → logprob: -19.633615493774414
    9. '[' → logprob: -19.758615493774414
    10. '   ' → logprob: -19.883615493774414

Token 600: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23495624959468842
    2. '(self' → logprob: -2.3599562644958496
    3. ':' → logprob: -2.6099562644958496
    4. ':
' → logprob: -3.6099562644958496
    5. '(' → logprob: -5.10995626449585
    6. '   ' → logprob: -5.35995626449585
    7. 'self' → logprob: -6.60995626449585
    8. '(
' → logprob: -7.35995626449585
    9. '->' → logprob: -7.60995626449585
    10. '):
' → logprob: -7.98495626449585

Token 601: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014184068888425827
    2. 'return' → logprob: -4.26418399810791
    3. ' return' → logprob: -11.51418399810791
    4. '   ' → logprob: -11.63918399810791
    5. '```' → logprob: -13.76418399810791
    6. '	' → logprob: -15.26418399810791
    7. '	return' → logprob: -15.51418399810791
    8. '
' → logprob: -15.88918399810791
    9. ':return' → logprob: -17.639184951782227
    10. '{return' → logprob: -18.139184951782227

Token 602: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00015467056073248386
    2. '       ' → logprob: -9.000154495239258
    3. ' return' → logprob: -10.500154495239258
    4. '   ' → logprob: -13.125154495239258
    5. '	return' → logprob: -13.500154495239258
    6. 'sqrt' → logprob: -16.250154495239258
    7. 'import' → logprob: -16.750154495239258
    8. ' ' → logprob: -17.125154495239258
    9. '(return' → logprob: -18.000154495239258
    10. '((' → logprob: -18.125154495239258

Token 603: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006625185487791896
    2. '(other' → logprob: -7.625662326812744
    3. ' (' → logprob: -8.875662803649902
    4. 'self' → logprob: -10.500662803649902
    5. '(abs' → logprob: -12.875662803649902
    6. '((' → logprob: -13.625662803649902
    7. 'sqrt' → logprob: -14.250662803649902
    8. '(math' → logprob: -14.375662803649902
    9. '(x' → logprob: -14.625662803649902
    10. 'math' → logprob: -14.750662803649902

Token 604: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02368774451315403
    2. '(self' → logprob: -3.7736878395080566
    3. 'other' → logprob: -7.773687839508057
    4. '(other' → logprob: -10.898687362670898
    5. ' self' → logprob: -12.773687362670898
    6. '	self' → logprob: -16.1486873626709
    7. ' (' → logprob: -16.6486873626709
    8. '(' → logprob: -17.0236873626709
    9. '((' → logprob: -17.1486873626709
    10. '```' → logprob: -19.0236873626709

Token 605: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.21558958292007446
    2. '-' → logprob: -1.9655895233154297
    3. '-other' → logprob: -2.9655895233154297
    4. '-self' → logprob: -6.09058952331543
    5. ' ' → logprob: -10.59058952331543
    6. '-sub' → logprob: -11.21558952331543
    7. 'other' → logprob: -11.21558952331543
    8. '-(' → logprob: -12.84058952331543
    9. '   ' → logprob: -13.09058952331543
    10. 'self' → logprob: -13.46558952331543

Token 606: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015023599844425917
    2. ' other' → logprob: -6.501502513885498
    3. '(other' → logprob: -19.126502990722656
    4. 'Other' → logprob: -20.126502990722656
    5. '.other' → logprob: -20.751502990722656
    6. '_other' → logprob: -21.876502990722656
    7. 'self' → logprob: -23.251502990722656
    8. ' ' → logprob: -24.251502990722656
    9. '   ' → logprob: -24.251502990722656
    10. '其他' → logprob: -24.876502990722656

Token 607: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -4.320199877838604e-07
    2. ' ).' → logprob: -15.625
    3. ')' → logprob: -15.75
    4. '.' → logprob: -16.5
    5. '`).' → logprob: -17.25
    6. '').' → logprob: -17.75
    7. '()).' → logprob: -17.875
    8. '").' → logprob: -18.125
    9. '   ' → logprob: -18.75
    10. '}.' → logprob: -19.875

Token 608: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.9361264946837764e-07
    2. 'norm' → logprob: -15.75
    3. 'ab' → logprob: -20.625
    4. '.abs' → logprob: -22.125
    5. ' abs' → logprob: -22.75
    6. '
' → logprob: -23.375
    7. '   ' → logprob: -23.5
    8. '```' → logprob: -24.125
    9. '_abs' → logprob: -24.25
    10. 'sqrt' → logprob: -24.25

Token 609: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3856492842023727e-06
    2. '()
' → logprob: -15.000000953674316
    3. '(' → logprob: -15.250000953674316
    4. ' ()' → logprob: -16.000001907348633
    5. '()`' → logprob: -16.125001907348633
    6. '()

' → logprob: -16.375001907348633
    7. '()]' → logprob: -16.625001907348633
    8. '().' → logprob: -16.750001907348633
    9. '()}' → logprob: -16.875001907348633
    10. '())' → logprob: -17.000001907348633

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16013088822364807
    2. 'def' → logprob: -2.0351309776306152
    3. '
' → logprob: -4.160130977630615
    4. '    
' → logprob: -7.535130977630615
    5. '```' → logprob: -7.785130977630615
    6. ' def' → logprob: -8.535130500793457
    7. '<|end|>' → logprob: -9.285130500793457
    8. '\' → logprob: -9.785130500793457
    9. '

' → logprob: -9.785130500793457
    10. '	def' → logprob: -10.035130500793457

Token 611: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.160971628967673e-05
    2. '   ' → logprob: -9.500082015991211
    3. ' def' → logprob: -12.250082015991211
    4. '	def' → logprob: -14.375082015991211
    5. '#' → logprob: -14.500082015991211
    6. ')' → logprob: -14.625082015991211
    7. '```' → logprob: -15.500082015991211
    8. '<|end|>' → logprob: -16.37508201599121
    9. 'class' → logprob: -17.12508201599121
    10. '
' → logprob: -18.00008201599121

Token 612: ' in' (ID: 306)
  Prédit: 'project'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'project' → logprob: -0.5480946898460388
    2. 'projection' → logprob: -1.9230947494506836
    3. 'rotate' → logprob: -2.6730947494506836
    4. 'angle' → logprob: -3.2980947494506836
    5. 'normalize' → logprob: -3.6730947494506836
    6. 'polar' → logprob: -3.7980947494506836
    7. 'cc' → logprob: -4.048094749450684
    8. 'proj' → logprob: -4.173094749450684
    9. 'arg' → logprob: -4.298094749450684
    10. 'unit' → logprob: -4.298094749450684

Token 613: '_side' (ID: 46130)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.038667887449264526
    2. '_polygon' → logprob: -3.913667917251587
    3. 'segment' → logprob: -5.413667678833008
    4. '_circle' → logprob: -6.288667678833008
    5. '_box' → logprob: -6.413667678833008
    6. '_line' → logprob: -6.413667678833008
    7. 'line' → logprob: -6.538667678833008
    8. '__' → logprob: -7.288667678833008
    9. '_b' → logprob: -7.413667678833008
    10. 'ter' → logprob: -7.413667678833008

Token 614: '_of' (ID: 8023)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.055246468633413315
    2. 'self' → logprob: -3.805246353149414
    3. 'def' → logprob: -3.805246353149414
    4. 's' → logprob: -5.430246353149414
    5. '(' → logprob: -5.930246353149414
    6. 'f' → logprob: -7.180246353149414
    7. 'side' → logprob: -8.055246353149414
    8. 'line' → logprob: -8.555246353149414
    9. 't' → logprob: -8.680246353149414
    10. 'segment' → logprob: -8.805246353149414

Token 615: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.035154879093170166
    2. 'self' → logprob: -3.4101548194885254
    3. '(' → logprob: -6.910154819488525
    4. 'segment' → logprob: -8.160155296325684
    5. 'def' → logprob: -9.285155296325684
    6. 'seg' → logprob: -10.285155296325684
    7. ' (' → logprob: -10.910155296325684
    8. 's' → logprob: -11.410155296325684
    9. 'line' → logprob: -11.410155296325684
    10. 'the' → logprob: -11.535155296325684

Token 616: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5276134610176086
    2. 'self' → logprob: -1.1526134014129639
    3. '(' → logprob: -2.402613401412964
    4. 'def' → logprob: -7.152613639831543
    5. ')' → logprob: -7.277613639831543
    6. ')(' → logprob: -7.527613639831543
    7. ' (' → logprob: -7.902613639831543
    8. '(
' → logprob: -8.652613639831543
    9. 'elf' → logprob: -8.652613639831543
    10. 's' → logprob: -8.777613639831543

Token 617: ' seg' (ID: 3055)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014784404775127769
    2. 'other' → logprob: -6.751478672027588
    3. ' self' → logprob: -8.25147819519043
    4. '   ' → logprob: -10.87647819519043
    5. 's' → logprob: -11.62647819519043
    6. ')' → logprob: -12.75147819519043
    7. 'def' → logprob: -12.75147819519043
    8. '(self' → logprob: -13.12647819519043
    9. ' ' → logprob: -13.37647819519043
    10. ' other' → logprob: -13.50147819519043

Token 618: ':' (ID: 25)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.004437478259205818
    2. ')' → logprob: -6.379437446594238
    3. 'ments' → logprob: -6.879437446594238
    4. '):' → logprob: -7.629437446594238
    5. 'm' → logprob: -8.504437446594238
    6. 'self' → logprob: -9.004437446594238
    7. '(self' → logprob: -9.129437446594238
    8. 'メント' → logprob: -9.129437446594238
    9. '(Point' → logprob: -9.379437446594238
    10. '```' → logprob: -9.504437446594238

Token 619: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7252975106239319
    2. 'Tuple' → logprob: -0.7252975106239319
    3. ''T' → logprob: -3.850297451019287
    4. ''t' → logprob: -4.725297451019287
    5. ''s' → logprob: -7.100297451019287
    6. 'tuple' → logprob: -8.600297927856445
    7. 'List' → logprob: -9.100297927856445
    8. ' '' → logprob: -9.225297927856445
    9. ' Tuple' → logprob: -9.850297927856445
    10. '"' → logprob: -10.725297927856445

Token 620: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.12449998408555984
    2. 'Point' → logprob: -2.624500036239624
    3. 'Line' → logprob: -3.124500036239624
    4. 'Seg' → logprob: -7.999499797821045
    5. 'Tuple' → logprob: -9.124500274658203
    6. 'Vector' → logprob: -9.874500274658203
    7. ''' → logprob: -10.124500274658203
    8. 'Edge' → logprob: -10.624500274658203
    9. 'segment' → logprob: -11.249500274658203
    10. 'Segments' → logprob: -11.249500274658203

Token 621: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0016428076196461916
    2. '',' → logprob: -6.62664270401001
    3. ''):
' → logprob: -9.376643180847168
    4. ''):' → logprob: -9.376643180847168
    5. ')' → logprob: -9.501643180847168
    6. ''' → logprob: -10.501643180847168
    7. 'Segment' → logprob: -11.751643180847168
    8. '")' → logprob: -11.876643180847168
    9. ',' → logprob: -12.751643180847168
    10. 'Point' → logprob: -12.876643180847168

Token 622: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.3744364380836487
    2. '->' → logprob: -1.624436378479004
    3. ':' → logprob: -2.249436378479004
    4. ')' → logprob: -4.749436378479004
    5. '   ' → logprob: -7.499436378479004
    6. ')->' → logprob: -7.999436378479004
    7. '()->' → logprob: -9.374436378479004
    8. ',' → logprob: -9.624436378479004
    9. '       ' → logprob: -9.874436378479004
    10. '()' → logprob: -10.999436378479004

Token 623: ' bool' (ID: 3792)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5241945385932922
    2. 'Point' → logprob: -1.2741944789886475
    3. 'bool' → logprob: -2.7741944789886475
    4. ''' → logprob: -3.1491944789886475
    5. 'PL' → logprob: -3.8991944789886475
    6. ''int' → logprob: -7.274194717407227
    7. 'float' → logprob: -7.399194717407227
    8. ' int' → logprob: -7.774194717407227
    9. 'str' → logprob: -8.274194717407227
    10. ' Point' → logprob: -8.774194717407227

Token 624: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060222428292036057
    2. ':
' → logprob: -2.9352223873138428
    3. '       ' → logprob: -5.310222625732422
    4. '   ' → logprob: -8.810222625732422
    5. '():' → logprob: -9.685222625732422
    6. '):' → logprob: -10.310222625732422
    7. '<|end|>' → logprob: -10.560222625732422
    8. ':return' → logprob: -11.185222625732422
    9. '.' → logprob: -11.310222625732422
    10. '():
' → logprob: -11.560222625732422

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.176947600673884e-05
    2. '	' → logprob: -11.625021934509277
    3. 'return' → logprob: -11.750021934509277
    4. ' return' → logprob: -12.875021934509277
    5. '	   ' → logprob: -14.375021934509277
    6. '   ' → logprob: -15.000021934509277
    7. '#' → logprob: -15.125021934509277
    8. '<|end|>' → logprob: -15.125021934509277
    9. '	       ' → logprob: -15.750021934509277
    10. '	return' → logprob: -16.00002098083496

Token 626: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1413472443819046
    2. '       ' → logprob: -2.3913471698760986
    3. 'd' → logprob: -4.016347408294678
    4. 'cross' → logprob: -4.641347408294678
    5. 'p' → logprob: -6.141347408294678
    6. 'v' → logprob: -6.516347408294678
    7. 'vec' → logprob: -6.641347408294678
    8. '   ' → logprob: -7.016347408294678
    9. '#' → logprob: -7.016347408294678
    10. 't' → logprob: -7.141347408294678

Token 627: ' seg' (ID: 3055)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5196382999420166
    2. 'seg' → logprob: -1.7696382999420166
    3. 'float' → logprob: -1.7696382999420166
    4. 'abs' → logprob: -3.2696382999420166
    5. 'min' → logprob: -4.5196380615234375
    6. '(seg' → logprob: -5.2696380615234375
    7. '(self' → logprob: -5.8946380615234375
    8. '(' → logprob: -6.8946380615234375
    9. 'Seg' → logprob: -7.0196380615234375
    10. '   ' → logprob: -7.3946380615234375

Token 628: '.vector' (ID: 104563)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.042548656463623
    2. '.contains' → logprob: -1.417548656463623
    3. '.is' → logprob: -2.042548656463623
    4. '.point' → logprob: -2.792548656463623
    5. '.startswith' → logprob: -3.167548656463623
    6. '.has' → logprob: -3.292548656463623
    7. '.start' → logprob: -3.417548656463623
    8. '.in' → logprob: -3.542548656463623
    9. '.min' → logprob: -4.167548656463623
    10. '.x' → logprob: -4.542548656463623

Token 629: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.05928301438689232
    2. '.cross' → logprob: -3.6842830181121826
    3. '.' → logprob: -4.3092827796936035
    4. '.is' → logprob: -4.6842827796936035
    5. '.dot' → logprob: -5.1842827796936035
    6. '.in' → logprob: -6.9342827796936035
    7. '.vector' → logprob: -7.3092827796936035
    8. '   ' → logprob: -7.5592827796936035
    9. '.to' → logprob: -8.184283256530762
    10. '.d' → logprob: -8.434283256530762

Token 630: 'dot' (ID: 29155)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.6093913316726685
    2. 'dot' → logprob: -1.1093913316726685
    3. 'is' → logprob: -2.359391212463379
    4. 'norm' → logprob: -3.984391212463379
    5. 'abs' → logprob: -4.484391212463379
    6. 'on' → logprob: -6.984391212463379
    7. 'parallel' → logprob: -8.734391212463379
    8. 'contains' → logprob: -8.984391212463379
    9. '```' → logprob: -8.984391212463379
    10. 'point' → logprob: -8.984391212463379

Token 631: '(
' (ID: 1607)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004667695611715317
    2. '(seg' → logprob: -5.75466775894165
    3. 'self' → logprob: -6.75466775894165
    4. '((' → logprob: -8.504667282104492
    5. '(' → logprob: -9.879667282104492
    6. 'seg' → logprob: -10.004667282104492
    7. '(se' → logprob: -11.129667282104492
    8. '(sel' → logprob: -12.254667282104492
    9. '(this' → logprob: -14.254667282104492
    10. '(
' → logprob: -14.254667282104492

Token 632: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006520444992929697
    2. '(self' → logprob: -5.2565202713012695
    3. '       ' → logprob: -7.5065202713012695
    4. '           ' → logprob: -7.5065202713012695
    5. ' self' → logprob: -9.50652027130127
    6. 'seg' → logprob: -10.13152027130127
    7. '               ' → logprob: -10.63152027130127
    8. '   ' → logprob: -10.75652027130127
    9. '	self' → logprob: -11.38152027130127
    10. '                   ' → logprob: -12.63152027130127

Token 633: ' Segment' (ID: 64922)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16581806540489197
    2. '           ' → logprob: -1.9158180952072144
    3. '(self' → logprob: -5.290818214416504
    4. '               ' → logprob: -8.415818214416504
    5. ' self' → logprob: -8.915818214416504
    6. '                   ' → logprob: -10.040818214416504
    7. '       ' → logprob: -10.290818214416504
    8. '   ' → logprob: -10.665818214416504
    9. 'seg' → logprob: -10.915818214416504
    10. '          ' → logprob: -11.290818214416504

Token 634: '(seg' (ID: 140462)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6111729145050049
    2. '(seg' → logprob: -0.8611729145050049
    3. '(Point' → logprob: -4.861172676086426
    4. '.seg' → logprob: -5.361172676086426
    5. '.point' → logprob: -5.611172676086426
    6. '.__' → logprob: -5.611172676086426
    7. '.segment' → logprob: -5.736172676086426
    8. 'self' → logprob: -5.986172676086426
    9. '.Point' → logprob: -6.236172676086426
    10. 'seg' → logprob: -6.861172676086426

Token 635: '.p' (ID: 1201)
  Prédit: '.point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.point' → logprob: -1.316164255142212
    2. '.p' → logprob: -1.441164255142212
    3. '.start' → logprob: -1.566164255142212
    4. '.s' → logprob: -2.441164255142212
    5. '.from' → logprob: -2.566164255142212
    6. 'self' → logprob: -3.441164255142212
    7. '.self' → logprob: -4.066164016723633
    8. '.segment' → logprob: -4.191164016723633
    9. '.pt' → logprob: -4.691164016723633
    10. ').' → logprob: -4.691164016723633

Token 636: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1821388602256775
    2. '.a' → logprob: -3.0571389198303223
    3. '   ' → logprob: -3.3071389198303223
    4. 's' → logprob: -3.5571389198303223
    5. '1' → logprob: -3.9321389198303223
    6. 'oint' → logprob: -4.307138919830322
    7. 'from' → logprob: -5.682138919830322
    8. 'A' → logprob: -6.182138919830322
    9. '(a' → logprob: -6.182138919830322
    10. '
' → logprob: -6.307138919830322

Token 637: ',' (ID: 11)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.4877887964248657
    2. ').' → logprob: -1.2377887964248657
    3. '.' → logprob: -2.987788677215576
    4. '.s' → logprob: -3.987788677215576
    5. '.segment' → logprob: -4.612788677215576
    6. '.seg' → logprob: -5.612788677215576
    7. 'p' → logprob: -5.737788677215576
    8. '().' → logprob: -5.737788677215576
    9. ')' → logprob: -6.112788677215576
    10. '.point' → logprob: -7.487788677215576

Token 638: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34896257519721985
    2. 'seg' → logprob: -1.2239625453948975
    3. 'sel' → logprob: -9.098962783813477
    4. '   ' → logprob: -9.223962783813477
    5. ' self' → logprob: -10.098962783813477
    6. 'other' → logprob: -10.223962783813477
    7. '(self' → logprob: -10.223962783813477
    8. 'se' → logprob: -10.536462783813477
    9. '(seg' → logprob: -10.723962783813477
    10. '	self' → logprob: -11.411462783813477

Token 639: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.06318162381649017
    2. '.p' → logprob: -2.8131816387176514
    3. ')' → logprob: -6.813181400299072
    4. 'p' → logprob: -10.31318187713623
    5. ').__' → logprob: -10.43818187713623
    6. '.' → logprob: -10.68818187713623
    7. ' ).' → logprob: -11.68818187713623
    8. '   ' → logprob: -12.06318187713623
    9. ')._' → logprob: -13.06318187713623
    10. ')p' → logprob: -13.18818187713623

Token 640: 'vector' (ID: 7603)
  Prédit: 'vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -1.8312570318812504e-05
    2. ' vector' → logprob: -11.875018119812012
    3. '   ' → logprob: -12.375018119812012
    4. '.vector' → logprob: -12.875018119812012
    5. '_vector' → logprob: -14.125018119812012
    6. 'vec' → logprob: -14.250018119812012
    7. ' ' → logprob: -14.375018119812012
    8. '```' → logprob: -14.750018119812012
    9. '
' → logprob: -15.125018119812012
    10. 'vect' → logprob: -15.375018119812012

Token 641: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00529340747743845
    2. '()' → logprob: -5.255293369293213
    3. '()
' → logprob: -10.630293846130371
    4. ')' → logprob: -10.630293846130371
    5. '       ' → logprob: -12.130293846130371
    6. '()).' → logprob: -13.880293846130371
    7. '(),' → logprob: -14.005293846130371
    8. ' ())' → logprob: -14.005293846130371
    9. '())
' → logprob: -14.130293846130371
    10. '()))' → logprob: -14.130293846130371

Token 642: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.665523886680603
    2. ' >' → logprob: -1.665523886680603
    3. '>' → logprob: -2.0405240058898926
    4. '>=' → logprob: -2.0405240058898926
    5. ' <=' → logprob: -4.165524005889893
    6. '   ' → logprob: -5.165524005889893
    7. ')' → logprob: -5.790524005889893
    8. ' ==' → logprob: -6.165524005889893
    9. '<=' → logprob: -6.165524005889893
    10. '    ' → logprob: -6.665524005889893

Token 643: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3971669375896454
    2. '-E' → logprob: -1.3971669673919678
    3. '0' → logprob: -2.5221669673919678
    4. ' -' → logprob: -9.522167205810547
    5. '-s' → logprob: -10.772167205810547
    6. '-e' → logprob: -11.147167205810547
    7. '   ' → logprob: -11.522167205810547
    8. '-S' → logprob: -11.772167205810547
    9. ' ' → logprob: -11.897167205810547
    10. '-es' → logprob: -12.147167205810547

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6454641819000244
    2. '-' → logprob: -0.7704641819000244
    3. '-E' → logprob: -4.395463943481445
    4. ' -' → logprob: -8.145463943481445
    5. '-s' → logprob: -10.395463943481445
    6. ' ' → logprob: -10.520463943481445
    7. '-n' → logprob: -11.270463943481445
    8. '-\' → logprob: -11.520463943481445
    9. '-f' → logprob: -12.020463943481445
    10. '-e' → logprob: -12.145463943481445

Token 645: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 647: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13222186267375946
    2. '<|end|>' → logprob: -2.1322219371795654
    3. '
' → logprob: -5.507221698760986
    4. ' ' → logprob: -8.007222175598145
    5. '<|end|>' → logprob: -8.132222175598145
    6. '    
' → logprob: -8.632222175598145
    7. '  ' → logprob: -9.507222175598145
    8. ')' → logprob: -9.507222175598145
    9. '.' → logprob: -10.007222175598145
    10. '```' → logprob: -10.382222175598145

Token 648: ' in' (ID: 306)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.648064374923706
    2. 'on' → logprob: -1.023064374923706
    3. ' def' → logprob: -3.273064374923706
    4. 'def' → logprob: -3.273064374923706
    5. 'class' → logprob: -4.648064613342285
    6. 'seg' → logprob: -6.023064613342285
    7. 'in' → logprob: -6.148064613342285
    8. 'segment' → logprob: -6.148064613342285
    9. 'distance' → logprob: -6.273064613342285
    10. ' in' → logprob: -6.523064613342285

Token 649: '_width' (ID: 17595)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.03472434729337692
    2. '_segment' → logprob: -4.034724235534668
    3. 'side' → logprob: -4.409724235534668
    4. 'def' → logprob: -6.909724235534668
    5. 'Side' → logprob: -7.034724235534668
    6. '_' → logprob: -8.034724235534668
    7. 'segment' → logprob: -8.034724235534668
    8. '__' → logprob: -8.409724235534668
    9. '_range' → logprob: -8.409724235534668
    10. 's' → logprob: -8.409724235534668

Token 650: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.014879010617733002
    2. 'of' → logprob: -4.26487922668457
    3. '(self' → logprob: -8.63987922668457
    4. '_' → logprob: -8.88987922668457
    5. ' of' → logprob: -9.38987922668457
    6. 'self' → logprob: -9.76487922668457
    7. '   ' → logprob: -9.76487922668457
    8. 'Of' → logprob: -9.88987922668457
    9. '(of' → logprob: -10.51487922668457
    10. 'def' → logprob: -10.63987922668457

Token 651: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00327729107812047
    2. '(' → logprob: -6.37827730178833
    3. 'self' → logprob: -7.00327730178833
    4. ' (' → logprob: -8.128276824951172
    5. ' self' → logprob: -8.503276824951172
    6. '<|end|>' → logprob: -9.628276824951172
    7. '('' → logprob: -10.378276824951172
    8. '(s' → logprob: -10.628276824951172
    9. '(
' → logprob: -10.878276824951172
    10. '(seg' → logprob: -12.003276824951172

Token 652: ',' (ID: 11)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.6335427761077881
    2. 'seg' → logprob: -1.633542776107788
    3. ' seg' → logprob: -2.133542776107788
    4. ',' → logprob: -3.133542776107788
    5. ' (' → logprob: -3.758542776107788
    6. '(' → logprob: -3.883542776107788
    7. '(self' → logprob: -3.883542776107788
    8. 'self' → logprob: -4.133543014526367
    9. '('' → logprob: -4.633543014526367
    10. ' self' → logprob: -5.383543014526367

Token 653: ' seg' (ID: 3055)
  Prédit: ' seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.10560375452041626
    2. 'seg' → logprob: -2.3556036949157715
    3. ''' → logprob: -6.2306036949157715
    4. 'self' → logprob: -6.9806036949157715
    5. ''s' → logprob: -7.6056036949157715
    6. 'segment' → logprob: -7.7306036949157715
    7. 'Segment' → logprob: -7.8556036949157715
    8. ' segment' → logprob: -7.9806036949157715
    9. ' self' → logprob: -8.10560417175293
    10. ' '' → logprob: -8.60560417175293

Token 654: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06875813752412796
    2. ')' → logprob: -3.818758249282837
    3. '   ' → logprob: -4.318758010864258
    4. ',' → logprob: -4.568758010864258
    5. '.' → logprob: -4.693758010864258
    6. '(' → logprob: -6.318758010864258
    7. '.segment' → logprob: -6.568758010864258
    8. '       ' → logprob: -6.693758010864258
    9. ' (' → logprob: -6.693758010864258
    10. '):' → logprob: -7.193758010864258

Token 655: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.3488388955593109
    2. ''' → logprob: -1.2238389253616333
    3. 'Segment' → logprob: -9.473838806152344
    4. ''s' → logprob: -9.973838806152344
    5. ''S' → logprob: -9.973838806152344
    6. '   ' → logprob: -9.973838806152344
    7. ' ' → logprob: -10.098838806152344
    8. ')' → logprob: -10.098838806152344
    9. '['' → logprob: -10.973838806152344
    10. ' ' → logprob: -10.973838806152344

Token 656: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.004175271838903427
    2. ''' → logprob: -5.754175186157227
    3. ''S' → logprob: -7.879175186157227
    4. ''s' → logprob: -8.004175186157227
    5. 'Point' → logprob: -8.754175186157227
    6. ' Segment' → logprob: -9.254175186157227
    7. 'Seg' → logprob: -11.879175186157227
    8. 'class' → logprob: -12.004175186157227
    9. 'segment' → logprob: -12.129175186157227
    10. '_segment' → logprob: -12.879175186157227

Token 657: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03811802715063095
    2. '')' → logprob: -3.2881181240081787
    3. '   ' → logprob: -9.913118362426758
    4. '")' → logprob: -11.913118362426758
    5. ',' → logprob: -12.288118362426758
    6. ' )' → logprob: -12.788118362426758
    7. '):
' → logprob: -13.038118362426758
    8. ''' → logprob: -13.163118362426758
    9. '`)' → logprob: -13.538118362426758
    10. 'def' → logprob: -13.663118362426758

Token 658: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5908952355384827
    2. ' ->' → logprob: -0.8408952355384827
    3. '->' → logprob: -4.590895175933838
    4. '       ' → logprob: -6.590895175933838
    5. '   ' → logprob: -6.840895175933838
    6. 'def' → logprob: -7.215895175933838
    7. ':' → logprob: -7.465895175933838
    8. ')->' → logprob: -8.215895652770996
    9. ' def' → logprob: -8.840895652770996
    10. '(self' → logprob: -9.090895652770996

Token 659: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0012416596291586757
    2. ' bool' → logprob: -6.751241683959961
    3. 'def' → logprob: -10.501241683959961
    4. ''' → logprob: -10.876241683959961
    5. 'float' → logprob: -11.501241683959961
    6. ' ' → logprob: -12.251241683959961
    7. 'lambda' → logprob: -12.626241683959961
    8. 'Point' → logprob: -13.251241683959961
    9. '   ' → logprob: -13.501241683959961
    10. '  ' → logprob: -14.376241683959961

Token 660: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5413181185722351
    2. ':' → logprob: -0.9163181185722351
    3. ':
' → logprob: -4.791317939758301
    4. '   ' → logprob: -5.291317939758301
    5. '(self' → logprob: -5.791317939758301
    6. ' :' → logprob: -8.0413179397583
    7. '(' → logprob: -8.4163179397583
    8. 'self' → logprob: -8.6663179397583
    9. '        ' → logprob: -8.9163179397583
    10. '           ' → logprob: -9.4163179397583

Token 661: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018904728814959526
    2. '   ' → logprob: -4.393904685974121
    3. 'return' → logprob: -5.643904685974121
    4. ' return' → logprob: -5.893904685974121
    5. 'def' → logprob: -11.143904685974121
    6. '           ' → logprob: -11.518904685974121
    7. '0' → logprob: -11.518904685974121
    8. 'abs' → logprob: -11.643904685974121
    9. '    ' → logprob: -11.768904685974121
    10. '```' → logprob: -12.143904685974121

Token 662: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.021509116515517235
    2. '       ' → logprob: -4.896509170532227
    3. '0' → logprob: -5.396509170532227
    4. 'seg' → logprob: -5.646509170532227
    5. '   ' → logprob: -6.146509170532227
    6. ' return' → logprob: -6.521509170532227
    7. 'def' → logprob: -6.896509170532227
    8. 'p' → logprob: -7.646509170532227
    9. 'min' → logprob: -9.021509170532227
    10. 'segment' → logprob: -9.646509170532227

Token 663: ' \
' (ID: 6814)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.1255989670753479
    2. ' seg' → logprob: -3.125598907470703
    3. '(seg' → logprob: -3.250598907470703
    4. '0' → logprob: -3.875598907470703
    5. 'self' → logprob: -5.000598907470703
    6. '(' → logprob: -5.500598907470703
    7. 'Segment' → logprob: -6.750598907470703
    8. ' ' → logprob: -7.500598907470703
    9. '   ' → logprob: -7.625598907470703
    10. 'float' → logprob: -7.750598907470703

Token 664: '           ' (ID: 352)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.10234566032886505
    2. '0' → logprob: -2.8523457050323486
    3. '(seg' → logprob: -4.6023454666137695
    4. 'float' → logprob: -4.7273454666137695
    5. ' seg' → logprob: -4.9773454666137695
    6. 'self' → logprob: -5.7273454666137695
    7. 'min' → logprob: -5.9773454666137695
    8. '   ' → logprob: -6.1023454666137695
    9. '(' → logprob: -6.4773454666137695
    10. 'Segment' → logprob: -6.6023454666137695

Token 665: ' self' (ID: 1051)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.177455335855484
    2. '(seg' → logprob: -3.052455425262451
    3. 'Segment' → logprob: -3.427455425262451
    4. 'self' (adapté à ' self') → logprob: -3.802455425262451
    5. 'float' → logprob: -3.927455425262451
    6. '0' → logprob: -3.927455425262451
    7. ' seg' → logprob: -4.802455425262451
    8. '(' → logprob: -5.552455425262451
    9. 'min' → logprob: -5.802455425262451
    10. 'abs' → logprob: -6.177455425262451

Token 666: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.05275246128439903
    2. '.' → logprob: -3.1777524948120117
    3. '.distance' → logprob: -6.052752494812012
    4. ' .' → logprob: -6.677752494812012
    5. 'in' → logprob: -6.677752494812012
    6. '   ' → logprob: -7.052752494812012
    7. '==' → logprob: -7.177752494812012
    8. '.__' → logprob: -7.302752494812012
    9. '.x' → logprob: -7.677752494812012
    10. '.vector' → logprob: -7.802752494812012

Token 667: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.0014096397208049893
    2. 'side' → logprob: -6.876409530639648
    3. 'seg' → logprob: -8.751409530639648
    4. '_width' → logprob: -8.876409530639648
    5. '_segment' → logprob: -10.001409530639648
    6. '_range' → logprob: -11.376409530639648
    7. 'Side' → logprob: -11.626409530639648
    8. 'segment' → logprob: -13.001409530639648
    9. '_seg' → logprob: -13.126409530639648
    10. 'range' → logprob: -13.376409530639648

Token 668: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.688212614681106e-05
    2. 'of' → logprob: -11.000017166137695
    3. ' of' → logprob: -16.250017166137695
    4. 'Of' → logprob: -17.250017166137695
    5. '(of' → logprob: -17.750017166137695
    6. '   ' → logprob: -18.375017166137695
    7. '__' → logprob: -18.750017166137695
    8. 's' → logprob: -19.000017166137695
    9. '_' → logprob: -19.375017166137695
    10. '	of' → logprob: -20.000017166137695

Token 669: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.07964733988046646
    2. '(S' → logprob: -2.5796473026275635
    3. '(s' → logprob: -7.954647541046143
    4. 'seg' → logprob: -9.079647064208984
    5. '(' → logprob: -9.454647064208984
    6. '(Point' → logprob: -9.704647064208984
    7. '(
' → logprob: -9.829647064208984
    8. '(segment' → logprob: -10.454647064208984
    9. '(se' → logprob: -10.704647064208984
    10. ' (' → logprob: -11.454647064208984

Token 670: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013457079185172915
    2. '(seg' → logprob: -7.001345634460449
    3. '   ' → logprob: -8.50134563446045
    4. ')
' → logprob: -9.50134563446045
    5. ' )' → logprob: -9.75134563446045
    6. '       ' → logprob: -10.12634563446045
    7. '(' → logprob: -11.37634563446045
    8. '    ' → logprob: -12.12634563446045
    9. ' ' → logprob: -12.25134563446045
    10. ')

' → logprob: -12.50134563446045

Token 671: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47441187500953674
    2. ' and' → logprob: -0.9744118452072144
    3. '       ' → logprob: -9.099411964416504
    4. '   ' → logprob: -9.724411964416504
    5. '           ' → logprob: -9.724411964416504
    6. ' or' → logprob: -10.224411964416504
    7. '()' → logprob: -10.724411964416504
    8. 'or' → logprob: -10.849411964416504
    9. '    ' → logprob: -11.599411964416504
    10. ' ' → logprob: -12.224411964416504

Token 672: ' \
' (ID: 6814)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.5087071657180786
    2. ' seg' → logprob: -1.6337071657180786
    3. '           ' → logprob: -1.8837071657180786
    4. 'Segment' → logprob: -3.883707046508789
    5. '(seg' → logprob: -4.508707046508789
    6. '\
' → logprob: -5.133707046508789
    7. 'self' → logprob: -5.508707046508789
    8. 'not' → logprob: -6.383707046508789
    9. ' self' → logprob: -6.758707046508789
    10. '       ' → logprob: -7.008707046508789

Token 673: '           ' (ID: 352)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.7826024889945984
    2. '           ' → logprob: -1.2826025485992432
    3. 'seg' → logprob: -1.7826025485992432
    4. '(seg' → logprob: -2.532602548599243
    5. 'self' → logprob: -5.282602310180664
    6. '       ' → logprob: -5.532602310180664
    7. '(self' → logprob: -6.282602310180664
    8. '   ' → logprob: -6.657602310180664
    9. 'Point' → logprob: -7.157602310180664
    10. ' seg' → logprob: -7.157602310180664

Token 674: ' self' (ID: 1051)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.29805219173431396
    2. 'seg' → logprob: -1.548052191734314
    3. '(seg' → logprob: -3.7980523109436035
    4. 'self' (adapté à ' self') → logprob: -4.1730523109436035
    5. '(S' → logprob: -6.5480523109436035
    6. '(self' → logprob: -6.6730523109436035
    7. '   ' → logprob: -6.9230523109436035
    8. 'Point' → logprob: -7.1730523109436035
    9. '           ' → logprob: -7.6730523109436035
    10. 'Seg' → logprob: -7.6730523109436035

Token 675: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.07486874610185623
    2. '.distance' → logprob: -2.699868679046631
    3. '.' → logprob: -5.949868679046631
    4. 'in' → logprob: -6.824868679046631
    5. ' .' → logprob: -7.824868679046631
    6. 'distance' → logprob: -8.574869155883789
    7. '.vector' → logprob: -8.824869155883789
    8. ').' → logprob: -9.449869155883789
    9. '.d' → logprob: -9.824869155883789
    10. '._' → logprob: -9.949869155883789

Token 676: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.012881363742053509
    2. '_width' → logprob: -4.637881278991699
    3. 'side' → logprob: -6.137881278991699
    4. 'Side' → logprob: -7.137881278991699
    5. '_length' → logprob: -9.2628812789917
    6. 'width' → logprob: -10.7628812789917
    7. '_segment' → logprob: -11.2628812789917
    8. '_height' → logprob: -11.5128812789917
    9. 'Width' → logprob: -12.6378812789917
    10. '```' → logprob: -13.0128812789917

Token 677: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.723352049040841e-06
    2. 'of' → logprob: -12.750004768371582
    3. 'Of' → logprob: -13.750004768371582
    4. ' of' → logprob: -14.875004768371582
    5. '(of' → logprob: -16.000003814697266
    6. '   ' → logprob: -16.125003814697266
    7. '	of' → logprob: -16.250003814697266
    8. '_OF' → logprob: -18.750003814697266
    9. '.of' → logprob: -19.000003814697266
    10. '(' → logprob: -19.000003814697266

Token 678: '(seg' (ID: 140462)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.013936885632574558
    2. 'Segment' → logprob: -5.013936996459961
    3. '(seg' → logprob: -5.388936996459961
    4. '(Point' → logprob: -7.138936996459961
    5. '(
' → logprob: -7.263936996459961
    6. 'Seg' → logprob: -7.638936996459961
    7. 'seg' → logprob: -8.138936996459961
    8. '(' → logprob: -8.888936996459961
    9. 's' → logprob: -9.513936996459961
    10. 'Point' → logprob: -9.638936996459961

Token 679: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.6554415822029114
    2. '.op' → logprob: -1.4054415225982666
    3. ')' → logprob: -2.9054415225982666
    4. '.re' → logprob: -3.4054415225982666
    5. '[::-' → logprob: -3.5304415225982666
    6. '.S' → logprob: -4.030441761016846
    7. '.Point' → logprob: -4.155441761016846
    8. '(Point' → logprob: -4.280441761016846
    9. 'reverse' → logprob: -4.405441761016846
    10. '.rev' → logprob: -4.655441761016846

Token 680: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019575366750359535
    2. '()' → logprob: -6.751957416534424
    3. ')' → logprob: -7.876957416534424
    4. '())
' → logprob: -8.501957893371582
    5. '()))' → logprob: -8.626957893371582
    6. ' ())' → logprob: -11.376957893371582
    7. '().' → logprob: -12.876957893371582
    8. '())
' → logprob: -12.876957893371582
    9. '())))' → logprob: -13.376957893371582
    10. '()
' → logprob: -13.501957893371582

Token 681: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 682: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.02396933175623417
    2. 'def' (adapté à ' def') → logprob: -3.8989694118499756
    3. '   ' → logprob: -6.3989691734313965
    4. '<|end|>' → logprob: -6.3989691734313965
    5. '```' → logprob: -10.398969650268555
    6. '<|end|>' → logprob: -10.648969650268555
    7. ' class' → logprob: -11.273969650268555
    8. ')' → logprob: -11.273969650268555
    9. '#' → logprob: -12.898969650268555
    10. '@dat' → logprob: -13.148969650268555

Token 683: ' distance' (ID: 9324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9460160732269287
    2. 'on' → logprob: -1.1960160732269287
    3. 'in' → logprob: -2.3210160732269287
    4. 'distance' → logprob: -2.6960160732269287
    5. ' on' → logprob: -2.8210160732269287
    6. ' def' → logprob: -3.8210160732269287
    7. 'class' → logprob: -4.571016311645508
    8. 'out' → logprob: -4.696016311645508
    9. 'project' → logprob: -4.821016311645508
    10. ' in' → logprob: -5.446016311645508

Token 684: '_to' (ID: 5089)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5082504153251648
    2. '(' → logprob: -1.2582504749298096
    3. '(seg' → logprob: -2.7582504749298096
    4. '(segment' → logprob: -4.3832502365112305
    5. ' (' → logprob: -5.1332502365112305
    6. '_to' → logprob: -5.1332502365112305
    7. 'def' → logprob: -5.3832502365112305
    8. '(Point' → logprob: -5.6332502365112305
    9. '(s' → logprob: -5.7582502365112305
    10. '<|end|>' → logprob: -6.1332502365112305

Token 685: '_line' (ID: 14418)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004875908140093088
    2. 'self' → logprob: -6.004876136779785
    3. '(' → logprob: -6.629876136779785
    4. '<|end|>' → logprob: -8.004876136779785
    5. '(Point' → logprob: -8.504876136779785
    6. ' (' → logprob: -9.004876136779785
    7. ' self' → logprob: -9.379876136779785
    8. '_point' → logprob: -9.379876136779785
    9. 'def' → logprob: -9.504876136779785
    10. '(seg' → logprob: -9.879876136779785

Token 686: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.900034299585968e-05
    2. '(' → logprob: -9.375088691711426
    3. 'self' → logprob: -13.500088691711426
    4. ' (' → logprob: -13.750088691711426
    5. '(
' → logprob: -14.125088691711426
    6. '(line' → logprob: -15.250088691711426
    7. 'def' → logprob: -16.000089645385742
    8. '(seg' → logprob: -16.000089645385742
    9. '   ' → logprob: -16.500089645385742
    10. '(Point' → logprob: -16.625089645385742

Token 687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1630118042230606
    2. '(self' → logprob: -1.9130117893218994
    3. 'self' → logprob: -6.2880120277404785
    4. '(' → logprob: -8.41301155090332
    5. 'def' → logprob: -9.28801155090332
    6. ' (' → logprob: -9.41301155090332
    7. ')' → logprob: -9.53801155090332
    8. '(line' → logprob: -9.66301155090332
    9. ',self' → logprob: -9.66301155090332
    10. '(seg' → logprob: -9.91301155090332

Token 688: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.32769352197647095
    2. 'p' → logprob: -1.7026934623718262
    3. 'self' → logprob: -3.202693462371826
    4. ' seg' → logprob: -3.452693462371826
    5. 'other' → logprob: -4.577693462371826
    6. 'line' → logprob: -4.827693462371826
    7. ' p' → logprob: -5.327693462371826
    8. ' self' → logprob: -7.452693462371826
    9. ' other' → logprob: -8.327693939208984
    10. 'segment' → logprob: -8.327693939208984

Token 689: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.106736039626412e-05
    2. ')' → logprob: -10.750031471252441
    3. ',' → logprob: -12.375031471252441
    4. '):' → logprob: -13.125031471252441
    5. '   ' → logprob: -13.500031471252441
    6. ' :' → logprob: -13.750031471252441
    7. '):
' → logprob: -14.625031471252441
    8. ' ' → logprob: -16.375030517578125
    9. '[' → logprob: -16.875030517578125
    10. '):

' → logprob: -17.125030517578125

Token 690: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.030725818127393723
    2. ' '' → logprob: -3.5307257175445557
    3. ''S' → logprob: -7.405725955963135
    4. ')' → logprob: -8.780725479125977
    5. '   ' → logprob: -9.280725479125977
    6. ''s' → logprob: -10.280725479125977
    7. 'Segment' → logprob: -10.280725479125977
    8. ' ' → logprob: -11.030725479125977
    9. 'Point' → logprob: -11.280725479125977
    10. '"' → logprob: -12.030725479125977

Token 691: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.00043472214019857347
    2. 'Point' → logprob: -7.750434875488281
    3. ' Segment' → logprob: -12.750434875488281
    4. 'Line' → logprob: -14.250434875488281
    5. 'Seg' → logprob: -15.000434875488281
    6. '_segment' → logprob: -16.50043487548828
    7. ''' → logprob: -17.12543487548828
    8. 'segment' → logprob: -18.12543487548828
    9. 'egment' → logprob: -18.25043487548828
    10. '   ' → logprob: -18.37543487548828

Token 692: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32704147696495056
    2. ',' → logprob: -1.327041506767273
    3. '')' → logprob: -4.3270416259765625
    4. '',' → logprob: -7.7020416259765625
    5. 'self' → logprob: -11.702041625976562
    6. '   ' → logprob: -11.827041625976562
    7. ':' → logprob: -12.702041625976562
    8. ''' → logprob: -13.577041625976562
    9. '):
' → logprob: -13.702041625976562
    10. '):' → logprob: -14.202041625976562

Token 693: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7344316244125366
    2. '->' → logprob: -1.2344316244125366
    3. ' ->' → logprob: -2.109431743621826
    4. ')' → logprob: -2.359431743621826
    5. '       ' → logprob: -5.234431743621826
    6. '   ' → logprob: -5.359431743621826
    7. ',' → logprob: -6.609431743621826
    8. 'def' → logprob: -7.109431743621826
    9. ':' → logprob: -7.359431743621826
    10. 'self' → logprob: -8.109431266784668

Token 694: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009637462790124118
    2. ' float' → logprob: -7.0009636878967285
    3. '   ' → logprob: -10.000964164733887
    4. '	float' → logprob: -13.250964164733887
    5. '(float' → logprob: -13.375964164733887
    6. '       ' → logprob: -13.375964164733887
    7. 'flo' → logprob: -14.875964164733887
    8. 'int' → logprob: -15.375964164733887
    9. 'Float' → logprob: -15.375964164733887
    10. 'abs' → logprob: -15.750964164733887

Token 695: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3450431227684021
    2. ':
' → logprob: -1.7200431823730469
    3. '       ' → logprob: -2.220043182373047
    4. '   ' → logprob: -6.595043182373047
    5. '):
' → logprob: -6.845043182373047
    6. '(self' → logprob: -6.970043182373047
    7. '):' → logprob: -8.595043182373047
    8. ',' → logprob: -8.595043182373047
    9. '(' → logprob: -8.970043182373047
    10. '():
' → logprob: -9.595043182373047

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008744101971387863
    2. '   ' → logprob: -4.758744239807129
    3. 'return' → logprob: -9.258744239807129
    4. 'n' → logprob: -12.133744239807129
    5. 'abs' → logprob: -12.383744239807129
    6. 'p' → logprob: -12.633744239807129
    7. 'vec' → logprob: -12.758744239807129
    8. ' return' → logprob: -13.008744239807129
    9. 't' → logprob: -13.008744239807129
    10. 'd' → logprob: -13.008744239807129

Token 697: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0018405868904665112
    2. 'return' (adapté à ' return') → logprob: -6.751840591430664
    3. 'seg' → logprob: -7.876840591430664
    4. '(abs' → logprob: -8.626840591430664
    5. '   ' → logprob: -9.376840591430664
    6. 'self' → logprob: -12.126840591430664
    7. '(seg' → logprob: -12.251840591430664
    8. ' abs' → logprob: -12.376840591430664
    9. 'a' → logprob: -12.751840591430664
    10. 'segment' → logprob: -13.126840591430664

Token 698: ' \
' (ID: 6814)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0014810555148869753
    2. '(abs' → logprob: -6.626481056213379
    3. 'self' → logprob: -9.626481056213379
    4. ' abs' → logprob: -10.251481056213379
    5. 'seg' → logprob: -10.501481056213379
    6. '   ' → logprob: -12.001481056213379
    7. '(seg' → logprob: -12.001481056213379
    8. '(self' → logprob: -12.251481056213379
    9. 'fabs' → logprob: -12.376481056213379
    10. 'Segment' → logprob: -13.501481056213379

Token 699: '           ' (ID: 352)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.002688967389985919
    2. '(abs' → logprob: -6.127688884735107
    3. 'self' → logprob: -8.252689361572266
    4. 'seg' → logprob: -9.752689361572266
    5. ' abs' → logprob: -9.752689361572266
    6. '   ' → logprob: -10.002689361572266
    7. '(seg' → logprob: -10.752689361572266
    8. '(self' → logprob: -10.877689361572266
    9. 'fabs' → logprob: -11.502689361572266
    10. 'Segment' → logprob: -11.627689361572266

Token 700: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' (adapté à ' abs') → logprob: -0.0006174852605909109
    2. '(abs' → logprob: -7.625617504119873
    3. 'self' → logprob: -9.875617027282715
    4. ' abs' → logprob: -10.250617027282715
    5. 'seg' → logprob: -11.000617027282715
    6. '   ' → logprob: -11.375617027282715
    7. 'fabs' → logprob: -12.250617027282715
    8. 'Point' → logprob: -13.125617027282715
    9. '(seg' → logprob: -13.125617027282715
    10. 'Segment' → logprob: -13.375617027282715

Token 701: '((' (ID: 2054)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.030794179067015648
    2. '((' → logprob: -3.530794143676758
    3. '(self' → logprob: -6.905794143676758
    4. '(' → logprob: -11.530794143676758
    5. 'seg' → logprob: -11.905794143676758
    6. '(
' → logprob: -11.905794143676758
    7. '(((' → logprob: -12.030794143676758
    8. '(se' → logprob: -12.155794143676758
    9. '(s' → logprob: -13.030794143676758
    10. '(segment' → logprob: -13.280794143676758

Token 702: 'self' (ID: 1156)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0786813423037529
    2. 'self' → logprob: -2.703681230545044
    3. '(seg' → logprob: -4.828681468963623
    4. '(self' → logprob: -7.578681468963623
    5. '   ' → logprob: -9.828680992126465
    6. ' seg' → logprob: -9.953680992126465
    7. '       ' → logprob: -10.953680992126465
    8. '(' → logprob: -11.328680992126465
    9. 'segment' → logprob: -11.453680992126465
    10. '           ' → logprob: -11.578680992126465

Token 703: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2581390142440796
    2. ' -' → logprob: -1.5081390142440796
    3. '-se' → logprob: -5.133139133453369
    4. '-s' → logprob: -8.883138656616211
    5. '-cross' → logprob: -10.383138656616211
    6. '-self' → logprob: -10.758138656616211
    7. '   ' → logprob: -10.758138656616211
    8. ' ' → logprob: -11.008138656616211
    9. 'seg' → logprob: -11.633138656616211
    10. '-sub' → logprob: -11.758138656616211

Token 704: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.00011224505578866228
    2. '(seg' → logprob: -9.250112533569336
    3. ' seg' → logprob: -11.375112533569336
    4. 'segment' → logprob: -13.625112533569336
    5. ')' → logprob: -14.375112533569336
    6. 's' → logprob: -14.750112533569336
    7. '   ' → logprob: -15.000112533569336
    8. '       ' → logprob: -15.250112533569336
    9. '<|end|>' → logprob: -15.250112533569336
    10. '           ' → logprob: -15.250112533569336

Token 705: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.531315314830863e-06
    2. 'p' → logprob: -13.000003814697266
    3. ').' → logprob: -15.125003814697266
    4. '   ' → logprob: -15.250003814697266
    5. '.' → logprob: -15.375003814697266
    6. ' .' → logprob: -15.750003814697266
    7. '().' → logprob: -16.250003814697266
    8. '[' → logprob: -16.375003814697266
    9. '.s' → logprob: -17.250003814697266
    10. '.point' → logprob: -17.500003814697266

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '2' → logprob: -13.75000286102295
    3. '0' → logprob: -14.25000286102295
    4. 'p' → logprob: -14.25000286102295
    5. ' ' → logprob: -16.625001907348633
    6. '１' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.250001907348633
    8. 's' → logprob: -17.375001907348633
    9. '
' → logprob: -17.875001907348633
    10. '.p' → logprob: -18.125001907348633

Token 707: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.00014299227041192353
    2. '   ' → logprob: -9.750143051147461
    3. '()).' → logprob: -10.375143051147461
    4. ' ).' → logprob: -10.500143051147461
    5. '       ' → logprob: -11.875143051147461
    6. ')' → logprob: -11.875143051147461
    7. '           ' → logprob: -12.500143051147461
    8. ' ' → logprob: -13.375143051147461
    9. ')
' → logprob: -13.750143051147461
    10. '               ' → logprob: -13.750143051147461

Token 708: 'cross' (ID: 52400)
  Prédit: 'cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -3.8889261304575484e-06
    2. ' cross' → logprob: -12.625003814697266
    3. '.cross' → logprob: -15.000003814697266
    4. 'dot' → logprob: -15.375003814697266
    5. '
' → logprob: -20.000003814697266
    6. 'abs' → logprob: -20.625003814697266
    7. '_cross' → logprob: -21.500003814697266
    8. 'x' → logprob: -21.625003814697266
    9. ')' → logprob: -21.750003814697266
    10. 'c' → logprob: -21.875003814697266

Token 709: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.00248338864184916
    2. 'seg' → logprob: -6.002483367919922
    3. '(' → logprob: -12.127483367919922
    4. '((' → logprob: -13.502483367919922
    5. ' seg' → logprob: -14.752483367919922
    6. '(
' → logprob: -14.877483367919922
    7. '(se' → logprob: -16.627483367919922
    8. 'Seg' → logprob: -16.752483367919922
    9. '(segment' → logprob: -17.002483367919922
    10. '   ' → logprob: -17.377483367919922

Token 710: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.0062842522747814655
    2. 'vector' → logprob: -5.131284236907959
    3. '.p' → logprob: -8.131284713745117
    4. ' vector' → logprob: -11.006284713745117
    5. '(vector' → logprob: -11.131284713745117
    6. '.point' → logprob: -12.006284713745117
    7. '   ' → logprob: -12.381284713745117
    8. ').' → logprob: -12.631284713745117
    9. 'Vector' → logprob: -12.756284713745117
    10. '.' → logprob: -13.006284713745117

Token 711: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1611926406621933
    2. '())' → logprob: -2.1611926555633545
    3. '()' → logprob: -3.4111926555633545
    4. '()))
' → logprob: -8.536192893981934
    5. '())))' → logprob: -8.911192893981934
    6. '())
' → logprob: -9.161192893981934
    7. '()),' → logprob: -9.911192893981934
    8. '())).' → logprob: -10.036192893981934
    9. '()
' → logprob: -10.036192893981934
    10. '()).' → logprob: -10.911192893981934

Token 712: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.016115542501211166
    2. ' /' → logprob: -4.391115665435791
    3. '()' → logprob: -6.641115665435791
    4. '()/' → logprob: -6.891115665435791
    5. '           ' → logprob: -7.766115665435791
    6. '       ' → logprob: -7.891115665435791
    7. ')' → logprob: -8.016115188598633
    8. '/
' → logprob: -9.766115188598633
    9. '   ' → logprob: -10.266115188598633
    10. '        ' → logprob: -11.266115188598633

Token 713: ' \
' (ID: 6814)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.8908587662735954e-05
    2. '(seg' → logprob: -11.250019073486328
    3. ' seg' → logprob: -12.375019073486328
    4. 'segment' → logprob: -13.750019073486328
    5. '(' → logprob: -15.750019073486328
    6. '   ' → logprob: -17.125019073486328
    7. 's' → logprob: -17.125019073486328
    8. 'segments' → logprob: -17.125019073486328
    9. '```' → logprob: -17.125019073486328
    10. 'se' → logprob: -17.250019073486328

Token 714: '           ' (ID: 352)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.8908587662735954e-05
    2. '(seg' → logprob: -11.125019073486328
    3. ' seg' → logprob: -12.500019073486328
    4. 'segment' → logprob: -15.000019073486328
    5. '   ' → logprob: -17.250019073486328
    6. 'segments' → logprob: -17.750019073486328
    7. '(' → logprob: -17.875019073486328
    8. '           ' → logprob: -18.375019073486328
    9. 'SEG' → logprob: -19.000019073486328
    10. 'se' → logprob: -19.250019073486328

Token 715: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -3.774276774493046e-05
    2. '(seg' → logprob: -10.625038146972656
    3. ' seg' → logprob: -11.375038146972656
    4. 'segment' → logprob: -14.250038146972656
    5. '   ' → logprob: -14.750038146972656
    6. '(' → logprob: -15.250038146972656
    7. ' ' → logprob: -15.750038146972656
    8. '           ' → logprob: -15.750038146972656
    9. 'segments' → logprob: -16.875038146972656
    10. '  ' → logprob: -17.000038146972656

Token 716: '.length' (ID: 3116)
  Prédit: '.vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.008413273841142654
    2. '.length' → logprob: -4.883413314819336
    3. 'vector' → logprob: -7.133413314819336
    4. 'length' → logprob: -12.508413314819336
    5. '.len' → logprob: -13.758413314819336
    6. '.' → logprob: -14.008413314819336
    7. 'Vector' → logprob: -14.758413314819336
    8. '```' → logprob: -14.883413314819336
    9. '(vector' → logprob: -15.258413314819336
    10. '.v' → logprob: -15.258413314819336

Token 717: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006542947143316269
    2. '<|end|>' → logprob: -5.131543159484863
    3. '()
' → logprob: -8.006543159484863
    4. '(' → logprob: -9.256543159484863
    5. '()\' → logprob: -10.131543159484863
    6. '()

' → logprob: -10.381543159484863
    7. '<|end|>' → logprob: -10.631543159484863
    8. 'def' → logprob: -10.881543159484863
    9. '()*' → logprob: -11.256543159484863
    10. '())' → logprob: -11.756543159484863

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33982282876968384
    2. '
' → logprob: -1.339822769165039
    3. '<|end|>' → logprob: -3.714822769165039
    4. '    
' → logprob: -7.089822769165039
    5. 'class' → logprob: -7.839822769165039
    6. '<|end|>' → logprob: -8.339822769165039
    7. ' ' → logprob: -9.714822769165039
    8. '

' → logprob: -9.714822769165039
    9. '```' → logprob: -9.839822769165039
    10. ' 
' → logprob: -10.589822769165039

Token 719: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20226344466209412
    2. '   ' → logprob: -1.7022634744644165
    3. 'class' → logprob: -7.202263355255127
    4. ' def' → logprob: -9.702263832092285
    5. '
' → logprob: -11.327263832092285
    6. '    
' → logprob: -11.577263832092285
    7. ' ' → logprob: -11.702263832092285
    8. '	def' → logprob: -11.952263832092285
    9. '  ' → logprob: -12.702263832092285
    10. '```' → logprob: -13.077263832092285

Token 720: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0014016677159816027
    2. 'def' → logprob: -7.001401901245117
    3. ' distance' → logprob: -8.376401901245117
    4. 'project' → logprob: -9.001401901245117
    5. 'projection' → logprob: -9.126401901245117
    6. 'point' → logprob: -11.626401901245117
    7. 'is' → logprob: -12.251401901245117
    8. 'in' → logprob: -12.751401901245117
    9. '_distance' → logprob: -13.626401901245117
    10. 'class' → logprob: -13.626401901245117

Token 721: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -2.0219828002154827e-05
    2. 'to' → logprob: -11.125020027160645
    3. 'To' → logprob: -13.125020027160645
    4. '_from' → logprob: -13.250020027160645
    5. '_' → logprob: -14.750020027160645
    6. '   ' → logprob: -14.750020027160645
    7. ' to' → logprob: -15.250020027160645
    8. '(' → logprob: -16.00002098083496
    9. '```' → logprob: -16.12502098083496
    10. '_TO' → logprob: -16.75002098083496

Token 722: '_segment' (ID: 71041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5362998247146606
    2. 'seg' → logprob: -1.5362998247146606
    3. '_segment' → logprob: -2.036299705505371
    4. 'line' → logprob: -3.411299705505371
    5. 'point' → logprob: -3.911299705505371
    6. '_point' → logprob: -4.536299705505371
    7. '_seg' → logprob: -5.661299705505371
    8. '_line' → logprob: -6.161299705505371
    9. 'self' → logprob: -10.536299705505371
    10. '```' → logprob: -11.536299705505371

Token 723: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.538490950129926e-05
    2. '(' → logprob: -9.875055313110352
    3. ' (' → logprob: -13.375055313110352
    4. '(s' → logprob: -14.250055313110352
    5. 'self' → logprob: -14.500055313110352
    6. '(
' → logprob: -14.500055313110352
    7. '   ' → logprob: -15.000055313110352
    8. '       ' → logprob: -15.750055313110352
    9. '(se' → logprob: -16.50005531311035
    10. ' self' → logprob: -17.87505531311035

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22566798329353333
    2. '(self' → logprob: -1.725667953491211
    3. 'self' → logprob: -4.475667953491211
    4. '       ' → logprob: -4.725667953491211
    5. '   ' → logprob: -5.975667953491211
    6. ')' → logprob: -7.225667953491211
    7. '',' → logprob: -9.225667953491211
    8. ' self' → logprob: -9.850667953491211
    9. '(' → logprob: -10.100667953491211
    10. ' (' → logprob: -10.100667953491211

Token 725: ' seg' (ID: 3055)
  Prédit: ' seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.6226934194564819
    2. 'seg' → logprob: -0.8726934194564819
    3. 'self' → logprob: -3.1226935386657715
    4. ' self' → logprob: -6.4976935386657715
    5. '       ' → logprob: -10.122693061828613
    6. 'segment' → logprob: -10.247693061828613
    7. '   ' → logprob: -10.247693061828613
    8. '(seg' → logprob: -11.997693061828613
    9. ' segment' → logprob: -12.372693061828613
    10. 'def' → logprob: -12.747693061828613

Token 726: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01765475980937481
    2. ')' → logprob: -4.267654895782471
    3. '   ' → logprob: -5.892654895782471
    4. '       ' → logprob: -8.267654418945312
    5. '):
' → logprob: -9.267654418945312
    6. '):' → logprob: -9.267654418945312
    7. ''' → logprob: -9.642654418945312
    8. 'self' → logprob: -9.892654418945312
    9. '')' → logprob: -10.267654418945312
    10. '(self' → logprob: -10.767654418945312

Token 727: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016297345981001854
    2. ' '' → logprob: -4.141297340393066
    3. ''S' → logprob: -9.516297340393066
    4. ')' → logprob: -9.766297340393066
    5. '   ' → logprob: -9.891297340393066
    6. 'Segment' → logprob: -10.516297340393066
    7. ' ' → logprob: -11.516297340393066
    8. '`' → logprob: -11.891297340393066
    9. ''s' → logprob: -12.016297340393066
    10. '('' → logprob: -12.141297340393066

Token 728: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.00016313401283696294
    2. 'Point' → logprob: -8.750163078308105
    3. ' Segment' → logprob: -12.375163078308105
    4. 'segment' → logprob: -15.875163078308105
    5. '_segment' → logprob: -16.750164031982422
    6. 'Distance' → logprob: -16.750164031982422
    7. 'class' → logprob: -17.125164031982422
    8. 'def' → logprob: -17.250164031982422
    9. 'Seg' → logprob: -17.375164031982422
    10. ''' → logprob: -17.875164031982422

Token 729: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024822709383443
    2. '')' → logprob: -8.500247955322266
    3. '   ' → logprob: -10.500247955322266
    4. '       ' → logprob: -11.500247955322266
    5. ' )' → logprob: -13.125247955322266
    6. 'self' → logprob: -13.125247955322266
    7. '):
' → logprob: -13.750247955322266
    8. 'def' → logprob: -14.375247955322266
    9. '")' → logprob: -15.250247955322266
    10. '`)' → logprob: -15.500247955322266

Token 730: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6480700373649597
    2. ')' → logprob: -1.2730700969696045
    3. '->' → logprob: -2.2730700969696045
    4. '       ' → logprob: -2.8980700969696045
    5. '   ' → logprob: -3.6480700969696045
    6. ':' → logprob: -5.273069858551025
    7. 'def' → logprob: -5.898069858551025
    8. '(self' → logprob: -6.023069858551025
    9. '()' → logprob: -6.773069858551025
    10. ' def' → logprob: -7.648069858551025

Token 731: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00524075236171484
    2. ' float' → logprob: -5.2552409172058105
    3. '   ' → logprob: -12.505240440368652
    4. '	float' → logprob: -14.130240440368652
    5. ' ' → logprob: -14.380240440368652
    6. '(float' → logprob: -15.005240440368652
    7. '       ' → logprob: -15.005240440368652
    8. '```' → logprob: -15.255240440368652
    9. ''' → logprob: -16.00524139404297
    10. 'Float' → logprob: -16.13024139404297

Token 732: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1639786660671234
    2. ':
' → logprob: -2.0389785766601562
    3. '       ' → logprob: -3.9139785766601562
    4. '   ' → logprob: -7.288978576660156
    5. '):
' → logprob: -8.413978576660156
    6. '():
' → logprob: -9.538978576660156
    7. '(self' → logprob: -10.288978576660156
    8. '):' → logprob: -10.788978576660156
    9. ')' → logprob: -11.538978576660156
    10. '(' → logprob: -11.538978576660156

Token 733: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031932818237692118
    2. 'if' → logprob: -6.003193378448486
    3. '   ' → logprob: -7.503193378448486
    4. 'd' → logprob: -9.378192901611328
    5. ' if' → logprob: -10.128192901611328
    6. '
' → logprob: -10.503192901611328
    7. '```' → logprob: -12.753192901611328
    8. 'p' → logprob: -12.878192901611328
    9. 't' → logprob: -13.503192901611328
    10. '        
' → logprob: -14.003192901611328

Token 734: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00146558100823313
    2. '   ' → logprob: -6.751465797424316
    3. '       ' → logprob: -9.001465797424316
    4. 'd' → logprob: -9.751465797424316
    5. 'r' → logprob: -10.251465797424316
    6. 't' → logprob: -10.251465797424316
    7. 'v' → logprob: -11.751465797424316
    8. ' if' → logprob: -11.876465797424316
    9. '           ' → logprob: -12.126465797424316
    10. 'return' → logprob: -12.251465797424316

Token 735: ' not' (ID: 625)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.5320610404014587
    2. 'self' → logprob: -0.9070610404014587
    3. ' seg' → logprob: -5.2820611000061035
    4. ' self' → logprob: -6.0320611000061035
    5. '   ' → logprob: -6.7820611000061035
    6. 'not' → logprob: -9.157060623168945
    7. ' ' → logprob: -9.907060623168945
    8. '(seg' → logprob: -10.157060623168945
    9. '  ' → logprob: -10.282060623168945
    10. ' not' → logprob: -11.657060623168945

Token 736: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16555270552635193
    2. 'seg' → logprob: -1.9155527353286743
    3. ' self' → logprob: -5.665552616119385
    4. ' seg' → logprob: -7.290552616119385
    5. '(self' → logprob: -7.540552616119385
    6. '(seg' → logprob: -7.665552616119385
    7. ' (' → logprob: -10.165553092956543
    8. '(' → logprob: -10.415553092956543
    9. '       ' → logprob: -10.540553092956543
    10. '   ' → logprob: -10.790553092956543

Token 737: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.0008105786982923746
    2. '.' → logprob: -7.375810623168945
    3. 'in' → logprob: -8.750810623168945
    4. '   ' → logprob: -11.250810623168945
    5. ' .' → logprob: -11.750810623168945
    6. ' in' → logprob: -12.875810623168945
    7. '       ' → logprob: -14.625810623168945
    8. '[in' → logprob: -15.250810623168945
    9. '.is' → logprob: -15.500810623168945
    10. ' ' → logprob: -15.500810623168945

Token 738: '_side' (ID: 46130)
  Prédit: '_width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.0017472924664616585
    2. 'width' → logprob: -6.501747131347656
    3. 'seg' → logprob: -9.251747131347656
    4. '_side' → logprob: -10.001747131347656
    5. 'Width' → logprob: -10.251747131347656
    6. 'side' → logprob: -10.376747131347656
    7. 'segment' → logprob: -10.626747131347656
    8. '   ' → logprob: -13.001747131347656
    9. '(seg' → logprob: -13.001747131347656
    10. 'in' → logprob: -13.501747131347656

Token 739: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -9.102680633077398e-05
    2. 'of' → logprob: -9.375090599060059
    3. ' of' → logprob: -13.250090599060059
    4. '       ' → logprob: -13.625090599060059
    5. '   ' → logprob: -13.750090599060059
    6. 'Of' → logprob: -13.750090599060059
    7. '(of' → logprob: -14.500090599060059
    8. 's' → logprob: -15.375090599060059
    9. '```' → logprob: -16.500091552734375
    10. '(' → logprob: -17.125091552734375

Token 740: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -2.696889623621246e-06
    2. 'seg' → logprob: -13.00000286102295
    3. '(segment' → logprob: -15.50000286102295
    4. '(' → logprob: -16.750001907348633
    5. '(sel' → logprob: -18.000001907348633
    6. '(sess' → logprob: -18.750001907348633
    7. '(se' → logprob: -18.750001907348633
    8. ' (' → logprob: -18.750001907348633
    9. '(seq' → logprob: -19.125001907348633
    10. '```' → logprob: -19.125001907348633

Token 741: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7567948698997498
    2. '):
' → logprob: -1.0067949295043945
    3. ')' → logprob: -1.8817949295043945
    4. '       ' → logprob: -4.7567949295043945
    5. '()' → logprob: -6.3817949295043945
    6. '()):
' → logprob: -6.8817949295043945
    7. '   ' → logprob: -7.1317949295043945
    8. '():
' → logprob: -8.506794929504395
    9. '():' → logprob: -9.006794929504395
    10. '())' → logprob: -9.131794929504395

Token 742: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31638044118881226
    2. '           ' → logprob: -1.316380500793457
    3. ':' → logprob: -5.941380500793457
    4. ' and' → logprob: -8.691380500793457
    5. ' or' → logprob: -9.441380500793457
    6. 'return' → logprob: -9.816380500793457
    7. ' return' → logprob: -10.316380500793457
    8. '   ' → logprob: -10.691380500793457
    9. ':
' → logprob: -10.691380500793457
    10. ',' → logprob: -10.941380500793457

Token 743: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004402463324368
    2. '           ' → logprob: -5.6294026374816895
    3. '       ' → logprob: -7.5044026374816895
    4. ' return' → logprob: -8.879402160644531
    5. 'min' → logprob: -9.254402160644531
    6. 'seg' → logprob: -12.504402160644531
    7. '   ' → logprob: -13.004402160644531
    8. 'self' → logprob: -13.004402160644531
    9. '(seg' → logprob: -13.004402160644531
    10. '	return' → logprob: -13.504402160644531

Token 744: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24778106808662415
    2. '(self' → logprob: -1.6227810382843018
    3. '           ' → logprob: -3.8727810382843018
    4. '(seg' → logprob: -7.497781276702881
    5. 'seg' → logprob: -7.872781276702881
    6. ' self' → logprob: -9.122780799865723
    7. 'min' → logprob: -9.372780799865723
    8. ' (' → logprob: -9.747780799865723
    9. 'se' → logprob: -10.497780799865723
    10. '               ' → logprob: -10.747780799865723

Token 745: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -4.644463479053229e-05
    2. 'distance' → logprob: -10.750046730041504
    3. '.' → logprob: -11.375046730041504
    4. ' .' → logprob: -11.625046730041504
    5. '.dist' → logprob: -13.750046730041504
    6. '.d' → logprob: -14.000046730041504
    7. '.vector' → logprob: -14.500046730041504
    8. '.segment' → logprob: -14.500046730041504
    9. '.point' → logprob: -15.500046730041504
    10. '   ' → logprob: -15.625046730041504

Token 746: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -2.093505099765025e-05
    2. 'seg' → logprob: -11.500020980834961
    3. '(
' → logprob: -12.250020980834961
    4. '(' → logprob: -12.875020980834961
    5. 'to' → logprob: -13.000020980834961
    6. '(segment' → logprob: -14.250020980834961
    7. '```' → logprob: -15.500020980834961
    8. 'To' → logprob: -15.750020980834961
    9. '(sess' → logprob: -16.37502098083496
    10. '(se' → logprob: -17.00002098083496

Token 747: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.53050296427682e-05
    2. 'p' → logprob: -10.25008487701416
    3. '.' → logprob: -10.37508487701416
    4. ').' → logprob: -11.75008487701416
    5. '.s' → logprob: -12.62508487701416
    6. ' .' → logprob: -13.00008487701416
    7. '```' → logprob: -13.25008487701416
    8. ')' → logprob: -14.37508487701416
    9. '
' → logprob: -14.62508487701416
    10. '   ' → logprob: -15.00008487701416

Token 748: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008116515236906707
    2. 'oint' → logprob: -7.625811576843262
    3. 'oints' → logprob: -8.250811576843262
    4. '2' → logprob: -9.750811576843262
    5. ')' → logprob: -14.250811576843262
    6. '0' → logprob: -14.375811576843262
    7. '```' → logprob: -14.375811576843262
    8. '   ' → logprob: -14.750811576843262
    9. 'oin' → logprob: -15.000811576843262
    10. ' ' → logprob: -15.250811576843262

Token 749: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4421767294406891
    2. ')' → logprob: -1.0671766996383667
    3. '       ' → logprob: -4.317176818847656
    4. ')
' → logprob: -10.567176818847656
    5. ')

' → logprob: -11.442176818847656
    6. '   ' → logprob: -12.317176818847656
    7. ' )
' → logprob: -12.942176818847656
    8. ' )' → logprob: -14.067176818847656
    9. '           ' → logprob: -14.567176818847656
    10. '),' → logprob: -14.817176818847656

Token 750: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015097891446202993
    2. '<|end|>' → logprob: -9.125150680541992
    3. '   ' → logprob: -11.375150680541992
    4. '<|end|>' → logprob: -11.750150680541992
    5. ')' → logprob: -12.125150680541992
    6. 'elif' → logprob: -12.625150680541992
    7. ' if' → logprob: -13.250150680541992
    8. '           ' → logprob: -13.500150680541992
    9. ',' → logprob: -13.500150680541992
    10. ' or' → logprob: -14.125150680541992

Token 751: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1843208372592926
    2. 'elif' → logprob: -2.3093209266662598
    3. '       ' → logprob: -2.6843209266662598
    4. '   ' → logprob: -7.43432092666626
    5. ' if' → logprob: -9.059320449829102
    6. ' elif' → logprob: -10.809320449829102
    7. '        
' → logprob: -12.934320449829102
    8. '
' → logprob: -14.059320449829102
    9. '           ' → logprob: -14.309320449829102
    10. '	if' → logprob: -14.684320449829102

Token 752: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014093693345785141
    2. ' not' → logprob: -4.38909387588501
    3. '   ' → logprob: -6.51409387588501
    4. '       ' → logprob: -10.014093399047852
    5. '(not' → logprob: -11.014093399047852
    6. '           ' → logprob: -11.264093399047852
    7. 'self' → logprob: -12.014093399047852
    8. '  ' → logprob: -12.514093399047852
    9. '	not' → logprob: -12.639093399047852
    10. ' ' → logprob: -12.639093399047852

Token 753: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005013240152038634
    2. ' self' → logprob: -7.6255011558532715
    3. '       ' → logprob: -11.75050163269043
    4. '   ' → logprob: -13.37550163269043
    5. '           ' → logprob: -13.50050163269043
    6. '(self' → logprob: -13.62550163269043
    7. 's' → logprob: -15.37550163269043
    8. '  ' → logprob: -15.50050163269043
    9. '
' → logprob: -15.62550163269043
    10. ' ' → logprob: -15.87550163269043

Token 754: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.0006877713603898883
    2. '.' → logprob: -7.750687599182129
    3. 'in' → logprob: -8.375687599182129
    4. ' .' → logprob: -11.250687599182129
    5. ' in' → logprob: -12.500687599182129
    6. '..' → logprob: -13.500687599182129
    7. '   ' → logprob: -13.625687599182129
    8. '.is' → logprob: -13.875687599182129
    9. 'In' → logprob: -14.375687599182129
    10. '.
' → logprob: -14.500687599182129

Token 755: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.6955375671386719
    2. 'side' → logprob: -0.9455375671386719
    3. '_width' → logprob: -2.320537567138672
    4. 'width' → logprob: -4.445537567138672
    5. 'in' → logprob: -5.945537567138672
    6. 'Side' → logprob: -10.570537567138672
    7. '
' → logprob: -10.820537567138672
    8. 'range' → logprob: -11.320537567138672
    9. 'segment' → logprob: -11.695537567138672
    10. '_inside' → logprob: -11.820537567138672

Token 756: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.474201500415802
    2. 'of' → logprob: -0.974201500415802
    3. ' of' → logprob: -9.349201202392578
    4. 'Of' → logprob: -10.599201202392578
    5. '_side' → logprob: -12.599201202392578
    6. 'side' → logprob: -12.599201202392578
    7. '	of' → logprob: -13.599201202392578
    8. '(of' → logprob: -13.849201202392578
    9. '       ' → logprob: -13.974201202392578
    10. 'ofstream' → logprob: -14.474201202392578

Token 757: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.003180921310558915
    2. 'seg' → logprob: -5.753180980682373
    3. '(' → logprob: -13.253180503845215
    4. ' seg' → logprob: -13.878180503845215
    5. '   ' → logprob: -16.00318145751953
    6. '(
' → logprob: -16.37818145751953
    7. '(segment' → logprob: -16.37818145751953
    8. '```' → logprob: -16.50318145751953
    9. '(se' → logprob: -17.00318145751953
    10. 's' → logprob: -17.37818145751953

Token 758: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.0002036595979006961
    2. '.' → logprob: -8.750204086303711
    3. 'reverse' → logprob: -10.250204086303711
    4. ' .' → logprob: -12.250204086303711
    5. '   ' → logprob: -12.750204086303711
    6. ')' → logprob: -14.500204086303711
    7. ').' → logprob: -14.625204086303711
    8. '.re' → logprob: -14.875204086303711
    9. '(reverse' → logprob: -15.750204086303711
    10. '[::-' → logprob: -15.875204086303711

Token 759: '()):
' (ID: 83536)
  Prédit: '()):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()):
' → logprob: -0.4288922846317291
    2. '()' → logprob: -1.0538922548294067
    3. '())' → logprob: -9.178892135620117
    4. '):
' → logprob: -9.928892135620117
    5. '(' → logprob: -11.553892135620117
    6. '():
' → logprob: -11.803892135620117
    7. '):' → logprob: -12.053892135620117
    8. ' (' → logprob: -12.428892135620117
    9. '():' → logprob: -12.553892135620117
    10. '   ' → logprob: -12.678892135620117

Token 760: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02120198681950569
    2. '       ' → logprob: -3.8962020874023438
    3. 'return' → logprob: -7.396202087402344
    4. ' return' → logprob: -10.146202087402344
    5. '	       ' → logprob: -12.396202087402344
    6. '               ' → logprob: -13.771202087402344
    7. '   ' → logprob: -14.896202087402344
    8. '```' → logprob: -15.021202087402344
    9. ':return' → logprob: -15.271202087402344
    10. '{return' → logprob: -15.521202087402344

Token 761: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25239312648773193
    2. ' return' → logprob: -1.752393126487732
    3. '       ' → logprob: -3.0023932456970215
    4. '           ' → logprob: -10.502392768859863
    5. '	return' → logprob: -12.252392768859863
    6. '{return' → logprob: -14.377392768859863
    7. '   ' → logprob: -14.627392768859863
    8. '```' → logprob: -15.377392768859863
    9. ' ' → logprob: -15.502392768859863
    10. ':return' → logprob: -15.877392768859863

Token 762: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078878089785576
    2. ' self' → logprob: -5.5040788650512695
    3. '       ' → logprob: -15.50407886505127
    4. '           ' → logprob: -16.254079818725586
    5. '	self' → logprob: -16.504079818725586
    6. '(self' → logprob: -16.754079818725586
    7. 'Self' → logprob: -16.754079818725586
    8. '[self' → logprob: -18.129079818725586
    9. ' ' → logprob: -19.129079818725586
    10. '
' → logprob: -19.129079818725586

Token 763: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.001502598519437015
    2. 'distance' → logprob: -6.501502513885498
    3. '(distance' → logprob: -15.876502990722656
    4. '.' → logprob: -16.876502990722656
    5. ' distance' → logprob: -16.876502990722656
    6. 'Distance' → logprob: -17.626502990722656
    7. ' .' → logprob: -17.876502990722656
    8. '.dist' → logprob: -18.876502990722656
    9. '距离' → logprob: -19.376502990722656
    10. '.Distance' → logprob: -19.501502990722656

Token 764: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -7.52919222577475e-05
    2. 'seg' → logprob: -9.500075340270996
    3. '(' → logprob: -15.500075340270996
    4. '(segment' → logprob: -17.12507438659668
    5. '(s' → logprob: -17.25007438659668
    6. '(
' → logprob: -17.37507438659668
    7. '(Point' → logprob: -17.62507438659668
    8. 'Point' → logprob: -18.00007438659668
    9. ' seg' → logprob: -18.50007438659668
    10. '.seg' → logprob: -18.75007438659668

Token 765: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.003946367651224136
    2. 'p' → logprob: -5.628946304321289
    3. '2' → logprob: -8.128946304321289
    4. '```' → logprob: -10.628946304321289
    5. '.' → logprob: -11.628946304321289
    6. '1' → logprob: -12.003946304321289
    7. ' p' → logprob: -13.253946304321289
    8. ')' → logprob: -13.253946304321289
    9. '<p' → logprob: -13.378946304321289
    10. ').' → logprob: -13.753946304321289

Token 766: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3782830137643032e-05
    2. '1' → logprob: -11.62501335144043
    3. '0' → logprob: -12.62501335144043
    4. '```' → logprob: -14.62501335144043
    5. ' ' → logprob: -15.37501335144043
    6. '   ' → logprob: -15.37501335144043
    7. ')' → logprob: -16.12501335144043
    8. '۲' → logprob: -16.75001335144043
    9. 'p' → logprob: -16.87501335144043
    10. '[' → logprob: -17.12501335144043

Token 767: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013058334589004517
    2. ')
' → logprob: -7.001306056976318
    3. '       ' → logprob: -8.00130558013916
    4. '())' → logprob: -10.37630558013916
    5. '()' → logprob: -10.62630558013916
    6. ' )' → logprob: -13.62630558013916
    7. ')
' → logprob: -14.12630558013916
    8. '   ' → logprob: -15.00130558013916
    9. ')

' → logprob: -15.25130558013916
    10. '())
' → logprob: -15.37630558013916

Token 768: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024370834580622613
    2. '
' → logprob: -9.000244140625
    3. 'return' → logprob: -9.500244140625
    4. '   ' → logprob: -11.500244140625
    5. '	' → logprob: -11.500244140625
    6. ' return' → logprob: -12.125244140625
    7. '        
' → logprob: -12.500244140625
    8. '```' → logprob: -12.500244140625
    9. '<|end|>' → logprob: -12.625244140625
    10. '           ' → logprob: -12.750244140625

Token 769: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03062732331454754
    2. '       ' → logprob: -3.5306272506713867
    3. ' return' → logprob: -7.655627250671387
    4. 'self' → logprob: -8.030627250671387
    5. '   ' → logprob: -10.655627250671387
    6. '           ' → logprob: -10.655627250671387
    7. 'abs' → logprob: -11.030627250671387
    8. '```' → logprob: -11.905627250671387
    9. '
' → logprob: -12.405627250671387
    10. '	return' → logprob: -13.530627250671387

Token 770: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3059285879135132
    2. '           ' → logprob: -2.0559287071228027
    3. ' return' → logprob: -2.5559287071228027
    4. 'return' → logprob: -2.9309287071228027
    5. ' self' → logprob: -6.680928707122803
    6. 'self' → logprob: -6.805928707122803
    7. ':
' → logprob: -7.430928707122803
    8. '   ' → logprob: -7.555928707122803
    9. '	return' → logprob: -8.180928230285645
    10. ':return' → logprob: -8.305928230285645

Token 771: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22648125886917114
    2. 'self' → logprob: -2.4764811992645264
    3. 'return' → logprob: -2.8514811992645264
    4. '           ' → logprob: -2.8514811992645264
    5. ' self' → logprob: -6.4764814376831055
    6. ' return' → logprob: -6.6014814376831055
    7. '   ' → logprob: -8.976481437683105
    8. '               ' → logprob: -9.976481437683105
    9. '
' → logprob: -11.726481437683105
    10. 'abs' → logprob: -11.976481437683105

Token 772: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00822742935270071
    2. 'return' (adapté à ' return') → logprob: -5.008227348327637
    3. 'abs' → logprob: -6.633227348327637
    4. '           ' → logprob: -8.883227348327637
    5. ' self' → logprob: -10.383227348327637
    6. '       ' → logprob: -10.758227348327637
    7. '   ' → logprob: -13.758227348327637
    8. '
' → logprob: -13.758227348327637
    9. ' return' → logprob: -14.883227348327637
    10. ' abs' → logprob: -15.008227348327637

Token 773: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00032473751343786716
    2. 'abs' → logprob: -8.125325202941895
    3. ' self' → logprob: -10.875325202941895
    4. '           ' → logprob: -12.375325202941895
    5. '   ' → logprob: -12.750325202941895
    6. '       ' → logprob: -13.125325202941895
    7. '(self' → logprob: -16.000324249267578
    8. '	self' → logprob: -16.000324249267578
    9. 'float' → logprob: -16.000324249267578
    10. '
' → logprob: -16.625324249267578

Token 774: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -1.2233183042553719e-05
    2. 'distance' → logprob: -11.375012397766113
    3. ' .' → logprob: -15.375012397766113
    4. '.' → logprob: -15.750012397766113
    5. ').' → logprob: -16.500011444091797
    6. '(distance' → logprob: -16.500011444091797
    7. ' distance' → logprob: -16.875011444091797
    8. '.abs' → logprob: -16.875011444091797
    9. '.d' → logprob: -18.875011444091797
    10. '.point' → logprob: -19.000011444091797

Token 775: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.017209243029356003
    2. 'to' → logprob: -4.142209053039551
    3. 'To' → logprob: -6.767209053039551
    4. '(seg' → logprob: -12.01720905303955
    5. ' to' → logprob: -12.39220905303955
    6. '(' → logprob: -13.14220905303955
    7. '((' → logprob: -13.14220905303955
    8. '```' → logprob: -13.14220905303955
    9. '-to' → logprob: -14.26720905303955
    10. 'point' → logprob: -14.26720905303955

Token 776: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.228561349213123e-05
    2. 'line' → logprob: -9.875052452087402
    3. '_segment' → logprob: -15.000052452087402
    4. '```' → logprob: -15.625052452087402
    5. '_point' → logprob: -15.750052452087402
    6. 'segment' → logprob: -16.625051498413086
    7. ' line' → logprob: -17.250051498413086
    8. '_LINE' → logprob: -18.000051498413086
    9. 'Line' → logprob: -18.375051498413086
    10. '
' → logprob: -18.500051498413086

Token 777: '(seg' (ID: 140462)
  Prédit: '(seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seg' → logprob: -2.696889623621246e-06
    2. '(se' → logprob: -13.87500286102295
    3. '(self' → logprob: -14.37500286102295
    4. '(' → logprob: -14.75000286102295
    5. 'seg' → logprob: -14.87500286102295
    6. '(segment' → logprob: -15.25000286102295
    7. '(sel' → logprob: -16.000001907348633
    8. '(
' → logprob: -17.500001907348633
    9. '(sess' → logprob: -17.750001907348633
    10. '```' → logprob: -18.000001907348633

Token 778: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018744789122138172
    2. '       ' → logprob: -9.125187873840332
    3. ')
' → logprob: -9.500187873840332
    4. '   ' → logprob: -14.000187873840332
    5. ' )' → logprob: -14.000187873840332
    6. '(seg' → logprob: -14.500187873840332
    7. '(' → logprob: -14.875187873840332
    8. '())' → logprob: -15.125187873840332
    9. '<|end|>' → logprob: -15.750187873840332
    10. '```' → logprob: -16.125186920166016

Token 779: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1479852795600891
    2. '
' → logprob: -2.5229852199554443
    3. '   ' → logprob: -2.8979852199554443
    4. 'def' → logprob: -7.022985458374023
    5. '```' → logprob: -7.147985458374023
    6. '    
' → logprob: -8.647985458374023
    7. '<|end|>' → logprob: -8.647985458374023
    8. 'from' → logprob: -10.522985458374023
    9. '

' → logprob: -10.772985458374023
    10. '        
' → logprob: -11.397985458374023

Token 780: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0002003218833124265
    2. '
' → logprob: -8.625200271606445
    3. '   ' → logprob: -11.250200271606445
    4. 'def' (adapté à ' def') → logprob: -12.375200271606445
    5. 'from' → logprob: -12.875200271606445
    6. '    
' → logprob: -14.750200271606445
    7. '       ' → logprob: -15.375200271606445
    8. '```' → logprob: -16.625200271606445
    9. '

' → logprob: -16.875200271606445
    10. ' class' → logprob: -17.000200271606445

Token 781: ' location' (ID: 5100)
  Prédit: 'project'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'project' → logprob: -0.636188268661499
    2. 'projection' → logprob: -0.886188268661499
    3. 'proj' → logprob: -3.386188268661499
    4. 'rotate' → logprob: -4.761188507080078
    5. 'to' → logprob: -6.136188507080078
    6. 'distance' → logprob: -6.136188507080078
    7. 'normalize' → logprob: -6.761188507080078
    8. 'reflect' → logprob: -6.761188507080078
    9. 'cc' → logprob: -6.886188507080078
    10. 'polar' → logprob: -7.136188507080078

Token 782: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005312023684382439
    2. '(' → logprob: -5.255311965942383
    3. 'self' → logprob: -10.880311965942383
    4. 'of' → logprob: -11.380311965942383
    5. '(
' → logprob: -11.755311965942383
    6. '_to' → logprob: -11.880311965942383
    7. '   ' → logprob: -12.005311965942383
    8. ' (' → logprob: -12.005311965942383
    9. '_of' → logprob: -12.005311965942383
    10. '_(' → logprob: -13.005311965942383

Token 783: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13706696033477783
    2. ')' → logprob: -3.3870668411254883
    3. 'self' → logprob: -3.7620668411254883
    4. '   ' → logprob: -3.7620668411254883
    5. ',' → logprob: -4.012066841125488
    6. '(' → logprob: -4.887066841125488
    7. '       ' → logprob: -5.012066841125488
    8. ')(' → logprob: -6.012066841125488
    9. 'of' → logprob: -6.262066841125488
    10. 'def' → logprob: -6.262066841125488

Token 784: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.39067211747169495
    2. 'self' → logprob: -1.7656720876693726
    3. 'other' → logprob: -2.390672206878662
    4. 'p' → logprob: -3.140672206878662
    5. ' seg' → logprob: -4.390672206878662
    6. ' other' → logprob: -6.765672206878662
    7. '   ' → logprob: -7.015672206878662
    8. 'segment' → logprob: -7.265672206878662
    9. ' p' → logprob: -7.390672206878662
    10. 'point' → logprob: -7.390672206878662

Token 785: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.056504443287849426
    2. '(self' → logprob: -3.181504487991333
    3. ')' → logprob: -5.181504249572754
    4. ',' → logprob: -5.306504249572754
    5. '   ' → logprob: -6.931504249572754
    6. 'self' → logprob: -7.181504249572754
    7. '       ' → logprob: -7.931504249572754
    8. '):' → logprob: -8.181504249572754
    9. 'def' → logprob: -9.306504249572754
    10. '(' → logprob: -9.431504249572754

Token 786: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.049964532256126404
    2. ' '' → logprob: -3.174964427947998
    3. ''s' → logprob: -5.299964427947998
    4. ''S' → logprob: -6.674964427947998
    5. '   ' → logprob: -8.549964904785156
    6. ')' → logprob: -8.549964904785156
    7. 'Segment' → logprob: -8.924964904785156
    8. '       ' → logprob: -10.174964904785156
    9. ' ' → logprob: -10.299964904785156
    10. 'Point' → logprob: -10.674964904785156

Token 787: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.014181245118379593
    2. 'Point' → logprob: -4.264181137084961
    3. ' Segment' → logprob: -11.014181137084961
    4. 'Seg' → logprob: -14.889181137084961
    5. '   ' → logprob: -15.389181137084961
    6. '_segment' → logprob: -15.514181137084961
    7. ' Point' → logprob: -15.764181137084961
    8. ' ' → logprob: -15.889181137084961
    9. '	Point' → logprob: -17.01418113708496
    10. 'Sequence' → logprob: -17.26418113708496

Token 788: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0036334465257823467
    2. ')' → logprob: -5.628633499145508
    3. ''):
' → logprob: -11.253633499145508
    4. '',' → logprob: -11.878633499145508
    5. '")' → logprob: -12.003633499145508
    6. ''):' → logprob: -13.003633499145508
    7. '')->' → logprob: -14.128633499145508
    8. '   ' → logprob: -14.253633499145508
    9. ',' → logprob: -14.378633499145508
    10. ''' → logprob: -14.503633499145508

Token 789: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01169005036354065
    2. ')' → logprob: -5.136690139770508
    3. '->' → logprob: -5.886690139770508
    4. '       ' → logprob: -6.511690139770508
    5. ' ->' → logprob: -6.886690139770508
    6. '   ' → logprob: -8.511690139770508
    7. 'self' → logprob: -8.761690139770508
    8. 'def' → logprob: -9.636690139770508
    9. ' self' → logprob: -11.136690139770508
    10. ':' → logprob: -11.886690139770508

Token 790: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.11646711081266403
    2. 'int' → logprob: -2.491466999053955
    3. 'PL' → logprob: -4.366466999053955
    4. ''' → logprob: -4.866466999053955
    5. ' Point' → logprob: -5.241466999053955
    6. ' int' → logprob: -7.241466999053955
    7. ' PL' → logprob: -8.491467475891113
    8. '   ' → logprob: -8.616467475891113
    9. ' '' → logprob: -8.991467475891113
    10. '       ' → logprob: -10.116467475891113

Token 791: 'Location' (ID: 5998)
  Prédit: 'Location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Location' → logprob: -1.676292231422849e-05
    2. '   ' → logprob: -11.125017166137695
    3. ' Location' → logprob: -14.000017166137695
    4. '       ' → logprob: -14.375017166137695
    5. 'location' → logprob: -15.500017166137695
    6. '<Location' → logprob: -16.000017166137695
    7. '.Location' → logprob: -16.625017166137695
    8. '_location' → logprob: -16.750017166137695
    9. '{
' → logprob: -17.125017166137695
    10. '(Location' → logprob: -18.000017166137695

Token 792: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0012613063445314765
    2. '       ' → logprob: -7.001261234283447
    3. '   ' → logprob: -8.626261711120605
    4. '(
' → logprob: -9.126261711120605
    5. '(' → logprob: -10.126261711120605
    6. 'self' → logprob: -12.001261711120605
    7. '(s' → logprob: -12.626261711120605
    8. ':' → logprob: -13.251261711120605
    9. ' (' → logprob: -13.376261711120605
    10. '	self' → logprob: -13.376261711120605

Token 793: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00041613372741267085
    2. '
' → logprob: -7.875416278839111
    3. '   ' → logprob: -10.500415802001953
    4. ',' → logprob: -14.000415802001953
    5. '```' → logprob: -14.250415802001953
    6. 'a' → logprob: -14.375415802001953
    7. '           ' → logprob: -14.500415802001953
    8. '
' → logprob: -14.500415802001953
    9. 'v' → logprob: -14.625415802001953
    10. 't' → logprob: -14.750415802001953

Token 794: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24395273625850677
    2. 'vec' → logprob: -2.118952751159668
    3. 'v' → logprob: -3.493952751159668
    4. 'c' → logprob: -4.368952751159668
    5. '   ' → logprob: -4.493952751159668
    6. 'p' (adapté à ' p') → logprob: -4.493952751159668
    7. 'cross' → logprob: -4.493952751159668
    8. 'pa' → logprob: -5.868952751159668
    9. 'r' → logprob: -5.993952751159668
    10. 'cc' → logprob: -6.243952751159668

Token 795: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7970196008682251
    2. '=' → logprob: -1.047019600868225
    3. 'vec' → logprob: -3.2970194816589355
    4. 'vector' → logprob: -3.5470194816589355
    5. '1' → logprob: -3.6720194816589355
    6. 'os' → logprob: -3.9220194816589355
    7. 'r' → logprob: -4.1720194816589355
    8. '_vector' → logprob: -4.1720194816589355
    9. 'rel' → logprob: -4.6720194816589355
    10. '_rel' → logprob: -4.7970194816589355

Token 796: ' self' (ID: 1051)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.024020884186029434
    2. 'self' → logprob: -3.8990209102630615
    3. '(seg' → logprob: -6.024020671844482
    4. ' seg' → logprob: -7.024020671844482
    5. '(self' → logprob: -9.52402114868164
    6. '(' → logprob: -10.27402114868164
    7. '   ' → logprob: -11.14902114868164
    8. ' self' → logprob: -11.64902114868164
    9. ' (' → logprob: -12.02402114868164
    10. '((' → logprob: -12.52402114868164

Token 797: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14766712486743927
    2. ' -' → logprob: -2.022667169570923
    3. 'seg' → logprob: -5.772666931152344
    4. '-se' → logprob: -6.897666931152344
    5. '   ' → logprob: -8.772666931152344
    6. '-sub' → logprob: -8.897666931152344
    7. '(seg' → logprob: -8.897666931152344
    8. ' ' → logprob: -9.397666931152344
    9. '
' → logprob: -9.647666931152344
    10. ' seg' → logprob: -10.022666931152344

Token 798: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0007135047344490886
    2. ' seg' → logprob: -7.250713348388672
    3. '(seg' → logprob: -12.750713348388672
    4. 'segment' → logprob: -15.125713348388672
    5. '   ' → logprob: -16.000713348388672
    6. 's' → logprob: -16.875713348388672
    7. 'sig' → logprob: -17.125713348388672
    8. '       ' → logprob: -17.250713348388672
    9. 'se' → logprob: -17.625713348388672
    10. ' ' → logprob: -17.750713348388672

Token 799: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.25
    3. '.' → logprob: -15.875
    4. ' .' → logprob: -18.125
    5. '.point' → logprob: -19.0
    6. '_.' → logprob: -20.875
    7. '<p' → logprob: -20.875
    8. '[' → logprob: -20.875
    9. '   ' → logprob: -21.125
    10. '```' → logprob: -21.25

Token 800: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'oint' → logprob: -16.75
    3. 'p' → logprob: -18.125
    4. '１' → logprob: -18.25
    5. '   ' → logprob: -18.625
    6. 'oints' → logprob: -18.625
    7. '```' → logprob: -19.875
    8. ' ' → logprob: -19.875
    9. 'r' → logprob: -20.125
    10. 'seg' → logprob: -20.125

Token 801: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043120451271533966
    2. 'p' → logprob: -3.5431203842163086
    3. 'seg' → logprob: -4.793120384216309
    4. 's' → logprob: -5.793120384216309
    5. 'point' → logprob: -8.043120384216309
    6. '   ' → logprob: -8.168120384216309
    7. 'pt' → logprob: -8.668120384216309
    8. 'segment' → logprob: -8.918120384216309
    9. 'return' → logprob: -9.168120384216309
    10. 'pl' → logprob: -9.418120384216309

Token 802: '       ' (ID: 309)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0061164903454482555
    2. ' q' → logprob: -5.5061163902282715
    3. '       ' → logprob: -6.8811163902282715
    4. 'seg' → logprob: -7.8811163902282715
    5. '   ' → logprob: -8.13111686706543
    6. 'p' → logprob: -8.38111686706543
    7. ' seg' → logprob: -10.50611686706543
    8. 's' → logprob: -10.63111686706543
    9. '	q' → logprob: -10.75611686706543
    10. 'v' → logprob: -12.00611686706543

Token 803: ' d' (ID: 272)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.012842882424592972
    2. 'seg' → logprob: -4.512842655181885
    3. 'v' → logprob: -6.887842655181885
    4. 's' → logprob: -8.012843132019043
    5. 'p' → logprob: -8.512843132019043
    6. 'vec' → logprob: -9.637843132019043
    7. '   ' → logprob: -10.012843132019043
    8. ' q' → logprob: -10.137843132019043
    9. 'r' → logprob: -11.012843132019043
    10. ' seg' → logprob: -11.262843132019043

Token 804: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30162513256073
    2. '=' → logprob: -1.42662513256073
    3. 'q' → logprob: -4.8016252517700195
    4. 'r' → logprob: -5.4266252517700195
    5. 'vec' → logprob: -6.0516252517700195
    6. '2' → logprob: -6.0516252517700195
    7. '1' → logprob: -6.5516252517700195
    8. '_' → logprob: -7.6766252517700195
    9. '   ' → logprob: -8.17662525177002
    10. '_=' → logprob: -8.55162525177002

Token 805: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.001381305861286819
    2. ' seg' → logprob: -6.6263813972473145
    3. '(seg' → logprob: -10.001380920410156
    4. 's' → logprob: -13.001380920410156
    5. 'sig' → logprob: -13.126380920410156
    6. '   ' → logprob: -13.376380920410156
    7. 'p' → logprob: -13.876380920410156
    8. 'sg' → logprob: -14.626380920410156
    9. 'se' → logprob: -14.876380920410156
    10. ' ' → logprob: -15.376380920410156

Token 806: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.03593168780207634
    2. 'vector' → logprob: -3.4109315872192383
    3. '.p' → logprob: -6.535931587219238
    4. 'p' → logprob: -7.410931587219238
    5. ' vector' → logprob: -9.535931587219238
    6. '.' → logprob: -10.785931587219238
    7. '.point' → logprob: -10.910931587219238
    8. '	vector' → logprob: -11.035931587219238
    9. '   ' → logprob: -11.410931587219238
    10. '```' → logprob: -11.535931587219238

Token 807: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12823469936847687
    2. '=' → logprob: -2.628234624862671
    3. '().' → logprob: -3.503234624862671
    4. ' =' → logprob: -4.37823486328125
    5. 'p' → logprob: -6.00323486328125
    6. '       ' → logprob: -6.75323486328125
    7. 'def' → logprob: -7.62823486328125
    8. '   ' → logprob: -8.12823486328125
    9. 's' → logprob: -8.87823486328125
    10. '().__' → logprob: -9.00323486328125

Token 808: 'cross' (ID: 52400)
  Prédit: 'cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0009745901916176081
    2. 'dot' → logprob: -7.000974655151367
    3. 'norm' → logprob: -10.625974655151367
    4. 'abs' → logprob: -10.750974655151367
    5. ' cross' → logprob: -11.250974655151367
    6. '.cross' → logprob: -12.625974655151367
    7. '```' → logprob: -15.750974655151367
    8. '   ' → logprob: -16.000974655151367
    9. 'normalize' → logprob: -16.125974655151367
    10. '_cross' → logprob: -16.375974655151367

Token 809: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.11293698847293854
    2. 'p' → logprob: -2.2379369735717773
    3. '(self' → logprob: -9.987936973571777
    4. '(' → logprob: -10.112936973571777
    5. ' p' → logprob: -11.487936973571777
    6. 'self' → logprob: -12.112936973571777
    7. '   ' → logprob: -12.237936973571777
    8. ' (' → logprob: -12.862936973571777
    9. '       ' → logprob: -14.237936973571777
    10. '	p' → logprob: -14.237936973571777

Token 810: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17000913619995117
    2. '(seg' → logprob: -2.170009136199951
    3. '(' → logprob: -4.045009136199951
    4. ')
' → logprob: -4.670009136199951
    5. '(p' → logprob: -4.670009136199951
    6. '())' → logprob: -5.420009136199951
    7. '       ' → logprob: -7.545009136199951
    8. '(
' → logprob: -8.67000961303711
    9. '())
' → logprob: -8.79500961303711
    10. '(segment' → logprob: -8.92000961303711

Token 811: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18915876746177673
    2. ' if' → logprob: -2.1891586780548096
    3. 'if' → logprob: -2.8141586780548096
    4. '0' → logprob: -8.56415843963623
    5. '   ' → logprob: -10.18915843963623
    6. 't' → logprob: -10.18915843963623
    7. '	if' → logprob: -10.81415843963623
    8. ' ' → logprob: -10.93915843963623
    9. ' s' → logprob: -10.93915843963623
    10. 's' → logprob: -11.18915843963623

Token 812: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020046476274728775
    2. ' if' → logprob: -4.020046710968018
    3. '       ' → logprob: -6.270046710968018
    4. '   ' → logprob: -13.27004623413086
    5. '	if' → logprob: -14.77004623413086
    6. '0' → logprob: -15.39504623413086
    7. 'return' → logprob: -15.52004623413086
    8. ' ' → logprob: -17.02004623413086
    9. 'If' → logprob: -17.14504623413086
    10. '           ' → logprob: -17.14504623413086

Token 813: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00791842956095934
    2. 'float' → logprob: -5.507918357849121
    3. 'abs' → logprob: -6.507918357849121
    4. '   ' → logprob: -6.757918357849121
    5. '  ' → logprob: -7.257918357849121
    6. ' d' → logprob: -8.507918357849121
    7. ' ' → logprob: -8.882918357849121
    8. 'Point' → logprob: -10.382918357849121
    9. 'fabs' → logprob: -10.507918357849121
    10. '0' → logprob: -11.007918357849121

Token 814: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.009900694712996483
    2. ' >' → logprob: -4.6349005699157715
    3. ' ' → logprob: -9.25990104675293
    4. '   ' → logprob: -10.75990104675293
    5. '()>' → logprob: -12.00990104675293
    6. ')>' → logprob: -12.75990104675293
    7. '
' → logprob: -12.88490104675293
    8. '>
' → logprob: -13.13490104675293
    9. '  ' → logprob: -13.38490104675293
    10. '[' → logprob: -13.38490104675293

Token 815: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.004238073714077473
    2. ' EPS' → logprob: -5.754238128662109
    3. '0' → logprob: -7.129238128662109
    4. ' ' → logprob: -8.37923812866211
    5. '   ' → logprob: -11.25423812866211
    6. 'EP' → logprob: -11.75423812866211
    7. '+' → logprob: -13.00423812866211
    8. 'E' → logprob: -13.50423812866211
    9. '  ' → logprob: -13.50423812866211
    10. 'ESP' → logprob: -14.00423812866211

Token 816: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07773678749799728
    2. ':
' → logprob: -2.8277368545532227
    3. '       ' → logprob: -4.327736854553223
    4. '           ' → logprob: -6.327736854553223
    5. ':return' → logprob: -7.577736854553223
    6. ' :' → logprob: -10.452736854553223
    7. '<|end|>' → logprob: -10.702736854553223
    8. '   ' → logprob: -10.702736854553223
    9. ',' → logprob: -11.577736854553223
    10. '):
' → logprob: -11.577736854553223

Token 817: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3572606146335602
    2. 'return' → logprob: -1.6072605848312378
    3. '       ' → logprob: -2.7322607040405273
    4. '           ' → logprob: -3.3572607040405273
    5. '   ' → logprob: -9.982260704040527
    6. '	return' → logprob: -11.357260704040527
    7. '               ' → logprob: -12.357260704040527
    8. ' ' → logprob: -12.357260704040527
    9. ':return' → logprob: -13.357260704040527
    10. '{return' → logprob: -13.982260704040527

Token 818: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.008513158187270164
    2. 'PL' → logprob: -4.8835129737854
    3. '       ' → logprob: -7.8835129737854
    4. ' return' → logprob: -8.008513450622559
    5. '   ' → logprob: -8.633513450622559
    6. '           ' → logprob: -11.008513450622559
    7. ' PL' → logprob: -13.758513450622559
    8. '               ' → logprob: -14.633513450622559
    9. '	return' → logprob: -14.883513450622559
    10. 'pl' → logprob: -15.633513450622559

Token 819: ' Point' (ID: 9971)
  Prédit: 'PL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PL' → logprob: -0.0003637097543105483
    2. 'Point' → logprob: -8.00036334991455
    3. ' PL' → logprob: -11.12536334991455
    4. '   ' → logprob: -11.50036334991455
    5. 'Pl' → logprob: -12.87536334991455
    6. '       ' → logprob: -15.12536334991455
    7. 'pl' → logprob: -15.50036334991455
    8. 'PC' → logprob: -15.87536334991455
    9. ' Point' → logprob: -16.375364303588867
    10. '_PL' → logprob: -17.125364303588867

Token 820: 'Location' (ID: 5998)
  Prédit: 'Location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Location' → logprob: -2.3438327843905427e-05
    2. '.Location' → logprob: -11.87502384185791
    3. 'location' → logprob: -12.50002384185791
    4. '   ' → logprob: -13.12502384185791
    5. '(' → logprob: -13.37502384185791
    6. 'LOCATION' → logprob: -13.62502384185791
    7. ' Location' → logprob: -14.12502384185791
    8. 'Loc' → logprob: -14.12502384185791
    9. '_location' → logprob: -14.25002384185791
    10. '<Location' → logprob: -14.37502384185791

Token 821: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -1.1517960956552997e-05
    2. 'COUN' → logprob: -12.125011444091797
    3. '(CC' → logprob: -13.500011444091797
    4. ' .' → logprob: -13.875011444091797
    5. 'CC' → logprob: -13.875011444091797
    6. '   ' → logprob: -14.250011444091797
    7. '(' → logprob: -14.750011444091797
    8. '['' → logprob: -15.000011444091797
    9. '(C' → logprob: -15.375011444091797
    10. '.' → logprob: -15.875011444091797

Token 822: 'OUN' (ID: 12244)
  Prédit: 'OUN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUN' → logprob: -8.375538163818419e-05
    2. 'COUN' → logprob: -9.625083923339844
    3. 'OUT' → logprob: -11.750083923339844
    4. 'C' → logprob: -12.375083923339844
    5. 'O' → logprob: -12.500083923339844
    6. 'OUNT' → logprob: -14.750083923339844
    7. 'CW' → logprob: -15.000083923339844
    8. 'LOCK' → logprob: -15.250083923339844
    9. 'L' → logprob: -15.875083923339844
    10. 'CLOCK' → logprob: -15.875083923339844

Token 823: 'TER' (ID: 6147)
  Prédit: 'TER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TER' → logprob: -0.00017600801947992295
    2. '   ' → logprob: -10.000176429748535
    3. 'OUT' → logprob: -10.250176429748535
    4. '```' → logprob: -10.500176429748535
    5. 'COUN' → logprob: -10.625176429748535
    6. 'T' → logprob: -11.250176429748535
    7. 'OUN' → logprob: -11.750176429748535
    8. '
' → logprob: -12.625176429748535
    9. 'TEGER' → logprob: -12.750176429748535
    10. 'INTER' → logprob: -13.250176429748535

Token 824: '_CLOCK' (ID: 102378)
  Prédit: '_CLOCK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CLOCK' → logprob: -0.000676096766255796
    2. '_COUNTER' → logprob: -7.375676155090332
    3. 'CLOCK' → logprob: -10.125676155090332
    4. '_C' → logprob: -13.250676155090332
    5. '_clock' → logprob: -13.375676155090332
    6. '```' → logprob: -14.250676155090332
    7. '_CLK' → logprob: -14.500676155090332
    8. '_LOCK' → logprob: -14.750676155090332
    9. '_COLOR' → logprob: -14.875676155090332
    10. ' CLOCK' → logprob: -15.250676155090332

Token 825: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -9.968312951968983e-06
    2. 'W' → logprob: -12.375009536743164
    3. 'wise' → logprob: -12.375009536743164
    4. 'CLOCK' → logprob: -14.250009536743164
    5. 'Wise' → logprob: -14.750009536743164
    6. '```' → logprob: -15.500009536743164
    7. '   ' → logprob: -16.875009536743164
    8. 'ISE' → logprob: -17.625009536743164
    9. 'S' → logprob: -17.875009536743164
    10. 'WI' → logprob: -18.125009536743164

Token 826: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1614961475133896
    2. '
' → logprob: -1.9114961624145508
    3. '   ' → logprob: -7.786496162414551
    4. '<|end|>' → logprob: -8.16149616241455
    5. '(' → logprob: -8.53649616241455
    6. '.' → logprob: -9.78649616241455
    7. ')' → logprob: -9.78649616241455
    8. 'PL' → logprob: -10.28649616241455
    9. 'elif' → logprob: -10.41149616241455
    10. '()
' → logprob: -10.66149616241455

Token 827: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08818098902702332
    2. '<|end|>' → logprob: -2.5881810188293457
    3. '
' → logprob: -5.963181018829346
    4. '   ' → logprob: -6.088181018829346
    5. 'elif' → logprob: -6.713181018829346
    6. ' elif' → logprob: -6.963181018829346
    7. ')' → logprob: -7.213181018829346
    8. ' if' → logprob: -7.838181018829346
    9. '        
' → logprob: -8.713180541992188
    10. ' ' → logprob: -9.088180541992188

Token 828: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.48787567019462585
    2. 'if' (adapté à ' if') → logprob: -1.6128756999969482
    3. '       ' → logprob: -1.9878756999969482
    4. ' if' → logprob: -3.7378756999969482
    5. ' elif' → logprob: -3.7378756999969482
    6. '   ' → logprob: -6.737875461578369
    7. '<|end|>' → logprob: -7.737875461578369
    8. '	elif' → logprob: -8.612875938415527
    9. 'd' → logprob: -8.862875938415527
    10. 's' → logprob: -9.237875938415527

Token 829: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6327975392341614
    2. ' d' → logprob: -0.7577975392341614
    3. 'abs' → logprob: -9.507797241210938
    4. ' ' → logprob: -10.257797241210938
    5. '   ' → logprob: -10.757797241210938
    6. ' -' → logprob: -11.132797241210938
    7. '	d' → logprob: -11.507797241210938
    8. '  ' → logprob: -11.757797241210938
    9. '-' → logprob: -11.757797241210938
    10. ' abs' → logprob: -11.945297241210938

Token 830: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18013475835323334
    2. ' <' → logprob: -1.8051347732543945
    3. '<|end|>' → logprob: -8.305134773254395
    4. '<E' → logprob: -9.180134773254395
    5. '<-' → logprob: -11.680134773254395
    6. ' ' → logprob: -11.930134773254395
    7. '<
' → logprob: -12.305134773254395
    8. ')<' → logprob: -12.680134773254395
    9. '<std' → logprob: -13.305134773254395
    10. '...' → logprob: -13.680134773254395

Token 831: ' -' (ID: 533)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.0753541961312294
    2. '-' → logprob: -2.8253540992736816
    3. ' -' → logprob: -4.325354099273682
    4. '-IP' → logprob: -10.32535457611084
    5. '-A' → logprob: -11.20035457611084
    6. '-US' → logprob: -11.57535457611084
    7. '-P' → logprob: -12.70035457611084
    8. '-END' → logprob: -13.45035457611084
    9. '-B' → logprob: -14.20035457611084
    10. '-IN' → logprob: -14.32535457611084

Token 832: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.005245141219347715
    2. ' EPS' → logprob: -5.255245208740234
    3. 'ESP' → logprob: -12.005245208740234
    4. 'EP' → logprob: -12.630245208740234
    5. 'ES' → logprob: -14.255245208740234
    6. 'EPT' → logprob: -14.380245208740234
    7. 'EOS' → logprob: -14.880245208740234
    8. ' ' → logprob: -16.005245208740234
    9. '1' → logprob: -16.505245208740234
    10. 'EEP' → logprob: -16.880245208740234

Token 833: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030773018952459097
    2. ':
' → logprob: -6.003077507019043
    3. '       ' → logprob: -8.378077507019043
    4. '<|end|>' → logprob: -8.753077507019043
    5. ' :' → logprob: -9.503077507019043
    6. ',' → logprob: -10.003077507019043
    7. ':return' → logprob: -10.503077507019043
    8. '           ' → logprob: -10.753077507019043
    9. '   ' → logprob: -11.128077507019043
    10. '):' → logprob: -11.378077507019043

Token 834: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008991966024041176
    2. '       ' → logprob: -7.750899314880371
    3. ' return' → logprob: -8.250899314880371
    4. '<|end|>' → logprob: -9.500899314880371
    5. 'return' → logprob: -9.875899314880371
    6. '          ' → logprob: -11.000899314880371
    7. '               ' → logprob: -11.125899314880371
    8. '            ' → logprob: -11.375899314880371
    9. '   ' → logprob: -11.625899314880371
    10. '	       ' → logprob: -11.750899314880371

Token 835: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.010957857593894005
    2. ' Point' → logprob: -4.760957717895508
    3. 'return' (adapté à ' return') → logprob: -6.510957717895508
    4. ' return' → logprob: -7.135957717895508
    5. '           ' → logprob: -9.885957717895508
    6. '       ' → logprob: -12.635957717895508
    7. '   ' → logprob: -13.135957717895508
    8. 'Return' → logprob: -14.760957717895508
    9. '	Point' → logprob: -14.885957717895508
    10. ' ' → logprob: -15.885957717895508

Token 836: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00020354038861114532
    2. ' Point' → logprob: -8.500203132629395
    3. '	Point' → logprob: -17.37520408630371
    4. 'PL' → logprob: -19.75020408630371
    5. '_Point' → logprob: -20.75020408630371
    6. '   ' → logprob: -20.87520408630371
    7. '  ' → logprob: -22.25020408630371
    8. ' ' → logprob: -22.25020408630371
    9. '_point' → logprob: -22.37520408630371
    10. '<Point' → logprob: -22.50020408630371

Token 837: 'Location' (ID: 5998)
  Prédit: 'Location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Location' → logprob: 0.0
    2. 'location' → logprob: -18.5
    3. 'Point' → logprob: -18.625
    4. ' Location' → logprob: -19.125
    5. '(Point' → logprob: -19.125
    6. '_LOCATION' → logprob: -19.375
    7. 'Locations' → logprob: -20.5
    8. '.Location' → logprob: -20.5
    9. '<Location' → logprob: -20.5
    10. '_location' → logprob: -20.75

Token 838: '.C' (ID: 2010)
  Prédit: '.C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.C' → logprob: -0.038164395838975906
    2. 'CLOCK' → logprob: -3.2881643772125244
    3. '.Clock' → logprob: -9.538164138793945
    4. 'Point' → logprob: -11.163164138793945
    5. 'C' → logprob: -11.788164138793945
    6. '   ' → logprob: -11.913164138793945
    7. '.CL' → logprob: -12.163164138793945
    8. '       ' → logprob: -12.538164138793945
    9. ' CLOCK' → logprob: -12.788164138793945
    10. 'Clock' → logprob: -13.163164138793945

Token 839: 'LOCK' (ID: 16854)
  Prédit: 'LOCK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOCK' → logprob: -0.0046681687235832214
    2. 'W' → logprob: -5.379668235778809
    3. 'L' → logprob: -10.254668235778809
    4. 'CLOCK' → logprob: -12.129668235778809
    5. 'OCK' → logprob: -13.004668235778809
    6. '
' → logprob: -13.504668235778809
    7. 'lock' → logprob: -13.629668235778809
    8. 'Lock' → logprob: -13.754668235778809
    9. ' LOCK' → logprob: -15.379668235778809
    10. 'LICK' → logprob: -15.504668235778809

Token 840: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -6.392202976712724e-06
    2. 'wise' → logprob: -12.125006675720215
    3. 'W' → logprob: -14.875006675720215
    4. 'CLOCK' → logprob: -15.750006675720215
    5. 'WR' → logprob: -15.875006675720215
    6. 'Wise' → logprob: -16.2500057220459
    7. 'RIGHT' → logprob: -16.3750057220459
    8. '```' → logprob: -16.8750057220459
    9. 'S' → logprob: -17.1250057220459
    10. '-wise' → logprob: -18.6250057220459

Token 841: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007586509920656681
    2. '<|end|>' → logprob: -5.382586479187012
    3. '
' → logprob: -6.382586479187012
    4. '        
' → logprob: -8.007586479187012
    5. 'return' → logprob: -8.257586479187012
    6. ',' → logprob: -8.757586479187012
    7. ')' → logprob: -9.132586479187012
    8. ' if' → logprob: -9.382586479187012
    9. '   ' → logprob: -9.382586479187012
    10. 'if' → logprob: -9.882586479187012

Token 842: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012916464766021818
    2. 'if' → logprob: -9.250128746032715
    3. ' if' → logprob: -11.000128746032715
    4. '<|end|>' → logprob: -12.125128746032715
    5. '   ' → logprob: -12.250128746032715
    6. '        
' → logprob: -13.250128746032715
    7. '```' → logprob: -14.125128746032715
    8. 'return' → logprob: -14.250128746032715
    9. '           ' → logprob: -14.500128746032715
    10. '#' → logprob: -14.625128746032715

Token 843: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08317249268293381
    2. 'q' → logprob: -3.958172559738159
    3. 'dot' → logprob: -4.33317232131958
    4. 't' → logprob: -4.58317232131958
    5. 'd' → logprob: -4.58317232131958
    6. 'tmp' → logprob: -4.70817232131958
    7. 'p' → logprob: -5.33317232131958
    8. 'l' → logprob: -6.08317232131958
    9. 'dp' → logprob: -6.20817232131958
    10. 'pl' → logprob: -6.70817232131958

Token 844: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.5244619250297546
    2. 'p' → logprob: -1.0244619846343994
    3. '(seg' → logprob: -3.6494619846343994
    4. '(p' → logprob: -4.39946174621582
    5. ' seg' → logprob: -4.77446174621582
    6. ' p' → logprob: -7.02446174621582
    7. ' (' → logprob: -7.77446174621582
    8. 'self' → logprob: -8.14946174621582
    9. '(' → logprob: -8.39946174621582
    10. '   ' → logprob: -9.14946174621582

Token 845: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.3709985315799713
    2. '.p' → logprob: -1.245998501777649
    3. 'vector' → logprob: -3.9959986209869385
    4. '   ' → logprob: -6.745998382568359
    5. '.is' → logprob: -7.620998382568359
    6. 'p' → logprob: -7.745998382568359
    7. '.has' → logprob: -8.49599838256836
    8. '.' → logprob: -8.62099838256836
    9. '       ' → logprob: -8.74599838256836
    10. 'Vector' → logprob: -8.74599838256836

Token 846: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.3226136767771095e-05
    2. '.dot' → logprob: -11.750042915344238
    3. '()' → logprob: -11.875042915344238
    4. '.cross' → logprob: -11.875042915344238
    5. '.' → logprob: -12.000042915344238
    6. '   ' → logprob: -12.500042915344238
    7. ' ().' → logprob: -12.875042915344238
    8. '       ' → logprob: -13.375042915344238
    9. '().__' → logprob: -13.375042915344238
    10. 'def' → logprob: -13.500042915344238

Token 847: 'dot' (ID: 29155)
  Prédit: 'dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.12714816629886627
    2. '.dot' → logprob: -2.127148151397705
    3. ' dot' → logprob: -10.252148628234863
    4. '.cross' → logprob: -10.252148628234863
    5. '(dot' → logprob: -10.377148628234863
    6. 'cross' → logprob: -10.502148628234863
    7. '.' → logprob: -10.752148628234863
    8. '().' → logprob: -11.127148628234863
    9. '_dot' → logprob: -11.502148628234863
    10. '
' → logprob: -11.752148628234863

Token 848: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.029759055003523827
    2. 'p' → logprob: -3.529759168624878
    3. '(' → logprob: -12.279759407043457
    4. '<p' → logprob: -12.779759407043457
    5. '   ' → logprob: -14.404759407043457
    6. ' (' → logprob: -15.154759407043457
    7. ' p' → logprob: -16.40475845336914
    8. '(
' → logprob: -16.77975845336914
    9. '	p' → logprob: -17.02975845336914
    10. '  ' → logprob: -17.40475845336914

Token 849: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6093018054962158
    2. '<' → logprob: -1.3593018054962158
    3. ' <' → logprob: -1.7343018054962158
    4. ')<' → logprob: -3.859301805496216
    5. '()<' → logprob: -6.609301567077637
    6. '       ' → logprob: -8.859301567077637
    7. '()' → logprob: -9.109301567077637
    8. '<p' → logprob: -10.109301567077637
    9. ' )' → logprob: -10.109301567077637
    10. '           ' → logprob: -10.234301567077637

Token 850: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.027593335136771202
    2. ' <' → logprob: -3.7775933742523193
    3. '()<' → logprob: -5.52759313583374
    4. '()' → logprob: -8.402593612670898
    5. ' ' → logprob: -10.152593612670898
    6. '   ' → logprob: -10.402593612670898
    7. ')<' → logprob: -10.652593612670898
    8. ')' → logprob: -11.027593612670898
    9. '<p' → logprob: -11.652593612670898
    10. '       ' → logprob: -13.152593612670898

Token 851: ' ' (ID: 220)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.010175447911024094
    2. '-' → logprob: -4.6351752281188965
    3. ' -' → logprob: -8.010175704956055
    4. '-P' → logprob: -9.510175704956055
    5. '0' → logprob: -12.885175704956055
    6. '-Q' → logprob: -13.260175704956055
    7. '-IP' → logprob: -13.510175704956055
    8. '-C' → logprob: -13.885175704956055
    9. '   ' → logprob: -14.260175704956055
    10. '-US' → logprob: -14.885175704956055

Token 852: '0' (ID: 15)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.0060186185874044895
    2. '-' → logprob: -5.13101863861084
    3. ' -' → logprob: -9.50601863861084
    4. '0' → logprob: -12.38101863861084
    5. '-P' → logprob: -12.50601863861084
    6. '-Q' → logprob: -13.00601863861084
    7. '-INF' → logprob: -13.88101863861084
    8. '-C' → logprob: -14.63101863861084
    9. '-IP' → logprob: -15.00601863861084
    10. '-US' → logprob: -15.13101863861084

Token 853: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8718386888504028
    2. '       ' → logprob: -1.3718386888504028
    3. '           ' → logprob: -2.2468385696411133
    4. ':' → logprob: -2.2468385696411133
    5. ':
' → logprob: -2.3718385696411133
    6. '        ' → logprob: -5.371838569641113
    7. '   ' → logprob: -5.371838569641113
    8. '():
' → logprob: -5.496838569641113
    9. '<|end|>' → logprob: -5.746838569641113
    10. ' ' → logprob: -5.996838569641113

Token 854: '0' (ID: 15)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.09608320891857147
    2. '1' → logprob: -3.596083164215088
    3. '10' → logprob: -3.721083164215088
    4. '       ' → logprob: -3.846083164215088
    5. '           ' → logprob: -4.846083164215088
    6. '0' → logprob: -5.721083164215088
    7. '   ' → logprob: -6.096083164215088
    8. ' EPS' → logprob: -6.471083164215088
    9. '```' → logprob: -6.846083164215088
    10. ' ' → logprob: -7.346083164215088

Token 855: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03844030946493149
    2. ':
' → logprob: -4.163440227508545
    3. ':' → logprob: -4.413440227508545
    4. '           ' → logprob: -4.663440227508545
    5. '   ' → logprob: -8.163440704345703
    6. ' return' → logprob: -9.163440704345703
    7. ':return' → logprob: -9.288440704345703
    8. '	' → logprob: -10.663440704345703
    9. ' or' → logprob: -11.288440704345703
    10. ' ' → logprob: -11.288440704345703

Token 856: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16143205761909485
    2. '       ' → logprob: -1.9114320278167725
    3. ' return' → logprob: -6.911432266235352
    4. 'return' → logprob: -8.536432266235352
    5. '   ' → logprob: -11.786432266235352
    6. '               ' → logprob: -12.036432266235352
    7. ' ' → logprob: -14.911432266235352
    8. '          ' → logprob: -15.286432266235352
    9. '	return' → logprob: -15.786432266235352
    10. 'Point' → logprob: -16.41143226623535

Token 857: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.26739293336868286
    2. ' return' → logprob: -1.517392873764038
    3. '       ' → logprob: -4.767393112182617
    4. '           ' → logprob: -5.017393112182617
    5. '   ' → logprob: -8.517393112182617
    6. '	return' → logprob: -11.267393112182617
    7. '               ' → logprob: -12.517393112182617
    8. ' ' → logprob: -12.767393112182617
    9. ':return' → logprob: -14.892393112182617
    10. 'Return' → logprob: -15.142393112182617

Token 858: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.03822072967886925
    2. 'PL' → logprob: -3.2882206439971924
    3. ' Point' → logprob: -8.663220405578613
    4. ' PL' → logprob: -12.913220405578613
    5. 'Pl' → logprob: -13.038220405578613
    6. '   ' → logprob: -13.788220405578613
    7. '	Point' → logprob: -14.663220405578613
    8. 'pl' → logprob: -16.41322135925293
    9. 'POINT' → logprob: -16.41322135925293
    10. '       ' → logprob: -16.66322135925293

Token 859: 'Location' (ID: 5998)
  Prédit: 'Location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Location' → logprob: -5.512236498361744e-07
    2. 'location' → logprob: -15.125000953674316
    3. '.Location' → logprob: -16.5
    4. ' Location' → logprob: -17.375
    5. '_LOCATION' → logprob: -18.125
    6. 'LOCATION' → logprob: -18.625
    7. '<Location' → logprob: -18.75
    8. '_location' → logprob: -18.875
    9. 'PL' → logprob: -18.875
    10. 'Point' → logprob: -18.875

Token 860: '.ON' (ID: 154153)
  Prédit: 'ONLINE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONLINE' → logprob: -0.16058135032653809
    2. '.ON' → logprob: -1.910581350326538
    3. 'ON' → logprob: -8.285581588745117
    4. '.O' → logprob: -9.660581588745117
    5. 'O' → logprob: -10.535581588745117
    6. '   ' → logprob: -12.160581588745117
    7. ' ONLINE' → logprob: -12.660581588745117
    8. '.' → logprob: -12.785581588745117
    9. 'OL' → logprob: -13.660581588745117
    10. '.PL' → logprob: -14.285581588745117

Token 861: 'LINE' (ID: 15714)
  Prédit: 'LINE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LINE' → logprob: -0.12093570828437805
    2. '_SEG' → logprob: -2.2459356784820557
    3. 'ONLINE' → logprob: -5.620935916900635
    4. 'SEG' → logprob: -6.245935916900635
    5. '_LINE' → logprob: -6.745935916900635
    6. 'E' → logprob: -7.370935916900635
    7. 'line' → logprob: -8.495935440063477
    8. '```' → logprob: -9.120935440063477
    9. '\' → logprob: -9.620935440063477
    10. '_' → logprob: -9.870935440063477

Token 862: '_BACK' (ID: 48735)
  Prédit: '_BACK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_BACK' → logprob: -2.8444881536415778e-05
    2. 'BACK' → logprob: -10.500028610229492
    3. '_B' → logprob: -15.000028610229492
    4. '_Back' → logprob: -15.125028610229492
    5. '_' → logprob: -15.875028610229492
    6. '```' → logprob: -17.125028610229492
    7. '\' → logprob: -17.250028610229492
    8. '_BACKGROUND' → logprob: -17.375028610229492
    9. '_FRONT' → logprob: -17.875028610229492
    10. 'Back' → logprob: -19.125028610229492

Token 863: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060012019239366055
    2. '
' → logprob: -5.881000995635986
    3. '<|end|>' → logprob: -6.256000995635986
    4. '   ' → logprob: -7.631000995635986
    5. '        
' → logprob: -8.631001472473145
    6. '```' → logprob: -8.631001472473145
    7. ')' → logprob: -8.881001472473145
    8. '.' → logprob: -9.756001472473145
    9. ' return' → logprob: -10.756001472473145
    10. 'return' → logprob: -11.006001472473145

Token 864: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012817579321563244
    2. '<|end|>' → logprob: -4.5128173828125
    3. '```' → logprob: -7.8878173828125
    4. '
' → logprob: -7.8878173828125
    5. '   ' → logprob: -8.2628173828125
    6. '        
' → logprob: -8.5128173828125
    7. 'return' → logprob: -8.6378173828125
    8. ' return' → logprob: -9.6378173828125
    9. 'newline' → logprob: -10.0128173828125
    10. ')' → logprob: -10.1378173828125

Token 865: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4869234561920166
    2. '       ' → logprob: -0.9869234561920166
    3. ' if' → logprob: -4.3619232177734375
    4. '   ' → logprob: -11.986923217773438
    5. '	if' → logprob: -13.611923217773438
    6. 'from' → logprob: -14.361923217773438
    7. 'import' → logprob: -14.361923217773438
    8. 'If' → logprob: -14.861923217773438
    9. '```' → logprob: -15.111923217773438
    10. 'elif' → logprob: -15.236923217773438

Token 866: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.01825237087905407
    2. ' seg' → logprob: -4.018252372741699
    3. '   ' → logprob: -9.6432523727417
    4. '(seg' → logprob: -10.5182523727417
    5. ' ' → logprob: -12.1432523727417
    6. '  ' → logprob: -13.2682523727417
    7. '       ' → logprob: -14.3932523727417
    8. '    ' → logprob: -15.0182523727417
    9. '```' → logprob: -15.1432523727417
    10. 'segment' → logprob: -15.2682523727417

Token 867: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.0009230116847902536
    2. 'vector' → logprob: -7.000923156738281
    3. '   ' → logprob: -12.875923156738281
    4. ' vector' → logprob: -13.125923156738281
    5. '	vector' → logprob: -13.500923156738281
    6. '       ' → logprob: -13.750923156738281
    7. 'Vector' → logprob: -13.875923156738281
    8. '.' → logprob: -14.375923156738281
    9. 'VECTOR' → logprob: -14.750923156738281
    10. '(vector' → logprob: -14.875923156738281

Token 868: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.061054359131958e-06
    2. '()' → logprob: -12.375007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '().__' → logprob: -14.000007629394531
    5. ' ().' → logprob: -14.375007629394531
    6. '       ' → logprob: -15.875007629394531
    7. '.' → logprob: -16.62500762939453
    8. '```' → logprob: -17.50000762939453
    9. '.dot' → logprob: -17.62500762939453
    10. 'def' → logprob: -17.62500762939453

Token 869: 'norm' (ID: 30970)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -5.438573680294212e-06
    2. '.dot' → logprob: -12.250005722045898
    3. ' dot' → logprob: -14.500005722045898
    4. '(dot' → logprob: -17.0000057220459
    5. '
' → logprob: -17.5000057220459
    6. 'cross' → logprob: -17.6250057220459
    7. '   ' → logprob: -18.2500057220459
    8. 'dots' → logprob: -18.3750057220459
    9. 'point' → logprob: -18.6250057220459
    10. '```' → logprob: -18.7500057220459

Token 870: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07948087900876999
    2. '()<' → logprob: -2.5794808864593506
    3. '().' → logprob: -7.8294806480407715
    4. '(p' → logprob: -9.70448112487793
    5. '()==' → logprob: -9.70448112487793
    6. '()>' → logprob: -10.45448112487793
    7. '()(' → logprob: -10.70448112487793
    8. '().__' → logprob: -11.82948112487793
    9. '()*' → logprob: -12.45448112487793
    10. '<p' → logprob: -12.45448112487793

Token 871: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7613582611083984
    2. '()<' → logprob: -1.2613582611083984
    3. '<' → logprob: -1.8863582611083984
    4. '<|end|>' → logprob: -3.1363582611083984
    5. '()' → logprob: -4.136358261108398
    6. ' *' → logprob: -4.886358261108398
    7. ' >' → logprob: -5.011358261108398
    8. '   ' → logprob: -5.261358261108398
    9. '>' → logprob: -5.261358261108398
    10. '*' → logprob: -5.511358261108398

Token 872: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033534664544276893
    2. 'seg' → logprob: -8.750335693359375
    3. ' p' → logprob: -8.875335693359375
    4. '   ' → logprob: -11.375335693359375
    5. 'EPS' → logprob: -11.625335693359375
    6. 'abs' → logprob: -12.500335693359375
    7. 'eps' → logprob: -12.875335693359375
    8. '(p' → logprob: -13.375335693359375
    9. '	p' → logprob: -13.375335693359375
    10. 'float' → logprob: -13.875335693359375

Token 873: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.03864620625972748
    2. 'norm' → logprob: -3.2886462211608887
    3. '.' → logprob: -8.16364574432373
    4. ' norm' → logprob: -9.53864574432373
    5. '.p' → logprob: -9.66364574432373
    6. '(norm' → logprob: -9.91364574432373
    7. '1' → logprob: -10.28864574432373
    8. 'p' → logprob: -10.78864574432373
    9. ' ' → logprob: -11.28864574432373
    10. '0' → logprob: -11.53864574432373

Token 874: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3742210865020752
    2. '()' → logprob: -2.124221086502075
    3. '():
' → logprob: -2.124221086502075
    4. ':' → logprob: -3.124221086502075
    5. 'EPS' → logprob: -4.499220848083496
    6. '   ' → logprob: -5.749220848083496
    7. '(E' → logprob: -5.874220848083496
    8. '-E' → logprob: -6.124220848083496
    9. '()-' → logprob: -6.374220848083496
    10. ' EPS' → logprob: -6.624220848083496

Token 875: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39111268520355225
    2. '       ' → logprob: -1.1411126852035522
    3. '0' → logprob: -6.641112804412842
    4. '   ' → logprob: -7.016112804412842
    5. ' return' → logprob: -7.516112804412842
    6. ':' → logprob: -7.766112804412842
    7. ':
' → logprob: -7.891112804412842
    8. ' ' → logprob: -8.516112327575684
    9. 'return' → logprob: -8.641112327575684
    10. '               ' → logprob: -9.766112327575684

Token 876: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15707775950431824
    2. ' return' → logprob: -2.2820777893066406
    3. '           ' → logprob: -3.1570777893066406
    4. '   ' → logprob: -7.657077789306641
    5. '       ' → logprob: -8.53207778930664
    6. 'Point' → logprob: -10.78207778930664
    7. '               ' → logprob: -11.15707778930664
    8. ' ' → logprob: -11.15707778930664
    9. '	return' → logprob: -12.03207778930664
    10. ':return' → logprob: -12.15707778930664

Token 877: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.10026490688323975
    2. ' Point' → logprob: -2.3502650260925293
    3. 'PL' → logprob: -10.975264549255371
    4. 'EPS' → logprob: -11.100264549255371
    5. '0' → logprob: -11.850264549255371
    6. 'Segment' → logprob: -12.350264549255371
    7. ' ' → logprob: -12.850264549255371
    8. '   ' → logprob: -13.350264549255371
    9. '	Point' → logprob: -13.350264549255371
    10. ' EPS' → logprob: -13.600264549255371

Token 878: 'Location' (ID: 5998)
  Prédit: 'Location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Location' → logprob: -1.1472419600977446e-06
    2. 'Point' → logprob: -14.375000953674316
    3. ' Location' → logprob: -15.500000953674316
    4. 'Position' → logprob: -15.625000953674316
    5. '_LOCATION' → logprob: -17.250001907348633
    6. 'location' → logprob: -17.250001907348633
    7. 'LOCATION' → logprob: -17.500001907348633
    8. '(Point' → logprob: -18.000001907348633
    9. 'Locations' → logprob: -18.250001907348633
    10. '.Location' → logprob: -18.625001907348633

Token 879: '.ON' (ID: 154153)
  Prédit: '.ON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ON' → logprob: -0.06225402653217316
    2. 'ONLINE' → logprob: -2.812253952026367
    3. 'ON' → logprob: -8.187253952026367
    4. '_ON' → logprob: -12.937253952026367
    5. '	ON' → logprob: -13.312253952026367
    6. '.O' → logprob: -13.687253952026367
    7. '.' → logprob: -13.687253952026367
    8. 'O' → logprob: -14.437253952026367
    9. '```' → logprob: -14.812253952026367
    10. '
' → logprob: -14.812253952026367

Token 880: 'LINE' (ID: 15714)
  Prédit: 'LINE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LINE' → logprob: -0.00030042731668800116
    2. 'SEG' → logprob: -8.375300407409668
    3. '_SEG' → logprob: -9.625300407409668
    4. '_LINE' → logprob: -13.375300407409668
    5. '```' → logprob: -14.125300407409668
    6. '   ' → logprob: -14.750300407409668
    7. 'INE' → logprob: -14.750300407409668
    8. '
' → logprob: -15.625300407409668
    9. 'line' → logprob: -15.750300407409668
    10. 'LIN' → logprob: -16.000301361083984

Token 881: '_FRONT' (ID: 130295)
  Prédit: '_FRONT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FRONT' → logprob: -0.01420182641595602
    2. 'FR' → logprob: -4.264201641082764
    3. '_FR' → logprob: -10.764202117919922
    4. '```' → logprob: -12.264202117919922
    5. 'Front' → logprob: -12.889202117919922
    6. '
' → logprob: -12.889202117919922
    7. '_SEG' → logprob: -13.514202117919922
    8. '_' → logprob: -13.764202117919922
    9. '_front' → logprob: -13.889202117919922
    10. '\' → logprob: -13.889202117919922

Token 882: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001270589418709278
    2. 'return' → logprob: -7.001270771026611
    3. '   ' → logprob: -8.626270294189453
    4. ' return' → logprob: -9.251270294189453
    5. '
' → logprob: -10.001270294189453
    6. '```' → logprob: -10.751270294189453
    7. '           ' → logprob: -11.751270294189453
    8. 'O' → logprob: -12.626270294189453
    9. '0' → logprob: -14.126270294189453
    10. '        
' → logprob: -14.376270294189453

Token 883: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011093381908722222
    2. 'return' → logprob: -9.375110626220703
    3. '   ' → logprob: -10.875110626220703
    4. '           ' → logprob: -13.000110626220703
    5. ' return' → logprob: -13.125110626220703
    6. '```' → logprob: -13.125110626220703
    7. '
' → logprob: -16.000110626220703
    8. '<|end|>' → logprob: -16.500110626220703
    9. 'O' → logprob: -16.625110626220703
    10. '{return' → logprob: -16.750110626220703

Token 884: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032089464366436005
    2. 'return' (adapté à ' return') → logprob: -3.5320894718170166
    3. '   ' → logprob: -6.4070892333984375
    4. ' return' → logprob: -7.9070892333984375
    5. '           ' → logprob: -8.157089233398438
    6. 'Point' → logprob: -10.532089233398438
    7. '               ' → logprob: -13.282089233398438
    8. '	return' → logprob: -13.532089233398438
    9. ' ' → logprob: -14.907089233398438
    10. '```' → logprob: -15.032089233398438

Token 885: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.547789674485102e-05
    2. ' Point' → logprob: -10.250035285949707
    3. 'PL' → logprob: -17.000036239624023
    4. '	Point' → logprob: -17.125036239624023
    5. '   ' → logprob: -21.000036239624023
    6. '_Point' → logprob: -21.625036239624023
    7. '_point' → logprob: -21.875036239624023
    8. '  ' → logprob: -22.625036239624023
    9. ' ' → logprob: -22.875036239624023
    10. 'Pl' → logprob: -23.250036239624023

Token 886: 'Location' (ID: 5998)
  Prédit: 'Location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Location' → logprob: -3.7697225252486533e-06
    2. '_LOCATION' → logprob: -13.500003814697266
    3. 'location' → logprob: -13.500003814697266
    4. '.Location' → logprob: -14.500003814697266
    5. '.ON' → logprob: -15.625003814697266
    6. '       ' → logprob: -16.500003814697266
    7. ' Location' → logprob: -16.625003814697266
    8. 'LOCATION' → logprob: -16.750003814697266
    9. '   ' → logprob: -17.000003814697266
    10. 'Point' → logprob: -17.625003814697266

Token 887: '.ON' (ID: 154153)
  Prédit: '.ON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ON' → logprob: -0.014243659563362598
    2. '.O' → logprob: -4.2642436027526855
    3. 'ON' → logprob: -10.014244079589844
    4. '.On' → logprob: -11.889244079589844
    5. ' .' → logprob: -12.139244079589844
    6. '.' → logprob: -12.389244079589844
    7. '	ON' → logprob: -12.389244079589844
    8. '   ' → logprob: -12.389244079589844
    9. 'O' → logprob: -13.264244079589844
    10. '.on' → logprob: -13.264244079589844

Token 888: '_SEG' (ID: 135738)
  Prédit: '_SEG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SEG' → logprob: -0.00018399098189547658
    2. 'SEG' → logprob: -8.875184059143066
    3. '_segment' → logprob: -10.875184059143066
    4. '_S' → logprob: -11.500184059143066
    5. '   ' → logprob: -12.125184059143066
    6. 'Segment' → logprob: -12.250184059143066
    7. '\' → logprob: -13.375184059143066
    8. 'S' → logprob: -13.875184059143066
    9. '_' → logprob: -14.750184059143066
    10. 'segment' → logprob: -15.125184059143066

Token 889: 'MENT' (ID: 9640)
  Prédit: 'MENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MENT' → logprob: -0.0005898483213968575
    2. 'EMENT' → logprob: -7.625589847564697
    3. '   ' → logprob: -9.750590324401855
    4. '```' → logprob: -10.875590324401855
    5. 'мент' → logprob: -12.500590324401855
    6. 'MENTS' → logprob: -12.500590324401855
    7. '       ' → logprob: -12.625590324401855
    8. 'AMENT' → logprob: -12.625590324401855
    9. 'egment' → logprob: -13.125590324401855
    10. 'Segment' → logprob: -13.625590324401855

Token 890: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 891: 'Vector' (ID: 7580)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0007087402627803385
    2. 'from' → logprob: -7.37570858001709
    3. '
' → logprob: -9.62570858001709
    4. '```' → logprob: -11.50070858001709
    5. '#' → logprob: -13.37570858001709
    6. '<class' → logprob: -14.00070858001709
    7. '"class' → logprob: -14.50070858001709
    8. '@dat' → logprob: -14.50070858001709
    9. ' class' → logprob: -15.12570858001709
    10. 'def' → logprob: -15.12570858001709

Token 892: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22999536991119385
    2. '=' → logprob: -2.2299952507019043
    3. '(Point' → logprob: -2.4799952507019043
    4. ':' → logprob: -4.729995250701904
    5. '<|end|>' → logprob: -6.729995250701904
    6. '(' → logprob: -6.979995250701904
    7. 'Point' → logprob: -7.354995250701904
    8. '('' → logprob: -7.979995250701904
    9. ')' → logprob: -8.354995727539062
    10. ' is' → logprob: -8.479995727539062

Token 893: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.8624639324116288e-06
    2. ' Point' → logprob: -13.750001907348633
    3. 'Vector' → logprob: -14.250001907348633
    4. '	Point' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.875001907348633
    6. 'List' → logprob: -19.500001907348633
    7. '(Point' → logprob: -19.625001907348633
    8. 'Tuple' → logprob: -19.750001907348633
    9. ''' → logprob: -20.000001907348633
    10. '
' → logprob: -21.250001907348633

Token 894: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01262501161545515
    2. '
' → logprob: -4.387625217437744
    3. '

' → logprob: -9.387624740600586
    4. 'from' → logprob: -10.887624740600586
    5. '
' → logprob: -12.512624740600586
    6. '    
' → logprob: -13.387624740600586
    7. '```' → logprob: -13.637624740600586
    8. '@dat' → logprob: -13.637624740600586
    9. '<class' → logprob: -14.387624740600586
    10. ' class' → logprob: -14.637624740600586

Token 895: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.5570885807392187e-05
    2. 'from' → logprob: -11.750015258789062
    3. '
' → logprob: -12.500015258789062
    4. '```' → logprob: -13.750015258789062
    5. '"class' → logprob: -14.125015258789062
    6. '<class' → logprob: -14.250015258789062
    7. ' class' → logprob: -15.000015258789062
    8. 'classmethod' → logprob: -15.750015258789062
    9. '@dat' → logprob: -16.000015258789062
    10. 'Segment' → logprob: -16.000015258789062

Token 896: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -8.017927029868588e-05
    2. ' Segment' → logprob: -9.750080108642578
    3. 'Vector' → logprob: -10.750080108642578
    4. 'Point' → logprob: -15.125080108642578
    5. 'Line' → logprob: -17.375080108642578
    6. 'Seg' → logprob: -18.250080108642578
    7. '_segment' → logprob: -19.125080108642578
    8. 'Section' → logprob: -20.500080108642578
    9. 'segment' → logprob: -20.625080108642578
    10. '`' → logprob: -21.250080108642578

Token 897: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023725584615021944
    2. ':

' → logprob: -6.127372741699219
    3. ':
' → logprob: -8.627372741699219
    4. '(object' → logprob: -12.127372741699219
    5. '(Point' → logprob: -14.002372741699219
    6. '():' → logprob: -14.377372741699219
    7. '):' → logprob: -14.877372741699219
    8. '(' → logprob: -15.127372741699219
    9. '<|end|>' → logprob: -15.252372741699219
    10. ' :' → logprob: -15.627372741699219

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40688732266426086
    2. '
' → logprob: -1.1568872928619385
    3. 'def' → logprob: -4.031887531280518
    4. '    
' → logprob: -6.281887531280518
    5. ' def' → logprob: -9.28188705444336
    6. '	def' → logprob: -10.28188705444336
    7. '  
' → logprob: -10.78188705444336
    8. ' 
' → logprob: -11.15688705444336
    9. 'class' → logprob: -11.40688705444336
    10. '
' → logprob: -11.40688705444336

Token 899: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006997985299676657
    2. '   ' → logprob: -5.381998062133789
    3. '
' → logprob: -6.631998062133789
    4. ' def' → logprob: -6.881998062133789
    5. '    
' → logprob: -10.881998062133789
    6. '	def' → logprob: -11.881998062133789
    7. '```' → logprob: -13.381998062133789
    8. '__' → logprob: -13.881998062133789
    9. ' ' → logprob: -14.131998062133789
    10. '  
' → logprob: -14.381998062133789

Token 900: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25502023100852966
    2. 'init' → logprob: -1.505020260810852
    3. '_init' → logprob: -5.8800201416015625
    4. ' __' → logprob: -8.505020141601562
    5. 'def' → logprob: -9.630020141601562
    6. 'repr' → logprob: -11.005020141601562
    7. '```' → logprob: -13.005020141601562
    8. '___' → logprob: -13.130020141601562
    9. '__(' → logprob: -14.755020141601562
    10. '**' → logprob: -14.755020141601562

Token 901: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. 'def' → logprob: -14.625000953674316
    3. '_init' → logprob: -16.25
    4. '```' → logprob: -17.5
    5. '__' → logprob: -18.625
    6. 'inite' → logprob: -19.625
    7. ' init' → logprob: -20.125
    8. '(init' → logprob: -20.625
    9. 'ini' → logprob: -21.0
    10. '
' → logprob: -21.125

Token 902: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.25211429595947266
    2. '(self' → logprob: -1.5021142959594727
    3. '_(' → logprob: -9.502114295959473
    4. 'self' → logprob: -10.252114295959473
    5. ' (' → logprob: -10.502114295959473
    6. '(' → logprob: -10.877114295959473
    7. '__' → logprob: -11.752114295959473
    8. '__(
' → logprob: -11.877114295959473
    9. '   ' → logprob: -12.377114295959473
    10. '```' → logprob: -13.002114295959473

Token 903: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.849109119386412e-06
    2. ' self' → logprob: -11.750009536743164
    3. '
' → logprob: -14.500009536743164
    4. '   ' → logprob: -14.625009536743164
    5. ',' → logprob: -14.750009536743164
    6. '(self' → logprob: -15.375009536743164
    7. '       ' → logprob: -15.750009536743164
    8. '0' → logprob: -15.875009536743164
    9. ' ' → logprob: -17.000009536743164
    10. '  ' → logprob: -17.000009536743164

Token 904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11398781836032867
    2. '(self' → logprob: -2.363987922668457
    3. 'self' → logprob: -4.613987922668457
    4. ' (' → logprob: -5.738987922668457
    5. ' self' → logprob: -8.613987922668457
    6. '   ' → logprob: -8.863987922668457
    7. '       ' → logprob: -9.238987922668457
    8. ',
' → logprob: -9.738987922668457
    9. ',self' → logprob: -10.488987922668457
    10. '
' → logprob: -10.988987922668457

Token 905: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00017243190086446702
    2. ' p' → logprob: -8.87517261505127
    3. 'self' → logprob: -10.50017261505127
    4. '   ' → logprob: -12.37517261505127
    5. '    
' → logprob: -15.75017261505127
    6. '	p' → logprob: -15.75017261505127
    7. '       ' → logprob: -16.000171661376953
    8. '
' → logprob: -16.375171661376953
    9. ')' → logprob: -16.500171661376953
    10. ' ' → logprob: -16.625171661376953

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ':' → logprob: -15.250000953674316
    3. ')' → logprob: -16.75
    4. '=None' → logprob: -16.75
    5. 'def' → logprob: -16.75
    6. 'a' → logprob: -17.25
    7. '```' → logprob: -17.375
    8. '   ' → logprob: -17.75
    9. '<|end|>' → logprob: -17.875
    10. 'self' → logprob: -18.125

Token 907: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026331068947911263
    2. ',' → logprob: -3.6513311862945557
    3. '=' → logprob: -11.401330947875977
    4. '   ' → logprob: -12.401330947875977
    5. '=None' → logprob: -12.526330947875977
    6. ' :' → logprob: -12.901330947875977
    7. ' ,' → logprob: -13.151330947875977
    8. ':,' → logprob: -13.401330947875977
    9. ':'' → logprob: -14.151330947875977
    10. ' =' → logprob: -14.276330947875977

Token 908: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0004586711002048105
    2. ' Point' → logprob: -7.750458717346191
    3. ''' → logprob: -10.500458717346191
    4. '	Point' → logprob: -15.000458717346191
    5. ' '' → logprob: -16.750457763671875
    6. ' ' → logprob: -17.750457763671875
    7. '   ' → logprob: -18.000457763671875
    8. '_Point' → logprob: -18.250457763671875
    9. '  ' → logprob: -18.500457763671875
    10. 'Vector' → logprob: -18.750457763671875

Token 909: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.190178904333152e-05
    2. ':' → logprob: -10.875031471252441
    3. ' ,' → logprob: -11.750031471252441
    4. ',p' → logprob: -13.125031471252441
    5. '=' → logprob: -13.500031471252441
    6. '   ' → logprob: -13.750031471252441
    7. '=None' → logprob: -15.375031471252441
    8. 'p' → logprob: -16.125032424926758
    9. ' ' → logprob: -17.000032424926758
    10. '',' → logprob: -17.125032424926758

Token 910: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009646998951211572
    2. ' None' → logprob: -7.375964641571045
    3. 'Point' → logprob: -8.000965118408203
    4. '0' → logprob: -13.625965118408203
    5. '   ' → logprob: -14.000965118408203
    6. ' Point' → logprob: -14.625965118408203
    7. '=None' → logprob: -15.250965118408203
    8. '(None' → logprob: -16.875965118408203
    9. '...' → logprob: -17.125965118408203
    10. ')' → logprob: -17.250965118408203

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005651841638609767
    2. ',p' → logprob: -7.500565052032471
    3. ' ,' → logprob: -11.750565528869629
    4. 'p' → logprob: -12.875565528869629
    5. ' p' → logprob: -14.000565528869629
    6. ',
' → logprob: -15.125565528869629
    7. '   ' → logprob: -15.125565528869629
    8. ',None' → logprob: -15.375565528869629
    9. 'None' → logprob: -17.125564575195312
    10. ')' → logprob: -17.375564575195312

Token 912: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2014305740594864
    2. ' p' → logprob: -1.7014305591583252
    3. '   ' → logprob: -12.201430320739746
    4. '    ' → logprob: -12.701430320739746
    5. 'None' → logprob: -12.701430320739746
    6. '       ' → logprob: -13.451430320739746
    7. '        ' → logprob: -13.451430320739746
    8. ' None' → logprob: -14.326430320739746
    9. '      ' → logprob: -14.701430320739746
    10. '	p' → logprob: -14.826430320739746

Token 913: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. '1' → logprob: -12.875011444091797
    3. '   ' → logprob: -12.875011444091797
    4. 'oints' → logprob: -12.875011444091797
    5. 'oint' → logprob: -13.875011444091797
    6. '```' → logprob: -14.250011444091797
    7. ' ' → logprob: -14.375011444091797
    8. '       ' → logprob: -14.750011444091797
    9. 'Point' → logprob: -15.500011444091797
    10. 'def' → logprob: -16.250011444091797

Token 914: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034714414505288005
    2. '=' → logprob: -8.625347137451172
    3. '=None' → logprob: -8.875347137451172
    4. ')' → logprob: -11.375347137451172
    5. ' =' → logprob: -12.000347137451172
    6. ',' → logprob: -12.125347137451172
    7. '):' → logprob: -13.500347137451172
    8. ' :' → logprob: -13.625347137451172
    9. 'None' → logprob: -14.625347137451172
    10. '   ' → logprob: -14.750347137451172

Token 915: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.05585046485066414
    2. 'None' → logprob: -3.0558505058288574
    3. ' Point' → logprob: -5.055850505828857
    4. ' None' → logprob: -7.055850505828857
    5. '   ' → logprob: -14.3058500289917
    6. '...' → logprob: -14.3058500289917
    7. '	Point' → logprob: -14.8058500289917
    8. '<Point' → logprob: -15.8058500289917
    9. '.Point' → logprob: -16.055850982666016
    10. '=None' → logprob: -16.055850982666016

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08945976197719574
    2. '=None' → logprob: -2.7144596576690674
    3. ' =' → logprob: -3.9644596576690674
    4. 'None' → logprob: -8.214459419250488
    5. ')' → logprob: -9.964459419250488
    6. ' None' → logprob: -10.839459419250488
    7. '(None' → logprob: -11.089459419250488
    8. ' ' → logprob: -13.839459419250488
    9. '   ' → logprob: -14.339459419250488
    10. ',' → logprob: -14.964459419250488

Token 917: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005572011577896774
    2. ' None' → logprob: -7.5005574226379395
    3. 'Point' → logprob: -12.500556945800781
    4. '(None' → logprob: -15.375556945800781
    5. '   ' → logprob: -15.750556945800781
    6. '=None' → logprob: -16.12555694580078
    7. ' ' → logprob: -17.62555694580078
    8. 'none' → logprob: -17.87555694580078
    9. '...' → logprob: -18.00055694580078
    10. ',None' → logprob: -18.00055694580078

Token 918: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21883270144462585
    2. '):
' → logprob: -1.8438327312469482
    3. '):' → logprob: -3.3438327312469482
    4. ',' → logprob: -5.843832492828369
    5. '   ' → logprob: -9.968832969665527
    6. ' )' → logprob: -10.593832969665527
    7. '):
' → logprob: -10.718832969665527
    8. ':' → logprob: -11.093832969665527
    9. '):

' → logprob: -12.093832969665527
    10. '
' → logprob: -12.468832969665527

Token 919: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5992260575294495
    2. ':
' → logprob: -0.9742260575294495
    3. ',' → logprob: -2.7242259979248047
    4. '):
' → logprob: -5.724225997924805
    5. '       ' → logprob: -6.099225997924805
    6. '   ' → logprob: -6.599225997924805
    7. ')' → logprob: -7.724225997924805
    8. '->' → logprob: -9.349225997924805
    9. '):' → logprob: -10.474225997924805
    10. '<|end|>' → logprob: -10.724225997924805

Token 920: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001584850688232109
    2. ' None' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.000158309936523
    4. '(None' → logprob: -19.750158309936523
    5. '_None' → logprob: -20.125158309936523
    6. ' ' → logprob: -20.250158309936523
    7. '=None' → logprob: -20.750158309936523
    8. 'Point' → logprob: -21.125158309936523
    9. 'No' → logprob: -22.000158309936523
    10. 'void' → logprob: -22.125158309936523

Token 921: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018434131518006325
    2. ':
' → logprob: -4.018434047698975
    3. '       ' → logprob: -9.268434524536133
    4. '):
' → logprob: -9.518434524536133
    5. ',' → logprob: -9.893434524536133
    6. '   ' → logprob: -10.268434524536133
    7. '):' → logprob: -11.393434524536133
    8. ')' → logprob: -12.518434524536133
    9. '<|end|>' → logprob: -12.518434524536133
    10. ' :' → logprob: -13.518434524536133

Token 922: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009851736249402165
    2. ' if' → logprob: -7.625985145568848
    3. 'if' → logprob: -8.125985145568848
    4. '   ' → logprob: -9.125985145568848
    5. 'self' → logprob: -10.375985145568848
    6. '	' → logprob: -10.875985145568848
    7. 'If' → logprob: -11.750985145568848
    8. '<|end|>' → logprob: -11.875985145568848
    9. '        
' → logprob: -12.500985145568848
    10. 'None' → logprob: -12.750985145568848

Token 923: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005877717863768339
    2. 'if' → logprob: -5.255877494812012
    3. '       ' → logprob: -7.755877494812012
    4. ' self' → logprob: -8.505877494812012
    5. ' if' → logprob: -11.255877494812012
    6. '	self' → logprob: -15.755877494812012
    7. '   ' → logprob: -16.880878448486328
    8. '(self' → logprob: -18.380878448486328
    9. 'If' → logprob: -19.130878448486328
    10. '	if' → logprob: -19.630878448486328

Token 924: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00017123986617662013
    2. '.' → logprob: -8.750171661376953
    3. 'p' → logprob: -11.625171661376953
    4. ' .' → logprob: -12.625171661376953
    5. '   ' → logprob: -16.000171661376953
    6. '=' → logprob: -16.125171661376953
    7. ' p' → logprob: -16.875171661376953
    8. ' =' → logprob: -17.375171661376953
    9. ':' → logprob: -17.750171661376953
    10. '._' → logprob: -17.750171661376953

Token 925: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. '   ' → logprob: -13.875001907348633
    3. 'def' → logprob: -14.750001907348633
    4. 'p' → logprob: -15.250001907348633
    5. '_' → logprob: -16.125001907348633
    6. '       ' → logprob: -16.750001907348633
    7. '=' → logprob: -17.000001907348633
    8. 'class' → logprob: -17.125001907348633
    9. ' ' → logprob: -17.750001907348633
    10. '```' → logprob: -18.250001907348633

Token 926: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409260272979736
    2. ' =' → logprob: -0.9740926027297974
    3. ',' → logprob: -11.599092483520508
    4. '=p' → logprob: -12.224092483520508
    5. ' ' → logprob: -14.474092483520508
    6. ':' → logprob: -15.224092483520508
    7. '=None' → logprob: -15.474092483520508
    8. ' p' → logprob: -15.849092483520508
    9. 'p' → logprob: -16.349092483520508
    10. ' if' → logprob: -17.349092483520508

Token 927: ' Point' (ID: 9971)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20611296594142914
    2. ' p' → logprob: -1.8311129808425903
    3. 'Point' → logprob: -3.831112861633301
    4. ' Point' → logprob: -5.456112861633301
    5. '(p' → logprob: -11.3311128616333
    6. '   ' → logprob: -11.4561128616333
    7. ' ' → logprob: -11.8311128616333
    8. '(Point' → logprob: -12.2061128616333
    9. 'Points' → logprob: -12.5811128616333
    10. '=' → logprob: -12.6436128616333

Token 928: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002403199672699
    2. ' =' → logprob: -2.3502402305603027
    3. '=p' → logprob: -10.600240707397461
    4. ',' → logprob: -13.225240707397461
    5. '<|end|>' → logprob: -13.600240707397461
    6. '=None' → logprob: -13.600240707397461
    7. ' ' → logprob: -13.725240707397461
    8. '       ' → logprob: -13.725240707397461
    9. '=
' → logprob: -14.350240707397461
    10. 'p' → logprob: -14.850240707397461

Token 929: ' Point' (ID: 9971)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0032578078098595142
    2. ' p' → logprob: -6.378257751464844
    3. 'Point' → logprob: -6.503257751464844
    4. ' Point' → logprob: -10.503257751464844
    5. '   ' → logprob: -10.878257751464844
    6. '	p' → logprob: -13.253257751464844
    7. '(p' → logprob: -13.503257751464844
    8. ' ' → logprob: -13.503257751464844
    9. '       ' → logprob: -14.003257751464844
    10. 'point' → logprob: -14.003257751464844

Token 930: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031067728996276855
    2. '()
' → logprob: -6.878106594085693
    3. 'if' → logprob: -7.128106594085693
    4. '(' → logprob: -7.378106594085693
    5. '0' → logprob: -7.378106594085693
    6. 'p' → logprob: -11.753107070922852
    7. '(p' → logprob: -12.253107070922852
    8. '()

' → logprob: -12.378107070922852
    9. ' if' → logprob: -14.753107070922852
    10. '   ' → logprob: -14.753107070922852

Token 931: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.47904959321022034
    2. ' if' → logprob: -0.979049563407898
    3. '()' → logprob: -5.6040496826171875
    4. '       ' → logprob: -6.9790496826171875
    5. 'p' → logprob: -8.979049682617188
    6. '(p' → logprob: -8.979049682617188
    7. '	if' → logprob: -10.229049682617188
    8. '   ' → logprob: -10.979049682617188
    9. '
' → logprob: -11.104049682617188
    10. '(' → logprob: -12.229049682617188

Token 932: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015024791937321424
    2. ' p' → logprob: -6.501502513885498
    3. '	p' → logprob: -16.626502990722656
    4. '(p' → logprob: -16.876502990722656
    5. '<p' → logprob: -17.626502990722656
    6. '   ' → logprob: -17.751502990722656
    7. ' not' → logprob: -19.876502990722656
    8. ' ' → logprob: -20.001502990722656
    9. 'None' → logprob: -20.251502990722656
    10. 'not' → logprob: -20.376502990722656

Token 933: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.875
    3. 'None' → logprob: -16.5
    4. 'p' → logprob: -16.625
    5. 'oints' → logprob: -17.0
    6. '(p' → logprob: -17.875
    7. 'r' → logprob: -18.0
    8. 'aram' → logprob: -18.0
    9. '```' → logprob: -18.0
    10. 'ar' → logprob: -18.75

Token 934: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07891634106636047
    2. 'is' → logprob: -2.578916311264038
    3. 'else' → logprob: -12.078916549682617
    4. '==' → logprob: -12.203916549682617
    5. ' ' → logprob: -12.828916549682617
    6. '<|end|>' → logprob: -12.953916549682617
    7. '	is' → logprob: -13.203916549682617
    8. 'p' → logprob: -13.203916549682617
    9. ' else' → logprob: -13.578916549682617
    10. ' or' → logprob: -13.578916549682617

Token 935: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001584850688232109
    2. ' None' → logprob: -8.750158309936523
    3. '(None' → logprob: -18.000158309936523
    4. '   ' → logprob: -18.625158309936523
    5. '_None' → logprob: -18.750158309936523
    6. '=None' → logprob: -20.125158309936523
    7. 'none' → logprob: -20.625158309936523
    8. '       ' → logprob: -21.750158309936523
    9. '...' → logprob: -21.750158309936523
    10. '.None' → logprob: -22.250158309936523

Token 936: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47418853640556335
    2. ' else' → logprob: -0.9741885662078857
    3. '        ' → logprob: -9.724188804626465
    4. '	else' → logprob: -10.599188804626465
    5. '       ' → logprob: -11.099188804626465
    6. '<|end|>' → logprob: -12.849188804626465
    7. ' ' → logprob: -13.349188804626465
    8. ':' → logprob: -13.349188804626465
    9. '         ' → logprob: -14.099188804626465
    10. ' ' → logprob: -14.349188804626465

Token 937: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.2729995988775045e-06
    2. ' p' → logprob: -12.000006675720215
    3. 'point' → logprob: -18.0000057220459
    4. '	p' → logprob: -18.5000057220459
    5. 'Point' → logprob: -18.7500057220459
    6. 'copy' → logprob: -20.1250057220459
    7. '<p' → logprob: -20.3750057220459
    8. '   ' → logprob: -20.5000057220459
    9. 'points' → logprob: -20.8750057220459
    10. '
' → logprob: -21.0000057220459

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.643152740551159e-05
    2. 'oint' → logprob: -10.250036239624023
    3. 'oints' → logprob: -14.000036239624023
    4. 'oin' → logprob: -16.750036239624023
    5. '```' → logprob: -17.125036239624023
    6. 'p' → logprob: -17.750036239624023
    7. '   ' → logprob: -18.500036239624023
    8. 'copy' → logprob: -18.750036239624023
    9. 'unction' → logprob: -18.875036239624023
    10. '(p' → logprob: -19.000036239624023

Token 939: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001628525205887854
    2. 'self' → logprob: -7.001628398895264
    3. '<|end|>' → logprob: -7.876628398895264
    4. '
' → logprob: -8.876628875732422
    5. '   ' → logprob: -9.251628875732422
    6. '	' → logprob: -10.001628875732422
    7. ' self' → logprob: -11.251628875732422
    8. '<|end|>' → logprob: -11.751628875732422
    9. '	self' → logprob: -11.876628875732422
    10. ' ' → logprob: -12.001628875732422

Token 940: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004858458414673805
    2. 'self' → logprob: -7.750485897064209
    3. ' self' → logprob: -10.50048542022705
    4. '   ' → logprob: -11.25048542022705
    5. '<|end|>' → logprob: -12.12548542022705
    6. '
' → logprob: -12.87548542022705
    7. ' ' → logprob: -13.62548542022705
    8. '        
' → logprob: -13.62548542022705
    9. '           ' → logprob: -13.87548542022705
    10. '      ' → logprob: -14.50048542022705

Token 941: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.984787902794778e-05
    2. '       ' → logprob: -9.250100135803223
    3. ' self' → logprob: -12.500100135803223
    4. '	self' → logprob: -19.625099182128906
    5. '   ' → logprob: -20.500099182128906
    6. '(self' → logprob: -22.000099182128906
    7. 's' → logprob: -22.500099182128906
    8. '
' → logprob: -22.500099182128906
    9. ' ' → logprob: -22.500099182128906
    10. '           ' → logprob: -23.500099182128906

Token 942: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.392202976712724e-06
    2. 'p' → logprob: -12.250006675720215
    3. '.' → logprob: -13.500006675720215
    4. ' .' → logprob: -17.1250057220459
    5. '<p' → logprob: -17.2500057220459
    6. '```' → logprob: -18.1250057220459
    7. '	p' → logprob: -18.5000057220459
    8. ' p' → logprob: -18.6250057220459
    9. '2' → logprob: -18.7500057220459
    10. '   ' → logprob: -18.8750057220459

Token 943: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. 'oints' → logprob: -14.625001907348633
    3. 'oint' → logprob: -15.125001907348633
    4. 'p' → logprob: -15.625001907348633
    5. 't' → logprob: -16.437501907348633
    6. '۲' → logprob: -16.500001907348633
    7. ' ' → logprob: -16.687501907348633
    8. '1' → logprob: -16.937501907348633
    9. '   ' → logprob: -17.125001907348633
    10. 'r' → logprob: -17.125001907348633

Token 944: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47826817631721497
    2. '=' → logprob: -0.9782681465148926
    3. ' =' → logprob: -5.478268146514893
    4. ' :' → logprob: -12.22826862335205
    5. ' ' → logprob: -15.72826862335205
    6. '<|end|>' → logprob: -16.353267669677734
    7. ' if' → logprob: -16.603267669677734
    8. '<Point' → logprob: -16.603267669677734
    9. 'Point' → logprob: -16.978267669677734
    10. ')' → logprob: -16.978267669677734

Token 945: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0234714075922966
    2. ' Point' → logprob: -3.7734713554382324
    3. 'p' → logprob: -8.52347183227539
    4. ' p' → logprob: -10.52347183227539
    5. '(Point' → logprob: -16.64847183227539
    6. '	Point' → logprob: -17.27347183227539
    7. '_point' → logprob: -17.52347183227539
    8. 'point' → logprob: -17.52347183227539
    9. '_Point' → logprob: -17.64847183227539
    10. 'None' → logprob: -18.02347183227539

Token 946: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030849894508719444
    2. ' =' → logprob: -3.5308499336242676
    3. ':' → logprob: -7.280849933624268
    4. ' if' → logprob: -8.03084945678711
    5. 'if' → logprob: -9.40584945678711
    6. 'Point' → logprob: -14.53084945678711
    7. '(Point' → logprob: -14.65584945678711
    8. 'p' → logprob: -14.78084945678711
    9. '(' → logprob: -15.28084945678711
    10. '=
' → logprob: -15.53084945678711

Token 947: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.006744735408574343
    2. ' Point' → logprob: -5.006744861602783
    3. 'p' → logprob: -10.506744384765625
    4. ' p' → logprob: -13.131744384765625
    5. '_point' → logprob: -18.631744384765625
    6. '	Point' → logprob: -18.631744384765625
    7. '(Point' → logprob: -20.006744384765625
    8. 'point' → logprob: -20.256744384765625
    9. '_Point' → logprob: -20.381744384765625
    10. ' point' → logprob: -21.006744384765625

Token 948: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9361264946837764e-07
    2. '()
' → logprob: -15.875
    3. ' ()' → logprob: -16.75
    4. '0' → logprob: -18.25
    5. ')' → logprob: -18.75
    6. 'p' → logprob: -19.5
    7. 'if' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. '[]' → logprob: -20.75
    10. '()
' → logprob: -20.875

Token 949: ' if' (ID: 538)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06460624188184738
    2. 'if' → logprob: -2.814606189727783
    3. ' if' → logprob: -5.939606189727783
    4. 'p' → logprob: -14.939606666564941
    5. '()
' → logprob: -15.189606666564941
    6. ')' → logprob: -15.189606666564941
    7. 'If' → logprob: -15.314606666564941
    8. ' ()' → logprob: -15.439606666564941
    9. '	if' → logprob: -15.564606666564941
    10. '0' → logprob: -15.814606666564941

Token 950: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005530327325686812
    2. ' p' → logprob: -7.500553131103516
    3. '(p' → logprob: -17.000553131103516
    4. '   ' → logprob: -18.250553131103516
    5. '	p' → logprob: -19.000553131103516
    6. '```' → logprob: -19.000553131103516
    7. '<p' → logprob: -19.625553131103516
    8. 'None' → logprob: -20.000553131103516
    9. ')p' → logprob: -20.625553131103516
    10. '    ' → logprob: -20.750553131103516

Token 951: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. 'None' → logprob: -12.125006675720215
    3. '1' → logprob: -15.000006675720215
    4. '
' → logprob: -15.625006675720215
    5. ' ' → logprob: -15.625006675720215
    6. '_' → logprob: -15.750006675720215
    7. '   ' → logprob: -16.12500762939453
    8. 'p' → logprob: -16.50000762939453
    9. '=None' → logprob: -16.75000762939453
    10. ' None' → logprob: -16.87500762939453

Token 952: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5759400725364685
    2. ' is' → logprob: -0.8259400725364685
    3. 'if' → logprob: -15.325940132141113
    4. 'None' → logprob: -15.575940132141113
    5. 'Is' → logprob: -16.200939178466797
    6. ' if' → logprob: -16.950939178466797
    7. '	is' → logprob: -17.075939178466797
    8. ' ' → logprob: -17.575939178466797
    9. '   ' → logprob: -18.325939178466797
    10. '=None' → logprob: -18.450939178466797

Token 953: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.5491004129871726e-05
    2. ' None' → logprob: -10.000045776367188
    3. '(None' → logprob: -16.875045776367188
    4. 'none' → logprob: -18.125045776367188
    5. '=None' → logprob: -20.000045776367188
    6. '_None' → logprob: -21.625045776367188
    7. 'p' → logprob: -22.000045776367188
    8. '   ' → logprob: -22.875045776367188
    9. '_none' → logprob: -23.000045776367188
    10. '.None' → logprob: -23.250045776367188

Token 954: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0181526318192482
    2. ' else' → logprob: -4.018152713775635
    3. ':' → logprob: -13.268152236938477
    4. '        ' → logprob: -15.143152236938477
    5. '	else' → logprob: -15.518152236938477
    6. ' is' → logprob: -16.143152236938477
    7. '       ' → logprob: -16.518152236938477
    8. 'is' → logprob: -16.768152236938477
    9. '```' → logprob: -16.768152236938477
    10. 'elses' → logprob: -17.018152236938477

Token 955: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.494741632603109e-05
    2. ' p' → logprob: -9.37508487701416
    3. '(p' → logprob: -18.250085830688477
    4. '	p' → logprob: -19.125085830688477
    5. '   ' → logprob: -19.250085830688477
    6. '       ' → logprob: -20.000085830688477
    7. ' ' → logprob: -21.625085830688477
    8. '<p' → logprob: -21.625085830688477
    9. '    ' → logprob: -22.000085830688477
    10. '           ' → logprob: -22.250085830688477

Token 956: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4287140965461731
    2. 'p' → logprob: -1.0537140369415283
    3. ' p' → logprob: -11.42871379852295
    4. '   ' → logprob: -14.55371379852295
    5. ' ' → logprob: -15.05371379852295
    6. '(p' → logprob: -15.05371379852295
    7. '```' → logprob: -15.42871379852295
    8. '_p' → logprob: -15.67871379852295
    9. '₂' → logprob: -15.80371379852295
    10. '<p' → logprob: -15.92871379852295

Token 957: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0064455922693014145
    2. '
' → logprob: -5.631445407867432
    3. '<|end|>' → logprob: -6.131445407867432
    4. '    
' → logprob: -8.13144588470459
    5. 'def' → logprob: -8.63144588470459
    6. '<|end|>' → logprob: -8.88144588470459
    7. ' def' → logprob: -10.88144588470459
    8. '	def' → logprob: -11.25644588470459
    9. '

' → logprob: -11.63144588470459
    10. '       ' → logprob: -12.50644588470459

Token 958: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020698485895991325
    2. 'def' → logprob: -6.62706995010376
    3. '    
' → logprob: -8.002069473266602
    4. '
' → logprob: -9.252069473266602
    5. '<|end|>' → logprob: -9.252069473266602
    6. ' def' → logprob: -9.377069473266602
    7. '```' → logprob: -9.627069473266602
    8. '	def' → logprob: -10.377069473266602
    9. '<|end|>' → logprob: -10.752069473266602
    10. '        
' → logprob: -12.127069473266602

Token 959: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000293751887511462
    2. '   ' → logprob: -8.250293731689453
    3. ' def' → logprob: -10.375293731689453
    4. '
' → logprob: -13.750293731689453
    5. '    
' → logprob: -16.000293731689453
    6. '	def' → logprob: -17.000293731689453
    7. '```' → logprob: -19.000293731689453
    8. ' ' → logprob: -19.125293731689453
    9. '  
' → logprob: -20.125293731689453
    10. '        
' → logprob: -20.125293731689453

Token 960: ' __' (ID: 2516)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.0044334400445222855
    2. ' vector' → logprob: -5.504433631896973
    3. 'length' → logprob: -8.254433631896973
    4. '__' → logprob: -9.379433631896973
    5. 'reverse' → logprob: -12.504433631896973
    6. ' __' → logprob: -12.754433631896973
    7. ' length' → logprob: -13.379433631896973
    8. '_vector' → logprob: -13.379433631896973
    9. '.vector' → logprob: -15.254433631896973
    10. 'p' → logprob: -16.004432678222656

Token 961: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.02358412742614746
    2. 'eq' → logprob: -3.7735841274261475
    3. 'init' → logprob: -8.023584365844727
    4. 'lt' → logprob: -11.523584365844727
    5. 'str' → logprob: -14.898584365844727
    6. 'rep' → logprob: -15.023584365844727
    7. 'len' → logprob: -15.648584365844727
    8. 'iter' → logprob: -15.898584365844727
    9. 'bool' → logprob: -16.648584365844727
    10. 'hash' → logprob: -16.898584365844727

Token 962: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -8.804671233519912e-05
    2. '(self' → logprob: -9.50008773803711
    3. '__' → logprob: -11.75008773803711
    4. '__(
' → logprob: -12.25008773803711
    5. '__('' → logprob: -15.62508773803711
    6. '(' → logprob: -16.12508773803711
    7. '__("' → logprob: -17.00008773803711
    8. '_(' → logprob: -17.00008773803711
    9. '```' → logprob: -17.25008773803711
    10. 'self' → logprob: -17.75008773803711

Token 963: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9361264946837764e-07
    2. ' self' → logprob: -15.625
    3. ')' → logprob: -18.625
    4. '   ' → logprob: -19.5
    5. 's' → logprob: -19.75
    6. '(self' → logprob: -19.75
    7. '       ' → logprob: -20.875
    8. '
' → logprob: -22.125
    9. ' ' → logprob: -22.375
    10. 'def' → logprob: -23.75

Token 964: ')' (ID: 8)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6122580170631409
    2. '(self' → logprob: -0.9872580170631409
    3. ')(' → logprob: -3.112257957458496
    4. 'self' → logprob: -3.237257957458496
    5. ')' → logprob: -6.862257957458496
    6. '__' → logprob: -8.737257957458496
    7. '__(
' → logprob: -9.487257957458496
    8. '(' → logprob: -10.237257957458496
    9. ' self' → logprob: -10.362257957458496
    10. '```' → logprob: -10.737257957458496

Token 965: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.016616291366518e-05
    2. 'self' → logprob: -10.375070571899414
    3. '       ' → logprob: -10.750070571899414
    4. '   ' → logprob: -11.750070571899414
    5. '(' → logprob: -12.000070571899414
    6. ' self' → logprob: -14.500070571899414
    7. 'def' → logprob: -14.500070571899414
    8. '[self' → logprob: -14.625070571899414
    9. '(s' → logprob: -15.000070571899414
    10. 'return' → logprob: -15.250070571899414

Token 966: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0024756586644798517
    2. ' str' → logprob: -6.002475738525391
    3. 'string' → logprob: -17.62747573852539
    4. '[str' → logprob: -17.75247573852539
    5. '(str' → logprob: -19.00247573852539
    6. 'stri' → logprob: -19.25247573852539
    7. '	str' → logprob: -19.50247573852539
    8. ' ' → logprob: -20.00247573852539
    9. '   ' → logprob: -20.37747573852539
    10. '=str' → logprob: -20.62747573852539

Token 967: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014373981393873692
    2. '       ' → logprob: -4.389373779296875
    3. '(' → logprob: -6.889373779296875
    4. '(
' → logprob: -8.139373779296875
    5. 'self' → logprob: -8.264373779296875
    6. '   ' → logprob: -8.514373779296875
    7. '           ' → logprob: -10.514373779296875
    8. '(s' → logprob: -11.014373779296875
    9. '[' → logprob: -11.639373779296875
    10. ':
' → logprob: -11.764373779296875

Token 968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006707399734295905
    2. 'return' → logprob: -7.375670909881592
    3. ' return' → logprob: -10.125670433044434
    4. 'f' → logprob: -13.375670433044434
    5. '	' → logprob: -13.375670433044434
    6. '	return' → logprob: -14.875670433044434
    7. ' f' → logprob: -15.625670433044434
    8. '{return' → logprob: -15.750670433044434
    9. '   ' → logprob: -16.25067138671875
    10. '           ' → logprob: -16.50067138671875

Token 969: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005500310566276312
    2. '       ' → logprob: -5.255500316619873
    3. ' return' → logprob: -8.255499839782715
    4. 'f' → logprob: -12.130499839782715
    5. '   ' → logprob: -13.880499839782715
    6. '	return' → logprob: -16.25550079345703
    7. '           ' → logprob: -16.50550079345703
    8. '```' → logprob: -18.00550079345703
    9. '`' → logprob: -18.75550079345703
    10. ' f' → logprob: -19.25550079345703

Token 970: ' "' (ID: 392)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5136820673942566
    2. '"' → logprob: -1.0136821269989014
    3. ' f' → logprob: -3.2636821269989014
    4. ' "' → logprob: -7.513681888580322
    5. ''' → logprob: -10.51368236541748
    6. ' ' → logprob: -12.63868236541748
    7. ''f' → logprob: -12.88868236541748
    8. '"S' → logprob: -13.01368236541748
    9. '(f' → logprob: -14.63868236541748
    10. ''S' → logprob: -14.63868236541748

Token 971: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.00032151900813914835
    2. '"' → logprob: -8.375321388244629
    3. 'f' → logprob: -10.000321388244629
    4. 'Point' → logprob: -10.500321388244629
    5. ''' → logprob: -11.625321388244629
    6. ''S' → logprob: -12.750321388244629
    7. ' Segment' → logprob: -13.625321388244629
    8. 'Seg' → logprob: -13.750321388244629
    9. 'segment' → logprob: -13.750321388244629
    10. '{}' → logprob: -14.000321388244629

Token 972: '({},' (ID: 45594)
  Prédit: '({},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({},' → logprob: -0.00020354038861114532
    2. '({' → logprob: -8.500203132629395
    3. '(' → logprob: -17.37520408630371
    4. '(Point' → logprob: -18.50020408630371
    5. '(self' → logprob: -18.75020408630371
    6. '("' → logprob: -18.75020408630371
    7. '{},' → logprob: -18.87520408630371
    8. '{}' → logprob: -19.12520408630371
    9. '({})
' → logprob: -19.37520408630371
    10. '(({' → logprob: -19.75020408630371

Token 973: ' {})' (ID: 75167)
  Prédit: '{},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{},' → logprob: -0.0006332091288641095
    2. '{' → logprob: -8.000633239746094
    3. ' {},' → logprob: -8.750633239746094
    4. '{})' → logprob: -9.250633239746094
    5. 'self' → logprob: -11.125633239746094
    6. ',' → logprob: -11.125633239746094
    7. '{}' → logprob: -12.125633239746094
    8. ' ' → logprob: -13.125633239746094
    9. '({},' → logprob: -13.125633239746094
    10. '   ' → logprob: -13.250633239746094

Token 974: '".' (ID: 4050)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.0622328519821167
    2. '".' → logprob: -3.5622329711914062
    3. 'format' → logprob: -4.187232971191406
    4. '(self' → logprob: -4.187232971191406
    5. '(format' → logprob: -7.187232971191406
    6. ')' → logprob: -8.062232971191406
    7. 'self' → logprob: -8.187232971191406
    8. '.' → logprob: -9.812232971191406
    9. '(' → logprob: -10.062232971191406
    10. '"' → logprob: -10.812232971191406

Token 975: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.3856492842023727e-06
    2. '(format' → logprob: -14.000000953674316
    3. ' format' → logprob: -14.625000953674316
    4. '	format' → logprob: -18.625001907348633
    5. '.format' → logprob: -19.625001907348633
    6. 'Format' → logprob: -20.125001907348633
    7. 'repr' → logprob: -20.250001907348633
    8. '__' → logprob: -20.625001907348633
    9. 'form' → logprob: -20.875001907348633
    10. 'def' → logprob: -21.125001907348633

Token 976: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015574338613077998
    2. '(re' → logprob: -9.000155448913574
    3. 'self' → logprob: -10.500155448913574
    4. 'repr' → logprob: -12.625155448913574
    5. '(' → logprob: -13.625155448913574
    6. '(str' → logprob: -17.00015640258789
    7. '(
' → logprob: -17.12515640258789
    8. 're' → logprob: -19.25015640258789
    9. ' self' → logprob: -19.37515640258789
    10. '((' → logprob: -19.62515640258789

Token 977: '.p' (ID: 1201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11038780212402344
    2. '.p' → logprob: -2.3603878021240234
    3. '.self' → logprob: -4.985387802124023
    4. '.s' → logprob: -5.860387802124023
    5. ' self' → logprob: -8.360387802124023
    6. '.' → logprob: -9.235387802124023
    7. '(self' → logprob: -9.610387802124023
    8. 'p' → logprob: -10.735387802124023
    9. 'elf' → logprob: -11.610387802124023
    10. '	self' → logprob: -12.485387802124023

Token 978: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. 'self' → logprob: -14.000000953674316
    3. 'oints' → logprob: -15.500000953674316
    4. 'oint' → logprob: -16.000001907348633
    5. '   ' → logprob: -18.375001907348633
    6. ' ' → logprob: -18.875001907348633
    7. '```' → logprob: -18.875001907348633
    8. 'unction' → logprob: -19.125001907348633
    9. 'elf' → logprob: -19.312501907348633
    10. '(self' → logprob: -19.437501907348633

Token 979: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ',self' → logprob: -13.375001907348633
    3. ' ,' → logprob: -14.625001907348633
    4. 'self' → logprob: -15.750001907348633
    5. ',
' → logprob: -17.250001907348633
    6. ',p' → logprob: -18.500001907348633
    7. ',

' → logprob: -19.250001907348633
    8. '‌,' → logprob: -20.000001907348633
    9. ',s' → logprob: -20.250001907348633
    10. '),' → logprob: -20.750001907348633

Token 980: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602262556552887
    2. ' self' → logprob: -1.9102262258529663
    3. '(self' → logprob: -14.035225868225098
    4. '	self' → logprob: -14.660225868225098
    5. '       ' → logprob: -15.660225868225098
    6. '<|end|>' → logprob: -15.660225868225098
    7. ' ' → logprob: -16.160226821899414
    8. 's' → logprob: -16.660226821899414
    9. '[self' → logprob: -16.660226821899414
    10. '_self' → logprob: -17.285226821899414

Token 981: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.018489841371774673
    2. ',' → logprob: -4.143489837646484
    3. '.' → logprob: -6.018489837646484
    4. ')' → logprob: -11.768489837646484
    5. 'p' → logprob: -12.518489837646484
    6. ',p' → logprob: -12.518489837646484
    7. ' .' → logprob: -13.768489837646484
    8. '.s' → logprob: -14.393489837646484
    9. ',
' → logprob: -14.893489837646484
    10. ' ,' → logprob: -15.143489837646484

Token 982: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. 'p' → logprob: -14.37500286102295
    3. 'oints' → logprob: -14.50000286102295
    4. '1' → logprob: -15.00000286102295
    5. 'oint' → logprob: -15.06250286102295
    6. '   ' → logprob: -15.56250286102295
    7. ')' → logprob: -15.62500286102295
    8. '۲' → logprob: -15.87500286102295
    9. '```' → logprob: -16.187503814697266
    10. ' ' → logprob: -16.312503814697266

Token 983: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.5
    3. ' )' → logprob: -16.625
    4. '<|end|>' → logprob: -17.875
    5. ')}' → logprob: -18.125
    6. '))' → logprob: -18.125
    7. ')`' → logprob: -18.5
    8. '),' → logprob: -18.5
    9. '')' → logprob: -18.625
    10. ')#' → logprob: -18.875

Token 984: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04404576122760773
    2. 'def' → logprob: -3.1690456867218018
    3. '
' → logprob: -7.169045925140381
    4. ' def' → logprob: -8.919045448303223
    5. '	def' → logprob: -9.419045448303223
    6. '    
' → logprob: -10.169045448303223
    7. '```' → logprob: -11.294045448303223
    8. '  ' → logprob: -13.169045448303223
    9. ' ' → logprob: -13.294045448303223
    10. '<|end|>' → logprob: -13.919045448303223

Token 985: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000205566844670102
    2. '   ' → logprob: -8.500205993652344
    3. ' def' → logprob: -13.125205993652344
    4. '
' → logprob: -17.500205993652344
    5. '    
' → logprob: -17.875205993652344
    6. '	def' → logprob: -18.500205993652344
    7. 'class' → logprob: -20.250205993652344
    8. 'from' → logprob: -20.750205993652344
    9. '```' → logprob: -21.000205993652344
    10. '@' → logprob: -22.375205993652344

Token 986: ' __' (ID: 2516)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.006348572671413422
    2. 'length' → logprob: -5.131348609924316
    3. ' vector' → logprob: -8.006348609924316
    4. 'reverse' → logprob: -10.131348609924316
    5. 'def' → logprob: -10.506348609924316
    6. '   ' → logprob: -11.756348609924316
    7. 'p' → logprob: -12.506348609924316
    8. ' length' → logprob: -12.756348609924316
    9. 'Vector' → logprob: -14.131348609924316
    10. 'vec' → logprob: -14.631348609924316

Token 987: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -3.2855416066013277e-05
    2. 'lt' → logprob: -10.625032424926758
    3. 'init' → logprob: -12.000032424926758
    4. 'len' → logprob: -13.875032424926758
    5. 'bool' → logprob: -14.375032424926758
    6. 'iter' → logprob: -14.750032424926758
    7. 'hash' → logprob: -15.625032424926758
    8. 'add' → logprob: -15.750032424926758
    9. ' eq' → logprob: -16.875032424926758
    10. 'getitem' → logprob: -17.000032424926758

Token 988: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -7.612634362885728e-05
    2. '__' → logprob: -9.500076293945312
    3. '__(
' → logprob: -13.875076293945312
    4. '__((' → logprob: -15.750076293945312
    5. '__(*' → logprob: -16.625076293945312
    6. '__('' → logprob: -17.125076293945312
    7. '(self' → logprob: -17.875076293945312
    8. '__("' → logprob: -18.500076293945312
    9. '__[' → logprob: -19.500076293945312
    10. '(' → logprob: -19.875076293945312

Token 989: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: 0.0
    2. ' self' → logprob: -16.75
    3. '
' → logprob: -19.875
    4. '(self' → logprob: -20.75
    5. '   ' → logprob: -21.75
    6. '```' → logprob: -22.0
    7. 's' → logprob: -22.625
    8. '       ' → logprob: -22.75
    9. '	self' → logprob: -22.75
    10. 'other' → logprob: -22.875

Token 990: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007771420758217573
    2. '__(' → logprob: -4.8827714920043945
    3. '(' → logprob: -9.257771492004395
    4. ' (' → logprob: -10.382771492004395
    5. 'self' → logprob: -11.007771492004395
    6. ',' → logprob: -11.632771492004395
    7. ')(' → logprob: -11.882771492004395
    8. ')' → logprob: -13.632771492004395
    9. '```' → logprob: -13.632771492004395
    10. '__' → logprob: -13.882771492004395

Token 991: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013858173042535782
    2. 'other' → logprob: -9.000138282775879
    3. ' self' → logprob: -11.125138282775879
    4. '       ' → logprob: -15.875138282775879
    5. ' other' → logprob: -15.875138282775879
    6. '   ' → logprob: -17.000139236450195
    7. '(self' → logprob: -17.625139236450195
    8. '
' → logprob: -18.750139236450195
    9. '           ' → logprob: -19.250139236450195
    10. 'object' → logprob: -19.375139236450195

Token 992: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016649115830659866
    2. '__:' → logprob: -4.14164924621582
    3. '__' → logprob: -8.01664924621582
    4. ' :' → logprob: -9.26664924621582
    5. 'self' → logprob: -9.39164924621582
    6. '__(' → logprob: -10.26664924621582
    7. ')' → logprob: -11.14164924621582
    8. ',' → logprob: -11.51664924621582
    9. '):' → logprob: -11.64164924621582
    10. 'import' → logprob: -11.89164924621582

Token 993: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.018167153000831604
    2. ' object' → logprob: -4.018167018890381
    3. ''' → logprob: -11.893167495727539
    4. '(object' → logprob: -12.018167495727539
    5. 'self' → logprob: -13.643167495727539
    6. 'Object' → logprob: -14.268167495727539
    7. '.object' → logprob: -14.643167495727539
    8. ')object' → logprob: -14.643167495727539
    9. '	object' → logprob: -14.893167495727539
    10. ''s' → logprob: -15.018167495727539

Token 994: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. ':' → logprob: -12.250007629394531
    3. ')->' → logprob: -13.500007629394531
    4. ' )' → logprob: -14.250007629394531
    5. '')' → logprob: -14.500007629394531
    6. '`)' → logprob: -16.87500762939453
    7. ')object' → logprob: -17.37500762939453
    8. '   ' → logprob: -17.75000762939453
    9. '")' → logprob: -17.87500762939453
    10. '       ' → logprob: -18.00000762939453

Token 995: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.298816055059433
    2. ')' → logprob: -2.173815965652466
    3. ' ->' → logprob: -2.173815965652466
    4. ':' → logprob: -3.548815965652466
    5. ')->' → logprob: -6.298816204071045
    6. '       ' → logprob: -9.548815727233887
    7. '   ' → logprob: -9.798815727233887
    8. ' )' → logprob: -10.548815727233887
    9. '>' → logprob: -11.173815727233887
    10. ' )->' → logprob: -11.548815727233887

Token 996: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -1.676292231422849e-05
    2. ' bool' → logprob: -11.000017166137695
    3. '	bool' → logprob: -18.000017166137695
    4. '   ' → logprob: -18.875017166137695
    5. '<bool' → logprob: -19.000017166137695
    6. ' ' → logprob: -19.625017166137695
    7. '```' → logprob: -20.500017166137695
    8. '       ' → logprob: -20.875017166137695
    9. '(bool' → logprob: -21.750017166137695
    10. '
' → logprob: -21.750017166137695

Token 997: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041638366878032684
    2. '       ' → logprob: -3.5416383743286133
    3. ':
' → logprob: -4.916638374328613
    4. '->' → logprob: -5.791638374328613
    5. ')' → logprob: -7.041638374328613
    6. ' ->' → logprob: -7.916638374328613
    7. '   ' → logprob: -9.791638374328613
    8. ')->' → logprob: -10.291638374328613
    9. '->____' → logprob: -10.416638374328613
    10. '):
' → logprob: -10.791638374328613

Token 998: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.73183855926618e-05
    2. ' if' → logprob: -9.750077247619629
    3. '   ' → logprob: -11.000077247619629
    4. 'if' → logprob: -14.000077247619629
    5. '<|end|>' → logprob: -15.000077247619629
    6. ' ' → logprob: -15.500077247619629
    7. '      ' → logprob: -15.625077247619629
    8. '	if' → logprob: -15.750077247619629
    9. '```' → logprob: -15.750077247619629
    10. '	' → logprob: -15.875077247619629

Token 999: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003985792864114046
    2. '       ' → logprob: -5.75398588180542
    3. ' if' → logprob: -7.12898588180542
    4. 'return' → logprob: -13.128985404968262
    5. '           ' → logprob: -13.628985404968262
    6. 'not' → logprob: -13.628985404968262
    7. '   ' → logprob: -14.378985404968262
    8. '
' → logprob: -14.878985404968262
    9. 'is' → logprob: -15.003985404968262
    10. 'If' → logprob: -15.878985404968262

Token 1000: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.04858771339058876
    2. 'not' → logprob: -3.0485877990722656
    3. '(not' → logprob: -16.423587799072266
    4. '	not' → logprob: -16.548587799072266
    5. 'self' → logprob: -17.798587799072266
    6. 'Not' → logprob: -18.173587799072266
    7. ' self' → logprob: -18.423587799072266
    8. '   ' → logprob: -18.548587799072266
    9. '       ' → logprob: -19.048587799072266
    10. '_not' → logprob: -19.048587799072266

Token 1001: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00020449401927180588
    2. ' isinstance' → logprob: -8.500204086303711
    3. '(is' → logprob: -13.875204086303711
    4. '   ' → logprob: -18.50020408630371
    5. 'Is' → logprob: -19.00020408630371
    6. 'self' → logprob: -20.12520408630371
    7. '           ' → logprob: -20.37520408630371
    8. '       ' → logprob: -20.62520408630371
    9. '
' → logprob: -21.12520408630371
    10. '    ' → logprob: -21.50020408630371

Token 1002: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -2.15310683415737e-05
    2. 'other' → logprob: -10.750021934509277
    3. '(self' → logprob: -17.75002098083496
    4. 'Other' → logprob: -18.75002098083496
    5. ' other' → logprob: -18.87502098083496
    6. 'self' → logprob: -22.12502098083496
    7. '(' → logprob: -23.00002098083496
    8. '_other' → logprob: -24.37502098083496
    9. '-other' → logprob: -24.62502098083496
    10. '.other' → logprob: -24.75002098083496

Token 1003: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0020925651770085096
    2. 'other' → logprob: -6.377092361450195
    3. ',' → logprob: -7.877092361450195
    4. ' other' → logprob: -11.877092361450195
    5. 'Other' → logprob: -13.002092361450195
    6. 'self' → logprob: -13.877092361450195
    7. '(self' → logprob: -14.752092361450195
    8. '-other' → logprob: -16.252092361450195
    9. '.other' → logprob: -16.627092361450195
    10. ')' → logprob: -17.002092361450195

Token 1004: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -5.991464786347933e-05
    2. 'Point' → logprob: -10.250060081481934
    3. ' Segment' → logprob: -10.625060081481934
    4. 'self' → logprob: -16.375059127807617
    5. 'Seg' → logprob: -17.625059127807617
    6. '
' → logprob: -18.375059127807617
    7. 'type' → logprob: -18.500059127807617
    8. 'segment' → logprob: -20.125059127807617
    9. ' ' → logprob: -20.375059127807617
    10. ')' → logprob: -20.625059127807617

Token 1005: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869932293891907
    2. '):' → logprob: -1.136993169784546
    3. '):
' → logprob: -10.136993408203125
    4. ')' → logprob: -10.386993408203125
    5. '       ' → logprob: -10.636993408203125
    6. '):

' → logprob: -11.761993408203125
    7. ',' → logprob: -11.761993408203125
    8. 'self' → logprob: -12.761993408203125
    9. ':' → logprob: -13.136993408203125
    10. '   ' → logprob: -13.386993408203125

Token 1006: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.2729995988775045e-06
    2. 'return' → logprob: -12.250006675720215
    3. ' return' → logprob: -15.250006675720215
    4. '<|end|>' → logprob: -15.375006675720215
    5. '       ' → logprob: -15.500006675720215
    6. '{return' → logprob: -15.625006675720215
    7. '          ' → logprob: -15.625006675720215
    8. '   ' → logprob: -15.750006675720215
    9. '{
' → logprob: -16.6250057220459
    10. '	       ' → logprob: -16.7500057220459

Token 1007: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7135140299797058
    2. 'return' → logprob: -0.7135140299797058
    3. '#' (adapté à ' #') → logprob: -3.9635140895843506
    4. ' return' → logprob: -6.9635138511657715
    5. '       ' → logprob: -8.83851432800293
    6. '   ' → logprob: -9.58851432800293
    7. ' ' → logprob: -13.46351432800293
    8. '
' → logprob: -13.71351432800293
    9. '{return' → logprob: -13.96351432800293
    10. '  ' → logprob: -15.08851432800293

Token 1008: ' print' (ID: 2123)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.32806849479675293
    2. '           ' → logprob: -1.328068494796753
    3. ' return' → logprob: -4.578068733215332
    4. '       ' → logprob: -5.453068733215332
    5. ' ' → logprob: -9.703068733215332
    6. '          ' → logprob: -10.953068733215332
    7. '   ' → logprob: -11.078068733215332
    8. '#' → logprob: -11.203068733215332
    9. '         ' → logprob: -11.828068733215332
    10. 'print' → logprob: -11.953068733215332

Token 1009: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3150384724140167
    2. 'Not' → logprob: -1.5650384426116943
    3. '(Not' → logprob: -2.8150384426116943
    4. 'return' → logprob: -7.190038681030273
    5. '"' → logprob: -8.565038681030273
    6. ' Not' → logprob: -8.940038681030273
    7. '.Not' → logprob: -9.815038681030273
    8. '\Not' → logprob: -10.315038681030273
    9. '(' → logprob: -10.440038681030273
    10. '_Not' → logprob: -10.815038681030273

Token 1010: 'Not' (ID: 2874)
  Prédit: 'Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -4.320199877838604e-07
    2. ' Not' → logprob: -15.125
    3. 'Implemented' → logprob: -16.0
    4. 'return' → logprob: -17.25
    5. 'not' → logprob: -17.5
    6. '(Not' → logprob: -18.75
    7. '_Not' → logprob: -19.5
    8. '
' → logprob: -19.875
    9. '"' → logprob: -20.0
    10. '@Not' → logprob: -20.0

Token 1011: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -1.981667537620524e-06
    2. 'implemented' → logprob: -13.500001907348633
    3. 'Implement' → logprob: -14.625001907348633
    4. ' implemented' → logprob: -17.000001907348633
    5. 'Implementation' → logprob: -18.125001907348633
    6. 'Impl' → logprob: -18.375001907348633
    7. '_IMPLEMENT' → logprob: -18.875001907348633
    8. 'Completed' → logprob: -18.875001907348633
    9. 'Supported' → logprob: -19.000001907348633
    10. 'Initialized' → logprob: -19.375001907348633

Token 1012: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7454288005828857
    2. 'return' → logprob: -0.7454288005828857
    3. '
' → logprob: -3.7454288005828857
    4. '       ' → logprob: -4.370429039001465
    5. ' return' → logprob: -5.370429039001465
    6. ')return' → logprob: -5.995429039001465
    7. '(' → logprob: -6.370429039001465
    8. '(return' → logprob: -6.620429039001465
    9. ')
' → logprob: -7.120429039001465
    10. ')' → logprob: -7.120429039001465

Token 1013: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0006628761766478419
    2. ' Segment' → logprob: -7.375662803649902
    3. 'Point' → logprob: -10.375662803649902
    4. 'Seg' → logprob: -12.375662803649902
    5. 'Segments' → logprob: -14.500662803649902
    6. 'segment' → logprob: -16.00066375732422
    7. ' ' → logprob: -16.37566375732422
    8. 'self' → logprob: -17.37566375732422
    9. 'Sequence' → logprob: -17.62566375732422
    10. 'Section' → logprob: -17.75066375732422

Token 1014: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3337251842021942
    2. '       ' → logprob: -1.3337252140045166
    3. '")' → logprob: -4.7087249755859375
    4. 'return' → logprob: -5.2087249755859375
    5. ')' → logprob: -6.0837249755859375
    6. '")
' → logprob: -6.3337249755859375
    7. ')
' → logprob: -7.5837249755859375
    8. '<|end|>' → logprob: -7.7087249755859375
    9. ')return' → logprob: -8.208724975585938
    10. ' return' → logprob: -8.958724975585938

Token 1015: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0233134962618351
    2. '       ' → logprob: -3.773313522338867
    3. 'return' → logprob: -9.773313522338867
    4. '   ' → logprob: -12.148313522338867
    5. ' return' → logprob: -13.273313522338867
    6. '	       ' → logprob: -13.773313522338867
    7. '               ' → logprob: -14.273313522338867
    8. '         ' → logprob: -14.523313522338867
    9. ' ' → logprob: -14.773313522338867
    10. '          ' → logprob: -14.773313522338867

Token 1016: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10646083950996399
    2. '       ' → logprob: -2.3564608097076416
    3. '           ' → logprob: -5.106461048126221
    4. ' return' → logprob: -8.731460571289062
    5. '   ' → logprob: -11.106460571289062
    6. ':return' → logprob: -15.731460571289062
    7. '{return' → logprob: -15.731460571289062
    8. ' ' → logprob: -15.856460571289062
    9. '	return' → logprob: -16.106460571289062
    10. '     ' → logprob: -16.856460571289062

Token 1017: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.00021521867893170565
    2. ' Not' → logprob: -8.500215530395508
    3. 'False' → logprob: -11.375215530395508
    4. '_Not' → logprob: -15.625215530395508
    5. 'not' → logprob: -17.125215530395508
    6. '_not' → logprob: -17.375215530395508
    7. ' not' → logprob: -19.125215530395508
    8. '
' → logprob: -19.250215530395508
    9. '@Not' → logprob: -19.625215530395508
    10. '\Not' → logprob: -20.000215530395508

Token 1018: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.386938214302063
    2. 'Not' → logprob: -1.136938214302063
    3. 'Implement' → logprob: -10.386938095092773
    4. 'implemented' → logprob: -11.886938095092773
    5. 'Supported' → logprob: -12.261938095092773
    6. 'Point' → logprob: -12.761938095092773
    7. 'Specified' → logprob: -12.761938095092773
    8. 'Defined' → logprob: -13.386938095092773
    9. '.Not' → logprob: -13.386938095092773
    10. 'Initialized' → logprob: -13.636938095092773

Token 1019: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.236549335066229e-05
    2. '
' → logprob: -11.000021934509277
    3. '<|end|>' → logprob: -13.125021934509277
    4. '	' → logprob: -13.750021934509277
    5. 'return' → logprob: -14.875021934509277
    6. ')' → logprob: -14.875021934509277
    7. '   ' → logprob: -15.000021934509277
    8. '           ' → logprob: -15.125021934509277
    9. ',' → logprob: -15.250021934509277
    10. '      ' → logprob: -15.875021934509277

Token 1020: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.375003814697266
    3. 'return' → logprob: -14.250003814697266
    4. '
' → logprob: -15.000003814697266
    5. '```' → logprob: -15.375003814697266
    6. ' return' → logprob: -15.500003814697266
    7. ')' → logprob: -15.875003814697266
    8. '<|end|>' → logprob: -16.000003814697266
    9. '​' → logprob: -16.125003814697266
    10. '	' → logprob: -16.250003814697266

Token 1021: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00027432903880253434
    2. '       ' → logprob: -8.250274658203125
    3. ' return' → logprob: -11.250274658203125
    4. '	return' → logprob: -17.625274658203125
    5. '   ' → logprob: -18.375274658203125
    6. 'if' → logprob: -18.750274658203125
    7. 'def' → logprob: -19.875274658203125
    8. 'result' → logprob: -20.000274658203125
    9. '```' → logprob: -21.500274658203125
    10. 'Return' → logprob: -21.750274658203125

Token 1022: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25266531109809875
    2. '(self' → logprob: -1.5026652812957764
    3. ' self' → logprob: -7.5026655197143555
    4. ' (' → logprob: -9.002665519714355
    5. '((' → logprob: -10.002665519714355
    6. '   ' → logprob: -11.627665519714355
    7. '(' → logprob: -12.502665519714355
    8. 'float' → logprob: -13.127665519714355
    9. '(
' → logprob: -14.627665519714355
    10. '	self' → logprob: -14.752665519714355

Token 1023: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00019388488726690412
    2. '==' → logprob: -9.00019359588623
    3. ' ==' → logprob: -10.12519359588623
    4. '.' → logprob: -11.25019359588623
    5. 'p' → logprob: -11.87519359588623
    6. ' .' → logprob: -12.00019359588623
    7. '.s' → logprob: -13.50019359588623
    8. 'self' → logprob: -14.00019359588623
    9. '.__' → logprob: -14.00019359588623
    10. '   ' → logprob: -15.50019359588623

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'oints' → logprob: -14.375000953674316
    3. ' ' → logprob: -16.125
    4. '<|end|>' → logprob: -16.5
    5. 'p' → logprob: -17.375
    6. '<|end|>' → logprob: -17.625
    7. 's' → logprob: -18.0
    8. '2' → logprob: -18.125
    9. 'self' → logprob: -18.125
    10. '   ' → logprob: -18.375

Token 1025: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759465098381042
    2. '==' → logprob: -0.8259465098381042
    3. '==
' → logprob: -12.075946807861328
    4. '=' → logprob: -14.575946807861328
    5. ')==' → logprob: -14.825946807861328
    6. '()==' → logprob: -15.950946807861328
    7. ' ==
' → logprob: -16.325946807861328
    8. '===' → logprob: -16.700946807861328
    9. '__' → logprob: -16.950946807861328
    10. ')' → logprob: -16.950946807861328

Token 1026: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0007099286303855479
    2. ' other' → logprob: -7.2507100105285645
    3. '(other' → logprob: -18.500709533691406
    4. '
' → logprob: -18.750709533691406
    5. 'self' → logprob: -20.125709533691406
    6. ' ' → logprob: -20.250709533691406
    7. 'Other' → logprob: -20.875709533691406
    8. '   ' → logprob: -20.875709533691406
    9. '.other' → logprob: -21.250709533691406
    10. '       ' → logprob: -22.750709533691406

Token 1027: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0013449963880702853
    2. 'p' → logprob: -7.251345157623291
    3. '.' → logprob: -7.376345157623291
    4. '<p' → logprob: -12.376344680786133
    5. ' .' → logprob: -13.001344680786133
    6. '.
' → logprob: -14.001344680786133
    7. '.s' → logprob: -14.751344680786133
    8. ' p' → logprob: -15.126344680786133
    9. 'self' → logprob: -15.501344680786133
    10. '
' → logprob: -16.251344680786133

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. 'oint' → logprob: -10.250041007995605
    3. 'oints' → logprob: -12.625041007995605
    4. '2' → logprob: -13.625041007995605
    5. 'p' → logprob: -14.625041007995605
    6. 'oin' → logprob: -16.75004005432129
    7. '```' → logprob: -17.25004005432129
    8. 't' → logprob: -17.37504005432129
    9. '   ' → logprob: -18.75004005432129
    10. 'ont' → logprob: -18.87504005432129

Token 1029: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021055489778519
    2. 'and' → logprob: -2.350210666656494
    3. '       ' → logprob: -12.850210189819336
    4. '           ' → logprob: -15.100210189819336
    5. ' or' → logprob: -15.600210189819336
    6. '   ' → logprob: -15.850210189819336
    7. '&&' → logprob: -16.100210189819336
    8. ' ' → logprob: -16.350210189819336
    9. '        ' → logprob: -16.350210189819336
    10. '\
' → logprob: -16.475210189819336

Token 1030: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3868861794471741
    2. 'self' → logprob: -1.1368861198425293
    3. '       ' → logprob: -11.386886596679688
    4. '(self' → logprob: -12.886886596679688
    5. '	self' → logprob: -14.511886596679688
    6. '```' → logprob: -15.511886596679688
    7. '<|end|>' → logprob: -15.636886596679688
    8. 'Self' → logprob: -16.011886596679688
    9. '           ' → logprob: -16.511886596679688
    10. '[self' → logprob: -17.011886596679688

Token 1031: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.778209353797138e-05
    2. 'p' → logprob: -10.125067710876465
    3. '.' → logprob: -10.750067710876465
    4. 'self' → logprob: -12.125067710876465
    5. ' .' → logprob: -15.000067710876465
    6. ' p' → logprob: -15.375067710876465
    7. '```' → logprob: -15.625067710876465
    8. '.s' → logprob: -17.00006866455078
    9. '<p' → logprob: -17.62506866455078
    10. ' ' → logprob: -18.25006866455078

Token 1032: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. 'p' → logprob: -14.250001907348633
    3. '1' → logprob: -15.750001907348633
    4. ' ' → logprob: -16.000001907348633
    5. 'self' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.500001907348633
    7. '<p' → logprob: -17.312501907348633
    8. '```' → logprob: -17.312501907348633
    9. '
' → logprob: -17.562501907348633
    10. '۲' → logprob: -17.750001907348633

Token 1033: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10024010390043259
    2. ' ==' → logprob: -2.3502399921417236
    3. '==
' → logprob: -10.350239753723145
    4. '<|end|>' → logprob: -14.975239753723145
    5. ')==' → logprob: -15.350239753723145
    6. '=' → logprob: -15.350239753723145
    7. '==(' → logprob: -15.475239753723145
    8. ' ==
' → logprob: -15.725239753723145
    9. ']==' → logprob: -15.975239753723145
    10. '()==' → logprob: -16.72524070739746

Token 1034: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0067154900170862675
    2. ' other' → logprob: -5.006715297698975
    3. '(other' → logprob: -16.506715774536133
    4. 'Other' → logprob: -19.131715774536133
    5. '.other' → logprob: -19.256715774536133
    6. '_other' → logprob: -20.381715774536133
    7. 'self' → logprob: -22.131715774536133
    8. 'OTHER' → logprob: -23.381715774536133
    9. '其他' → logprob: -24.006715774536133
    10. '
' → logprob: -24.131715774536133

Token 1035: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0010850901016965508
    2. '.' → logprob: -6.87608528137207
    3. 'p' → logprob: -9.87608528137207
    4. '2' → logprob: -15.37608528137207
    5. ' .' → logprob: -15.37608528137207
    6. '.s' → logprob: -16.00108528137207
    7. 'self' → logprob: -16.62608528137207
    8. '```' → logprob: -16.62608528137207
    9. '[' → logprob: -17.62608528137207
    10. '.п' → logprob: -17.87608528137207

Token 1036: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.7994282795116305e-05
    2. 'p' → logprob: -10.00004768371582
    3. 's' → logprob: -13.62504768371582
    4. ' ' → logprob: -15.00004768371582
    5. '```' → logprob: -15.25004768371582
    6. 't' → logprob: -15.75004768371582
    7. '.p' → logprob: -16.00004768371582
    8. '<p' → logprob: -16.50004768371582
    9. 'self' → logprob: -16.62504768371582
    10. '.' → logprob: -16.68754768371582

Token 1037: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13124090433120728
    2. '<|end|>' → logprob: -2.1312408447265625
    3. '
' → logprob: -6.6312408447265625
    4. '<|end|>' → logprob: -7.2562408447265625
    5. 'and' → logprob: -7.5062408447265625
    6. ' and' → logprob: -7.8812408447265625
    7. ' or' → logprob: -8.006240844726562
    8. '    
' → logprob: -8.131240844726562
    9. ' ' → logprob: -8.881240844726562
    10. ')' → logprob: -9.006240844726562

Token 1038: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.97155623533763e-05
    2. 'def' → logprob: -9.625089645385742
    3. '```' → logprob: -11.125089645385742
    4. '    
' → logprob: -12.250089645385742
    5. '
' → logprob: -12.625089645385742
    6. ' def' → logprob: -15.250089645385742
    7. '<|end|>' → logprob: -15.250089645385742
    8. '>' → logprob: -16.000089645385742
    9. '<|end|>' → logprob: -16.125089645385742
    10. '        
' → logprob: -17.000089645385742

Token 1039: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6937578320503235
    2. 'def' (adapté à ' def') → logprob: -0.6937578320503235
    3. ' def' → logprob: -7.568758010864258
    4. '```' → logprob: -10.193758010864258
    5. '    
' → logprob: -10.693758010864258
    6. '
' → logprob: -10.818758010864258
    7. '	def' → logprob: -11.693758010864258
    8. '@property' → logprob: -13.568758010864258
    9. '  ' → logprob: -13.568758010864258
    10. '    ' → logprob: -14.443758010864258

Token 1040: ' vector' (ID: 9727)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.01271918322890997
    2. ' vector' → logprob: -4.51271915435791
    3. 'reverse' → logprob: -6.88771915435791
    4. 'length' → logprob: -7.38771915435791
    5. ' reverse' → logprob: -11.01271915435791
    6. ' length' → logprob: -11.38771915435791
    7. ' ' → logprob: -13.76271915435791
    8. '_vector' → logprob: -14.76271915435791
    9. 'Vector' → logprob: -15.01271915435791
    10. '   ' → logprob: -15.38771915435791

Token 1041: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.125005722045898
    3. '(s' → logprob: -15.125005722045898
    4. ' (' → logprob: -15.250005722045898
    5. 'self' → logprob: -15.875005722045898
    6. '   ' → logprob: -17.5000057220459
    7. '(
' → logprob: -17.6250057220459
    8. 'def' → logprob: -18.2500057220459
    9. '()' → logprob: -18.6250057220459
    10. '=self' → logprob: -18.7500057220459

Token 1042: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -12.375009536743164
    3. ')' → logprob: -13.250009536743164
    4. 'self' → logprob: -13.500009536743164
    5. '(s' → logprob: -13.875009536743164
    6. ' (' → logprob: -14.125009536743164
    7. '()' → logprob: -15.375009536743164
    8. ')(' → logprob: -15.625009536743164
    9. 'def' → logprob: -15.875009536743164
    10. '(sel' → logprob: -16.250009536743164

Token 1043: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.500001907348633
    3. 'self' → logprob: -15.250001907348633
    4. '(s' → logprob: -15.250001907348633
    5. ' (' → logprob: -16.125001907348633
    6. ' self' → logprob: -17.875001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '       ' → logprob: -18.625001907348633
    9. '(Self' → logprob: -18.625001907348633
    10. '(
' → logprob: -19.000001907348633

Token 1044: ' Vector' (ID: 8764)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -5.7292167184641585e-05
    2. 'Vector' → logprob: -10.500057220458984
    3. ''' → logprob: -11.000057220458984
    4. ' Point' → logprob: -11.250057220458984
    5. '(Point' → logprob: -17.625057220458984
    6. '	Point' → logprob: -17.625057220458984
    7. ''s' → logprob: -19.625057220458984
    8. '<Point' → logprob: -20.000057220458984
    9. '_Point' → logprob: -20.250057220458984
    10. '`' → logprob: -20.875057220458984

Token 1045: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5485737919807434
    2. ':' → logprob: -1.0485737323760986
    3. ':
' → logprob: -3.4235737323760986
    4. '->' → logprob: -3.7985737323760986
    5. ')' → logprob: -5.048573970794678
    6. '()' → logprob: -5.173573970794678
    7. '():
' → logprob: -6.298573970794678
    8. '(' → logprob: -7.548573970794678
    9. '():' → logprob: -7.548573970794678
    10. ' ->' → logprob: -7.548573970794678

Token 1046: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6710425019264221
    2. 'return' → logprob: -0.7960425019264221
    3. '       ' → logprob: -3.9210424423217773
    4. '   ' → logprob: -4.421042442321777
    5. '	return' → logprob: -5.421042442321777
    6. '<|end|>' → logprob: -7.546042442321777
    7. '        
' → logprob: -8.046042442321777
    8. ':return' → logprob: -8.171042442321777
    9. '{return' → logprob: -8.796042442321777
    10. '    
' → logprob: -9.296042442321777

Token 1047: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00031735055381432176
    2. '   ' → logprob: -8.750317573547363
    3. ' return' → logprob: -8.750317573547363
    4. '	return' → logprob: -15.625317573547363
    5. '{return' → logprob: -15.625317573547363
    6. ':return' → logprob: -17.250316619873047
    7. '       ' → logprob: -17.750316619873047
    8. 'Return' → logprob: -18.250316619873047
    9. '```' → logprob: -18.375316619873047
    10. '
' → logprob: -18.500316619873047

Token 1048: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003357006062287837
    2. ' self' → logprob: -8.000335693359375
    3. 'Point' → logprob: -15.875335693359375
    4. '(self' → logprob: -17.000335693359375
    5. '   ' → logprob: -18.250335693359375
    6. '	self' → logprob: -18.250335693359375
    7. 'Self' → logprob: -19.625335693359375
    8. '[self' → logprob: -21.250335693359375
    9. '
' → logprob: -21.375335693359375
    10. ' Point' → logprob: -22.250335693359375

Token 1049: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005742399953305721
    2. 'p' → logprob: -7.625574111938477
    3. 'self' → logprob: -9.375574111938477
    4. '.' → logprob: -14.375574111938477
    5. ' p' → logprob: -15.375574111938477
    6. 'Vector' → logprob: -15.375574111938477
    7. '   ' → logprob: -16.250574111938477
    8. '<p' → logprob: -16.250574111938477
    9. 'Point' → logprob: -17.250574111938477
    10. '(p' → logprob: -17.250574111938477

Token 1050: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.125000953674316
    3. 'oint' → logprob: -15.375000953674316
    4. '```' → logprob: -16.375001907348633
    5. 'oints' → logprob: -16.750001907348633
    6. 'self' → logprob: -17.500001907348633
    7. '₂' → logprob: -19.125001907348633
    8. '２' → logprob: -19.250001907348633
    9. '۲' → logprob: -19.375001907348633
    10. ' ' → logprob: -19.937501907348633

Token 1051: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759417414665222
    2. '-' → logprob: -0.8259417414665222
    3. ' ' → logprob: -13.950942039489746
    4. '-
' → logprob: -14.450942039489746
    5. '-self' → logprob: -14.700942039489746
    6. ' -
' → logprob: -15.700942039489746
    7. '<|end|>' → logprob: -16.07594108581543
    8. ' ' → logprob: -17.20094108581543
    9. '−' → logprob: -17.82594108581543
    10. ' –' → logprob: -17.95094108581543

Token 1052: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004083266947418451
    2. ' self' → logprob: -5.504083156585693
    3. '<|end|>' → logprob: -12.879083633422852
    4. '	self' → logprob: -13.504083633422852
    5. '   ' → logprob: -15.379083633422852
    6. '       ' → logprob: -15.754083633422852
    7. '[self' → logprob: -16.00408363342285
    8. '(self' → logprob: -16.12908363342285
    9. ' ' → logprob: -16.37908363342285
    10. '
' → logprob: -16.87908363342285

Token 1053: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.014167269691824913
    2. 'p' → logprob: -4.264167308807373
    3. '.' → logprob: -12.764166831970215
    4. '1' → logprob: -15.264166831970215
    5. '<p' → logprob: -15.514166831970215
    6. ' p' → logprob: -15.764166831970215
    7. 'self' → logprob: -16.26416778564453
    8. '	p' → logprob: -17.01416778564453
    9. 's' → logprob: -17.13916778564453
    10. ' .' → logprob: -17.38916778564453

Token 1054: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. 'oint' → logprob: -11.875007629394531
    3. 'oints' → logprob: -15.000007629394531
    4. 'oin' → logprob: -16.87500762939453
    5. '１' → logprob: -17.62500762939453
    6. 'p' → logprob: -17.62500762939453
    7. 'Point' → logprob: -17.87500762939453
    8. 'unction' → logprob: -18.37500762939453
    9. '۱' → logprob: -18.87500762939453
    10. 'nt' → logprob: -19.00000762939453

Token 1055: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010168524459004402
    2. '<|end|>' → logprob: -7.751016616821289
    3. 'def' → logprob: -8.251016616821289
    4. '    
' → logprob: -8.251016616821289
    5. '
' → logprob: -10.376016616821289
    6. '```' → logprob: -11.001016616821289
    7. '<|end|>' → logprob: -11.626016616821289
    8. ' def' → logprob: -12.501016616821289
    9. '  
' → logprob: -13.751016616821289
    10. '        
' → logprob: -14.126016616821289

Token 1056: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005555360112339258
    2. '```' → logprob: -7.875555515289307
    3. '    
' → logprob: -9.250555992126465
    4. '
' → logprob: -9.750555992126465
    5. 'def' → logprob: -11.375555992126465
    6. '<|end|>' → logprob: -12.750555992126465
    7. '>' → logprob: -12.875555992126465
    8. '        
' → logprob: -14.000555992126465
    9. ')' → logprob: -14.250555992126465
    10. ' def' → logprob: -14.375555992126465

Token 1057: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006737392861396074
    2. '   ' → logprob: -5.006737232208252
    3. ' def' → logprob: -10.75673770904541
    4. '	def' → logprob: -14.25673770904541
    5. '    
' → logprob: -17.381736755371094
    6. '
' → logprob: -18.381736755371094
    7. '```' → logprob: -18.631736755371094
    8. ' ' → logprob: -19.006736755371094
    9. '  ' → logprob: -19.006736755371094
    10. ':def' → logprob: -19.631736755371094

Token 1058: ' reverse' (ID: 18199)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00022535098833031952
    2. 'reverse' → logprob: -8.875225067138672
    3. ' length' → logprob: -9.375225067138672
    4. 'norm' → logprob: -15.250225067138672
    5. 'len' → logprob: -15.625225067138672
    6. 'leng' → logprob: -16.750225067138672
    7. 're' → logprob: -17.375225067138672
    8. 'normalize' → logprob: -17.625225067138672
    9. ' reverse' → logprob: -17.750225067138672
    10. 'is' → logprob: -18.000225067138672

Token 1059: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.7954958821064793e-05
    2. '(' → logprob: -11.500018119812012
    3. '()' → logprob: -12.500018119812012
    4. ' (' → logprob: -12.500018119812012
    5. '(s' → logprob: -16.625017166137695
    6. 'self' → logprob: -17.125017166137695
    7. '(Self' → logprob: -17.125017166137695
    8. '()(' → logprob: -17.625017166137695
    9. '(
' → logprob: -18.125017166137695
    10. '(sel' → logprob: -18.375017166137695

Token 1060: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002837087959051132
    2. ')' → logprob: -5.877837181091309
    3. ')(' → logprob: -10.627837181091309
    4. 'self' → logprob: -12.752837181091309
    5. '()' → logprob: -13.627837181091309
    6. '(s' → logprob: -13.752837181091309
    7. ' (' → logprob: -14.002837181091309
    8. '(' → logprob: -14.377837181091309
    9. '(sel' → logprob: -14.502837181091309
    10. ' ' → logprob: -15.377837181091309

Token 1061: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.37500286102295
    3. ' (' → logprob: -14.00000286102295
    4. '(s' → logprob: -16.750001907348633
    5. 'self' → logprob: -17.250001907348633
    6. '(Self' → logprob: -18.250001907348633
    7. '(se' → logprob: -18.875001907348633
    8. '=self' → logprob: -18.875001907348633
    9. ' self' → logprob: -19.000001907348633
    10. '(sel' → logprob: -19.250001907348633

Token 1062: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.5151251554489136
    2. ''' → logprob: -1.0151251554489136
    3. ''S' → logprob: -4.015125274658203
    4. ' '' → logprob: -4.390125274658203
    5. 'Segment' → logprob: -4.640125274658203
    6. ' Segment' → logprob: -10.390125274658203
    7. ''class' → logprob: -10.890125274658203
    8. 'Vector' → logprob: -11.140125274658203
    9. 'Point' → logprob: -11.765125274658203
    10. ''a' → logprob: -12.015125274658203

Token 1063: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -6.704273118884885e-07
    2. ' Segment' → logprob: -14.875000953674316
    3. 'Point' → logprob: -15.625000953674316
    4. 'Seg' → logprob: -17.875
    5. '_segment' → logprob: -18.375
    6. 'self' → logprob: -19.125
    7. 'Vector' → logprob: -19.75
    8. 'egment' → logprob: -21.0
    9. 'Segments' → logprob: -21.125
    10. '   ' → logprob: -21.125

Token 1064: '':
' (ID: 7669)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4756607115268707
    2. '()' → logprob: -1.1006606817245483
    3. ''' → logprob: -4.100660800933838
    4. '():
' → logprob: -4.350660800933838
    5. '':' → logprob: -4.975660800933838
    6. '(' → logprob: -5.975660800933838
    7. '():' → logprob: -6.100660800933838
    8. ')' → logprob: -6.725660800933838
    9. '':
' → logprob: -6.850660800933838
    10. '('' → logprob: -7.100660800933838

Token 1065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25017014145851135
    2. 'return' → logprob: -1.625170111656189
    3. ' return' → logprob: -4.7501702308654785
    4. '        
' → logprob: -5.0001702308654785
    5. '   ' → logprob: -5.5001702308654785
    6. '
' → logprob: -6.6251702308654785
    7. '	return' → logprob: -6.6251702308654785
    8. '    
' → logprob: -7.6251702308654785
    9. ':return' → logprob: -7.7501702308654785
    10. '<|end|>' → logprob: -8.12516975402832

Token 1066: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -8.315936429426074e-05
    2. ' return' → logprob: -9.500082969665527
    3. '       ' → logprob: -12.375082969665527
    4. 'Segment' → logprob: -12.625082969665527
    5. '	return' → logprob: -14.625082969665527
    6. '   ' → logprob: -16.000083923339844
    7. ':return' → logprob: -16.125083923339844
    8. '{return' → logprob: -16.750083923339844
    9. 'Return' → logprob: -16.875083923339844
    10. '
' → logprob: -17.625083923339844

Token 1067: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0005530327325686812
    2. ' Segment' → logprob: -7.500553131103516
    3. 'Seg' → logprob: -17.375553131103516
    4. 'Segments' → logprob: -18.250553131103516
    5. 'Point' → logprob: -19.000553131103516
    6. 'self' → logprob: -19.375553131103516
    7. '   ' → logprob: -21.000553131103516
    8. '       ' → logprob: -21.625553131103516
    9. ' Seg' → logprob: -21.875553131103516
    10. 'Section' → logprob: -22.500553131103516

Token 1068: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.2664456789934775e-06
    2. 'self' → logprob: -13.875000953674316
    3. '(' → logprob: -15.625000953674316
    4. '(
' → logprob: -16.875001907348633
    5. '(s' → logprob: -19.500001907348633
    6. ' self' → logprob: -20.625001907348633
    7. '=self' → logprob: -20.750001907348633
    8. '[self' → logprob: -20.875001907348633
    9. '(sel' → logprob: -21.000001907348633
    10. '(Self' → logprob: -21.125001907348633

Token 1069: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -11.87501049041748
    3. 'p' → logprob: -12.62501049041748
    4. ' .' → logprob: -14.50001049041748
    5. '.s' → logprob: -18.000011444091797
    6. 'self' → logprob: -18.625011444091797
    7. '   ' → logprob: -18.750011444091797
    8. ').' → logprob: -18.750011444091797
    9. '<p' → logprob: -19.000011444091797
    10. '.P' → logprob: -19.000011444091797

Token 1070: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. 'self' → logprob: -15.625000953674316
    3. '1' → logprob: -16.0
    4. 'p' → logprob: -17.4375
    5. '```' → logprob: -17.5
    6. '۲' → logprob: -17.8125
    7. 't' → logprob: -18.25
    8. ' ' → logprob: -18.375
    9. '২' → logprob: -18.625
    10. '   ' → logprob: -18.8125

Token 1071: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.492120155598968e-05
    2. ',self' → logprob: -9.750064849853516
    3. ' ,' → logprob: -12.000064849853516
    4. 'self' → logprob: -14.875064849853516
    5. ',
' → logprob: -16.500064849853516
    6. ' self' → logprob: -18.000064849853516
    7. '‌,' → logprob: -19.750064849853516
    8. '<|end|>' → logprob: -19.750064849853516
    9. ',p' → logprob: -20.375064849853516
    10. ')' → logprob: -20.375064849853516

Token 1072: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003370118502061814
    2. ' self' → logprob: -8.000336647033691
    3. '       ' → logprob: -13.500336647033691
    4. '	self' → logprob: -16.250337600708008
    5. '(self' → logprob: -17.375337600708008
    6. '           ' → logprob: -17.625337600708008
    7. '   ' → logprob: -17.625337600708008
    8. ' ' → logprob: -18.375337600708008
    9. '[self' → logprob: -18.625337600708008
    10. '<|end|>' → logprob: -19.000337600708008

Token 1073: '.p' (ID: 1201)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27581268548965454
    2. '.p' → logprob: -1.5258126258850098
    3. 'p' → logprob: -3.7758126258850098
    4. '<|end|>' → logprob: -7.65081262588501
    5. 's' → logprob: -10.150813102722168
    6. 'self' → logprob: -10.275813102722168
    7. '.pkl' → logprob: -11.025813102722168
    8. '<p' → logprob: -11.150813102722168
    9. '<|end|>' → logprob: -11.275813102722168
    10. '.' → logprob: -11.275813102722168

Token 1074: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '<|end|>' → logprob: -15.0
    3. '2' → logprob: -18.375
    4. 'oints' → logprob: -18.875
    5. '<|end|>' → logprob: -19.375
    6. ' ' → logprob: -20.125
    7. 'p' → logprob: -20.25
    8. '.' → logprob: -20.375
    9. 's' → logprob: -21.375
    10. '   ' → logprob: -21.5

Token 1075: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -14.875003814697266
    4. '   ' → logprob: -16.250003814697266
    5. ' )' → logprob: -16.250003814697266
    6. '       ' → logprob: -16.625003814697266
    7. ')

' → logprob: -17.500003814697266
    8. '),' → logprob: -18.000003814697266
    9. '')' → logprob: -18.625003814697266
    10. ')return' → logprob: -18.750003814697266

Token 1076: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007871006615459919
    2. 'def' → logprob: -4.882871150970459
    3. '```' → logprob: -8.6328706741333
    4. '    
' → logprob: -10.5078706741333
    5. '	def' → logprob: -10.7578706741333
    6. ' def' → logprob: -11.2578706741333
    7. '
' → logprob: -11.8828706741333
    8. '[' → logprob: -12.6328706741333
    9. '@property' → logprob: -12.6328706741333
    10. '`' → logprob: -12.8828706741333

Token 1077: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004096685443073511
    2. '   ' → logprob: -5.504096508026123
    3. ' def' → logprob: -11.004096984863281
    4. '	def' → logprob: -13.879096984863281
    5. '@property' → logprob: -15.504096984863281
    6. '@' → logprob: -15.629096984863281
    7. '```' → logprob: -16.12909698486328
    8. '  ' → logprob: -16.87909698486328
    9. ' ' → logprob: -16.87909698486328
    10. 'length' → logprob: -16.87909698486328

Token 1078: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -1.2664456789934775e-06
    2. ' length' → logprob: -14.125000953674316
    3. 'len' → logprob: -15.375000953674316
    4. 'leng' → logprob: -16.375001907348633
    5. 'is' → logprob: -16.875001907348633
    6. 'mid' → logprob: -17.375001907348633
    7. 'middle' → logprob: -18.000001907348633
    8. 'vector' → logprob: -18.375001907348633
    9. 'direction' → logprob: -18.375001907348633
    10. 'line' → logprob: -18.625001907348633

Token 1079: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02911420911550522
    2. '()' → logprob: -4.029114246368408
    3. '(' → logprob: -4.529114246368408
    4. '<|end|>' → logprob: -10.15411376953125
    5. '(
' → logprob: -10.52911376953125
    6. '()(' → logprob: -11.52911376953125
    7. '(s' → logprob: -11.65411376953125
    8. ' (' → logprob: -11.77911376953125
    9. 'self' → logprob: -12.27911376953125
    10. 's' → logprob: -12.65411376953125

Token 1080: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3475354015827179
    2. '(self' → logprob: -1.5975353717803955
    3. '()' → logprob: -2.5975353717803955
    4. '())' → logprob: -4.222535610198975
    5. ')(' → logprob: -6.972535610198975
    6. '(' → logprob: -7.472535610198975
    7. 'self' → logprob: -8.597535133361816
    8. ')return' → logprob: -9.222535133361816
    9. ' ())' → logprob: -9.597535133361816
    10. ' ()' → logprob: -10.347535133361816

Token 1081: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012856863031629473
    2. '()' → logprob: -9.625128746032715
    3. '(' → logprob: -9.750128746032715
    4. '(s' → logprob: -13.375128746032715
    5. ' (' → logprob: -14.000128746032715
    6. 'self' → logprob: -14.125128746032715
    7. '   ' → logprob: -15.000128746032715
    8. '(
' → logprob: -15.125128746032715
    9. 's' → logprob: -16.0001277923584
    10. '       ' → logprob: -16.5001277923584

Token 1082: ' float' (ID: 4428)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12379337102174759
    2. '(self' → logprob: -2.498793363571167
    3. 'sqrt' → logprob: -3.623793363571167
    4. ' self' → logprob: -4.998793601989746
    5. ' sqrt' → logprob: -7.998793601989746
    6. 's' → logprob: -8.623793601989746
    7. 'return' → logprob: -8.623793601989746
    8. ' (' → logprob: -9.873793601989746
    9. '(s' → logprob: -10.248793601989746
    10. '(' → logprob: -11.373793601989746

Token 1083: ':
' (ID: 734)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4127947986125946
    2. '():
' → logprob: -1.662794828414917
    3. '():' → logprob: -2.662794828414917
    4. ':' → logprob: -3.537794828414917
    5. '(self' → logprob: -3.662794828414917
    6. '       ' → logprob: -5.037794589996338
    7. '(' → logprob: -5.412794589996338
    8. ':
' → logprob: -5.912794589996338
    9. '   ' → logprob: -6.162794589996338
    10. '->' → logprob: -6.162794589996338

Token 1084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10334204882383347
    2. 'return' → logprob: -2.603342056274414
    3. '   ' → logprob: -3.853342056274414
    4. ' return' → logprob: -5.853342056274414
    5. '	return' → logprob: -9.728342056274414
    6. ':return' → logprob: -11.853342056274414
    7. 'sqrt' → logprob: -12.728342056274414
    8. '{return' → logprob: -13.103342056274414
    9. ' ' → logprob: -13.978342056274414
    10. '```' → logprob: -13.978342056274414

Token 1085: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00012892624363303185
    2. ' return' → logprob: -9.125128746032715
    3. 'self' → logprob: -11.250128746032715
    4. '(self' → logprob: -12.000128746032715
    5. '   ' → logprob: -14.500128746032715
    6. '       ' → logprob: -16.00012969970703
    7. '	return' → logprob: -16.12512969970703
    8. '(return' → logprob: -16.62512969970703
    9. '```' → logprob: -18.50012969970703
    10. ' ' → logprob: -19.00012969970703

Token 1086: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.153609499335289
    2. '(self' → logprob: -2.15360951423645
    3. ' self' → logprob: -3.65360951423645
    4. ' (' → logprob: -7.778609275817871
    5. 'sqrt' → logprob: -12.153609275817871
    6. '	self' → logprob: -12.403609275817871
    7. ' ' → logprob: -13.653609275817871
    8. '   ' → logprob: -14.403609275817871
    9. 's' → logprob: -14.528609275817871
    10. 'math' → logprob: -15.278609275817871

Token 1087: '.p' (ID: 1201)
  Prédit: '.vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.014346610754728317
    2. '.p' → logprob: -4.264346599578857
    3. 'vector' → logprob: -8.639347076416016
    4. '.distance' → logprob: -12.889347076416016
    5. 'Vector' → logprob: -13.389347076416016
    6. ' vector' → logprob: -14.514347076416016
    7. '.Vector' → logprob: -14.889347076416016
    8. 'p' → logprob: -14.889347076416016
    9. '_vector' → logprob: -15.139347076416016
    10. '.v' → logprob: -15.764347076416016

Token 1088: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.577714741230011
    2. '1' → logprob: -0.827714741230011
    3. 'abs' → logprob: -7.577714920043945
    4. 'oint' → logprob: -7.952714920043945
    5. '.abs' → logprob: -8.077714920043945
    6. 'oints' → logprob: -8.827714920043945
    7. 'distance' → logprob: -8.827714920043945
    8. 'length' → logprob: -9.452714920043945
    9. '.distance' → logprob: -10.452714920043945
    10. '(self' → logprob: -10.952714920043945

Token 1089: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -3.869639476761222e-05
    2. '.' → logprob: -10.375039100646973
    3. '.Distance' → logprob: -12.500039100646973
    4. 'distance' → logprob: -13.625039100646973
    5. ' .' → logprob: -14.125039100646973
    6. '.dist' → logprob: -14.375039100646973
    7. ').' → logprob: -15.000039100646973
    8. '.vector' → logprob: -15.125039100646973
    9. '-distance' → logprob: -16.000038146972656
    10. '.d' → logprob: -16.250038146972656

Token 1090: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.750008583068848
    3. 'self' → logprob: -15.000008583068848
    4. '(
' → logprob: -15.000008583068848
    5. ' (' → logprob: -17.50000762939453
    6. 'To' → logprob: -20.00000762939453
    7. 'to' → logprob: -20.62500762939453
    8. ' self' → logprob: -20.62500762939453
    9. 's' → logprob: -21.25000762939453
    10. '```' → logprob: -21.25000762939453

Token 1091: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0035444782115519047
    2. 'self' → logprob: -5.753544330596924
    3. 'p' → logprob: -8.128544807434082
    4. '.s' → logprob: -9.878544807434082
    5. '.' → logprob: -11.628544807434082
    6. 's' → logprob: -12.628544807434082
    7. ')' → logprob: -12.878544807434082
    8. ' self' → logprob: -13.253544807434082
    9. '   ' → logprob: -14.003544807434082
    10. '       ' → logprob: -14.378544807434082

Token 1092: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. 'oint' → logprob: -14.125001907348633
    3. 'self' → logprob: -15.250001907348633
    4. 'oints' → logprob: -15.250001907348633
    5. 't' → logprob: -16.250001907348633
    6. 'p' → logprob: -16.500001907348633
    7. '```' → logprob: -16.625001907348633
    8. 's' → logprob: -17.500001907348633
    9. ' ' → logprob: -17.750001907348633
    10. '   ' → logprob: -17.750001907348633

Token 1093: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000605337496381253
    2. '())' → logprob: -7.50060510635376
    3. '()' → logprob: -10.000605583190918
    4. ')
' → logprob: -12.125605583190918
    5. ' )' → logprob: -13.750605583190918
    6. ')return' → logprob: -15.875605583190918
    7. ')#' → logprob: -16.5006046295166
    8. ' ())' → logprob: -16.5006046295166
    9. ')

' → logprob: -16.6256046295166
    10. '))' → logprob: -16.8756046295166

Token 1094: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028847867622971535
    2. '   ' → logprob: -3.6538479328155518
    3. '<|end|>' → logprob: -6.278847694396973
    4. '
' → logprob: -8.778847694396973
    5. '#' → logprob: -8.778847694396973
    6. '```' → logprob: -9.528847694396973
    7. ')' → logprob: -9.653847694396973
    8. '    
' → logprob: -9.778847694396973
    9. ' def' → logprob: -10.028847694396973
    10. '<|end|>' → logprob: -10.403847694396973

Token 1095: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002518703928217292
    2. '   ' → logprob: -6.002518653869629
    3. ' def' → logprob: -11.502518653869629
    4. '#' → logprob: -11.502518653869629
    5. '<|end|>' → logprob: -11.877518653869629
    6. ')' → logprob: -12.127518653869629
    7. 'from' → logprob: -12.127518653869629
    8. '	def' → logprob: -13.627518653869629
    9. '```' → logprob: -14.502518653869629
    10. 'pass' → logprob: -14.752518653869629

Token 1096: ' is' (ID: 382)
  Prédit: 'project'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'project' → logprob: -0.8381863832473755
    2. 'projection' → logprob: -0.8381863832473755
    3. 'proj' → logprob: -2.713186264038086
    4. 'is' → logprob: -3.713186264038086
    5. 'mid' → logprob: -4.588186264038086
    6. 'point' → logprob: -5.088186264038086
    7. 'contains' → logprob: -5.463186264038086
    8. 'middle' → logprob: -5.713186264038086
    9. 'cross' → logprob: -5.963186264038086
    10. 'vertical' → logprob: -6.088186264038086

Token 1097: '_' (ID: 62)
  Prédit: '_parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.14493170380592346
    2. '_' → logprob: -2.0199317932128906
    3. 'parallel' → logprob: -6.644931793212891
    4. '_vertical' → logprob: -7.519931793212891
    5. '_point' → logprob: -8.14493179321289
    6. '_horizontal' → logprob: -10.51993179321289
    7. '_par' → logprob: -11.01993179321289
    8. '__' → logprob: -11.76993179321289
    9. '_zero' → logprob: -11.76993179321289
    10. '_per' → logprob: -11.89493179321289

Token 1098: 'orth' (ID: 2909)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.20444521307945251
    2. 'orth' → logprob: -1.704445242881775
    3. 'vertical' → logprob: -5.9544453620910645
    4. 'deg' → logprob: -8.829444885253906
    5. 'point' → logprob: -9.454444885253906
    6. 'zero' → logprob: -9.579444885253906
    7. 'horizontal' → logprob: -9.954444885253906
    8. '_parallel' → logprob: -10.704444885253906
    9. 'ort' → logprob: -11.079444885253906
    10. 'proper' → logprob: -11.329444885253906

Token 1099: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -14.875000953674316
    3. 'agonal' → logprob: -16.0
    4. 'og' → logprob: -17.5
    5. '   ' → logprob: -17.875
    6. 'ogona' → logprob: -18.5
    7. 'ogal' → logprob: -18.75
    8. 'ogon' → logprob: -19.25
    9. '``' → logprob: -19.25
    10. ' og' → logprob: -19.375

Token 1100: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.702754474943504e-05
    2. ' (' → logprob: -10.62503719329834
    3. '(' → logprob: -11.50003719329834
    4. '   ' → logprob: -13.87503719329834
    5. 'self' → logprob: -14.25003719329834
    6. 'def' → logprob: -15.00003719329834
    7. 'to' → logprob: -16.000036239624023
    8. ' self' → logprob: -16.125036239624023
    9. '       ' → logprob: -16.375036239624023
    10. '```' → logprob: -17.375036239624023

Token 1101: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003706126008182764
    2. ' (' → logprob: -8.500370979309082
    3. '(' → logprob: -8.875370979309082
    4. '(other' → logprob: -11.625370979309082
    5. '(Vector' → logprob: -11.750370979309082
    6. '(s' → logprob: -12.625370979309082
    7. ')(' → logprob: -12.750370979309082
    8. 'self' → logprob: -14.375370979309082
    9. '(
' → logprob: -14.625370979309082
    10. ',' → logprob: -14.625370979309082

Token 1102: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01698658987879753
    2. 'other' → logprob: -4.64198637008667
    3. ' self' → logprob: -5.26698637008667
    4. 'def' → logprob: -6.76698637008667
    5. ' other' → logprob: -7.26698637008667
    6. ' def' → logprob: -9.141986846923828
    7. '   ' → logprob: -11.016986846923828
    8. ')' → logprob: -11.141986846923828
    9. 's' → logprob: -11.141986846923828
    10. 'seg' → logprob: -11.516986846923828

Token 1103: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5008236169815063
    2. ',' → logprob: -1.2508236169815063
    3. ':' → logprob: -2.750823497772217
    4. ')' → logprob: -4.375823497772217
    5. '('' → logprob: -4.625823497772217
    6. '):' → logprob: -4.875823497772217
    7. '(' → logprob: -5.250823497772217
    8. ' (' → logprob: -5.625823497772217
    9. '):
' → logprob: -6.375823497772217
    10. '   ' → logprob: -7.500823497772217

Token 1104: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.001570683903992176
    2. ' '' → logprob: -6.501570701599121
    3. ''s' → logprob: -10.626570701599121
    4. 'Segment' → logprob: -10.751570701599121
    5. ''S' → logprob: -11.251570701599121
    6. ')' → logprob: -12.751570701599121
    7. ' ' → logprob: -13.376570701599121
    8. '"' → logprob: -13.876570701599121
    9. 'object' → logprob: -14.001570701599121
    10. '   ' → logprob: -14.251570701599121

Token 1105: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.00024048985505942255
    2. ''S' → logprob: -9.125240325927734
    3. ''' → logprob: -9.375240325927734
    4. ' Segment' → logprob: -10.375240325927734
    5. 'Point' → logprob: -11.375240325927734
    6. 'Vector' → logprob: -13.250240325927734
    7. ''s' → logprob: -13.250240325927734
    8. 'Seg' → logprob: -15.875240325927734
    9. ' '' → logprob: -16.250240325927734
    10. '_segment' → logprob: -16.500240325927734

Token 1106: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2811722159385681
    2. '')' → logprob: -1.406172275543213
    3. '")' → logprob: -11.906171798706055
    4. '`)' → logprob: -12.406171798706055
    5. '   ' → logprob: -12.781171798706055
    6. ''' → logprob: -13.156171798706055
    7. ' ')' → logprob: -13.156171798706055
    8. ' )' → logprob: -13.406171798706055
    9. ':' → logprob: -13.656171798706055
    10. '’)' → logprob: -15.281171798706055

Token 1107: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010103991371579468
    2. ' ->' → logprob: -10.250101089477539
    3. '(self' → logprob: -10.375101089477539
    4. '->' → logprob: -11.250101089477539
    5. '()' → logprob: -11.500101089477539
    6. ' )' → logprob: -12.500101089477539
    7. ')->' → logprob: -13.500101089477539
    8. '   ' → logprob: -13.625101089477539
    9. 'self' → logprob: -13.750101089477539
    10. ',' → logprob: -14.125101089477539

Token 1108: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -3.869639476761222e-05
    2. ' bool' → logprob: -10.250039100646973
    3. ' ' → logprob: -14.000039100646973
    4. 'def' → logprob: -14.375039100646973
    5. '<bool' → logprob: -14.750039100646973
    6. ')' → logprob: -14.875039100646973
    7. '   ' → logprob: -15.125039100646973
    8. '
' → logprob: -15.500039100646973
    9. '	bool' → logprob: -15.875039100646973
    10. ''' → logprob: -15.875039100646973

Token 1109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2841425836086273
    2. ':
' → logprob: -2.28414249420166
    3. '       ' → logprob: -2.78414249420166
    4. ')' → logprob: -3.90914249420166
    5. '(self' → logprob: -4.15914249420166
    6. '():
' → logprob: -4.28414249420166
    7. ' ->' → logprob: -4.90914249420166
    8. '   ' → logprob: -5.03414249420166
    9. '(' → logprob: -5.03414249420166
    10. '):
' → logprob: -5.53414249420166

Token 1110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019901065388694406
    2. 'return' → logprob: -8.625199317932129
    3. ' return' → logprob: -11.000199317932129
    4. '   ' → logprob: -13.500199317932129
    5. '	' → logprob: -15.375199317932129
    6. '        
' → logprob: -15.625199317932129
    7. '	return' → logprob: -15.625199317932129
    8. '
' → logprob: -15.750199317932129
    9. '<|end|>' → logprob: -15.750199317932129
    10. '```' → logprob: -16.000198364257812

Token 1111: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0002678920282050967
    2. '       ' → logprob: -8.75026798248291
    3. ' return' → logprob: -9.12526798248291
    4. '   ' → logprob: -15.37526798248291
    5. '
' → logprob: -16.000267028808594
    6. '```' → logprob: -17.000267028808594
    7. '        
' → logprob: -17.375267028808594
    8. 'import' → logprob: -17.500267028808594
    9. '	return' → logprob: -17.750267028808594
    10. 'def' → logprob: -18.875267028808594

Token 1112: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008710895664989948
    2. 'float' → logprob: -5.383710861206055
    3. ' self' → logprob: -5.508710861206055
    4. '   ' → logprob: -10.883710861206055
    5. ' float' → logprob: -11.633710861206055
    6. '       ' → logprob: -14.133710861206055
    7. '(self' → logprob: -14.258710861206055
    8. '	self' → logprob: -14.258710861206055
    9. '  ' → logprob: -15.008710861206055
    10. ' ' → logprob: -15.008710861206055

Token 1113: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -7.703443770878948e-06
    2. 'vector' → logprob: -11.875007629394531
    3. 'Vector' → logprob: -14.625007629394531
    4. '.segment' → logprob: -16.00000762939453
    5. '.' → logprob: -17.25000762939453
    6. ' vector' → logprob: -17.75000762939453
    7. '.Vector' → logprob: -18.00000762939453
    8. '().' → logprob: -18.12500762939453
    9. '(vector' → logprob: -18.37500762939453
    10. '
' → logprob: -18.37500762939453

Token 1114: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.166338137816638e-05
    2. '.is' → logprob: -10.375031471252441
    3. '()' → logprob: -15.125031471252441
    4. ' ().' → logprob: -16.000032424926758
    5. '().__' → logprob: -16.875032424926758
    6. '.' → logprob: -17.875032424926758
    7. '(' → logprob: -18.500032424926758
    8. '   ' → logprob: -19.000032424926758
    9. '.dot' → logprob: -19.000032424926758
    10. '()
' → logprob: -19.000032424926758

Token 1115: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: 0.0
    2. ' is' → logprob: -16.875
    3. '.is' → logprob: -17.0
    4. 'dot' → logprob: -17.625
    5. 'cross' → logprob: -20.0
    6. '	is' → logprob: -20.375
    7. '```' → logprob: -20.75
    8. '_is' → logprob: -20.875
    9. '(is' → logprob: -21.625
    10. ',is' → logprob: -22.625

Token 1116: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.5776860184123507e-06
    2. '_parallel' → logprob: -13.12500286102295
    3. 'orth' → logprob: -14.75000286102295
    4. '```' → logprob: -17.375001907348633
    5. 'Orth' → logprob: -17.375001907348633
    6. 'parallel' → logprob: -17.500001907348633
    7. 'ort' → logprob: -18.000001907348633
    8. '_vector' → logprob: -18.125001907348633
    9. ' orth' → logprob: -18.562501907348633
    10. '__' → logprob: -19.375001907348633

Token 1117: 'orth' (ID: 2909)
  Prédit: 'orth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orth' → logprob: -2.696889623621246e-06
    2. 'parallel' → logprob: -13.25000286102295
    3. 'ort' → logprob: -14.12500286102295
    4. ' orth' → logprob: -16.125001907348633
    5. 'Orth' → logprob: -18.375001907348633
    6. '```' → logprob: -19.625001907348633
    7. 'ORTH' → logprob: -20.125001907348633
    8. 'cross' → logprob: -20.125001907348633
    9. 'orm' → logprob: -20.750001907348633
    10. 'ont' → logprob: -20.875001907348633

Token 1118: 'ogonal' (ID: 127861)
  Prédit: 'ogonal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ogonal' → logprob: -3.128163257315464e-07
    2. 'agonal' → logprob: -15.375
    3. '```' → logprob: -17.5
    4. 'onal' → logprob: -18.0
    5. 'ogal' → logprob: -18.25
    6. 'og' → logprob: -18.625
    7. 'o' → logprob: -19.625
    8. '
' → logprob: -19.75
    9. '   ' → logprob: -19.75
    10. 'ogo' → logprob: -20.0

Token 1119: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.125000953674316
    3. 'other' → logprob: -15.250000953674316
    4. '((' → logprob: -17.375001907348633
    5. '(
' → logprob: -17.500001907348633
    6. ' (' → logprob: -18.000001907348633
    7. '(that' → logprob: -19.000001907348633
    8. '(operator' → logprob: -19.500001907348633
    9. '(the' → logprob: -19.625001907348633
    10. '(object' → logprob: -19.625001907348633

Token 1120: '.vector' (ID: 104563)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07900744676589966
    2. '.vector' → logprob: -2.579007387161255
    3. 'vector' → logprob: -9.704007148742676
    4. '(vector' → logprob: -10.579007148742676
    5. 'Vector' → logprob: -10.704007148742676
    6. '()' → logprob: -13.079007148742676
    7. ' ().' → logprob: -13.579007148742676
    8. ' vector' → logprob: -13.704007148742676
    9. '_vector' → logprob: -13.829007148742676
    10. '   ' → logprob: -14.079007148742676

Token 1121: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10122901946306229
    2. '(other' → logprob: -2.351228952407837
    3. '())
' → logprob: -7.851229190826416
    4. ')' → logprob: -8.226228713989258
    5. '()' → logprob: -8.851228713989258
    6. ' ())' → logprob: -8.976228713989258
    7. '())

' → logprob: -10.351228713989258
    8. '(' → logprob: -10.476228713989258
    9. '(self' → logprob: -11.226228713989258
    10. 'other' → logprob: -11.726228713989258

Token 1122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010505570098757744
    2. 'def' → logprob: -5.260505676269531
    3. ' def' → logprob: -5.510505676269531
    4. ' ' → logprob: -8.010505676269531
    5. '    
' → logprob: -8.010505676269531
    6. '```' → logprob: -8.385505676269531
    7. '<|end|>' → logprob: -8.510505676269531
    8. '  ' → logprob: -10.635505676269531
    9. '
' → logprob: -10.635505676269531
    10. '  
' → logprob: -11.135505676269531

Token 1123: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.804671233519912e-05
    2. ' def' → logprob: -9.50008773803711
    3. '   ' → logprob: -11.25008773803711
    4. '	def' → logprob: -16.25008773803711
    5. '
' → logprob: -16.87508773803711
    6. '```' → logprob: -18.00008773803711
    7. ' ' → logprob: -18.25008773803711
    8. '    
' → logprob: -18.62508773803711
    9. 'Def' → logprob: -20.25008773803711
    10. '  ' → logprob: -20.37508773803711

Token 1124: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0003212805895600468
    2. ' is' → logprob: -8.750321388244629
    3. 'def' → logprob: -8.750321388244629
    4. '   ' → logprob: -13.625321388244629
    5. '
' → logprob: -14.000321388244629
    6. 'length' → logprob: -14.250321388244629
    7. 'distance' → logprob: -14.500321388244629
    8. ' ' → logprob: -15.750321388244629
    9. ' def' → logprob: -15.750321388244629
    10. '```' → logprob: -16.000320434570312

Token 1125: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -1.664371848164592e-05
    2. 'parallel' → logprob: -11.250016212463379
    3. '_par' → logprob: -13.375016212463379
    4. '__' → logprob: -14.500016212463379
    5. ' parallel' → logprob: -14.875016212463379
    6. 'Parallel' → logprob: -15.125016212463379
    7. '.parallel' → logprob: -15.125016212463379
    8. 'def' → logprob: -15.250016212463379
    9. '   ' → logprob: -15.500016212463379
    10. '_' → logprob: -16.375017166137695

Token 1126: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006724368315190077
    2. '(other' → logprob: -5.0067243576049805
    3. '(' → logprob: -11.88172435760498
    4. ' (' → logprob: -13.38172435760498
    5. '(
' → logprob: -15.38172435760498
    6. 'self' → logprob: -15.75672435760498
    7. '(next' → logprob: -17.131725311279297
    8. '(the' → logprob: -17.131725311279297
    9. '(this' → logprob: -17.131725311279297
    10. '(s' → logprob: -17.256725311279297

Token 1127: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.1863006204366684
    2. '(self' → logprob: -1.8113006353378296
    3. '(' → logprob: -5.061300754547119
    4. '(
' → logprob: -9.061300277709961
    5. ')' → logprob: -10.186300277709961
    6. ' (' → logprob: -10.686300277709961
    7. '(s' → logprob: -12.936300277709961
    8. '<|end|>' → logprob: -13.061300277709961
    9. '(previous' → logprob: -13.186300277709961
    10. ',' → logprob: -13.436300277709961

Token 1128: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.25194215774536133
    2. ' other' → logprob: -1.5019421577453613
    3. '(other' → logprob: -11.251941680908203
    4. '.other' → logprob: -16.001941680908203
    5. 'Other' → logprob: -17.126941680908203
    6. '_other' → logprob: -18.251941680908203
    7. 'self' → logprob: -19.626941680908203
    8. ' ' → logprob: -20.001941680908203
    9. '   ' → logprob: -20.376941680908203
    10. '       ' → logprob: -20.876941680908203

Token 1129: ':' (ID: 25)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.12695813179016113
    2. ':' → logprob: -3.251958131790161
    3. ')' → logprob: -4.001957893371582
    4. '(self' → logprob: -4.001957893371582
    5. '   ' → logprob: -4.251957893371582
    6. '(' → logprob: -4.626957893371582
    7. ' ('' → logprob: -4.626957893371582
    8. '):' → logprob: -5.626957893371582
    9. ''s' → logprob: -6.626957893371582
    10. ' (' → logprob: -6.751957893371582

Token 1130: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01694650389254093
    2. ' '' → logprob: -4.141946315765381
    3. ''s' → logprob: -7.641946315765381
    4. ''S' → logprob: -7.891946315765381
    5. 'Segment' → logprob: -10.266946792602539
    6. ' ' → logprob: -12.141946792602539
    7. ' other' → logprob: -12.766946792602539
    8. 'other' → logprob: -12.891946792602539
    9. ' Segment' → logprob: -12.891946792602539
    10. '   ' → logprob: -13.516946792602539

Token 1131: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0385039784014225
    2. ''' → logprob: -3.288503885269165
    3. ''S' → logprob: -7.913504123687744
    4. ''s' → logprob: -10.038503646850586
    5. ' Segment' → logprob: -10.163503646850586
    6. 'Point' → logprob: -11.413503646850586
    7. '_segment' → logprob: -14.288503646850586
    8. 'Vector' → logprob: -14.413503646850586
    9. ' '' → logprob: -14.538503646850586
    10. 'Section' → logprob: -14.663503646850586

Token 1132: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011722482740879059
    2. '')' → logprob: -6.751172065734863
    3. ''' → logprob: -14.501172065734863
    4. 'self' → logprob: -14.626172065734863
    5. '   ' → logprob: -14.751172065734863
    6. ')'' → logprob: -14.876172065734863
    7. ' )' → logprob: -15.751172065734863
    8. '(self' → logprob: -16.62617301940918
    9. '")' → logprob: -17.12617301940918
    10. 'def' → logprob: -17.25117301940918

Token 1133: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4878665506839752
    2. '()' → logprob: -0.9878665208816528
    3. ' ->' → logprob: -4.987866401672363
    4. '->' → logprob: -5.987866401672363
    5. '(' → logprob: -6.737866401672363
    6. ' return' → logprob: -7.237866401672363
    7. ':' → logprob: -7.612866401672363
    8. 'return' → logprob: -8.112866401672363
    9. ' def' → logprob: -8.237866401672363
    10. '=' → logprob: -8.237866401672363

Token 1134: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.003883439116179943
    2. ' bool' → logprob: -6.253883361816406
    3. ''' → logprob: -6.378883361816406
    4. '('' → logprob: -9.003883361816406
    5. 'lambda' → logprob: -9.628883361816406
    6. 'def' → logprob: -10.628883361816406
    7. 'True' → logprob: -11.878883361816406
    8. ' '' → logprob: -12.003883361816406
    9. '<bool' → logprob: -12.378883361816406
    10. ''s' → logprob: -12.503883361816406

Token 1135: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2154870480298996
    2. '       ' → logprob: -2.215487003326416
    3. ')' → logprob: -2.590487003326416
    4. '   ' → logprob: -5.715487003326416
    5. '->' → logprob: -5.965487003326416
    6. 'self' → logprob: -6.090487003326416
    7. ' ->' → logprob: -7.840487003326416
    8. ' self' → logprob: -8.215487480163574
    9. 'def' → logprob: -8.215487480163574
    10. ':' → logprob: -8.340487480163574

Token 1136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033609354868531227
    2. 'return' → logprob: -5.753360748291016
    3. ' return' → logprob: -8.628360748291016
    4. '   ' → logprob: -13.128360748291016
    5. '```' → logprob: -13.253360748291016
    6. '	return' → logprob: -15.378360748291016
    7. 'def' → logprob: -16.753360748291016
    8. '{return' → logprob: -17.003360748291016
    9. 'Return' → logprob: -17.378360748291016
    10. ':return' → logprob: -17.378360748291016

Token 1137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025289335753768682
    2. '       ' → logprob: -6.002529144287109
    3. ' return' → logprob: -10.00252914428711
    4. '   ' → logprob: -11.75252914428711
    5. 'def' → logprob: -17.75252914428711
    6. '```' → logprob: -17.75252914428711
    7. '	return' → logprob: -18.37752914428711
    8. ' ' → logprob: -19.25252914428711
    9. '
' → logprob: -19.37752914428711
    10. '     ' → logprob: -19.62752914428711

Token 1138: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006299942615441978
    2. ' self' → logprob: -7.375629901885986
    3. '   ' → logprob: -13.125630378723145
    4. '(self' → logprob: -14.250630378723145
    5. '       ' → logprob: -15.125630378723145
    6. 'float' → logprob: -15.250630378723145
    7. '	self' → logprob: -15.875630378723145
    8. ' ' → logprob: -16.250629425048828
    9. '
' → logprob: -16.625629425048828
    10. '  ' → logprob: -17.375629425048828

Token 1139: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.0009220616775564849
    2. 'vector' → logprob: -7.000922203063965
    3. 'Vector' → logprob: -11.750922203063965
    4. ' vector' → logprob: -13.375922203063965
    5. '_vector' → logprob: -14.875922203063965
    6. '	vector' → logprob: -15.750922203063965
    7. '<vector' → logprob: -16.00092124938965
    8. '.' → logprob: -16.12592124938965
    9. 'VECTOR' → logprob: -16.12592124938965
    10. '
' → logprob: -16.37592124938965

Token 1140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '.is' → logprob: -15.25
    3. '()' → logprob: -16.375
    4. '().__' → logprob: -19.25
    5. ' ().' → logprob: -20.375
    6. '(' → logprob: -21.375
    7. '.' → logprob: -22.25
    8. '()
' → logprob: -22.375
    9. '```' → logprob: -22.5
    10. '   ' → logprob: -23.0

Token 1141: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -9.13388703338569e-06
    2. ' is' → logprob: -11.625009536743164
    3. '.is' → logprob: -17.125009536743164
    4. '```' → logprob: -17.500009536743164
    5. '	is' → logprob: -17.625009536743164
    6. '
' → logprob: -17.625009536743164
    7. '   ' → logprob: -18.000009536743164
    8. '(is' → logprob: -18.500009536743164
    9. ' ' → logprob: -19.000009536743164
    10. '﻿' → logprob: -19.375009536743164

Token 1142: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -1.1160349458805285e-05
    2. 'parallel' → logprob: -11.500011444091797
    3. ' parallel' → logprob: -14.500011444091797
    4. '_' → logprob: -15.000011444091797
    5. '.parallel' → logprob: -17.000011444091797
    6. 'Parallel' → logprob: -17.875011444091797
    7. '_par' → logprob: -17.875011444091797
    8. '_vector' → logprob: -18.875011444091797
    9. ' paralelo' → logprob: -19.125011444091797
    10. '__' → logprob: -20.125011444091797

Token 1143: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -3.128163257315464e-07
    2. 'other' → logprob: -15.75
    3. '(' → logprob: -16.375
    4. ' (' → logprob: -18.0
    5. ' other' → logprob: -18.75
    6. '(
' → logprob: -20.0
    7. '(object' → logprob: -21.625
    8. '(original' → logprob: -22.125
    9. '.other' → logprob: -22.25
    10. '(ob' → logprob: -22.375

Token 1144: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.35818755626678467
    2. '(other' → logprob: -1.3581875562667847
    3. 'vector' → logprob: -3.483187675476074
    4. '(vector' → logprob: -4.733187675476074
    5. '(' → logprob: -5.733187675476074
    6. 'Vector' → logprob: -7.733187675476074
    7. ' vector' → logprob: -7.983187675476074
    8. '(object' → logprob: -8.608187675476074
    9. '().' → logprob: -9.233187675476074
    10. '_vector' → logprob: -9.858187675476074

Token 1145: '())

' (ID: 27654)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.00877954438328743
    2. '())' → logprob: -4.758779525756836
    3. ')' → logprob: -9.633779525756836
    4. '(' → logprob: -9.758779525756836
    5. 'other' → logprob: -10.883779525756836
    6. '())
' → logprob: -11.383779525756836
    7. '()' → logprob: -12.758779525756836
    8. '(self' → logprob: -13.133779525756836
    9. '())

' → logprob: -13.508779525756836
    10. ' ())' → logprob: -13.883779525756836

Token 1146: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08387736976146698
    2. '   ' → logprob: -2.5838773250579834
    3. '#' → logprob: -5.9588775634765625
    4. '<|end|>' → logprob: -6.3338775634765625
    5. '```' → logprob: -7.8338775634765625
    6. ' def' → logprob: -9.458877563476562
    7. 'from' → logprob: -10.833877563476562
    8. '	def' → logprob: -10.958877563476562
    9. '<|end|>' → logprob: -11.208877563476562
    10. '[' → logprob: -11.208877563476562

Token 1147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.38710352778434753
    2. '   ' → logprob: -1.13710355758667
    3. '
' → logprob: -9.387103080749512
    4. ' def' → logprob: -9.387103080749512
    5. '    
' → logprob: -10.387103080749512
    6. '	def' → logprob: -11.137103080749512
    7. '```' → logprob: -11.887103080749512
    8. '#' → logprob: -12.762103080749512
    9. 'class' → logprob: -13.137103080749512
    10. ')' → logprob: -13.387103080749512

Token 1148: ' projection' (ID: 41244)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -1.1001852750778198
    2. 'projection' → logprob: -1.2251852750778198
    3. 'project' → logprob: -1.3501852750778198
    4. 'inter' → logprob: -2.8501853942871094
    5. 'proj' → logprob: -3.9751853942871094
    6. 'point' → logprob: -4.225185394287109
    7. 'contains' → logprob: -4.725185394287109
    8. 'intersection' → logprob: -4.850185394287109
    9. 'is' → logprob: -6.100185394287109
    10. 'distance' → logprob: -7.100185394287109

Token 1149: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -12.125008583068848
    3. ' (' → logprob: -13.375008583068848
    4. '   ' → logprob: -13.750008583068848
    5. '(
' → logprob: -14.750008583068848
    6. '(s' → logprob: -15.750008583068848
    7. '       ' → logprob: -16.375009536743164
    8. 'self' → logprob: -17.000009536743164
    9. '(se' → logprob: -17.125009536743164
    10. ' ' → logprob: -17.625009536743164

Token 1150: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.811348480870947e-05
    2. '(' → logprob: -10.25004768371582
    3. ' (' → logprob: -11.75004768371582
    4. ')' → logprob: -13.25004768371582
    5. ',' → logprob: -13.62504768371582
    6. ')(' → logprob: -14.25004768371582
    7. '   ' → logprob: -14.37504768371582
    8. '(
' → logprob: -15.75004768371582
    9. '       ' → logprob: -16.12504768371582
    10. ' ' → logprob: -16.12504768371582

Token 1151: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012346586212515831
    2. 'point' → logprob: -4.7623467445373535
    3. 'self' → logprob: -5.7623467445373535
    4. 'pt' → logprob: -8.137346267700195
    5. ' p' → logprob: -9.262346267700195
    6. '   ' → logprob: -9.512346267700195
    7. 'other' → logprob: -9.762346267700195
    8. 'q' → logprob: -10.137346267700195
    9. 'seg' → logprob: -12.262346267700195
    10. 'Point' → logprob: -12.262346267700195

Token 1152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06884527951478958
    2. '(self' → logprob: -3.443845272064209
    3. 'self' → logprob: -3.693845272064209
    4. ')' → logprob: -5.193845272064209
    5. ',' → logprob: -5.943845272064209
    6. '       ' → logprob: -7.443845272064209
    7. '   ' → logprob: -8.068845748901367
    8. '->' → logprob: -8.568845748901367
    9. ' self' → logprob: -9.193845748901367
    10. ')->' → logprob: -9.568845748901367

Token 1153: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0017061287071555853
    2. ''' → logprob: -6.501706123352051
    3. ' Point' → logprob: -8.50170612335205
    4. ' '' → logprob: -15.25170612335205
    5. '   ' → logprob: -15.62670612335205
    6. '	Point' → logprob: -16.501707077026367
    7. '_Point' → logprob: -16.751707077026367
    8. '(Point' → logprob: -17.126707077026367
    9. 'oint' → logprob: -17.501707077026367
    10. ''s' → logprob: -17.876707077026367

Token 1154: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22629083693027496
    2. ',' → logprob: -1.6012908220291138
    3. '   ' → logprob: -7.351290702819824
    4. '       ' → logprob: -8.851290702819824
    5. ':' → logprob: -10.351290702819824
    6. 'self' → logprob: -11.226290702819824
    7. '->' → logprob: -11.476290702819824
    8. '')' → logprob: -12.101290702819824
    9. ' ,' → logprob: -12.351290702819824
    10. ' ->' → logprob: -12.601290702819824

Token 1155: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18257571756839752
    2. '->' → logprob: -2.0575757026672363
    3. ' ->' → logprob: -3.3075757026672363
    4. '   ' → logprob: -6.557575702667236
    5. '       ' → logprob: -7.932575702667236
    6. '(self' → logprob: -8.057576179504395
    7. ':' → logprob: -8.057576179504395
    8. ')->' → logprob: -10.182576179504395
    9. ',' → logprob: -10.807576179504395
    10. '')' → logprob: -11.182576179504395

Token 1156: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0011106859892606735
    2. ''' → logprob: -6.876110553741455
    3. ' Point' → logprob: -9.501111030578613
    4. ''s' → logprob: -13.501111030578613
    5. '   ' → logprob: -14.001111030578613
    6. '	Point' → logprob: -15.126111030578613
    7. ' ' → logprob: -15.626111030578613
    8. ' '' → logprob: -15.876111030578613
    9. 'float' → logprob: -16.501110076904297
    10. '  ' → logprob: -17.001110076904297

Token 1157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6602082848548889
    2. ')' → logprob: -2.035208225250244
    3. '       ' → logprob: -2.035208225250244
    4. ':
' → logprob: -2.285208225250244
    5. '->' → logprob: -2.785208225250244
    6. '   ' → logprob: -3.285208225250244
    7. ' ->' → logprob: -4.410208225250244
    8. '(self' → logprob: -5.660208225250244
    9. '):
' → logprob: -6.160208225250244
    10. '=' → logprob: -7.285208225250244

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.300083648762666e-05
    2. 'Vector' → logprob: -10.875053405761719
    3. ':' → logprob: -11.750053405761719
    4. 'return' → logprob: -12.250053405761719
    5. '   ' → logprob: -12.625053405761719
    6. '```' → logprob: -12.750053405761719
    7. 's' → logprob: -13.375053405761719
    8. ')' → logprob: -13.625053405761719
    9. 'p' → logprob: -13.750053405761719
    10. 't' → logprob: -13.875053405761719

Token 1159: ' v' (ID: 323)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.14976808428764343
    2. 'r' → logprob: -2.024768114089966
    3. 't' → logprob: -5.649767875671387
    4. '_base' → logprob: -6.524767875671387
    5. '   ' → logprob: -6.649767875671387
    6. 'vec' → logprob: -7.899767875671387
    7. 'b' → logprob: -9.024767875671387
    8. 'return' → logprob: -10.274767875671387
    9. ' base' → logprob: -10.399767875671387
    10. 'bas' → logprob: -10.649767875671387

Token 1160: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11292900145053864
    2. ' =' → logprob: -2.237929105758667
    3. 'ector' → logprob: -10.112929344177246
    4. '       ' → logprob: -11.237929344177246
    5. 'v' → logprob: -11.362929344177246
    6. ':' → logprob: -11.487929344177246
    7. 'ect' → logprob: -11.612929344177246
    8. '   ' → logprob: -11.737929344177246
    9. 'ectors' → logprob: -12.737929344177246
    10. ':=' → logprob: -13.237929344177246

Token 1161: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7968066206085496e-05
    2. ' self' → logprob: -10.500027656555176
    3. '(self' → logprob: -15.250027656555176
    4. '   ' → logprob: -16.500028610229492
    5. '	self' → logprob: -16.750028610229492
    6. 'p' → logprob: -17.250028610229492
    7. 'Self' → logprob: -18.625028610229492
    8. '  ' → logprob: -18.875028610229492
    9. 'Segment' → logprob: -19.500028610229492
    10. '[self' → logprob: -19.625028610229492

Token 1162: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.12060969322919846
    2. 'vector' → logprob: -2.245609760284424
    3. '.p' → logprob: -4.870609760284424
    4. 'p' → logprob: -10.495609283447266
    5. ' vector' → logprob: -11.370609283447266
    6. 'Vector' → logprob: -11.620609283447266
    7. '.v' → logprob: -11.745609283447266
    8. '.' → logprob: -11.870609283447266
    9. '   ' → logprob: -12.120609283447266
    10. '().' → logprob: -12.495609283447266

Token 1163: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07572503387928009
    2. '()' → logprob: -2.8257250785827637
    3. '=' → logprob: -4.575725078582764
    4. ' =' → logprob: -5.825725078582764
    5. '       ' → logprob: -8.075724601745605
    6. '()
' → logprob: -9.700724601745605
    7. '   ' → logprob: -11.700724601745605
    8. '()

' → logprob: -12.075724601745605
    9. '().' → logprob: -12.450724601745605
    10. 'v' → logprob: -12.450724601745605

Token 1164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9929223656654358
    2. 't' → logprob: -1.492922306060791
    3. 'dp' → logprob: -1.992922306060791
    4. 'w' → logprob: -2.117922306060791
    5. 'dot' → logprob: -2.367922306060791
    6. 'r' → logprob: -3.492922306060791
    7. 'wv' → logprob: -4.492922306060791
    8. 'u' → logprob: -5.867922306060791
    9. 'return' → logprob: -6.117922306060791
    10. 'q' → logprob: -6.242922306060791

Token 1165: ' vp' (ID: 55177)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13983938097953796
    2. 'u' → logprob: -2.8898394107818604
    3. 'r' → logprob: -3.6398394107818604
    4. 'w' → logprob: -4.139839172363281
    5. 'return' → logprob: -4.389839172363281
    6. 'v' → logprob: -4.764839172363281
    7. 'base' → logprob: -5.264839172363281
    8. 'tmp' → logprob: -6.139839172363281
    9. '   ' → logprob: -6.889839172363281
    10. 'temp' → logprob: -7.639839172363281

Token 1166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576370894908905
    2. ' =' → logprob: -0.826370894908905
    3. 'v' → logprob: -8.076371192932129
    4. 'p' → logprob: -9.701371192932129
    5. '=v' → logprob: -9.951371192932129
    6. '   ' → logprob: -12.451371192932129
    7. '=p' → logprob: -12.576371192932129
    8. ':' → logprob: -13.201371192932129
    9. 'r' → logprob: -14.576371192932129
    10. '=
' → logprob: -14.701371192932129

Token 1167: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.629921436891891e-05
    2. ' p' → logprob: -10.62502670288086
    3. 'Point' → logprob: -13.37502670288086
    4. '(p' → logprob: -15.87502670288086
    5. 'v' → logprob: -16.62502670288086
    6. '   ' → logprob: -16.87502670288086
    7. 'Vector' → logprob: -17.00002670288086
    8. 'point' → logprob: -18.62502670288086
    9. '<p' → logprob: -18.75002670288086
    10. 'Segment' → logprob: -18.87502670288086

Token 1168: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3870726227760315
    2. '-' → logprob: -1.1370725631713867
    3. '=' → logprob: -9.262072563171387
    4. '-
' → logprob: -10.762072563171387
    5. ' =' → logprob: -10.887072563171387
    6. 'p' → logprob: -11.387072563171387
    7. '   ' → logprob: -11.512072563171387
    8. ' ' → logprob: -11.887072563171387
    9. ')' → logprob: -12.137072563171387
    10. ' -
' → logprob: -12.262072563171387

Token 1169: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.32392441527918e-05
    2. ' self' → logprob: -9.875053405761719
    3. '       ' → logprob: -13.375053405761719
    4. '(self' → logprob: -16.87505340576172
    5. '	self' → logprob: -17.50005340576172
    6. '           ' → logprob: -17.87505340576172
    7. '   ' → logprob: -18.50005340576172
    8. '[self' → logprob: -19.00005340576172
    9. 'Point' → logprob: -20.50005340576172
    10. '         ' → logprob: -21.00005340576172

Token 1170: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.1602306365966797
    2. 'p' → logprob: -1.9102306365966797
    3. '.' → logprob: -12.53523063659668
    4. 's' → logprob: -13.53523063659668
    5. '1' → logprob: -14.53523063659668
    6. ' p' → logprob: -15.66023063659668
    7. 'point' → logprob: -16.03523063659668
    8. ').' → logprob: -16.03523063659668
    9. 'self' → logprob: -16.16023063659668
    10. '   ' → logprob: -16.16023063659668

Token 1171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. 'oints' → logprob: -14.375000953674316
    3. 'oint' → logprob: -14.875000953674316
    4. ' ' → logprob: -17.750001907348633
    5. 'p' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.312501907348633
    7. 'r' → logprob: -18.312501907348633
    8. '2' → logprob: -18.500001907348633
    9. 'unction' → logprob: -18.812501907348633
    10. '１' → logprob: -19.062501907348633

Token 1172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03195808455348015
    2. '
' → logprob: -3.5319581031799316
    3. 'return' → logprob: -7.031958103179932
    4. 'v' → logprob: -7.406958103179932
    5. 'dot' → logprob: -8.531957626342773
    6. ')' → logprob: -9.281957626342773
    7. ';' → logprob: -9.656957626342773
    8. '.dot' → logprob: -9.906957626342773
    9. ')
' → logprob: -10.281957626342773
    10. 't' → logprob: -10.406957626342773

Token 1173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.2020991056924686e-05
    2. 't' → logprob: -11.375032424926758
    3. '```' → logprob: -12.500032424926758
    4. ':' → logprob: -12.625032424926758
    5. ',' → logprob: -13.000032424926758
    6. 'v' → logprob: -13.250032424926758
    7. ' t' → logprob: -13.375032424926758
    8. ')' → logprob: -13.625032424926758
    9. 'n' → logprob: -13.750032424926758
    10. 'return' → logprob: -14.750032424926758

Token 1174: ' return' (ID: 622)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13576436042785645
    2. 'return' (adapté à ' return') → logprob: -2.6357643604278564
    3. 'r' → logprob: -3.0107643604278564
    4. 'dot' → logprob: -5.635764122009277
    5. '   ' → logprob: -7.135764122009277
    6. 'k' → logprob: -8.010764122009277
    7. 'rate' → logprob: -8.385764122009277
    8. 'd' → logprob: -8.385764122009277
    9. 'sc' → logprob: -8.760764122009277
    10. 'rv' → logprob: -9.010764122009277

Token 1175: ' v' (ID: 323)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.8126592193730175e-05
    2. ' self' → logprob: -9.8750581741333
    3. 'Point' → logprob: -12.0000581741333
    4. 'v' → logprob: -15.6250581741333
    5. '   ' → logprob: -16.125057220458984
    6. '(self' → logprob: -16.375057220458984
    7. '	self' → logprob: -17.125057220458984
    8. '
' → logprob: -17.750057220458984
    9. ' Point' → logprob: -17.750057220458984
    10. '  ' → logprob: -18.000057220458984

Token 1176: '.dot' (ID: 52692)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.19567249715328217
    2. '*(' → logprob: -2.3206725120544434
    3. ' *' → logprob: -2.5706725120544434
    4. '*v' → logprob: -6.570672512054443
    5. '*p' → logprob: -7.445672512054443
    6. '*((' → logprob: -7.445672512054443
    7. '*self' → logprob: -7.945672512054443
    8. '   ' → logprob: -10.820672035217285
    9. '*r' → logprob: -11.195672035217285
    10. '
' → logprob: -11.445672035217285

Token 1177: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -9.088346359931165e-07
    2. 'vp' → logprob: -14.625000953674316
    3. '(' → logprob: -15.125000953674316
    4. 'v' → logprob: -17.125
    5. '(
' → logprob: -17.625
    6. '((' → logprob: -17.875
    7. '
' → logprob: -17.875
    8. '(p' → logprob: -18.375
    9. ' (' → logprob: -19.375
    10. '	v' → logprob: -19.875

Token 1178: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: 0.0
    2. ')' → logprob: -18.75
    3. '```' → logprob: -20.25
    4. ')p' → logprob: -21.0
    5. 'v' → logprob: -21.25
    6. '(p' → logprob: -21.25
    7. '       ' → logprob: -21.5
    8. 'vp' → logprob: -21.5
    9. '
' → logprob: -21.875
    10. ' p' → logprob: -22.125

Token 1179: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002588623436167836
    2. ')/' → logprob: -7.252588748931885
    3. ' /' → logprob: -7.752588748931885
    4. '       ' → logprob: -7.752588748931885
    5. '()' → logprob: -8.252588272094727
    6. '/' → logprob: -8.752588272094727
    7. '/v' → logprob: -8.752588272094727
    8. '(v' → logprob: -9.002588272094727
    9. '   ' → logprob: -9.002588272094727
    10. 'v' → logprob: -9.502588272094727

Token 1180: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5010867714881897
    2. ' /' → logprob: -1.126086711883545
    3. '/v' → logprob: -2.751086711883545
    4. '       ' → logprob: -6.501086711883545
    5. '()' → logprob: -7.001086711883545
    6. '   ' → logprob: -7.001086711883545
    7. 'v' → logprob: -7.001086711883545
    8. '(v' → logprob: -7.251086711883545
    9. '()/' → logprob: -8.001087188720703
    10. '*' → logprob: -8.376087188720703

Token 1181: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.981667537620524e-06
    2. ' v' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '(v' → logprob: -16.750001907348633
    5. '	v' → logprob: -17.250001907348633
    6. ')v' → logprob: -20.625001907348633
    7. '$v' → logprob: -20.750001907348633
    8. 'vq' → logprob: -20.750001907348633
    9. '<v' → logprob: -21.125001907348633
    10. '```' → logprob: -21.750001907348633

Token 1182: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -3.214019307051785e-05
    2. 'norm' → logprob: -10.375032424926758
    3. '.v' → logprob: -14.625032424926758
    4. '.dot' → logprob: -16.000032424926758
    5. 'v' → logprob: -16.250032424926758
    6. '(norm' → logprob: -16.500032424926758
    7. ' .' → logprob: -16.875032424926758
    8. '   ' → logprob: -17.625032424926758
    9. '.' → logprob: -17.875032424926758
    10. 'Norm' → logprob: -17.875032424926758

Token 1183: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009300446254201233
    2. '()*' → logprob: -7.000929832458496
    3. ' ()' → logprob: -11.250929832458496
    4. '(),' → logprob: -12.625929832458496
    5. ' *' → logprob: -14.250929832458496
    6. '()
' → logprob: -15.000929832458496
    7. '())' → logprob: -15.000929832458496
    8. '()\' → logprob: -15.375929832458496
    9. '()>' → logprob: -15.625929832458496
    10. '()<' → logprob: -15.750929832458496

Token 1184: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07073966413736343
    2. '*' → logprob: -3.32073974609375
    3. '*v' → logprob: -3.44573974609375
    4. '*self' → logprob: -8.69573974609375
    5. '*p' → logprob: -9.44573974609375
    6. 'v' → logprob: -11.94573974609375
    7. '*u' → logprob: -12.19573974609375
    8. '   ' → logprob: -12.32073974609375
    9. '```' → logprob: -12.44573974609375
    10. ' ' → logprob: -12.69573974609375

Token 1185: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.5491004129871726e-05
    2. ' v' → logprob: -10.000045776367188
    3. 'Vector' → logprob: -17.750045776367188
    4. '(v' → logprob: -18.500045776367188
    5. '	v' → logprob: -18.625045776367188
    6. 'vector' → logprob: -19.000045776367188
    7. ')v' → logprob: -20.125045776367188
    8. '   ' → logprob: -21.750045776367188
    9. 'vj' → logprob: -21.875045776367188
    10. '<v' → logprob: -22.125045776367188

Token 1186: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1187: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033558503491804004
    2. ' self' → logprob: -8.000335693359375
    3. '	self' → logprob: -16.375335693359375
    4. '   ' → logprob: -17.500335693359375
    5. '(self' → logprob: -17.500335693359375
    6. '[self' → logprob: -18.750335693359375
    7. '<|end|>' → logprob: -18.750335693359375
    8. '       ' → logprob: -18.875335693359375
    9. 'Self' → logprob: -19.125335693359375
    10. 'Point' → logprob: -19.375335693359375

Token 1188: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.5048530030981055e-06
    2. 'p' → logprob: -13.875001907348633
    3. '.' → logprob: -14.875001907348633
    4. ' .' → logprob: -16.125001907348633
    5. '<p' → logprob: -17.500001907348633
    6. '```' → logprob: -18.500001907348633
    7. ').' → logprob: -19.000001907348633
    8. '.py' → logprob: -19.875001907348633
    9. '.pkl' → logprob: -19.875001907348633
    10. '`.' → logprob: -20.250001907348633

Token 1189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 'oint' → logprob: -14.000001907348633
    3. 'oints' → logprob: -14.625001907348633
    4. 'unction' → logprob: -16.625001907348633
    5. 'Point' → logprob: -17.250001907348633
    6. 'p' → logprob: -17.375001907348633
    7. 'self' → logprob: -17.625001907348633
    8. '```' → logprob: -17.687501907348633
    9. '１' → logprob: -18.062501907348633
    10. '2' → logprob: -18.250001907348633

Token 1190: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1191: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6400634050369263
    2. '   ' → logprob: -0.7650634050369263
    3. '
' → logprob: -5.265063285827637
    4. '<|end|>' → logprob: -6.890063285827637
    5. ' def' → logprob: -7.515063285827637
    6. '    
' → logprob: -7.515063285827637
    7. '	def' → logprob: -9.765063285827637
    8. '  ' → logprob: -10.890063285827637
    9. '  
' → logprob: -11.265063285827637
    10. ')' → logprob: -11.390063285827637

Token 1192: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.1424973713001236e-05
    2. ' def' → logprob: -10.500031471252441
    3. '   ' → logprob: -12.500031471252441
    4. '	def' → logprob: -16.250030517578125
    5. '    
' → logprob: -17.625030517578125
    6. '#' → logprob: -17.750030517578125
    7. '
' → logprob: -18.875030517578125
    8. '```' → logprob: -18.875030517578125
    9. '"""' → logprob: -19.375030517578125
    10. 'per' → logprob: -19.500030517578125

Token 1193: ' reflection' (ID: 39755)
  Prédit: 'reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reflection' → logprob: -0.36518046259880066
    2. 're' → logprob: -1.490180492401123
    3. 'reflect' → logprob: -2.990180492401123
    4. 'ref' → logprob: -4.115180492401123
    5. 'vertical' → logprob: -4.990180492401123
    6. 'projection' → logprob: -6.240180492401123
    7. 'cross' → logprob: -6.615180492401123
    8. 'project' → logprob: -6.740180492401123
    9. 'orth' → logprob: -6.865180492401123
    10. 'ort' → logprob: -7.615180492401123

Token 1194: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.3458322731312364e-06
    2. ' (' → logprob: -12.500007629394531
    3. '(' → logprob: -13.000007629394531
    4. '   ' → logprob: -13.875007629394531
    5. 'self' → logprob: -16.00000762939453
    6. '(s' → logprob: -16.62500762939453
    7. '       ' → logprob: -16.75000762939453
    8. ' ' → logprob: -17.87500762939453
    9. '(
' → logprob: -18.00000762939453
    10. ' self' → logprob: -18.12500762939453

Token 1195: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.5577775128767826e-06
    2. ' (' → logprob: -12.500005722045898
    3. '(s' → logprob: -14.125005722045898
    4. '(' → logprob: -14.250005722045898
    5. '   ' → logprob: -15.500005722045898
    6. 'self' → logprob: -16.5000057220459
    7. '       ' → logprob: -17.2500057220459
    8. ')' → logprob: -18.0000057220459
    9. '(
' → logprob: -18.0000057220459
    10. ',' → logprob: -18.5000057220459

Token 1196: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00044258590787649155
    2. ' p' → logprob: -7.7504425048828125
    3. 'self' → logprob: -11.375442504882812
    4. '   ' → logprob: -15.625442504882812
    5. 'point' → logprob: -16.625442504882812
    6. ' self' → logprob: -17.000442504882812
    7. ' ' → logprob: -18.375442504882812
    8. 'Point' → logprob: -19.250442504882812
    9. '       ' → logprob: -19.250442504882812
    10. '	p' → logprob: -19.375442504882812

Token 1197: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010574605548754334
    2. ')' → logprob: -7.0010576248168945
    3. ',' → logprob: -9.501057624816895
    4. '):' → logprob: -11.126057624816895
    5. '(p' → logprob: -11.126057624816895
    6. ' :' → logprob: -11.501057624816895
    7. '(' → logprob: -11.876057624816895
    8. '   ' → logprob: -12.126057624816895
    9. 'p' → logprob: -12.751057624816895
    10. '[' → logprob: -13.376057624816895

Token 1198: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.090760431718081e-05
    2. ''' → logprob: -10.000090599060059
    3. ' Point' → logprob: -10.000090599060059
    4. '	Point' → logprob: -17.750091552734375
    5. '   ' → logprob: -18.250091552734375
    6. ''s' → logprob: -18.875091552734375
    7. '(Point' → logprob: -19.375091552734375
    8. '_Point' → logprob: -19.625091552734375
    9. ' ' → logprob: -19.750091552734375
    10. ' '' → logprob: -20.000091552734375

Token 1199: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036488600075244904
    2. ',' → logprob: -3.4114885330200195
    3. '   ' → logprob: -6.5364885330200195
    4. ':' → logprob: -7.0364885330200195
    5. '       ' → logprob: -7.6614885330200195
    6. 'self' → logprob: -11.16148853302002
    7. ' )' → logprob: -12.03648853302002
    8. '')' → logprob: -12.16148853302002
    9. ' ' → logprob: -12.66148853302002
    10. 'p' → logprob: -13.28648853302002

Token 1200: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0727282240986824
    2. ':' → logprob: -3.572728157043457
    3. '->' → logprob: -3.822728157043457
    4. ' ->' → logprob: -4.072728157043457
    5. '(p' → logprob: -6.947728157043457
    6. '   ' → logprob: -7.072728157043457
    7. '       ' → logprob: -7.572728157043457
    8. '(self' → logprob: -7.572728157043457
    9. ',' → logprob: -8.947728157043457
    10. ' def' → logprob: -9.947728157043457

Token 1201: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0007104054093360901
    2. ' Point' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.625710487365723
    4. ' ' → logprob: -16.625709533691406
    5. ''' → logprob: -16.750709533691406
    6. '  ' → logprob: -18.000709533691406
    7. '	Point' → logprob: -18.000709533691406
    8. '       ' → logprob: -18.250709533691406
    9. 'Vector' → logprob: -18.875709533691406
    10. '_point' → logprob: -19.250709533691406

Token 1202: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6977946758270264
    2. '       ' → logprob: -0.9477946758270264
    3. ')' → logprob: -2.6977946758270264
    4. '   ' → logprob: -4.0727949142456055
    5. ':' → logprob: -4.4477949142456055
    6. '(' → logprob: -4.5727949142456055
    7. '->' → logprob: -6.1977949142456055
    8. 'self' → logprob: -6.6977949142456055
    9. ':
' → logprob: -6.6977949142456055
    10. '):
' → logprob: -7.0727949142456055

Token 1203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012836291454732418
    2. 'return' → logprob: -4.387836456298828
    3. ' return' → logprob: -8.387836456298828
    4. 's' → logprob: -11.137836456298828
    5. '	' → logprob: -11.262836456298828
    6. ')' → logprob: -11.262836456298828
    7. '        
' → logprob: -11.512836456298828
    8. 'self' → logprob: -11.887836456298828
    9. 'v' → logprob: -12.137836456298828
    10. '0' → logprob: -12.262836456298828

Token 1204: ' x' (ID: 1215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009990748949348927
    2. ' return' → logprob: -5.509990692138672
    3. 'r' → logprob: -5.634990692138672
    4. 'q' → logprob: -6.884990692138672
    5. '   ' → logprob: -7.634990692138672
    6. '       ' → logprob: -7.634990692138672
    7. 'proj' → logprob: -9.259990692138672
    8. 't' → logprob: -9.384990692138672
    9. '        
' → logprob: -10.009990692138672
    10. ' ' → logprob: -10.759990692138672

Token 1205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23176075518131256
    2. '=' → logprob: -1.6067607402801514
    3. '_proj' → logprob: -5.2317609786987305
    4. '_projection' → logprob: -8.10676097869873
    5. 'proj' → logprob: -8.73176097869873
    6. 'projection' → logprob: -8.98176097869873
    7. '=self' → logprob: -9.10676097869873
    8. 'v' → logprob: -9.85676097869873
    9. 'p' → logprob: -10.10676097869873
    10. ':' → logprob: -10.23176097869873

Token 1206: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002292279154062271
    2. '2' → logprob: -6.752292156219482
    3. ' self' → logprob: -7.377292156219482
    4. 'p' → logprob: -7.627292156219482
    5. ' ' → logprob: -12.37729263305664
    6. 'Point' → logprob: -12.75229263305664
    7. ' p' → logprob: -14.50229263305664
    8. '	self' → logprob: -14.75229263305664
    9. '(self' → logprob: -15.00229263305664
    10. 'Self' → logprob: -15.50229263305664

Token 1207: '.pro' (ID: 3231)
  Prédit: '.pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pro' → logprob: -3.3451433409936726e-05
    2. 'projection' → logprob: -11.125033378601074
    3. '.project' → logprob: -11.375033378601074
    4. ' .' → logprob: -12.500033378601074
    5. '.' → logprob: -13.875033378601074
    6. '
' → logprob: -14.500033378601074
    7. '.p' → logprob: -14.750033378601074
    8. '.ref' → logprob: -14.875033378601074
    9. '.vector' → logprob: -15.125033378601074
    10. '.position' → logprob: -16.00003433227539

Token 1208: 'jection' (ID: 11533)
  Prédit: 'jection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jection' → logprob: -4.008129963040119e-06
    2. 'ject' → logprob: -12.875003814697266
    3. 'j' → logprob: -13.750003814697266
    4. 'jected' → logprob: -16.250003814697266
    5. '   ' → logprob: -16.500003814697266
    6. 'jek' → logprob: -16.875003814697266
    7. 'tection' → logprob: -17.000003814697266
    8. '```' → logprob: -17.375003814697266
    9. 'JECTION' → logprob: -17.375003814697266
    10. '
' → logprob: -17.625003814697266

Token 1209: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -15.87500286102295
    4. '(
' → logprob: -16.375003814697266
    5. '(x' → logprob: -18.000003814697266
    6. '(P' → logprob: -18.500003814697266
    7. '(point' → logprob: -19.625003814697266
    8. 'p' → logprob: -19.875003814697266
    9. '       ' → logprob: -20.500003814697266
    10. '   ' → logprob: -20.625003814697266

Token 1210: ')
' (ID: 446)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6094063520431519
    2. ')' → logprob: -0.8594063520431519
    3. ' *' → logprob: -3.6094064712524414
    4. ')
' → logprob: -5.984406471252441
    5. ')*' → logprob: -6.484406471252441
    6. '2' → logprob: -7.984406471252441
    7. '1' → logprob: -8.109406471252441
    8. '0' → logprob: -8.484406471252441
    9. '*p' → logprob: -8.859406471252441
    10. '(' → logprob: -8.859406471252441

Token 1211: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4115487039089203
    2. 'return' → logprob: -1.1615487337112427
    3. ' *' → logprob: -5.036548614501953
    4. ' return' → logprob: -5.036548614501953
    5. '   ' → logprob: -5.286548614501953
    6. '       ' → logprob: -6.161548614501953
    7. '	' → logprob: -7.036548614501953
    8. ' ' → logprob: -7.286548614501953
    9. '0' → logprob: -8.036548614501953
    10. '           ' → logprob: -8.036548614501953

Token 1212: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.040457421680912e-05
    2. ' return' → logprob: -9.750070571899414
    3. '	return' → logprob: -12.000070571899414
    4. '   ' → logprob: -12.375070571899414
    5. '2' → logprob: -14.125070571899414
    6. ' ' → logprob: -15.250070571899414
    7. 'print' → logprob: -15.875070571899414
    8. 'ret' → logprob: -16.000070571899414
    9. 'r' → logprob: -16.250070571899414
    10. '       ' → logprob: -16.625070571899414

Token 1213: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00021212305000517517
    2. 'Point' → logprob: -9.125211715698242
    3. '2' → logprob: -9.625211715698242
    4. ' x' → logprob: -10.500211715698242
    5. '(x' → logprob: -12.000211715698242
    6. 'self' → logprob: -13.625211715698242
    7. ' Point' → logprob: -14.250211715698242
    8. '(' → logprob: -14.500211715698242
    9. 'p' → logprob: -14.625211715698242
    10. ' ' → logprob: -15.750211715698242

Token 1214: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.41468411684036255
    2. '+' → logprob: -1.6646840572357178
    3. ' +' → logprob: -1.9146840572357178
    4. ' *' → logprob: -5.914684295654297
    5. '+x' → logprob: -9.539684295654297
    6. '+(' → logprob: -11.289684295654297
    7. '-' → logprob: -11.789684295654297
    8. ' ' → logprob: -12.789684295654297
    9. '__' → logprob: -13.039684295654297
    10. '0' → logprob: -13.289684295654297

Token 1215: ' ' (ID: 220)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4769226610660553
    2. '2' → logprob: -0.9769226312637329
    3. ' ' → logprob: -6.476922512054443
    4. ' (' → logprob: -6.726922512054443
    5. '(' → logprob: -9.976922988891602
    6. '(Point' → logprob: -10.976922988891602
    7. '(y' → logprob: -11.976922988891602
    8. '(p' → logprob: -12.101922988891602
    9. '(px' → logprob: -12.226922988891602
    10. '(xx' → logprob: -12.351922988891602

Token 1216: '2' (ID: 17)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1602596789598465
    2. '2' → logprob: -1.91025972366333
    3. ' (' → logprob: -10.535259246826172
    4. '(Point' → logprob: -13.285259246826172
    5. ' ' → logprob: -13.660259246826172
    6. '(p' → logprob: -13.660259246826172
    7. '1' → logprob: -13.660259246826172
    8. '(' → logprob: -13.785259246826172
    9. '(y' → logprob: -14.910259246826172
    10. '0' → logprob: -15.035259246826172

Token 1217: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.3156232535839081
    2. '*' → logprob: -1.3156232833862305
    3. '(x' → logprob: -6.1906232833862305
    4. ' *' → logprob: -8.19062328338623
    5. '*x' → logprob: -10.94062328338623
    6. '(*' → logprob: -12.31562328338623
    7. '`' → logprob: -12.56562328338623
    8. '0' → logprob: -13.06562328338623
    9. '```' → logprob: -13.31562328338623
    10. '(' → logprob: -13.44062328338623

Token 1218: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -14.250001907348633
    3. ' (' → logprob: -14.250001907348633
    4. '*(' → logprob: -17.250001907348633
    5. 'x' → logprob: -18.375001907348633
    6. '(xx' → logprob: -19.000001907348633
    7. 'Vector' → logprob: -19.125001907348633
    8. '#' → logprob: -19.750001907348633
    9. '(xs' → logprob: -19.750001907348633
    10. '(Point' → logprob: -19.875001907348633

Token 1219: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3869010806083679
    2. 'x' → logprob: -1.1369011402130127
    3. ' x' → logprob: -11.511900901794434
    4. ' (' → logprob: -11.636900901794434
    5. '(' → logprob: -12.136900901794434
    6. '{x' → logprob: -13.511900901794434
    7. '"x' → logprob: -13.761900901794434
    8. ')x' → logprob: -14.386900901794434
    9. '_x' → logprob: -14.636900901794434
    10. '	x' → logprob: -14.761900901794434

Token 1220: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06204991415143013
    2. '-' → logprob: -2.8120498657226562
    3. '-x' → logprob: -9.562049865722656
    4. ')' → logprob: -12.562049865722656
    5. ' ' → logprob: -13.437049865722656
    6. '```' → logprob: -13.437049865722656
    7. 'x' → logprob: -13.812049865722656
    8. ' ' → logprob: -14.312049865722656
    9. '<|end|>' → logprob: -14.812049865722656
    10. '-ref' → logprob: -14.937049865722656

Token 1221: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.696889623621246e-06
    2. ' p' → logprob: -12.87500286102295
    3. '_p' → logprob: -18.750001907348633
    4. '<|end|>' → logprob: -18.750001907348633
    5. 'point' → logprob: -19.750001907348633
    6. '<p' → logprob: -20.000001907348633
    7. '	p' → logprob: -20.625001907348633
    8. ')p' → logprob: -20.875001907348633
    9. 'points' → logprob: -21.000001907348633
    10. 'px' → logprob: -21.375001907348633

Token 1222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.153795766294934e-06
    2. ')
' → logprob: -12.625005722045898
    3. ' )' → logprob: -13.125005722045898
    4. '<|end|>' → logprob: -15.250005722045898
    5. '))' → logprob: -15.500005722045898
    6. ')

' → logprob: -16.2500057220459
    7. '())' → logprob: -16.3750057220459
    8. ')return' → logprob: -16.5000057220459
    9. ')#' → logprob: -17.8750057220459
    10. ')}' → logprob: -17.8750057220459

Token 1223: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1224: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5613037347793579
    2. 'def' (adapté à ' def') → logprob: -0.9363037347793579
    3. '<|end|>' → logprob: -3.6863036155700684
    4. ' def' → logprob: -5.436303615570068
    5. '
' → logprob: -5.561303615570068
    6. '#' → logprob: -6.686303615570068
    7. '	def' → logprob: -6.811303615570068
    8. '```' → logprob: -7.311303615570068
    9. '<|end|>' → logprob: -8.061304092407227
    10. ' ' → logprob: -8.811304092407227

Token 1225: ' intersect' (ID: 64353)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.7469112873077393
    2. 'contains' → logprob: -0.9969112873077393
    3. 'cc' → logprob: -2.4969112873077393
    4. 'vertical' → logprob: -4.24691104888916
    5. 'contain' → logprob: -4.62191104888916
    6. 'inter' → logprob: -4.87191104888916
    7. 'project' → logprob: -5.12191104888916
    8. 'relation' → logprob: -5.99691104888916
    9. 'is' → logprob: -5.99691104888916
    10. 'point' → logprob: -5.99691104888916

Token 1226: '_ratio' (ID: 45680)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00484293419867754
    2. '_point' → logprob: -5.754842758178711
    3. '_with' → logprob: -7.754842758178711
    4. '(' → logprob: -7.879842758178711
    5. '_segment' → logprob: -8.254842758178711
    6. '_' → logprob: -9.254842758178711
    7. '_line' → logprob: -9.379842758178711
    8. '(Point' → logprob: -10.129842758178711
    9. 'self' → logprob: -10.504842758178711
    10. '(
' → logprob: -10.629842758178711

Token 1227: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.779520092299208e-05
    2. '(' → logprob: -9.750078201293945
    3. '(s' → logprob: -11.625078201293945
    4. ' (' → logprob: -11.750078201293945
    5. 'self' → logprob: -13.250078201293945
    6. 's' → logprob: -14.750078201293945
    7. '(
' → logprob: -15.500078201293945
    8. '(se' → logprob: -16.625078201293945
    9. ' self' → logprob: -16.875078201293945
    10. '(this' → logprob: -17.500078201293945

Token 1228: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025173963513225317
    2. 'self' → logprob: -6.502517223358154
    3. 's' → logprob: -7.752517223358154
    4. '(' → logprob: -8.377517700195312
    5. 'with' → logprob: -9.002517700195312
    6. '_with' → logprob: -9.502517700195312
    7. ')' → logprob: -10.502517700195312
    8. 'f' → logprob: -11.002517700195312
    9. ')(' → logprob: -11.127517700195312
    10. '(s' → logprob: -11.252517700195312

Token 1229: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01201507169753313
    2. 'other' → logprob: -4.637014865875244
    3. ' self' → logprob: -6.637014865875244
    4. 'seg' → logprob: -7.137014865875244
    5. 'p' → logprob: -9.387015342712402
    6. ' other' → logprob: -10.637015342712402
    7. 's' → logprob: -11.012015342712402
    8. ' seg' → logprob: -11.762015342712402
    9. 'segment' → logprob: -12.012015342712402
    10. 'se' → logprob: -13.137015342712402

Token 1230: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008112144656479359
    2. '(self' → logprob: -5.258111953735352
    3. ')' → logprob: -6.258111953735352
    4. ',' → logprob: -7.633111953735352
    5. 'self' → logprob: -8.508111953735352
    6. '   ' → logprob: -9.133111953735352
    7. ' :' → logprob: -9.883111953735352
    8. '(' → logprob: -10.133111953735352
    9. '       ' → logprob: -10.883111953735352
    10. '```' → logprob: -11.883111953735352

Token 1231: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1585957407951355
    2. ''s' → logprob: -2.6585958003997803
    3. ' '' → logprob: -3.1585958003997803
    4. 'Segment' → logprob: -3.5335958003997803
    5. ''S' → logprob: -5.908595561981201
    6. 'self' → logprob: -6.533595561981201
    7. ' ' → logprob: -8.78359603881836
    8. ' Segment' → logprob: -8.90859603881836
    9. 'Point' → logprob: -9.53359603881836
    10. '   ' → logprob: -9.65859603881836

Token 1232: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.5690089639974758e-05
    2. ' Segment' → logprob: -11.625015258789062
    3. 'Point' → logprob: -12.125015258789062
    4. 'Vector' → logprob: -14.250015258789062
    5. 'Line' → logprob: -15.250015258789062
    6. ''' → logprob: -15.875015258789062
    7. 'Seg' → logprob: -16.125015258789062
    8. '_segment' → logprob: -17.375015258789062
    9. ''S' → logprob: -17.875015258789062
    10. 'Segments' → logprob: -17.875015258789062

Token 1233: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.3827705681324005
    2. '',' → logprob: -1.2577705383300781
    3. ')' → logprob: -3.507770538330078
    4. ',' → logprob: -5.632770538330078
    5. 'self' → logprob: -9.382770538330078
    6. ''' → logprob: -9.507770538330078
    7. '(self' → logprob: -10.632770538330078
    8. '")' → logprob: -12.132770538330078
    9. ':' → logprob: -12.507770538330078
    10. ' ')' → logprob: -13.132770538330078

Token 1234: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.8535587787628174
    2. '->' → logprob: -1.1035587787628174
    3. ')' → logprob: -1.6035587787628174
    4. '(self' → logprob: -3.3535587787628174
    5. ':' → logprob: -5.853558540344238
    6. '   ' → logprob: -6.353558540344238
    7. '       ' → logprob: -7.603558540344238
    8. 'self' → logprob: -7.978558540344238
    9. '(' → logprob: -8.103558540344238
    10. ')->' → logprob: -8.353558540344238

Token 1235: ' Tuple' (ID: 50841)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002181903924793005
    2. 'Point' → logprob: -7.0021820068359375
    3. ' float' → logprob: -7.5021820068359375
    4. '(float' → logprob: -8.502182006835938
    5. ''' → logprob: -9.127182006835938
    6. '   ' → logprob: -9.252182006835938
    7. 'Optional' → logprob: -9.252182006835938
    8. 'Vector' → logprob: -10.752182006835938
    9. 'Union' → logprob: -10.752182006835938
    10. '       ' → logprob: -10.877182006835938

Token 1236: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. 'float' → logprob: -11.875009536743164
    3. '[int' → logprob: -13.125009536743164
    4. '   ' → logprob: -14.500009536743164
    5. ':' → logprob: -16.500009536743164
    6. '(float' → logprob: -16.750009536743164
    7. '[
' → logprob: -17.000009536743164
    8. 'Optional' → logprob: -17.750009536743164
    9. ':
' → logprob: -17.750009536743164
    10. '[np' → logprob: -18.500009536743164

Token 1237: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00035918003413826227
    2. 'bool' → logprob: -8.250359535217285
    3. 'Point' → logprob: -9.750359535217285
    4. 'int' → logprob: -10.250359535217285
    5. ' float' → logprob: -12.875359535217285
    6. '[' → logprob: -15.000359535217285
    7. '   ' → logprob: -15.000359535217285
    8. '
' → logprob: -15.375359535217285
    9. '(float' → logprob: -15.500359535217285
    10. 'Optional' → logprob: -16.12535858154297

Token 1238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017161124851554632
    2. ',float' → logprob: -6.376716136932373
    3. '[' → logprob: -12.001715660095215
    4. ',
' → logprob: -12.626715660095215
    5. ' ,' → logprob: -13.501715660095215
    6. ',int' → logprob: -14.001715660095215
    7. '<|end|>' → logprob: -14.626715660095215
    8. ',bool' → logprob: -14.751715660095215
    9. '',' → logprob: -15.001715660095215
    10. 'float' → logprob: -15.251715660095215

Token 1239: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.010839937254786491
    2. 'bool' → logprob: -4.635839939117432
    3. 'Point' → logprob: -7.010839939117432
    4. ' float' → logprob: -9.510839462280273
    5. 'Optional' → logprob: -10.135839462280273
    6. 'int' → logprob: -10.635839462280273
    7. 'str' → logprob: -11.885839462280273
    8. '   ' → logprob: -12.010839462280273
    9. 'Float' → logprob: -12.135839462280273
    10. '...' → logprob: -12.385839462280273

Token 1240: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19269107282161713
    2. ',' → logprob: -2.4426910877227783
    3. ':
' → logprob: -2.4426910877227783
    4. '):' → logprob: -7.942690849304199
    5. '):
' → logprob: -7.942690849304199
    6. ']:
' → logprob: -8.3176908493042
    7. ']:' → logprob: -8.8176908493042
    8. '   ' → logprob: -8.8176908493042
    9. ':
' → logprob: -10.3176908493042
    10. ':

' → logprob: -10.8176908493042

Token 1241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040767391328699887
    2. '(
' → logprob: -9.375407218933105
    3. ' (' → logprob: -9.750407218933105
    4. '   ' → logprob: -9.875407218933105
    5. '(' → logprob: -10.125407218933105
    6. '
' → logprob: -10.250407218933105
    7. ':
' → logprob: -10.250407218933105
    8. 's' → logprob: -10.625407218933105
    9. ':' → logprob: -11.250407218933105
    10. '):
' → logprob: -12.125407218933105

Token 1242: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2957734167575836
    2. 'v' → logprob: -2.170773506164551
    3. 'd' → logprob: -3.170773506164551
    4. '   ' → logprob: -3.295773506164551
    5. 's' → logprob: -4.170773506164551
    6. 'a' (adapté à ' a') → logprob: -4.795773506164551
    7. 't' → logprob: -5.045773506164551
    8. 'u' → logprob: -5.170773506164551
    9. 'r' → logprob: -5.170773506164551
    10. '(v' → logprob: -5.795773506164551

Token 1243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4622251093387604
    2. '=' → logprob: -1.212225079536438
    3. ',' → logprob: -3.2122251987457275
    4. '_vector' → logprob: -3.9622251987457275
    5. 'v' → logprob: -5.337224960327148
    6. '_vec' → logprob: -5.837224960327148
    7. 'vector' → logprob: -7.212224960327148
    8. '   ' → logprob: -7.337224960327148
    9. '_v' → logprob: -7.462224960327148
    10. '_vect' → logprob: -7.462224960327148

Token 1244: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04113476350903511
    2. '(self' → logprob: -3.916134834289551
    3. 'other' → logprob: -4.291134834289551
    4. '(other' → logprob: -5.291134834289551
    5. '(' → logprob: -7.291134834289551
    6. ' self' → logprob: -7.416134834289551
    7. ' (' → logprob: -8.66613483428955
    8. '1' → logprob: -9.79113483428955
    9. '((' → logprob: -10.54113483428955
    10. 'float' → logprob: -10.79113483428955

Token 1245: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.0010661551496014
    2. '.p' → logprob: -6.876066207885742
    3. 'vector' → logprob: -10.501066207885742
    4. '.v' → logprob: -13.626066207885742
    5. '.' → logprob: -13.626066207885742
    6. '   ' → logprob: -14.376066207885742
    7. 'p' → logprob: -14.376066207885742
    8. ' vector' → logprob: -14.501066207885742
    9. '_vector' → logprob: -15.251066207885742
    10. '	vector' → logprob: -15.251066207885742

Token 1246: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.3723129630088806
    2. '()' → logprob: -1.4973130226135254
    3. '().' → logprob: -2.4973130226135254
    4. '       ' → logprob: -6.497313022613525
    5. '.cross' → logprob: -6.872313022613525
    6. '(),' → logprob: -7.247313022613525
    7. ' =' → logprob: -7.747313022613525
    8. '=' → logprob: -8.372312545776367
    9. '();' → logprob: -8.622312545776367
    10. '()

' → logprob: -8.622312545776367

Token 1247: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3505488634109497
    2. '       ' → logprob: -1.2255488634109497
    3. ' b' → logprob: -6.60054874420166
    4. 'other' → logprob: -7.97554874420166
    5. '	b' → logprob: -9.10054874420166
    6. 'd' → logprob: -9.10054874420166
    7. '	' → logprob: -10.22554874420166
    8. '   ' → logprob: -10.47554874420166
    9. 's' → logprob: -10.47554874420166
    10. ',b' → logprob: -11.10054874420166

Token 1248: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -6.2729995988775045e-06
    2. 'other' → logprob: -12.375006675720215
    3. '   ' → logprob: -14.250006675720215
    4. '       ' → logprob: -14.625006675720215
    5. ' b' → logprob: -15.000006675720215
    6. 'o' → logprob: -15.000006675720215
    7. 'a' → logprob: -15.125006675720215
    8. 'c' → logprob: -17.5000057220459
    9. 'd' → logprob: -18.2500057220459
    10. '           ' → logprob: -18.2500057220459

Token 1249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889044284820557
    2. ' =' → logprob: -2.578890323638916
    3. ',' → logprob: -14.703890800476074
    4. '=
' → logprob: -16.328889846801758
    5. 'a' → logprob: -17.203889846801758
    6. '＝' → logprob: -18.078889846801758
    7. '=

' → logprob: -18.078889846801758
    8. 'b' → logprob: -18.203889846801758
    9. ')' → logprob: -18.328889846801758
    10. ':' → logprob: -18.328889846801758

Token 1250: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -4.5491004129871726e-05
    2. ' other' → logprob: -10.375045776367188
    3. '(other' → logprob: -11.625045776367188
    4. 'self' → logprob: -12.375045776367188
    5. '-other' → logprob: -15.375045776367188
    6. 'othe' → logprob: -15.750045776367188
    7. '-' → logprob: -16.000045776367188
    8. 'a' → logprob: -16.125045776367188
    9. 'Vector' → logprob: -16.500045776367188
    10. '.other' → logprob: -16.750045776367188

Token 1251: '.vector' (ID: 104563)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.38705870509147644
    2. '.vector' → logprob: -1.1370587348937988
    3. '_vector' → logprob: -10.01205825805664
    4. 'Vector' → logprob: -10.13705825805664
    5. ' =' → logprob: -10.38705825805664
    6. '=' → logprob: -10.76205825805664
    7. ' vector' → logprob: -10.88705825805664
    8. 'v' → logprob: -12.13705825805664
    9. '(vector' → logprob: -12.38705825805664
    10. '   ' → logprob: -12.38705825805664

Token 1252: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01558837853372097
    2. '()
' → logprob: -4.390588283538818
    3. '       ' → logprob: -5.890588283538818
    4. '(),' → logprob: -8.890588760375977
    5. ',' → logprob: -9.765588760375977
    6. '=' → logprob: -10.265588760375977
    7. ' =' → logprob: -10.765588760375977
    8. '();' → logprob: -11.015588760375977
    9. '()

' → logprob: -12.140588760375977
    10. '(' → logprob: -12.515588760375977

Token 1253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014622118324041367
    2. 't' → logprob: -5.639622211456299
    3. ' t' → logprob: -5.889622211456299
    4. 'd' → logprob: -6.264622211456299
    5. 's' → logprob: -6.264622211456299
    6. ',' → logprob: -6.764622211456299
    7. 'x' → logprob: -6.889622211456299
    8. ' s' → logprob: -7.014622211456299
    9. 'p' → logprob: -7.889622211456299
    10. ' p' → logprob: -8.88962173461914

Token 1254: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.5076668858528137
    2. 'd' → logprob: -1.382666826248169
    3. 'a' → logprob: -3.007666826248169
    4. 'cross' → logprob: -3.257666826248169
    5. 'den' → logprob: -4.382667064666748
    6. '   ' → logprob: -4.757667064666748
    7. 'ab' → logprob: -5.132667064666748
    8. 's' → logprob: -5.507667064666748
    9. 'det' → logprob: -5.507667064666748
    10. '(a' → logprob: -5.757667064666748

Token 1255: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014177292585373
    2. ' =' → logprob: -1.7014176845550537
    3. ':' → logprob: -12.951417922973633
    4. ',' → logprob: -14.326417922973633
    5. '=
' → logprob: -15.076417922973633
    6. 'a' → logprob: -15.576417922973633
    7. '.' → logprob: -15.701417922973633
    8. ')' → logprob: -15.826417922973633
    9. ' ' → logprob: -15.951417922973633
    10. '   ' → logprob: -16.326417922973633

Token 1256: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.020927919074892998
    2. 'self' → logprob: -3.895927906036377
    3. ' other' → logprob: -8.145928382873535
    4. '(other' → logprob: -10.145928382873535
    5. 'Segment' → logprob: -10.895928382873535
    6. ' self' → logprob: -11.020928382873535
    7. 'b' → logprob: -12.645928382873535
    8. 'a' → logprob: -12.645928382873535
    9. 'Point' → logprob: -12.895928382873535
    10. '   ' → logprob: -12.958428382873535

Token 1257: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.10055235028266907
    2. 'p' → logprob: -2.3505523204803467
    3. 'other' → logprob: -8.225552558898926
    4. 'vector' → logprob: -11.225552558898926
    5. 'Vector' → logprob: -11.600552558898926
    6. 'P' → logprob: -11.725552558898926
    7. 'Other' → logprob: -11.725552558898926
    8. '   ' → logprob: -12.475552558898926
    9. '```' → logprob: -12.475552558898926
    10. 'self' → logprob: -12.600552558898926

Token 1258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003601617179811001
    2. '2' → logprob: -5.628601551055908
    3. 'p' → logprob: -13.878602027893066
    4. '```' → logprob: -15.753602027893066
    5. 'other' → logprob: -16.19110107421875
    6. '１' → logprob: -16.75360107421875
    7. '
' → logprob: -16.94110107421875
    8. '-' → logprob: -17.87860107421875
    9. '``' → logprob: -18.06610107421875
    10. ' -' → logprob: -18.31610107421875

Token 1259: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02991744875907898
    2. ' -' → logprob: -3.6549174785614014
    3. 'other' → logprob: -6.404917240142822
    4. '-other' → logprob: -6.404917240142822
    5. '
' → logprob: -9.02991771697998
    6. '=' → logprob: -9.52991771697998
    7. ' other' → logprob: -10.90491771697998
    8. '-
' → logprob: -10.90491771697998
    9. '(other' → logprob: -11.27991771697998
    10. 'Other' → logprob: -12.02991771697998

Token 1260: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -7.941850526549388e-06
    2. ' other' → logprob: -11.750007629394531
    3. '   ' → logprob: -22.12500762939453
    4. '(other' → logprob: -22.37500762939453
    5. 'Other' → logprob: -22.50000762939453
    6. '.other' → logprob: -22.87500762939453
    7. 'self' → logprob: -23.50000762939453
    8. '_other' → logprob: -24.12500762939453
    9. 'othe' → logprob: -24.12500762939453
    10. ' ' → logprob: -25.25000762939453

Token 1261: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -8.554343366995454e-05
    2. 'p' → logprob: -9.375085830688477
    3. '
' → logprob: -15.625085830688477
    4. '<p' → logprob: -15.750085830688477
    5. '	p' → logprob: -16.375085830688477
    6. '   ' → logprob: -16.625085830688477
    7. '1' → logprob: -16.750085830688477
    8. 's' → logprob: -17.250085830688477
    9. 'self' → logprob: -17.625085830688477
    10. '(p' → logprob: -17.750085830688477

Token 1262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007102862582542002
    2. '2' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.500710487365723
    4. 'p' → logprob: -16.375709533691406
    5. '.p' → logprob: -17.125709533691406
    6. '{' → logprob: -18.750709533691406
    7. '```' → logprob: -18.750709533691406
    8. '１' → logprob: -19.750709533691406
    9. '<p' → logprob: -19.750709533691406
    10. '
' → logprob: -20.000709533691406

Token 1263: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.21257606148719788
    2. '       ' → logprob: -1.8375760316848755
    3. 'cross' → logprob: -3.837576150894165
    4. 't' → logprob: -5.587575912475586
    5. 's' → logprob: -5.962575912475586
    6. 'a' → logprob: -6.087575912475586
    7. 'det' → logprob: -7.212575912475586
    8. 'return' → logprob: -8.212575912475586
    9. 'x' → logprob: -8.212575912475586
    10. 'den' → logprob: -9.087575912475586

Token 1264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04678874835371971
    2. 'd' → logprob: -3.9217886924743652
    3. 't' → logprob: -4.046788692474365
    4. 's' → logprob: -5.671788692474365
    5. ' t' → logprob: -6.296788692474365
    6. 'u' → logprob: -7.546788692474365
    7. '   ' → logprob: -7.921788692474365
    8. '[' → logprob: -7.921788692474365
    9. 'b' → logprob: -8.296789169311523
    10. 'x' → logprob: -8.546789169311523

Token 1265: ' s' (ID: 265)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4137921929359436
    2. 'den' → logprob: -2.038792133331299
    3. '   ' → logprob: -2.788792133331299
    4. 'cross' → logprob: -3.038792133331299
    5. 'det' → logprob: -3.163792133331299
    6. 'ab' → logprob: -4.038792133331299
    7. 'b' → logprob: -4.913792133331299
    8. 'ad' → logprob: -5.163792133331299
    9. 'a' → logprob: -5.163792133331299
    10. 'div' → logprob: -5.663792133331299

Token 1266: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9554673433303833
    2. 'a' → logprob: -1.4554673433303833
    3. '=' → logprob: -2.0804672241210938
    4. 'd' → logprob: -2.7054672241210938
    5. '1' → logprob: -3.2054672241210938
    6. '_a' → logprob: -3.4554672241210938
    7. ',a' → logprob: -4.080467224121094
    8. ' =' → logprob: -4.455467224121094
    9. '_b' → logprob: -4.580467224121094
    10. ',b' → logprob: -4.705467224121094

Token 1267: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.581905722618103
    2. 'b' → logprob: -1.206905722618103
    3. '(a' → logprob: -2.5819058418273926
    4. '(b' → logprob: -3.2069058418273926
    5. 'Point' → logprob: -5.081905841827393
    6. '(-' → logprob: -5.456905841827393
    7. '(' → logprob: -5.581905841827393
    8. '((' → logprob: -5.831905841827393
    9. '-' → logprob: -6.581905841827393
    10. 'Vector' → logprob: -6.831905841827393

Token 1268: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.00023476807109545916
    2. 'cross' → logprob: -8.500234603881836
    3. ').' → logprob: -11.500234603881836
    4. 'a' → logprob: -12.625234603881836
    5. '
' → logprob: -12.625234603881836
    6. '1' → logprob: -13.000234603881836
    7. '.Cross' → logprob: -13.250234603881836
    8. '.' → logprob: -13.375234603881836
    9. ' cross' → logprob: -13.625234603881836
    10. 'Cross' → logprob: -14.000234603881836

Token 1269: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.049901362508535385
    2. 'a' → logprob: -3.674901247024536
    3. '(c' → logprob: -3.924901247024536
    4. '(a' → logprob: -5.674901485443115
    5. ' c' → logprob: -9.549901008605957
    6. ')c' → logprob: -9.924901008605957
    7. '	c' → logprob: -11.674901008605957
    8. ')' → logprob: -12.174901008605957
    9. '   ' → logprob: -12.674901008605957
    10. '```' → logprob: -13.549901008605957

Token 1270: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003645568387582898
    2. ')
' → logprob: -5.878645420074463
    3. ')/' → logprob: -7.753645420074463
    4. ' /' → logprob: -8.253645896911621
    5. '/a' → logprob: -9.753645896911621
    6. '),' → logprob: -11.003645896911621
    7. '       ' → logprob: -11.128645896911621
    8. ',' → logprob: -11.128645896911621
    9. 'a' → logprob: -11.253645896911621
    10. '/' → logprob: -12.128645896911621

Token 1271: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3489345610141754
    2. '/' → logprob: -1.223934531211853
    3. '/a' → logprob: -8.473934173583984
    4. '/
' → logprob: -8.723934173583984
    5. '       ' → logprob: -10.473934173583984
    6. '/s' → logprob: -10.848934173583984
    7. '/(' → logprob: -11.223934173583984
    8. '   ' → logprob: -11.848934173583984
    9. ' /
' → logprob: -12.098934173583984
    10. '/c' → logprob: -12.223934173583984

Token 1272: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.981667537620524e-06
    2. ' a' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.875001907348633
    4. '       ' → logprob: -18.500001907348633
    5. '(a' → logprob: -19.125001907348633
    6. '     ' → logprob: -19.625001907348633
    7. '	a' → logprob: -19.750001907348633
    8. '           ' → logprob: -20.125001907348633
    9. '`' → logprob: -20.250001907348633
    10. '    ' → logprob: -20.500001907348633

Token 1273: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -3.547789674485102e-05
    2. 'cross' → logprob: -10.250035285949707
    3. '.' → logprob: -17.250036239624023
    4. '.Cross' → logprob: -18.375036239624023
    5. 'Cross' → logprob: -19.125036239624023
    6. '_cross' → logprob: -19.875036239624023
    7. ' cross' → logprob: -20.250036239624023
    8. ' .' → logprob: -20.500036239624023
    9. '
' → logprob: -21.000036239624023
    10. '.c' → logprob: -21.000036239624023

Token 1274: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0010379294399172068
    2. 'b' → logprob: -6.876038074493408
    3. '(' → logprob: -12.37603759765625
    4. '(a' → logprob: -14.50103759765625
    5. '(s' → logprob: -16.25103759765625
    6. ' b' → logprob: -16.87603759765625
    7. '(self' → logprob: -17.12603759765625
    8. '```' → logprob: -17.12603759765625
    9. '[b' → logprob: -17.62603759765625
    10. '<b' → logprob: -17.75103759765625

Token 1275: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10972775518894196
    2. '()' → logprob: -2.3597278594970703
    3. '<|end|>' → logprob: -5.48472785949707
    4. '())' → logprob: -6.10972785949707
    5. '       ' → logprob: -6.73472785949707
    6. '<|end|>' → logprob: -7.35972785949707
    7. ' if' → logprob: -7.85972785949707
    8. '(' → logprob: -8.60972785949707
    9. ')
' → logprob: -8.85972785949707
    10. 'if' → logprob: -9.10972785949707

Token 1276: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1277: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0006010498036630452
    2. 'b' → logprob: -8.250600814819336
    3. 's' → logprob: -8.875600814819336
    4. 'r' → logprob: -9.375600814819336
    5. ' t' → logprob: -10.250600814819336
    6. '(' → logprob: -10.250600814819336
    7. '(t' → logprob: -11.000600814819336
    8. 'c' → logprob: -11.500600814819336
    9. 'u' → logprob: -12.375600814819336
    10. 'a' → logprob: -12.625600814819336

Token 1278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193148851394653
    2. ' =' → logprob: -1.5019314289093018
    3. 's' → logprob: -13.501931190490723
    4. ',' → logprob: -14.126931190490723
    5. '=s' → logprob: -15.876931190490723
    6. ')' → logprob: -17.50193214416504
    7. '=
' → logprob: -17.75193214416504
    8. '＝' → logprob: -18.37693214416504
    9. ' s' → logprob: -18.75193214416504
    10. '=}' → logprob: -18.75193214416504

Token 1279: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001870902779046446
    2. ' a' → logprob: -8.750186920166016
    3. 'c' → logprob: -10.500186920166016
    4. '   ' → logprob: -14.875186920166016
    5. '	a' → logprob: -15.000186920166016
    6. '(a' → logprob: -16.250186920166016
    7. 's' → logprob: -16.500186920166016
    8. ' ' → logprob: -17.250186920166016
    9. ' c' → logprob: -17.750186920166016
    10. '-' → logprob: -17.750186920166016

Token 1280: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.375015258789062
    3. 'cross' → logprob: -12.625015258789062
    4. ' cross' → logprob: -15.250015258789062
    5. ' .' → logprob: -15.375015258789062
    6. '.Cross' → logprob: -16.375015258789062
    7. '_cross' → logprob: -17.125015258789062
    8. '<|end|>' → logprob: -17.625015258789062
    9. 'Cross' → logprob: -18.500015258789062
    10. '
' → logprob: -18.500015258789062

Token 1281: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.25196373462677
    2. 'c' → logprob: -1.50196373462677
    3. ')c' → logprob: -11.12696361541748
    4. '	c' → logprob: -12.25196361541748
    5. '<|end|>' → logprob: -12.25196361541748
    6. ' c' → logprob: -12.75196361541748
    7. '/c' → logprob: -13.50196361541748
    8. '.c' → logprob: -13.62696361541748
    9. '(' → logprob: -13.62696361541748
    10. '(
' → logprob: -14.00196361541748

Token 1282: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35416942834854126
    2. '/' → logprob: -1.2291693687438965
    3. ' /' → logprob: -5.3541693687438965
    4. ')/' → logprob: -7.3541693687438965
    5. '()' → logprob: -8.979169845581055
    6. '/)' → logprob: -9.354169845581055
    7. '       ' → logprob: -9.479169845581055
    8. ' )' → logprob: -11.854169845581055
    9. '`)' → logprob: -11.979169845581055
    10. '/
' → logprob: -12.354169845581055

Token 1283: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00284029939211905
    2. ' /' → logprob: -5.877840518951416
    3. '()/' → logprob: -11.502840042114258
    4. '/
' → logprob: -11.627840042114258
    5. '       ' → logprob: -12.377840042114258
    6. '/b' → logprob: -12.502840042114258
    7. ')/' → logprob: -13.002840042114258
    8. '/s' → logprob: -13.752840042114258
    9. '/c' → logprob: -14.502840042114258
    10. '/d' → logprob: -14.502840042114258

Token 1284: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003805064770858735
    2. ' a' → logprob: -7.875380516052246
    3. '	a' → logprob: -16.00037956237793
    4. '`' → logprob: -16.50037956237793
    5. '-a' → logprob: -16.50037956237793
    6. ''a' → logprob: -17.25037956237793
    7. '   ' → logprob: -17.25037956237793
    8. ')a' → logprob: -17.37537956237793
    9. '#a' → logprob: -17.75037956237793
    10. 'b' → logprob: -17.87537956237793

Token 1285: '.cross' (ID: 108957)
  Prédit: '.cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cross' → logprob: -0.00020425561524461955
    2. 'cross' → logprob: -8.500204086303711
    3. '.' → logprob: -14.750204086303711
    4. '.b' → logprob: -15.625204086303711
    5. ' cross' → logprob: -15.875204086303711
    6. 'Cross' → logprob: -16.87520408630371
    7. 'b' → logprob: -16.87520408630371
    8. '.Cross' → logprob: -17.00020408630371
    9. '_cross' → logprob: -18.87520408630371
    10. '
' → logprob: -19.00020408630371

Token 1286: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.001502717612311244
    2. 'b' → logprob: -6.501502513885498
    3. '(' → logprob: -16.251502990722656
    4. '(other' → logprob: -16.751502990722656
    5. ' b' → logprob: -16.876502990722656
    6. ')b' → logprob: -16.876502990722656
    7. '(s' → logprob: -17.126502990722656
    8. ' (' → logprob: -17.501502990722656
    9. '[b' → logprob: -17.751502990722656
    10. '<|end|>' → logprob: -18.126502990722656

Token 1287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003993296413682401
    2. '       ' → logprob: -9.250399589538574
    3. ')
' → logprob: -9.375399589538574
    4. '+' → logprob: -9.375399589538574
    5. ' +' → logprob: -10.125399589538574
    6. ' )' → logprob: -10.375399589538574
    7. '()' → logprob: -10.750399589538574
    8. ')+' → logprob: -10.875399589538574
    9. '<|end|>' → logprob: -12.000399589538574
    10. '())' → logprob: -12.750399589538574

Token 1288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015198609326034784
    2. '<|end|>' → logprob: -7.376519680023193
    3. '	' → logprob: -7.876519680023193
    4. '	return' → logprob: -8.751520156860352
    5. 'return' → logprob: -9.376520156860352
    6. ' return' → logprob: -9.626520156860352
    7. 's' → logprob: -10.001520156860352
    8. ')' → logprob: -10.376520156860352
    9. '   ' → logprob: -10.376520156860352
    10. '
' → logprob: -10.751520156860352

Token 1289: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0052478681318461895
    2. '       ' → logprob: -5.255248069763184
    3. ' return' → logprob: -11.255248069763184
    4. '
' → logprob: -14.755248069763184
    5. '	return' → logprob: -14.880248069763184
    6. '   ' → logprob: -16.255247116088867
    7. ':return' → logprob: -16.255247116088867
    8. '        
' → logprob: -17.130247116088867
    9. ')return' → logprob: -17.130247116088867
    10. '```' → logprob: -17.505247116088867

Token 1290: ' s' (ID: 265)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3134690225124359
    2. 's' → logprob: -1.3134690523147583
    3. '(' → logprob: -9.438468933105469
    4. ' (' → logprob: -9.563468933105469
    5. ' s' → logprob: -10.188468933105469
    6. '   ' → logprob: -11.813468933105469
    7. '(float' → logprob: -12.688468933105469
    8. '	s' → logprob: -12.813468933105469
    9. '(
' → logprob: -13.313468933105469
    10. '{s' → logprob: -13.813468933105469

Token 1291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ',
' → logprob: -12.625006675720215
    3. ' ,' → logprob: -13.625006675720215
    4. ',t' → logprob: -13.875006675720215
    5. '<|end|>' → logprob: -14.125006675720215
    6. ',\
' → logprob: -15.500006675720215
    7. ',s' → logprob: -15.750006675720215
    8. ',user' → logprob: -16.37500762939453
    9. '<|end|>' → logprob: -17.00000762939453
    10. ',next' → logprob: -17.50000762939453

Token 1292: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.836499985889532e-05
    2. ' t' → logprob: -9.7500581741333
    3. '`t' → logprob: -19.750059127807617
    4. '	t' → logprob: -20.000059127807617
    5. '   ' → logprob: -20.750059127807617
    6. '<|end|>' → logprob: -21.625059127807617
    7. ' ' → logprob: -22.625059127807617
    8. '(t' → logprob: -23.125059127807617
    9. ')t' → logprob: -23.500059127807617
    10. '    ' → logprob: -23.625059127807617

Token 1293: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11728937923908234
    2. 'def' → logprob: -2.3672893047332764
    3. '<|end|>' → logprob: -4.1172895431518555
    4. ')' → logprob: -8.867289543151855
    5. '<|end|>' → logprob: -8.992289543151855
    6. '#' → logprob: -8.992289543151855
    7. '    
' → logprob: -9.617289543151855
    8. '
' → logprob: -9.992289543151855
    9. '.' → logprob: -10.367289543151855
    10. '	def' → logprob: -10.742289543151855

Token 1294: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07714467495679855
    2. '<|end|>' → logprob: -3.2021446228027344
    3. 'def' → logprob: -3.9521446228027344
    4. '
' → logprob: -4.702144622802734
    5. ' ' → logprob: -6.327144622802734
    6. '<|end|>' → logprob: -7.202144622802734
    7. ' def' → logprob: -7.702144622802734
    8. '       ' → logprob: -7.952144622802734
    9. ')' → logprob: -8.077144622802734
    10. '	def' → logprob: -8.202144622802734

Token 1295: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5804080367088318
    2. '   ' → logprob: -0.8304080367088318
    3. '
' → logprob: -5.705408096313477
    4. ' def' → logprob: -7.580408096313477
    5. '    
' → logprob: -7.705408096313477
    6. '	def' → logprob: -9.955408096313477
    7. '        
' → logprob: -10.830408096313477
    8. '       ' → logprob: -11.455408096313477
    9. '```' → logprob: -11.455408096313477
    10. '#' → logprob: -11.455408096313477

Token 1296: ' intersects' (ID: 198484)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.020287498831748962
    2. 'is' → logprob: -4.39528751373291
    3. 'intersection' → logprob: -5.39528751373291
    4. 'cross' → logprob: -6.77028751373291
    5. 'has' → logprob: -6.89528751373291
    6. 'contains' → logprob: -7.52028751373291
    7. 'does' → logprob: -8.89528751373291
    8. 'project' → logprob: -9.52028751373291
    9. 'get' → logprob: -9.77028751373291
    10. 'projection' → logprob: -10.27028751373291

Token 1297: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9743012671824545e-05
    2. '(other' → logprob: -11.250020027160645
    3. '(' → logprob: -12.875020027160645
    4. ' (' → logprob: -13.375020027160645
    5. 'self' → logprob: -14.250020027160645
    6. '   ' → logprob: -14.625020027160645
    7. '_with' → logprob: -15.125020027160645
    8. 'other' → logprob: -15.750020027160645
    9. '_ratio' → logprob: -15.750020027160645
    10. 'with' → logprob: -16.375019073486328

Token 1298: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.113290095934644e-05
    2. 'self' → logprob: -10.125081062316895
    3. '(other' → logprob: -11.125081062316895
    4. '(' → logprob: -11.875081062316895
    5. '_with' → logprob: -12.000081062316895
    6. ')' → logprob: -12.250081062316895
    7. '(
' → logprob: -13.625081062316895
    8. 'with' → logprob: -13.875081062316895
    9. 'def' → logprob: -13.875081062316895
    10. '   ' → logprob: -14.125081062316895

Token 1299: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.023246178403496742
    2. ' other' → logprob: -3.7732462882995605
    3. 'self' → logprob: -14.648245811462402
    4. '(other' → logprob: -15.773245811462402
    5. '   ' → logprob: -17.39824676513672
    6. ' ' → logprob: -18.39824676513672
    7. 'Other' → logprob: -18.77324676513672
    8. '.other' → logprob: -18.77324676513672
    9. 'o' → logprob: -19.64824676513672
    10. ' oth' → logprob: -19.77324676513672

Token 1300: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011055483482778072
    2. ',' → logprob: -4.7610554695129395
    3. '):' → logprob: -6.8860554695129395
    4. ':' → logprob: -7.5110554695129395
    5. '(self' → logprob: -8.136055946350098
    6. '   ' → logprob: -8.136055946350098
    7. '):
' → logprob: -9.886055946350098
    8. ' ->' → logprob: -10.011055946350098
    9. 'self' → logprob: -10.261055946350098
    10. ' ' → logprob: -10.511055946350098

Token 1301: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11823738366365433
    2. ' '' → logprob: -2.2432374954223633
    3. ''s' → logprob: -5.493237495422363
    4. ''S' → logprob: -7.368237495422363
    5. 'object' → logprob: -7.743237495422363
    6. ' ' → logprob: -9.743237495422363
    7. ')' → logprob: -9.868237495422363
    8. '   ' → logprob: -10.493237495422363
    9. 'Segment' → logprob: -10.618237495422363
    10. ' object' → logprob: -11.743237495422363

Token 1302: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.0002547832846175879
    2. 'bool' → logprob: -8.37525463104248
    3. ''' → logprob: -11.25025463104248
    4. ' Segment' → logprob: -12.12525463104248
    5. 'Point' → logprob: -13.37525463104248
    6. ''S' → logprob: -14.00025463104248
    7. '_segment' → logprob: -14.37525463104248
    8. 'Seg' → logprob: -14.37525463104248
    9. 'object' → logprob: -14.87525463104248
    10. 'Segments' → logprob: -15.12525463104248

Token 1303: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036174089182168245
    2. '')' → logprob: -5.628617286682129
    3. 'self' → logprob: -12.253617286682129
    4. '   ' → logprob: -12.753617286682129
    5. '()' → logprob: -12.878617286682129
    6. '(self' → logprob: -12.878617286682129
    7. '")' → logprob: -13.378617286682129
    8. ' )' → logprob: -13.628617286682129
    9. '       ' → logprob: -15.003617286682129
    10. ''' → logprob: -15.128617286682129

Token 1304: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03148794546723366
    2. ')' → logprob: -3.6564879417419434
    3. '()' → logprob: -5.656487941741943
    4. ' ->' → logprob: -6.906487941741943
    5. '->' → logprob: -8.156488418579102
    6. '(' → logprob: -8.156488418579102
    7. '   ' → logprob: -10.281488418579102
    8. 'self' → logprob: -10.531488418579102
    9. ':' → logprob: -10.656488418579102
    10. '       ' → logprob: -11.781488418579102

Token 1305: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0007196996593847871
    2. ' bool' → logprob: -7.2507195472717285
    3. '->' → logprob: -12.875720024108887
    4. ')' → logprob: -13.375720024108887
    5. '   ' → logprob: -13.500720024108887
    6. ' ->' → logprob: -13.500720024108887
    7. ''' → logprob: -13.750720024108887
    8. '(bool' → logprob: -14.875720024108887
    9. 'def' → logprob: -15.000720024108887
    10. ' ' → logprob: -15.250720024108887

Token 1306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21351176500320435
    2. '():' → logprob: -1.9635117053985596
    3. '():
' → logprob: -3.5885117053985596
    4. ':
' → logprob: -4.588511943817139
    5. '   ' → logprob: -4.713511943817139
    6. '(' → logprob: -6.588511943817139
    7. '       ' → logprob: -6.838511943817139
    8. ' =' → logprob: -6.838511943817139
    9. '()' → logprob: -7.713511943817139
    10. '):' → logprob: -8.58851146697998

Token 1307: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010033482685685158
    2. '       ' → logprob: -4.63503360748291
    3. '
' → logprob: -9.01003360748291
    4. '```' → logprob: -9.63503360748291
    5. 'a' → logprob: -10.63503360748291
    6. 'try' → logprob: -10.88503360748291
    7. '    
' → logprob: -11.13503360748291
    8. 'if' → logprob: -11.51003360748291
    9. 'return' → logprob: -12.51003360748291
    10. '        
' → logprob: -12.76003360748291

Token 1308: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7234510183334351
    2. 's' → logprob: -1.098451018333435
    3. 'try' → logprob: -3.0984511375427246
    4. 'd' (adapté à ' d') → logprob: -3.2234511375427246
    5. 'if' → logprob: -3.3484511375427246
    6. 'ab' → logprob: -4.223451137542725
    7. 'as' → logprob: -4.223451137542725
    8. '   ' → logprob: -4.598451137542725
    9. 'sa' → logprob: -5.348451137542725
    10. 'den' → logprob: -5.473451137542725

Token 1309: '0' (ID: 15)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.8221198320388794
    2. 's' → logprob: -1.5721198320388794
    3. ' =' → logprob: -1.8221198320388794
    4. '   ' → logprob: -2.44711971282959
    5. '=' → logprob: -3.44711971282959
    6. '       ' → logprob: -3.57211971282959
    7. 'a' → logprob: -3.69711971282959
    8. 'self' → logprob: -5.07211971282959
    9. '_s' → logprob: -6.57211971282959
    10. ',' → logprob: -6.57211971282959

Token 1310: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49482065439224243
    2. '=' → logprob: -0.9948206543922424
    3. ',' → logprob: -4.119820594787598
    4. 's' → logprob: -6.119820594787598
    5. '       ' → logprob: -6.994820594787598
    6. '   ' → logprob: -7.619820594787598
    7. ' s' → logprob: -9.119820594787598
    8. 'self' → logprob: -9.244820594787598
    9. '=self' → logprob: -9.369820594787598
    10. ' ' → logprob: -9.494820594787598

Token 1311: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02783057652413845
    2. '(self' → logprob: -4.027830600738525
    3. '(' → logprob: -5.277830600738525
    4. 'other' → logprob: -6.652830600738525
    5. 'Point' → logprob: -6.902830600738525
    6. ' self' → logprob: -7.277830600738525
    7. '(other' → logprob: -7.777830600738525
    8. 'PL' → logprob: -7.777830600738525
    9. '(Point' → logprob: -8.152830123901367
    10. ' (' → logprob: -8.902830123901367

Token 1312: '.p' (ID: 1201)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -0.8046872019767761
    2. 'location' → logprob: -1.679687261581421
    3. '.vector' → logprob: -1.679687261581421
    4. 'self' → logprob: -2.429687261581421
    5. '.location' → logprob: -2.679687261581421
    6. '(self' → logprob: -5.304687023162842
    7. '.cross' → logprob: -5.554687023162842
    8. '   ' → logprob: -6.054687023162842
    9. 'other' → logprob: -6.054687023162842
    10. '(' → logprob: -6.179687023162842

Token 1313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004664253443479538
    2. 'location' → logprob: -6.129664421081543
    3. '2' → logprob: -6.379664421081543
    4. 'Location' → logprob: -7.254664421081543
    5. '_location' → logprob: -10.629664421081543
    6. 'oint' → logprob: -10.754664421081543
    7. ' location' → logprob: -12.004664421081543
    8. ' Location' → logprob: -12.504664421081543
    9. 'distance' → logprob: -12.504664421081543
    10. 'oints' → logprob: -13.129664421081543

Token 1314: '.location' (ID: 15725)
  Prédit: 'location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'location' → logprob: -0.49738791584968567
    2. '.location' → logprob: -1.7473878860473633
    3. '.distance' → logprob: -2.8723878860473633
    4. '-other' → logprob: -3.2473878860473633
    5. 'other' → logprob: -3.4973878860473633
    6. '-' → logprob: -3.9973878860473633
    7. '.other' → logprob: -3.9973878860473633
    8. 'self' → logprob: -4.247387886047363
    9. 'istance' → logprob: -5.372387886047363
    10. '-location' → logprob: -5.497387886047363

Token 1315: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0004212594940327108
    2. 'other' → logprob: -8.125421524047852
    3. '(' → logprob: -9.375421524047852
    4. '(self' → logprob: -10.250421524047852
    5. 'self' → logprob: -12.750421524047852
    6. ' other' → logprob: -14.125421524047852
    7. 'Segment' → logprob: -15.375421524047852
    8. 'Vector' → logprob: -15.500421524047852
    9. 'Other' → logprob: -15.875421524047852
    10. '(Point' → logprob: -16.00042152404785

Token 1316: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013865754008293152
    2. ')
' → logprob: -4.388865947723389
    3. '),' → logprob: -8.01386547088623
    4. ').' → logprob: -8.26386547088623
    5. ').__' → logprob: -8.63886547088623
    6. '())' → logprob: -9.13886547088623
    7. '   ' → logprob: -9.38886547088623
    8. ')==' → logprob: -10.01386547088623
    9. ',' → logprob: -10.01386547088623
    10. ')[' → logprob: -10.63886547088623

Token 1317: '       ' (ID: 309)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8719898462295532
    2. '==' → logprob: -1.6219898462295532
    3. '.' → logprob: -1.7469898462295532
    4. ' in' → logprob: -2.8719897270202637
    5. '       ' → logprob: -3.1219897270202637
    6. '.cross' → logprob: -3.3719897270202637
    7. ' and' → logprob: -3.9969897270202637
    8. '   ' → logprob: -4.746989727020264
    9. 'd' → logprob: -4.871989727020264
    10. ')' → logprob: -5.121989727020264

Token 1318: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.014294074848294258
    2. '       ' → logprob: -5.639294147491455
    3. 'p' → logprob: -6.014294147491455
    4. 'PL' → logprob: -6.014294147491455
    5. 'Point' → logprob: -6.264294147491455
    6. 'self' → logprob: -6.389294147491455
    7. '   ' → logprob: -7.014294147491455
    8. ' d' → logprob: -7.889294147491455
    9. 's' → logprob: -8.764293670654297
    10. 'pl' → logprob: -9.514293670654297

Token 1319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17604327201843262
    2. '2' → logprob: -2.6760432720184326
    3. '0' → logprob: -3.5510432720184326
    4. '=' → logprob: -3.8010432720184326
    5. ' =' → logprob: -4.301043510437012
    6. '   ' → logprob: -4.926043510437012
    7. 'def' → logprob: -5.426043510437012
    8. 'p' → logprob: -5.801043510437012
    9. 't' → logprob: -5.926043510437012
    10. '_' → logprob: -6.676043510437012

Token 1320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22548750042915344
    2. ' =' → logprob: -1.600487470626831
    3. 'd' → logprob: -10.22548770904541
    4. '       ' → logprob: -10.72548770904541
    5. '   ' → logprob: -11.72548770904541
    6. ',' → logprob: -12.97548770904541
    7. ' ' → logprob: -13.22548770904541
    8. 's' → logprob: -13.85048770904541
    9. ':' → logprob: -14.47548770904541
    10. '=
' → logprob: -14.72548770904541

Token 1321: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.77022064034827e-05
    2. ' self' → logprob: -9.375097274780273
    3. 'other' → logprob: -11.750097274780273
    4. '   ' → logprob: -12.750097274780273
    5. '       ' → logprob: -13.875097274780273
    6. '	self' → logprob: -14.750097274780273
    7. ' ' → logprob: -15.875097274780273
    8. '(self' → logprob: -16.000097274780273
    9. '  ' → logprob: -16.000097274780273
    10. '           ' → logprob: -16.625097274780273

Token 1322: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.42888566851615906
    2. 'p' → logprob: -1.0538856983184814
    3. 'self' → logprob: -9.803885459899902
    4. '   ' → logprob: -9.803885459899902
    5. ' p' → logprob: -10.553885459899902
    6. '.' → logprob: -10.803885459899902
    7. ' ' → logprob: -11.928885459899902
    8. ' .' → logprob: -12.428885459899902
    9. '..' → logprob: -13.178885459899902
    10. '       ' → logprob: -13.178885459899902

Token 1323: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018417280167341232
    2. '1' → logprob: -4.0184173583984375
    3. 'p' → logprob: -8.268417358398438
    4. '```' → logprob: -12.268417358398438
    5. 'oints' → logprob: -13.893417358398438
    6. 'oint' → logprob: -14.393417358398438
    7. '``' → logprob: -14.705917358398438
    8. '
' → logprob: -14.830917358398438
    9. 'def' → logprob: -14.955917358398438
    10. '0' → logprob: -15.143417358398438

Token 1324: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.0008871606551110744
    2. '.' → logprob: -7.250887393951416
    3. 'location' → logprob: -9.500886917114258
    4. ' .' → logprob: -9.500886917114258
    5. '.loc' → logprob: -12.375886917114258
    6. ' location' → logprob: -12.750886917114258
    7. '.
' → logprob: -13.000886917114258
    8. '
' → logprob: -13.000886917114258
    9. ' =' → logprob: -13.250886917114258
    10. '(location' → logprob: -13.500886917114258

Token 1325: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.36574100604048e-06
    2. 'other' → logprob: -12.375004768371582
    3. '(
' → logprob: -16.500003814697266
    4. '(' → logprob: -17.125003814697266
    5. ' other' → logprob: -18.375003814697266
    6. ' (' → logprob: -19.000003814697266
    7. '   ' → logprob: -19.500003814697266
    8. '.other' → logprob: -20.125003814697266
    9. 'Other' → logprob: -20.500003814697266
    10. '(self' → logprob: -20.500003814697266

Token 1326: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.012680340558290482
    2. ')' → logprob: -4.762680530548096
    3. '       ' → logprob: -5.512680530548096
    4. ')
' → logprob: -11.262680053710938
    5. 'd' → logprob: -12.387680053710938
    6. '   ' → logprob: -13.387680053710938
    7. ' )
' → logprob: -14.012680053710938
    8. '[' → logprob: -14.387680053710938
    9. ')

' → logprob: -14.512680053710938
    10. 'def' → logprob: -14.637680053710938

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006978332996368408
    2. '   ' → logprob: -5.131978511810303
    3. 'd' → logprob: -7.131978511810303
    4. '	' → logprob: -8.881978034973145
    5. '-' → logprob: -10.756978034973145
    6. ' ' → logprob: -11.381978034973145
    7. '[' → logprob: -11.631978034973145
    8. ',' → logprob: -11.756978034973145
    9. ' d' → logprob: -11.881978034973145
    10. '           ' → logprob: -12.006978034973145

Token 1328: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.18105992674827576
    2. '       ' → logprob: -2.4310598373413086
    3. 'return' → logprob: -2.9310598373413086
    4. '   ' → logprob: -4.931059837341309
    5. ' d' → logprob: -4.931059837341309
    6. 'if' → logprob: -6.056059837341309
    7. ' return' → logprob: -6.306059837341309
    8. 's' → logprob: -6.431059837341309
    9. 'l' → logprob: -6.806059837341309
    10. 'r' → logprob: -7.306059837341309

Token 1329: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11335845291614532
    2. '2' → logprob: -2.238358497619629
    3. ' =' → logprob: -8.738358497619629
    4. '=' → logprob: -9.113358497619629
    5. '       ' → logprob: -9.863358497619629
    6. '   ' → logprob: -10.113358497619629
    7. 'Location' → logprob: -10.238358497619629
    8. '1' → logprob: -10.488358497619629
    9. ' ' → logprob: -10.988358497619629
    10. 'o' → logprob: -11.425858497619629

Token 1330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47577914595603943
    2. ' =' → logprob: -0.9757791757583618
    3. '   ' → logprob: -6.600779056549072
    4. '       ' → logprob: -8.10077953338623
    5. 'd' → logprob: -11.47577953338623
    6. ' ' → logprob: -11.47577953338623
    7. '  ' → logprob: -11.85077953338623
    8. '    ' → logprob: -12.10077953338623
    9. '        ' → logprob: -13.85077953338623
    10. '     ' → logprob: -14.47577953338623

Token 1331: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0003000696888193488
    2. ' other' → logprob: -8.625300407409668
    3. 'self' → logprob: -9.375300407409668
    4. '       ' → logprob: -10.750300407409668
    5. '   ' → logprob: -11.750300407409668
    6. 'Point' → logprob: -12.750300407409668
    7. '(other' → logprob: -13.125300407409668
    8. ' ' → logprob: -15.375300407409668
    9. '  ' → logprob: -15.750300407409668
    10. '
' → logprob: -15.750300407409668

Token 1332: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00028576893964782357
    2. 'p' → logprob: -8.875286102294922
    3. 'self' → logprob: -9.500286102294922
    4. '```' → logprob: -11.250286102294922
    5. '
' → logprob: -11.375286102294922
    6. ' .' → logprob: -11.750286102294922
    7. '.' → logprob: -11.875286102294922
    8. '       ' → logprob: -12.125286102294922
    9. '   ' → logprob: -12.125286102294922
    10. '.s' → logprob: -12.875286102294922

Token 1333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1160349458805285e-05
    2. 'oints' → logprob: -11.750011444091797
    3. '2' → logprob: -13.375011444091797
    4. 'oint' → logprob: -13.750011444091797
    5. '```' → logprob: -15.375011444091797
    6. 'p' → logprob: -17.187511444091797
    7. 'unction' → logprob: -17.250011444091797
    8. '１' → logprob: -17.500011444091797
    9. 'r' → logprob: -17.687511444091797
    10. 'location' → logprob: -17.687511444091797

Token 1334: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.030209755524992943
    2. 'location' → logprob: -3.78020977973938
    3. ' =' → logprob: -6.155209541320801
    4. 'self' → logprob: -6.155209541320801
    5. '=' → logprob: -6.780209541320801
    6. '(location' → logprob: -7.530209541320801
    7. '.' → logprob: -8.6552095413208
    8. '(self' → logprob: -9.0302095413208
    9. '_location' → logprob: -9.0302095413208
    10. 'Location' → logprob: -9.1552095413208

Token 1335: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005280950106680393
    2. 'self' → logprob: -5.2552809715271
    3. '(other' → logprob: -10.130280494689941
    4. 'other' → logprob: -12.130280494689941
    5. '[self' → logprob: -14.130280494689941
    6. ' self' → logprob: -15.005280494689941
    7. '(' → logprob: -15.130280494689941
    8. '(
' → logprob: -15.380280494689941
    9. '	self' → logprob: -16.255281448364258
    10. '(s' → logprob: -16.380281448364258

Token 1336: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.36078357696533203
    2. '       ' → logprob: -1.360783576965332
    3. ')' → logprob: -3.110783576965332
    4. '(other' → logprob: -7.235783576965332
    5. '(' → logprob: -7.610783576965332
    6. '())
' → logprob: -7.985783576965332
    7. '()
' → logprob: -9.735783576965332
    8. '()' → logprob: -9.860783576965332
    9. 'other' → logprob: -10.235783576965332
    10. '[' → logprob: -10.860783576965332

Token 1337: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004053463693708181
    2. 'd' → logprob: -6.254053592681885
    3. '   ' → logprob: -7.129053592681885
    4. ' d' → logprob: -8.004053115844727
    5. '	' → logprob: -8.629053115844727
    6. ',' → logprob: -8.879053115844727
    7. ' ' → logprob: -9.004053115844727
    8. '()' → logprob: -9.379053115844727
    9. '<|end|>' → logprob: -9.629053115844727
    10. '	d' → logprob: -9.754053115844727

Token 1338: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0018557000439614058
    2. '       ' → logprob: -6.626855850219727
    3. '   ' → logprob: -8.251855850219727
    4. ' d' → logprob: -8.251855850219727
    5. ' ' → logprob: -12.376855850219727
    6. '	d' → logprob: -13.251855850219727
    7. '  ' → logprob: -13.876855850219727
    8. '      ' → logprob: -15.126855850219727
    9. '     ' → logprob: -15.626855850219727
    10. '           ' → logprob: -15.751855850219727

Token 1339: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. '3' → logprob: -12.25001049041748
    3. '   ' → logprob: -13.00001049041748
    4. '1' → logprob: -13.75001049041748
    5. ' ' → logprob: -14.25001049041748
    6. '=' → logprob: -14.87501049041748
    7. ' =' → logprob: -15.37501049041748
    8. '  ' → logprob: -15.87501049041748
    9. '```' → logprob: -16.000009536743164
    10. '       ' → logprob: -16.500009536743164

Token 1340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994055211544037
    2. '=' → logprob: -2.6949405670166016
    3. '   ' → logprob: -13.569940567016602
    4. 'd' → logprob: -13.569940567016602
    5. ' ' → logprob: -14.319940567016602
    6. ':' → logprob: -14.694940567016602
    7. '  ' → logprob: -15.944940567016602
    8. ',' → logprob: -16.1949405670166
    9. '       ' → logprob: -16.6949405670166
    10. '    ' → logprob: -16.6949405670166

Token 1341: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -4.0484450437361374e-05
    2. ' other' → logprob: -10.125040054321289
    3. '   ' → logprob: -15.250040054321289
    4. '       ' → logprob: -16.12504005432129
    5. '(other' → logprob: -17.75004005432129
    6. '
' → logprob: -18.25004005432129
    7. ' ' → logprob: -18.62504005432129
    8. '.other' → logprob: -19.00004005432129
    9. 'self' → logprob: -19.37504005432129
    10. '           ' → logprob: -19.50004005432129

Token 1342: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.014262229204177856
    2. 'p' → logprob: -4.2642621994018555
    3. 'other' → logprob: -11.014262199401855
    4. '   ' → logprob: -11.139262199401855
    5. ' .' → logprob: -11.264262199401855
    6. '.' → logprob: -11.389262199401855
    7. '```' → logprob: -11.389262199401855
    8. '
' → logprob: -12.514262199401855
    9. 'P' → logprob: -12.764262199401855
    10. '<p' → logprob: -12.764262199401855

Token 1343: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0037265648134052753
    2. 'p' → logprob: -5.628726482391357
    3. '1' → logprob: -9.003726959228516
    4. 'point' → logprob: -13.878726959228516
    5. '```' → logprob: -13.878726959228516
    6. 'points' → logprob: -14.753726959228516
    7. '_p' → logprob: -15.753726959228516
    8. 'oints' → logprob: -15.878726959228516
    9. 'segment' → logprob: -15.878726959228516
    10. '   ' → logprob: -16.003726959228516

Token 1344: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.02491767145693302
    2. '(location' → logprob: -4.1499176025390625
    3. 'location' → logprob: -5.2749176025390625
    4. '(self' → logprob: -5.8999176025390625
    5. '.' → logprob: -8.024917602539062
    6. ' location' → logprob: -8.774917602539062
    7. 'Location' → logprob: -9.024917602539062
    8. '_location' → logprob: -9.649917602539062
    9. '.self' → logprob: -9.649917602539062
    10. '.Location' → logprob: -10.024917602539062

Token 1345: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012964145571459085
    2. 'self' → logprob: -9.000129699707031
    3. '(' → logprob: -12.125129699707031
    4. '(s' → logprob: -14.625129699707031
    5. '(
' → logprob: -15.750129699707031
    6. ' self' → logprob: -16.75012969970703
    7. '[self' → logprob: -17.12512969970703
    8. '(se' → logprob: -17.37512969970703
    9. ' (' → logprob: -18.00012969970703
    10. '(this' → logprob: -18.25012969970703

Token 1346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5771876573562622
    2. ')
' → logprob: -0.9521876573562622
    3. '       ' → logprob: -2.9521875381469727
    4. '()' → logprob: -8.827187538146973
    5. '   ' → logprob: -9.952187538146973
    6. ')

' → logprob: -10.077187538146973
    7. ')
' → logprob: -10.327187538146973
    8. '())
' → logprob: -10.577187538146973
    9. '()
' → logprob: -10.577187538146973
    10. '())' → logprob: -11.077187538146973

Token 1347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07915294170379639
    2. '   ' → logprob: -2.579153060913086
    3. '	' → logprob: -10.204153060913086
    4. '    ' → logprob: -10.329153060913086
    5. '
' → logprob: -10.579153060913086
    6. '	return' → logprob: -10.579153060913086
    7. '<|end|>' → logprob: -10.704153060913086
    8. '	   ' → logprob: -11.204153060913086
    9. ' return' → logprob: -11.454153060913086
    10. ',' → logprob: -11.454153060913086

Token 1348: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03863909840583801
    2. '       ' → logprob: -3.2886390686035156
    3. ' return' → logprob: -7.913639068603516
    4. 'if' → logprob: -8.538639068603516
    5. '   ' → logprob: -11.163639068603516
    6. 'r' → logprob: -11.788639068603516
    7. '	return' → logprob: -12.913639068603516
    8. 's' → logprob: -12.913639068603516
    9. 'd' → logprob: -13.038639068603516
    10. '```' → logprob: -13.038639068603516

Token 1349: ' d' (ID: 272)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5404312610626221
    2. 'd' → logprob: -1.415431261062622
    3. '((' → logprob: -2.290431261062622
    4. '(
' → logprob: -3.165431261062622
    5. '(' → logprob: -4.040431022644043
    6. '   ' → logprob: -5.290431022644043
    7. ' (' → logprob: -5.540431022644043
    8. '(((' → logprob: -6.415431022644043
    9. '\
' → logprob: -6.915431022644043
    10. ' d' → logprob: -7.165431022644043

Token 1350: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.874882430769503e-05
    2. '2' → logprob: -9.875079154968262
    3. '1' → logprob: -11.625079154968262
    4. 'd' → logprob: -12.250079154968262
    5. '==' → logprob: -13.437579154968262
    6. '!=' → logprob: -14.000079154968262
    7. '(' → logprob: -14.125079154968262
    8. '```' → logprob: -14.187579154968262
    9. '(
' → logprob: -14.312579154968262
    10. '(d' → logprob: -14.500079154968262

Token 1351: ' *' (ID: 425)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.26302066445350647
    2. '.value' → logprob: -2.6380207538604736
    3. '<=' → logprob: -2.8880207538604736
    4. '*' → logprob: -3.2630207538604736
    5. ' !=' → logprob: -3.3880207538604736
    6. '==' → logprob: -3.7630207538604736
    7. ' in' → logprob: -5.7630205154418945
    8. '
' → logprob: -6.6380205154418945
    9. '.' → logprob: -7.0130205154418945
    10. 'in' → logprob: -7.1380205154418945

Token 1352: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00016873658751137555
    2. ' d' → logprob: -9.375168800354004
    3. '   ' → logprob: -9.625168800354004
    4. '  ' → logprob: -12.500168800354004
    5. '       ' → logprob: -12.625168800354004
    6. '           ' → logprob: -12.875168800354004
    7. '    ' → logprob: -13.250168800354004
    8. ' ' → logprob: -13.500168800354004
    9. '0' → logprob: -14.000168800354004
    10. '     ' → logprob: -14.000168800354004

Token 1353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05789020285010338
    2. '3' → logprob: -3.3078901767730713
    3. '2' → logprob: -3.9328901767730713
    4. '```' → logprob: -10.932889938354492
    5. '0' → logprob: -11.182889938354492
    6. '
' → logprob: -11.557889938354492
    7. 'd' → logprob: -11.932889938354492
    8. ' ' → logprob: -12.120389938354492
    9. '   ' → logprob: -12.432889938354492
    10. '...' → logprob: -13.870389938354492

Token 1354: ' *' (ID: 425)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.00182857655454427
    2. ' <=' → logprob: -6.376828670501709
    3. '<' → logprob: -9.00182819366455
    4. ')<=' → logprob: -13.00182819366455
    5. ']<=' → logprob: -15.37682819366455
    6. '[' → logprob: -15.62682819366455
    7. '≤' → logprob: -15.75182819366455
    8. '=' → logprob: -15.87682819366455
    9. 'le' → logprob: -16.626829147338867
    10. '==' → logprob: -17.126829147338867

Token 1355: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.8444881536415778e-05
    2. '<=' → logprob: -11.375028610229492
    3. ' d' → logprob: -11.375028610229492
    4. '```' → logprob: -12.750028610229492
    5. '``' → logprob: -14.625028610229492
    6. ' ' → logprob: -14.625028610229492
    7. '`' → logprob: -14.875028610229492
    8. '
' → logprob: -15.500028610229492
    9. '   ' → logprob: -15.625028610229492
    10. '0' → logprob: -15.875028610229492

Token 1356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000714935187716037
    2. '0' → logprob: -7.5007147789001465
    3. '3' → logprob: -9.125715255737305
    4. '<=' → logprob: -10.500715255737305
    5. '<' → logprob: -11.375715255737305
    6. '```' → logprob: -12.250715255737305
    7. '23' → logprob: -12.875715255737305
    8. ' ' → logprob: -13.000715255737305
    9. ' <=' → logprob: -14.000715255737305
    10. '`' → logprob: -14.625715255737305

Token 1357: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.13037030398845673
    2. '<=' → logprob: -2.1303703784942627
    3. '<' → logprob: -6.505370140075684
    4. ' <' → logprob: -6.880370140075684
    5. ' *' → logprob: -7.755370140075684
    6. '*' → logprob: -8.255370140075684
    7. '   ' → logprob: -10.130370140075684
    8. ' ' → logprob: -10.255370140075684
    9. '```' → logprob: -10.505370140075684
    10. '  ' → logprob: -11.380370140075684

Token 1358: ' d' (ID: 272)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3873458802700043
    2. 'd' → logprob: -1.1373459100723267
    3. ' d' → logprob: -7.762345790863037
    4. ' ' → logprob: -10.762346267700195
    5. '   ' → logprob: -11.012346267700195
    6. '<=' → logprob: -12.887346267700195
    7. '  ' → logprob: -13.137346267700195
    8. '<' → logprob: -13.762346267700195
    9. '```' → logprob: -13.762346267700195
    10. '4' → logprob: -13.887346267700195

Token 1359: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.125000953674316
    3. '0' → logprob: -15.500000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '2' → logprob: -17.25
    6. '...' → logprob: -17.5
    7. '```' → logprob: -17.6875
    8. '<|end|>' → logprob: -18.0
    9. '۳' → logprob: -18.0625
    10. '  ' → logprob: -18.1875

Token 1360: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.28171101212501526
    2. ' <=' → logprob: -1.4067109823226929
    3. '<' → logprob: -7.656711101531982
    4. ' <' → logprob: -10.031710624694824
    5. '==' → logprob: -11.156710624694824
    6. ')<=' → logprob: -11.781710624694824
    7. ' ==' → logprob: -12.656710624694824
    8. '==-' → logprob: -12.781710624694824
    9. '=' → logprob: -12.906710624694824
    10. ' ' → logprob: -13.156710624694824

Token 1361: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.031460803002119064
    2. 'Point' → logprob: -3.531460762023926
    3. '=' → logprob: -6.906460762023926
    4. ' Point' → logprob: -8.156460762023926
    5. ' ' → logprob: -8.281460762023926
    6. '
' → logprob: -9.531460762023926
    7. '```' → logprob: -11.156460762023926
    8. 'PL' → logprob: -11.406460762023926
    9. '   ' → logprob: -11.406460762023926
    10. 'Segment' → logprob: -11.656460762023926

Token 1362: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009941066382452846
    2. 'Point' → logprob: -7.0009942054748535
    3. 'PL' → logprob: -9.875993728637695
    4. ' ' → logprob: -10.875993728637695
    5. '   ' → logprob: -13.125993728637695
    6. ' Point' → logprob: -13.250993728637695
    7. '=' → logprob: -13.500993728637695
    8. '-' → logprob: -13.500993728637695
    9. '```' → logprob: -13.875993728637695
    10. '
' → logprob: -14.563493728637695

Token 1363: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04438197612762451
    2. '<|end|>' → logprob: -3.419382095336914
    3. ' or' → logprob: -4.669382095336914
    4. 'and' → logprob: -7.044382095336914
    5. '<|end|>' → logprob: -8.794382095336914
    6. '
' → logprob: -9.169382095336914
    7. '   ' → logprob: -9.294382095336914
    8. '       ' → logprob: -10.794382095336914
    9. ' ' → logprob: -11.044382095336914
    10. ')' → logprob: -11.419382095336914

Token 1364: ' \
' (ID: 6814)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3606775999069214
    2. ' (' → logprob: -1.4856775999069214
    3. '(a' → logprob: -2.235677719116211
    4. '(d' → logprob: -2.360677719116211
    5. '(
' → logprob: -2.485677719116211
    6. ' d' → logprob: -2.610677719116211
    7. '(s' → logprob: -3.360677719116211
    8. '(' → logprob: -4.110677719116211
    9. '((' → logprob: -4.110677719116211
    10. '(self' → logprob: -4.360677719116211

Token 1365: '           ' (ID: 352)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.22001084685325623
    2. '       ' → logprob: -2.595010757446289
    3. 'd' → logprob: -3.345010757446289
    4. ' (' → logprob: -3.470010757446289
    5. '   ' → logprob: -3.845010757446289
    6. '((' → logprob: -4.470010757446289
    7. '(' → logprob: -5.345010757446289
    8. '(
' → logprob: -5.470010757446289
    9. '           ' → logprob: -5.595010757446289
    10. '(abs' → logprob: -6.345010757446289

Token 1366: ' (' (ID: 350)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.6657567024230957
    2. 'd' → logprob: -1.5407567024230957
    3. '(
' → logprob: -2.2907567024230957
    4. '((' → logprob: -2.9157567024230957
    5. '(max' → logprob: -3.4157567024230957
    6. 'max' → logprob: -4.040756702423096
    7. '(a' → logprob: -4.415756702423096
    8. '(self' → logprob: -4.665756702423096
    9. '(' (adapté à ' (') → logprob: -4.790756702423096
    10. 'self' → logprob: -4.915756702423096

Token 1367: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01939660683274269
    2. '(d' → logprob: -4.394396781921387
    3. 'Point' → logprob: -6.769396781921387
    4. '   ' → logprob: -6.769396781921387
    5. '(' → logprob: -6.894396781921387
    6. '(
' → logprob: -6.894396781921387
    7. '((' → logprob: -7.394396781921387
    8. 'PL' → logprob: -7.644396781921387
    9. '(Point' → logprob: -7.769396781921387
    10. 'min' → logprob: -8.519396781921387

Token 1368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003013809327967465
    2. '2' → logprob: -8.125301361083984
    3. '1' → logprob: -12.500301361083984
    4. '[' → logprob: -15.125301361083984
    5. '
' → logprob: -15.250301361083984
    6. '   ' → logprob: -15.562801361083984
    7. ' ' → logprob: -15.875301361083984
    8. '```' → logprob: -15.937801361083984
    9. '(' → logprob: -16.437801361083984
    10. '۰' → logprob: -16.562801361083984

Token 1369: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1302919238805771
    2. '*' → logprob: -2.7552919387817383
    3. ' !=' → logprob: -3.7552919387817383
    4. '*d' → logprob: -4.130291938781738
    5. '!=' → logprob: -5.130291938781738
    6. '   ' → logprob: -5.255291938781738
    7. 'd' → logprob: -5.630291938781738
    8. ')' → logprob: -6.130291938781738
    9. '  ' → logprob: -8.130291938781738
    10. ' ' → logprob: -8.255291938781738

Token 1370: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.001333455671556294
    2. ' d' → logprob: -6.876333236694336
    3. '           ' → logprob: -8.751333236694336
    4. '   ' → logprob: -9.876333236694336
    5. '       ' → logprob: -10.251333236694336
    6. '
' → logprob: -10.626333236694336
    7. ' ' → logprob: -12.501333236694336
    8. 'other' → logprob: -12.626333236694336
    9. '1' → logprob: -12.751333236694336
    10. '  ' → logprob: -12.751333236694336

Token 1371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.546478935983032e-05
    2. '3' → logprob: -11.000025749206543
    3. '2' → logprob: -12.750025749206543
    4. '
' → logprob: -13.375025749206543
    5. 'd' → logprob: -13.375025749206543
    6. '```' → logprob: -13.625025749206543
    7. '0' → logprob: -14.125025749206543
    8. ' ' → logprob: -15.437525749206543
    9. '...' → logprob: -16.125024795532227
    10. '   ' → logprob: -16.250024795532227

Token 1372: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.12967632710933685
    2. ' <' → logprob: -2.504676342010498
    3. ')' → logprob: -3.504676342010498
    4. ')<' → logprob: -5.004676342010498
    5. 'd' → logprob: -6.629676342010498
    6. '   ' → logprob: -7.254676342010498
    7. ' ' → logprob: -8.12967586517334
    8. '<=' → logprob: -8.37967586517334
    9. ' <=' → logprob: -9.00467586517334
    10. ',' → logprob: -9.75467586517334

Token 1373: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001261663855984807
    2. 'Point' → logprob: -7.5012617111206055
    3. ' -' → logprob: -7.5012617111206055
    4. '0' → logprob: -9.501261711120605
    5. '1' → logprob: -10.751261711120605
    6. '```' → logprob: -11.251261711120605
    7. '<Point' → logprob: -11.876261711120605
    8. '
' → logprob: -12.126261711120605
    9. 'PL' → logprob: -12.376261711120605
    10. 'd' → logprob: -12.501261711120605

Token 1374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005729287513531744
    2. '0' → logprob: -8.12557315826416
    3. 'd' → logprob: -9.37557315826416
    4. 'PL' → logprob: -9.87557315826416
    5. ' ' → logprob: -10.25057315826416
    6. 'Point' → logprob: -10.62557315826416
    7. '(' → logprob: -10.75057315826416
    8. '<|end|>' → logprob: -11.37557315826416
    9. '
' → logprob: -11.50057315826416
    10. '<|end|>' → logprob: -12.06307315826416

Token 1375: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003361889161169529
    2. 'and' → logprob: -5.878361701965332
    3. ')' → logprob: -7.503361701965332
    4. '       ' → logprob: -13.628361701965332
    5. '<|end|>' → logprob: -13.753361701965332
    6. '           ' → logprob: -13.878361701965332
    7. ' )' → logprob: -14.628361701965332
    8. '               ' → logprob: -14.878361701965332
    9. '   ' → logprob: -15.003361701965332
    10. ' ' → logprob: -15.378361701965332

Token 1376: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2255479246377945
    2. ' d' → logprob: -1.6005479097366333
    3. '   ' → logprob: -9.475547790527344
    4. '(d' → logprob: -11.100547790527344
    5. '	d' → logprob: -11.100547790527344
    6. '           ' → logprob: -11.225547790527344
    7. ' ' → logprob: -12.475547790527344
    8. '  ' → logprob: -12.725547790527344
    9. '       ' → logprob: -13.225547790527344
    10. '    ' → logprob: -13.225547790527344

Token 1377: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5872584581375122
    2. 'd' → logprob: -1.8372584581375122
    3. '(d' → logprob: -1.8372584581375122
    4. ' d' → logprob: -2.8372583389282227
    5. '2' → logprob: -3.0872583389282227
    6. '(' → logprob: -4.337258338928223
    7. ' (' → logprob: -5.462258338928223
    8. '           ' → logprob: -6.712258338928223
    9. '   ' → logprob: -7.087258338928223
    10. ' ' → logprob: -7.712258338928223

Token 1378: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141547918319702
    2. '*' → logprob: -1.7014155387878418
    3. ' ' → logprob: -13.951415061950684
    4. '*d' → logprob: -14.201415061950684
    5. '**' → logprob: -15.451415061950684
    6. ' *
' → logprob: -15.951415061950684
    7. '*object' → logprob: -15.951415061950684
    8. ' ' → logprob: -16.576416015625
    9. '...' → logprob: -16.576416015625
    10. '   ' → logprob: -17.451416015625

Token 1379: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.05528798699378967
    2. ' d' → logprob: -2.930288076400757
    3. '2' → logprob: -8.680288314819336
    4. ' ' → logprob: -9.305288314819336
    5. '-' → logprob: -9.805288314819336
    6. '   ' → logprob: -10.555288314819336
    7. '1' → logprob: -11.305288314819336
    8. ' -' → logprob: -11.305288314819336
    9. '  ' → logprob: -12.055288314819336
    10. '
' → logprob: -12.305288314819336

Token 1380: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.372294698550832e-06
    2. '3' → logprob: -12.000009536743164
    3. '1' → logprob: -13.000009536743164
    4. ' ' → logprob: -14.250009536743164
    5. '-' → logprob: -17.125009536743164
    6. '```' → logprob: -17.125009536743164
    7. '(' → logprob: -17.625009536743164
    8. '0' → logprob: -17.687509536743164
    9. '۲' → logprob: -18.125009536743164
    10. '<|end|>' → logprob: -18.375009536743164

Token 1381: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5432277321815491
    2. ' ==' → logprob: -0.9182277321815491
    3. '==-' → logprob: -3.9182276725769043
    4. ')==' → logprob: -11.418228149414062
    5. ']==' → logprob: -12.793228149414062
    6. '==
' → logprob: -12.918228149414062
    7. '===' → logprob: -13.043228149414062
    8. ')' → logprob: -13.043228149414062
    9. ' ' → logprob: -13.293228149414062
    10. '()==' → logprob: -13.793228149414062

Token 1382: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020473242329899222
    2. ' -' → logprob: -8.750205039978027
    3. '1' → logprob: -10.000205039978027
    4. ' ' → logprob: -15.000205039978027
    5. '   ' → logprob: -15.875205039978027
    6. '-
' → logprob: -16.62520408630371
    7. '
' → logprob: -16.87520408630371
    8. '  ' → logprob: -17.25020408630371
    9. '```' → logprob: -17.62520408630371
    10. 'True' → logprob: -18.50020408630371

Token 1383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.776898251497187e-05
    2. '-' → logprob: -10.0000581741333
    3. ' ' → logprob: -11.6250581741333
    4. '<|end|>' → logprob: -13.6875581741333
    5. '۱' → logprob: -14.7500581741333
    6. ' -' → logprob: -15.1250581741333
    7. '   ' → logprob: -15.1875581741333
    8. '```' → logprob: -15.5625581741333
    9. '१' → logprob: -15.8750581741333
    10. '１' → logprob: -15.8750581741333

Token 1384: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.214019307051785e-05
    2. '       ' → logprob: -10.625032424926758
    3. ')
' → logprob: -12.250032424926758
    4. ' )' → logprob: -13.375032424926758
    5. '   ' → logprob: -14.250032424926758
    6. '<|end|>' → logprob: -15.625032424926758
    7. '))' → logprob: -15.875032424926758
    8. '())' → logprob: -16.500032424926758
    9. ')#' → logprob: -16.750032424926758
    10. ')

' → logprob: -17.125032424926758

Token 1385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10758988559246063
    2. 'def' → logprob: -2.7325899600982666
    3. '.' → logprob: -5.1075897216796875
    4. ')' → logprob: -5.2325897216796875
    5. '<|end|>' → logprob: -5.2325897216796875
    6. ':' → logprob: -5.4825897216796875
    7. '(' → logprob: -5.6075897216796875
    8. '```' → logprob: -5.7325897216796875
    9. '#' → logprob: -6.1075897216796875
    10. '(
' → logprob: -6.1075897216796875

Token 1386: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012801216915249825
    2. 'def' (adapté à ' def') → logprob: -4.762801170349121
    3. ' def' → logprob: -6.137801170349121
    4. '(' → logprob: -7.387801170349121
    5. ')' → logprob: -7.637801170349121
    6. '```' → logprob: -8.262801170349121
    7. '[' → logprob: -8.387801170349121
    8. ':' → logprob: -8.887801170349121
    9. '       ' → logprob: -9.512801170349121
    10. '
' → logprob: -9.887801170349121

Token 1387: ' intersection' (ID: 42002)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.2293449193239212
    2. 'inter' → logprob: -2.3543448448181152
    3. 'contains' → logprob: -3.2293448448181152
    4. 'project' → logprob: -4.229344844818115
    5. 'intersection' → logprob: -4.479344844818115
    6. 'conv' → logprob: -4.604344844818115
    7. 'projection' → logprob: -5.354344844818115
    8. 'cut' → logprob: -5.729344844818115
    9. 'center' → logprob: -5.979344844818115
    10. 'get' → logprob: -5.979344844818115

Token 1388: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.009865285828709602
    2. '_point' → logprob: -4.6348652839660645
    3. 'point' → logprob: -10.259865760803223
    4. '_with' → logprob: -10.509865760803223
    5. '(' → logprob: -10.759865760803223
    6. '   ' → logprob: -11.759865760803223
    7. '_ratio' → logprob: -12.134865760803223
    8. 's' → logprob: -13.134865760803223
    9. '(
' → logprob: -13.259865760803223
    10. 'Point' → logprob: -13.509865760803223

Token 1389: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.052377623040229e-05
    2. '_point' → logprob: -10.000070571899414
    3. '_ratio' → logprob: -11.750070571899414
    4. '(other' → logprob: -11.875070571899414
    5. '   ' → logprob: -12.250070571899414
    6. '(' → logprob: -13.625070571899414
    7. '```' → logprob: -13.875070571899414
    8. ' (' → logprob: -14.000070571899414
    9. '       ' → logprob: -14.250070571899414
    10. ')' → logprob: -14.500070571899414

Token 1390: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.011049585416913033
    2. ' other' → logprob: -4.511049747467041
    3. 'self' → logprob: -13.261049270629883
    4. '(other' → logprob: -17.261049270629883
    5. 'Other' → logprob: -17.511049270629883
    6. ' self' → logprob: -19.886049270629883
    7. '   ' → logprob: -20.636049270629883
    8. '.other' → logprob: -20.761049270629883
    9. '_other' → logprob: -21.261049270629883
    10. 'others' → logprob: -22.386049270629883

Token 1391: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03577388823032379
    2. ':' → logprob: -3.535773992538452
    3. '   ' → logprob: -6.285773754119873
    4. '.' → logprob: -7.035773754119873
    5. ').' → logprob: -7.660773754119873
    6. ')->' → logprob: -7.910773754119873
    7. '(self' → logprob: -8.035774230957031
    8. '):' → logprob: -8.160774230957031
    9. '):
' → logprob: -8.160774230957031
    10. '(' → logprob: -8.410774230957031

Token 1392: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0018928182544186711
    2. ' '' → logprob: -6.376893043518066
    3. ''s' → logprob: -8.751893043518066
    4. ''S' → logprob: -10.626893043518066
    5. '   ' → logprob: -12.751893043518066
    6. 'Segment' → logprob: -13.001893043518066
    7. ' ' → logprob: -13.751893043518066
    8. '  ' → logprob: -14.751893043518066
    9. ')' → logprob: -15.376893043518066
    10. '('' → logprob: -15.626893043518066

Token 1393: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -7.703443770878948e-06
    2. ' Segment' → logprob: -12.500007629394531
    3. ''' → logprob: -13.000007629394531
    4. 'Point' → logprob: -14.000007629394531
    5. ''S' → logprob: -14.125007629394531
    6. ''s' → logprob: -16.12500762939453
    7. '_segment' → logprob: -17.62500762939453
    8. 'Segments' → logprob: -18.75000762939453
    9. 'Section' → logprob: -19.12500762939453
    10. 'Seg' → logprob: -19.50000762939453

Token 1394: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869462311267853
    2. '')' → logprob: -1.136946201324463
    3. '")' → logprob: -10.511946678161621
    4. '   ' → logprob: -11.261946678161621
    5. '()' → logprob: -11.511946678161621
    6. '`)' → logprob: -12.136946678161621
    7. '(self' → logprob: -12.261946678161621
    8. 'self' → logprob: -12.511946678161621
    9. ' ')' → logprob: -12.636946678161621
    10. ''' → logprob: -13.136946678161621

Token 1395: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.021662065759301186
    2. ')' → logprob: -4.77166223526001
    3. '->' → logprob: -5.14666223526001
    4. ' ->' → logprob: -5.27166223526001
    5. '   ' → logprob: -6.89666223526001
    6. '       ' → logprob: -7.64666223526001
    7. '()' → logprob: -7.89666223526001
    8. '(' → logprob: -10.146661758422852
    9. ':' → logprob: -10.521661758422852
    10. 'def' → logprob: -10.521661758422852

Token 1396: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.011217346414923668
    2. ''' → logprob: -4.51121711730957
    3. ' Point' → logprob: -8.88621711730957
    4. 'Optional' → logprob: -11.01121711730957
    5. 'Union' → logprob: -12.13621711730957
    6. '   ' → logprob: -12.63621711730957
    7. ''s' → logprob: -13.26121711730957
    8. '	Point' → logprob: -13.88621711730957
    9. 'Vector' → logprob: -14.38621711730957
    10. '(Point' → logprob: -14.76121711730957

Token 1397: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32798537611961365
    2. '():' → logprob: -2.0779852867126465
    3. '():
' → logprob: -2.3279852867126465
    4. ':
' → logprob: -3.7029852867126465
    5. '   ' → logprob: -4.8279852867126465
    6. '       ' → logprob: -4.8279852867126465
    7. ' =' → logprob: -5.2029852867126465
    8. '()' → logprob: -5.4529852867126465
    9. '=' → logprob: -5.8279852867126465
    10. '(' → logprob: -6.8279852867126465

Token 1398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007800845778547227
    2. 's' → logprob: -7.37578010559082
    3. ' s' → logprob: -9.12578010559082
    4. 'a' → logprob: -10.62578010559082
    5. '
' → logprob: -11.75078010559082
    6. '```' → logprob: -13.12578010559082
    7. 'v' → logprob: -13.25078010559082
    8. 'return' → logprob: -13.62578010559082
    9. 'Vector' → logprob: -13.87578010559082
    10. ' return' → logprob: -14.25078010559082

Token 1399: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.34731870889663696
    2. '       ' → logprob: -1.7223186492919922
    3. 'a' → logprob: -2.222318649291992
    4. 'p' → logprob: -5.722318649291992
    5. 'return' → logprob: -6.722318649291992
    6. 'v' → logprob: -7.097318649291992
    7. 't' → logprob: -8.097318649291992
    8. 'r' → logprob: -8.222318649291992
    9. 'self' → logprob: -8.847318649291992
    10. 'ratio' → logprob: -8.847318649291992

Token 1400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021915239631198347
    2. ',s' → logprob: -9.625219345092773
    3. '=' → logprob: -9.750219345092773
    4. 'elf' → logprob: -10.250219345092773
    5. ' =' → logprob: -10.625219345092773
    6. 's' → logprob: -11.125219345092773
    7. ' ,' → logprob: -11.625219345092773
    8. '       ' → logprob: -11.875219345092773
    9. ',self' → logprob: -13.625219345092773
    10. '_,' → logprob: -14.625219345092773

Token 1401: ' _' (ID: 1175)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0001242772996192798
    2. ' t' → logprob: -9.000123977661133
    3. '_' → logprob: -14.500123977661133
    4. '_t' → logprob: -15.000123977661133
    5. '<|end|>' → logprob: -16.625123977661133
    6. '	t' → logprob: -17.250123977661133
    7. '`t' → logprob: -19.375123977661133
    8. ' ' → logprob: -19.625123977661133
    9. '(t' → logprob: -20.000123977661133
    10. '  ' → logprob: -20.125123977661133

Token 1402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006777542643249035
    2. ' =' → logprob: -5.006777763366699
    3. ',' → logprob: -9.7567777633667
    4. 's' → logprob: -13.0067777633667
    5. '<|end|>' → logprob: -14.2567777633667
    6. '       ' → logprob: -14.8817777633667
    7. '=
' → logprob: -15.0067777633667
    8. ' s' → logprob: -15.7567777633667
    9. '        ' → logprob: -16.006776809692383
    10. ')=' → logprob: -16.131776809692383

Token 1403: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00021033499797340482
    2. 'other' → logprob: -8.750210762023926
    3. ' self' → logprob: -9.875210762023926
    4. '       ' → logprob: -15.625210762023926
    5. ' other' → logprob: -16.37520980834961
    6. '(self' → logprob: -17.75020980834961
    7. '   ' → logprob: -18.62520980834961
    8. '	self' → logprob: -18.75020980834961
    9. '           ' → logprob: -19.12520980834961
    10. 'Other' → logprob: -19.87520980834961

Token 1404: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.2519741952419281
    2. 'inter' → logprob: -1.5019742250442505
    3. 'intersection' → logprob: -10.126974105834961
    4. '   ' → logprob: -12.751974105834961
    5. ' intersect' → logprob: -14.126974105834961
    6. '.interpolate' → logprob: -14.626974105834961
    7. '(inter' → logprob: -15.626974105834961
    8. '.' → logprob: -15.626974105834961
    9. '_inter' → logprob: -16.12697410583496
    10. ' .' → logprob: -16.12697410583496

Token 1405: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -3.762356209335849e-05
    2. 'section' → logprob: -10.62503719329834
    3. 'sects' → logprob: -12.50003719329834
    4. 's' → logprob: -13.00003719329834
    5. 'ect' → logprob: -13.25003719329834
    6. 'spect' → logprob: -14.00003719329834
    7. '
' → logprob: -14.25003719329834
    8. '```' → logprob: -14.25003719329834
    9. 'es' → logprob: -14.87503719329834
    10. '``' → logprob: -15.12503719329834

Token 1406: '_ratio' (ID: 45680)
  Prédit: '_ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ratio' → logprob: -3.130576806142926e-05
    2. 'ratio' → logprob: -10.500031471252441
    3. 's' → logprob: -13.500031471252441
    4. '(other' → logprob: -13.500031471252441
    5. '_rate' → logprob: -15.125031471252441
    6. 'other' → logprob: -15.500031471252441
    7. 'Ratio' → logprob: -16.375030517578125
    8. 'ion' → logprob: -16.500030517578125
    9. '_RATIO' → logprob: -16.875030517578125
    10. '_rat' → logprob: -17.000030517578125

Token 1407: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.0280383548888494e-06
    2. 'other' → logprob: -13.875000953674316
    3. '(' → logprob: -17.875001907348633
    4. ' other' → logprob: -18.750001907348633
    5. ' (' → logprob: -20.500001907348633
    6. '(
' → logprob: -20.625001907348633
    7. 'Other' → logprob: -20.875001907348633
    8. '_other' → logprob: -21.375001907348633
    9. '.other' → logprob: -21.625001907348633
    10. '(inter' → logprob: -21.750001907348633

Token 1408: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008205321617424488
    2. '<|end|>' → logprob: -5.383205413818359
    3. '()' → logprob: -6.258205413818359
    4. '(other' → logprob: -7.258205413818359
    5. '<|end|>' → logprob: -7.883205413818359
    6. ')
' → logprob: -8.75820541381836
    7. 'other' → logprob: -9.50820541381836
    8. ')return' → logprob: -9.75820541381836
    9. '(' → logprob: -9.88320541381836
    10. ' other' → logprob: -10.00820541381836

Token 1409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29883503913879395
    2. 'return' → logprob: -1.423835039138794
    3. ' return' → logprob: -4.048834800720215
    4. '        
' → logprob: -10.673834800720215
    5. '```' → logprob: -10.798834800720215
    6. '`' → logprob: -11.548834800720215
    7. '
' → logprob: -12.048834800720215
    8. ':return' → logprob: -12.298834800720215
    9. '	return' → logprob: -12.548834800720215
    10. '{return' → logprob: -12.798834800720215

Token 1410: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.505351095460355e-05
    2. ' return' → logprob: -9.750075340270996
    3. '       ' → logprob: -11.000075340270996
    4. '	return' → logprob: -17.12507438659668
    5. 'result' → logprob: -20.25007438659668
    6. 'ret' → logprob: -20.37507438659668
    7. '
' → logprob: -20.50007438659668
    8. '   ' → logprob: -20.87507438659668
    9. 'self' → logprob: -21.25007438659668
    10. '        
' → logprob: -21.50007438659668

Token 1411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005405236734077334
    2. ' self' → logprob: -7.750540733337402
    3. 'Point' → logprob: -9.125540733337402
    4. 'Segment' → logprob: -14.375540733337402
    5. '(self' → logprob: -15.625540733337402
    6. ' Point' → logprob: -15.625540733337402
    7. '       ' → logprob: -16.250539779663086
    8. '	self' → logprob: -18.000539779663086
    9. 's' → logprob: -18.125539779663086
    10. '   ' → logprob: -18.500539779663086

Token 1412: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -5.44312788406387e-05
    2. 'p' → logprob: -10.375054359436035
    3. '.vector' → logprob: -11.125054359436035
    4. '(p' → logprob: -12.625054359436035
    5. '.point' → logprob: -13.125054359436035
    6. '(' → logprob: -13.875054359436035
    7. '.s' → logprob: -14.250054359436035
    8. 'vector' → logprob: -14.500054359436035
    9. ' +' → logprob: -15.500054359436035
    10. '+' → logprob: -15.500054359436035

Token 1413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. 'oint' → logprob: -14.500000953674316
    3. '```' → logprob: -17.0
    4. 'oints' → logprob: -17.875
    5. ' ' → logprob: -18.875
    6. 'oin' → logprob: -19.5
    7. 'ointer' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. 's' → logprob: -20.0
    10. 'osition' → logprob: -20.375

Token 1414: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014184147119522
    2. ' +' → logprob: -1.701418399810791
    3. '+s' → logprob: -12.45141887664795
    4. '+self' → logprob: -14.07641887664795
    5. '+(' → logprob: -15.57641887664795
    6. '＋' → logprob: -16.201417922973633
    7. 's' → logprob: -16.576417922973633
    8. '+
' → logprob: -16.701417922973633
    9. '```' → logprob: -17.951417922973633
    10. '+p' → logprob: -19.451417922973633

Token 1415: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0020775748416781425
    2. ' self' → logprob: -6.627077579498291
    3. '(self' → logprob: -7.377077579498291
    4. 's' → logprob: -9.002077102661133
    5. '(s' → logprob: -13.377077102661133
    6. ' s' → logprob: -14.377077102661133
    7. '(' → logprob: -14.752077102661133
    8. ' (' → logprob: -15.502077102661133
    9. '	self' → logprob: -17.127077102661133
    10. '((' → logprob: -18.627077102661133

Token 1416: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04103431478142738
    2. '*' → logprob: -3.79103422164917
    3. '*(' → logprob: -4.29103422164917
    4. '*self' → logprob: -5.54103422164917
    5. '*object' → logprob: -11.916034698486328
    6. '(self' → logprob: -13.041034698486328
    7. 'self' → logprob: -13.416034698486328
    8. '```' → logprob: -13.791034698486328
    9. '<|end|>' → logprob: -13.791034698486328
    10. '   ' → logprob: -14.041034698486328

Token 1417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00031294001382775605
    2. '(self' → logprob: -8.500312805175781
    3. ' self' → logprob: -9.125312805175781
    4. '(' → logprob: -15.375312805175781
    5. ' (' → logprob: -16.12531280517578
    6. '       ' → logprob: -16.25031280517578
    7. '           ' → logprob: -17.87531280517578
    8. '   ' → logprob: -17.87531280517578
    9. '	self' → logprob: -18.62531280517578
    10. '        
' → logprob: -19.00031280517578

Token 1418: '.vector' (ID: 104563)
  Prédit: '.vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.vector' → logprob: -0.00026181264547631145
    2. 'vector' → logprob: -8.250262260437012
    3. ' vector' → logprob: -15.375262260437012
    4. 'Vector' → logprob: -16.375261306762695
    5. '	vector' → logprob: -16.375261306762695
    6. ' .' → logprob: -16.750261306762695
    7. '   ' → logprob: -17.000261306762695
    8. '(vector' → logprob: -17.500261306762695
    9. '.Vector' → logprob: -17.625261306762695
    10. '_vector' → logprob: -17.625261306762695

Token 1419: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1420: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1421: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1422: ' distance' (ID: 9324)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.1969642639160156
    2. 'distance' → logprob: -2.0719642639160156
    3. 'length' → logprob: -2.0719642639160156
    4. 'contains' → logprob: -2.1969642639160156
    5. 'mid' → logprob: -3.3219642639160156
    6. '__' → logprob: -3.4469642639160156
    7. 'cross' → logprob: -3.4469642639160156
    8. 'is' → logprob: -3.5719642639160156
    9. 'project' → logprob: -3.6969642639160156
    10. 'class' → logprob: -3.8219642639160156

Token 1423: '_with' (ID: 14161)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.011609814129769802
    2. 'to' → logprob: -4.63661003112793
    3. '(self' → logprob: -6.38661003112793
    4. '   ' → logprob: -9.63661003112793
    5. 'To' → logprob: -10.13661003112793
    6. 'def' → logprob: -10.26161003112793
    7. ' to' → logprob: -11.13661003112793
    8. '(' → logprob: -12.01161003112793
    9. 'self' → logprob: -13.63661003112793
    10. '_TO' → logprob: -13.76161003112793

Token 1424: '_segment' (ID: 71041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.6320589184761047
    2. '_segment' → logprob: -1.50705885887146
    3. 'self' → logprob: -1.75705885887146
    4. 'Segment' → logprob: -3.13205885887146
    5. '(self' → logprob: -3.88205885887146
    6. 'point' → logprob: -5.257059097290039
    7. 'other' → logprob: -6.507059097290039
    8. 'seg' → logprob: -6.882059097290039
    9. '_point' → logprob: -7.007059097290039
    10. ' segment' → logprob: -7.632059097290039

Token 1425: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.200166469876422e-06
    2. '(' → logprob: -12.500004768371582
    3. 'self' → logprob: -14.375004768371582
    4. '(s' → logprob: -14.625004768371582
    5. ' (' → logprob: -15.125004768371582
    6. '(
' → logprob: -16.7500057220459
    7. '(other' → logprob: -17.1250057220459
    8. '(se' → logprob: -18.2500057220459
    9. '(this' → logprob: -18.8750057220459
    10. ' self' → logprob: -19.1250057220459

Token 1426: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004306692280806601
    2. ' (' → logprob: -8.125431060791016
    3. '(' → logprob: -9.500431060791016
    4. '(other' → logprob: -10.125431060791016
    5. 'self' → logprob: -11.500431060791016
    6. '(s' → logprob: -12.625431060791016
    7. ',' → logprob: -13.250431060791016
    8. ')' → logprob: -13.875431060791016
    9. '```' → logprob: -14.125431060791016
    10. '(
' → logprob: -14.375431060791016

Token 1427: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.03872786462306976
    2. ' other' → logprob: -3.2887277603149414
    3. 'self' → logprob: -7.288727760314941
    4. ' self' → logprob: -13.538727760314941
    5. 'seg' → logprob: -13.538727760314941
    6. 'Other' → logprob: -15.413727760314941
    7. ' seg' → logprob: -16.913728713989258
    8. '(other' → logprob: -17.163728713989258
    9. '_other' → logprob: -17.413728713989258
    10. '.other' → logprob: -18.538728713989258

Token 1428: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16580916941165924
    2. '(self' → logprob: -1.915809154510498
    3. ':' → logprob: -6.040809154510498
    4. '->' → logprob: -6.665809154510498
    5. ' ->' → logprob: -6.665809154510498
    6. '   ' → logprob: -8.290809631347656
    7. ',' → logprob: -9.415809631347656
    8. 'self' → logprob: -9.540809631347656
    9. '       ' → logprob: -9.790809631347656
    10. ')->' → logprob: -10.040809631347656

Token 1429: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009898455813527107
    2. ' '' → logprob: -4.634898662567139
    3. ''S' → logprob: -9.13489818572998
    4. ' other' → logprob: -11.75989818572998
    5. ''s' → logprob: -12.00989818572998
    6. ' ' → logprob: -12.00989818572998
    7. 'Segment' → logprob: -12.63489818572998
    8. 'other' → logprob: -12.75989818572998
    9. '   ' → logprob: -13.13489818572998
    10. ')' → logprob: -13.50989818572998

Token 1430: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -9.014684110297821e-06
    2. ''' → logprob: -12.125008583068848
    3. ' Segment' → logprob: -12.750008583068848
    4. ''S' → logprob: -15.000008583068848
    5. 'Point' → logprob: -15.375008583068848
    6. '_segment' → logprob: -16.500009536743164
    7. 'segment' → logprob: -16.875009536743164
    8. ''s' → logprob: -17.250009536743164
    9. 'Section' → logprob: -17.500009536743164
    10. 'Seg' → logprob: -18.750009536743164

Token 1431: '')' (ID: 1542)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2557693123817444
    2. ')' → logprob: -1.5057692527770996
    3. '()' → logprob: -5.7557692527771
    4. '')' → logprob: -7.3807692527771
    5. 'self' → logprob: -11.130769729614258
    6. '(' → logprob: -11.755769729614258
    7. '())' → logprob: -11.880769729614258
    8. '")' → logprob: -12.880769729614258
    9. '   ' → logprob: -13.005769729614258
    10. '```' → logprob: -13.005769729614258

Token 1432: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.179569077678025e-05
    2. '   ' → logprob: -11.000041961669922
    3. '       ' → logprob: -12.250041961669922
    4. '(' → logprob: -12.250041961669922
    5. 'def' → logprob: -12.375041961669922
    6. '->' → logprob: -12.500041961669922
    7. ' ->' → logprob: -13.375041961669922
    8. ' (' → logprob: -13.750041961669922
    9. '(
' → logprob: -14.000041961669922
    10. ' def' → logprob: -14.125041961669922

Token 1433: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.002478508511558175
    2. ' float' → logprob: -6.00247859954834
    3. '(float' → logprob: -14.00247859954834
    4. '<float' → logprob: -14.12747859954834
    5. '	float' → logprob: -14.87747859954834
    6. '```' → logprob: -15.37747859954834
    7. 'def' → logprob: -15.50247859954834
    8. 'lambda' → logprob: -16.502477645874023
    9. '   ' → logprob: -16.502477645874023
    10. 'loat' → logprob: -16.752477645874023

Token 1434: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0035753650590777397
    2. '       ' → logprob: -6.128575325012207
    3. '(' → logprob: -7.128575325012207
    4. '   ' → logprob: -7.628575325012207
    5. '(
' → logprob: -10.378575325012207
    6. 'self' → logprob: -10.378575325012207
    7. ':
' → logprob: -11.503575325012207
    8. 'def' → logprob: -11.503575325012207
    9. '```' → logprob: -12.503575325012207
    10. ':' → logprob: -12.628575325012207

Token 1435: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44420191645622253
    2. '   ' → logprob: -1.069201946258545
    3. 'd' → logprob: -4.319201946258545
    4. 'a' → logprob: -6.444201946258545
    5. 'r' → logprob: -8.944201469421387
    6. 'dist' → logprob: -9.194201469421387
    7. 't' → logprob: -9.569201469421387
    8. 's' → logprob: -10.444201469421387
    9. ' d' → logprob: -11.069201469421387
    10. '```' → logprob: -11.194201469421387

Token 1436: ' if' (ID: 538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.021027840673923492
    2. 'return' → logprob: -4.5210280418396
    3. 'if' (adapté à ' if') → logprob: -5.0210280418396
    4. '   ' → logprob: -5.8960280418396
    5. ' min' → logprob: -8.646027565002441
    6. 'def' → logprob: -8.771027565002441
    7. 'd' → logprob: -9.396027565002441
    8. 'dist' → logprob: -9.521027565002441
    9. '       ' → logprob: -10.396027565002441
    10. 'max' → logprob: -10.521027565002441

Token 1437: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000318065780447796
    2. ' self' → logprob: -8.12531852722168
    3. '   ' → logprob: -11.00031852722168
    4. '(self' → logprob: -13.37531852722168
    5. 'not' → logprob: -13.75031852722168
    6. '
' → logprob: -13.75031852722168
    7. '	self' → logprob: -14.50031852722168
    8. ' ' → logprob: -14.62531852722168
    9. '    ' → logprob: -16.12531852722168
    10. '  ' → logprob: -16.12531852722168

Token 1438: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00046630011638626456
    2. ' self' → logprob: -7.750466346740723
    3. '(self' → logprob: -10.375466346740723
    4. '
' → logprob: -13.375466346740723
    5. '       ' → logprob: -13.875466346740723
    6. '   ' → logprob: -14.250466346740723
    7. '	self' → logprob: -15.000466346740723
    8. 's' → logprob: -15.875466346740723
    9. '[self' → logprob: -15.875466346740723
    10. '(' → logprob: -16.000465393066406

Token 1439: '.is' (ID: 3109)
  Prédit: '.inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0003096023283433169
    2. ' .' → logprob: -9.375309944152832
    3. '.' → logprob: -10.125309944152832
    4. 'inter' → logprob: -10.250309944152832
    5. '_.' → logprob: -10.250309944152832
    6. '().' → logprob: -10.375309944152832
    7. '..' → logprob: -10.625309944152832
    8. '].' → logprob: -11.250309944152832
    9. ').' → logprob: -11.375309944152832
    10. '__.' → logprob: -11.500309944152832

Token 1440: '_parallel' (ID: 152364)
  Prédit: '_parallel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.0405709370970726
    2. 'parallel' → logprob: -3.7905709743499756
    3. '_inter' → logprob: -4.4155707359313965
    4. 'Parallel' → logprob: -6.0405707359313965
    5. 'inter' → logprob: -6.4155707359313965
    6. 'other' → logprob: -8.790571212768555
    7. 's' → logprob: -8.915571212768555
    8. ' parallel' → logprob: -9.290571212768555
    9. 'orth' → logprob: -9.290571212768555
    10. 'self' → logprob: -9.540571212768555

Token 1441: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: 0.0
    2. 'other' → logprob: -17.25
    3. '(
' → logprob: -19.0
    4. ' (' → logprob: -19.0
    5. '(' → logprob: -19.25
    6. '((' → logprob: -19.5
    7. '(self' → logprob: -19.75
    8. '(ob' → logprob: -20.75
    9. '(or' → logprob: -20.75
    10. '(old' → logprob: -21.125

Token 1442: ')' (ID: 8)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.31116756796836853
    2. '():' → logprob: -1.686167597770691
    3. '()' → logprob: -2.6861674785614014
    4. '()):
' → logprob: -4.3111677169799805
    5. '):
' → logprob: -8.18616771697998
    6. '():
' → logprob: -9.06116771697998
    7. '())' → logprob: -9.81116771697998
    8. '):' → logprob: -10.06116771697998
    9. '   ' → logprob: -10.56116771697998
    10. ':' → logprob: -10.68616771697998

Token 1443: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6510534882545471
    2. ':' → logprob: -1.0260534286499023
    3. '       ' → logprob: -2.4010534286499023
    4. ' and' → logprob: -3.7760534286499023
    5. ' or' → logprob: -6.526053428649902
    6. '           ' → logprob: -6.526053428649902
    7. '():
' → logprob: -6.526053428649902
    8. 'and' → logprob: -7.151053428649902
    9. '   ' → logprob: -7.526053428649902
    10. '(' → logprob: -9.026053428649902

Token 1444: ' \
' (ID: 6814)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00764354458078742
    2. '       ' → logprob: -5.507643699645996
    3. ' self' → logprob: -6.132643699645996
    4. '           ' → logprob: -7.257643699645996
    5. '   ' → logprob: -7.632643699645996
    6. 'not' → logprob: -8.757643699645996
    7. '(self' → logprob: -11.757643699645996
    8. '	self' → logprob: -12.132643699645996
    9. ' not' → logprob: -12.257643699645996
    10. '
' → logprob: -12.382643699645996

Token 1445: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06698082387447357
    2. ' self' → logprob: -3.0669808387756348
    3. '       ' → logprob: -4.566980838775635
    4. '(self' → logprob: -6.316980838775635
    5. 'not' → logprob: -6.441980838775635
    6. ' not' → logprob: -6.816980838775635
    7. ' (' → logprob: -7.191980838775635
    8. '   ' → logprob: -7.316980838775635
    9. '           ' → logprob: -7.316980838775635
    10. '(
' → logprob: -7.316980838775635

Token 1446: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0005191935342736542
    2. ' self' → logprob: -7.750519275665283
    3. '   ' → logprob: -10.375518798828125
    4. 'not' → logprob: -11.125518798828125
    5. '       ' → logprob: -11.375518798828125
    6. '           ' → logprob: -11.375518798828125
    7. '(self' → logprob: -11.750518798828125
    8. '
' → logprob: -12.875518798828125
    9. '\
' → logprob: -13.375518798828125
    10. '    ' → logprob: -13.375518798828125

Token 1447: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0003983760252594948
    2. ' .' → logprob: -8.750398635864258
    3. '.' → logprob: -9.250398635864258
    4. '   ' → logprob: -9.625398635864258
    5. '().' → logprob: -9.875398635864258
    6. 'inter' → logprob: -11.250398635864258
    7. '_.' → logprob: -13.375398635864258
    8. '..' → logprob: -13.375398635864258
    9. '.is' → logprob: -13.500398635864258
    10. ').' → logprob: -13.625398635864258

Token 1448: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.00013786651834379882
    2. 's' → logprob: -9.875138282775879
    3. 'section' → logprob: -10.625138282775879
    4. 'se' → logprob: -11.500138282775879
    5. 'ects' → logprob: -11.500138282775879
    6. '```' → logprob: -11.500138282775879
    7. 'sect' → logprob: -12.000138282775879
    8. 'sets' → logprob: -12.125138282775879
    9. '   ' → logprob: -12.250138282775879
    10. '
' → logprob: -12.625138282775879

Token 1449: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -1.2664456789934775e-06
    2. 'other' → logprob: -13.750000953674316
    3. ' (' → logprob: -16.625001907348633
    4. '(' → logprob: -18.125001907348633
    5. ' other' → logprob: -18.750001907348633
    6. '(
' → logprob: -19.750001907348633
    7. '           ' → logprob: -21.000001907348633
    8. '       ' → logprob: -21.000001907348633
    9. '   ' → logprob: -21.500001907348633
    10. '(self' → logprob: -21.750001907348633

Token 1450: '):
' (ID: 1883)
  Prédit: '():
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.005780427251011133
    2. '():' → logprob: -5.255780220031738
    3. '()' → logprob: -8.505780220031738
    4. ':
' → logprob: -8.755780220031738
    5. '       ' → logprob: -8.880780220031738
    6. ':' → logprob: -11.130780220031738
    7. '()):
' → logprob: -11.505780220031738
    8. '():
' → logprob: -11.630780220031738
    9. '):
' → logprob: -12.130780220031738
    10. '   ' → logprob: -13.130780220031738

Token 1451: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6388741135597229
    2. '       ' → logprob: -1.3888740539550781
    3. 'return' → logprob: -1.5138740539550781
    4. ' return' → logprob: -6.138874053955078
    5. '0' → logprob: -8.138874053955078
    6. '   ' → logprob: -9.138874053955078
    7. '	return' → logprob: -9.263874053955078
    8. '
' → logprob: -10.888874053955078
    9. ':return' → logprob: -11.763874053955078
    10. '```' → logprob: -11.888874053955078

Token 1452: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22127912938594818
    2. 'return' (adapté à ' return') → logprob: -1.7212791442871094
    3. '           ' → logprob: -3.9712791442871094
    4. ' return' → logprob: -7.346279144287109
    5. ' ' → logprob: -9.22127914428711
    6. '   ' → logprob: -9.84627914428711
    7. '               ' → logprob: -10.97127914428711
    8. '=' → logprob: -13.97127914428711
    9. '                   ' → logprob: -14.09627914428711
    10. '	return' → logprob: -14.09627914428711

Token 1453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.375001907348633
    4. '           ' → logprob: -19.750001907348633
    5. '1' → logprob: -20.500001907348633
    6. '       ' → logprob: -21.125001907348633
    7. 'float' → logprob: -21.250001907348633
    8. '  ' → logprob: -21.750001907348633
    9. '         ' → logprob: -22.000001907348633
    10. '.' → logprob: -22.125001907348633

Token 1454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '   ' → logprob: -14.875004768371582
    4. '           ' → logprob: -16.500003814697266
    5. '       ' → logprob: -17.500003814697266
    6. '         ' → logprob: -18.625003814697266
    7. 'float' → logprob: -18.625003814697266
    8. '               ' → logprob: -18.875003814697266
    9. '```' → logprob: -18.875003814697266
    10. '.' → logprob: -19.125003814697266

Token 1455: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015285481931641698
    2. '       ' → logprob: -6.501528739929199
    3. '
' → logprob: -10.6265287399292
    4. '        
' → logprob: -14.5015287399292
    5. '.
' → logprob: -14.7515287399292
    6. '
' → logprob: -15.2515287399292
    7. '[' → logprob: -15.5015287399292
    8. '0' → logprob: -15.7515287399292
    9. '   ' → logprob: -16.251527786254883
    10. '(' → logprob: -16.251527786254883

Token 1456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001350710866972804
    2. '
' → logprob: -6.6263508796691895
    3. '        
' → logprob: -11.501350402832031
    4. '   ' → logprob: -12.501350402832031
    5. 'return' → logprob: -13.001350402832031
    6. '           ' → logprob: -13.001350402832031
    7. '
' → logprob: -13.251350402832031
    8. '    
' → logprob: -13.751350402832031
    9. '	' → logprob: -14.501350402832031
    10. '```' → logprob: -14.626350402832031

Token 1457: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08822496980428696
    2. '       ' → logprob: -3.2132248878479004
    3. '   ' → logprob: -3.9632248878479004
    4. 'd' → logprob: -4.0882248878479
    5. 'a' → logprob: -5.4632248878479
    6. 'r' → logprob: -6.5882248878479
    7. ' return' → logprob: -7.0882248878479
    8. 'res' → logprob: -7.5882248878479
    9. 'dist' → logprob: -8.213225364685059
    10. 's' → logprob: -8.588225364685059

Token 1458: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21343936026096344
    2. ':
' → logprob: -2.213439464569092
    3. '       ' → logprob: -2.713439464569092
    4. ':' → logprob: -4.213439464569092
    5. ' if' → logprob: -7.838439464569092
    6. '   ' → logprob: -8.463438987731934
    7. ',' → logprob: -8.588438987731934
    8. '        ' → logprob: -8.713438987731934
    9. ' :
' → logprob: -8.838438987731934
    10. '[' → logprob: -9.588438987731934

Token 1459: '           ' (ID: 352)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004555203951895237
    2. '           ' → logprob: -6.1295552253723145
    3. ' min' → logprob: -6.3795552253723145
    4. '   ' → logprob: -8.004554748535156
    5. 'return' → logprob: -8.254554748535156
    6. '	min' → logprob: -9.879554748535156
    7. '       ' → logprob: -11.004554748535156
    8. '
' → logprob: -12.879554748535156
    9. '```' → logprob: -13.504554748535156
    10. ' ' → logprob: -13.754554748535156

Token 1460: ' return' (ID: 622)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04790693148970604
    2. 'return' (adapté à ' return') → logprob: -3.1729068756103516
    3. ' min' → logprob: -5.547906875610352
    4. '           ' → logprob: -7.047906875610352
    5. ' return' → logprob: -9.922906875610352
    6. '   ' → logprob: -10.047906875610352
    7. '       ' → logprob: -10.672906875610352
    8. '	min' → logprob: -11.922906875610352
    9. '
' → logprob: -12.797906875610352
    10. '(min' → logprob: -13.297906875610352

Token 1461: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.4498052223643754e-05
    2. ' min' → logprob: -11.250014305114746
    3. '	min' → logprob: -13.875014305114746
    4. '   ' → logprob: -14.875014305114746
    5. 'minimum' → logprob: -16.875015258789062
    6. '           ' → logprob: -17.375015258789062
    7. '\
' → logprob: -18.250015258789062
    8. '
' → logprob: -18.625015258789062
    9. 'float' → logprob: -18.875015258789062
    10. 'self' → logprob: -19.375015258789062

Token 1462: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.6416821479797363
    2. '(self' → logprob: -0.8916821479797363
    3. '(' → logprob: -3.0166821479797363
    4. '([
' → logprob: -4.391682147979736
    5. '([' → logprob: -6.141682147979736
    6. '[
' → logprob: -10.016681671142578
    7. '((' → logprob: -10.266681671142578
    8. '(min' → logprob: -10.266681671142578
    9. '(
' → logprob: -11.516681671142578
    10. 'self' → logprob: -12.516681671142578

Token 1463: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029220154508948326
    2. '           ' → logprob: -4.029220104217529
    3. '[
' → logprob: -4.654220104217529
    4. ' self' → logprob: -7.779220104217529
    5. '(
' → logprob: -8.029220581054688
    6. '   ' → logprob: -8.404220581054688
    7. '[' → logprob: -8.404220581054688
    8. '               ' → logprob: -8.779220581054688
    9. '(self' → logprob: -9.279220581054688
    10. '[self' → logprob: -10.529220581054688

Token 1464: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0043924907222390175
    2. '[
' → logprob: -5.504392623901367
    3. '[' → logprob: -8.754392623901367
    4. '[self' → logprob: -9.379392623901367
    5. ' self' → logprob: -10.879392623901367
    6. '           ' → logprob: -10.879392623901367
    7. '   ' → logprob: -11.004392623901367
    8. '               ' → logprob: -11.379392623901367
    9. '(self' → logprob: -12.504392623901367
    10. '	self' → logprob: -14.129392623901367

Token 1465: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.04927902668714523
    2. '.distance' → logprob: -3.049278974533081
    3. 'distance' → logprob: -7.67427921295166
    4. 'p' → logprob: -9.17427921295166
    5. '           ' → logprob: -10.17427921295166
    6. '   ' → logprob: -10.29927921295166
    7. '       ' → logprob: -10.42427921295166
    8. '.length' → logprob: -11.42427921295166
    9. 'Distance' → logprob: -13.04927921295166
    10. '.' → logprob: -13.29927921295166

Token 1466: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.73314929776825e-05
    2. 'distance' → logprob: -9.37508773803711
    3. ' distance' → logprob: -14.12508773803711
    4. '.distance' → logprob: -14.62508773803711
    5. 'Distance' → logprob: -15.37508773803711
    6. 'dist' → logprob: -15.37508773803711
    7. '```' → logprob: -16.00008773803711
    8. '2' → logprob: -16.12508773803711
    9. 'oints' → logprob: -16.37508773803711
    10. '_distance' → logprob: -16.56258773803711

Token 1467: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -1.2664456789934775e-06
    2. 'distance' → logprob: -13.625000953674316
    3. ' .' → logprob: -16.875001907348633
    4. '(distance' → logprob: -17.875001907348633
    5. '.dist' → logprob: -19.000001907348633
    6. '.' → logprob: -19.375001907348633
    7. ' distance' → logprob: -19.375001907348633
    8. '.Distance' → logprob: -19.375001907348633
    9. ').' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.000001907348633

Token 1468: '_to' (ID: 5089)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(other' → logprob: -4.5491004129871726e-05
    2. 'other' → logprob: -10.000045776367188
    3. ' other' → logprob: -19.375045776367188
    4. '(' → logprob: -19.500045776367188
    5. 'Other' → logprob: -20.250045776367188
    6. 'to' → logprob: -22.500045776367188
    7. '_other' → logprob: -22.500045776367188
    8. '.other' → logprob: -22.875045776367188
    9. '   ' → logprob: -23.125045776367188
    10. '(
' → logprob: -23.250045776367188

Token 1469: '_segment' (ID: 71041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.5763599276542664
    2. '_segment' → logprob: -0.8263599276542664
    3. 'point' → logprob: -8.701359748840332
    4. '_point' → logprob: -8.701359748840332
    5. 'other' → logprob: -10.201359748840332
    6. 'Segment' → logprob: -10.451359748840332
    7. '(other' → logprob: -11.451359748840332
    8. 'self' → logprob: -12.201359748840332
    9. 'seg' → logprob: -12.326359748840332
    10. '(segment' → logprob: -14.451359748840332

Token 1470: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.014168326742947102
    2. 'other' → logprob: -4.2641682624816895
    3. '(' → logprob: -13.139168739318848
    4. ' other' → logprob: -13.264168739318848
    5. '(S' → logprob: -14.764168739318848
    6. 'Segment' → logprob: -14.889168739318848
    7. '(Point' → logprob: -16.51416778564453
    8. '   ' → logprob: -16.51416778564453
    9. ' (' → logprob: -16.76416778564453
    10. 'others' → logprob: -17.26416778564453

Token 1471: '),
' (ID: 2313)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21219250559806824
    2. '),' → logprob: -2.3371925354003906
    3. '),
' → logprob: -2.4621925354003906
    4. 'self' → logprob: -5.962192535400391
    5. '(' → logprob: -6.837192535400391
    6. '       ' → logprob: -6.837192535400391
    7. '()),
' → logprob: -6.837192535400391
    8. ')' → logprob: -6.962192535400391
    9. '   ' → logprob: -7.212192535400391
    10. '(other' → logprob: -7.337192535400391

Token 1472: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15461857616901398
    2. '               ' → logprob: -2.529618501663208
    3. ' self' → logprob: -3.279618501663208
    4. '           ' → logprob: -3.654618501663208
    5. '       ' → logprob: -10.529618263244629
    6. ' ' → logprob: -11.779618263244629
    7. '   ' → logprob: -12.154618263244629
    8. '	self' → logprob: -12.279618263244629
    9. '              ' → logprob: -12.654618263244629
    10. ' ' → logprob: -13.404618263244629

Token 1473: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04768748953938484
    2. '               ' → logprob: -3.422687530517578
    3. ' self' → logprob: -4.297687530517578
    4. '           ' → logprob: -8.047687530517578
    5. ' ' → logprob: -11.797687530517578
    6. ' ' → logprob: -12.547687530517578
    7. '       ' → logprob: -12.672687530517578
    8. '   ' → logprob: -12.922687530517578
    9. '	self' → logprob: -12.922687530517578
    10. '                   ' → logprob: -13.547687530517578

Token 1474: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0040995352901518345
    2. 'p' → logprob: -5.504099369049072
    3. ' p' → logprob: -12.25409984588623
    4. '   ' → logprob: -12.75409984588623
    5. ' .' → logprob: -12.75409984588623
    6. '.' → logprob: -13.00409984588623
    7. '       ' → logprob: -13.37909984588623
    8. 'self' → logprob: -13.50409984588623
    9. '           ' → logprob: -13.87909984588623
    10. 's' → logprob: -14.25409984588623

Token 1475: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. '1' → logprob: -13.25000286102295
    3. 'p' → logprob: -14.37500286102295
    4. 'self' → logprob: -15.37500286102295
    5. '```' → logprob: -15.87500286102295
    6. '.p' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '``' → logprob: -17.500003814697266
    9. '
' → logprob: -17.750003814697266
    10. '２' → logprob: -18.062503814697266

Token 1476: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -2.1008713702030946e-06
    2. 'distance' → logprob: -13.375001907348633
    3. '.' → logprob: -15.500001907348633
    4. '.Distance' → logprob: -16.500001907348633
    5. ' .' → logprob: -16.750001907348633
    6. '.point' → logprob: -17.875001907348633
    7. ' distance' → logprob: -17.875001907348633
    8. '.dist' → logprob: -18.000001907348633
    9. '(distance' → logprob: -18.750001907348633
    10. '.points' → logprob: -18.750001907348633

Token 1477: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -3.404745439183898e-05
    2. '_distance' → logprob: -10.75003433227539
    3. 'distance' → logprob: -12.37503433227539
    4. 'To' → logprob: -13.00003433227539
    5. 'to' → logprob: -13.12503433227539
    6. '.distance' → logprob: -13.75003433227539
    7. '(' → logprob: -14.00003433227539
    8. '   ' → logprob: -14.75003433227539
    9. '(other' → logprob: -14.75003433227539
    10. 'segment' → logprob: -15.25003433227539

Token 1478: '_segment' (ID: 71041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -9.829823102336377e-05
    2. '_segment' → logprob: -9.25009822845459
    3. ' segment' → logprob: -13.87509822845459
    4. 'Segment' → logprob: -14.00009822845459
    5. 'other' → logprob: -15.37509822845459
    6. 'point' → logprob: -16.625099182128906
    7. 'self' → logprob: -17.250099182128906
    8. '
' → logprob: -17.500099182128906
    9. 'seg' → logprob: -18.125099182128906
    10. '(segment' → logprob: -18.875099182128906

Token 1479: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.023274246603250504
    2. 'other' → logprob: -3.7732741832733154
    3. ' other' → logprob: -10.523274421691895
    4. '(
' → logprob: -13.648274421691895
    5. '.other' → logprob: -14.523274421691895
    6. '(' → logprob: -15.773274421691895
    7. '               ' → logprob: -18.148273468017578
    8. 'others' → logprob: -18.398273468017578
    9. '           ' → logprob: -18.523273468017578
    10. ' (' → logprob: -19.148273468017578

Token 1480: '),
' (ID: 2313)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1897481232881546
    2. ',
' → logprob: -2.6897480487823486
    3. '(other' → logprob: -2.8147480487823486
    4. '           ' → logprob: -3.8147480487823486
    5. ',' → logprob: -4.439748287200928
    6. '),
' → logprob: -4.939748287200928
    7. 'other' → logprob: -6.564748287200928
    8. '),' → logprob: -6.939748287200928
    9. ')' → logprob: -7.439748287200928
    10. '                   ' → logprob: -8.43974781036377

Token 1481: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05177910625934601
    2. 'other' → logprob: -3.05177903175354
    3. ' other' → logprob: -5.801779270172119
    4. 'self' → logprob: -8.801778793334961
    5. ' self' → logprob: -11.801778793334961
    6. 'Other' → logprob: -12.301778793334961
    7. '(other' → logprob: -13.926778793334961
    8. '           ' → logprob: -14.926778793334961
    9. '			' → logprob: -15.551778793334961
    10. ' ' → logprob: -16.55177879333496

Token 1482: ' other' (ID: 1273)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01229441910982132
    2. '               ' → logprob: -4.762294292449951
    3. 'other' (adapté à ' other') → logprob: -6.137294292449951
    4. ' self' → logprob: -6.512294292449951
    5. '           ' → logprob: -11.01229476928711
    6. ' other' → logprob: -11.63729476928711
    7. '       ' → logprob: -14.01229476928711
    8. ' ' → logprob: -15.51229476928711
    9. '	self' → logprob: -15.51229476928711
    10. '                   ' → logprob: -15.76229476928711

Token 1483: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -7.73183855926618e-05
    2. '       ' → logprob: -10.125077247619629
    3. 'p' → logprob: -11.375077247619629
    4. '.' → logprob: -11.500077247619629
    5. '           ' → logprob: -11.625077247619629
    6. ' .' → logprob: -12.500077247619629
    7. '               ' → logprob: -14.000077247619629
    8. ').' → logprob: -14.250077247619629
    9. '   ' → logprob: -14.750077247619629
    10. '```' → logprob: -15.375077247619629

Token 1484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.8497312895488e-05
    2. 'p' → logprob: -9.875068664550781
    3. '```' → logprob: -12.000068664550781
    4. '.p' → logprob: -12.375068664550781
    5. '2' → logprob: -13.000068664550781
    6. 'oint' → logprob: -13.125068664550781
    7. 'oints' → logprob: -13.750068664550781
    8. '   ' → logprob: -15.250068664550781
    9. '``' → logprob: -15.750068664550781
    10. ' ' → logprob: -15.875068664550781

Token 1485: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -8.65707261255011e-06
    2. 'distance' → logprob: -12.000008583068848
    3. '.' → logprob: -13.250008583068848
    4. ' .' → logprob: -14.500008583068848
    5. '.Distance' → logprob: -16.375009536743164
    6. ' distance' → logprob: -16.625009536743164
    7. '   ' → logprob: -18.125009536743164
    8. ').' → logprob: -18.250009536743164
    9. '(distance' → logprob: -18.375009536743164
    10. '       ' → logprob: -18.500009536743164

Token 1486: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0029405017849057913
    2. 'to' → logprob: -5.877940654754639
    3. 'To' → logprob: -9.00294017791748
    4. 'self' → logprob: -12.12794017791748
    5. '(self' → logprob: -12.12794017791748
    6. '```' → logprob: -14.12794017791748
    7. '   ' → logprob: -15.25294017791748
    8. '(' → logprob: -15.25294017791748
    9. ' to' → logprob: -15.75294017791748
    10. '       ' → logprob: -16.877941131591797

Token 1487: '_segment' (ID: 71041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.001929228543303907
    2. '_segment' → logprob: -6.25192928314209
    3. ' segment' → logprob: -14.62692928314209
    4. 'self' → logprob: -16.126928329467773
    5. 'Segment' → logprob: -17.251928329467773
    6. '(segment' → logprob: -18.251928329467773
    7. '.segment' → logprob: -18.376928329467773
    8. 'seg' → logprob: -19.126928329467773
    9. 'point' → logprob: -19.376928329467773
    10. 'egment' → logprob: -20.001928329467773

Token 1488: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003178901970386505
    2. 'self' → logprob: -5.75317907333374
    3. '       ' → logprob: -14.253178596496582
    4. '(' → logprob: -15.878178596496582
    5. '[self' → logprob: -15.878178596496582
    6. ' self' → logprob: -16.0031795501709
    7. '           ' → logprob: -16.0031795501709
    8. '               ' → logprob: -17.1281795501709
    9. 'other' → logprob: -17.7531795501709
    10. '	self' → logprob: -17.8781795501709

Token 1489: '),
' (ID: 2313)
  Prédit: ',
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',
' → logprob: -0.9342400431632996
    2. ',' → logprob: -1.1842401027679443
    3. '),
' → logprob: -1.6842401027679443
    4. '               ' → logprob: -2.4342401027679443
    5. '),' → logprob: -3.9342401027679443
    6. '           ' → logprob: -4.934239864349365
    7. ')' → logprob: -7.059239864349365
    8. '              ' → logprob: -9.434240341186523
    9. '       ' → logprob: -10.059240341186523
    10. ')
' → logprob: -10.059240341186523

Token 1490: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1623348444700241
    2. 'other' → logprob: -1.9123347997665405
    3. ' other' → logprob: -6.16233491897583
    4. '(other' → logprob: -14.662334442138672
    5. '           ' → logprob: -15.412334442138672
    6. '              ' → logprob: -15.537334442138672
    7. '                   ' → logprob: -16.787334442138672
    8. '                ' → logprob: -16.912334442138672
    9. '.other' → logprob: -16.912334442138672
    10. '       ' → logprob: -17.162334442138672

Token 1491: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' (adapté à ' other') → logprob: -0.16023112833499908
    2. ' other' → logprob: -1.910231113433838
    3. '               ' → logprob: -11.910231590270996
    4. '(other' → logprob: -15.910231590270996
    5. '           ' → logprob: -16.03523063659668
    6. '.other' → logprob: -17.28523063659668
    7. '       ' → logprob: -19.66023063659668
    8. 'Other' → logprob: -19.91023063659668
    9. '              ' → logprob: -20.28523063659668
    10. '   ' → logprob: -20.53523063659668

Token 1492: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -9.198043699143454e-05
    2. 'p' → logprob: -9.375091552734375
    3. ' .' → logprob: -13.250091552734375
    4. '   ' → logprob: -13.625091552734375
    5. '```' → logprob: -14.000091552734375
    6. '.' → logprob: -14.125091552734375
    7. '
' → logprob: -14.375091552734375
    8. ' ' → logprob: -14.500091552734375
    9. '<p' → logprob: -15.750091552734375
    10. 'This' → logprob: -16.125091552734375

Token 1493: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.742448022123426e-05
    2. 'p' → logprob: -9.625067710876465
    3. '.p' → logprob: -14.375067710876465
    4. '1' → logprob: -15.125067710876465
    5. '
' → logprob: -15.625067710876465
    6. '```' → logprob: -16.37506675720215
    7. '２' → logprob: -17.00006675720215
    8. '<p' → logprob: -17.62506675720215
    9. '۲' → logprob: -17.87506675720215
    10. '_p' → logprob: -17.87506675720215

Token 1494: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.00020413640595506877
    2. 'distance' → logprob: -8.500204086303711
    3. ' distance' → logprob: -14.875204086303711
    4. ' .' → logprob: -16.25020408630371
    5. '(distance' → logprob: -16.87520408630371
    6. '.' → logprob: -17.37520408630371
    7. 'Distance' → logprob: -17.62520408630371
    8. '   ' → logprob: -17.62520408630371
    9. '.Distance' → logprob: -17.75020408630371
    10. ').' → logprob: -18.50020408630371

Token 1495: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.749814019713085e-06
    2. 'To' → logprob: -12.500006675720215
    3. '   ' → logprob: -14.000006675720215
    4. 'distance' → logprob: -14.625006675720215
    5. '_distance' → logprob: -14.875006675720215
    6. 'to' → logprob: -15.000006675720215
    7. '.to' → logprob: -15.375006675720215
    8. '.distance' → logprob: -15.750006675720215
    9. 'segment' → logprob: -16.00000762939453
    10. '       ' → logprob: -16.50000762939453

Token 1496: '_segment' (ID: 71041)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.004246623255312443
    2. 'self' → logprob: -5.504246711730957
    3. '_segment' → logprob: -8.754246711730957
    4. 'Segment' → logprob: -11.754246711730957
    5. ' segment' → logprob: -13.129246711730957
    6. 'seg' → logprob: -15.379246711730957
    7. '
' → logprob: -16.12924575805664
    8. '(segment' → logprob: -17.25424575805664
    9. '_point' → logprob: -17.50424575805664
    10. '(self' → logprob: -17.50424575805664

Token 1497: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005538671393878758
    2. 'self' → logprob: -7.500554084777832
    3. '(' → logprob: -14.375554084777832
    4. ' self' → logprob: -15.625554084777832
    5. '(se' → logprob: -17.000553131103516
    6. '(s' → logprob: -17.500553131103516
    7. '(
' → logprob: -17.625553131103516
    8. '       ' → logprob: -17.875553131103516
    9. '	self' → logprob: -18.125553131103516
    10. '               ' → logprob: -18.750553131103516

Token 1498: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10201180726289749
    2. '           ' → logprob: -2.3520119190216064
    3. '       ' → logprob: -6.852011680603027
    4. '))' → logprob: -8.102011680603027
    5. ')
' → logprob: -8.352011680603027
    6. '),' → logprob: -8.977011680603027
    7. '               ' → logprob: -9.977011680603027
    8. '   ' → logprob: -10.977011680603027
    9. '),
' → logprob: -12.227011680603027
    10. ')))' → logprob: -12.977011680603027

Token 1499: 'Line' (ID: 3665)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1500: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1334463208913803
    2. 'Segment' → logprob: -2.883446216583252
    3. '=' → logprob: -3.633446216583252
    4. '<|end|>' → logprob: -4.133446216583252
    5. ':' → logprob: -5.133446216583252
    6. '(' → logprob: -5.258446216583252
    7. 'class' → logprob: -5.383446216583252
    8. '(Line' → logprob: -6.508446216583252
    9. 'def' → logprob: -6.758446216583252
    10. ' ' → logprob: -7.008446216583252

Token 1501: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.00025228000595234334
    2. 'Line' → logprob: -8.625252723693848
    3. 'List' → logprob: -10.000252723693848
    4. 'Point' → logprob: -11.500252723693848
    5. ' Segment' → logprob: -11.625252723693848
    6. 'Vector' → logprob: -11.875252723693848
    7. '   ' → logprob: -15.125252723693848
    8. 'Tuple' → logprob: -15.500252723693848
    9. 'list' → logprob: -15.500252723693848
    10. 'Seg' → logprob: -15.750252723693848

Token 1502: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9798164963722229
    2. '<|end|>' → logprob: -0.9798164963722229
    3. 'def' → logprob: -1.4798164367675781
    4. '

' → logprob: -4.354816436767578
    5. 'class' → logprob: -5.729816436767578
    6. '#' → logprob: -6.229816436767578
    7. '<|end|>' → logprob: -6.729816436767578
    8. ')' → logprob: -7.354816436767578
    9. 'Point' → logprob: -8.104816436767578
    10. '```' → logprob: -8.229816436767578

Token 1503: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12680041790008545
    2. '#' → logprob: -2.876800537109375
    3. '<|end|>' → logprob: -2.876800537109375
    4. '<|end|>' → logprob: -6.001800537109375
    5. ')' → logprob: -7.126800537109375
    6. '   ' → logprob: -7.501800537109375
    7. '
' → logprob: -7.876800537109375
    8. 'Point' → logprob: -8.126800537109375
    9. 'class' → logprob: -8.376800537109375
    10. '...' → logprob: -8.376800537109375

Token 1504: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.33211904764175415
    2. 'Polygon' → logprob: -1.3321189880371094
    3. 'Line' → logprob: -4.207118988037109
    4. 'Vector' → logprob: -6.082118988037109
    5. 'Triangle' → logprob: -7.332118988037109
    6. ' Circle' → logprob: -8.08211898803711
    7. 'Polyline' → logprob: -8.20711898803711
    8. ' Polygon' → logprob: -9.08211898803711
    9. 'Rectangle' → logprob: -9.83211898803711
    10. 'Ray' → logprob: -10.33211898803711

Token 1505: ':

' (ID: 1402)
  Prédit: ':

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':

' → logprob: -0.20188231766223907
    2. ':' → logprob: -1.7018823623657227
    3. ':
' → logprob: -7.701882362365723
    4. ':

' → logprob: -11.701882362365723
    5. '(object' → logprob: -12.451882362365723
    6. '(' → logprob: -13.326882362365723
    7. '():

' → logprob: -13.451882362365723
    8. '):

' → logprob: -14.576882362365723
    9. ' :

' → logprob: -15.201882362365723
    10. ':


' → logprob: -15.326882362365723

Token 1506: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03605794906616211
    2. '   ' → logprob: -3.411057949066162
    3. 'def' → logprob: -6.911057949066162
    4. '    
' → logprob: -7.286057949066162
    5. 'class' → logprob: -7.286057949066162
    6. '```' → logprob: -10.78605842590332
    7. '

' → logprob: -11.66105842590332
    8. ' def' → logprob: -12.53605842590332
    9. '
' → logprob: -13.03605842590332
    10. '  
' → logprob: -13.16105842590332

Token 1507: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0021459776908159256
    2. '
' → logprob: -6.377145767211914
    3. '   ' → logprob: -8.252145767211914
    4. '__' → logprob: -9.252145767211914
    5. ' def' → logprob: -10.127145767211914
    6. 'class' → logprob: -10.252145767211914
    7. '    
' → logprob: -12.627145767211914
    8. '	def' → logprob: -12.877145767211914
    9. '```' → logprob: -13.127145767211914
    10. '

' → logprob: -13.502145767211914

Token 1508: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0014986719470471144
    2. ' __' → logprob: -7.001498699188232
    3. 'init' → logprob: -8.126498222351074
    4. 'def' → logprob: -8.376498222351074
    5. '```' → logprob: -10.751498222351074
    6. '___' → logprob: -10.876498222351074
    7. '_init' → logprob: -11.376498222351074
    8. '.__' → logprob: -12.751498222351074
    9. 'staticmethod' → logprob: -13.376498222351074
    10. 'classmethod' → logprob: -13.376498222351074

Token 1509: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -17.125
    3. 'class' → logprob: -17.25
    4. 'def' → logprob: -17.625
    5. '_init' → logprob: -18.625
    6. '
' → logprob: -19.875
    7. '(init' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. '...' → logprob: -21.125
    10. 'repr' → logprob: -21.125

Token 1510: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0066444408148527145
    2. '__(' → logprob: -5.381644248962402
    3. '(' → logprob: -6.256644248962402
    4. ' (' → logprob: -10.006644248962402
    5. 'self' → logprob: -11.131644248962402
    6. '(
' → logprob: -11.381644248962402
    7. '   ' → logprob: -11.506644248962402
    8. '__(
' → logprob: -12.256644248962402
    9. '       ' → logprob: -12.381644248962402
    10. ',' → logprob: -12.381644248962402

Token 1511: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.274932143744081e-05
    2. ' self' → logprob: -10.125042915344238
    3. ',' → logprob: -13.625042915344238
    4. '(self' → logprob: -14.000042915344238
    5. '
' → logprob: -15.625042915344238
    6. '...' → logprob: -15.875042915344238
    7. '       ' → logprob: -16.125041961669922
    8. '   ' → logprob: -16.625041961669922
    9. 'def' → logprob: -17.375041961669922
    10. '0' → logprob: -17.875041961669922

Token 1512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030341025441884995
    2. 'self' → logprob: -3.7803409099578857
    3. '(self' → logprob: -5.280341148376465
    4. ' (' → logprob: -7.155341148376465
    5. '(' → logprob: -7.155341148376465
    6. ' self' → logprob: -8.530341148376465
    7. '   ' → logprob: -9.780341148376465
    8. ',
' → logprob: -9.780341148376465
    9. '       ' → logprob: -9.905341148376465
    10. 's' → logprob: -11.155341148376465

Token 1513: ' c' (ID: 274)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.5790695548057556
    2. 'c' → logprob: -0.8290695548057556
    3. 'self' → logprob: -6.7040696144104
    4. 'o' → logprob: -7.2040696144104
    5. ' center' → logprob: -7.3290696144104
    6. 'p' → logprob: -7.9540696144104
    7. '   ' → logprob: -10.204069137573242
    8. ' c' → logprob: -10.454069137573242
    9. 'x' → logprob: -11.204069137573242
    10. 'centre' → logprob: -11.329069137573242

Token 1514: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022392053506337106
    2. ',' → logprob: -8.875224113464355
    3. '=' → logprob: -10.000224113464355
    4. 'enter' → logprob: -11.000224113464355
    5. '=None' → logprob: -11.375224113464355
    6. '   ' → logprob: -12.500224113464355
    7. ' =' → logprob: -13.375224113464355
    8. ' :' → logprob: -14.125224113464355
    9. '):' → logprob: -14.125224113464355
    10. '       ' → logprob: -14.375224113464355

Token 1515: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0009134899592027068
    2. ' Point' → logprob: -7.000913619995117
    3. '	Point' → logprob: -14.375913619995117
    4. 'None' → logprob: -14.625913619995117
    5. '_point' → logprob: -15.125913619995117
    6. '_Point' → logprob: -16.000913619995117
    7. '   ' → logprob: -16.125913619995117
    8. 'Center' → logprob: -16.375913619995117
    9. ')' → logprob: -16.500913619995117
    10. '<Point' → logprob: -16.875913619995117

Token 1516: '=None' (ID: 12783)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09824708104133606
    2. '=None' → logprob: -3.3482470512390137
    3. '=' → logprob: -3.4732470512390137
    4. ' =' → logprob: -3.5982470512390137
    5. ' ,' → logprob: -11.098247528076172
    6. '   ' → logprob: -12.223247528076172
    7. ')' → logprob: -12.348247528076172
    8. '       ' → logprob: -13.098247528076172
    9. ':' → logprob: -13.098247528076172
    10. '=[],' → logprob: -13.098247528076172

Token 1517: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.7689099018462e-05
    2. ' ,' → logprob: -9.37508773803711
    3. ',c' → logprob: -13.50008773803711
    4. '       ' → logprob: -14.62508773803711
    5. '   ' → logprob: -15.12508773803711
    6. ',
' → logprob: -15.50008773803711
    7. ')' → logprob: -16.37508773803711
    8. 'c' → logprob: -16.50008773803711
    9. ',p' → logprob: -16.75008773803711
    10. '‌,' → logprob: -16.87508773803711

Token 1518: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.827200897736475e-05
    2. ' r' → logprob: -9.500078201293945
    3. 'radius' → logprob: -12.875078201293945
    4. '	r' → logprob: -14.625078201293945
    5. '   ' → logprob: -15.250078201293945
    6. '    
' → logprob: -16.375078201293945
    7. '  ' → logprob: -16.750078201293945
    8. ' ' → logprob: -18.375078201293945
    9. ' radius' → logprob: -18.375078201293945
    10. '  
' → logprob: -19.000078201293945

Token 1519: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003466673369985074
    2. '=' → logprob: -8.250347137451172
    3. '=None' → logprob: -9.500347137451172
    4. '=float' → logprob: -12.125347137451172
    5. ')' → logprob: -13.625347137451172
    6. '0' → logprob: -13.875347137451172
    7. ' :' → logprob: -14.000347137451172
    8. '):' → logprob: -14.375347137451172
    9. '):
' → logprob: -15.000347137451172
    10. ' =' → logprob: -15.125347137451172

Token 1520: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6954613327980042
    2. 'float' → logprob: -0.6954613327980042
    3. ' float' → logprob: -6.195461273193359
    4. ' ' → logprob: -8.44546127319336
    5. '   ' → logprob: -10.69546127319336
    6. '1' → logprob: -11.82046127319336
    7. 'None' → logprob: -12.19546127319336
    8. '	float' → logprob: -12.32046127319336
    9. '(float' → logprob: -12.69546127319336
    10. '       ' → logprob: -12.94546127319336

Token 1521: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001753595657646656
    2. '=None' → logprob: -6.376753807067871
    3. ' =' → logprob: -10.626753807067871
    4. ')' → logprob: -10.751753807067871
    5. '):' → logprob: -12.876753807067871
    6. ':' → logprob: -12.876753807067871
    7. '):
' → logprob: -15.126753807067871
    8. '0' → logprob: -15.876753807067871
    9. ')=' → logprob: -16.001752853393555
    10. 'None' → logprob: -16.126752853393555

Token 1522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00019662656995933503
    2. ' ' → logprob: -8.75019645690918
    3. '1' → logprob: -10.25019645690918
    4. 'None' → logprob: -13.37519645690918
    5. ')' → logprob: -15.12519645690918
    6. 'float' → logprob: -15.37519645690918
    7. '   ' → logprob: -15.87519645690918
    8. '  ' → logprob: -16.00019645690918
    9. '=' → logprob: -16.12519645690918
    10. '
' → logprob: -16.37519645690918

Token 1523: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.292907877039397e-06
    2. '.)' → logprob: -13.12500286102295
    3. ')' → logprob: -14.25000286102295
    4. '.
' → logprob: -15.12500286102295
    5. '.):' → logprob: -15.12500286102295
    6. '.,' → logprob: -17.750003814697266
    7. '):
' → logprob: -17.875003814697266
    8. '):' → logprob: -18.250003814697266
    9. '0' → logprob: -18.500003814697266
    10. '.:' → logprob: -18.875003814697266

Token 1524: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -16.25
    4. '```' → logprob: -17.125
    5. ')' → logprob: -17.375
    6. 'float' → logprob: -17.875
    7. '.' → logprob: -18.25
    8. '  ' → logprob: -19.5
    9. '):
' → logprob: -20.375
    10. '5' → logprob: -20.625

Token 1525: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7388297915458679
    2. '):' → logprob: -0.7388297915458679
    3. ')' → logprob: -3.1138298511505127
    4. '):
' → logprob: -9.613829612731934
    5. ',' → logprob: -9.988829612731934
    6. ' ):' → logprob: -10.363829612731934
    7. '   ' → logprob: -10.488829612731934
    8. ' ):
' → logprob: -10.738829612731934
    9. ' )' → logprob: -11.238829612731934
    10. '):

' → logprob: -11.488829612731934

Token 1526: ' ->' (ID: 2747)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26835015416145325
    2. ':' → logprob: -1.6433501243591309
    3. '       ' → logprob: -3.268350124359131
    4. '):
' → logprob: -5.893350124359131
    5. '   ' → logprob: -7.143350124359131
    6. ',' → logprob: -8.268350601196289
    7. ' :
' → logprob: -10.018350601196289
    8. '():
' → logprob: -10.893350601196289
    9. ')' → logprob: -11.143350601196289
    10. ':
' → logprob: -11.643350601196289

Token 1527: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. '(None' → logprob: -18.62502098083496
    4. '_None' → logprob: -19.62502098083496
    5. '=None' → logprob: -20.50002098083496
    6. '   ' → logprob: -21.62502098083496
    7. ',None' → logprob: -21.75002098083496
    8. 'def' → logprob: -22.25002098083496
    9. 'void' → logprob: -22.50002098083496
    10. 'none' → logprob: -22.87502098083496

Token 1528: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15656475722789764
    2. ':' → logprob: -2.281564712524414
    3. '       ' → logprob: -3.156564712524414
    4. '):
' → logprob: -8.906564712524414
    5. '   ' → logprob: -10.031564712524414
    6. ',' → logprob: -11.281564712524414
    7. ':c' → logprob: -11.406564712524414
    8. ' :
' → logprob: -11.656564712524414
    9. '():
' → logprob: -12.656564712524414
    10. '{
' → logprob: -12.781564712524414

Token 1529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039039674447849393
    2. 'self' → logprob: -7.875390529632568
    3. ' self' → logprob: -12.12539005279541
    4. '   ' → logprob: -12.62539005279541
    5. '	' → logprob: -14.00039005279541
    6. '	self' → logprob: -14.50039005279541
    7. 'if' → logprob: -16.125391006469727
    8. '           ' → logprob: -17.375391006469727
    9. '	   ' → logprob: -17.375391006469727
    10. ' ' → logprob: -17.500391006469727

Token 1530: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.8351892473874614e-05
    2. '       ' → logprob: -10.000048637390137
    3. ' self' → logprob: -12.750048637390137
    4. '	self' → logprob: -18.00004768371582
    5. '   ' → logprob: -18.75004768371582
    6. '(self' → logprob: -20.37504768371582
    7. 'if' → logprob: -20.50004768371582
    8. '
' → logprob: -21.00004768371582
    9. '﻿' → logprob: -21.25004768371582
    10. 'c' → logprob: -21.50004768371582

Token 1531: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0004511685692705214
    2. '.' → logprob: -7.75045108795166
    3. 'c' → logprob: -11.12545108795166
    4. '.center' → logprob: -13.00045108795166
    5. ' .' → logprob: -13.50045108795166
    6. 'class' → logprob: -14.37545108795166
    7. '=' → logprob: -15.00045108795166
    8. ' =' → logprob: -15.25045108795166
    9. '	c' → logprob: -15.75045108795166
    10. '.circle' → logprob: -16.125452041625977

Token 1532: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10022921115159988
    2. ' =' → logprob: -2.350229263305664
    3. ':' → logprob: -10.975229263305664
    4. '=c' → logprob: -12.225229263305664
    5. '=
' → logprob: -15.600229263305664
    6. 'c' → logprob: -16.100229263305664
    7. '=

' → logprob: -16.850229263305664
    8. '   ' → logprob: -17.225229263305664
    9. '=None' → logprob: -17.475229263305664
    10. ' ' → logprob: -17.725229263305664

Token 1533: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.011321783997118473
    2. ' Point' → logprob: -4.511322021484375
    3. 'c' → logprob: -8.261322021484375
    4. ' c' → logprob: -11.511322021484375
    5. 'Circle' → logprob: -12.511322021484375
    6. '	Point' → logprob: -13.636322021484375
    7. '(Point' → logprob: -15.261322021484375
    8. '=' → logprob: -16.011322021484375
    9. 'C' → logprob: -16.136322021484375
    10. '_Point' → logprob: -16.511322021484375

Token 1534: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048615068197250366
    2. ' =' → logprob: -3.048614978790283
    3. '=c' → logprob: -10.548615455627441
    4. 'c' → logprob: -14.173615455627441
    5. '       ' → logprob: -15.298615455627441
    6. ' ' → logprob: -15.923615455627441
    7. '=
' → logprob: -16.423614501953125
    8. '        ' → logprob: -16.798614501953125
    9. '   ' → logprob: -17.048614501953125
    10. '(c' → logprob: -17.048614501953125

Token 1535: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.048838060349226
    2. ' Point' → logprob: -3.2988381385803223
    3. 'c' → logprob: -4.548838138580322
    4. ' c' → logprob: -8.798837661743164
    5. 'Circle' → logprob: -12.423837661743164
    6. '	Point' → logprob: -12.798837661743164
    7. '(Point' → logprob: -14.548837661743164
    8. '   ' → logprob: -14.798837661743164
    9. '_Point' → logprob: -15.673837661743164
    10. ' ' → logprob: -15.923837661743164

Token 1536: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.6537622034084052e-05
    2. 'if' → logprob: -11.00002670288086
    3. '0' → logprob: -12.25002670288086
    4. '(' → logprob: -13.00002670288086
    5. '()
' → logprob: -13.12502670288086
    6. 'c' → logprob: -14.37502670288086
    7. ' if' → logprob: -16.12502670288086
    8. '(c' → logprob: -17.50002670288086
    9. '()

' → logprob: -17.75002670288086
    10. '{}' → logprob: -18.12502670288086

Token 1537: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5771717429161072
    2. 'if' → logprob: -0.8271717429161072
    3. '()' → logprob: -6.702171802520752
    4. '       ' → logprob: -13.327171325683594
    5. '	if' → logprob: -13.952171325683594
    6. '        ' → logprob: -14.577171325683594
    7. '   ' → logprob: -17.202171325683594
    8. '0' → logprob: -17.327171325683594
    9. '    ' → logprob: -17.327171325683594
    10. ' ()' → logprob: -17.577171325683594

Token 1538: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1637164789135568e-05
    2. ' c' → logprob: -11.375011444091797
    3. 'None' → logprob: -16.125011444091797
    4. '	c' → logprob: -17.625011444091797
    5. '(c' → logprob: -18.125011444091797
    6. ')c' → logprob: -18.875011444091797
    7. '<|end|>' → logprob: -19.250011444091797
    8. 'cdecl' → logprob: -19.500011444091797
    9. '   ' → logprob: -19.625011444091797
    10. 'cation' → logprob: -20.125011444091797

Token 1539: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5759513974189758
    2. ' is' → logprob: -0.8259513974189758
    3. 'None' → logprob: -12.45095157623291
    4. '==' → logprob: -12.57595157623291
    5. '<|end|>' → logprob: -13.32595157623291
    6. '	is' → logprob: -13.95095157623291
    7. '=None' → logprob: -13.95095157623291
    8. 'if' → logprob: -14.57595157623291
    9. ')is' → logprob: -15.70095157623291
    10. ' None' → logprob: -15.95095157623291

Token 1540: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009120595059357584
    2. ' None' → logprob: -7.000912189483643
    3. '(None' → logprob: -15.000911712646484
    4. '_None' → logprob: -16.375911712646484
    5. '=None' → logprob: -16.500911712646484
    6. '.None' → logprob: -17.375911712646484
    7. '   ' → logprob: -17.750911712646484
    8. 'none' → logprob: -18.000911712646484
    9. '_none' → logprob: -19.500911712646484
    10. '       ' → logprob: -20.125911712646484

Token 1541: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.126988485455513
    2. ' else' → logprob: -2.126988410949707
    3. '       ' → logprob: -9.876988410949707
    4. '        ' → logprob: -12.501988410949707
    5. ':' → logprob: -13.001988410949707
    6. ' ' → logprob: -14.251988410949707
    7. '	else' → logprob: -14.376988410949707
    8. '   ' → logprob: -14.876988410949707
    9. '()' → logprob: -14.876988410949707
    10. '0' → logprob: -15.001988410949707

Token 1542: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.024604277219623e-05
    2. ' c' → logprob: -10.125040054321289
    3. '	c' → logprob: -16.50004005432129
    4. 'Point' → logprob: -17.12504005432129
    5. '   ' → logprob: -18.00004005432129
    6. '       ' → logprob: -19.12504005432129
    7. 'copy' → logprob: -19.37504005432129
    8. '_c' → logprob: -19.37504005432129
    9. '<c' → logprob: -20.00004005432129
    10. 'Circle' → logprob: -20.25004005432129

Token 1543: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.066919301403686e-05
    2. '
' → logprob: -10.375090599060059
    3. '<|end|>' → logprob: -10.875090599060059
    4. 'self' → logprob: -11.000090599060059
    5. ',' → logprob: -11.750090599060059
    6. '   ' → logprob: -12.125090599060059
    7. '	' → logprob: -12.375090599060059
    8. ',
' → logprob: -13.500090599060059
    9. 'r' → logprob: -13.625090599060059
    10. '<|end|>' → logprob: -14.500090599060059

Token 1544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018208589404821396
    2. 'self' → logprob: -4.0182085037231445
    3. ' self' → logprob: -9.893208503723145
    4. '   ' → logprob: -12.018208503723145
    5. '	self' → logprob: -13.643208503723145
    6. '	' → logprob: -15.143208503723145
    7. '(self' → logprob: -15.768208503723145
    8. '           ' → logprob: -15.768208503723145
    9. '      ' → logprob: -16.39320945739746
    10. '
' → logprob: -16.76820945739746

Token 1545: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.246537173457909e-06
    2. '       ' → logprob: -12.750003814697266
    3. ' self' → logprob: -13.625003814697266
    4. '	self' → logprob: -17.750003814697266
    5. 'r' → logprob: -18.500003814697266
    6. '(self' → logprob: -19.750003814697266
    7. '
' → logprob: -20.500003814697266
    8. 's' → logprob: -21.375003814697266
    9. '[self' → logprob: -21.375003814697266
    10. '   ' → logprob: -21.500003814697266

Token 1546: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.048634033650159836
    2. 'r' → logprob: -3.0486340522766113
    3. ' r' → logprob: -10.798633575439453
    4. '.' → logprob: -10.923633575439453
    5. '	r' → logprob: -12.048633575439453
    6. '=r' → logprob: -13.548633575439453
    7. '_r' → logprob: -15.923633575439453
    8. ':r' → logprob: -16.048633575439453
    9. ',r' → logprob: -16.173633575439453
    10. ' .' → logprob: -16.298633575439453

Token 1547: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014202293008565903
    2. ' =' → logprob: -4.264202117919922
    3. '=r' → logprob: -10.514202117919922
    4. ':' → logprob: -11.389202117919922
    5. ' ' → logprob: -15.764202117919922
    6. '<|end|>' → logprob: -17.014202117919922
    7. '=float' → logprob: -17.014202117919922
    8. 'r' → logprob: -17.389202117919922
    9. '=
' → logprob: -17.764202117919922
    10. '   ' → logprob: -18.389202117919922

Token 1548: ' float' (ID: 4428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.702754474943504e-05
    2. ' r' → logprob: -10.37503719329834
    3. 'float' → logprob: -12.12503719329834
    4. ' float' → logprob: -16.250036239624023
    5. '	r' → logprob: -17.125036239624023
    6. '   ' → logprob: -17.125036239624023
    7. '0' → logprob: -17.375036239624023
    8. '       ' → logprob: -17.375036239624023
    9. ' ' → logprob: -18.375036239624023
    10. '
' → logprob: -18.625036239624023

Token 1549: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001943395473062992
    2. ' =' → logprob: -6.251943588256836
    3. '=r' → logprob: -11.126943588256836
    4. ' ' → logprob: -17.501943588256836
    5. 'r' → logprob: -18.126943588256836
    6. ':' → logprob: -18.876943588256836
    7. '   ' → logprob: -19.751943588256836
    8. '	' → logprob: -19.876943588256836
    9. '=
' → logprob: -20.376943588256836
    10. '＝' → logprob: -20.626943588256836

Token 1550: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.849109119386412e-06
    2. ' r' → logprob: -11.625009536743164
    3. '0' → logprob: -14.375009536743164
    4. 'float' → logprob: -15.750009536743164
    5. '	r' → logprob: -16.500009536743164
    6. '   ' → logprob: -18.125009536743164
    7. '_r' → logprob: -19.750009536743164
    8. ' ' → logprob: -20.000009536743164
    9. '       ' → logprob: -20.500009536743164
    10. ' ' → logprob: -20.625009536743164

Token 1551: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1552: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031462423503398895
    2. '
' → logprob: -3.6564624309539795
    3. '<|end|>' → logprob: -5.7814621925354
    4. 'def' → logprob: -6.2814621925354
    5. '```' → logprob: -9.656462669372559
    6. '    
' → logprob: -9.781462669372559
    7. ')' → logprob: -10.406462669372559
    8. '<|end|>' → logprob: -11.281462669372559
    9. ' ' → logprob: -12.281462669372559
    10. '  ' → logprob: -12.406462669372559

Token 1553: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.8889261304575484e-06
    2. '   ' → logprob: -13.125003814697266
    3. ' def' → logprob: -13.500003814697266
    4. '
' → logprob: -15.250003814697266
    5. '<|end|>' → logprob: -16.375003814697266
    6. '	def' → logprob: -17.500003814697266
    7. '#' → logprob: -18.500003814697266
    8. '```' → logprob: -19.375003814697266
    9. 'from' → logprob: -19.625003814697266
    10. '@property' → logprob: -19.750003814697266

Token 1554: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004799395799636841
    2. ' __' → logprob: -5.3797993659973145
    3. 'repr' → logprob: -9.004799842834473
    4. 'def' → logprob: -10.254799842834473
    5. '_repr' → logprob: -11.129799842834473
    6. '___' → logprob: -13.254799842834473
    7. ' ' → logprob: -13.504799842834473
    8. ' repr' → logprob: -14.254799842834473
    9. '.__' → logprob: -14.504799842834473
    10. 'area' → logprob: -14.879799842834473

Token 1555: 'eq' (ID: 21725)
  Prédit: 'repr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -1.9361264946837764e-07
    2. '_repr' → logprob: -16.375
    3. 'init' → logprob: -17.875
    4. 'rep' → logprob: -18.25
    5. 'str' → logprob: -18.75
    6. 'eq' → logprob: -18.875
    7. ' repr' → logprob: -19.5
    8. 'lt' → logprob: -22.5
    9. 'def' → logprob: -23.0
    10. 'represent' → logprob: -23.75

Token 1556: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.39154332876205444
    2. '__(' → logprob: -1.1415433883666992
    3. '(' → logprob: -5.516543388366699
    4. '__' → logprob: -7.766543388366699
    5. ' (' → logprob: -9.2665433883667
    6. '__(
' → logprob: -9.5165433883667
    7. '__((' → logprob: -10.8915433883667
    8. 'self' → logprob: -11.8915433883667
    9. '(
' → logprob: -12.1415433883667
    10. '<|end|>' → logprob: -12.6415433883667

Token 1557: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.981667537620524e-06
    2. ' self' → logprob: -13.750001907348633
    3. '(self' → logprob: -14.125001907348633
    4. 's' → logprob: -16.750001907348633
    5. '
' → logprob: -17.250001907348633
    6. '(' → logprob: -18.250001907348633
    7. '__' → logprob: -18.625001907348633
    8. 'def' → logprob: -19.125001907348633
    9. ')' → logprob: -19.500001907348633
    10. '	self' → logprob: -19.750001907348633

Token 1558: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3045167028903961
    2. ',' → logprob: -1.4295166730880737
    3. '__(' → logprob: -4.929516792297363
    4. '(' → logprob: -5.054516792297363
    5. ')(' → logprob: -5.554516792297363
    6. ')' → logprob: -5.929516792297363
    7. ' (' → logprob: -6.929516792297363
    8. 'self' → logprob: -7.054516792297363
    9. '__' → logprob: -7.304516792297363
    10. ',self' → logprob: -8.929516792297363

Token 1559: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00047607114538550377
    2. ' other' → logprob: -7.750475883483887
    3. 'self' → logprob: -10.000475883483887
    4. ' self' → logprob: -17.625476837158203
    5. 'Other' → logprob: -18.875476837158203
    6. 'o' → logprob: -19.375476837158203
    7. '(other' → logprob: -19.500476837158203
    8. '   ' → logprob: -20.250476837158203
    9. '_other' → logprob: -20.375476837158203
    10. ' ' → logprob: -20.875476837158203

Token 1560: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00027111053350381553
    2. ' :' → logprob: -9.37527084350586
    3. '(object' → logprob: -10.12527084350586
    4. 'self' → logprob: -10.50027084350586
    5. ')' → logprob: -10.75027084350586
    6. ',' → logprob: -10.87527084350586
    7. '(' → logprob: -11.00027084350586
    8. '[' → logprob: -11.50027084350586
    9. '(self' → logprob: -11.50027084350586
    10. '```' → logprob: -11.87527084350586

Token 1561: ' object' (ID: 2817)
  Prédit: 'object'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'object' → logprob: -0.00030316898482851684
    2. ' object' → logprob: -8.250303268432617
    3. ''' → logprob: -10.125303268432617
    4. '(object' → logprob: -14.000303268432617
    5. 'Object' → logprob: -14.625303268432617
    6. '	object' → logprob: -15.500303268432617
    7. ''objet' → logprob: -16.625303268432617
    8. ')object' → logprob: -16.625303268432617
    9. 'Point' → logprob: -16.750303268432617
    10. '.object' → logprob: -16.875303268432617

Token 1562: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011450992315076292
    2. ':' → logprob: -9.125114440917969
    3. ' )' → logprob: -12.750114440917969
    4. ')->' → logprob: -13.625114440917969
    5. '')' → logprob: -14.250114440917969
    6. ')object' → logprob: -15.875114440917969
    7. '   ' → logprob: -16.00011444091797
    8. '):
' → logprob: -16.25011444091797
    9. ' ' → logprob: -16.50011444091797
    10. '):' → logprob: -16.87511444091797

Token 1563: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14616400003433228
    2. '->' → logprob: -2.3961639404296875
    3. ' ->' → logprob: -3.3961639404296875
    4. ')' → logprob: -5.2711639404296875
    5. '       ' → logprob: -5.3961639404296875
    6. '   ' → logprob: -7.2711639404296875
    7. ')->' → logprob: -8.396163940429688
    8. '           ' → logprob: -8.521163940429688
    9. ':
' → logprob: -9.021163940429688
    10. '==' → logprob: -9.896163940429688

Token 1564: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -2.570319702499546e-05
    2. ' bool' → logprob: -10.750025749206543
    3. 'object' → logprob: -12.375025749206543
    4. '	bool' → logprob: -17.375024795532227
    5. '<bool' → logprob: -17.500024795532227
    6. '(bool' → logprob: -18.375024795532227
    7. '```' → logprob: -20.250024795532227
    8. ' ' → logprob: -20.375024795532227
    9. '   ' → logprob: -21.000024795532227
    10. ' object' → logprob: -21.500024795532227

Token 1565: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12809301912784576
    2. ':
' → logprob: -2.7530930042266846
    3. '       ' → logprob: -3.0030930042266846
    4. '   ' → logprob: -6.378093242645264
    5. '(self' → logprob: -6.378093242645264
    6. '):
' → logprob: -7.128093242645264
    7. ')' → logprob: -7.128093242645264
    8. '->' → logprob: -7.378093242645264
    9. '           ' → logprob: -8.003092765808105
    10. '(object' → logprob: -8.753092765808105

Token 1566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019507692195475101
    2. '   ' → logprob: -9.375195503234863
    3. '<|end|>' → logprob: -9.750195503234863
    4. ' if' → logprob: -10.750195503234863
    5. 'if' → logprob: -12.000195503234863
    6. '#' → logprob: -12.000195503234863
    7. '      ' → logprob: -12.875195503234863
    8. ' ' → logprob: -13.125195503234863
    9. 'def' → logprob: -13.625195503234863
    10. '[' → logprob: -13.750195503234863

Token 1567: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003214665222913027
    2. ' if' → logprob: -6.3782148361206055
    3. '       ' → logprob: -6.5032148361206055
    4. 'return' → logprob: -12.628214836120605
    5. '
' → logprob: -12.753214836120605
    6. '           ' → logprob: -12.753214836120605
    7. '   ' → logprob: -14.003214836120605
    8. 'def' → logprob: -14.628214836120605
    9. 'not' → logprob: -14.753214836120605
    10. 'self' → logprob: -14.753214836120605

Token 1568: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.16022910177707672
    2. ' not' → logprob: -1.9102290868759155
    3. '       ' → logprob: -13.410228729248047
    4. '	not' → logprob: -14.035228729248047
    5. '(not' → logprob: -14.160228729248047
    6. 'Not' → logprob: -14.535228729248047
    7. '           ' → logprob: -14.535228729248047
    8. '   ' → logprob: -15.035228729248047
    9. '...' → logprob: -15.660228729248047
    10. '
' → logprob: -15.660228729248047

Token 1569: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0004343645414337516
    2. ' isinstance' → logprob: -7.750434398651123
    3. '(is' → logprob: -12.500433921813965
    4. '   ' → logprob: -16.87543487548828
    5. '
' → logprob: -18.00043487548828
    6. 'Is' → logprob: -18.50043487548828
    7. '       ' → logprob: -19.12543487548828
    8. '           ' → logprob: -19.12543487548828
    9. '  ' → logprob: -19.37543487548828
    10. '    ' → logprob: -20.25043487548828

Token 1570: '(other' (ID: 32550)
  Prédit: '(other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.0003361774142831564
    2. 'other' → logprob: -8.000336647033691
    3. ' other' → logprob: -14.375336647033691
    4. 'Other' → logprob: -15.625336647033691
    5. 'Circle' → logprob: -20.500335693359375
    6. 'OTHER' → logprob: -22.000335693359375
    7. '_other' → logprob: -22.000335693359375
    8. '```' → logprob: -22.000335693359375
    9. '(self' → logprob: -22.625335693359375
    10. '
' → logprob: -22.625335693359375

Token 1571: ',' (ID: 11)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.5824586749076843
    2. ',' → logprob: -0.8324586749076843
    3. 'other' → logprob: -5.08245849609375
    4. ' other' → logprob: -8.58245849609375
    5. 'Other' → logprob: -9.45745849609375
    6. 'self' → logprob: -11.20745849609375
    7. ',
' → logprob: -12.83245849609375
    8. '(self' → logprob: -13.08245849609375
    9. 'C' → logprob: -13.20745849609375
    10. 'Circle' → logprob: -13.70745849609375

Token 1572: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.0048380764201283455
    2. 'self' → logprob: -5.504837989807129
    3. 'other' → logprob: -7.754837989807129
    4. 'Point' → logprob: -8.504837989807129
    5. ' Circle' → logprob: -9.004837989807129
    6. 'Other' → logprob: -13.004837989807129
    7. 'object' → logprob: -13.504837989807129
    8. ' other' → logprob: -14.754837989807129
    9. 'Circular' → logprob: -15.004837989807129
    10. '.Circle' → logprob: -15.129837989807129

Token 1573: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14469841122627258
    2. '):' → logprob: -2.01969838142395
    3. 'self' → logprob: -6.769698619842529
    4. '       ' → logprob: -7.769698619842529
    5. '   ' → logprob: -9.019698143005371
    6. '):
' → logprob: -9.644698143005371
    7. '(self' → logprob: -9.894698143005371
    8. ')' → logprob: -10.144698143005371
    9. '(other' → logprob: -10.269698143005371
    10. '           ' → logprob: -10.269698143005371

Token 1574: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00047190272016450763
    2. '       ' → logprob: -8.875472068786621
    3. '<|end|>' → logprob: -8.875472068786621
    4. '   ' → logprob: -10.000472068786621
    5. '<|end|>' → logprob: -10.125472068786621
    6. ':' → logprob: -11.000472068786621
    7. ':return' → logprob: -11.125472068786621
    8. 'return' → logprob: -11.250472068786621
    9. '	       ' → logprob: -11.500472068786621
    10. '    	   ' → logprob: -11.750472068786621

Token 1575: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5784673094749451
    2. 'return' (adapté à ' return') → logprob: -0.8284673094749451
    3. ' return' → logprob: -6.57846736907959
    4. '#' → logprob: -6.95346736907959
    5. '       ' → logprob: -9.20346736907959
    6. ':return' → logprob: -10.57846736907959
    7. '{return' → logprob: -10.95346736907959
    8. '   ' → logprob: -11.95346736907959
    9. '0' → logprob: -12.20346736907959
    10. ' ' → logprob: -12.32846736907959

Token 1576: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.0001664717128733173
    2. 'False' → logprob: -8.750166893005371
    3. ' Not' → logprob: -11.750166893005371
    4. '_Not' → logprob: -16.500165939331055
    5. 'not' → logprob: -16.875165939331055
    6. '_not' → logprob: -18.625165939331055
    7. '
' → logprob: -19.125165939331055
    8. ' ' → logprob: -19.625165939331055
    9. '@Not' → logprob: -19.750165939331055
    10. '0' → logprob: -19.750165939331055

Token 1577: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0004411591507960111
    2. 'Not' → logprob: -7.750441074371338
    3. 'Implement' → logprob: -12.125441551208496
    4. 'implemented' → logprob: -13.000441551208496
    5. 'Implementation' → logprob: -14.625441551208496
    6. '```' → logprob: -14.625441551208496
    7. '
' → logprob: -15.500441551208496
    8. 'Supported' → logprob: -15.500441551208496
    9. '_IMPLEMENT' → logprob: -15.625441551208496
    10. 'Specified' → logprob: -15.625441551208496

Token 1578: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003142300993204117
    2. '
' → logprob: -5.878142356872559
    3. '	' → logprob: -8.378142356872559
    4. '   ' → logprob: -10.003142356872559
    5. '<|end|>' → logprob: -11.128142356872559
    6. 'return' → logprob: -11.378142356872559
    7. '        
' → logprob: -11.753142356872559
    8. '\
' → logprob: -12.003142356872559
    9. '           ' → logprob: -13.003142356872559
    10. '(' → logprob: -13.128142356872559

Token 1579: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.522638169466518e-05
    2. '
' → logprob: -11.625024795532227
    3. '	' → logprob: -11.750024795532227
    4. '   ' → logprob: -12.250024795532227
    5. '<|end|>' → logprob: -13.875024795532227
    6. '        
' → logprob: -14.000024795532227
    7. '      ' → logprob: -14.875024795532227
    8. '           ' → logprob: -15.125024795532227
    9. ' ' → logprob: -15.250024795532227
    10. '	   ' → logprob: -16.000024795532227

Token 1580: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015240294160321355
    2. '       ' → logprob: -6.501523971557617
    3. ' return' → logprob: -10.751523971557617
    4. '
' → logprob: -16.376523971557617
    5. '   ' → logprob: -16.626523971557617
    6. '	return' → logprob: -16.751523971557617
    7. 'if' → logprob: -17.876523971557617
    8. '           ' → logprob: -18.501523971557617
    9. '{return' → logprob: -19.501523971557617
    10. '```' → logprob: -20.001523971557617

Token 1581: ' self' (ID: 1051)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.38690757751464844
    2. 'self' → logprob: -1.1369075775146484
    3. '   ' → logprob: -11.011907577514648
    4. ' self' → logprob: -12.011907577514648
    5. ' float' → logprob: -12.011907577514648
    6. '(self' → logprob: -12.511907577514648
    7. '       ' → logprob: -13.261907577514648
    8. '(float' → logprob: -14.636907577514648
    9. 'flo' → logprob: -15.136907577514648
    10. '
' → logprob: -15.261907577514648

Token 1582: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0037111234851181507
    2. '.r' → logprob: -5.628711223602295
    3. 'c' → logprob: -10.253710746765137
    4. '.' → logprob: -11.503710746765137
    5. 'r' → logprob: -11.503710746765137
    6. 'self' → logprob: -11.503710746765137
    7. '   ' → logprob: -11.628710746765137
    8. ' .' → logprob: -11.753710746765137
    9. '
' → logprob: -12.253710746765137
    10. 'float' → logprob: -12.628710746765137

Token 1583: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12694290280342102
    2. ' ==' → logprob: -2.1269428730010986
    3. '==
' → logprob: -11.25194263458252
    4. ')==' → logprob: -13.87694263458252
    5. '=' → logprob: -14.62694263458252
    6. '__' → logprob: -15.62694263458252
    7. '==(' → logprob: -16.501943588256836
    8. '()==' → logprob: -16.626943588256836
    9. '===' → logprob: -17.251943588256836
    10. '<|end|>' → logprob: -17.251943588256836

Token 1584: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0024758970830589533
    2. ' other' → logprob: -6.002475738525391
    3. '(other' → logprob: -15.50247573852539
    4. 'Other' → logprob: -19.12747573852539
    5. '.other' → logprob: -20.37747573852539
    6. '_other' → logprob: -21.75247573852539
    7. '       ' → logprob: -22.25247573852539
    8. 'self' → logprob: -23.62747573852539
    9. 'OTHER' → logprob: -24.50247573852539
    10. '           ' → logprob: -24.75247573852539

Token 1585: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.007641890551894903
    2. '.' → logprob: -4.882641792297363
    3. ' .' → logprob: -11.632641792297363
    4. 'c' → logprob: -11.882641792297363
    5. '<|end|>' → logprob: -11.882641792297363
    6. '
' → logprob: -12.882641792297363
    7. '   ' → logprob: -13.257641792297363
    8. ').' → logprob: -13.257641792297363
    9. 'and' → logprob: -13.882641792297363
    10. '‌.' → logprob: -13.882641792297363

Token 1586: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16052794456481934
    2. ' and' → logprob: -1.9105279445648193
    3. '       ' → logprob: -8.160528182983398
    4. '	and' → logprob: -11.660528182983398
    5. '           ' → logprob: -12.410528182983398
    6. '   ' → logprob: -12.910528182983398
    7. '        ' → logprob: -14.660528182983398
    8. '&&' → logprob: -14.785528182983398
    9. ' ' → logprob: -14.785528182983398
    10. '<|end|>' → logprob: -15.035528182983398

Token 1587: ' self' (ID: 1051)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00021879478299524635
    2. 'abs' → logprob: -8.750218391418457
    3. ' float' → logprob: -10.375218391418457
    4. '       ' → logprob: -10.750218391418457
    5. 'self' → logprob: -11.875218391418457
    6. 'fabs' → logprob: -15.625218391418457
    7. '        ' → logprob: -15.750218391418457
    8. '   ' → logprob: -16.000219345092773
    9. '           ' → logprob: -16.500219345092773
    10. '	float' → logprob: -16.875219345092773

Token 1588: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.027038637548685074
    2. 'r' → logprob: -3.77703857421875
    3. '.' → logprob: -5.77703857421875
    4. 'abs' → logprob: -7.77703857421875
    5. '.abs' → logprob: -9.02703857421875
    6. 'float' → logprob: -9.65203857421875
    7. '.float' → logprob: -10.65203857421875
    8. '.s' → logprob: -10.65203857421875
    9. 's' → logprob: -12.27703857421875
    10. 'import' → logprob: -12.52703857421875

Token 1589: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.254454642534256
    2. ' ==' → logprob: -1.5044546127319336
    3. 'float' → logprob: -6.629454612731934
    4. '<|end|>' → logprob: -7.879454612731934
    5. ' float' → logprob: -8.004454612731934
    6. '==
' → logprob: -9.004454612731934
    7. '_equal' → logprob: -9.254454612731934
    8. '_float' → logprob: -10.254454612731934
    9. ')==' → logprob: -10.254454612731934
    10. '=' → logprob: -10.504454612731934

Token 1590: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0015023599844425917
    2. ' other' → logprob: -6.501502513885498
    3. '(other' → logprob: -17.001502990722656
    4. 'self' → logprob: -19.126502990722656
    5. '.other' → logprob: -19.751502990722656
    6. 'Other' → logprob: -19.876502990722656
    7. ' ' → logprob: -20.751502990722656
    8. '_other' → logprob: -21.001502990722656
    9. '   ' → logprob: -21.251502990722656
    10. '       ' → logprob: -21.251502990722656

Token 1591: '.r' (ID: 2951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1592: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009571913629770279
    2. '<|end|>' → logprob: -4.8845720291137695
    3. 'def' → logprob: -6.5095720291137695
    4. '```' → logprob: -8.13457202911377
    5. '
' → logprob: -9.75957202911377
    6. '<|end|>' → logprob: -10.25957202911377
    7. ')' → logprob: -10.63457202911377
    8. ' ' → logprob: -11.25957202911377
    9. ' def' → logprob: -11.38457202911377
    10. '    
' → logprob: -11.88457202911377

Token 1594: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001037214300595224
    2. '   ' → logprob: -6.876037120819092
    3. ' def' → logprob: -12.75103759765625
    4. '@property' → logprob: -14.62603759765625
    5. '	def' → logprob: -15.00103759765625
    6. '
' → logprob: -15.75103759765625
    7. '#' → logprob: -15.87603759765625
    8. 'from' → logprob: -16.00103759765625
    9. 'class' → logprob: -16.00103759765625
    10. '@' → logprob: -16.12603759765625

Token 1595: ' __' (ID: 2516)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.3038576543331146
    2. '__' → logprob: -1.928857684135437
    3. 'contains' → logprob: -2.6788575649261475
    4. 'inter' → logprob: -4.178857803344727
    5. '_area' → logprob: -4.553857803344727
    6. ' area' → logprob: -5.053857803344727
    7. ' __' → logprob: -5.678857803344727
    8. ' ' → logprob: -6.053857803344727
    9. 'def' → logprob: -6.178857803344727
    10. 'center' → logprob: -6.303857803344727

Token 1596: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -6.630610641877865e-06
    2. 'lt' → logprob: -12.250006675720215
    3. 'str' → logprob: -13.625006675720215
    4. 'init' → logprob: -15.250006675720215
    5. 'hash' → logprob: -15.875006675720215
    6. 'abs' → logprob: -16.3750057220459
    7. 'rep' → logprob: -17.3750057220459
    8. '_repr' → logprob: -18.2500057220459
    9. 'eq' → logprob: -19.2500057220459
    10. 'add' → logprob: -19.3750057220459

Token 1597: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004346448928117752
    2. '__(' → logprob: -5.5043463706970215
    3. '(' → logprob: -8.37934684753418
    4. '__' → logprob: -10.75434684753418
    5. 'self' → logprob: -12.25434684753418
    6. '```' → logprob: -12.62934684753418
    7. '   ' → logprob: -13.12934684753418
    8. '__(
' → logprob: -13.37934684753418
    9. '       ' → logprob: -14.12934684753418
    10. '
' → logprob: -14.62934684753418

Token 1598: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000320565392030403
    2. '(self' → logprob: -8.250320434570312
    3. ' self' → logprob: -9.750320434570312
    4. 's' → logprob: -14.750320434570312
    5. '(' → logprob: -14.875320434570312
    6. ')' → logprob: -15.625320434570312
    7. ' (' → logprob: -17.250320434570312
    8. '
' → logprob: -17.500320434570312
    9. 'def' → logprob: -17.750320434570312
    10. 't' → logprob: -18.000320434570312

Token 1599: ')' (ID: 8)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.47562533617019653
    2. '(self' → logprob: -0.9756253361701965
    3. '(' → logprob: -6.600625514984131
    4. '__' → logprob: -8.850625038146973
    5. ')(' → logprob: -11.100625038146973
    6. '__(
' → logprob: -11.350625038146973
    7. 'self' → logprob: -11.850625038146973
    8. '```' → logprob: -12.475625038146973
    9. ' (' → logprob: -13.225625038146973
    10. '_(' → logprob: -13.725625038146973

Token 1600: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005016815848648548
    2. '(' → logprob: -7.62550163269043
    3. '(
' → logprob: -11.87550163269043
    4. 'self' → logprob: -12.75050163269043
    5. '       ' → logprob: -13.87550163269043
    6. '(s' → logprob: -14.25050163269043
    7. '```' → logprob: -14.25050163269043
    8. '   ' → logprob: -14.37550163269043
    9. ' (' → logprob: -15.00050163269043
    10. ' self' → logprob: -15.62550163269043

Token 1601: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.023245826363563538
    2. ' str' → logprob: -3.7732458114624023
    3. 'string' → logprob: -15.523245811462402
    4. 'self' → logprob: -16.27324676513672
    5. 'f' → logprob: -16.39824676513672
    6. '(str' → logprob: -18.39824676513672
    7. 'stri' → logprob: -20.39824676513672
    8. '	str' → logprob: -20.77324676513672
    9. '[str' → logprob: -21.52324676513672
    10. '=str' → logprob: -21.77324676513672

Token 1602: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.538490950129926e-05
    2. '       ' → logprob: -10.375055313110352
    3. '(' → logprob: -10.875055313110352
    4. '   ' → logprob: -12.625055313110352
    5. '(
' → logprob: -13.750055313110352
    6. 'self' → logprob: -14.375055313110352
    7. '(s' → logprob: -16.25005531311035
    8. ' (' → logprob: -16.62505531311035
    9. '```' → logprob: -16.75005531311035
    10. '	self' → logprob: -17.75005531311035

Token 1603: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008928788010962307
    2. 'return' → logprob: -7.2508931159973145
    3. 'f' → logprob: -9.125892639160156
    4. ' return' → logprob: -9.625892639160156
    5. ' f' → logprob: -12.000892639160156
    6. '   ' → logprob: -15.000892639160156
    7. '
' → logprob: -15.500892639160156
    8. '	' → logprob: -15.500892639160156
    9. '           ' → logprob: -15.500892639160156
    10. '(f' → logprob: -15.625892639160156

Token 1604: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07231712341308594
    2. 'f' → logprob: -2.822317123413086
    3. '"' → logprob: -4.947317123413086
    4. ' return' → logprob: -6.322317123413086
    5. '       ' → logprob: -6.947317123413086
    6. ' f' → logprob: -8.197317123413086
    7. '   ' → logprob: -9.322317123413086
    8. '"C' → logprob: -9.822317123413086
    9. '           ' → logprob: -11.822317123413086
    10. '
' → logprob: -12.572317123413086

Token 1605: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3469204008579254
    2. 'f' → logprob: -1.346920371055603
    3. ' f' → logprob: -3.4719204902648926
    4. ' "' → logprob: -6.596920490264893
    5. '"C' → logprob: -7.346920490264893
    6. ''' → logprob: -11.096920013427734
    7. 'Circle' → logprob: -11.721920013427734
    8. '   ' → logprob: -12.721920013427734
    9. ' ' → logprob: -13.346920013427734
    10. '       ' → logprob: -13.846920013427734

Token 1606: 'Circle' (ID: 28055)
  Prédit: 'Circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.0012782112462446094
    2. '"' → logprob: -7.001278400421143
    3. 'f' → logprob: -8.001277923583984
    4. '"C' → logprob: -11.376277923583984
    5. ' Circle' → logprob: -12.126277923583984
    6. ''' → logprob: -12.251277923583984
    7. 'Cir' → logprob: -12.751277923583984
    8. 'Circ' → logprob: -13.251277923583984
    9. '.Circle' → logprob: -13.501277923583984
    10. 'circle' → logprob: -13.751277923583984

Token 1607: '({},' (ID: 45594)
  Prédit: '({},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({},' → logprob: -1.580929347255733e-05
    2. '({' → logprob: -11.125016212463379
    3. '("' → logprob: -14.750016212463379
    4. '(c' → logprob: -15.125016212463379
    5. '(' → logprob: -16.000015258789062
    6. '(self' → logprob: -16.250015258789062
    7. '(Point' → logprob: -16.375015258789062
    8. '(",' → logprob: -17.250015258789062
    9. '(center' → logprob: -17.250015258789062
    10. '{},' → logprob: -17.625015258789062

Token 1608: ' {})' (ID: 75167)
  Prédit: '{})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{})' → logprob: -0.003666348522529006
    2. ' {})' → logprob: -5.878666400909424
    3. 'r' → logprob: -7.753666400909424
    4. '{},' → logprob: -8.128665924072266
    5. '{}' → logprob: -9.378665924072266
    6. '{' → logprob: -10.128665924072266
    7. ')' → logprob: -12.628665924072266
    8. 'radius' → logprob: -12.628665924072266
    9. ')"' → logprob: -12.753665924072266
    10. ' r' → logprob: -13.753665924072266

Token 1609: '".' (ID: 4050)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7116331458091736
    2. '.format' → logprob: -0.7116331458091736
    3. '".' → logprob: -4.336633205413818
    4. 'format' → logprob: -5.586633205413818
    5. '(format' → logprob: -7.086633205413818
    6. 'self' → logprob: -8.21163272857666
    7. '(".' → logprob: -8.21163272857666
    8. '.' → logprob: -10.58663272857666
    9. '(.' → logprob: -10.71163272857666
    10. '.self' → logprob: -11.46163272857666

Token 1610: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -7.703443770878948e-06
    2. ' format' → logprob: -12.000007629394531
    3. '(format' → logprob: -13.500007629394531
    4. '	format' → logprob: -17.87500762939453
    5. 'forma' → logprob: -18.50000762939453
    6. 'form' → logprob: -18.62500762939453
    7. 'ormat' → logprob: -19.00000762939453
    8. '.format' → logprob: -19.50000762939453
    9. 'self' → logprob: -21.37500762939453
    10. 'for' → logprob: -21.62500762939453

Token 1611: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00033581978641450405
    2. 'self' → logprob: -8.000335693359375
    3. '(re' → logprob: -16.250335693359375
    4. 'repr' → logprob: -16.375335693359375
    5. ' self' → logprob: -16.875335693359375
    6. '(
' → logprob: -17.500335693359375
    7. '(' → logprob: -18.625335693359375
    8. '(str' → logprob: -19.000335693359375
    9. ' (' → logprob: -19.250335693359375
    10. '	self' → logprob: -19.750335693359375

Token 1612: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -1.4021237802808173e-05
    2. 'self' → logprob: -11.250014305114746
    3. '.' → logprob: -14.250014305114746
    4. 'c' → logprob: -15.000014305114746
    5. ' .' → logprob: -18.37501335144043
    6. ' self' → logprob: -18.37501335144043
    7. '.s' → logprob: -18.75001335144043
    8. '.self' → logprob: -19.12501335144043
    9. '	c' → logprob: -19.75001335144043
    10. ').' → logprob: -19.87501335144043

Token 1613: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -13.000004768371582
    3. ',self' → logprob: -13.375004768371582
    4. 'self' → logprob: -13.875004768371582
    5. ',
' → logprob: -15.375004768371582
    6. ')' → logprob: -17.5000057220459
    7. ' self' → logprob: -17.8750057220459
    8. ',

' → logprob: -19.8750057220459
    9. '<|end|>' → logprob: -19.8750057220459
    10. '(),' → logprob: -20.0000057220459

Token 1614: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029754776507616043
    2. ' self' → logprob: -3.529754877090454
    3. '       ' → logprob: -12.779754638671875
    4. '   ' → logprob: -14.779754638671875
    5. '    ' → logprob: -15.404754638671875
    6. ' ' → logprob: -15.529754638671875
    7. '     ' → logprob: -16.029754638671875
    8. '           ' → logprob: -16.029754638671875
    9. '        ' → logprob: -16.279754638671875
    10. '	self' → logprob: -16.279754638671875

Token 1615: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.012081503868103027
    2. 'r' → logprob: -4.512081623077393
    3. '.' → logprob: -6.887081623077393
    4. ' r' → logprob: -11.887081146240234
    5. ',r' → logprob: -13.137081146240234
    6. ')' → logprob: -13.887081146240234
    7. '	r' → logprob: -14.012081146240234
    8. ' .' → logprob: -14.887081146240234
    9. '_r' → logprob: -15.012081146240234
    10. ',' → logprob: -15.262081146240234

Token 1616: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -15.250000953674316
    4. ' )' → logprob: -15.500000953674316
    5. '),' → logprob: -17.125001907348633
    6. ')}' → logprob: -18.000001907348633
    7. ')`' → logprob: -18.250001907348633
    8. ').' → logprob: -19.125001907348633
    9. ')">' → logprob: -19.125001907348633
    10. ')#' → logprob: -19.250001907348633

Token 1617: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2870575785636902
    2. 'def' → logprob: -1.412057638168335
    3. 'from' → logprob: -5.912057399749756
    4. '<|end|>' → logprob: -5.912057399749756
    5. '#' → logprob: -8.162057876586914
    6. '```' → logprob: -10.037057876586914
    7. 'class' → logprob: -10.037057876586914
    8. 'import' → logprob: -10.912057876586914
    9. '	def' → logprob: -10.912057876586914
    10. 'pass' → logprob: -11.162057876586914

Token 1618: ' main' (ID: 2758)
  Prédit: ' circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' circle' → logprob: -1.634563684463501
    2. ' main' → logprob: -2.009563684463501
    3. 'circle' → logprob: -2.009563684463501
    4. 'cc' → logprob: -2.509563684463501
    5. ' convex' → logprob: -3.134563684463501
    6. ' tangent' → logprob: -3.134563684463501
    7. 't' → logprob: -3.384563684463501
    8. ' find' → logprob: -3.509563684463501
    9. 'main' → logprob: -3.759563684463501
    10. 'circ' → logprob: -3.884563684463501

Token 1619: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.045823566731997e-05
    2. '():
' → logprob: -11.250020027160645
    3. ' ():' → logprob: -12.125020027160645
    4. '()' → logprob: -13.250020027160645
    5. '()>' → logprob: -16.50002098083496
    6. '():
' → logprob: -17.12502098083496
    7. '(' → logprob: -17.12502098083496
    8. '():

' → logprob: -18.50002098083496
    9. ':' → logprob: -18.87502098083496
    10. '().' → logprob: -19.12502098083496

Token 1620: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0010366219794377685
    2. '():
' → logprob: -7.501036643981934
    3. ':' → logprob: -8.001036643981934
    4. '()' → logprob: -9.251036643981934
    5. '()->' → logprob: -10.126036643981934
    6. '()>' → logprob: -12.001036643981934
    7. ' ():' → logprob: -12.751036643981934
    8. '<()>' → logprob: -14.251036643981934
    9. '(' → logprob: -14.376036643981934
    10. '():
' → logprob: -14.626036643981934

Token 1621: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009177703177556396
    2. ' None' → logprob: -7.000917911529541
    3. 'int' → logprob: -12.000917434692383
    4. 'none' → logprob: -18.125917434692383
    5. 'float' → logprob: -19.000917434692383
    6. '   ' → logprob: -19.125917434692383
    7. '_None' → logprob: -21.250917434692383
    8. ' int' → logprob: -21.500917434692383
    9. ' ' → logprob: -21.625917434692383
    10. '(None' → logprob: -21.750917434692383

Token 1622: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2524169087409973
    2. '():' → logprob: -1.5024168491363525
    3. '():
' → logprob: -8.127416610717773
    4. ':
' → logprob: -9.002416610717773
    5. '):' → logprob: -10.502416610717773
    6. '()' → logprob: -10.752416610717773
    7. '(":' → logprob: -12.877416610717773
    8. ' :' → logprob: -13.002416610717773
    9. ' ():' → logprob: -13.127416610717773
    10. '   ' → logprob: -13.127416610717773

Token 1623: '   ' (ID: 271)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5291061997413635
    2. '   ' → logprob: -0.9041061997413635
    3. 'pass' → logprob: -5.404106140136719
    4. '	pass' → logprob: -7.654106140136719
    5. '#' → logprob: -8.279106140136719
    6. '    ' → logprob: -8.654106140136719
    7. 'n' → logprob: -9.154106140136719
    8. ' #' → logprob: -9.404106140136719
    9. '...' → logprob: -9.654106140136719
    10. ' n' → logprob: -9.779106140136719

Token 1624: ' q' (ID: 2335)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04863676428794861
    2. '   ' → logprob: -4.1736369132995605
    3. 'import' → logprob: -4.4236369132995605
    4. 'N' → logprob: -4.4236369132995605
    5. 'x' → logprob: -5.6736369132995605
    6. ' n' → logprob: -6.4236369132995605
    7. 'pass' → logprob: -6.5486369132995605
    8. '#' → logprob: -7.6736369132995605
    9. 'a' → logprob: -8.173636436462402
    10. 'r' → logprob: -8.423636436462402

Token 1625: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.605437695980072
    2. 'u' → logprob: -0.855437695980072
    3. '=' → logprob: -3.605437755584717
    4. 'ue' → logprob: -7.605437755584717
    5. 'uer' → logprob: -7.730437755584717
    6. ' ' → logprob: -7.980437755584717
    7. 'ual' → logprob: -8.855437278747559
    8. ':' → logprob: -9.480437278747559
    9. '   ' → logprob: -9.605437278747559
    10. '.' → logprob: -9.855437278747559

Token 1626: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.6550729419104755e-05
    2. ' int' → logprob: -10.625036239624023
    3. '[int' → logprob: -12.000036239624023
    4. 'float' → logprob: -13.250036239624023
    5. 'Point' → logprob: -13.500036239624023
    6. '(int' → logprob: -14.625036239624023
    7. '0' → logprob: -15.125036239624023
    8. '10' → logprob: -15.250036239624023
    9. '	int' → logprob: -15.375036239624023
    10. ' ' → logprob: -15.375036239624023

Token 1627: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0004942946252413094
    2. 'input' → logprob: -7.625494480133057
    3. '(' → logprob: -12.125494003295898
    4. '=input' → logprob: -15.000494003295898
    5. ' input' → logprob: -15.500494003295898
    6. '()' → logprob: -15.625494003295898
    7. '(
' → logprob: -16.5004940032959
    8. ',input' → logprob: -17.3754940032959
    9. '	input' → logprob: -17.5004940032959
    10. '(stdin' → logprob: -17.6254940032959

Token 1628: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005293288733810186
    2. '()' → logprob: -5.255293369293213
    3. '())
' → logprob: -10.130292892456055
    4. '().' → logprob: -11.255292892456055
    5. '()
' → logprob: -13.255292892456055
    6. '(' → logprob: -13.255292892456055
    7. ' ())' → logprob: -14.380292892456055
    8. '()>' → logprob: -14.630292892456055
    9. '();)' → logprob: -14.630292892456055
    10. '())

' → logprob: -14.630292892456055

Token 1629: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20230162143707275
    2. '   ' → logprob: -1.7023016214370728
    3. ' for' → logprob: -7.077301502227783
    4. '	for' → logprob: -10.077301979064941
    5. '```' → logprob: -13.827301979064941
    6. '
' → logprob: -14.952301979064941
    7. 'while' → logprob: -16.327301025390625
    8. '  ' → logprob: -16.452301025390625
    9. 'points' → logprob: -16.452301025390625
    10. 'results' → logprob: -16.702301025390625

Token 1630: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.320199877838604e-07
    2. 'points' → logprob: -15.625
    3. ' for' → logprob: -16.25
    4. 'results' → logprob: -16.75
    5. '   ' → logprob: -18.125
    6. 'segments' → logprob: -18.75
    7. 'lines' → logprob: -19.875
    8. 'from' → logprob: -20.125
    9. 'while' → logprob: -20.75
    10. 'queries' → logprob: -21.75

Token 1631: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002613358374219388
    2. ' _' → logprob: -8.250261306762695
    3. '_i' → logprob: -18.500261306762695
    4. ' ' → logprob: -18.750261306762695
    5. ' i' → logprob: -19.250261306762695
    6. '_

' → logprob: -19.500261306762695
    7. '_=' → logprob: -20.000261306762695
    8. '_
' → logprob: -20.625261306762695
    9. ' ' → logprob: -21.000261306762695
    10. '_
' → logprob: -21.125261306762695

Token 1632: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010259343311190605
    2. 'in' → logprob: -4.63525915145874
    3. 'range' → logprob: -7.63525915145874
    4. ' range' → logprob: -11.385259628295898
    5. '_' → logprob: -12.760259628295898
    6. ' ' → logprob: -12.760259628295898
    7. 'i' → logprob: -13.885259628295898
    8. '
' → logprob: -14.885259628295898
    9. ' _' → logprob: -15.135259628295898
    10. '  ' → logprob: -15.510259628295898

Token 1633: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002036595979006961
    2. ' range' → logprob: -8.500204086303711
    3. 'q' → logprob: -16.50020408630371
    4. '(range' → logprob: -19.00020408630371
    5. '
' → logprob: -20.37520408630371
    6. '[' → logprob: -20.50020408630371
    7. '	range' → logprob: -20.50020408630371
    8. 'r' → logprob: -20.62520408630371
    9. '```' → logprob: -20.62520408630371
    10. 'rang' → logprob: -20.87520408630371

Token 1634: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -1.688212614681106e-05
    2. '(' → logprob: -11.000017166137695
    3. 'q' → logprob: -16.250017166137695
    4. ' (' → logprob: -18.250017166137695
    5. '(query' → logprob: -19.500017166137695
    6. '(range' → logprob: -19.750017166137695
    7. '(
' → logprob: -20.375017166137695
    8. '(qu' → logprob: -20.625017166137695
    9. '(int' → logprob: -21.375017166137695
    10. '((' → logprob: -21.875017166137695

Token 1635: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02935906872153282
    2. ':' → logprob: -4.279358863830566
    3. '):
' → logprob: -4.279358863830566
    4. '():' → logprob: -6.904358863830566
    5. '   ' → logprob: -9.029358863830566
    6. '():
' → logprob: -10.154358863830566
    7. ':
' → logprob: -10.654358863830566
    8. ')' → logprob: -11.029358863830566
    9. ',' → logprob: -11.154358863830566
    10. ' ):' → logprob: -12.904358863830566

Token 1636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008256753906607628
    2. '   ' → logprob: -4.883256912231445
    3. '<|end|>' → logprob: -8.008256912231445
    4. '```' → logprob: -9.383256912231445
    5. '	   ' → logprob: -9.883256912231445
    6. ',' → logprob: -10.133256912231445
    7. 'p' → logprob: -10.883256912231445
    8. '>' → logprob: -11.383256912231445
    9. 'n' → logprob: -11.758256912231445
    10. 'points' → logprob: -11.883256912231445

Token 1637: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.45682385563850403
    2. 'r' → logprob: -2.0818238258361816
    3. 'cx' → logprob: -2.3318238258361816
    4. 'c' → logprob: -2.4568238258361816
    5. 'p' → logprob: -4.206823825836182
    6. '   ' → logprob: -4.331823825836182
    7. 'a' → logprob: -4.956823825836182
    8. 'px' → logprob: -5.081823825836182
    9. 'xc' → logprob: -5.331823825836182
    10. 'xs' → logprob: -6.331823825836182

Token 1638: '0' (ID: 15)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28735339641571045
    2. '1' → logprob: -1.4123533964157104
    3. ',y' → logprob: -5.412353515625
    4. ' ,' → logprob: -7.037353515625
    5. '0' → logprob: -7.287353515625
    6. '_,' → logprob: -9.912353515625
    7. 'y' → logprob: -10.787353515625
    8. 's' → logprob: -10.912353515625
    9. 'p' → logprob: -11.537353515625
    10. '_' → logprob: -11.787353515625

Token 1639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008787082624621689
    2. ',y' → logprob: -7.500878810882568
    3. ' ,' → logprob: -8.37587833404541
    4. '=' → logprob: -9.75087833404541
    5. ',x' → logprob: -10.87587833404541
    6. ' =' → logprob: -12.62587833404541
    7. ',n' → logprob: -13.37587833404541
    8. ',q' → logprob: -13.37587833404541
    9. ',Y' → logprob: -13.75087833404541
    10. '_,' → logprob: -13.75087833404541

Token 1640: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00021307668066583574
    2. ' y' → logprob: -8.500212669372559
    3. 'x' → logprob: -11.875212669372559
    4. '	y' → logprob: -13.750212669372559
    5. '   ' → logprob: -15.250212669372559
    6. '_y' → logprob: -15.500212669372559
    7. ''y' → logprob: -15.500212669372559
    8. ',y' → logprob: -15.750212669372559
    9. ' ' → logprob: -16.500213623046875
    10. 'import' → logprob: -16.625213623046875

Token 1641: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.363617962459102e-05
    2. ',' → logprob: -9.500083923339844
    3. '1' → logprob: -12.375083923339844
    4. ' =' → logprob: -13.250083923339844
    5. '_' → logprob: -13.750083923339844
    6. '=' → logprob: -14.625083923339844
    7. ' ' → logprob: -14.750083923339844
    8. ')' → logprob: -14.750083923339844
    9. 'c' → logprob: -16.250083923339844
    10. 'o' → logprob: -16.875083923339844

Token 1642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16688108444213867
    2. '=' → logprob: -1.9168810844421387
    3. ' =' → logprob: -5.041881084442139
    4. ' ,' → logprob: -9.041881561279297
    5. ',x' → logprob: -9.916881561279297
    6. 'x' → logprob: -13.791881561279297
    7. ' ' → logprob: -14.166881561279297
    8. '=x' → logprob: -14.166881561279297
    9. ',r' → logprob: -14.666881561279297
    10. '=input' → logprob: -15.166881561279297

Token 1643: ' x' (ID: 1215)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04273458197712898
    2. 'x' → logprob: -3.2927346229553223
    3. 'c' → logprob: -7.167734622955322
    4. 'd' → logprob: -7.292734622955322
    5. 'xc' → logprob: -7.292734622955322
    6. 'xr' → logprob: -7.292734622955322
    7. 'cx' → logprob: -7.542734622955322
    8. 'z' → logprob: -8.292734146118164
    9. 'vx' → logprob: -8.792734146118164
    10. ' r' → logprob: -8.917734146118164

Token 1644: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10161720216274261
    2. '0' → logprob: -2.3516170978546143
    3. ',' → logprob: -6.726617336273193
    4. '=' → logprob: -9.101616859436035
    5. '2' → logprob: -9.976616859436035
    6. 'c' → logprob: -11.351616859436035
    7. ' =' → logprob: -11.476616859436035
    8. 'p' → logprob: -11.601616859436035
    9. ' ' → logprob: -12.726616859436035
    10. '_' → logprob: -13.101616859436035

Token 1645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4021237802808173e-05
    2. ' ,' → logprob: -11.750014305114746
    3. '=' → logprob: -12.750014305114746
    4. ',x' → logprob: -13.875014305114746
    5. ' =' → logprob: -14.000014305114746
    6. ',y' → logprob: -14.375014305114746
    7. '<|end|>' → logprob: -14.875014305114746
    8. ',
' → logprob: -16.62501335144043
    9. ',input' → logprob: -16.75001335144043
    10. '‌,' → logprob: -17.25001335144043

Token 1646: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5159293413162231
    2. 'x' → logprob: -1.0159293413162231
    3. ' y' → logprob: -3.2659292221069336
    4. ' x' → logprob: -5.890929222106934
    5. '<|end|>' → logprob: -10.640929222106934
    6. ',' → logprob: -11.015929222106934
    7. ' ' → logprob: -11.265929222106934
    8. 'z' → logprob: -13.140929222106934
    9. '  ' → logprob: -13.515929222106934
    10. '   ' → logprob: -13.640929222106934

Token 1647: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002266622323077172
    2. '1' → logprob: -9.000226974487305
    3. ',' → logprob: -9.250226974487305
    4. ' ' → logprob: -12.375226974487305
    5. ' =' → logprob: -13.625226974487305
    6. '=' → logprob: -13.625226974487305
    7. '   ' → logprob: -15.875226974487305
    8. '  ' → logprob: -16.625226974487305
    9. '2' → logprob: -16.875226974487305
    10. ')' → logprob: -17.000226974487305

Token 1648: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4749654531478882
    2. ' =' → logprob: -1.2249654531478882
    3. ',' → logprob: -2.4749655723571777
    4. ',x' → logprob: -8.97496509552002
    5. ' ,' → logprob: -10.84996509552002
    6. '=x' → logprob: -12.22496509552002
    7. ' ' → logprob: -12.34996509552002
    8. '=input' → logprob: -13.84996509552002
    9. 'x' → logprob: -14.34996509552002
    10. ')' → logprob: -14.47496509552002

Token 1649: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01913350075483322
    2. 'r' → logprob: -4.269133567810059
    3. 'xc' → logprob: -6.019133567810059
    4. 'cx' → logprob: -7.394133567810059
    5. ' x' → logprob: -7.644133567810059
    6. 'z' → logprob: -8.269133567810059
    7. 'xp' → logprob: -8.769133567810059
    8. 'xr' → logprob: -8.769133567810059
    9. 'c' → logprob: -9.269133567810059
    10. 'a' → logprob: -9.269133567810059

Token 1650: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000628683075774461
    2. '2' → logprob: -7.500628471374512
    3. ',' → logprob: -9.500628471374512
    4. '1' → logprob: -15.813128471374512
    5. 'o' → logprob: -15.938128471374512
    6. ',y' → logprob: -16.125629425048828
    7. ' ' → logprob: -16.500629425048828
    8. '```' → logprob: -16.625629425048828
    9. ' =' → logprob: -16.813129425048828
    10. '_,' → logprob: -17.125629425048828

Token 1651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. '<|end|>' → logprob: -12.250007629394531
    3. ' ,' → logprob: -13.875007629394531
    4. '=' → logprob: -13.875007629394531
    5. ',y' → logprob: -15.000007629394531
    6. ' =' → logprob: -15.125007629394531
    7. ',user' → logprob: -16.37500762939453
    8. '<|end|>' → logprob: -16.62500762939453
    9. 'import' → logprob: -16.87500762939453
    10. ',line' → logprob: -16.87500762939453

Token 1652: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018151111900806427
    2. ' y' → logprob: -4.01815128326416
    3. 'x' → logprob: -13.76815128326416
    4. '<|end|>' → logprob: -16.143150329589844
    5. ' ' → logprob: -16.893150329589844
    6. '	y' → logprob: -18.518150329589844
    7. ',' → logprob: -18.643150329589844
    8. ',y' → logprob: -18.768150329589844
    9. '   ' → logprob: -19.018150329589844
    10. ''y' → logprob: -19.393150329589844

Token 1653: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04865027591586113
    2. '2' → logprob: -3.0486502647399902
    3. '=' → logprob: -11.048650741577148
    4. ' =' → logprob: -11.298650741577148
    5. ' ' → logprob: -11.423650741577148
    6. ',' → logprob: -11.423650741577148
    7. '1' → logprob: -12.298650741577148
    8. '```' → logprob: -12.673650741577148
    9. '   ' → logprob: -13.673650741577148
    10. '<|end|>' → logprob: -13.923650741577148

Token 1654: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575944185256958
    2. ' =' → logprob: -0.825944185256958
    3. ',' → logprob: -12.575943946838379
    4. '   ' → logprob: -14.200943946838379
    5. ' ' → logprob: -15.200943946838379
    6. '=input' → logprob: -15.825943946838379
    7. '    ' → logprob: -15.950943946838379
    8. '  ' → logprob: -17.325944900512695
    9. ' ' → logprob: -17.450944900512695
    10. ':' → logprob: -17.450944900512695

Token 1655: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06444966048002243
    2. 'r' → logprob: -2.8144495487213135
    3. 'xc' → logprob: -6.814449787139893
    4. 'cx' → logprob: -8.439449310302734
    5. 'xr' → logprob: -8.564449310302734
    6. 'a' → logprob: -8.689449310302734
    7. ' x' → logprob: -8.939449310302734
    8. ' =' → logprob: -9.439449310302734
    9. 'd' → logprob: -9.689449310302734
    10. 'xp' → logprob: -9.814449310302734

Token 1656: '3' (ID: 18)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16369712352752686
    2. '3' → logprob: -1.9136971235275269
    3. '2' → logprob: -6.163697242736816
    4. '1' → logprob: -7.288697242736816
    5. ',' → logprob: -7.788697242736816
    6. ' =' → logprob: -8.788697242736816
    7. '=' → logprob: -9.663697242736816
    8. 'import' → logprob: -11.038697242736816
    9. '<|end|>' → logprob: -11.913697242736816
    10. 'def' → logprob: -12.288697242736816

Token 1657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. '=' → logprob: -12.625007629394531
    3. ' =' → logprob: -14.125007629394531
    4. ' ,' → logprob: -14.125007629394531
    5. ',input' → logprob: -14.375007629394531
    6. ',line' → logprob: -14.375007629394531
    7. '<|end|>' → logprob: -14.750007629394531
    8. ',
' → logprob: -16.00000762939453
    9. ',x' → logprob: -16.00000762939453
    10. ',q' → logprob: -16.12500762939453

Token 1658: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011053244583308697
    2. ' y' → logprob: -4.511053085327148
    3. 'x' → logprob: -12.136053085327148
    4. '	y' → logprob: -19.38605308532715
    5. ' x' → logprob: -19.88605308532715
    6. ',' → logprob: -20.51105308532715
    7. ' ' → logprob: -20.76105308532715
    8. '   ' → logprob: -21.01105308532715
    9. '```' → logprob: -21.26105308532715
    10. 'Y' → logprob: -21.51105308532715

Token 1659: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003434488025959581
    2. '0' → logprob: -8.000343322753906
    3. '2' → logprob: -12.250343322753906
    4. '   ' → logprob: -13.750343322753906
    5. '03' → logprob: -14.500343322753906
    6. ' ' → logprob: -14.750343322753906
    7. '```' → logprob: -15.562843322753906
    8. 'import' → logprob: -16.187843322753906
    9. '=' → logprob: -16.562843322753906
    10. '    ' → logprob: -16.625343322753906

Token 1660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692883610725403
    2. ' =' → logprob: -2.1269288063049316
    3. '   ' → logprob: -14.75192928314209
    4. ',' → logprob: -15.75192928314209
    5. ' ' → logprob: -15.87692928314209
    6. '    ' → logprob: -16.376928329467773
    7. '=
' → logprob: -17.501928329467773
    8. '	' → logprob: -18.001928329467773
    9. '＝' → logprob: -18.001928329467773
    10. '       ' → logprob: -18.001928329467773

Token 1661: ' \
' (ID: 6814)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.04859134554862976
    2. ' map' → logprob: -3.048591375350952
    3. '   ' → logprob: -12.673591613769531
    4. 'list' → logprob: -14.548591613769531
    5. '	map' → logprob: -15.548591613769531
    6. '(map' → logprob: -15.923591613769531
    7. 'm' → logprob: -17.04859161376953
    8. ' list' → logprob: -17.29859161376953
    9. 'tuple' → logprob: -17.54859161376953
    10. ' ' → logprob: -17.67359161376953

Token 1662: '           ' (ID: 352)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3133363723754883
    2. 'map' → logprob: -1.3133363723754883
    3. '   ' → logprob: -9.563336372375488
    4. '       ' → logprob: -12.563336372375488
    5. '(map' → logprob: -15.063336372375488
    6. '[' → logprob: -15.938336372375488
    7. '    ' → logprob: -16.063335418701172
    8. '	map' → logprob: -16.188335418701172
    9. 'm' → logprob: -16.313335418701172
    10. ' list' → logprob: -16.438335418701172

Token 1663: ' [' (ID: 723)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -9.710618905955926e-05
    2. ' map' → logprob: -9.250097274780273
    3. 'list' → logprob: -14.250097274780273
    4. '   ' → logprob: -15.500097274780273
    5. '(map' → logprob: -17.500097274780273
    6. '[' (adapté à ' [') → logprob: -17.625097274780273
    7. '	map' → logprob: -19.000097274780273
    8. 'tuple' → logprob: -19.875097274780273
    9. '       ' → logprob: -21.375097274780273
    10. '  ' → logprob: -22.000097274780273

Token 1664: 'int' (ID: 491)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004102146718651056
    2. 'int' → logprob: -5.5041022300720215
    3. ' float' → logprob: -11.254101753234863
    4. '*' → logprob: -11.504101753234863
    5. '   ' → logprob: -15.004101753234863
    6. '
' → logprob: -15.254101753234863
    7. 'flo' → logprob: -16.62910270690918
    8. '```' → logprob: -17.75410270690918
    9. 'map' → logprob: -18.00410270690918
    10. '	float' → logprob: -18.25410270690918

Token 1665: '(x' (ID: 4061)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0775863379240036
    2. '(i' → logprob: -3.0775864124298096
    3. '(x' → logprob: -3.5775864124298096
    4. 'input' → logprob: -7.5775861740112305
    5. '(token' → logprob: -10.57758617401123
    6. '(a' → logprob: -10.57758617401123
    7. '(_)' → logprob: -10.57758617401123
    8. '(s' → logprob: -11.07758617401123
    9. '(inp' → logprob: -11.45258617401123
    10. '(n' → logprob: -12.20258617401123

Token 1666: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5018495917320251
    2. ')' → logprob: -1.75184965133667
    3. '()' → logprob: -2.62684965133667
    4. '(input' → logprob: -3.00184965133667
    5. ' for' → logprob: -3.12684965133667
    6. '(x' → logprob: -3.62684965133667
    7. 'input' → logprob: -3.87684965133667
    8. 'in' → logprob: -5.37684965133667
    9. '   ' → logprob: -6.50184965133667
    10. '(i' → logprob: -7.62684965133667

Token 1667: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14772945642471313
    2. ' for' → logprob: -2.1477293968200684
    3. '(input' → logprob: -4.272729396820068
    4. '()' → logprob: -5.772729396820068
    5. 'input' → logprob: -5.772729396820068
    6. '(x' → logprob: -8.522729873657227
    7. 'in' → logprob: -9.397729873657227
    8. '(i' → logprob: -10.147729873657227
    9. ' input' → logprob: -10.147729873657227
    10. '   ' → logprob: -10.647729873657227

Token 1668: ' x' (ID: 1215)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014163747429847717
    2. ' input' → logprob: -4.264163970947266
    3. 'range' → logprob: -15.389163970947266
    4. '(input' → logprob: -17.014163970947266
    5. '
' → logprob: -18.764163970947266
    6. '_input' → logprob: -19.139163970947266
    7. 'Input' → logprob: -19.639163970947266
    8. 'in' → logprob: -20.139163970947266
    9. '=input' → logprob: -20.264163970947266
    10. ' range' → logprob: -20.514163970947266

Token 1669: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1739349663257599
    2. 'in' → logprob: -2.4239349365234375
    3. 'input' → logprob: -2.6739349365234375
    4. '(input' → logprob: -6.4239349365234375
    5. ' input' → logprob: -8.298934936523438
    6. 'import' → logprob: -8.923934936523438
    7. '(' → logprob: -10.423934936523438
    8. ',input' → logprob: -11.423934936523438
    9. '=input' → logprob: -11.548934936523438
    10. '   ' → logprob: -12.173934936523438

Token 1670: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002613358374219388
    2. ' input' → logprob: -8.250261306762695
    3. '(input' → logprob: -21.625261306762695
    4. '
' → logprob: -21.750261306762695
    5. 'Input' → logprob: -22.250261306762695
    6. 'range' → logprob: -22.375261306762695
    7. '<input' → logprob: -22.500261306762695
    8. '_input' → logprob: -23.125261306762695
    9. '   ' → logprob: -23.375261306762695
    10. '	input' → logprob: -23.750261306762695

Token 1671: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -14.250000953674316
    3. ' ().' → logprob: -18.875
    4. '()]' → logprob: -20.0
    5. '(' → logprob: -20.375
    6. '()].' → logprob: -21.125
    7. '.split' → logprob: -21.25
    8. '("").' → logprob: -22.375
    9. '()
' → logprob: -22.875
    10. 'split' → logprob: -22.875

Token 1672: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015860427811276168
    2. 'strip' → logprob: -8.750158309936523
    3. 'rstrip' → logprob: -16.250158309936523
    4. '(split' → logprob: -16.625158309936523
    5. ' split' → logprob: -17.625158309936523
    6. 'spl' → logprob: -17.750158309936523
    7. '.split' → logprob: -20.625158309936523
    8. 's' → logprob: -21.000158309936523
    9. '().' → logprob: -21.375158309936523
    10. 'sp' → logprob: -22.875158309936523

Token 1673: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0002656271681189537
    2. '()' → logprob: -8.250266075134277
    3. '()]
' → logprob: -13.250266075134277
    4. '(' → logprob: -13.500266075134277
    5. '())' → logprob: -13.875266075134277
    6. ']' → logprob: -15.500266075134277
    7. '('' → logprob: -17.62526512145996
    8. '()],' → logprob: -17.75026512145996
    9. '("' → logprob: -18.12526512145996
    10. '()].' → logprob: -18.37526512145996

Token 1674: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010525032877922058
    2. 'p' → logprob: -5.510525226593018
    3. 's' → logprob: -5.510525226593018
    4. '   ' → logprob: -6.510525226593018
    5. 'seg' → logprob: -8.26052474975586
    6. 'segment' → logprob: -9.13552474975586
    7. ' s' → logprob: -9.51052474975586
    8. ' p' → logprob: -9.51052474975586
    9. '
' → logprob: -9.63552474975586
    10. '        
' → logprob: -9.76052474975586

Token 1675: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9340032339096069
    2. 's' (adapté à ' s') → logprob: -1.184003233909607
    3. 'seg' → logprob: -1.559003233909607
    4. '       ' → logprob: -3.8090033531188965
    5. 'l' → logprob: -3.9340033531188965
    6. 'a' → logprob: -4.0590033531188965
    7. 'c' → logprob: -4.6840033531188965
    8. 'A' → logprob: -4.6840033531188965
    9. 'segment' → logprob: -5.4340033531188965
    10. '   ' → logprob: -5.6840033531188965

Token 1676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6449368000030518
    2. ' =' → logprob: -1.3949368000030518
    3. '0' → logprob: -1.5199368000030518
    4. 'eg' → logprob: -5.144936561584473
    5. 'egment' → logprob: -6.269936561584473
    6. 't' → logprob: -7.519936561584473
    7. '=' → logprob: -8.144936561584473
    8. 'g' → logprob: -9.894936561584473
    9. '   ' → logprob: -10.769936561584473
    10. 'e' → logprob: -10.894936561584473

Token 1677: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759470462799072
    2. ' =' → logprob: -0.8259470462799072
    3. ',' → logprob: -12.200946807861328
    4. '=
' → logprob: -13.950946807861328
    5. '1' → logprob: -14.325946807861328
    6. ':' → logprob: -14.950946807861328
    7. ' =
' → logprob: -15.575946807861328
    8. '   ' → logprob: -15.950946807861328
    9. ' ' → logprob: -16.450946807861328
    10. ')' → logprob: -16.575946807861328

Token 1678: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.981667537620524e-06
    2. ' Segment' → logprob: -13.250001907348633
    3. 'Line' → logprob: -15.875001907348633
    4. 'Seg' → logprob: -19.125001907348633
    5. 'Vector' → logprob: -19.125001907348633
    6. 'Point' → logprob: -20.375001907348633
    7. 'Section' → logprob: -21.500001907348633
    8. '   ' → logprob: -22.250001907348633
    9. 'Segments' → logprob: -22.750001907348633
    10. 'segment' → logprob: -23.750001907348633

Token 1679: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.011164659634232521
    2. 'Point' → logprob: -4.511164665222168
    3. '(
' → logprob: -9.136164665222168
    4. ' Point' → logprob: -11.886164665222168
    5. '	Point' → logprob: -14.011164665222168
    6. '(' → logprob: -14.386164665222168
    7. '<Point' → logprob: -14.886164665222168
    8. '(P' → logprob: -15.636164665222168
    9. '   ' → logprob: -15.761164665222168
    10. '.Point' → logprob: -16.26116371154785

Token 1680: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004631384275853634
    2. 'x' → logprob: -5.379631519317627
    3. '(' → logprob: -11.629631042480469
    4. '(
' → logprob: -14.504631042480469
    5. ' x' → logprob: -14.754631042480469
    6. ' (' → logprob: -14.879631042480469
    7. '((' → logprob: -15.004631042480469
    8. ',x' → logprob: -15.629631042480469
    9. ')x' → logprob: -16.00463104248047
    10. ')' → logprob: -16.37963104248047

Token 1681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.176947600673884e-05
    2. '1' → logprob: -10.750021934509277
    3. '2' → logprob: -16.37502098083496
    4. '(x' → logprob: -17.12502098083496
    5. '(' → logprob: -17.50002098083496
    6. ' ' → logprob: -17.68752098083496
    7. '=' → logprob: -18.12502098083496
    8. 'o' → logprob: -18.18752098083496
    9. '۰' → logprob: -18.25002098083496
    10. '０' → logprob: -18.81252098083496

Token 1682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01254991628229618
    2. ',y' → logprob: -4.387549877166748
    3. ' ,' → logprob: -10.637550354003906
    4. 'y' → logprob: -12.012550354003906
    5. ',
' → logprob: -13.137550354003906
    6. ',x' → logprob: -13.387550354003906
    7. '<|end|>' → logprob: -13.387550354003906
    8. '),' → logprob: -14.012550354003906
    9. ')' → logprob: -14.262550354003906
    10. ',s' → logprob: -14.762550354003906

Token 1683: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.2166411478538066e-05
    2. ' y' → logprob: -9.875052452087402
    3. '	y' → logprob: -16.000051498413086
    4. '0' → logprob: -16.125051498413086
    5. 'x' → logprob: -16.500051498413086
    6. '(y' → logprob: -16.625051498413086
    7. '<|end|>' → logprob: -16.750051498413086
    8. ')y' → logprob: -16.750051498413086
    9. '   ' → logprob: -17.000051498413086
    10. ',y' → logprob: -17.750051498413086

Token 1684: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '1' → logprob: -17.375
    4. ')' → logprob: -17.875
    5. '```' → logprob: -18.125
    6. 'o' → logprob: -18.5
    7. '
' → logprob: -18.75
    8. '۰' → logprob: -18.875
    9. '０' → logprob: -19.625
    10. '   ' → logprob: -19.9375

Token 1685: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024788661394268274
    2. '),' → logprob: -6.002479076385498
    3. ' ,' → logprob: -13.00247859954834
    4. '   ' → logprob: -14.37747859954834
    5. ',x' → logprob: -16.002479553222656
    6. ')' → logprob: -16.502479553222656
    7. ',
' → logprob: -16.877479553222656
    8. '),
' → logprob: -17.627479553222656
    9. '<Point' → logprob: -18.002479553222656
    10. ',),' → logprob: -18.002479553222656

Token 1686: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0004306692280806601
    2. ' Point' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.375431060791016
    4. '	Point' → logprob: -19.500431060791016
    5. '(Point' → logprob: -22.250431060791016
    6. '_point' → logprob: -23.375431060791016
    7. '_Point' → logprob: -23.500431060791016
    8. '<Point' → logprob: -23.875431060791016
    9. 'Points' → logprob: -24.000431060791016
    10. '.Point' → logprob: -24.500431060791016

Token 1687: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.25193148851394653
    2. 'x' → logprob: -1.5019314289093018
    3. '(' → logprob: -13.751931190490723
    4. ' x' → logprob: -14.626931190490723
    5. '(
' → logprob: -14.751931190490723
    6. ')x' → logprob: -15.251931190490723
    7. '	x' → logprob: -16.62693214416504
    8. ')' → logprob: -17.12693214416504
    9. '{x' → logprob: -17.37693214416504
    10. '```' → logprob: -17.62693214416504

Token 1688: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. '2' → logprob: -11.250015258789062
    3. '3' → logprob: -14.250015258789062
    4. 'x' → logprob: -14.375015258789062
    5. '
' → logprob: -15.250015258789062
    6. ',' → logprob: -15.250015258789062
    7. '(x' → logprob: -16.500015258789062
    8. ',x' → logprob: -16.625015258789062
    9. '```' → logprob: -16.875015258789062
    10. 's' → logprob: -17.000015258789062

Token 1689: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8789383830153383e-05
    2. ',y' → logprob: -11.000019073486328
    3. ' ,' → logprob: -13.500019073486328
    4. '<|end|>' → logprob: -15.375019073486328
    5. ',x' → logprob: -16.375019073486328
    6. ',
' → logprob: -16.625019073486328
    7. 'y' → logprob: -16.625019073486328
    8. '‌,' → logprob: -17.000019073486328
    9. '),' → logprob: -17.125019073486328
    10. '   ' → logprob: -17.750019073486328

Token 1690: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011703446507453918
    2. ' y' → logprob: -6.7511701583862305
    3. 'x' → logprob: -16.001171112060547
    4. '   ' → logprob: -17.751171112060547
    5. '	y' → logprob: -17.876171112060547
    6. ' ' → logprob: -18.126171112060547
    7. ')y' → logprob: -18.251171112060547
    8. '    ' → logprob: -19.126171112060547
    9. ')' → logprob: -19.251171112060547
    10. '<|end|>' → logprob: -19.251171112060547

Token 1691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. '0' → logprob: -10.000075340270996
    3. ')' → logprob: -11.125075340270996
    4. ' ' → logprob: -11.500075340270996
    5. '```' → logprob: -13.375075340270996
    6. 'y' → logprob: -13.750075340270996
    7. '   ' → logprob: -14.500075340270996
    8. '))' → logprob: -15.250075340270996
    9. '<|end|>' → logprob: -15.625075340270996
    10. '<|end|>' → logprob: -15.750075340270996

Token 1692: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007957580499351025
    2. '))' → logprob: -5.007957458496094
    3. ')
' → logprob: -6.757957458496094
    4. '       ' → logprob: -9.632957458496094
    5. '))
' → logprob: -11.382957458496094
    6. '   ' → logprob: -13.757957458496094
    7. ')
' → logprob: -14.757957458496094
    8. ' )' → logprob: -15.132957458496094
    9. ')))' → logprob: -15.382957458496094
    10. ')

' → logprob: -15.507957458496094

Token 1693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0791701227426529
    2. 's' → logprob: -2.5791702270507812
    3. ' s' → logprob: -8.204170227050781
    4. '   ' → logprob: -11.954170227050781
    5. '           ' → logprob: -15.579170227050781
    6. ' ' → logprob: -15.704170227050781
    7. '      ' → logprob: -17.07917022705078
    8. '	' → logprob: -17.20417022705078
    9. '	s' → logprob: -17.57917022705078
    10. '     ' → logprob: -17.95417022705078

Token 1694: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.00016110755677800626
    2. '       ' → logprob: -8.750161170959473
    3. ' s' → logprob: -12.875161170959473
    4. '   ' → logprob: -17.250160217285156
    5. '           ' → logprob: -17.625160217285156
    6. '        ' → logprob: -21.625160217285156
    7. '      ' → logprob: -22.000160217285156
    8. '	s' → logprob: -22.125160217285156
    9. '     ' → logprob: -22.125160217285156
    10. '               ' → logprob: -22.375160217285156

Token 1695: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.319370302458992e-06
    2. 's' → logprob: -13.125005722045898
    3. '3' → logprob: -13.125005722045898
    4. '   ' → logprob: -14.750005722045898
    5. ' ' → logprob: -14.875005722045898
    6. 'Segment' → logprob: -15.125005722045898
    7. ' s' → logprob: -16.7500057220459
    8. '       ' → logprob: -16.7500057220459
    9. '1' → logprob: -16.8750057220459
    10. '(' → logprob: -17.3750057220459

Token 1696: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868710398674011
    2. '=' → logprob: -1.136871099472046
    3. 's' → logprob: -17.886871337890625
    4. ' ' → logprob: -18.511871337890625
    5. '＝' → logprob: -18.761871337890625
    6. ')' → logprob: -19.011871337890625
    7. ' =
' → logprob: -19.886871337890625
    8. '=
' → logprob: -20.011871337890625
    9. ' =
' → logprob: -20.886871337890625
    10. ' =)' → logprob: -20.886871337890625

Token 1697: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -7.553032628493384e-05
    2. ' Segment' → logprob: -9.500075340270996
    3. 'Point' → logprob: -14.375075340270996
    4. 'Seg' → logprob: -18.375076293945312
    5. '_segment' → logprob: -20.125076293945312
    6. 'Section' → logprob: -21.375076293945312
    7. 'Segments' → logprob: -21.375076293945312
    8. 'segment' → logprob: -21.500076293945312
    9. '   ' → logprob: -21.625076293945312
    10. 'Vector' → logprob: -23.250076293945312

Token 1698: '(Point' (ID: 72072)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.4740990400314331
    2. '(Point' → logprob: -0.9740990400314331
    3. ' Point' → logprob: -10.724099159240723
    4. '	Point' → logprob: -16.724098205566406
    5. '.Point' → logprob: -18.349098205566406
    6. 'Segment' → logprob: -18.849098205566406
    7. '<Point' → logprob: -19.099098205566406
    8. '_Point' → logprob: -19.349098205566406
    9. '_point' → logprob: -20.224098205566406
    10. 'Points' → logprob: -21.474098205566406

Token 1699: '(x' (ID: 4061)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3196427822113037
    2. '(Point' → logprob: -1.3196427822113037
    3. '(x' → logprob: -5.069643020629883
    4. 'x' → logprob: -9.944643020629883
    5. ' Point' → logprob: -10.819643020629883
    6. '<Point' → logprob: -12.569643020629883
    7. '.Point' → logprob: -13.194643020629883
    8. '	Point' → logprob: -13.319643020629883
    9. '(
' → logprob: -15.069643020629883
    10. 'Points' → logprob: -15.444643020629883

Token 1700: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '
' → logprob: -14.750000953674316
    3. '3' → logprob: -15.000000953674316
    4. 'x' → logprob: -15.625000953674316
    5. '0' → logprob: -17.125001907348633
    6. '```' → logprob: -17.187501907348633
    7. '``' → logprob: -17.375001907348633
    8. '(x' → logprob: -17.812501907348633
    9. 's' → logprob: -18.312501907348633
    10. '   ' → logprob: -18.437501907348633

Token 1701: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016957100888248533
    2. ',y' → logprob: -8.75016975402832
    3. ' ,' → logprob: -11.62516975402832
    4. '(' → logprob: -13.50016975402832
    5. '<|end|>' → logprob: -15.62516975402832
    6. 'y' → logprob: -15.87516975402832
    7. '(y' → logprob: -16.00016975402832
    8. ' y' → logprob: -16.12516975402832
    9. ',x' → logprob: -16.75016975402832
    10. ',
' → logprob: -16.87516975402832

Token 1702: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01815134845674038
    2. ' y' → logprob: -4.01815128326416
    3. 'Point' → logprob: -13.51815128326416
    4. ' Point' → logprob: -17.143152236938477
    5. '   ' → logprob: -17.893152236938477
    6. '	y' → logprob: -18.018152236938477
    7. 'x' → logprob: -18.268152236938477
    8. ' ' → logprob: -19.268152236938477
    9. '<|end|>' → logprob: -19.268152236938477
    10. '(y' → logprob: -19.393152236938477

Token 1703: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000111768240458332
    2. '3' → logprob: -9.25011157989502
    3. ' ' → logprob: -11.50011157989502
    4. '   ' → logprob: -13.25011157989502
    5. ',' → logprob: -13.75011157989502
    6. '0' → logprob: -14.25011157989502
    7. '```' → logprob: -14.25011157989502
    8. 'y' → logprob: -15.00011157989502
    9. ' y' → logprob: -15.62511157989502
    10. 'x' → logprob: -16.000112533569336

Token 1704: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5759724974632263
    2. '),' → logprob: -0.8259724974632263
    3. ' ,' → logprob: -11.200972557067871
    4. '   ' → logprob: -11.700972557067871
    5. ')' → logprob: -12.450972557067871
    6. '       ' → logprob: -13.200972557067871
    7. '),
' → logprob: -13.825972557067871
    8. ' ),' → logprob: -13.950972557067871
    9. '(),' → logprob: -13.950972557067871
    10. ',),' → logprob: -14.575972557067871

Token 1705: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0485873706638813
    2. ' Point' → logprob: -3.0485873222351074
    3. '	Point' → logprob: -17.298587799072266
    4. '(Point' → logprob: -17.923587799072266
    5. '<Point' → logprob: -20.048587799072266
    6. '.Point' → logprob: -20.173587799072266
    7. '_Point' → logprob: -20.548587799072266
    8. '_point' → logprob: -20.798587799072266
    9. '   ' → logprob: -21.923587799072266
    10. ' point' → logprob: -22.048587799072266

Token 1706: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07934874296188354
    2. '(x' → logprob: -2.5793488025665283
    3. 'Point' → logprob: -7.704348564147949
    4. ' x' → logprob: -11.95434856414795
    5. '(Point' → logprob: -13.95434856414795
    6. '   ' → logprob: -15.82934856414795
    7. '```' → logprob: -16.079349517822266
    8. '(' → logprob: -16.079349517822266
    9. ',x' → logprob: -16.329349517822266
    10. '(
' → logprob: -16.579349517822266

Token 1707: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.25
    3. ' ' → logprob: -16.625
    4. '```' → logprob: -17.375
    5. '   ' → logprob: -18.625
    6. '
' → logprob: -19.25
    7. '    ' → logprob: -20.0
    8. '1' → logprob: -20.0
    9. '۳' → logprob: -20.125
    10. ',' → logprob: -20.125

Token 1708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.127333340875339e-06
    2. ',y' → logprob: -12.750003814697266
    3. ' ,' → logprob: -14.500003814697266
    4. '),' → logprob: -15.375003814697266
    5. ',
' → logprob: -15.500003814697266
    6. ')' → logprob: -16.000003814697266
    7. ',x' → logprob: -16.500003814697266
    8. 'y' → logprob: -16.875003814697266
    9. '<|end|>' → logprob: -16.875003814697266
    10. '```' → logprob: -17.250003814697266

Token 1709: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07891886681318283
    2. ' y' → logprob: -2.578918933868408
    3. 'x' → logprob: -10.45391845703125
    4. ' x' → logprob: -15.57891845703125
    5. ')y' → logprob: -17.95391845703125
    6. ' ' → logprob: -18.70391845703125
    7. '```' → logprob: -18.82891845703125
    8. ')' → logprob: -18.95391845703125
    9. '	y' → logprob: -19.45391845703125
    10. '   ' → logprob: -19.95391845703125

Token 1710: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -18.375
    4. '```' → logprob: -19.5
    5. ')' → logprob: -20.125
    6. 'x' → logprob: -20.125
    7. '۳' → logprob: -20.25
    8. 'з' → logprob: -21.3125
    9. '৩' → logprob: -21.375
    10. '    ' → logprob: -21.9375

Token 1711: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1424973713001236e-05
    2. ')
' → logprob: -11.250031471252441
    3. '))' → logprob: -11.500031471252441
    4. '       ' → logprob: -12.500031471252441
    5. '   ' → logprob: -13.250031471252441
    6. '())' → logprob: -13.375031471252441
    7. ' )' → logprob: -14.000031471252441
    8. ')`' → logprob: -16.125030517578125
    9. ')

' → logprob: -16.375030517578125
    10. ')s' → logprob: -16.875030517578125

Token 1712: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002978048287332058
    2. '   ' → logprob: -8.500297546386719
    3. 'print' → logprob: -9.375297546386719
    4. 'if' → logprob: -12.125297546386719
    5. 'result' → logprob: -12.625297546386719
    6. '        
' → logprob: -15.500297546386719
    7. '           ' → logprob: -15.625297546386719
    8. 's' → logprob: -16.37529754638672
    9. '<|end|>' → logprob: -16.37529754638672
    10. '
' → logprob: -16.62529754638672

Token 1713: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01327222865074873
    2. 'if' → logprob: -4.638272285461426
    3. 'res' → logprob: -6.388272285461426
    4. 'd' → logprob: -7.388272285461426
    5. '       ' → logprob: -7.513272285461426
    6. 'result' → logprob: -8.513272285461426
    7. 'dist' → logprob: -8.513272285461426
    8. 'r' → logprob: -9.513272285461426
    9. 'distance' → logprob: -9.888272285461426
    10. 'pr' → logprob: -10.013272285461426

Token 1714: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.10794930160045624
    2. '(' → logprob: -2.6079492568969727
    3. '(int' → logprob: -3.8579492568969727
    4. '("' → logprob: -5.232949256896973
    5. 's' → logprob: -6.857949256896973
    6. '(
' → logprob: -8.232949256896973
    7. '('' → logprob: -8.232949256896973
    8. 'int' → logprob: -8.857949256896973
    9. '1' → logprob: -9.107949256896973
    10. '(float' → logprob: -9.482949256896973

Token 1715: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5830472111701965
    2. '1' → logprob: -1.3330471515655518
    3. 'int' → logprob: -2.4580471515655518
    4. '"' → logprob: -2.9580471515655518
    5. '"s' → logprob: -3.8330471515655518
    6. ''s' → logprob: -4.333047389984131
    7. 'float' → logprob: -5.958047389984131
    8. ''' → logprob: -6.458047389984131
    9. '0' → logprob: -7.208047389984131
    10. ''int' → logprob: -8.708046913146973

Token 1716: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16078275442123413
    2. 'if' → logprob: -1.910782814025879
    3. ')' → logprob: -7.535782814025879
    4. '+' → logprob: -11.410782814025879
    5. '0' → logprob: -12.535782814025879
    6. '()' → logprob: -13.285782814025879
    7. '   ' → logprob: -13.285782814025879
    8. ',' → logprob: -13.660782814025879
    9. '*' → logprob: -13.910782814025879
    10. ' ' → logprob: -14.035782814025879

Token 1717: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006717386189848185
    2. ' s' → logprob: -5.006717205047607
    3. '   ' → logprob: -13.631717681884766
    4. ')' → logprob: -16.006717681884766
    5. '       ' → logprob: -16.006717681884766
    6. 'not' → logprob: -16.131717681884766
    7. '(s' → logprob: -16.381717681884766
    8. '
' → logprob: -16.631717681884766
    9. ' not' → logprob: -17.006717681884766
    10. '	s' → logprob: -17.381717681884766

Token 1718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02055765502154827
    2. 's' → logprob: -3.8955576419830322
    3. ' s' → logprob: -11.395557403564453
    4. '       ' → logprob: -13.895557403564453
    5. '(s' → logprob: -14.145557403564453
    6. '   ' → logprob: -14.145557403564453
    7. '<s' → logprob: -15.270557403564453
    8. '2' → logprob: -15.395557403564453
    9. '<|end|>' → logprob: -15.520557403564453
    10. '```' → logprob: -15.645557403564453

Token 1719: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -11.500012397766113
    3. ' .' → logprob: -13.750012397766113
    4. '.is' → logprob: -14.500012397766113
    5. ').' → logprob: -15.625012397766113
    6. '.Inter' → logprob: -16.12501335144043
    7. '.has' → logprob: -16.62501335144043
    8. '.cross' → logprob: -16.62501335144043
    9. '.s' → logprob: -16.87501335144043
    10. 'inter' → logprob: -17.00001335144043

Token 1720: 'sects' (ID: 105681)
  Prédit: 'sects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sects' → logprob: -0.00040886594797484577
    2. 's' → logprob: -8.250409126281738
    3. 'section' → logprob: -9.250409126281738
    4. 'ects' → logprob: -10.000409126281738
    5. 'se' → logprob: -13.000409126281738
    6. '```' → logprob: -14.000409126281738
    7. 'sect' → logprob: -14.125409126281738
    8. 'sections' → logprob: -14.375409126281738
    9. 'sets' → logprob: -14.375409126281738
    10. 'sec' → logprob: -15.500409126281738

Token 1721: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.9504606825648807e-05
    2. 's' → logprob: -11.500019073486328
    3. ' (' → logprob: -11.750019073486328
    4. '(' → logprob: -13.625019073486328
    5. '(
' → logprob: -16.000019073486328
    6. ' s' → logprob: -17.125019073486328
    7. ')' → logprob: -20.125019073486328
    8. '```' → logprob: -20.375019073486328
    9. ')(' → logprob: -20.875019073486328
    10. '((' → logprob: -21.500019073486328

Token 1722: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026575112715363503
    2. 's' → logprob: -3.6515750885009766
    3. '(s' → logprob: -8.651575088500977
    4. ' s' → logprob: -9.526575088500977
    5. '1' → logprob: -10.776575088500977
    6. '(' → logprob: -13.651575088500977
    7. '   ' → logprob: -14.026575088500977
    8. ')' → logprob: -14.026575088500977
    9. '       ' → logprob: -14.276575088500977
    10. ')s' → logprob: -14.401575088500977

Token 1723: ')' (ID: 8)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.14318498969078064
    2. ' or' → logprob: -2.1431849002838135
    3. 'else' → logprob: -4.143185138702393
    4. 'or' → logprob: -8.768184661865234
    5. ')' → logprob: -9.393184661865234
    6. ' and' → logprob: -12.018184661865234
    7. ' )' → logprob: -12.393184661865234
    8. ' ' → logprob: -13.893184661865234
    9. 'and' → logprob: -14.143184661865234
    10. '        ' → logprob: -14.393184661865234

Token 1724: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.022205078974366188
    2. 'else' → logprob: -3.897205114364624
    3. ')' → logprob: -6.897204875946045
    4. '<|end|>' → logprob: -8.147205352783203
    5. ' or' → logprob: -8.272205352783203
    6. ' and' → logprob: -10.397205352783203
    7. '==' → logprob: -10.522205352783203
    8. ' )' → logprob: -10.772205352783203
    9. 'and' → logprob: -11.772205352783203
    10. ',' → logprob: -12.022205352783203

Token 1725: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016034485772252083
    2. ' ' → logprob: -4.1410346031188965
    3. '1' → logprob: -16.641035079956055
    4. ')' → logprob: -16.766035079956055
    5. '2' → logprob: -17.391035079956055
    6. '"' → logprob: -18.266035079956055
    7. ' ' → logprob: -18.391035079956055
    8. '(' → logprob: -18.641035079956055
    9. ''' → logprob: -19.266035079956055
    10. '00' → logprob: -19.578535079956055

Token 1726: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '1' → logprob: -20.75000762939453
    4. '2' → logprob: -21.12500762939453
    5. '۰' → logprob: -21.50000762939453
    6. '０' → logprob: -21.75000762939453
    7. '00' → logprob: -22.00000762939453
    8. ')' → logprob: -22.25000762939453
    9. 'print' → logprob: -22.25000762939453
    10. '   ' → logprob: -22.50000762939453

Token 1727: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.750003814697266
    4. ')`' → logprob: -16.625003814697266
    5. '`)' → logprob: -16.750003814697266
    6. '))' → logprob: -16.750003814697266
    7. '<|end|>' → logprob: -16.750003814697266
    8. '())' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.125003814697266
    10. '```' → logprob: -17.125003814697266

Token 1728: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02907264232635498
    2. '<|end|>' → logprob: -3.6540727615356445
    3. '
' → logprob: -6.4040727615356445
    4. '```' → logprob: -7.1540727615356445
    5. ' if' → logprob: -8.529072761535645
    6. '#' → logprob: -9.654072761535645
    7. '<|end|>' → logprob: -10.279072761535645
    8. '\n' → logprob: -12.029072761535645
    9. '__' → logprob: -12.404072761535645
    10. '#!/' → logprob: -13.279072761535645

Token 1729: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12707027792930603
    2. ' __' → logprob: -2.127070188522339
    3. '_' → logprob: -9.127070426940918
    4. '_name' → logprob: -10.627070426940918
    5. '___' → logprob: -12.377070426940918
    6. 'name' → logprob: -13.502070426940918
    7. '/__' → logprob: -14.002070426940918
    8. 'if' → logprob: -14.377070426940918
    9. '.__' → logprob: -14.502070426940918
    10. '____' → logprob: -15.002070426940918

Token 1730: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.34248244762420654
    2. ' ==' → logprob: -1.3424824476242065
    3. '==' → logprob: -3.592482566833496
    4. ' __' → logprob: -6.967482566833496
    5. '_' → logprob: -8.467482566833496
    6. '=="' → logprob: -10.217482566833496
    7. '[' → logprob: -11.467482566833496
    8. '___' → logprob: -11.717482566833496
    9. '____' → logprob: -11.717482566833496
    10. '=='' → logprob: -11.842482566833496

Token 1731: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.128163257315464e-07
    2. '__.__' → logprob: -16.25
    3. '==' → logprob: -16.875
    4. '__
' → logprob: -17.125
    5. '____' → logprob: -17.5
    6. '__.' → logprob: -18.25
    7. '___' → logprob: -18.5
    8. 'name' → logprob: -18.625
    9. '__

' → logprob: -19.0
    10. '_' → logprob: -19.75

Token 1732: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16558119654655457
    2. '==' → logprob: -1.915581226348877
    3. ' ==' → logprob: -5.290581226348877
    4. '=="' → logprob: -8.290580749511719
    5. '=='' → logprob: -10.165580749511719
    6. '==
' → logprob: -11.915580749511719
    7. '=' → logprob: -12.540580749511719
    8. '_' → logprob: -14.040580749511719
    9. '===' → logprob: -14.040580749511719
    10. '__.__' → logprob: -14.165580749511719

Token 1733: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859089106321335
    2. ''' → logprob: -3.048590898513794
    3. '__' → logprob: -12.798590660095215
    4. ' "__' → logprob: -14.173590660095215
    5. ' '__' → logprob: -17.79859161376953
    6. '   ' → logprob: -18.67359161376953
    7. '("__' → logprob: -19.04859161376953
    8. '"<?' → logprob: -19.29859161376953
    9. '('__' → logprob: -19.79859161376953
    10. ''"' → logprob: -19.92359161376953

Token 1734: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008223761687986553
    2. '__' → logprob: -7.1258225440979
    3. '"' → logprob: -11.625822067260742
    4. 'name' → logprob: -13.000822067260742
    5. ''' → logprob: -13.125822067260742
    6. 'python' → logprob: -13.875822067260742
    7. 'm' → logprob: -14.750822067260742
    8. '__":
' → logprob: -14.750822067260742
    9. ''m' → logprob: -15.125822067260742
    10. '==' → logprob: -15.125822067260742

Token 1735: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16269607841968536
    2. '__' → logprob: -1.912696123123169
    3. '__':
' → logprob: -6.03769588470459
    4. '__
' → logprob: -9.53769588470459
    5. '__
' → logprob: -12.41269588470459
    6. '__["' → logprob: -13.03769588470459
    7. '__.' → logprob: -14.16269588470459
    8. '__:' → logprob: -14.53769588470459
    9. '__",' → logprob: -14.53769588470459
    10. '_' → logprob: -15.28769588470459

Token 1736: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07738930732011795
    2. 'main' → logprob: -2.7023892402648926
    3. '	main' → logprob: -5.577389240264893
    4. ' main' → logprob: -5.702389240264893
    5. '__' → logprob: -8.45238971710205
    6. '    
' → logprob: -10.32738971710205
    7. '_main' → logprob: -10.82738971710205
    8. '   ' → logprob: -10.82738971710205
    9. '  ' → logprob: -13.20238971710205
    10. '
' → logprob: -13.20238971710205

Token 1737: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.25
    3. '	main' → logprob: -21.0
    4. '_main' → logprob: -23.25
    5. '   ' → logprob: -24.625
    6. '.main' → logprob: -25.75
    7. '(main' → logprob: -26.0
    8. 'import' → logprob: -27.5
    9. 'Main' → logprob: -27.875
    10. 'mainwindow' → logprob: -28.375

Token 1738: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1736
Tokens correctement prédits (1ère position, stricte): 728
Tokens correctement prédits (1ère position, avec adaptation): 824
Tokens correctement prédits (top 10): 1561
Précision stricte (1ère position): 41.94%
Précision adaptée (1ère position): 47.47%
Précision (top 10): 89.92%
================================================================================
