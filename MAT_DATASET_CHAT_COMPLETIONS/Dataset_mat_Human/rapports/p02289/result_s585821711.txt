================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys, os, math, bisect, itertools, collections, heapq, queue, copy, array

# from scipy.sparse.csgraph import csgraph_from_dense, floyd_warshall
# from decimal import Decimal
# from collections import defaultdict, deque

sys.setrecursionlimit(10000000)

ii = lambda: int(sys.stdin.buffer.readline().rstrip())
il = lambda: list(map(int, sys.stdin.buffer.readline().split()))
fl = lambda: list(map(float, sys.stdin.buffer.readline().split()))
iln = lambda n: [int(sys.stdin.buffer.readline().rstrip()) for _ in range(n)]

iss = lambda: sys.stdin.buffer.readline().decode().rstrip()
sl = lambda: list(map(str, sys.stdin.buffer.readline().decode().split()))
isn = lambda n: [sys.stdin.buffer.readline().decode().rstrip() for _ in range(n)]

lcm = lambda x, y: (x * y) // math.gcd(x, y)

MOD = 10 ** 9 + 7
MAX = float('inf')

def main():
    if os.getenv("LOCAL"):
        sys.stdin = open("input.txt", "r")

    heap = []
    heapq.heapify(heap)

    while True:
        que = sl()
        if que[0] == 'end':
            break
        elif que[0] == 'insert':
            heapq.heappush(heap, int(que[1]) * (-1))
        elif que[0] == 'extract':
            print(heapq.heappop(heap) * (-1))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' os' (ID: 1994)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.002477677771821618
    2. ' os' → logprob: -6.002477645874023
    3. 'io' → logprob: -13.502477645874023
    4. '"os' → logprob: -15.377477645874023
    5. 'math' → logprob: -15.502477645874023
    6. 'json' → logprob: -16.502477645874023
    7. 're' → logprob: -16.627477645874023
    8. '	os' → logprob: -18.252477645874023
    9. 'sub' → logprob: -18.502477645874023
    10. 'import' → logprob: -18.627477645874023

Token 4: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.24048611521720886
    2. '<|end|>' → logprob: -2.1154861450195312
    3. '
' → logprob: -3.8654861450195312
    4. ',' → logprob: -4.115486145019531
    5. '

' → logprob: -4.240486145019531
    6. '.' → logprob: -4.240486145019531
    7. 'import' → logprob: -4.615486145019531
    8. '```' → logprob: -5.490486145019531
    9. '\' → logprob: -5.615486145019531
    10. 'newline' → logprob: -5.740486145019531

Token 5: ' math' (ID: 13324)
  Prédit: ' subprocess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subprocess' → logprob: -0.8022649884223938
    2. ' re' → logprob: -1.802264928817749
    3. 're' → logprob: -2.052264928817749
    4. ',' → logprob: -2.302264928817749
    5. 'json' → logprob: -3.552264928817749
    6. ' json' → logprob: -3.677264928817749
    7. ' ' → logprob: -3.677264928817749
    8. 'math' → logprob: -4.177265167236328
    9. ' pathlib' → logprob: -4.177265167236328
    10. ' os' → logprob: -4.802265167236328

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6095224618911743
    2. '<|end|>' → logprob: -1.3595224618911743
    3. '\n' → logprob: -2.2345223426818848
    4. '.' → logprob: -3.3595223426818848
    5. 'import' → logprob: -3.4845223426818848
    6. '
' → logprob: -4.609522342681885
    7. '

' → logprob: -5.359522342681885
    8. '<|end|>' → logprob: -5.484522342681885
    9. '' → logprob: -5.859522342681885
    10. '```' → logprob: -6.609522342681885

Token 7: ' bis' (ID: 7204)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.1003887876868248
    2. 're' → logprob: -2.600388765335083
    3. ' random' → logprob: -5.100389003753662
    4. 'json' → logprob: -5.225389003753662
    5. 'time' → logprob: -5.350389003753662
    6. 'it' → logprob: -6.475389003753662
    7. 'datetime' → logprob: -6.975389003753662
    8. ' re' → logprob: -7.350389003753662
    9. 'collections' → logprob: -7.475389003753662
    10. ' time' → logprob: -8.350388526916504

Token 8: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -7.660315895918757e-05
    2. 't' → logprob: -10.375076293945312
    3. 'ected' → logprob: -10.625076293945312
    4. 'e' → logprob: -11.500076293945312
    5. 'ection' → logprob: -13.250076293945312
    6. '```' → logprob: -13.500076293945312
    7. 'ector' → logprob: -13.625076293945312
    8. 'ec' → logprob: -13.875076293945312
    9. '>' → logprob: -13.875076293945312
    10. 'ectl' → logprob: -14.000076293945312

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2192174345254898
    2. '<|end|>' → logprob: -1.7192174196243286
    3. 'import' → logprob: -4.969217300415039
    4. '
' → logprob: -5.594217300415039
    5. '.' → logprob: -5.969217300415039
    6. '\n' → logprob: -6.469217300415039
    7. '<|end|>' → logprob: -7.344217300415039
    8. '

' → logprob: -7.594217300415039
    9. '```' → logprob: -7.594217300415039
    10. 'newline' → logprob: -8.219217300415039

Token 10: ' itertools' (ID: 103178)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.4757530093193054
    2. 'collections' → logprob: -1.2257530689239502
    3. 'it' → logprob: -3.10075306892395
    4. 'random' → logprob: -3.47575306892395
    5. 'copy' → logprob: -5.850752830505371
    6. ' heap' → logprob: -5.975752830505371
    7. 're' → logprob: -6.225752830505371
    8. ' itertools' → logprob: -7.100752830505371
    9. ' collections' → logprob: -8.100752830505371
    10. 'datetime' → logprob: -8.850752830505371

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0263527799397707
    2. '.' → logprob: -4.776352882385254
    3. 'import' → logprob: -4.776352882385254
    4. '<|end|>' → logprob: -5.151352882385254
    5. '\n' → logprob: -7.151352882385254
    6. '' → logprob: -7.651352882385254
    7. '```' → logprob: -7.901352882385254
    8. ' ,' → logprob: -8.776352882385254
    9. '
' → logprob: -8.776352882385254
    10. 'as' → logprob: -8.901352882385254

Token 12: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.36353909969329834
    2. ' collections' → logprob: -2.238539218902588
    3. ' functools' → logprob: -2.738539218902588
    4. 'operator' → logprob: -3.488539218902588
    5. 'random' → logprob: -3.738539218902588
    6. 'heap' → logprob: -3.863539218902588
    7. ' operator' → logprob: -3.863539218902588
    8. ' heap' → logprob: -4.238539218902588
    9. ' random' → logprob: -4.488539218902588
    10. 'fun' → logprob: -4.863539218902588

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2226478010416031
    2. 'import' → logprob: -2.4726479053497314
    3. '.' → logprob: -3.0976479053497314
    4. '\n' → logprob: -4.097647666931152
    5. '\' → logprob: -4.472647666931152
    6. '

' → logprob: -4.722647666931152
    7. '' → logprob: -4.722647666931152
    8. '<|end|>' → logprob: -4.847647666931152
    9. '
' → logprob: -5.097647666931152
    10. '```' → logprob: -6.097647666931152

Token 14: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0604352168738842
    2. 'fun' → logprob: -3.5604352951049805
    3. 'operator' → logprob: -4.8104352951049805
    4. ' heap' → logprob: -4.9354352951049805
    5. 'random' → logprob: -4.9354352951049805
    6. ' functools' → logprob: -5.9354352951049805
    7. 're' → logprob: -6.5604352951049805
    8. 'datetime' → logprob: -6.8104352951049805
    9. 'copy' → logprob: -7.0604352951049805
    10. 'queue' → logprob: -7.1854352951049805

Token 15: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -4.36574100604048e-06
    2. 'queue' → logprob: -12.500004768371582
    3. ' queue' → logprob: -15.375004768371582
    4. '```' → logprob: -16.125003814697266
    5. 'Queue' → logprob: -17.000003814697266
    6. 'u' → logprob: -17.250003814697266
    7. '_queue' → logprob: -17.875003814697266
    8. 'ify' → logprob: -18.125003814697266
    9. '	queue' → logprob: -18.250003814697266
    10. 'que' → logprob: -18.375003814697266

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1154099851846695
    2. '<|end|>' → logprob: -2.490410089492798
    3. 'import' → logprob: -4.365409851074219
    4. '.' → logprob: -4.740409851074219
    5. '```' → logprob: -6.490409851074219
    6. '\n' → logprob: -6.740409851074219
    7. '<|end|>' → logprob: -7.740409851074219
    8. '\' → logprob: -8.365409851074219
    9. '
' → logprob: -8.865409851074219
    10. ' ,' → logprob: -8.865409851074219

Token 17: ' queue' (ID: 13661)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.052628956735134125
    2. 'operator' → logprob: -4.052628993988037
    3. 'fun' → logprob: -4.302628993988037
    4. 'copy' → logprob: -4.927628993988037
    5. ' random' → logprob: -5.302628993988037
    6. ' functools' → logprob: -5.552628993988037
    7. 're' → logprob: -6.552628993988037
    8. ' operator' → logprob: -7.552628993988037
    9. 'string' → logprob: -7.552628993988037
    10. 'thread' → logprob: -7.802628993988037

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13799981772899628
    2. '<|end|>' → logprob: -2.5129997730255127
    3. 'import' → logprob: -3.5129997730255127
    4. '.' → logprob: -4.388000011444092
    5. '```' → logprob: -6.513000011444092
    6. '\n' → logprob: -7.013000011444092
    7. '<|end|>' → logprob: -7.263000011444092
    8. '
' → logprob: -7.638000011444092
    9. '

' → logprob: -7.888000011444092
    10. '\' → logprob: -8.012999534606934

Token 19: ' copy' (ID: 5150)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.1002461388707161
    2. 're' → logprob: -3.2252461910247803
    3. ' threading' → logprob: -3.8502461910247803
    4. 'thread' → logprob: -4.475245952606201
    5. ' random' → logprob: -4.475245952606201
    6. 'copy' → logprob: -5.725245952606201
    7. 'time' → logprob: -6.100245952606201
    8. 'fun' → logprob: -6.225245952606201
    9. ' functools' → logprob: -6.350245952606201
    10. ' copy' → logprob: -8.35024642944336

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053552206605672836
    2. '<|end|>' → logprob: -3.6785521507263184
    3. 'import' → logprob: -4.428552150726318
    4. '.' → logprob: -4.928552150726318
    5. '

' → logprob: -6.178552150726318
    6. '
' → logprob: -6.553552150726318
    7. ' ,' → logprob: -6.928552150726318
    8. '```' → logprob: -7.178552150726318
    9. '' → logprob: -7.303552150726318
    10. '\n' → logprob: -8.178552627563477

Token 21: ' array' (ID: 2644)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'random' → logprob: -0.028576351702213287
    2. 'thread' → logprob: -4.653576374053955
    3. 're' → logprob: -4.903576374053955
    4. 'time' → logprob: -6.153576374053955
    5. 'fun' → logprob: -6.153576374053955
    6. 'operator' → logprob: -6.403576374053955
    7. 'json' → logprob: -6.403576374053955
    8. 'datetime' → logprob: -6.653576374053955
    9. ' random' → logprob: -7.653576374053955
    10. 'string' → logprob: -7.778576374053955

Token 22: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15520352125167847
    2. '<|end|>' → logprob: -2.0302035808563232
    3. '.' → logprob: -5.155203342437744
    4. 'import' → logprob: -5.405203342437744
    5. '<|end|>' → logprob: -7.780203342437744
    6. '```' → logprob: -8.155203819274902
    7. '\n' → logprob: -8.155203819274902
    8. ' as' → logprob: -8.530203819274902
    9. ' ,' → logprob: -8.530203819274902
    10. 'newline' → logprob: -9.405203819274902

Token 23: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5619986057281494
    2. '<|end|>' → logprob: -1.1869986057281494
    3. '.' → logprob: -2.3119986057281494
    4. 'import' → logprob: -4.56199836730957
    5. ' as' → logprob: -5.18699836730957
    6. '<|end|>' → logprob: -6.18699836730957
    7. 'as' → logprob: -6.68699836730957
    8. '\n' → logprob: -6.68699836730957
    9. '
' → logprob: -7.18699836730957
    10. '\' → logprob: -7.43699836730957

Token 24: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009741212241351604
    2. ' This' → logprob: -6.259741306304932
    3. ' The' → logprob: -6.509741306304932
    4. ' Define' → logprob: -6.759741306304932
    5. ' import' → logprob: -7.009741306304932
    6. 'define' → logprob: -7.634741306304932
    7. ' -*-' → logprob: -7.759741306304932
    8. ' Given' → logprob: -8.134740829467773
    9. 'import' → logprob: -8.259740829467773
    10. ' Python' → logprob: -8.259740829467773

Token 25: ' scipy' (ID: 68933)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.9984896183013916
    2. ' collections' → logprob: -1.3734896183013916
    3. ' ' → logprob: -2.2484896183013916
    4. ' sklearn' → logprob: -2.3734896183013916
    5. ' typing' → logprob: -2.7484896183013916
    6. 'import' → logprob: -3.2484896183013916
    7. ' math' → logprob: -3.9984896183013916
    8. 'typing' → logprob: -4.8734893798828125
    9. ' datetime' → logprob: -4.9984893798828125
    10. 'datetime' → logprob: -5.1234893798828125

Token 26: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8720057606697083
    2. 'import' → logprob: -1.2470057010650635
    3. ' import' → logprob: -1.4970057010650635
    4. '.stats' → logprob: -3.2470057010650635
    5. '.optimize' → logprob: -3.9970057010650635
    6. '.interpolate' → logprob: -4.872005939483643
    7. '.special' → logprob: -6.372005939483643
    8. '.linalg' → logprob: -7.122005939483643
    9. '.s' → logprob: -7.247005939483643
    10. '.io' → logprob: -7.872005939483643

Token 27: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.01343479473143816
    2. 'patial' → logprob: -4.388434886932373
    3. 'pecial' → logprob: -8.138434410095215
    4. 't' → logprob: -8.263434410095215
    5. 'par' → logprob: -9.138434410095215
    6. 'pare' → logprob: -9.638434410095215
    7. 'p' → logprob: -9.888434410095215
    8. 'pat' → logprob: -10.013434410095215
    9. '```' → logprob: -10.638434410095215
    10. 'tat' → logprob: -11.138434410095215

Token 28: '.cs' (ID: 37596)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5258904695510864
    2. ' import' → logprob: -0.9008904695510864
    3. '.linalg' → logprob: -6.150890350341797
    4. '.' → logprob: -8.775890350341797
    5. '	import' → logprob: -9.150890350341797
    6. '<|end|>' → logprob: -9.275890350341797
    7. 'cs' → logprob: -9.400890350341797
    8. ' ' → logprob: -10.275890350341797
    9. 's' → logprob: -10.525890350341797
    10. 'matrix' → logprob: -10.650890350341797

Token 29: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08156700432300568
    2. 'r' → logprob: -2.5815670490264893
    3. 'parse' → logprob: -6.83156681060791
    4. 'raph' → logprob: -8.20656681060791
    5. 'matrix' → logprob: -8.20656681060791
    6. 'c' → logprob: -8.33156681060791
    7. '```' → logprob: -8.58156681060791
    8. 'rna' → logprob: -9.20656681060791
    9. 'rc' → logprob: -9.45656681060791
    10. 'rf' → logprob: -10.20656681060791

Token 30: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16225729882717133
    2. ' import' → logprob: -1.9122573137283325
    3. '_import' → logprob: -6.537257194519043
    4. '_' → logprob: -9.412257194519043
    5. '```' → logprob: -9.412257194519043
    6. '._' → logprob: -9.662257194519043
    7. '_connected' → logprob: -10.037257194519043
    8. 's' → logprob: -10.037257194519043
    9. 'connected' → logprob: -10.287257194519043
    10. 'cs' → logprob: -10.287257194519043

Token 31: ' cs' (ID: 14980)
  Prédit: '_short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_short' → logprob: -0.6995082497596741
    2. '_d' → logprob: -0.9495082497596741
    3. '_' → logprob: -3.3245081901550293
    4. '_connected' → logprob: -3.3245081901550293
    5. ' shortest' → logprob: -4.324508190155029
    6. 'd' → logprob: -4.574508190155029
    7. 'short' → logprob: -4.699508190155029
    8. 'connected' → logprob: -5.824508190155029
    9. '_l' → logprob: -6.199508190155029
    10. '_depth' → logprob: -6.699508190155029

Token 32: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0006130746915005147
    2. 'graphs' → logprob: -7.875613212585449
    3. '_graph' → logprob: -9.37561321258545
    4. 'r' → logprob: -9.75061321258545
    5. 'raph' → logprob: -9.75061321258545
    6. 'Graph' → logprob: -11.37561321258545
    7. 'plit' → logprob: -12.50061321258545
    8. 'f' → logprob: -12.62561321258545
    9. ' graph' → logprob: -13.00061321258545
    10. '```' → logprob: -13.75061321258545

Token 33: '_from' (ID: 12526)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.41812363266944885
    2. 'import' → logprob: -2.168123722076416
    3. '<|end|>' → logprob: -2.293123722076416
    4. ',' → logprob: -2.918123722076416
    5. '_' → logprob: -3.668123722076416
    6. '
' → logprob: -3.918123722076416
    7. '#' → logprob: -5.043123722076416
    8. '<|end|>' → logprob: -6.043123722076416
    9. '```' → logprob: -6.168123722076416
    10. 'newline' → logprob: -6.168123722076416

Token 34: '_dense' (ID: 199242)
  Prédit: 'dense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dense' → logprob: -0.0644620731472969
    2. '_dense' → logprob: -3.189462184906006
    3. 'sc' → logprob: -4.689462184906006
    4. 's' → logprob: -5.189462184906006
    5. '_sparse' → logprob: -7.064462184906006
    6. 'array' → logprob: -7.189462184906006
    7. '_s' → logprob: -7.564462184906006
    8. '_' → logprob: -7.939462184906006
    9. 'connected' → logprob: -7.939462184906006
    10. '```' → logprob: -8.189461708068848

Token 35: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.037570595741272
    2. ',' → logprob: -1.287570595741272
    3. '
' → logprob: -1.787570595741272
    4. '<|end|>' → logprob: -2.1625704765319824
    5. '\n' → logprob: -3.5375704765319824
    6. '' → logprob: -4.287570476531982
    7. '#' → logprob: -4.412570476531982
    8. 'newline' → logprob: -5.162570476531982
    9. '.' → logprob: -5.412570476531982
    10. '<|end|>' → logprob: -6.162570476531982

Token 36: ' flo' (ID: 15037)
  Prédit: 'cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.24196049571037292
    2. ' cs' → logprob: -2.9919605255126953
    3. 'minimum' → logprob: -2.9919605255126953
    4. '#' → logprob: -3.4919605255126953
    5. 'connected' → logprob: -3.6169605255126953
    6. 'csr' → logprob: -4.491960525512695
    7. 'd' → logprob: -4.991960525512695
    8. 'lap' → logprob: -5.241960525512695
    9. ' connected' → logprob: -5.491960525512695
    10. 'short' → logprob: -5.491960525512695

Token 37: 'yd' (ID: 3859)
  Prédit: 'yd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yd' → logprob: -0.8716729283332825
    2. 'od' → logprob: -1.7466728687286377
    3. 'at' → logprob: -1.8716728687286377
    4. 'w' → logprob: -1.9966728687286377
    5. 'y' → logprob: -3.6216728687286377
    6. 'd' → logprob: -3.8716728687286377
    7. 'o' → logprob: -3.9966728687286377
    8. 'r' → logprob: -4.746673107147217
    9. 'dy' → logprob: -4.996673107147217
    10. '```' → logprob: -5.496673107147217

Token 38: '_w' (ID: 3567)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16262100636959076
    2. '_
' → logprob: -3.287621021270752
    3. '_

' → logprob: -3.412621021270752
    4. 'import' → logprob: -4.162621021270752
    5. '_,' → logprob: -4.287621021270752
    6. '<|end|>' → logprob: -5.162621021270752
    7. '_numpy' → logprob: -5.162621021270752
    8. '_matrix' → logprob: -5.412621021270752
    9. ',' → logprob: -5.412621021270752
    10. 'def' → logprob: -5.537621021270752

Token 39: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.004425012972205877
    2. 'arshal' → logprob: -5.504425048828125
    3. 'a' → logprob: -9.504425048828125
    4. 'ар' → logprob: -9.629425048828125
    5. '```' → logprob: -9.629425048828125
    6. 'arst' → logprob: -10.379425048828125
    7. 'algorithm' → logprob: -10.879425048828125
    8. 'ars' → logprob: -11.129425048828125
    9. '_algorithm' → logprob: -11.129425048828125
    10. '``' → logprob: -11.254425048828125

Token 40: 'shall' (ID: 30275)
  Prédit: 'shall'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shall' → logprob: -0.0063698976300656796
    2. 'shal' → logprob: -5.6313700675964355
    3. 'sh' → logprob: -6.7563700675964355
    4. '```' → logprob: -7.1313700675964355
    5. 'shi' → logprob: -8.756369590759277
    6. 'all' → logprob: -8.756369590759277
    7. 's' → logprob: -9.006369590759277
    8. 'shaw' → logprob: -9.131369590759277
    9. 'hall' → logprob: -9.881369590759277
    10. 'shalling' → logprob: -10.631369590759277

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3063074052333832
    2. '<|end|>' → logprob: -1.6813074350357056
    3. '\n' → logprob: -3.806307315826416
    4. 'import' → logprob: -4.306307315826416
    5. ',' → logprob: -4.306307315826416
    6. '' → logprob: -4.806307315826416
    7. '

' → logprob: -4.931307315826416
    8. '#' → logprob: -5.556307315826416
    9. '```' → logprob: -6.181307315826416
    10. '
' → logprob: -6.681307315826416

Token 42: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' from' (ID: 591)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14428314566612244
    2. 'import' → logprob: -3.0192830562591553
    3. ' import' → logprob: -4.019283294677734
    4. '#' → logprob: -4.394283294677734
    5. 'def' → logprob: -4.519283294677734
    6. ' #' → logprob: -5.019283294677734
    7. ' def' → logprob: -5.144283294677734
    8. 'from' → logprob: -5.394283294677734
    9. ' graph' → logprob: -6.144283294677734
    10. 'd' → logprob: -6.269283294677734

Token 44: ' decimal' (ID: 26964)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sc' → logprob: -1.040051817893982
    2. ' scipy' → logprob: -1.540051817893982
    3. 'numpy' → logprob: -2.1650519371032715
    4. 'network' → logprob: -2.2900519371032715
    5. 'sk' → logprob: -2.6650519371032715
    6. ' network' → logprob: -2.7900519371032715
    7. ' numpy' → logprob: -2.9150519371032715
    8. ' collections' → logprob: -4.5400519371032715
    9. 'collections' → logprob: -4.7900519371032715
    10. ' sklearn' → logprob: -5.5400519371032715

Token 45: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.10141268372535706
    2. 'import' → logprob: -2.351412773132324
    3. '	import' → logprob: -7.476412773132324
    4. ' ' → logprob: -7.976412773132324
    5. '<|end|>' → logprob: -8.601412773132324
    6. '_import' → logprob: -10.726412773132324
    7. '.Decimal' → logprob: -10.851412773132324
    8. '.' → logprob: -10.976412773132324
    9. ',' → logprob: -11.601412773132324
    10. '<|end|>' → logprob: -11.726412773132324

Token 46: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.20494113862514496
    2. 'Decimal' → logprob: -1.7049411535263062
    3. 'decimal' → logprob: -6.704941272735596
    4. '.Decimal' → logprob: -7.329941272735596
    5. ' get' → logprob: -7.704941272735596
    6. 'import' → logprob: -8.079940795898438
    7. 'get' → logprob: -8.329940795898438
    8. ' decimal' → logprob: -8.579940795898438
    9. ' ' → logprob: -9.079940795898438
    10. ' ' → logprob: -9.454940795898438

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5710204839706421
    2. '

' → logprob: -1.196020483970642
    3. 'import' → logprob: -3.1960206031799316
    4. '<|end|>' → logprob: -3.1960206031799316
    5. '\n' → logprob: -4.071020603179932
    6. '' → logprob: -4.571020603179932
    7. ',' → logprob: -5.321020603179932
    8. '#' → logprob: -5.821020603179932
    9. 'n' → logprob: -6.071020603179932
    10. '\' → logprob: -6.071020603179932

Token 48: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3690706193447113
    2. '

' → logprob: -1.3690706491470337
    3. 'import' → logprob: -3.994070529937744
    4. '<|end|>' → logprob: -4.494070529937744
    5. '\n' → logprob: -4.994070529937744
    6. '#' → logprob: -4.994070529937744
    7. '' → logprob: -5.744070529937744
    8. '<|end|>' → logprob: -6.744070529937744
    9. '\' → logprob: -7.244070529937744
    10. 'class' → logprob: -7.369070529937744

Token 49: ' from' (ID: 591)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.523187518119812
    2. 'import' → logprob: -1.898187518119812
    3. ' ' → logprob: -1.898187518119812
    4. 'class' → logprob: -4.273187637329102
    5. ' 
' → logprob: -4.273187637329102
    6. 'n' → logprob: -4.398187637329102
    7. 'd' → logprob: -4.648187637329102
    8. ' 

' → logprob: -4.648187637329102
    9. 'def' → logprob: -4.898187637329102
    10. '<|end|>' → logprob: -5.023187637329102

Token 50: ' collections' (ID: 22690)
  Prédit: ' fractions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractions' → logprob: -0.4245290756225586
    2. 'fra' → logprob: -1.9245290756225586
    3. ' functools' → logprob: -2.4245290756225586
    4. ' math' → logprob: -3.1745290756225586
    5. ' typing' → logprob: -3.2995290756225586
    6. ' collections' → logprob: -4.674529075622559
    7. ' itertools' → logprob: -5.424529075622559
    8. 'math' → logprob: -5.924529075622559
    9. ' numpy' → logprob: -6.174529075622559
    10. 'collections' → logprob: -6.174529075622559

Token 51: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5419336557388306
    2. 'import' → logprob: -1.1669336557388306
    3. '.Counter' → logprob: -2.666933536529541
    4. 'abc' → logprob: -4.291933536529541
    5. '.default' → logprob: -5.666933536529541
    6. '#' → logprob: -5.666933536529541
    7. 'default' → logprob: -6.166933536529541
    8. 'from' → logprob: -6.791933536529541
    9. '<|end|>' → logprob: -6.916933536529541
    10. ' import' → logprob: -6.916933536529541

Token 52: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2784474492073059
    2. ' deque' → logprob: -1.9034473896026611
    3. 'deque' → logprob: -2.653447389602661
    4. 'default' → logprob: -4.52844762802124
    5. ' Counter' → logprob: -5.77844762802124
    6. 'Counter' → logprob: -5.77844762802124
    7. 'abc' → logprob: -6.02844762802124
    8. ' abc' → logprob: -6.15344762802124
    9. 'named' → logprob: -6.90344762802124
    10. ' named' → logprob: -7.02844762802124

Token 53: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7431386709213257
    2. '<|end|>' → logprob: -1.3681386709213257
    3. '\n' → logprob: -2.2431387901306152
    4. '

' → logprob: -2.4931387901306152
    5. 'import' → logprob: -3.3681387901306152
    6. '' → logprob: -4.743138790130615
    7. '<|end|>' → logprob: -4.993138790130615
    8. '#' → logprob: -4.993138790130615
    9. '\' → logprob: -5.118138790130615
    10. ',' → logprob: -5.493138790130615

Token 54: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.45909348130226135
    2. 'deque' → logprob: -1.709093451499939
    3. ' Counter' → logprob: -2.5840935707092285
    4. 'Counter' → logprob: -2.7090935707092285
    5. ' defaultdict' → logprob: -4.2090935707092285
    6. 'named' → logprob: -4.5840935707092285
    7. ' named' → logprob: -4.7090935707092285
    8. 'Ordered' → logprob: -5.3340935707092285
    9. ' Ordered' → logprob: -5.4590935707092285
    10. 'Deque' → logprob: -7.9590935707092285

Token 55: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7966534495353699
    2. '\n' → logprob: -1.4216535091400146
    3. '<|end|>' → logprob: -1.6716535091400146
    4. 'import' → logprob: -3.1716535091400146
    5. '

' → logprob: -3.4216535091400146
    6. '#' → logprob: -4.1716532707214355
    7. '\' → logprob: -4.9216532707214355
    8. ',' → logprob: -5.1716532707214355
    9. '<|end|>' → logprob: -5.4216532707214355
    10. '' → logprob: -5.4216532707214355

Token 56: 'sys' (ID: 17324)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32647815346717834
    2. '\n' → logprob: -2.5764782428741455
    3. '

' → logprob: -3.0764782428741455
    4. 'def' → logprob: -3.5764782428741455
    5. '\' → logprob: -3.7014782428741455
    6. 'd' → logprob: -3.8264782428741455
    7. '#' → logprob: -3.9514782428741455
    8. 'import' → logprob: -3.9514782428741455
    9. 'n' → logprob: -4.201478004455566
    10. '' → logprob: -4.701478004455566

Token 57: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.3676733690081164e-05
    2. ' .' → logprob: -12.12502384185791
    3. '.exit' → logprob: -13.00002384185791
    4. '.readline' → logprob: -13.00002384185791
    5. '<|end|>' → logprob: -13.25002384185791
    6. '.`' → logprob: -13.50002384185791
    7. '.import' → logprob: -13.75002384185791
    8. '.user' → logprob: -13.87502384185791
    9. '.stdout' → logprob: -14.50002384185791
    10. '.setdefault' → logprob: -14.50002384185791

Token 58: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.01552136056125164
    2. '_rec' → logprob: -4.76552152633667
    3. '_' → logprob: -6.51552152633667
    4. '_limit' → logprob: -6.64052152633667
    5. '_execution' → logprob: -7.01552152633667
    6. '_exc' → logprob: -7.39052152633667
    7. '_trace' → logprob: -7.51552152633667
    8. 'limit' → logprob: -8.265521049499512
    9. '_int' → logprob: -8.765521049499512
    10. 's' → logprob: -8.765521049499512

Token 59: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.023659447208046913
    2. 'urs' → logprob: -3.8986594676971436
    3. 'ur' → logprob: -5.8986592292785645
    4. 'urf' → logprob: -9.148659706115723
    5. 'ursive' → logprob: -9.398659706115723
    6. 'urse' → logprob: -10.398659706115723
    7. 'ut' → logprob: -10.398659706115723
    8. 't' → logprob: -10.773659706115723
    9. 'ursor' → logprob: -10.773659706115723
    10. 'urst' → logprob: -10.773659706115723

Token 60: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.012553567998111248
    2. '_limit' → logprob: -4.387553691864014
    3. 'lim' → logprob: -10.387553215026855
    4. '_depth' → logprob: -12.512553215026855
    5. 'al' → logprob: -12.637553215026855
    6. 'depth' → logprob: -13.137553215026855
    7. ' limit' → logprob: -13.387553215026855
    8. 'l' → logprob: -14.262553215026855
    9. '_' → logprob: -14.387553215026855
    10. '(limit' → logprob: -15.012553215026855

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2948405128554441e-05
    2. ' (' → logprob: -12.75001335144043
    3. '((' → logprob: -13.00001335144043
    4. '(
' → logprob: -13.12501335144043
    5. '("("' → logprob: -13.12501335144043
    6. '(

' → logprob: -13.87501335144043
    7. '()' → logprob: -14.25001335144043
    8. '```' → logprob: -15.37501335144043
    9. '(None' → logprob: -15.50001335144043
    10. '("""' → logprob: -15.62501335144043

Token 62: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0031828247010707855
    2. '100' → logprob: -5.753182888031006
    3. ' ' → logprob: -12.878182411193848
    4. '1' → logprob: -13.628182411193848
    5. '300' → logprob: -14.628182411193848
    6. '200' → logprob: -15.378182411193848
    7. '999' → logprob: -15.503182411193848
    8. '500' → logprob: -15.628182411193848
    9. 'int' → logprob: -15.753182411193848
    10. '400' → logprob: -15.753182411193848

Token 63: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.47413697838783264
    2. '000' → logprob: -0.9741369485855103
    3. '0' → logprob: -9.724137306213379
    4. '_' → logprob: -16.224136352539062
    5. '009' → logprob: -17.474136352539062
    6. '007' → logprob: -17.974136352539062
    7. '010' → logprob: -18.349136352539062
    8. '9' → logprob: -18.724136352539062
    9. '006' → logprob: -18.974136352539062
    10. '001' → logprob: -19.099136352539062

Token 64: '00' (ID: 504)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16023966670036316
    2. ')' → logprob: -1.9102396965026855
    3. ' )' → logprob: -12.660239219665527
    4. ')
' → logprob: -13.035239219665527
    5. '_' → logprob: -13.410239219665527
    6. '```' → logprob: -13.410239219665527
    7. '1' → logprob: -13.785239219665527
    8. '00' → logprob: -13.910239219665527
    9. '))' → logprob: -13.910239219665527
    10. ')\' → logprob: -14.160239219665527

Token 65: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.125001907348633
    3. ')
' → logprob: -15.750001907348633
    4. '))' → logprob: -18.375001907348633
    5. ')

' → logprob: -18.500001907348633
    6. ')`' → logprob: -18.750001907348633
    7. '}' → logprob: -19.625001907348633
    8. '0' → logprob: -19.875001907348633
    9. '),' → logprob: -19.875001907348633
    10. '
' → logprob: -19.875001907348633

Token 66: 'ii' (ID: 3573)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7641710042953491
    2. '

' → logprob: -1.0141710042953491
    3. 'class' → logprob: -2.1391711235046387
    4. 'def' → logprob: -3.6391711235046387
    5. 'n' → logprob: -3.8891711235046387
    6. '
' → logprob: -5.514171123504639
    7. '\n' → logprob: -7.389171123504639
    8. 'd' → logprob: -7.514171123504639
    9. '```' → logprob: -7.764171123504639
    10. '\' → logprob: -8.13917064666748

Token 67: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06162510812282562
    2. 'nt' → logprob: -3.3116250038146973
    3. 'np' → logprob: -4.311625003814697
    4. 'nit' → logprob: -4.686625003814697
    5. 'p' → logprob: -8.561625480651855
    6. 't' → logprob: -8.686625480651855
    7. 'put' → logprob: -9.311625480651855
    8. '()' → logprob: -10.061625480651855
    9. '=' → logprob: -10.311625480651855
    10. ' =' → logprob: -10.436625480651855

Token 68: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6431714296340942
    2. ' lambda' → logprob: -1.3931714296340942
    3. 'int' → logprob: -2.0181713104248047
    4. 'input' → logprob: -2.5181713104248047
    5. ' input' → logprob: -4.893171310424805
    6. ' int' → logprob: -6.018171310424805
    7. ' iter' → logprob: -6.893171310424805
    8. '0' → logprob: -7.143171310424805
    9. 'iter' → logprob: -7.393171310424805
    10. ' ' → logprob: -9.893171310424805

Token 69: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021096238866448402
    2. ' :' → logprob: -4.021096229553223
    3. ':int' → logprob: -6.021096229553223
    4. ' x' → logprob: -8.396096229553223
    5. 'int' → logprob: -9.771096229553223
    6. ' input' → logprob: -9.896096229553223
    7. ' i' → logprob: -9.896096229553223
    8. 'input' → logprob: -10.646096229553223
    9. ' a' → logprob: -11.146096229553223
    10. 'a' → logprob: -11.146096229553223

Token 70: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.016616291366518e-05
    2. ' int' → logprob: -10.000070571899414
    3. 'map' → logprob: -10.625070571899414
    4. 'input' → logprob: -15.875070571899414
    5. ' map' → logprob: -16.625070571899414
    6. 'sys' → logprob: -16.625070571899414
    7. '	int' → logprob: -16.875070571899414
    8. '(int' → logprob: -17.500070571899414
    9. '[int' → logprob: -17.500070571899414
    10. 'ints' → logprob: -17.750070571899414

Token 71: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007247737608850002
    2. '(' → logprob: -5.5072479248046875
    3. '(sys' → logprob: -5.7572479248046875
    4. ' (' → logprob: -13.507247924804688
    5. '(in' → logprob: -14.257247924804688
    6. '(
' → logprob: -14.382247924804688
    7. '(inp' → logprob: -14.382247924804688
    8. '(stdin' → logprob: -14.507247924804688
    9. 'input' → logprob: -14.632247924804688
    10. '(open' → logprob: -16.132247924804688

Token 72: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.68153518543113e-05
    2. '.' → logprob: -9.875057220458984
    3. '.readline' → logprob: -12.375057220458984
    4. '.argv' → logprob: -14.625057220458984
    5. '.stdout' → logprob: -15.000057220458984
    6. '.std' → logprob: -16.250057220458984
    7. '(stdin' → logprob: -16.625057220458984
    8. 'stdin' → logprob: -17.250057220458984
    9. ' stdin' → logprob: -18.000057220458984
    10. ' .' → logprob: -18.375057220458984

Token 73: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -6.468279752880335e-05
    2. '.' → logprob: -9.750064849853516
    3. '.read' → logprob: -12.000064849853516
    4. '.buffer' → logprob: -16.375064849853516
    5. ' readline' → logprob: -17.250064849853516
    6. ' .' → logprob: -17.875064849853516
    7. '.readlines' → logprob: -19.250064849853516
    8. '.stdin' → logprob: -19.625064849853516
    9. '.Read' → logprob: -20.125064849853516
    10. ').' → logprob: -20.500064849853516

Token 74: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003182348096743226
    2. '.read' → logprob: -5.753182411193848
    3. '.' → logprob: -12.503182411193848
    4. ' readline' → logprob: -14.378182411193848
    5. '_read' → logprob: -16.62818145751953
    6. '.recv' → logprob: -16.87818145751953
    7. '.re' → logprob: -17.12818145751953
    8. '.readlines' → logprob: -17.12818145751953
    9. '.Read' → logprob: -17.25318145751953
    10. ' .' → logprob: -17.37818145751953

Token 75: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004602672532200813
    2. '()' → logprob: -5.879602909088135
    3. '().' → logprob: -6.379602909088135
    4. '()[' → logprob: -10.004602432250977
    5. ' ())' → logprob: -10.629602432250977
    6. '(' → logprob: -11.629602432250977
    7. ')' → logprob: -12.129602432250977
    8. '();)' → logprob: -12.629602432250977
    9. '()]' → logprob: -12.879602432250977
    10. '())
' → logprob: -13.254602432250977

Token 76: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3222241699695587
    2. 'rstrip' → logprob: -1.3222241401672363
    3. 'read' → logprob: -4.822224140167236
    4. 'decode' → logprob: -7.447224140167236
    5. ')' → logprob: -8.447224617004395
    6. ' strip' → logprob: -10.322224617004395
    7. ' readline' → logprob: -10.572224617004395
    8. '())' → logprob: -12.447224617004395
    9. 'r' → logprob: -12.572224617004395
    10. 'split' → logprob: -12.697224617004395

Token 77: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07992580533027649
    2. 'b' → logprob: -2.579925775527954
    3. '()' → logprob: -7.829926013946533
    4. '(b' → logprob: -8.204925537109375
    5. ' b' → logprob: -8.454925537109375
    6. ')' → logprob: -9.704925537109375
    7. ' ())' → logprob: -10.204925537109375
    8. '())
' → logprob: -10.829925537109375
    9. '(' → logprob: -11.954925537109375
    10. '()==' → logprob: -12.329925537109375

Token 78: 'il' (ID: 311)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0187290906906128
    2. '\n' → logprob: -2.1437292098999023
    3. '(' → logprob: -2.3937292098999023
    4. '_' → logprob: -2.5187292098999023
    5. '()' → logprob: -2.6437292098999023
    6. 'def' → logprob: -2.8937292098999023
    7. '' → logprob: -3.6437292098999023
    8. 'nl' → logprob: -3.7687292098999023
    9. 'n' → logprob: -3.8937292098999023
    10. '<|end|>' → logprob: -4.143729209899902

Token 79: ' =' (ID: 314)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.3886685371398926
    2. ' =' → logprob: -2.0136685371398926
    3. 'ist' → logprob: -2.3886685371398926
    4. 'ine' → logprob: -2.8886685371398926
    5. '=lambda' → logprob: -4.388668537139893
    6. '()' → logprob: -4.388668537139893
    7. '=' → logprob: -4.888668537139893
    8. 'i' → logprob: -6.138668537139893
    9. 'a' → logprob: -6.638668537139893
    10. 'is' → logprob: -6.888668537139893

Token 80: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.657443106174469
    2. ' lambda' → logprob: -0.782443106174469
    3. 'ambda' → logprob: -3.907443046569824
    4. '(lambda' → logprob: -5.532443046569824
    5. '=lambda' → logprob: -7.657443046569824
    6. ' lamb' → logprob: -12.282443046569824
    7. '_lambda' → logprob: -13.157443046569824
    8. ' ' → logprob: -13.157443046569824
    9. 'lam' → logprob: -13.407443046569824
    10. ' =' → logprob: -14.032443046569824

Token 81: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005364707321859896
    2. ':list' → logprob: -7.7505364418029785
    3. ' list' → logprob: -10.000536918640137
    4. 'list' → logprob: -10.250536918640137
    5. ' :' → logprob: -11.250536918640137
    6. '():' → logprob: -12.375536918640137
    7. 's' → logprob: -13.250536918640137
    8. 'lambda' → logprob: -13.750536918640137
    9. ' sys' → logprob: -14.375536918640137
    10. '[]' → logprob: -14.500536918640137

Token 82: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014203350991010666
    2. ' list' → logprob: -4.2642035484313965
    3. '[list' → logprob: -10.639203071594238
    4. 'map' → logprob: -11.514203071594238
    5. '[' → logprob: -12.139203071594238
    6. ' [' → logprob: -15.639203071594238
    7. '	list' → logprob: -15.639203071594238
    8. ' map' → logprob: -16.514204025268555
    9. '=list' → logprob: -16.639204025268555
    10. '(list' → logprob: -16.764204025268555

Token 83: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004083385691046715
    2. '(' → logprob: -5.504083156585693
    3. '(int' → logprob: -13.504083633422852
    4. 'map' → logprob: -13.754083633422852
    5. ' map' → logprob: -14.004083633422852
    6. '(
' → logprob: -14.004083633422852
    7. '()' → logprob: -15.629083633422852
    8. '	map' → logprob: -15.754083633422852
    9. '(

' → logprob: -16.37908363342285
    10. '(sys' → logprob: -16.50408363342285

Token 84: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006099864258430898
    2. 'int' → logprob: -7.625609874725342
    3. '(' → logprob: -9.6256103515625
    4. '<int' → logprob: -10.1256103515625
    5. '=int' → logprob: -12.3756103515625
    6. '[int' → logprob: -12.6256103515625
    7. ',int' → logprob: -12.7506103515625
    8. '(
' → logprob: -13.5006103515625
    9. ']int' → logprob: -13.5006103515625
    10. ' int' → logprob: -13.6256103515625

Token 85: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0025299990084022284
    2. 'sys' → logprob: -6.377530097961426
    3. ',' → logprob: -8.002530097961426
    4. '=sys' → logprob: -8.377530097961426
    5. ' sys' → logprob: -8.627530097961426
    6. '(' → logprob: -10.377530097961426
    7. ' (' → logprob: -10.752530097961426
    8. '	sys' → logprob: -10.877530097961426
    9. ')' → logprob: -12.752530097961426
    10. ' ,' → logprob: -12.877530097961426

Token 86: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003609458915889263
    2. ' sys' → logprob: -5.628609657287598
    3. 'lambda' → logprob: -12.503609657287598
    4. '(sys' → logprob: -12.628609657287598
    5. '	sys' → logprob: -13.128609657287598
    6. '=sys' → logprob: -14.878609657287598
    7. ' lambda' → logprob: -17.25360870361328
    8. ')' → logprob: -17.50360870361328
    9. '```' → logprob: -17.50360870361328
    10. ' ' → logprob: -17.87860870361328

Token 87: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00017588881019037217
    2. '.stdout' → logprob: -9.250175476074219
    3. '.' → logprob: -9.625175476074219
    4. 'stdin' → logprob: -12.125175476074219
    5. '.readline' → logprob: -12.500175476074219
    6. '.stderr' → logprob: -13.750175476074219
    7. '(stdin' → logprob: -13.750175476074219
    8. '.buffer' → logprob: -13.750175476074219
    9. '.sys' → logprob: -15.000175476074219
    10. '.argv' → logprob: -15.375175476074219

Token 88: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.17993494868278503
    2. '.readline' → logprob: -1.8049349784851074
    3. '().' → logprob: -9.30493450164795
    4. '.stdin' → logprob: -10.42993450164795
    5. 'buffer' → logprob: -10.80493450164795
    6. '.' → logprob: -10.92993450164795
    7. '.read' → logprob: -11.42993450164795
    8. ').' → logprob: -12.05493450164795
    9. '(buffer' → logprob: -12.55493450164795
    10. '	buffer' → logprob: -12.67993450164795

Token 89: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.723352049040841e-06
    2. '.read' → logprob: -12.875004768371582
    3. '.readlines' → logprob: -13.750004768371582
    4. '.' → logprob: -14.750004768371582
    5. ' readline' → logprob: -14.875004768371582
    6. 'read' → logprob: -15.625004768371582
    7. '.rstrip' → logprob: -16.750003814697266
    8. '().' → logprob: -17.500003814697266
    9. '```' → logprob: -17.625003814697266
    10. 'rstrip' → logprob: -18.625003814697266

Token 90: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3856492842023727e-06
    2. '.readline' → logprob: -14.500000953674316
    3. '()' → logprob: -14.750000953674316
    4. ' ().' → logprob: -15.125000953674316
    5. '.rstrip' → logprob: -16.625001907348633
    6. '.' → logprob: -17.750001907348633
    7. 'rstrip' → logprob: -18.125001907348633
    8. ').' → logprob: -18.125001907348633
    9. ' ' → logprob: -18.250001907348633
    10. ')' → logprob: -18.375001907348633

Token 91: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.00017016702622640878
    2. 'decode' → logprob: -9.37516975402832
    3. 'split' → logprob: -9.50016975402832
    4. 'strip' → logprob: -11.50016975402832
    5. '.rstrip' → logprob: -15.37516975402832
    6. 'read' → logprob: -17.37516975402832
    7. 'rst' → logprob: -18.12516975402832
    8. '```' → logprob: -18.12516975402832
    9. 'rl' → logprob: -18.25016975402832
    10. 'rs' → logprob: -18.25016975402832

Token 92: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007717363070696592
    2. '()' → logprob: -5.257717132568359
    3. '())' → logprob: -6.132717132568359
    4. '()))
' → logprob: -8.38271713256836
    5. '))' → logprob: -9.63271713256836
    6. '(' → logprob: -12.13271713256836
    7. '()))
' → logprob: -13.13271713256836
    8. '()));' → logprob: -13.25771713256836
    9. '())))' → logprob: -13.25771713256836
    10. '()))

' → logprob: -13.38271713256836

Token 93: 'fl' (ID: 1836)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6890818476676941
    2. '(' → logprob: -1.0640819072723389
    3. '()' → logprob: -3.064081907272339
    4. '_' → logprob: -3.439081907272339
    5. '#' → logprob: -4.06408166885376
    6. '\' → logprob: -4.43908166885376
    7. '
' → logprob: -4.68908166885376
    8. 'r' → logprob: -4.81408166885376
    9. '()
' → logprob: -5.68908166885376
    10. 'a' → logprob: -5.68908166885376

Token 94: ' =' (ID: 314)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.003380783833563328
    2. 'ambda' → logprob: -6.00338077545166
    3. 'a' → logprob: -7.62838077545166
    4. '()' → logprob: -8.87838077545166
    5. '(' → logprob: -9.12838077545166
    6. ' =' → logprob: -9.50338077545166
    7. 'am' → logprob: -10.75338077545166
    8. '=' → logprob: -11.25338077545166
    9. 'oa' → logprob: -11.25338077545166
    10. 'amba' → logprob: -11.50338077545166

Token 95: ' lambda' (ID: 27871)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.14208458364009857
    2. 'lambda' → logprob: -2.1420845985412598
    3. '(lambda' → logprob: -4.51708459854126
    4. ' lambda' → logprob: -5.76708459854126
    5. 'amba' → logprob: -7.14208459854126
    6. '=lambda' → logprob: -9.142084121704102
    7. 'amb' → logprob: -9.392084121704102
    8. 'am' → logprob: -12.267084121704102
    9. 'mb' → logprob: -13.392084121704102
    10. 'a' → logprob: -13.392084121704102

Token 96: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.702447235584259
    2. '():' → logprob: -0.702447235584259
    3. 'lambda' → logprob: -5.952447414398193
    4. '(lambda' → logprob: -6.452447414398193
    5. 'ambda' → logprob: -7.327447414398193
    6. ' :' → logprob: -7.452447414398193
    7. ' lambda' → logprob: -7.577447414398193
    8. 'loat' → logprob: -7.827447414398193
    9. 'float' → logprob: -7.827447414398193
    10. 'list' → logprob: -7.952447414398193

Token 97: ' list' (ID: 1562)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.03100373037159443
    2. 'list' → logprob: -3.531003713607788
    3. ' float' → logprob: -6.906003952026367
    4. 'map' → logprob: -8.906003952026367
    5. 'loat' → logprob: -9.781003952026367
    6. ' list' → logprob: -9.906003952026367
    7. 'lambda' → logprob: -12.656003952026367
    8. 'f' → logprob: -13.656003952026367
    9. 'flo' → logprob: -13.656003952026367
    10. 'fl' → logprob: -13.906003952026367

Token 98: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.06194852292537689
    2. '(' → logprob: -2.936948537826538
    3. '(float' → logprob: -5.061948299407959
    4. '(lambda' → logprob: -7.436948299407959
    5. '(s' → logprob: -10.311948776245117
    6. '(list' → logprob: -10.811948776245117
    7. ' (' → logprob: -10.936948776245117
    8. '(f' → logprob: -11.186948776245117
    9. '<float' → logprob: -12.811948776245117
    10. '(math' → logprob: -12.936948776245117

Token 99: '(float' (ID: 17830)
  Prédit: '(float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -1.4498052223643754e-05
    2. '(' → logprob: -11.875014305114746
    3. 'float' → logprob: -12.250014305114746
    4. '(int' → logprob: -13.875014305114746
    5. '=float' → logprob: -14.250014305114746
    6. ',float' → logprob: -14.625014305114746
    7. '(f' → logprob: -15.125014305114746
    8. '<float' → logprob: -15.875014305114746
    9. ' float' → logprob: -16.375015258789062
    10. '	float' → logprob: -16.875015258789062

Token 100: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -4.370294846012257e-05
    2. '(' → logprob: -10.875043869018555
    3. '=sys' → logprob: -11.250043869018555
    4. ',' → logprob: -12.375043869018555
    5. 'sys' → logprob: -13.000043869018555
    6. ' (' → logprob: -13.500043869018555
    7. '(s' → logprob: -13.625043869018555
    8. '(system' → logprob: -13.875043869018555
    9. ')' → logprob: -14.625043869018555
    10. '(os' → logprob: -14.750043869018555

Token 101: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004086275293957442
    2. ' sys' → logprob: -8.500408172607422
    3. '(sys' → logprob: -8.500408172607422
    4. '=sys' → logprob: -13.625408172607422
    5. '	sys' → logprob: -15.125408172607422
    6. 's' → logprob: -16.750408172607422
    7. ')' → logprob: -17.125408172607422
    8. 'sy' → logprob: -17.125408172607422
    9. '/sys' → logprob: -18.375408172607422
    10. 'system' → logprob: -18.375408172607422

Token 102: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010640407708706334
    2. '.stdout' → logprob: -9.250106811523438
    3. 'stdin' → logprob: -12.625106811523438
    4. '.buffer' → logprob: -13.000106811523438
    5. '.stderr' → logprob: -13.375106811523438
    6. '.' → logprob: -13.375106811523438
    7. ' .' → logprob: -14.250106811523438
    8. '.std' → logprob: -15.750106811523438
    9. '(stdin' → logprob: -15.750106811523438
    10. '._' → logprob: -16.375106811523438

Token 103: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.000678361626341939
    2. 'buffer' → logprob: -7.500678539276123
    3. '.readline' → logprob: -9.375678062438965
    4. '.' → logprob: -11.250678062438965
    5. '(buffer' → logprob: -11.250678062438965
    6. '().' → logprob: -11.375678062438965
    7. '	buffer' → logprob: -14.000678062438965
    8. ' .' → logprob: -14.250678062438965
    9. '_buffer' → logprob: -14.500678062438965
    10. ' buffer' → logprob: -14.625678062438965

Token 104: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.537180211627856e-05
    2. '().' → logprob: -10.500045776367188
    3. 'buffer' → logprob: -11.125045776367188
    4. '())' → logprob: -13.750045776367188
    5. '()' → logprob: -14.500045776367188
    6. '.readlines' → logprob: -14.500045776367188
    7. '.buffer' → logprob: -15.500045776367188
    8. '.' → logprob: -15.500045776367188
    9. ')' → logprob: -15.875045776367188
    10. 'line' → logprob: -16.000045776367188

Token 105: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.0219828002154827e-05
    2. '()' → logprob: -10.875020027160645
    3. ' ().' → logprob: -13.750020027160645
    4. '.' → logprob: -17.12502098083496
    5. '()))' → logprob: -17.75002098083496
    6. '()[' → logprob: -17.87502098083496
    7. '.readline' → logprob: -18.37502098083496
    8. '().__' → logprob: -18.75002098083496
    9. '(' → logprob: -18.75002098083496
    10. '()?.' → logprob: -19.12502098083496

Token 106: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.062067169696092606
    2. 'rstrip' → logprob: -2.8120672702789307
    3. 'strip' → logprob: -9.937067031860352
    4. ' split' → logprob: -10.437067031860352
    5. 'read' → logprob: -11.062067031860352
    6. 'decode' → logprob: -12.437067031860352
    7. '.rstrip' → logprob: -14.437067031860352
    8. 'spl' → logprob: -14.562067031860352
    9. ')' → logprob: -14.937067031860352
    10. '(split' → logprob: -15.312067031860352

Token 107: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01052007731050253
    2. '()' → logprob: -5.260519981384277
    3. '))' → logprob: -5.510519981384277
    4. '())' → logprob: -6.760519981384277
    5. '()))
' → logprob: -9.760519981384277
    6. '(' → logprob: -12.135519981384277
    7. ')' → logprob: -12.635519981384277
    8. '()));' → logprob: -13.635519981384277
    9. '()))

' → logprob: -14.635519981384277
    10. '())).' → logprob: -14.635519981384277

Token 108: 'il' (ID: 311)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7506631016731262
    2. 'def' → logprob: -1.6256630420684814
    3. 'dp' → logprob: -2.1256630420684814
    4. '#' → logprob: -2.6256630420684814
    5. 'n' → logprob: -3.0006630420684814
    6. '\' → logprob: -3.2506630420684814
    7. 's' → logprob: -4.5006632804870605
    8. 'de' → logprob: -5.3756632804870605
    9. '\n' → logprob: -5.3756632804870605
    10. ')' → logprob: -5.7506632804870605

Token 109: 'n' (ID: 77)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00042923877481371164
    2. '(' → logprob: -8.250429153442383
    3. '()[' → logprob: -9.000429153442383
    4. '()
' → logprob: -10.750429153442383
    5. '().' → logprob: -11.875429153442383
    6. '()

' → logprob: -12.750429153442383
    7. '()]' → logprob: -12.875429153442383
    8. ')' → logprob: -13.000429153442383
    9. '())' → logprob: -13.375429153442383
    10. '[' → logprob: -14.125429153442383

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38619863986968994
    2. ' =' → logprob: -1.76119863986969
    3. '()' → logprob: -2.0111985206604004
    4. ')' → logprob: -5.6361985206604
    5. 'o' → logprob: -5.7611985206604
    6. 't' → logprob: -6.3861985206604
    7. 'p' → logprob: -6.6361985206604
    8. 'n' → logprob: -6.7611985206604
    9. '_' → logprob: -7.0111985206604
    10. 'a' → logprob: -7.1361985206604

Token 111: ' lambda' (ID: 27871)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.12733279168605804
    2. ' lambda' → logprob: -3.2523326873779297
    3. 'lambda' → logprob: -3.3773326873779297
    4. '(lambda' → logprob: -3.8773326873779297
    5. '()' → logprob: -4.25233268737793
    6. ' ()' → logprob: -4.62733268737793
    7. '=lambda' → logprob: -7.12733268737793
    8. '(' → logprob: -8.37733268737793
    9. ' ' → logprob: -8.50233268737793
    10. 'am' → logprob: -8.62733268737793

Token 112: ' n' (ID: 297)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.7201152443885803
    2. ':' → logprob: -0.8451152443885803
    3. '(lambda' → logprob: -3.5951151847839355
    4. ' ():' → logprob: -3.7201151847839355
    5. ' ()' → logprob: -4.0951151847839355
    6. ' :' → logprob: -5.0951151847839355
    7. '()' → logprob: -5.4701151847839355
    8. ' (' → logprob: -6.3451151847839355
    9. ' lambda' → logprob: -6.5951151847839355
    10. 'lambda' → logprob: -7.4701151847839355

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008183915168046951
    2. '(n' → logprob: -5.13318395614624
    3. ' :' → logprob: -7.00818395614624
    4. '_:' → logprob: -7.25818395614624
    5. '(' → logprob: -8.508183479309082
    6. '=' → logprob: -9.008183479309082
    7. '(lambda' → logprob: -10.133183479309082
    8. '=lambda' → logprob: -10.258183479309082
    9. ':n' → logprob: -10.383183479309082
    10. 'n' → logprob: -10.508183479309082

Token 114: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.5769420266151428
    2. '[' → logprob: -0.8269420266151428
    3. ' [' → logprob: -7.451941967010498
    4. 'list' → logprob: -8.826942443847656
    5. '[array' → logprob: -9.326942443847656
    6. '[l' → logprob: -9.451942443847656
    7. '[List' → logprob: -10.576942443847656
    8. '[line' → logprob: -11.201942443847656
    9. '[int' → logprob: -11.201942443847656
    10. '[len' → logprob: -11.576942443847656

Token 115: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.027976294979453087
    2. 'list' → logprob: -3.6529762744903564
    3. 'il' → logprob: -6.9029765129089355
    4. 'ilist' → logprob: -7.5279765129089355
    5. ' int' → logprob: -9.652976036071777
    6. ' il' → logprob: -10.277976036071777
    7. ' list' → logprob: -11.402976036071777
    8. 'ii' → logprob: -11.527976036071777
    9. '[int' → logprob: -12.152976036071777
    10. 'ints' → logprob: -13.777976036071777

Token 116: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0003037650021724403
    2. '(' → logprob: -8.250304222106934
    3. '(ii' → logprob: -10.250304222106934
    4. '(
' → logprob: -13.250304222106934
    5. '(i' → logprob: -13.750304222106934
    6. 'sys' → logprob: -14.000304222106934
    7. '(x' → logprob: -14.250304222106934
    8. '	sys' → logprob: -14.250304222106934
    9. '()' → logprob: -14.500304222106934
    10. '=sys' → logprob: -15.375304222106934

Token 117: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.363617962459102e-05
    2. 'stdin' → logprob: -10.250083923339844
    3. '(stdin' → logprob: -10.875083923339844
    4. '.' → logprob: -11.125083923339844
    5. '.stdout' → logprob: -11.375083923339844
    6. '().' → logprob: -13.875083923339844
    7. '.readline' → logprob: -14.625083923339844
    8. '.argv' → logprob: -15.000083923339844
    9. ' stdin' → logprob: -15.000083923339844
    10. ' .' → logprob: -15.375083923339844

Token 118: '.buffer' (ID: 48964)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.36693447828292847
    2. '.readline' → logprob: -1.2419345378875732
    3. '()' → logprob: -4.741934299468994
    4. '().' → logprob: -5.616934299468994
    5. 'sys' → logprob: -5.991934299468994
    6. 'rstrip' → logprob: -6.866934299468994
    7. '.buffer' → logprob: -7.616934299468994
    8. '())' → logprob: -7.991934299468994
    9. 'uffer' → logprob: -8.616934776306152
    10. '	buffer' → logprob: -8.866934776306152

Token 119: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0008323782822117209
    2. '().' → logprob: -7.125832557678223
    3. ' readline' → logprob: -10.625832557678223
    4. '()' → logprob: -13.500832557678223
    5. '.' → logprob: -13.875832557678223
    6. 'read' → logprob: -14.875832557678223
    7. 'rstrip' → logprob: -15.125832557678223
    8. '.rstrip' → logprob: -15.375832557678223
    9. 'line' → logprob: -16.125831604003906
    10. '.read' → logprob: -16.250831604003906

Token 120: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014454191841650754
    2. '()' → logprob: -8.875144958496094
    3. '())' → logprob: -12.875144958496094
    4. ' ().' → logprob: -13.750144958496094
    5. '.rstrip' → logprob: -15.125144958496094
    6. 'rstrip' → logprob: -15.125144958496094
    7. ')' → logprob: -15.750144958496094
    8. '()
' → logprob: -16.000144958496094
    9. '(' → logprob: -16.625144958496094
    10. '().
' → logprob: -17.375144958496094

Token 121: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -2.45848218582978e-06
    2. 'decode' → logprob: -13.62500286102295
    3. '.rstrip' → logprob: -13.87500286102295
    4. 'strip' → logprob: -15.50000286102295
    5. ')' → logprob: -16.875001907348633
    6. 'rst' → logprob: -17.000001907348633
    7. 'read' → logprob: -17.500001907348633
    8. 'rcode' → logprob: -18.000001907348633
    9. 'r' → logprob: -18.625001907348633
    10. 'rl' → logprob: -19.000001907348633

Token 122: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -2.9040898880339228e-05
    2. ')' → logprob: -11.250028610229492
    3. '()' → logprob: -11.750028610229492
    4. '())
' → logprob: -12.000028610229492
    5. '().' → logprob: -13.875028610229492
    6. ' ())' → logprob: -14.500028610229492
    7. '()))' → logprob: -15.750028610229492
    8. '()
' → logprob: -16.250028610229492
    9. '())
' → logprob: -16.375028610229492
    10. '()]' → logprob: -16.500028610229492

Token 123: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03430042788386345
    2. ')' → logprob: -3.4093003273010254
    3. 'for' → logprob: -7.534300327301025
    4. ' for' → logprob: -9.409300804138184
    5. '())' → logprob: -10.534300804138184
    6. '	for' → logprob: -12.784300804138184
    7. '()]' → logprob: -12.909300804138184
    8. ' ()' → logprob: -13.159300804138184
    9. ']' → logprob: -13.784300804138184
    10. ' ' → logprob: -13.784300804138184

Token 124: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015035520773380995
    2. ' _' → logprob: -6.5015034675598145
    3. '_i' → logprob: -14.376503944396973
    4. 'i' → logprob: -15.376503944396973
    5. ' ' → logprob: -16.251502990722656
    6. '_
' → logprob: -16.626502990722656
    7. ' i' → logprob: -16.751502990722656
    8. ' in' → logprob: -17.251502990722656
    9. '_n' → logprob: -17.251502990722656
    10. '_=' → logprob: -17.501502990722656

Token 125: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08164853602647781
    2. ' in' → logprob: -2.581648588180542
    3. 'range' → logprob: -5.956648349761963
    4. 'i' → logprob: -9.331648826599121
    5. ' ' → logprob: -10.831648826599121
    6. '_' → logprob: -10.831648826599121
    7. ' range' → logprob: -10.956648826599121
    8. 'n' → logprob: -11.456648826599121
    9. '  ' → logprob: -12.331648826599121
    10. '
' → logprob: -13.581648826599121

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007101670489646494
    2. ' range' → logprob: -7.2507100105285645
    3. '(range' → logprob: -16.125709533691406
    4. '	range' → logprob: -16.375709533691406
    5. 'ra' → logprob: -17.375709533691406
    6. 'rang' → logprob: -17.875709533691406
    7. '
' → logprob: -18.750709533691406
    8. 'r' → logprob: -19.125709533691406
    9. 'ran' → logprob: -19.250709533691406
    10. ' ' → logprob: -19.750709533691406

Token 127: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006277294596657157
    2. '(' → logprob: -7.375627517700195
    3. '(
' → logprob: -13.875627517700195
    4. 'n' → logprob: -15.500627517700195
    5. '(

' → logprob: -17.500627517700195
    6. '(nn' → logprob: -17.875627517700195
    7. '((' → logprob: -18.000627517700195
    8. ' n' → logprob: -18.625627517700195
    9. ' (' → logprob: -19.000627517700195
    10. '	n' → logprob: -19.250627517700195

Token 128: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0007631686748936772
    2. ']' → logprob: -7.250762939453125
    3. ')' → logprob: -9.875762939453125
    4. '()]' → logprob: -14.125762939453125
    5. '])' → logprob: -14.750762939453125
    6. ')]
' → logprob: -15.125762939453125
    7. ')])' → logprob: -16.250762939453125
    8. ' ]' → logprob: -16.625762939453125
    9. ')],' → logprob: -16.625762939453125
    10. ']
' → logprob: -16.875762939453125

Token 129: 'iss' (ID: 1009)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.35652369260787964
    2. 'n' → logprob: -1.7315237522125244
    3. 'def' → logprob: -2.4815237522125244
    4. '#' → logprob: -3.6065237522125244
    5. 'class' → logprob: -6.106523513793945
    6. ' ' → logprob: -6.356523513793945
    7. 's' → logprob: -6.731523513793945
    8. 'a' → logprob: -7.106523513793945
    9. 'c' → logprob: -7.106523513793945
    10. 'dp' → logprob: -7.356523513793945

Token 130: ' =' (ID: 314)
  Prédit: 'ert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ert' → logprob: -0.4582321345806122
    2. ' =' → logprob: -1.4582321643829346
    3. 'et' → logprob: -3.0832321643829346
    4. 'pace' → logprob: -3.0832321643829346
    5. 'ub' → logprob: -3.8332321643829346
    6. 'rt' → logprob: -4.7082319259643555
    7. 't' → logprob: -5.5832319259643555
    8. 'tr' → logprob: -6.3332319259643555
    9. 'canf' → logprob: -6.3332319259643555
    10. 'er' → logprob: -6.7082319259643555

Token 131: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.17022323608398438
    2. ' lambda' → logprob: -1.9202232360839844
    3. 'sys' → logprob: -4.920223236083984
    4. ' sys' → logprob: -6.670223236083984
    5. '(lambda' → logprob: -7.045223236083984
    6. '(sys' → logprob: -8.170223236083984
    7. '=sys' → logprob: -9.295223236083984
    8. '=lambda' → logprob: -9.795223236083984
    9. '()' → logprob: -10.045223236083984
    10. 'ambda' → logprob: -11.170223236083984

Token 132: ':' (ID: 25)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011923312209546566
    2. ' sys' → logprob: -5.011923313140869
    3. 'lambda' → logprob: -5.636923313140869
    4. ':' → logprob: -6.636923313140869
    5. '(sys' → logprob: -8.886922836303711
    6. '():' → logprob: -9.386922836303711
    7. ' lambda' → logprob: -10.011922836303711
    8. '=sys' → logprob: -10.511922836303711
    9. 'str' → logprob: -11.636922836303711
    10. '()' → logprob: -11.886922836303711

Token 133: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011060204356908798
    2. ' sys' → logprob: -4.5110602378845215
    3. 'input' → logprob: -11.761059761047363
    4. 'str' → logprob: -12.761059761047363
    5. '(sys' → logprob: -13.761059761047363
    6. '	sys' → logprob: -15.136059761047363
    7. ' input' → logprob: -15.511059761047363
    8. '=sys' → logprob: -16.26106071472168
    9. 'int' → logprob: -17.01106071472168
    10. '.sys' → logprob: -17.76106071472168

Token 134: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001720742875477299
    2. '.stdout' → logprob: -8.750171661376953
    3. '.' → logprob: -11.250171661376953
    4. 'stdin' → logprob: -15.375171661376953
    5. '.std' → logprob: -15.875171661376953
    6. '.argv' → logprob: -16.000171661376953
    7. '.stderr' → logprob: -16.125171661376953
    8. ' stdin' → logprob: -18.750171661376953
    9. '(stdin' → logprob: -18.875171661376953
    10. ' .' → logprob: -19.375171661376953

Token 135: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.06269324570894241
    2. '.readline' → logprob: -2.8126933574676514
    3. '.' → logprob: -7.312693119049072
    4. '.read' → logprob: -10.68769359588623
    5. ' .' → logprob: -11.43769359588623
    6. '.stdin' → logprob: -11.68769359588623
    7. 'buffer' → logprob: -12.31269359588623
    8. '.stdout' → logprob: -12.56269359588623
    9. '.input' → logprob: -13.06269359588623
    10. '.reader' → logprob: -13.93769359588623

Token 136: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.01468696165829897
    2. '.readline' → logprob: -4.2646870613098145
    3. ' readline' → logprob: -8.014686584472656
    4. '_read' → logprob: -8.639686584472656
    5. 'decode' → logprob: -11.389686584472656
    6. 'rstrip' → logprob: -13.139686584472656
    7. 'readonly' → logprob: -13.514686584472656
    8. '.read' → logprob: -14.389686584472656
    9. 'raw' → logprob: -15.514686584472656
    10. 'rea' → logprob: -16.264686584472656

Token 137: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009205120149999857
    2. '()' → logprob: -7.000920295715332
    3. '.rstrip' → logprob: -12.750920295715332
    4. 'rstrip' → logprob: -12.875920295715332
    5. ' ().' → logprob: -13.250920295715332
    6. '.readline' → logprob: -14.250920295715332
    7. '(' → logprob: -14.625920295715332
    8. '()
' → logprob: -15.375920295715332
    9. ')' → logprob: -16.37592124938965
    10. '().'' → logprob: -16.50092124938965

Token 138: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.38707414269447327
    2. 'rstrip' → logprob: -1.1370741128921509
    3. 'strip' → logprob: -8.51207447052002
    4. 'dec' → logprob: -14.01207447052002
    5. 'de' → logprob: -14.51207447052002
    6. 'read' → logprob: -14.88707447052002
    7. 'decoded' → logprob: -16.137073516845703
    8. ' decode' → logprob: -16.387073516845703
    9. 'r' → logprob: -16.887073516845703
    10. '```' → logprob: -17.262073516845703

Token 139: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.011154753156006336
    2. '()' → logprob: -4.511154651641846
    3. '('' → logprob: -9.261155128479004
    4. '().'' → logprob: -12.636155128479004
    5. '("' → logprob: -13.511155128479004
    6. '(' → logprob: -13.511155128479004
    7. '();' → logprob: -13.761155128479004
    8. '()='' → logprob: -14.386155128479004
    9. '())' → logprob: -14.511155128479004
    10. '()[' → logprob: -14.761155128479004

Token 140: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.08689957112073898
    2. 'strip' → logprob: -2.586899518966675
    3. 'utf' → logprob: -4.836899757385254
    4. 'ascii' → logprob: -10.211899757385254
    5. 'decode' → logprob: -11.711899757385254
    6. 'rst' → logprob: -14.461899757385254
    7. 'unicode' → logprob: -15.211899757385254
    8. '.rstrip' → logprob: -15.586899757385254
    9. 'rs' → logprob: -16.711898803710938
    10. ' strip' → logprob: -17.086898803710938

Token 141: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002028251619776711
    2. '(' → logprob: -8.875203132629395
    3. '()
' → logprob: -10.250203132629395
    4. '()\' → logprob: -12.125203132629395
    5. '())' → logprob: -12.500203132629395
    6. '#' → logprob: -12.500203132629395
    7. '()

' → logprob: -12.625203132629395
    8. ')' → logprob: -12.625203132629395
    9. '()]' → logprob: -12.875203132629395
    10. '().' → logprob: -13.500203132629395

Token 142: 'sl' (ID: 4500)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8117550611495972
    2. 'print' → logprob: -2.0617551803588867
    3. 'ss' → logprob: -2.4367551803588867
    4. 'd' → logprob: -3.1867551803588867
    5. 'n' → logprob: -3.3117551803588867
    6. '<|end|>' → logprob: -3.3117551803588867
    7. 'dp' → logprob: -3.8117551803588867
    8. 'pr' → logprob: -3.9367551803588867
    9. '#' → logprob: -3.9367551803588867
    10. ' ' → logprob: -3.9367551803588867

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6374949216842651
    2. ' =' → logprob: -0.7624949216842651
    3. '()' → logprob: -6.012495040893555
    4. 'ambda' → logprob: -6.887495040893555
    5. '=lambda' → logprob: -7.137495040893555
    6. 's' → logprob: -8.637495040893555
    7. '<|end|>' → logprob: -10.012495040893555
    8. 'ines' → logprob: -10.262495040893555
    9. 'b' → logprob: -10.262495040893555
    10. '(' → logprob: -10.512495040893555

Token 144: ' lambda' (ID: 27871)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.009308217093348503
    2. 'lambda' → logprob: -5.134308338165283
    3. 'amba' → logprob: -6.884308338165283
    4. ' lambda' → logprob: -6.884308338165283
    5. '(lambda' → logprob: -7.009308338165283
    6. 'amb' → logprob: -9.134307861328125
    7. 'sys' → logprob: -9.384307861328125
    8. '()' → logprob: -9.634307861328125
    9. '=lambda' → logprob: -9.634307861328125
    10. 'am' → logprob: -10.009307861328125

Token 145: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.29834502935409546
    2. 'sys' → logprob: -2.2983450889587402
    3. '()' → logprob: -2.4233450889587402
    4. 'ambda' → logprob: -3.5483450889587402
    5. ':' → logprob: -3.7983450889587402
    6. '(sys' → logprob: -4.67334508895874
    7. 'ist' → logprob: -5.92334508895874
    8. ' sys' → logprob: -6.04834508895874
    9. '().' → logprob: -7.04834508895874
    10. 's' → logprob: -7.79834508895874

Token 146: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0034642943646758795
    2. 'input' → logprob: -5.878464221954346
    3. 'list' → logprob: -7.878464221954346
    4. ' sys' → logprob: -8.378464698791504
    5. 'str' → logprob: -11.003464698791504
    6. 'set' → logprob: -12.003464698791504
    7. 'iss' → logprob: -12.128464698791504
    8. ' input' → logprob: -12.378464698791504
    9. 'stdin' → logprob: -12.753464698791504
    10. '(sys' → logprob: -12.878464698791504

Token 147: '(map' (ID: 16946)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.3185490369796753
    2. '(map' → logprob: -1.5685490369796753
    3. '(' → logprob: -2.818549156188965
    4. '(input' → logprob: -6.318549156188965
    5. '(str' → logprob: -6.318549156188965
    6. 'sys' → logprob: -7.693549156188965
    7. '(system' → logprob: -8.318549156188965
    8. 'map' → logprob: -8.318549156188965
    9. '(ss' → logprob: -9.568549156188965
    10. '(iter' → logprob: -10.818549156188965

Token 148: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0004473540757317096
    2. '(ord' → logprob: -7.8754472732543945
    3. '(int' → logprob: -10.750447273254395
    4. '(' → logprob: -10.750447273254395
    5. '(lambda' → logprob: -11.875447273254395
    6. '(sys' → logprob: -12.125447273254395
    7. '(chr' → logprob: -12.375447273254395
    8. '(len' → logprob: -12.875447273254395
    9. 'str' → logprob: -13.000447273254395
    10. '(list' → logprob: -13.750447273254395

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027562568429857492
    2. '(sys' → logprob: -6.002756118774414
    3. ',(' → logprob: -9.377756118774414
    4. ',input' → logprob: -10.002756118774414
    5. '(),' → logprob: -10.252756118774414
    6. ' ,' → logprob: -10.252756118774414
    7. ',s' → logprob: -10.627756118774414
    8. '=sys' → logprob: -11.002756118774414
    9. 'sys' → logprob: -11.377756118774414
    10. '(' → logprob: -11.752756118774414

Token 150: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.001399879576638341
    2. 'iss' → logprob: -7.501399993896484
    3. ' sys' → logprob: -7.626399993896484
    4. 'input' → logprob: -8.126399993896484
    5. 'str' → logprob: -10.251399993896484
    6. '(sys' → logprob: -11.751399993896484
    7. 'lambda' → logprob: -11.751399993896484
    8. 'is' → logprob: -12.751399993896484
    9. ' input' → logprob: -13.501399993896484
    10. 'system' → logprob: -13.876399993896484

Token 151: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00198787497356534
    2. '().' → logprob: -6.626987934112549
    3. '.buffer' → logprob: -8.12698745727539
    4. 'stdin' → logprob: -8.75198745727539
    5. '.' → logprob: -9.37698745727539
    6. '(stdin' → logprob: -10.37698745727539
    7. '.readline' → logprob: -10.87698745727539
    8. '.stdout' → logprob: -11.00198745727539
    9. 'sys' → logprob: -11.12698745727539
    10. '=sys' → logprob: -11.25198745727539

Token 152: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.013956629671156406
    2. '().' → logprob: -4.638956546783447
    3. '.readline' → logprob: -5.888956546783447
    4. 'buffer' → logprob: -6.638956546783447
    5. '(buffer' → logprob: -10.138957023620605
    6. '()' → logprob: -10.138957023620605
    7. '.stdin' → logprob: -12.263957023620605
    8. '.sys' → logprob: -12.388957023620605
    9. 'sys' → logprob: -12.513957023620605
    10. '	buffer' → logprob: -12.513957023620605

Token 153: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5870973467826843
    2. '.readline' → logprob: -0.8370973467826843
    3. '())' → logprob: -5.08709716796875
    4. '()' → logprob: -5.71209716796875
    5. '()))' → logprob: -7.46209716796875
    6. '().__' → logprob: -7.46209716796875
    7. '()[' → logprob: -8.46209716796875
    8. 'line' → logprob: -10.08709716796875
    9. '(sys' → logprob: -10.21209716796875
    10. '())
' → logprob: -10.71209716796875

Token 154: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.491498531133402e-06
    2. ' ().' → logprob: -12.125009536743164
    3. '()' → logprob: -12.500009536743164
    4. '.readline' → logprob: -15.500009536743164
    5. '.' → logprob: -18.500009536743164
    6. '()[' → logprob: -18.750009536743164
    7. '()
' → logprob: -18.750009536743164
    8. ' ' → logprob: -19.250009536743164
    9. '().__' → logprob: -19.250009536743164
    10. '	' → logprob: -19.500009536743164

Token 155: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.3085448741912842
    2. 'split' → logprob: -2.058544874191284
    3. 'read' → logprob: -2.558544874191284
    4. 'rstrip' → logprob: -2.808544874191284
    5. 'strip' → logprob: -9.058545112609863
    6. 'buffer' → logprob: -11.058545112609863
    7. '.readline' → logprob: -13.683545112609863
    8. ' decode' → logprob: -14.308545112609863
    9. ' readline' → logprob: -14.433545112609863
    10. 'write' → logprob: -15.433545112609863

Token 156: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.723352049040841e-06
    2. '()' → logprob: -12.375004768371582
    3. ' ().' → logprob: -14.875004768371582
    4. '()))' → logprob: -18.625003814697266
    5. '.' → logprob: -19.375003814697266
    6. '(' → logprob: -19.375003814697266
    7. '()[' → logprob: -19.500003814697266
    8. '().'' → logprob: -19.625003814697266
    9. '()
' → logprob: -19.750003814697266
    10. ')' → logprob: -19.750003814697266

Token 157: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.051630690693855286
    2. 'split' → logprob: -3.051630735397339
    3. 'strip' → logprob: -5.80163049697876
    4. '().' → logprob: -11.676630973815918
    5. ' split' → logprob: -12.801630973815918
    6. 'read' → logprob: -13.426630973815918
    7. '.rstrip' → logprob: -13.551630973815918
    8. 'decode' → logprob: -13.676630973815918
    9. ' strip' → logprob: -14.426630973815918
    10. 'spl' → logprob: -15.801630973815918

Token 158: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03829221427440643
    2. '()' → logprob: -3.288292169570923
    3. '())' → logprob: -8.913291931152344
    4. '))' → logprob: -9.538291931152344
    5. '()))
' → logprob: -11.038291931152344
    6. '()));' → logprob: -11.038291931152344
    7. '(' → logprob: -12.663291931152344
    8. '())).' → logprob: -13.288291931152344
    9. '())))' → logprob: -13.288291931152344
    10. '().' → logprob: -13.538291931152344

Token 159: 'is' (ID: 276)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4197383224964142
    2. 'n' → logprob: -1.7947382926940918
    3. 'd' → logprob: -2.669738292694092
    4. '#' → logprob: -3.669738292694092
    5. 'dp' → logprob: -4.044738292694092
    6. '\n' → logprob: -4.669738292694092
    7. '\' → logprob: -5.169738292694092
    8. ' ' → logprob: -5.169738292694092
    9. 'de' → logprob: -5.419738292694092
    10. '
' → logprob: -5.544738292694092

Token 160: 'n' (ID: 77)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00875366572290659
    2. '_' → logprob: -5.383753776550293
    3. 'n' → logprob: -7.508753776550293
    4. 'r' → logprob: -7.758753776550293
    5. '()' → logprob: -8.258753776550293
    6. '(' → logprob: -8.258753776550293
    7. 't' → logprob: -8.258753776550293
    8. '2' → logprob: -8.633753776550293
    9. 'b' → logprob: -8.758753776550293
    10. 'qrt' → logprob: -8.758753776550293

Token 161: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.60759037733078
    2. '=' → logprob: -1.1075904369354248
    3. ' =' → logprob: -2.107590436935425
    4. '_' → logprob: -6.732590198516846
    5. '=lambda' → logprob: -6.982590198516846
    6. 'n' → logprob: -7.607590198516846
    7. 'p' → logprob: -7.607590198516846
    8. '_=' → logprob: -9.607590675354004
    9. ')' → logprob: -10.107590675354004
    10. 'a' → logprob: -10.482590675354004

Token 162: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.08554361015558243
    2. ' lambda' → logprob: -2.585543632507324
    3. '(lambda' → logprob: -5.085543632507324
    4. '=lambda' → logprob: -8.960543632507324
    5. 'int' → logprob: -9.085543632507324
    6. 'lam' → logprob: -9.210543632507324
    7. 'list' → logprob: -10.210543632507324
    8. 'ambda' → logprob: -11.335543632507324
    9. 'l' → logprob: -12.085543632507324
    10. 'sys' → logprob: -12.335543632507324

Token 163: ' n' (ID: 297)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013787110336124897
    2. 'int' → logprob: -5.263787269592285
    3. 'lambda' → logprob: -5.763787269592285
    4. '(lambda' → logprob: -6.013787269592285
    5. '()' → logprob: -6.763787269592285
    6. ':' → logprob: -7.263787269592285
    7. 't' → logprob: -8.013787269592285
    8. 's' → logprob: -8.513787269592285
    9. '(int' → logprob: -8.638787269592285
    10. ' ():' → logprob: -9.513787269592285

Token 164: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010383935645222664
    2. '(n' → logprob: -5.2603840827941895
    3. ' :' → logprob: -6.0103840827941895
    4. '=' → logprob: -6.0103840827941895
    5. ' =' → logprob: -10.135383605957031
    6. '():' → logprob: -10.135383605957031
    7. 'n' → logprob: -10.260383605957031
    8. ' n' → logprob: -10.760383605957031
    9. '):' → logprob: -10.760383605957031
    10. '(' → logprob: -10.885383605957031

Token 165: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011119741946458817
    2. ' [' → logprob: -4.761119842529297
    3. '[int' → logprob: -6.011119842529297
    4. '[str' → logprob: -10.636119842529297
    5. '[s' → logprob: -11.636119842529297
    6. '[list' → logprob: -12.136119842529297
    7. '[i' → logprob: -12.261119842529297
    8. 'sys' → logprob: -13.386119842529297
    9. '[
' → logprob: -14.011119842529297
    10. '[string' → logprob: -14.011119842529297

Token 166: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004939612466841936
    2. 'iss' → logprob: -5.754939556121826
    3. 'int' → logprob: -6.504939556121826
    4. ' sys' → logprob: -8.629940032958984
    5. '(sys' → logprob: -10.379940032958984
    6. 'ss' → logprob: -10.504940032958984
    7. 'str' → logprob: -12.004940032958984
    8. 'list' → logprob: -12.129940032958984
    9. '	sys' → logprob: -12.504940032958984
    10. ' iss' → logprob: -12.879940032958984

Token 167: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002680112374946475
    2. '.stdout' → logprob: -8.37526798248291
    3. '.' → logprob: -10.37526798248291
    4. 'stdin' → logprob: -12.50026798248291
    5. '.st' → logprob: -14.00026798248291
    6. '.stderr' → logprob: -14.12526798248291
    7. '.std' → logprob: -14.62526798248291
    8. '.argv' → logprob: -14.87526798248291
    9. ' .' → logprob: -16.625268936157227
    10. 'import' → logprob: -17.500268936157227

Token 168: '.buffer' (ID: 48964)
  Prédit: '.buffer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.buffer' → logprob: -0.006758475210517645
    2. 'buffer' → logprob: -5.006758689880371
    3. '.stdin' → logprob: -10.381758689880371
    4. 'stdin' → logprob: -11.631758689880371
    5. '.readline' → logprob: -14.131758689880371
    6. '(buffer' → logprob: -14.256758689880371
    7. ' buffer' → logprob: -14.506758689880371
    8. '	buffer' → logprob: -15.006758689880371
    9. '_buffer' → logprob: -15.006758689880371
    10. 'sys' → logprob: -15.131758689880371

Token 169: '.readline' (ID: 74673)
  Prédit: 'buffer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buffer' → logprob: -0.5239582657814026
    2. '.readline' → logprob: -1.0239582061767578
    3. '.buffer' → logprob: -3.023958206176758
    4. ' buffer' → logprob: -11.148958206176758
    5. '	buffer' → logprob: -11.648958206176758
    6. '_buffer' → logprob: -11.648958206176758
    7. '(buffer' → logprob: -12.398958206176758
    8. '.read' → logprob: -12.648958206176758
    9. 'BUFFER' → logprob: -12.648958206176758
    10. '.readlines' → logprob: -13.773958206176758

Token 170: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.908022285439074e-05
    2. '()' → logprob: -10.125059127807617
    3. ' ().' → logprob: -11.000059127807617
    4. '.' → logprob: -13.875059127807617
    5. '()].' → logprob: -15.000059127807617
    6. ').' → logprob: -15.500059127807617
    7. '.readline' → logprob: -15.625059127807617
    8. '.decode' → logprob: -15.875059127807617
    9. '()[' → logprob: -16.500059127807617
    10. '].' → logprob: -16.750059127807617

Token 171: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -0.00010390079842181876
    2. ' decode' → logprob: -9.875103950500488
    3. 'rstrip' → logprob: -10.125103950500488
    4. 'read' → logprob: -11.750103950500488
    5. '.decode' → logprob: -12.625103950500488
    6. 'buffer' → logprob: -14.625103950500488
    7. 'strip' → logprob: -14.750103950500488
    8. '```' → logprob: -15.875103950500488
    9. 'bytes' → logprob: -17.250102996826172
    10. '   ' → logprob: -17.625102996826172

Token 172: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010381679749116302
    2. '()' → logprob: -6.876038074493408
    3. ' ().' → logprob: -13.126038551330566
    4. 'rstrip' → logprob: -13.751038551330566
    5. '.rstrip' → logprob: -13.751038551330566
    6. '()
' → logprob: -14.751038551330566
    7. '(' → logprob: -14.876038551330566
    8. '.readline' → logprob: -16.00103759765625
    9. '()].' → logprob: -16.50103759765625
    10. '()[' → logprob: -16.87603759765625

Token 173: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -1.1875571544806007e-05
    2. 'strip' → logprob: -11.375011444091797
    3. '.rstrip' → logprob: -15.000011444091797
    4. '```' → logprob: -18.125011444091797
    5. 'rst' → logprob: -18.250011444091797
    6. 'r' → logprob: -18.625011444091797
    7. 'read' → logprob: -18.625011444091797
    8. 'rcode' → logprob: -19.625011444091797
    9. 'split' → logprob: -19.875011444091797
    10. 'rl' → logprob: -20.125011444091797

Token 174: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.226628895296017e-06
    2. ' ()' → logprob: -12.375007629394531
    3. '()
' → logprob: -13.875007629394531
    4. '())' → logprob: -14.000007629394531
    5. ')' → logprob: -14.125007629394531
    6. '()]' → logprob: -15.500007629394531
    7. '()\' → logprob: -16.62500762939453
    8. '(' → logprob: -16.87500762939453
    9. '（）' → logprob: -16.87500762939453
    10. '().' → logprob: -17.00000762939453

Token 175: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5571972131729126
    2. '()' → logprob: -1.5571972131729126
    3. 'for' → logprob: -1.5571972131729126
    4. ')' → logprob: -5.182197093963623
    5. '	for' → logprob: -10.057197570800781
    6. ' ()' → logprob: -10.057197570800781
    7. ' ' → logprob: -10.932197570800781
    8. '())' → logprob: -11.807197570800781
    9. ']' → logprob: -12.682197570800781
    10. '()]' → logprob: -12.932197570800781

Token 176: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.008622024208307266
    2. ' _' → logprob: -4.758622169494629
    3. ' in' → logprob: -12.633622169494629
    4. ' range' → logprob: -12.758622169494629
    5. ' ' → logprob: -13.883622169494629
    6. ' i' → logprob: -15.508622169494629
    7. ' _
' → logprob: -16.883621215820312
    8. ' ' → logprob: -17.008621215820312
    9. '_range' → logprob: -17.508621215820312
    10. ' n' → logprob: -17.758621215820312

Token 177: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03806604817509651
    2. ' range' → logprob: -3.2880661487579346
    3. '(range' → logprob: -11.038065910339355
    4. ' in' → logprob: -12.163065910339355
    5. 'in' → logprob: -13.038065910339355
    6. '(' → logprob: -14.663065910339355
    7. 'n' → logprob: -15.413065910339355
    8. '	range' → logprob: -16.038066864013672
    9. '(n' → logprob: -16.288066864013672
    10. '_range' → logprob: -16.913066864013672

Token 178: ' range' (ID: 3352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01991700567305088
    2. 'range' → logprob: -4.019917011260986
    3. ' range' → logprob: -7.019917011260986
    4. ' n' → logprob: -7.394917011260986
    5. '(n' → logprob: -8.269916534423828
    6. '(' → logprob: -14.019916534423828
    7. '(range' → logprob: -15.394916534423828
    8. '_n' → logprob: -16.019916534423828
    9. '
' → logprob: -17.144916534423828
    10. '[n' → logprob: -17.644916534423828

Token 179: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.250097274780273
    3. 'n' → logprob: -14.125097274780273
    4. '(
' → logprob: -16.250097274780273
    5. ' (' → logprob: -18.875097274780273
    6. ' n' → logprob: -20.000097274780273
    7. '(

' → logprob: -20.625097274780273
    8. ')n' → logprob: -21.000097274780273
    9. '((' → logprob: -22.125097274780273
    10. '	n' → logprob: -22.625097274780273

Token 180: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.15191587805747986
    2. ']' → logprob: -2.1519157886505127
    3. ')' → logprob: -3.7769157886505127
    4. '])' → logprob: -6.401916027069092
    5. ')])' → logprob: -9.401915550231934
    6. '()]' → logprob: -10.776915550231934
    7. '])]' → logprob: -11.151915550231934
    8. ' ]' → logprob: -13.276915550231934
    9. ')],' → logprob: -13.526915550231934
    10. '']' → logprob: -13.776915550231934

Token 181: 'l' (ID: 75)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05480272322893143
    2. 'n' → logprob: -3.554802656173706
    3. 'd' → logprob: -4.304802894592285
    4. 'class' → logprob: -5.054802894592285
    5. 'dp' → logprob: -6.179802894592285
    6. '#' → logprob: -6.679802894592285
    7. 'N' → logprob: -7.429802894592285
    8. 'D' → logprob: -8.304802894592285
    9. 'a' → logprob: -9.054802894592285
    10. 'mod' → logprob: -9.929802894592285

Token 182: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.24386464059352875
    2. 'ambda' → logprob: -2.1188645362854004
    3. ' =' → logprob: -3.2438645362854004
    4. 'ist' → logprob: -3.4938645362854004
    5. 'a' → logprob: -5.2438645362854
    6. 'l' → logprob: -5.9938645362854
    7. 'b' → logprob: -5.9938645362854
    8. 'eft' → logprob: -6.1188645362854
    9. 'is' → logprob: -6.2438645362854
    10. 'amb' → logprob: -6.6188645362854

Token 183: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019657472148537636
    2. ' =' → logprob: -7.001965522766113
    3. '=' → logprob: -7.751965522766113
    4. '(a' → logprob: -8.251965522766113
    5. ' (' → logprob: -9.251965522766113
    6. '_' → logprob: -9.751965522766113
    7. '(
' → logprob: -10.001965522766113
    8. '<|end|>' → logprob: -10.251965522766113
    9. 'a' → logprob: -10.876965522766113
    10. '=lambda' → logprob: -11.001965522766113

Token 184: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.05083495378494263
    2. '(lambda' → logprob: -3.175834894180298
    3. ' lambda' → logprob: -5.175835132598877
    4. '=lambda' → logprob: -6.175835132598877
    5. 'def' → logprob: -10.550834655761719
    6. '(' → logprob: -11.050834655761719
    7. 'math' → logprob: -11.550834655761719
    8. '64' → logprob: -12.675834655761719
    9. '0' → logprob: -12.675834655761719
    10. 'a' → logprob: -12.800834655761719

Token 185: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03255194053053856
    2. ' a' → logprob: -3.7825520038604736
    3. 'x' → logprob: -4.7825517654418945
    4. ' x' → logprob: -7.0325517654418945
    5. '(a' → logprob: -12.407551765441895
    6. '	a' → logprob: -13.907551765441895
    7. ' ' → logprob: -14.532551765441895
    8. 'A' → logprob: -15.282551765441895
    9. '[a' → logprob: -16.78255271911621
    10. 'lambda' → logprob: -16.90755271911621

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006854608654975891
    2. ',y' → logprob: -5.00685453414917
    3. ',x' → logprob: -9.256855010986328
    4. ' ,' → logprob: -10.381855010986328
    5. 'y' → logprob: -12.381855010986328
    6. ',b' → logprob: -13.631855010986328
    7. ',Y' → logprob: -13.631855010986328
    8. ',l' → logprob: -14.131855010986328
    9. '1' → logprob: -14.256855010986328
    10. '_,' → logprob: -14.506855010986328

Token 187: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02975083328783512
    2. ' y' → logprob: -3.5297508239746094
    3. '	y' → logprob: -15.40475082397461
    4. ' ' → logprob: -16.27975082397461
    5. ',y' → logprob: -18.40475082397461
    6. 'x' → logprob: -19.15475082397461
    7. '  ' → logprob: -19.65475082397461
    8. '*y' → logprob: -19.77975082397461
    9. ' ' → logprob: -19.77975082397461
    10. 'y's' → logprob: -20.02975082397461

Token 188: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.060365608893335e-05
    2. ':x' → logprob: -10.500041007995605
    3. ' :' → logprob: -11.875041007995605
    4. ',' → logprob: -12.875041007995605
    5. ':
' → logprob: -13.750041007995605
    6. '=' → logprob: -14.000041007995605
    7. ',:' → logprob: -14.125041007995605
    8. ':(' → logprob: -14.625041007995605
    9. 'x' → logprob: -16.75004005432129
    10. ',x' → logprob: -17.00004005432129

Token 189: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.13085715472698212
    2. ' x' → logprob: -2.380857229232788
    3. '(x' → logprob: -3.630857229232788
    4. ' (' → logprob: -5.630856990814209
    5. 'abs' → logprob: -10.380857467651367
    6. '(int' → logprob: -10.755857467651367
    7. '(' → logprob: -11.255857467651367
    8. ' ' → logprob: -11.630857467651367
    9. 'int' → logprob: -11.880857467651367
    10. '  ' → logprob: -12.005857467651367

Token 190: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00014084660506341606
    2. ' x' → logprob: -9.000141143798828
    3. '(x' → logprob: -11.000141143798828
    4. '
' → logprob: -15.625141143798828
    5. '	x' → logprob: -15.625141143798828
    6. 'abs' → logprob: -16.000141143798828
    7. ' (' → logprob: -16.000141143798828
    8. '   ' → logprob: -16.250141143798828
    9. '  ' → logprob: -16.750141143798828
    10. ' ' → logprob: -17.625141143798828

Token 191: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5551847219467163
    2. '*' → logprob: -1.0551847219467163
    3. '*y' → logprob: -2.555184841156006
    4. '*x' → logprob: -8.430184364318848
    5. '*l' → logprob: -12.805184364318848
    6. '//' → logprob: -12.930184364318848
    7. ' //' → logprob: -13.680184364318848
    8. ' ' → logprob: -14.180184364318848
    9. '*b' → logprob: -14.305184364318848
    10. '*j' → logprob: -15.305184364318848

Token 192: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804275393486023
    2. ' y' → logprob: -3.2880427837371826
    3. '<|end|>' → logprob: -14.413043022155762
    4. ' ' → logprob: -15.038043022155762
    5. '	y' → logprob: -15.913043022155762
    6. ''y' → logprob: -16.163042068481445
    7. ')y' → logprob: -16.538042068481445
    8. '(y' → logprob: -17.038042068481445
    9. ')' → logprob: -17.538042068481445
    10. '  ' → logprob: -17.538042068481445

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16477160155773163
    2. ')//' → logprob: -2.164771556854248
    3. ' //' → logprob: -3.664771556854248
    4. '//' → logprob: -4.664771556854248
    5. ' )' → logprob: -6.164771556854248
    6. ' ' → logprob: -13.914772033691406
    7. ' ' → logprob: -14.914772033691406
    8. ' //
' → logprob: -14.914772033691406
    9. ')#' → logprob: -15.664772033691406
    10. ')
' → logprob: -15.789772033691406

Token 194: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.31327807903289795
    2. ' //' → logprob: -1.313278079032898
    3. ' ' → logprob: -11.688278198242188
    4. '//=' → logprob: -12.563278198242188
    5. '#' → logprob: -13.563278198242188
    6. '%' → logprob: -13.813278198242188
    7. ' ' → logprob: -14.688278198242188
    8. '
' → logprob: -14.688278198242188
    9. '/' → logprob: -14.938278198242188
    10. ')' → logprob: -15.063278198242188

Token 195: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.011068337596952915
    2. ' math' → logprob: -4.511068344116211
    3. '(math' → logprob: -10.886068344116211
    4. '.math' → logprob: -14.511068344116211
    5. 'g' → logprob: -14.886068344116211
    6. 'os' → logprob: -15.261068344116211
    7. 'import' → logprob: -15.511068344116211
    8. '__' → logprob: -15.511068344116211
    9. '_math' → logprob: -15.886068344116211
    10. ' ' → logprob: -16.01106834411621

Token 196: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.001742650754749775
    2. 'g' → logprob: -6.501742839813232
    3. '.' → logprob: -8.501742362976074
    4. '#g' → logprob: -11.126742362976074
    5. ' gcd' → logprob: -11.626742362976074
    6. '```' → logprob: -13.251742362976074
    7. ',g' → logprob: -13.626742362976074
    8. '.com' → logprob: -13.626742362976074
    9. '.sqrt' → logprob: -13.751742362976074
    10. '.factor' → logprob: -14.001742362976074

Token 197: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.001098895794712007
    2. 'math' → logprob: -7.751099109649658
    3. '```' → logprob: -8.0010986328125
    4. 'c' → logprob: -8.7510986328125
    5. 'e' → logprob: -10.0010986328125
    6. '   ' → logprob: -10.8760986328125
    7. 'cmath' → logprob: -11.2510986328125
    8. 'a' → logprob: -11.3760986328125
    9. 'cm' → logprob: -11.7510986328125
    10. 'cdf' → logprob: -11.8760986328125

Token 198: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004084335640072823
    2. '(' → logprob: -5.50408411026001
    3. '(
' → logprob: -12.129084587097168
    4. 'x' → logprob: -14.504084587097168
    5. ' (' → logprob: -17.75408363342285
    6. '(

' → logprob: -18.25408363342285
    7. '<|end|>' → logprob: -18.37908363342285
    8. '(
' → logprob: -19.12908363342285
    9. ',x' → logprob: -19.75408363342285
    10. '()' → logprob: -19.75408363342285

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01271683257073164
    2. ',y' → logprob: -4.387716770172119
    3. ' ,' → logprob: -9.262717247009277
    4. 'y' → logprob: -9.387717247009277
    5. ',
' → logprob: -10.637717247009277
    6. ' y' → logprob: -13.762717247009277
    7. ')' → logprob: -14.137717247009277
    8. '(' → logprob: -14.137717247009277
    9. ' ' → logprob: -14.137717247009277
    10. ',x' → logprob: -15.012717247009277

Token 200: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0023648247588425875
    2. ' y' → logprob: -6.127364635467529
    3. 'x' → logprob: -8.627365112304688
    4. ' x' → logprob: -15.127365112304688
    5. ')' → logprob: -16.002365112304688
    6. ' ' → logprob: -16.252365112304688
    7. ')y' → logprob: -17.252365112304688
    8. '(y' → logprob: -17.877365112304688
    9. '	y' → logprob: -18.127365112304688
    10. '  ' → logprob: -18.127365112304688

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.939851037808694e-05
    2. ' )' → logprob: -11.000029563903809
    3. '(x' → logprob: -12.000029563903809
    4. '))' → logprob: -12.875029563903809
    5. ')
' → logprob: -14.000029563903809
    6. '),' → logprob: -14.375029563903809
    7. ')x' → logprob: -14.500029563903809
    8. ',' → logprob: -14.625029563903809
    9. 'if' → logprob: -14.625029563903809
    10. 'x' → logprob: -15.375029563903809

Token 202: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19039103388786316
    2. 'd' → logprob: -1.8153910636901855
    3. '#' → logprob: -5.6903910636901855
    4. 'n' → logprob: -5.8153910636901855
    5. 'de' → logprob: -5.9403910636901855
    6. 'a' → logprob: -7.0653910636901855
    7. 'D' → logprob: -8.565390586853027
    8. '(' → logprob: -8.940390586853027
    9. ')' → logprob: -9.190390586853027
    10. 'dp' → logprob: -9.315390586853027

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31522300839424133
    2. ' =' → logprob: -1.315222978591919
    3. ' ' → logprob: -6.315223217010498
    4. ',' → logprob: -9.56522274017334
    5. '_' → logprob: -10.31522274017334
    6. ' =
' → logprob: -11.19022274017334
    7. ' ,' → logprob: -11.94022274017334
    8. '<|end|>' → logprob: -12.06522274017334
    9. ' =)' → logprob: -12.19022274017334
    10. ')' → logprob: -12.31522274017334

Token 204: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5802939534187317
    2. '10' → logprob: -0.8302939534187317
    3. '100' → logprob: -5.455294132232666
    4. '1' → logprob: -9.580293655395508
    5. '998' → logprob: -13.830293655395508
    6. 'int' → logprob: -14.455293655395508
    7. ' (' → logprob: -15.580293655395508
    8. ' 
' → logprob: -15.830293655395508
    9. '109' → logprob: -16.205293655395508
    10. 'pow' → logprob: -16.580293655395508

Token 205: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04976627975702286
    2. '100' → logprob: -3.0497663021087646
    3. '998' → logprob: -6.7997660636901855
    4. '1' → logprob: -9.799766540527344
    5. ' ' → logprob: -11.799766540527344
    6. 'int' → logprob: -14.174766540527344
    7. '(' → logprob: -15.174766540527344
    8. '123' → logprob: -16.424766540527344
    9. '999' → logprob: -16.674766540527344
    10. '109' → logprob: -17.174766540527344

Token 206: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1970018744468689
    2. '**' → logprob: -1.9470019340515137
    3. '09' → logprob: -3.8220019340515137
    4. '000' → logprob: -4.322001934051514
    5. '+' → logprob: -8.072001457214355
    6. '009' → logprob: -8.197001457214355
    7. ' ' → logprob: -8.822001457214355
    8. '%' → logprob: -9.697001457214355
    9. '^' → logprob: -10.072001457214355
    10. '=' → logprob: -10.572001457214355

Token 207: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -19.125
    3. '```' → logprob: -21.125
    4. '+' → logprob: -21.25
    5. ' ' → logprob: -22.25
    6. '
' → logprob: -22.375
    7. '９' → logprob: -22.875
    8. '10' → logprob: -23.25
    9. '18' → logprob: -23.75
    10. '19' → logprob: -24.25

Token 208: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.375
    3. '```' → logprob: -20.25
    4. '+' → logprob: -21.75
    5. '９' → logprob: -21.875
    6. '
' → logprob: -23.375
    7. '19' → logprob: -24.125
    8. '18' → logprob: -24.25
    9. '``' → logprob: -24.25
    10. '10' → logprob: -24.25

Token 209: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006272526225075126
    2. ' +' → logprob: -7.375627040863037
    3. '+
' → logprob: -14.500627517700195
    4. '7' → logprob: -16.000627517700195
    5. '＋' → logprob: -17.000627517700195
    6. ' ' → logprob: -17.625627517700195
    7. ' plus' → logprob: -18.000627517700195
    8. ' ' → logprob: -18.750627517700195
    9. 'plus' → logprob: -18.875627517700195
    10. ' +
' → logprob: -19.125627517700195

Token 210: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '07' → logprob: -20.625
    3. ' ' → logprob: -21.0
    4. '+' → logprob: -21.125
    5. '７' → logprob: -22.375
    6. '```' → logprob: -22.375
    7. '

' → logprob: -23.25
    8. '
' → logprob: -23.75
    9. '   ' → logprob: -24.125
    10. '9' → logprob: -24.25

Token 211: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '７' → logprob: -21.625
    3. '07' → logprob: -22.5
    4. '+' → logprob: -22.625
    5. '

' → logprob: -24.75
    6. '```' → logprob: -24.75
    7. ' ' → logprob: -25.125
    8. '
' → logprob: -25.25
    9. '   ' → logprob: -25.375
    10. '۷' → logprob: -26.5

Token 212: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39335739612579346
    2. '<|end|>' → logprob: -1.6433573961257935
    3. '\n' → logprob: -2.518357276916504
    4. '```' → logprob: -4.643357276916504
    5. 'def' → logprob: -4.643357276916504
    6. '#' → logprob: -4.643357276916504
    7. ' 
' → logprob: -5.268357276916504
    8. 'n' → logprob: -5.393357276916504
    9. '' → logprob: -5.893357276916504
    10. '\' → logprob: -6.018357276916504

Token 213: 'MAX' (ID: 21911)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01571289449930191
    2. 'n' → logprob: -4.640712738037109
    3. 'class' → logprob: -5.890712738037109
    4. '#' → logprob: -7.140712738037109
    5. 'dp' → logprob: -7.390712738037109
    6. '\n' → logprob: -8.01571273803711
    7. 'd' → logprob: -8.14071273803711
    8. 'for' → logprob: -8.26571273803711
    9. '\' → logprob: -8.51571273803711
    10. '
' → logprob: -9.39071273803711

Token 214: ' =' (ID: 314)
  Prédit: '_N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.1810738444328308
    2. 'N' → logprob: -2.5560739040374756
    3. ' =' → logprob: -2.5560739040374756
    4. '_SIZE' → logprob: -6.0560736656188965
    5. '_' → logprob: -6.1810736656188965
    6. '=' → logprob: -6.1810736656188965
    7. '_n' → logprob: -6.4310736656188965
    8. '_V' → logprob: -6.6810736656188965
    9. '_LEN' → logprob: -8.306074142456055
    10. '_A' → logprob: -8.931074142456055

Token 215: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003430792596191168
    2. '100' → logprob: -6.1284308433532715
    3. '2' → logprob: -7.0034308433532715
    4. '200' → logprob: -8.503430366516113
    5. '1' → logprob: -9.878430366516113
    6. ' ' → logprob: -10.253430366516113
    7. 'int' → logprob: -10.378430366516113
    8. '300' → logprob: -12.628430366516113
    9. '500' → logprob: -12.753430366516113
    10. '5' → logprob: -13.503430366516113

Token 216: '('' (ID: 706)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.3958513140678406
    2. '('' → logprob: -1.1458513736724854
    3. ''' → logprob: -5.020851135253906
    4. '"' → logprob: -7.770851135253906
    5. ''i' → logprob: -8.645851135253906
    6. ''int' → logprob: -8.770851135253906
    7. '("' → logprob: -8.895851135253906
    8. ''ex' → logprob: -9.020851135253906
    9. ''a' → logprob: -9.270851135253906
    10. ''exp' → logprob: -9.395851135253906

Token 217: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0031346979085355997
    2. '1' → logprob: -6.253134727478027
    3. ''in' → logprob: -7.503134727478027
    4. '10' → logprob: -8.128134727478027
    5. 'in' → logprob: -8.878134727478027
    6. ''' → logprob: -9.628134727478027
    7. '"' → logprob: -10.378134727478027
    8. 'INF' → logprob: -10.503134727478027
    9. '-inf' → logprob: -10.628134727478027
    10. '100' → logprob: -10.878134727478027

Token 218: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021972409449517727
    2. '')' → logprob: -6.127197265625
    3. ' )' → logprob: -11.627197265625
    4. ')
' → logprob: -13.627197265625
    5. '")' → logprob: -14.252197265625
    6. '()' → logprob: -15.002197265625
    7. '())' → logprob: -15.502197265625
    8. '))' → logprob: -15.877197265625
    9. ')'' → logprob: -16.252197265625
    10. '),' → logprob: -16.377197265625

Token 219: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00026968008023686707
    2. 'n' → logprob: -9.125269889831543
    3. 'class' → logprob: -9.500269889831543
    4. '#' → logprob: -9.625269889831543
    5. '\' → logprob: -12.125269889831543
    6. '
' → logprob: -12.250269889831543
    7. '\n' → logprob: -13.250269889831543
    8. 'd' → logprob: -13.375269889831543
    9. 'ndef' → logprob: -13.625269889831543
    10. '```' → logprob: -14.250269889831543

Token 220: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.004704237915575504
    2. ' solve' → logprob: -5.754704475402832
    3. 'main' → logprob: -7.004704475402832
    4. ' dfs' → logprob: -8.129704475402832
    5. 'solve' → logprob: -8.879704475402832
    6. ' factorial' → logprob: -10.129704475402832
    7. ' ' → logprob: -10.504704475402832
    8. ' factor' → logprob: -10.629704475402832
    9. ' bfs' → logprob: -10.879704475402832
    10. ' input' → logprob: -11.379704475402832

Token 221: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.981667537620524e-06
    2. ' ():' → logprob: -13.375001907348633
    3. '()' → logprob: -15.125001907348633
    4. '():
' → logprob: -16.625001907348633
    5. '(' → logprob: -17.375001907348633
    6. '(:' → logprob: -19.625001907348633
    7. '(":' → logprob: -20.250001907348633
    8. '().' → logprob: -20.625001907348633
    9. '():
' → logprob: -21.875001907348633
    10. '(':' → logprob: -22.625001907348633

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005303958430886269
    2. '    ' → logprob: -5.880303859710693
    3. '<|end|>' → logprob: -6.755303859710693
    4. '    
' → logprob: -7.755303859710693
    5. 'n' → logprob: -8.880304336547852
    6. '(' → logprob: -8.880304336547852
    7. ')' → logprob: -9.130304336547852
    8. '(n' → logprob: -10.005304336547852
    9. '<|end|>' → logprob: -10.005304336547852
    10. '‌' → logprob: -10.255304336547852

Token 223: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11231432110071182
    2. ' n' → logprob: -3.112314224243164
    3. 'n' → logprob: -3.737314224243164
    4. '    ' → logprob: -3.862314224243164
    5. ' pass' → logprob: -4.362314224243164
    6. '   ' → logprob: -6.612314224243164
    7. ' i' → logprob: -7.987314224243164
    8. ' 
' → logprob: -7.987314224243164
    9. ' )' → logprob: -8.112314224243164
    10. 'a' → logprob: -8.612314224243164

Token 224: ' os' (ID: 1994)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.017775971442461014
    2. ' ' → logprob: -4.392776012420654
    3. '__' → logprob: -5.767776012420654
    4. ' True' → logprob: -6.642776012420654
    5. '  ' → logprob: -8.892775535583496
    6. ' _' → logprob: -9.017775535583496
    7. '_' → logprob: -9.267775535583496
    8. ' len' → logprob: -9.517775535583496
    9. ' not' → logprob: -9.517775535583496
    10. ' il' → logprob: -9.642775535583496

Token 225: '.getenv' (ID: 105382)
  Prédit: '.path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.path' → logprob: -0.41266927123069763
    2. '.name' → logprob: -1.66266930103302
    3. '.environ' → logprob: -2.1626691818237305
    4. '.getenv' → logprob: -3.5376691818237305
    5. '.getcwd' → logprob: -6.1626691818237305
    6. '.' → logprob: -6.6626691818237305
    7. '.listdir' → logprob: -7.5376691818237305
    8. '.get' → logprob: -8.53766918182373
    9. ' .' → logprob: -9.28766918182373
    10. '.access' → logprob: -9.53766918182373

Token 226: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03453400358557701
    2. '("' → logprob: -3.409533977508545
    3. '(' → logprob: -7.034533977508545
    4. '(
' → logprob: -13.409534454345703
    5. '('_' → logprob: -13.409534454345703
    6. '()' → logprob: -13.659534454345703
    7. '('__' → logprob: -14.034534454345703
    8. '(('' → logprob: -15.034534454345703
    9. ' ('' → logprob: -15.034534454345703
    10. '(';' → logprob: -15.784534454345703

Token 227: 'LOCAL' (ID: 90515)
  Prédit: 'LOCAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOCAL' → logprob: -0.252835750579834
    2. 'DEBUG' → logprob: -1.877835750579834
    3. 'USER' → logprob: -3.002835750579834
    4. 'HOME' → logprob: -5.002835750579834
    5. 'TEST' → logprob: -5.627835750579834
    6. 'ONLINE' → logprob: -6.002835750579834
    7. 'USERNAME' → logprob: -6.127835750579834
    8. 'AT' → logprob: -7.002835750579834
    9. 'MY' → logprob: -7.127835750579834
    10. '"' → logprob: -7.502835750579834

Token 228: '"):
' (ID: 33645)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3366641700267792
    2. '"):' → logprob: -1.8366641998291016
    3. '"):
' → logprob: -2.0866641998291016
    4. '")==' → logprob: -6.711664199829102
    5. '",' → logprob: -8.086664199829102
    6. '"):
' → logprob: -8.461664199829102
    7. '"' → logprob: -9.336664199829102
    8. '_ENV' → logprob: -9.336664199829102
    9. '   ' → logprob: -9.336664199829102
    10. '_TEST' → logprob: -9.461664199829102

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06380321085453033
    2. ':' → logprob: -2.813803195953369
    3. ',' → logprob: -7.063803195953369
    4. '():' → logprob: -7.688803195953369
    5. ' :' → logprob: -9.063803672790527
    6. ':
' → logprob: -9.563803672790527
    7. '        
' → logprob: -9.813803672790527
    8. '   ' → logprob: -10.313803672790527
    9. '):' → logprob: -10.313803672790527
    10. '        ' → logprob: -10.563803672790527

Token 230: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5215186476707458
    2. '   ' → logprob: -1.5215187072753906
    3. '    ' → logprob: -2.0215187072753906
    4. 'sys' (adapté à ' sys') → logprob: -3.1465187072753906
    5. 'import' → logprob: -4.771518707275391
    6. ' import' → logprob: -6.146518707275391
    7. ' input' → logprob: -7.521518707275391
    8. ' ' → logprob: -7.646518707275391
    9. 'f' → logprob: -8.02151870727539
    10. '	sys' → logprob: -9.27151870727539

Token 231: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.01429302804172039
    2. '.stdout' → logprob: -4.264293193817139
    3. '.stderr' → logprob: -9.51429271697998
    4. '   ' → logprob: -10.26429271697998
    5. '.' → logprob: -11.26429271697998
    6. '.argv' → logprob: -12.51429271697998
    7. '.path' → logprob: -13.76429271697998
    8. '.std' → logprob: -13.88929271697998
    9. ' .' → logprob: -14.13929271697998
    10. 'stdin' → logprob: -14.88929271697998

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6401773691177368
    2. '=' → logprob: -0.8901773691177368
    3. '=open' → logprob: -2.8901772499084473
    4. '=sys' → logprob: -5.015177249908447
    5. '=input' → logprob: -12.765177726745605
    6. 'sys' → logprob: -12.765177726745605
    7. ' ' → logprob: -13.265177726745605
    8. '=subprocess' → logprob: -13.390177726745605
    9. '=file' → logprob: -13.765177726745605
    10. '=os' → logprob: -13.890177726745605

Token 233: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.048587825149297714
    2. ' open' → logprob: -3.0485877990722656
    3. '	open' → logprob: -15.048587799072266
    4. '   ' → logprob: -16.548587799072266
    5. 'io' → logprob: -16.673587799072266
    6. 'sys' → logprob: -17.673587799072266
    7. ' ' → logprob: -17.798587799072266
    8. '(open' → logprob: -18.923587799072266
    9. '  ' → logprob: -19.298587799072266
    10. '=open' → logprob: -19.298587799072266

Token 234: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.019624928012490273
    2. '('' → logprob: -4.019624710083008
    3. '(' → logprob: -6.769624710083008
    4. '("./' → logprob: -8.769624710083008
    5. '("../' → logprob: -9.394624710083008
    6. '("/' → logprob: -10.144624710083008
    7. '(os' → logprob: -10.894624710083008
    8. '("__' → logprob: -11.519624710083008
    9. '('./' → logprob: -11.769624710083008
    10. '("_' → logprob: -12.269624710083008

Token 235: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5695942044258118
    2. '"' → logprob: -1.694594144821167
    3. ''' → logprob: -1.819594144821167
    4. ''in' → logprob: -3.444594144821167
    5. '"in' → logprob: -4.069594383239746
    6. ''t' → logprob: -4.444594383239746
    7. 'in' → logprob: -4.444594383239746
    8. '0' → logprob: -5.069594383239746
    9. 'local' → logprob: -5.444594383239746
    10. ''s' → logprob: -7.194594383239746

Token 236: '.txt' (ID: 7186)
  Prédit: '.txt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.txt' → logprob: -0.014212513342499733
    2. '.' → logprob: -4.264212608337402
    3. '.py' → logprob: -10.389212608337402
    4. ' .' → logprob: -12.139212608337402
    5. '")' → logprob: -12.889212608337402
    6. '".' → logprob: -13.389212608337402
    7. '.tx' → logprob: -13.514212608337402
    8. '.in' → logprob: -13.764212608337402
    9. '.tsv' → logprob: -13.764212608337402
    10. 'txt' → logprob: -14.014212608337402

Token 237: '",' (ID: 672)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003325883997604251
    2. '",' → logprob: -6.253325939178467
    3. ')' → logprob: -7.003325939178467
    4. '")' → logprob: -8.253325462341309
    5. ',"' → logprob: -9.128325462341309
    6. '","' → logprob: -9.878325462341309
    7. ' ,' → logprob: -9.878325462341309
    8. '',' → logprob: -11.628325462341309
    9. '"' → logprob: -12.878325462341309
    10. ' ' → logprob: -14.253325462341309

Token 238: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20224414765834808
    2. ' "' → logprob: -2.3272440433502197
    3. ''r' → logprob: -2.7022440433502197
    4. 'r' → logprob: -4.077244281768799
    5. ' '' → logprob: -7.327244281768799
    6. ' r' → logprob: -7.827244281768799
    7. ''' → logprob: -8.07724380493164
    8. '"encoding' → logprob: -9.57724380493164
    9. '"os' → logprob: -10.70224380493164
    10. 'mode' → logprob: -11.57724380493164

Token 239: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.246537173457909e-06
    2. 'rt' → logprob: -12.375003814697266
    3. 'w' → logprob: -17.250003814697266
    4. ' r' → logprob: -18.125003814697266
    5. 't' → logprob: -21.250003814697266
    6. 'read' → logprob: -21.375003814697266
    7. '```' → logprob: -21.500003814697266
    8. '
' → logprob: -21.625003814697266
    9. 'rb' → logprob: -22.250003814697266
    10. 'mode' → logprob: -22.375003814697266

Token 240: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00028993739397265017
    2. ')' → logprob: -8.875289916992188
    3. '")
' → logprob: -9.000289916992188
    4. '')' → logprob: -10.875289916992188
    5. '");' → logprob: -12.375289916992188
    6. '"' → logprob: -13.375289916992188
    7. '+")' → logprob: -14.125289916992188
    8. '+' → logprob: -15.375289916992188
    9. '",' → logprob: -16.000289916992188
    10. 't' → logprob: -16.000289916992188

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03664421662688255
    2. '<|end|>' → logprob: -3.786644220352173
    3. '    
' → logprob: -4.536643981933594
    4. '<|end|>' → logprob: -7.161643981933594
    5. '
' → logprob: -7.536643981933594
    6. '    ' → logprob: -7.661643981933594
    7. ' ' → logprob: -8.411643981933594
    8. ')' → logprob: -8.786643981933594
    9. '       ' → logprob: -8.911643981933594
    10. ',' → logprob: -9.911643981933594

Token 242: ' heap' (ID: 37237)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010575046762824059
    2. 'N' → logprob: -5.010574817657471
    3. '   ' → logprob: -5.760574817657471
    4. 't' → logprob: -7.885574817657471
    5. '#' → logprob: -8.385575294494629
    6. 'a' → logprob: -10.510575294494629
    7. 's' → logprob: -10.885575294494629
    8. 'q' → logprob: -11.760575294494629
    9. 'print' → logprob: -11.885575294494629
    10. 'x' → logprob: -11.885575294494629

Token 243: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7441840767860413
    2. 'q' → logprob: -0.9941840767860413
    3. ' =' → logprob: -1.8691840171813965
    4. '=[]' → logprob: -7.8691840171813965
    5. '   ' → logprob: -9.994184494018555
    6. ' ' → logprob: -9.994184494018555
    7. ',' → logprob: -10.244184494018555
    8. '_' → logprob: -10.369184494018555
    9. ')' → logprob: -11.369184494018555
    10. 's' → logprob: -11.619184494018555

Token 244: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31340575218200684
    2. ' []' → logprob: -1.3134057521820068
    3. '[]
' → logprob: -9.563405990600586
    4. '[],' → logprob: -10.688405990600586
    5. '[]}' → logprob: -10.688405990600586
    6. '[' → logprob: -11.313405990600586
    7. 'heap' → logprob: -12.313405990600586
    8. ' []
' → logprob: -12.438405990600586
    9. '[]>' → logprob: -13.188405990600586
    10. '[]

' → logprob: -13.438405990600586

Token 245: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 246: ' heap' (ID: 37237)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2725999355316162
    2. 'for' → logprob: -2.522599935531616
    3. 'import' → logprob: -2.647599935531616
    4. 'heap' (adapté à ' heap') → logprob: -3.647599935531616
    5. 'from' → logprob: -4.272600173950195
    6. 'q' → logprob: -4.522600173950195
    7. 'N' → logprob: -5.147600173950195
    8. ' n' → logprob: -5.272600173950195
    9. '#' → logprob: -5.397600173950195
    10. '   ' → logprob: -6.022600173950195

Token 247: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0026467638090252876
    2. '.he' → logprob: -6.2526469230651855
    3. '.push' → logprob: -8.127646446228027
    4. '.' → logprob: -8.377646446228027
    5. '.append' → logprob: -8.627646446228027
    6. '.heap' → logprob: -11.752646446228027
    7. '.q' → logprob: -12.877646446228027
    8. 'push' → logprob: -14.127646446228027
    9. ' .' → logprob: -14.127646446228027
    10. 'ify' → logprob: -14.752646446228027

Token 248: '.heap' (ID: 177287)
  Prédit: '.he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.017325475811958313
    2. '.' → logprob: -4.642325401306152
    3. '.heap' → logprob: -4.892325401306152
    4. '.push' → logprob: -10.392325401306152
    5. '.h' → logprob: -13.267325401306152
    6. '.He' → logprob: -14.392325401306152
    7. '.dumps' → logprob: -14.517325401306152
    8. '.
' → logprob: -14.642325401306152
    9. '.append' → logprob: -15.142325401306152
    10. '.put' → logprob: -15.142325401306152

Token 249: 'ify' (ID: 1985)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.009421947412192822
    2. 'ify' → logprob: -4.8844218254089355
    3. 'ush' → logprob: -6.6344218254089355
    4. 'he' → logprob: -8.384422302246094
    5. 'replace' → logprob: -8.759422302246094
    6. '_push' → logprob: -10.134422302246094
    7. 'append' → logprob: -10.634422302246094
    8. '.he' → logprob: -10.884422302246094
    9. 'app' → logprob: -11.384422302246094
    10. '

' → logprob: -12.009422302246094

Token 250: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -6.217951886355877e-05
    2. '(' → logprob: -9.750061988830566
    3. '()' → logprob: -13.000061988830566
    4. 'heap' → logprob: -13.625061988830566
    5. '([]' → logprob: -15.250061988830566
    6. '(queue' → logprob: -17.125062942504883
    7. '(
' → logprob: -17.375062942504883
    8. '(h' → logprob: -17.500062942504883
    9. ' heap' → logprob: -17.750062942504883
    10. '.heap' → logprob: -17.875062942504883

Token 251: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. '())' → logprob: -12.250017166137695
    3. '   ' → logprob: -12.375017166137695
    4. '()' → logprob: -12.625017166137695
    5. ' )' → logprob: -12.875017166137695
    6. ')
' → logprob: -13.125017166137695
    7. '))' → logprob: -16.000017166137695
    8. ' ' → logprob: -16.250017166137695
    9. ')

' → logprob: -16.375017166137695
    10. '(heap' → logprob: -16.750017166137695

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3003935217857361
    2. '<|end|>' → logprob: -2.050393581390381
    3. '    ' → logprob: -2.550393581390381
    4. '    
' → logprob: -3.550393581390381
    5. ' ' → logprob: -4.800393581390381
    6. ')' → logprob: -4.925393581390381
    7. 'for' → logprob: -5.800393581390381
    8. '
' → logprob: -6.675393581390381
    9. ' for' → logprob: -7.175393581390381
    10. ' 
' → logprob: -7.300393581390381

Token 253: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06311123818159103
    2. 'N' → logprob: -3.1881113052368164
    3. 'q' → logprob: -4.688111305236816
    4. 'for' → logprob: -4.688111305236816
    5. 'Q' → logprob: -7.313111305236816
    6. '   ' → logprob: -7.563111305236816
    7. 'num' → logprob: -9.438111305236816
    8. '#' → logprob: -10.063111305236816
    9. ' n' → logprob: -10.063111305236816
    10. '    
' → logprob: -10.563111305236816

Token 254: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.03563516214489937
    2. 'True' → logprob: -3.410635232925415
    3. '(True' → logprob: -6.285634994506836
    4. ' heap' → logprob: -10.035634994506836
    5. ' ' → logprob: -10.285634994506836
    6. '1' → logprob: -11.660634994506836
    7. '(' → logprob: -11.910634994506836
    8. ' ii' → logprob: -12.160634994506836
    9. 'ii' → logprob: -12.410634994506836
    10. 'heap' → logprob: -12.660634994506836

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001017551330733113
    2. ',' → logprob: -10.000102043151855
    3. ':
' → logprob: -10.875102043151855
    4. '):' → logprob: -11.000102043151855
    5. '():' → logprob: -11.125102043151855
    6. ' :' → logprob: -12.875102043151855
    7. '   ' → logprob: -13.375102043151855
    8. ':**' → logprob: -14.125102043151855
    9. '.' → logprob: -15.000102043151855
    10. '       ' → logprob: -16.12510108947754

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01057410053908825
    2. '   ' → logprob: -5.010573863983154
    3. '    ' → logprob: -6.135573863983154
    4. ' try' → logprob: -6.885573863983154
    5. ' ' → logprob: -8.135574340820312
    6. ' s' → logprob: -9.385574340820312
    7. ',' → logprob: -10.010574340820312
    8. ' readline' → logprob: -10.135574340820312
    9. ' line' → logprob: -10.135574340820312
    10. 'try' → logprob: -10.635574340820312

Token 257: ' que' (ID: 661)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8793455362319946
    2. 'cmd' → logprob: -1.0043455362319946
    3. '   ' → logprob: -2.254345417022705
    4. 'try' → logprob: -3.254345417022705
    5. 'command' → logprob: -3.504345417022705
    6. 's' → logprob: -3.504345417022705
    7. ' line' → logprob: -4.379345417022705
    8. ' cmd' → logprob: -7.254345417022705
    9. ' command' → logprob: -7.504345417022705
    10. ' s' → logprob: -8.379345893859863

Token 258: ' =' (ID: 314)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.0880822092294693
    2. 'ue' → logprob: -2.5880823135375977
    3. ' =' → logprob: -5.838082313537598
    4. '=' → logprob: -5.838082313537598
    5. 'ues' → logprob: -7.338082313537598
    6. 'u' → logprob: -7.588082313537598
    7. '=input' → logprob: -7.713082313537598
    8. 'uer' → logprob: -7.838082313537598
    9. '   ' → logprob: -7.963082313537598
    10. '=sys' → logprob: -8.088082313537598

Token 259: ' sl' (ID: 1925)
  Prédit: 'iss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iss' → logprob: -0.22337062656879425
    2. 'ii' → logprob: -2.2233705520629883
    3. 'sys' → logprob: -3.0983705520629883
    4. 'input' → logprob: -3.8483705520629883
    5. 'il' → logprob: -3.9733705520629883
    6. 'sl' → logprob: -6.098370552062988
    7. 'is' → logprob: -6.598370552062988
    8. ' iss' → logprob: -7.723370552062988
    9. ' input' → logprob: -7.848370552062988
    10. 'isl' → logprob: -7.848370552062988

Token 260: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004640522412955761
    2. '()
' → logprob: -5.379640579223633
    3. '()[' → logprob: -11.629640579223633
    4. '()
' → logprob: -12.129640579223633
    5. '();' → logprob: -12.379640579223633
    6. '()

' → logprob: -14.254640579223633
    7. ' ()' → logprob: -15.254640579223633
    8. '()\' → logprob: -15.504640579223633
    9. '[' → logprob: -15.879640579223633
    10. '[]' → logprob: -16.254640579223633

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006790682673454285
    2. '<|end|>' → logprob: -5.131790637969971
    3. ' if' → logprob: -8.131791114807129
    4. '[' → logprob: -8.631791114807129
    5. '   ' → logprob: -8.881791114807129
    6. ' ' → logprob: -9.131791114807129
    7. '        
' → logprob: -10.256791114807129
    8. 'if' → logprob: -10.756791114807129
    9. '      ' → logprob: -10.881791114807129
    10. ',' → logprob: -11.381791114807129

Token 262: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05066227167844772
    2. ' if' → logprob: -3.0506622791290283
    3. '       ' → logprob: -6.300662040710449
    4. '   ' → logprob: -8.67566204071045
    5. 'i' → logprob: -10.55066204071045
    6. '    ' → logprob: -10.80066204071045
    7. ' ' → logprob: -11.80066204071045
    8. '	if' → logprob: -12.42566204071045
    9. ' i' → logprob: -12.80066204071045
    10. '        ' → logprob: -13.42566204071045

Token 263: ' que' (ID: 661)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011082957498729229
    2. 'not' → logprob: -4.511083126068115
    3. ' que' → logprob: -11.261082649230957
    4. 'len' → logprob: -12.136082649230957
    5. ' len' → logprob: -12.136082649230957
    6. '	not' → logprob: -12.511082649230957
    7. 'que' → logprob: -12.636082649230957
    8. ' no' → logprob: -13.136082649230957
    9. 'n't' → logprob: -14.511082649230957
    10. ' ' → logprob: -14.636082649230957

Token 264: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04551911726593971
    2. '==' → logprob: -3.2955191135406494
    3. ' ==' → logprob: -5.0455193519592285
    4. ' and' → logprob: -7.1705193519592285
    5. 'and' → logprob: -8.54551887512207
    6. '=' → logprob: -10.92051887512207
    7. ':' → logprob: -11.42051887512207
    8. '```' → logprob: -11.92051887512207
    9. ' ' → logprob: -13.04551887512207
    10. ' =' → logprob: -13.17051887512207

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0041051157750189304
    2. ' ' → logprob: -5.504105091094971
    3. ']' → logprob: -11.129105567932129
    4. ']==' → logprob: -12.004105567932129
    5. '[' → logprob: -12.629105567932129
    6. ')' → logprob: -13.504105567932129
    7. '   ' → logprob: -15.379105567932129
    8. '==' → logprob: -15.754105567932129
    9. 'len' → logprob: -16.004104614257812
    10. '
' → logprob: -16.254104614257812

Token 266: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40745213627815247
    2. ']' → logprob: -1.28245210647583
    3. ' ==' → logprob: -3.15745210647583
    4. ']==' → logprob: -4.28245210647583
    5. ')' → logprob: -7.15745210647583
    6. '=' → logprob: -9.532452583312988
    7. '[' → logprob: -10.907452583312988
    8. '==
' → logprob: -11.032452583312988
    9. ')==' → logprob: -11.282452583312988
    10. '=='' → logprob: -11.282452583312988

Token 267: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014355297200381756
    2. ' ==' → logprob: -4.264355182647705
    3. '=="' → logprob: -9.389355659484863
    4. '=' → logprob: -10.014355659484863
    5. '=='' → logprob: -10.639355659484863
    6. '==
' → logprob: -11.014355659484863
    7. '[' → logprob: -11.639355659484863
    8. ']==' → logprob: -12.764355659484863
    9. ')' → logprob: -12.889355659484863
    10. '===' → logprob: -13.139355659484863

Token 268: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5938856601715088
    2. ''ex' → logprob: -0.9688856601715088
    3. ''' → logprob: -2.968885660171509
    4. ''q' → logprob: -4.84388542175293
    5. ''end' → logprob: -5.34388542175293
    6. ''e' → logprob: -6.46888542175293
    7. ''E' → logprob: -7.71888542175293
    8. '"E' → logprob: -7.71888542175293
    9. ''x' → logprob: -8.34388542175293
    10. ''A' → logprob: -8.34388542175293

Token 269: 'end' (ID: 419)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.3122638463974
    2. 'exit' → logprob: -1.5622638463974
    3. ''ex' → logprob: -1.6872638463974
    4. ''end' → logprob: -2.3122639656066895
    5. ''e' → logprob: -2.9372639656066895
    6. '"' → logprob: -2.9372639656066895
    7. 'end' → logprob: -3.3122639656066895
    8. 'e' → logprob: -3.3122639656066895
    9. 'q' → logprob: -3.4372639656066895
    10. ''q' → logprob: -5.3122639656066895

Token 270: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006140665151178837
    2. '':
' → logprob: -5.38114070892334
    3. ''' → logprob: -6.50614070892334
    4. '':
' → logprob: -11.50614070892334
    5. ':' → logprob: -11.75614070892334
    6. '":' → logprob: -13.00614070892334
    7. '':

' → logprob: -13.75614070892334
    8. ''):' → logprob: -14.00614070892334
    9. '):' → logprob: -14.13114070892334
    10. '(':' → logprob: -14.38114070892334

Token 271: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09319812059402466
    2. '           ' → logprob: -2.96819806098938
    3. '       ' → logprob: -3.46819806098938
    4. ':
' → logprob: -5.093198299407959
    5. '.' → logprob: -9.0931978225708
    6. ' :' → logprob: -10.3431978225708
    7. ',' → logprob: -10.7181978225708
    8. ':return' → logprob: -10.9681978225708
    9. '):' → logprob: -11.3431978225708
    10. '               ' → logprob: -11.5931978225708

Token 272: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5959087610244751
    2. '           ' → logprob: -0.8459087610244751
    3. '               ' → logprob: -4.7209086418151855
    4. ' break' → logprob: -4.8459086418151855
    5. 'return' → logprob: -6.4709086418151855
    6. '       ' → logprob: -6.7209086418151855
    7. '	break' → logprob: -8.595909118652344
    8. '		' → logprob: -10.720909118652344
    9. '	       ' → logprob: -11.720909118652344
    10. ' return' → logprob: -12.095909118652344

Token 273: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033380553126335144
    2. '<|end|>' → logprob: -3.5333805084228516
    3. '        
' → logprob: -6.033380508422852
    4. '
' → logprob: -8.033380508422852
    5. '        ' → logprob: -8.408380508422852
    6. '    
' → logprob: -9.158380508422852
    7. ',' → logprob: -9.158380508422852
    8. ')' → logprob: -9.658380508422852
    9. '<|end|>' → logprob: -9.783380508422852
    10. '\n' → logprob: -9.908380508422852

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11669722199440002
    2. '<|end|>' → logprob: -2.366697311401367
    3. ' ' → logprob: -5.491697311401367
    4. '        
' → logprob: -5.741697311401367
    5. '    ' → logprob: -6.491697311401367
    6. '        ' → logprob: -6.616697311401367
    7. ',' → logprob: -6.991697311401367
    8. '\n' → logprob: -7.116697311401367
    9. '\' → logprob: -7.241697311401367
    10. '   ' → logprob: -7.616697311401367

Token 275: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49569663405418396
    2. 'elif' (adapté à ' elif') → logprob: -1.9956966638565063
    3. ' ' → logprob: -2.120696544647217
    4. ' elif' → logprob: -2.245696544647217
    5. '    ' → logprob: -4.245696544647217
    6. '        ' → logprob: -5.495696544647217
    7. '   ' → logprob: -5.995696544647217
    8. '        
' → logprob: -6.245696544647217
    9. ' if' → logprob: -6.370696544647217
    10. 'if' → logprob: -6.745696544647217

Token 276: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.054943326860666275
    2. 'que' → logprob: -2.929943323135376
    3. ''' → logprob: -10.304943084716797
    4. ' qu' → logprob: -12.179943084716797
    5. 'ques' → logprob: -12.304943084716797
    6. ' ques' → logprob: -12.554943084716797
    7. ' ' → logprob: -12.679943084716797
    8. ' len' → logprob: -13.054943084716797
    9. 'len' → logprob: -13.429943084716797
    10. ' '' → logprob: -13.679943084716797

Token 277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009325110353529453
    2. '==' → logprob: -4.75932502746582
    3. ' ==' → logprob: -7.25932502746582
    4. ' [' → logprob: -12.38432502746582
    5. '=' → logprob: -14.25932502746582
    6. 'and' → logprob: -14.38432502746582
    7. ' ' → logprob: -15.13432502746582
    8. '===' → logprob: -15.13432502746582
    9. '```' → logprob: -15.50932502746582
    10. '[]' → logprob: -15.75932502746582

Token 278: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3984391391277313
    2. '0' → logprob: -1.1484391689300537
    3. ''s' → logprob: -4.648438930511475
    4. ''t' → logprob: -7.148438930511475
    5. '[' → logprob: -7.773438930511475
    6. ' '' → logprob: -8.898439407348633
    7. '==' → logprob: -9.273439407348633
    8. ' ' → logprob: -9.398439407348633
    9. ''a' → logprob: -9.898439407348633
    10. ''[' → logprob: -9.898439407348633

Token 279: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15072780847549438
    2. '==' → logprob: -2.7757277488708496
    3. ']==' → logprob: -3.0257277488708496
    4. '']' → logprob: -3.9007277488708496
    5. ' ==' → logprob: -4.90072774887085
    6. '']==' → logprob: -7.65072774887085
    7. ' ]' → logprob: -8.275728225708008
    8. ']=='' → logprob: -8.400728225708008
    9. '']=='' → logprob: -8.650728225708008
    10. '[' → logprob: -8.775728225708008

Token 280: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16031521558761597
    2. '==' → logprob: -1.9103152751922607
    3. '=='' → logprob: -10.28531551361084
    4. '=' → logprob: -10.66031551361084
    5. ' =' → logprob: -11.53531551361084
    6. '[' → logprob: -11.53531551361084
    7. ' ' → logprob: -12.16031551361084
    8. ' =='' → logprob: -12.53531551361084
    9. '=="' → logprob: -13.91031551361084
    10. '===' → logprob: -14.03531551361084

Token 281: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.009223767556250095
    2. ''a' → logprob: -5.759223937988281
    3. ''ins' → logprob: -6.759223937988281
    4. ''h' → logprob: -7.009223937988281
    5. ''p' → logprob: -7.009223937988281
    6. ''s' → logprob: -7.509223937988281
    7. ''in' → logprob: -7.884223937988281
    8. ''i' → logprob: -8.384223937988281
    9. ''t' → logprob: -8.509223937988281
    10. ''en' → logprob: -9.134223937988281

Token 282: 'insert' (ID: 14813)
  Prédit: 'push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -0.05864143371582031
    2. 'add' → logprob: -3.1836414337158203
    3. 'a' → logprob: -5.05864143371582
    4. ''' → logprob: -5.68364143371582
    5. 'insert' → logprob: -5.68364143371582
    6. 'i' → logprob: -6.80864143371582
    7. 'p' → logprob: -7.43364143371582
    8. 'h' → logprob: -9.30864143371582
    9. '0' → logprob: -9.43364143371582
    10. 'print' → logprob: -9.68364143371582

Token 283: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.009041259065270424
    2. ''' → logprob: -4.7590413093566895
    3. '':
' → logprob: -7.8840413093566895
    4. '':
' → logprob: -10.384040832519531
    5. '':'' → logprob: -12.009040832519531
    6. ''):' → logprob: -12.634040832519531
    7. ' ':' → logprob: -12.759040832519531
    8. '':

' → logprob: -12.884040832519531
    9. '":' → logprob: -14.134040832519531
    10. ' '' → logprob: -14.259040832519531

Token 284: '           ' (ID: 352)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.25627750158309937
    2. '       ' → logprob: -1.6312775611877441
    3. '           ' → logprob: -4.381277561187744
    4. ' ' → logprob: -4.631277561187744
    5. 'heap' → logprob: -5.631277561187744
    6. '        ' → logprob: -6.506277561187744
    7. '(heap' → logprob: -6.881277561187744
    8. ' he' → logprob: -7.881277561187744
    9. '   ' → logprob: -8.381277084350586
    10. ' and' → logprob: -8.631277084350586

Token 285: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.7172001600265503
    2. ' heap' → logprob: -1.2172001600265503
    3. ' x' → logprob: -2.21720027923584
    4. 'x' → logprob: -2.71720027923584
    5. '   ' → logprob: -4.21720027923584
    6. '           ' → logprob: -4.96720027923584
    7. 'val' → logprob: -5.34220027923584
    8. 'num' → logprob: -5.34220027923584
    9. ' n' → logprob: -5.71720027923584
    10. ' val' → logprob: -6.09220027923584

Token 286: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00022761584841646254
    2. '.append' → logprob: -8.625227928161621
    3. '.he' → logprob: -10.500227928161621
    4. 'he' → logprob: -11.625227928161621
    5. 'push' → logprob: -13.000227928161621
    6. '.' → logprob: -13.250227928161621
    7. ',' → logprob: -13.375227928161621
    8. '_push' → logprob: -13.500227928161621
    9. '.push' → logprob: -13.500227928161621
    10. 'append' → logprob: -13.875227928161621

Token 287: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.001542834215797484
    2. '.heap' → logprob: -6.501543045043945
    3. '.' → logprob: -10.126543045043945
    4. '.push' → logprob: -15.251543045043945
    5. '.h' → logprob: -16.751543045043945
    6. '.put' → logprob: -17.126543045043945
    7. '‌.' → logprob: -17.626543045043945
    8. ' .' → logprob: -17.626543045043945
    9. '.He' → logprob: -17.751543045043945
    10. '.enqueue' → logprob: -18.001543045043945

Token 288: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -9.639096970204264e-05
    2. 'ap' → logprob: -9.250096321105957
    3. 'a' → logprob: -17.500097274780273
    4. 'push' → logprob: -17.875097274780273
    5. 'pp' → logprob: -18.375097274780273
    6. '```' → logprob: -18.375097274780273
    7. 'appen' → logprob: -18.375097274780273
    8. 'append' → logprob: -19.375097274780273
    9. '(app' → logprob: -19.500097274780273
    10. '...' → logprob: -19.625097274780273

Token 289: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -7.40998875699006e-05
    2. 'le' → logprob: -10.50007438659668
    3. 'sh' → logprob: -10.62507438659668
    4. 'push' → logprob: -10.87507438659668
    5. 'op' → logprob: -13.62507438659668
    6. 'p' → logprob: -14.62507438659668
    7. 'q' → logprob: -15.25007438659668
    8. 'h' → logprob: -15.50007438659668
    9. 'n' → logprob: -15.50007438659668
    10. 'us' → logprob: -15.62507438659668

Token 290: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.00015872348740231246
    2. '(' → logprob: -8.750158309936523
    3. '(queue' → logprob: -16.625158309936523
    4. '(
' → logprob: -16.625158309936523
    5. ' (' → logprob: -17.000158309936523
    6. 'heap' → logprob: -17.875158309936523
    7. ' heap' → logprob: -18.500158309936523
    8. '(hash' → logprob: -20.000158309936523
    9. '.heap' → logprob: -20.125158309936523
    10. ',' → logprob: -20.250158309936523

Token 291: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0030256023164838552
    2. ',' → logprob: -5.878025531768799
    3. '(' → logprob: -8.503026008605957
    4. 'heap' → logprob: -12.128026008605957
    5. ' heap' → logprob: -12.628026008605957
    6. '),' → logprob: -13.003026008605957
    7. '(queue' → logprob: -13.253026008605957
    8. ')' → logprob: -13.378026008605957
    9. ',(' → logprob: -13.753026008605957
    10. ' ,' → logprob: -13.878026008605957

Token 292: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011714138090610504
    2. ' int' → logprob: -6.751171588897705
    3. '(int' → logprob: -13.876171112060547
    4. '<int' → logprob: -15.876171112060547
    5. '
' → logprob: -17.001171112060547
    6. '   ' → logprob: -17.126171112060547
    7. '	int' → logprob: -17.251171112060547
    8. '[int' → logprob: -17.626171112060547
    9. ',int' → logprob: -17.876171112060547
    10. '=int' → logprob: -18.501171112060547

Token 293: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.749814019713085e-06
    2. 'que' → logprob: -12.250006675720215
    3. ')' → logprob: -13.750006675720215
    4. '(
' → logprob: -14.875006675720215
    5. '(queue' → logprob: -16.12500762939453
    6. '('' → logprob: -16.25000762939453
    7. '((' → logprob: -16.62500762939453
    8. ')(' → logprob: -16.75000762939453
    9. ' (' → logprob: -17.12500762939453
    10. '
' → logprob: -17.87500762939453

Token 294: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.038085438311100006
    2. '(' → logprob: -3.288085460662842
    3. ')' → logprob: -10.913084983825684
    4. ' que' → logprob: -11.413084983825684
    5. 'quee' → logprob: -11.663084983825684
    6. '   ' → logprob: -13.163084983825684
    7. '```' → logprob: -13.913084983825684
    8. '
' → logprob: -14.413084983825684
    9. 'ques' → logprob: -14.913084983825684
    10. '``' → logprob: -15.038084983825684

Token 295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '()[' → logprob: -12.375004768371582
    3. '(' → logprob: -15.000004768371582
    4. ')[' → logprob: -16.3750057220459
    5. '```' → logprob: -16.8750057220459
    6. ' [' → logprob: -17.2500057220459
    7. '   ' → logprob: -17.5000057220459
    8. '1' → logprob: -17.8750057220459
    9. '\[' → logprob: -18.5000057220459
    10. '][' → logprob: -18.7500057220459

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07899069786071777
    2. '[' → logprob: -2.5789906978607178
    3. ' [' → logprob: -9.828990936279297
    4. '   ' → logprob: -10.953990936279297
    5. '
' → logprob: -11.703990936279297
    6. '][' → logprob: -11.828990936279297
    7. ' ' → logprob: -12.328990936279297
    8. '```' → logprob: -12.453990936279297
    9. '(' → logprob: -13.453990936279297
    10. '       ' → logprob: -14.578990936279297

Token 297: '])' (ID: 4636)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5964726209640503
    2. ']))' → logprob: -0.8464726209640503
    3. '])' → logprob: -4.22147274017334
    4. ')' → logprob: -5.72147274017334
    5. ')))' → logprob: -6.59647274017334
    6. ')])' → logprob: -7.34647274017334
    7. ')]' → logprob: -8.97147274017334
    8. ']' → logprob: -9.22147274017334
    9. '']))' → logprob: -9.22147274017334
    10. '()))' → logprob: -11.47147274017334

Token 298: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.575563020305708e-05
    2. '))' → logprob: -9.750065803527832
    3. ')
' → logprob: -12.375065803527832
    4. ' )' → logprob: -13.125065803527832
    5. ')))' → logprob: -13.875065803527832
    6. '       ' → logprob: -16.375064849853516
    7. ')`' → logprob: -16.625064849853516
    8. ')return' → logprob: -17.625064849853516
    9. '())' → logprob: -17.750064849853516
    10. ')

' → logprob: -17.875064849853516

Token 299: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0025858853477984667
    2. '1' → logprob: -6.2525858879089355
    3. ' -' → logprob: -8.127585411071777
    4. '(-' → logprob: -8.627585411071777
    5. ' ' → logprob: -10.127585411071777
    6. '100' → logprob: -10.502585411071777
    7. '-M' → logprob: -10.627585411071777
    8. '(' → logprob: -10.752585411071777
    9. 'int' → logprob: -10.752585411071777
    10. 'MOD' → logprob: -10.877585411071777

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -15.875021934509277
    4. '2' → logprob: -17.37502098083496
    5. '   ' → logprob: -17.37502098083496
    6. '-' → logprob: -17.62502098083496
    7. '100' → logprob: -17.62502098083496
    8. '  ' → logprob: -17.75002098083496
    9. '
' → logprob: -17.87502098083496
    10. '10' → logprob: -18.00002098083496

Token 301: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3872804641723633
    2. ')' → logprob: -1.1372804641723633
    3. '))
' → logprob: -8.637280464172363
    4. ')))' → logprob: -8.762280464172363
    5. ')
' → logprob: -9.887280464172363
    6. '       ' → logprob: -11.762280464172363
    7. ' ))' → logprob: -11.887280464172363
    8. ' )' → logprob: -12.137280464172363
    9. '           ' → logprob: -12.887280464172363
    10. '));' → logprob: -14.887280464172363

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7562866806983948
    2. '<|end|>' → logprob: -1.50628662109375
    3. ')' → logprob: -1.63128662109375
    4. '
' → logprob: -2.25628662109375
    5. '<|end|>' → logprob: -5.88128662109375
    6. 'elif' → logprob: -6.00628662109375
    7. '\n' → logprob: -7.25628662109375
    8. ' elif' → logprob: -7.50628662109375
    9. ')
' → logprob: -7.63128662109375
    10. '   ' → logprob: -7.88128662109375

Token 303: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017017219215631485
    2. 'elif' (adapté à ' elif') → logprob: -7.126701831817627
    3. ' elif' → logprob: -7.626701831817627
    4. ')' → logprob: -8.876701354980469
    5. '   ' → logprob: -9.126701354980469
    6. ',' → logprob: -9.751701354980469
    7. '<|end|>' → logprob: -10.001701354980469
    8. '    ' → logprob: -11.126701354980469
    9. '	elif' → logprob: -11.626701354980469
    10. '      ' → logprob: -12.001701354980469

Token 304: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.04303698241710663
    2. 'que' → logprob: -3.168036937713623
    3. ' len' → logprob: -11.293037414550781
    4. ' ques' → logprob: -12.168037414550781
    5. 'ques' → logprob: -12.543037414550781
    6. ' ' → logprob: -12.543037414550781
    7. ''' → logprob: -12.918037414550781
    8. ' queue' → logprob: -13.043037414550781
    9. ' ' → logprob: -13.293037414550781
    10. ' quer' → logprob: -13.918037414550781

Token 305: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0013100019423291087
    2. '==' → logprob: -6.751309871673584
    3. ' ==' → logprob: -9.126310348510742
    4. ' [' → logprob: -10.501310348510742
    5. '=' → logprob: -13.251310348510742
    6. '[]' → logprob: -14.501310348510742
    7. ':' → logprob: -14.626310348510742
    8. ' ' → logprob: -15.626310348510742
    9. '```' → logprob: -15.626310348510742
    10. ' =' → logprob: -15.876310348510742

Token 306: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.24898740649223328
    2. '0' → logprob: -1.7489874362945557
    3. '[' → logprob: -3.6239874362945557
    4. ''s' → logprob: -4.248987197875977
    5. ' '' → logprob: -5.498987197875977
    6. ' ' → logprob: -7.748987197875977
    7. ''[' → logprob: -8.248987197875977
    8. '"' → logprob: -9.123987197875977
    9. ''t' → logprob: -9.123987197875977
    10. 'que' → logprob: -9.498987197875977

Token 307: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4572962522506714
    2. ']' → logprob: -1.8322962522506714
    3. ' ==' → logprob: -1.8322962522506714
    4. ']==' → logprob: -3.082296371459961
    5. '[' → logprob: -8.332296371459961
    6. '=' → logprob: -8.457296371459961
    7. ')' → logprob: -9.207296371459961
    8. ':' → logprob: -9.332296371459961
    9. '']' → logprob: -9.332296371459961
    10. ')==' → logprob: -9.457296371459961

Token 308: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869982957839966
    2. '==' → logprob: -1.1369982957839966
    3. '=='' → logprob: -9.511998176574707
    4. ''' → logprob: -10.511998176574707
    5. '=' → logprob: -11.636998176574707
    6. ' '' → logprob: -12.386998176574707
    7. ' =='' → logprob: -12.636998176574707
    8. ':' → logprob: -13.011998176574707
    9. '===' → logprob: -13.261998176574707
    10. '[' → logprob: -13.261998176574707

Token 309: ' '' (ID: 461)
  Prédit: ''ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ex' → logprob: -0.06735625118017197
    2. ''' → logprob: -2.8173563480377197
    3. ''s' → logprob: -6.567356109619141
    4. ''t' → logprob: -6.817356109619141
    5. ''d' → logprob: -7.192356109619141
    6. ' '' → logprob: -7.317356109619141
    7. ''in' → logprob: -7.567356109619141
    8. ''p' → logprob: -8.31735610961914
    9. ''end' → logprob: -9.44235610961914
    10. ''all' → logprob: -9.56735610961914

Token 310: 'extract' (ID: 53466)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.5518651604652405
    2. 'extract' → logprob: -0.9268651604652405
    3. 'get' → logprob: -4.801865100860596
    4. 'delete' → logprob: -5.051865100860596
    5. 'remove' → logprob: -5.051865100860596
    6. 'print' → logprob: -5.301865100860596
    7. ''' → logprob: -7.801865100860596
    8. 'size' → logprob: -7.926865100860596
    9. 'peek' → logprob: -8.176865577697754
    10. 'top' → logprob: -8.176865577697754

Token 311: '':
' (ID: 7669)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.7030767798423767
    2. 'max' → logprob: -0.9530767798423767
    3. '-max' → logprob: -2.3280768394470215
    4. '_min' → logprob: -4.7030768394470215
    5. '':' → logprob: -4.8280768394470215
    6. ''):' → logprob: -6.4530768394470215
    7. 'min' → logprob: -6.4530768394470215
    8. '-min' → logprob: -7.2030768394470215
    9. 'Max' → logprob: -8.578076362609863
    10. ''' → logprob: -8.953076362609863

Token 312: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06951706856489182
    2. '           ' → logprob: -3.194517135620117
    3. ':' → logprob: -3.819517135620117
    4. ':
' → logprob: -5.694517135620117
    5. ' and' → logprob: -7.694517135620117
    6. '   ' → logprob: -9.194517135620117
    7. ' if' → logprob: -9.319517135620117
    8. ',' → logprob: -9.819517135620117
    9. '        
' → logprob: -10.194517135620117
    10. '):
' → logprob: -10.694517135620117

Token 313: ' print' (ID: 2123)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27218177914619446
    2. 'if' → logprob: -1.647181749343872
    3. ' print' → logprob: -3.897181749343872
    4. 'print' (adapté à ' print') → logprob: -4.147181987762451
    5. '       ' → logprob: -5.147181987762451
    6. '           ' → logprob: -5.647181987762451
    7. '   ' → logprob: -9.647181510925293
    8. ' try' → logprob: -10.022181510925293
    9. 'try' → logprob: -10.272181510925293
    10. ' val' → logprob: -10.647181510925293

Token 314: '(heap' (ID: 173794)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.04134102165699005
    2. '(' → logprob: -3.7913410663604736
    3. '((-' → logprob: -4.2913408279418945
    4. '(heap' → logprob: -5.9163408279418945
    5. '(-(' → logprob: -7.5413408279418945
    6. '(
' → logprob: -7.6663408279418945
    7. '((' → logprob: -8.291340827941895
    8. '()' → logprob: -8.791340827941895
    9. '(abs' → logprob: -9.041340827941895
    10. '-' → logprob: -12.416340827941895

Token 315: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1378278285264969
    2. '[' → logprob: -2.3878278732299805
    3. ' and' → logprob: -3.7628278732299805
    4. ')' → logprob: -4.6378278732299805
    5. '))' → logprob: -6.1378278732299805
    6. 'and' → logprob: -8.38782787322998
    7. ',' → logprob: -8.51282787322998
    8. '[q' → logprob: -8.63782787322998
    9. ')))' → logprob: -8.76282787322998
    10. ')
' → logprob: -8.76282787322998

Token 316: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -4.6087021473795176e-05
    2. 'he' → logprob: -10.625045776367188
    3. '_he' → logprob: -11.375045776367188
    4. '.heap' → logprob: -12.625045776367188
    5. '._' → logprob: -12.875045776367188
    6. '.' → logprob: -13.375045776367188
    7. '.nl' → logprob: -14.375045776367188
    8. 'q' → logprob: -14.750045776367188
    9. '```' → logprob: -14.750045776367188
    10. ' he' → logprob: -15.000045776367188

Token 317: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -8.061054359131958e-06
    2. 'ap' → logprob: -12.375007629394531
    3. 'pp' → logprob: -12.625007629394531
    4. 'a' → logprob: -15.625007629394531
    5. 'q' → logprob: -15.750007629394531
    6. '[' → logprob: -17.25000762939453
    7. 'sp' → logprob: -18.12500762939453
    8. 'pop' → logprob: -18.12500762939453
    9. 'appe' → logprob: -18.62500762939453
    10. 'apps' → logprob: -19.00000762939453

Token 318: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.004900231026113033
    2. 'app' → logprob: -5.3799004554748535
    3. 'pop' → logprob: -9.129899978637695
    4. 'ap' → logprob: -9.629899978637695
    5. 'pp' → logprob: -10.379899978637695
    6. 'e' → logprob: -10.754899978637695
    7. 'p' → logprob: -11.004899978637695
    8. 'o' → logprob: -11.629899978637695
    9. 'ush' → logprob: -11.879899978637695
    10. 'opp' → logprob: -12.379899978637695

Token 319: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.375000953674316
    3. '(queue' → logprob: -17.75
    4. 'heap' → logprob: -18.375
    5. ')' → logprob: -18.875
    6. ' heap' → logprob: -19.0
    7. '(
' → logprob: -19.875
    8. ' (' → logprob: -20.375
    9. '(hash' → logprob: -21.5
    10. '(deck' → logprob: -21.625

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01816258206963539
    2. ')*' → logprob: -4.018162727355957
    3. ' )' → logprob: -12.018162727355957
    4. '))' → logprob: -12.518162727355957
    5. '   ' → logprob: -13.893162727355957
    6. '*)' → logprob: -14.393162727355957
    7. '*' → logprob: -15.143162727355957
    8. '")' → logprob: -15.518162727355957
    9. '*(-' → logprob: -15.768162727355957
    10. ')*(' → logprob: -15.893162727355957

Token 321: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1669938564300537
    2. '*(-' → logprob: -2.2919938564300537
    3. ')' → logprob: -3.4169938564300537
    4. ' *' → logprob: -4.541994094848633
    5. '*-' → logprob: -5.166994094848633
    6. ')*' → logprob: -5.916994094848633
    7. '   ' → logprob: -7.166994094848633
    8. '()*' → logprob: -10.166994094848633
    9. '  ' → logprob: -11.166994094848633
    10. ' ' → logprob: -11.666994094848633

Token 322: ' (-' (ID: 21382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008158236742019653
    2. ' -' → logprob: -7.7508158683776855
    3. '(-' → logprob: -7.8758158683776855
    4. '(' → logprob: -12.875815391540527
    5. '1' → logprob: -13.125815391540527
    6. ' (-' → logprob: -15.250815391540527
    7. '   ' → logprob: -15.625815391540527
    8. ' ' → logprob: -16.375816345214844
    9. '```' → logprob: -17.375816345214844
    10. '  ' → logprob: -17.500816345214844

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.875001907348633
    4. '-' → logprob: -16.500001907348633
    5. ')' → logprob: -16.875001907348633
    6. '```' → logprob: -17.750001907348633
    7. '  ' → logprob: -18.250001907348633
    8. '
' → logprob: -18.625001907348633
    9. '１' → logprob: -19.750001907348633
    10. ' -' → logprob: -19.812501907348633

Token 324: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004446124075911939
    2. '))' → logprob: -8.250444412231445
    3. ')
' → logprob: -8.625444412231445
    4. '       ' → logprob: -13.000444412231445
    5. ' )' → logprob: -14.625444412231445
    6. ')))' → logprob: -15.375444412231445
    7. '')' → logprob: -15.500444412231445
    8. ')`' → logprob: -15.750444412231445
    9. '`)' → logprob: -15.875444412231445
    10. '   ' → logprob: -16.375444412231445

Token 325: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00889215525239706
    2. '__' → logprob: -4.758892059326172
    3. '_' → logprob: -8.258892059326172
    4. ' _' → logprob: -12.008892059326172
    5. ' ___' → logprob: -12.133892059326172
    6. '___' → logprob: -12.883892059326172
    7. ' ' → logprob: -13.633892059326172
    8. ' ' → logprob: -13.758892059326172
    9. '_name' → logprob: -14.258892059326172
    10. ' ____' → logprob: -14.383892059326172

Token 327: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.35460519790649414
    2. ' __' → logprob: -1.8546051979064941
    3. ' ==' → logprob: -1.9796051979064941
    4. '.__' → logprob: -6.354605197906494
    5. '==' → logprob: -6.729605197906494
    6. ' main' → logprob: -8.604604721069336
    7. '__.__' → logprob: -8.854604721069336
    8. '<|end|>' → logprob: -9.354604721069336
    9. '=="' → logprob: -9.604604721069336
    10. ' =="' → logprob: -9.854604721069336

Token 328: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.7432603272027336e-06
    2. '__.__' → logprob: -13.625001907348633
    3. '==' → logprob: -15.000001907348633
    4. '___' → logprob: -16.875001907348633
    5. '__.' → logprob: -16.875001907348633
    6. '____' → logprob: -17.625001907348633
    7. '_' → logprob: -17.750001907348633
    8. '__
' → logprob: -17.750001907348633
    9. ' ==' → logprob: -18.000001907348633
    10. '__,' → logprob: -18.500001907348633

Token 329: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2912890315055847
    2. '__' → logprob: -1.5412890911102295
    3. '==' → logprob: -3.6662890911102295
    4. '=="' → logprob: -5.04128885269165
    5. '.__' → logprob: -6.16628885269165
    6. '.' → logprob: -6.66628885269165
    7. '_' → logprob: -6.79128885269165
    8. '__.__' → logprob: -7.54128885269165
    9. ' .' → logprob: -7.79128885269165
    10. ' ' → logprob: -8.416289329528809

Token 330: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029761366546154022
    2. ''' → logprob: -3.52976131439209
    3. ' "__' → logprob: -11.52976131439209
    4. '__' → logprob: -14.77976131439209
    5. ' '__' → logprob: -15.02976131439209
    6. ''"' → logprob: -15.90476131439209
    7. '"user' → logprob: -16.029762268066406
    8. '"'' → logprob: -17.904762268066406
    9. '"_' → logprob: -18.029762268066406
    10. '"name' → logprob: -18.279762268066406

Token 331: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.051066520740278e-05
    2. 'name' → logprob: -9.750060081481934
    3. '__' → logprob: -13.375060081481934
    4. 'm' → logprob: -15.000060081481934
    5. '_main' → logprob: -16.12506103515625
    6. 'ma' → logprob: -16.50006103515625
    7. ' main' → logprob: -17.37506103515625
    8. '__':
' → logprob: -20.00006103515625
    9. '	main' → logprob: -20.00006103515625
    10. 'mp' → logprob: -20.12506103515625

Token 332: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.14546731114387512
    2. '__' → logprob: -2.0204672813415527
    3. '':' → logprob: -6.145467281341553
    4. '__:' → logprob: -7.520467281341553
    5. ':' → logprob: -9.895467758178711
    6. '__":
' → logprob: -10.520467758178711
    7. '_' → logprob: -11.020467758178711
    8. '':'' → logprob: -12.770467758178711
    9. ''>' → logprob: -13.895467758178711
    10. '':
' → logprob: -13.895467758178711

Token 333: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.057340145111083984
    2. ' main' → logprob: -3.307340145111084
    3. '   ' → logprob: -4.432340145111084
    4. '	main' → logprob: -4.932340145111084
    5. '_main' → logprob: -11.557340621948242
    6. '    
' → logprob: -12.557340621948242
    7. '(main' → logprob: -13.432340621948242
    8. ' ' → logprob: -14.057340621948242
    9. '  ' → logprob: -14.682340621948242
    10. '<|end|>' → logprob: -14.682340621948242

Token 334: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.25
    3. '	main' → logprob: -20.75
    4. '_main' → logprob: -23.375
    5. '.main' → logprob: -24.125
    6. '(main' → logprob: -25.375
    7. 'Main' → logprob: -25.75
    8. 'mainwindow' → logprob: -26.125
    9. '   ' → logprob: -26.5
    10. 'mai' → logprob: -26.75

Token 335: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014943843707442284
    2. '<|end|>' → logprob: -7.376494407653809
    3. '(' → logprob: -7.876494407653809
    4. '()
' → logprob: -8.126494407653809
    5. '
' → logprob: -9.251494407653809
    6. '```' → logprob: -10.376494407653809
    7. '#' → logprob: -11.001494407653809
    8. ')' → logprob: -11.626494407653809
    9. '();' → logprob: -11.626494407653809
    10. '()\' → logprob: -11.751494407653809


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 333
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 148
Tokens correctement prédits (top 10): 277
Précision stricte (1ère position): 43.24%
Précision adaptée (1ère position): 44.44%
Précision (top 10): 83.18%
================================================================================
