================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq
import sys
input=sys.stdin.readline

hq=[]
while True:
	s=input()
	if s[0]=="e" and s[1]=="n":
		exit()
	elif s[0]=="e":
		print(-heapq.heappop(hq))
	else:
		q,w=s.split()
		w=int(w)
		heapq.heappush(hq,-w)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6100132496794686e-05
    2. '.\' → logprob: -11.125056266784668
    3. '(' → logprob: -11.625056266784668
    4. '.
' → logprob: -11.750056266784668
    5. '.​' → logprob: -12.000056266784668
    6. '."""' → logprob: -12.750056266784668
    7. '```' → logprob: -12.875056266784668
    8. '\' → logprob: -13.125056266784668
    9. '.

' → logprob: -13.250056266784668
    10. ' .' → logprob: -13.250056266784668

Token 4: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00020509003661572933
    2. '\' → logprob: -9.500205039978027
    3. '.

' → logprob: -10.875205039978027
    4. '(' → logprob: -11.000205039978027
    5. '.
' → logprob: -11.000205039978027
    6. '```' → logprob: -11.250205039978027
    7. '<|end|>' → logprob: -11.750205039978027
    8. '

' → logprob: -11.750205039978027
    9. '.\' → logprob: -11.750205039978027
    10. '.

' → logprob: -12.000205039978027

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.13539129495620728
    2. ' collections' → logprob: -3.1353912353515625
    3. ' math' → logprob: -3.1353912353515625
    4. ' itertools' → logprob: -3.6353912353515625
    5. ' os' → logprob: -5.2603912353515625
    6. ' threading' → logprob: -5.5103912353515625
    7. 'sys' → logprob: -6.5103912353515625
    8. 'collections' → logprob: -7.1353912353515625
    9. ' queue' → logprob: -7.2603912353515625
    10. ' ' → logprob: -8.135391235351562

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.42863884568214417
    2. '\n' → logprob: -1.5536388158798218
    3. '\' → logprob: -2.1786389350891113
    4. '
' → logprob: -5.178638935089111
    5. '```' → logprob: -5.303638935089111
    6. '<|end|>' → logprob: -5.553638935089111
    7. 'newline' → logprob: -5.678638935089111
    8. '[' → logprob: -6.678638935089111
    9. '<|end|>' → logprob: -6.678638935089111
    10. '.readline' → logprob: -6.928638935089111

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.11282507330179214
    2. '\n' → logprob: -2.8628251552581787
    3. '\' → logprob: -3.2378251552581787
    4. '
' → logprob: -5.8628249168396
    5. '```' → logprob: -5.9878249168396
    6. '.
' → logprob: -6.3628249168396
    7. '.

' → logprob: -7.3628249168396
    8. '[' → logprob: -7.8628249168396
    9. '' → logprob: -8.112825393676758
    10. 'import' → logprob: -8.237825393676758

Token 8: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03105168417096138
    2. '.' → logprob: -3.5310516357421875
    3. '<|end|>' → logprob: -7.9060516357421875
    4. '```' → logprob: -8.656051635742188
    5. ')' → logprob: -8.781051635742188
    6. '()' → logprob: -8.781051635742188
    7. '=' → logprob: -9.156051635742188
    8. '(
' → logprob: -9.656051635742188
    9. '(.)' → logprob: -9.906051635742188
    10. '.readline' → logprob: -10.156051635742188

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02704164944589138
    2. '.stdin' → logprob: -4.277041435241699
    3. '.readline' → logprob: -4.402041435241699
    4. '.stdout' → logprob: -9.0270414352417
    5. ' .' → logprob: -9.2770414352417
    6. '.
' → logprob: -9.7770414352417
    7. '.argv' → logprob: -10.4020414352417
    8. '.std' → logprob: -10.5270414352417
    9. '.\' → logprob: -10.5270414352417
    10. '```' → logprob: -11.1520414352417

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001071750302799046
    2. '.read' → logprob: -7.001071929931641
    3. '.' → logprob: -8.87607192993164
    4. 'read' → logprob: -11.50107192993164
    5. '.readlines' → logprob: -12.25107192993164
    6. '.Read' → logprob: -13.25107192993164
    7. '```' → logprob: -13.25107192993164
    8. '.buffer' → logprob: -14.62607192993164
    9. '_read' → logprob: -14.62607192993164
    10. ' readline' → logprob: -15.00107192993164

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0663854256272316
    2. '(' → logprob: -2.941385507583618
    3. '()
' → logprob: -5.191385269165039
    4. '()\' → logprob: -6.191385269165039
    5. '().' → logprob: -6.941385269165039
    6. '()

' → logprob: -6.941385269165039
    7. ')' → logprob: -7.441385269165039
    8. 'def' → logprob: -8.441385269165039
    9. '(
' → logprob: -8.441385269165039
    10. '
' → logprob: -8.816385269165039

Token 12: 'hq' (ID: 156668)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09215359389781952
    2. 'def' → logprob: -2.592153549194336
    3. 'n' → logprob: -5.217153549194336
    4. '()' → logprob: -5.592153549194336
    5. '(n' → logprob: -6.217153549194336
    6. 'd' → logprob: -7.842153549194336
    7. 'data' → logprob: -8.092153549194336
    8. ')' → logprob: -8.342153549194336
    9. '(
' → logprob: -8.467153549194336
    10. 'for' → logprob: -8.592153549194336

Token 13: '=[]
' (ID: 63466)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001126167830079794
    2. '.append' → logprob: -7.126126289367676
    3. '.he' → logprob: -8.626126289367676
    4. '=' → logprob: -10.251126289367676
    5. '.put' → logprob: -10.501126289367676
    6. '[' → logprob: -10.751126289367676
    7. '.push' → logprob: -11.376126289367676
    8. '.)' → logprob: -11.626126289367676
    9. '.=' → logprob: -12.251126289367676
    10. ' .' → logprob: -12.376126289367676

Token 14: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6120072603225708
    2. '.' → logprob: -1.2370072603225708
    3. 'heap' → logprob: -2.7370071411132812
    4. 'while' → logprob: -3.8620071411132812
    5. 'for' → logprob: -4.112007141113281
    6. 'n' → logprob: -4.487007141113281
    7. ',' → logprob: -4.612007141113281
    8. ')' → logprob: -4.987007141113281
    9. '(heap' → logprob: -4.987007141113281
    10. 'def' → logprob: -5.112007141113281

Token 15: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6988336443901062
    2. ' True' → logprob: -0.6988336443901062
    3. '  ' → logprob: -5.698833465576172
    4. ' not' → logprob: -6.323833465576172
    5. 'True' → logprob: -7.823833465576172
    6. ' len' → logprob: -9.823833465576172
    7. ' input' → logprob: -10.823833465576172
    8. '(True' → logprob: -11.573833465576172
    9. ' h' → logprob: -11.698833465576172
    10. ' (' → logprob: -11.698833465576172

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003179259831085801
    2. '():' → logprob: -5.87817907333374
    3. '):' → logprob: -9.253179550170898
    4. ':
' → logprob: -9.628179550170898
    5. ' :' → logprob: -9.878179550170898
    6. ':**' → logprob: -9.878179550170898
    7. '(' → logprob: -10.128179550170898
    8. '   ' → logprob: -10.878179550170898
    9. '(:' → logprob: -11.378179550170898
    10. ',' → logprob: -12.253179550170898

Token 17: '	s' (ID: 3520)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.082160584628582
    2. ' n' → logprob: -3.957160472869873
    3. ' line' → logprob: -4.207160472869873
    4. 'n' → logprob: -4.457160472869873
    5. '    
' → logprob: -4.707160472869873
    6. '<|end|>' → logprob: -5.082160472869873
    7. '    ' → logprob: -5.332160472869873
    8. ' ' → logprob: -5.832160472869873
    9. ' 
' → logprob: -5.832160472869873
    10. ' token' → logprob: -6.457160472869873

Token 18: '=input' (ID: 87911)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.6814556121826172
    2. 't' → logprob: -1.1814556121826172
    3. 'trip' → logprob: -2.556455612182617
    4. 'tr' → logprob: -2.681455612182617
    5. '=' → logprob: -4.181455612182617
    6. 'td' → logprob: -5.056455612182617
    7. ' =' → logprob: -5.556455612182617
    8. 'e' → logprob: -6.056455612182617
    9. 'tring' → logprob: -6.306455612182617
    10. '=input' → logprob: -6.431455612182617

Token 19: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2529764473438263
    2. '().' → logprob: -1.502976417541504
    3. '())' → logprob: -7.752976417541504
    4. '(' → logprob: -7.877976417541504
    5. '.readline' → logprob: -9.627976417541504
    6. '()
' → logprob: -10.127976417541504
    7. '()>' → logprob: -10.377976417541504
    8. '()

' → logprob: -10.502976417541504
    9. '.strip' → logprob: -11.002976417541504
    10. '()!=' → logprob: -11.877976417541504

Token 20: '	if' (ID: 1224)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.009102572686970234
    2. '.' → logprob: -4.8841023445129395
    3. '.rstrip' → logprob: -6.8841023445129395
    4. '().' → logprob: -8.259102821350098
    5. 'strip' → logprob: -9.259102821350098
    6. 'if' → logprob: -10.009102821350098
    7. '[:-' → logprob: -11.009102821350098
    8. '()' → logprob: -11.134102821350098
    9. ' if' → logprob: -11.759102821350098
    10. '	if' → logprob: -12.009102821350098

Token 21: ' s' (ID: 265)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03597123548388481
    2. ' s' → logprob: -3.410971164703369
    3. 'not' → logprob: -6.660971164703369
    4. ' ' → logprob: -7.535971164703369
    5. 's' → logprob: -7.660971164703369
    6. '	not' → logprob: -10.785971641540527
    7. ' ' → logprob: -12.160971641540527
    8. '	s' → logprob: -12.160971641540527
    9. '  ' → logprob: -13.535971641540527
    10. '```' → logprob: -13.785971641540527

Token 22: '[' (ID: 58)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7890241742134094
    2. '.' → logprob: -1.1640241146087646
    3. '.strip' → logprob: -2.0390241146087646
    4. ' ==' → logprob: -2.2890241146087646
    5. '.rstrip' → logprob: -7.164024353027344
    6. '.startswith' → logprob: -7.664024353027344
    7. '=='' → logprob: -8.539024353027344
    8. '=' → logprob: -8.789024353027344
    9. '=="' → logprob: -9.414024353027344
    10. ' .' → logprob: -9.914024353027344

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005398084758780897
    2. ' ' → logprob: -8.750539779663086
    3. ']' → logprob: -8.750539779663086
    4. ':' → logprob: -9.875539779663086
    5. ']==' → logprob: -9.875539779663086
    6. '-' → logprob: -10.000539779663086
    7. ':-' → logprob: -11.375539779663086
    8. ']=='' → logprob: -11.500539779663086
    9. '1' → logprob: -11.750539779663086
    10. ':]' → logprob: -11.750539779663086

Token 24: ']=="' (ID: 164578)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.7957237958908081
    2. ']' → logprob: -1.795723795890808
    3. ']=='' → logprob: -2.0457239151000977
    4. '==' → logprob: -2.1707239151000977
    5. '=' → logprob: -2.7957239151000977
    6. '=='' → logprob: -3.0457239151000977
    7. ''' → logprob: -4.795723915100098
    8. ' ==' → logprob: -5.295723915100098
    9. ':' → logprob: -5.795723915100098
    10. '-' → logprob: -5.920723915100098

Token 25: 'e' (ID: 68)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014383273664861917
    2. ''' → logprob: -7.251438140869141
    3. '"' → logprob: -7.501438140869141
    4. '-' → logprob: -10.25143814086914
    5. '.' → logprob: -10.37643814086914
    6. ' ' → logprob: -10.50143814086914
    7. ''\' → logprob: -10.62643814086914
    8. '\' → logprob: -11.87643814086914
    9. '#' → logprob: -12.00143814086914
    10. '":' → logprob: -12.25143814086914

Token 26: '"' (ID: 1)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014309515245258808
    2. 'n' → logprob: -7.126430988311768
    3. 'xit' → logprob: -7.876430988311768
    4. 'l' → logprob: -8.75143051147461
    5. 'm' → logprob: -10.37643051147461
    6. '\x' → logprob: -10.87643051147461
    7. 'xi' → logprob: -11.62643051147461
    8. 'a' → logprob: -12.50143051147461
    9. 'd' → logprob: -12.50143051147461
    10. '```' → logprob: -12.62643051147461

Token 27: ' and' (ID: 326)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.05714854225516319
    2. 'lif' → logprob: -3.3071484565734863
    3. 'lse' → logprob: -4.807148456573486
    4. 'x' → logprob: -5.682148456573486
    5. '	l' → logprob: -6.307148456573486
    6. 'li' → logprob: -6.557148456573486
    7. ' l' → logprob: -7.307148456573486
    8. ':' → logprob: -7.557148456573486
    9. '```' → logprob: -7.682148456573486
    10. '1' → logprob: -7.932148456573486

Token 28: ' s' (ID: 265)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.477089285850525
    2. 'len' → logprob: -1.602089285850525
    3. 'q' → logprob: -2.1020894050598145
    4. 'n' → logprob: -2.2270894050598145
    5. ' s' → logprob: -2.6020894050598145
    6. 's' → logprob: -2.8520894050598145
    7. 'of' → logprob: -2.9770894050598145
    8. 'xit' → logprob: -3.1020894050598145
    9. 'val' → logprob: -3.9770894050598145
    10. 'x' → logprob: -3.9770894050598145

Token 29: '[' (ID: 58)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5444653034210205
    2. 'q' → logprob: -1.4194653034210205
    3. 'nd' → logprob: -2.2944653034210205
    4. 'xit' → logprob: -3.7944653034210205
    5. '```' → logprob: -4.044465065002441
    6. 'x' → logprob: -4.044465065002441
    7. '=='' → logprob: -5.544465065002441
    8. 'val' → logprob: -5.794465065002441
    9. 'n' → logprob: -5.919465065002441
    10. ' ==' → logprob: -6.544465065002441

Token 30: '1' (ID: 16)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22819259762763977
    2. '==' → logprob: -3.1031925678253174
    3. 'nd' → logprob: -3.2281925678253174
    4. 'n' → logprob: -3.4781925678253174
    5. 'm' → logprob: -3.8531925678253174
    6. '```' → logprob: -4.3531928062438965
    7. '=' → logprob: -4.6031928062438965
    8. 'x' → logprob: -4.6031928062438965
    9. ']' → logprob: -5.8531928062438965
    10. ')' → logprob: -5.9781928062438965

Token 31: ']=="' (ID: 164578)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.04463019594550133
    2. '==' → logprob: -3.794630289077759
    3. '=' → logprob: -4.66963005065918
    4. 'quals' → logprob: -5.41963005065918
    5. 'qual' → logprob: -5.91963005065918
    6. 'x' → logprob: -6.54463005065918
    7. ' ==' → logprob: -7.66963005065918
    8. 'qu' → logprob: -7.79463005065918
    9. '```' → logprob: -7.91963005065918
    10. 'nd' → logprob: -8.04463005065918

Token 32: 'n' (ID: 77)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11323221027851105
    2. 'n' → logprob: -2.363232135772705
    3. 'xit' → logprob: -4.613232135772705
    4. 'nd' → logprob: -7.113232135772705
    5. 'd' → logprob: -7.238232135772705
    6. 'q' → logprob: -8.238232612609863
    7. '"x' → logprob: -8.488232612609863
    8. '"' → logprob: -8.738232612609863
    9. 'a' → logprob: -9.488232612609863
    10. ')' → logprob: -9.738232612609863

Token 33: '":
' (ID: 9213)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -4.60414821645827e-06
    2. '```' → logprob: -12.625004768371582
    3. '"d' → logprob: -15.125004768371582
    4. ''d' → logprob: -15.625004768371582
    5. '	d' → logprob: -15.625004768371582
    6. 'dl' → logprob: -16.250003814697266
    7. 'df' → logprob: -16.750003814697266
    8. '"' → logprob: -17.250003814697266
    9. '\d' → logprob: -17.250003814697266
    10. 'ds' → logprob: -17.250003814697266

Token 34: '	' (ID: 197)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1404573768377304
    2. 'd' → logprob: -2.1404573917388916
    3. '	break' → logprob: -4.7654571533203125
    4. '	t' → logprob: -6.7654571533203125
    5. '```' → logprob: -6.8904571533203125
    6. 'b' → logprob: -7.1404571533203125
    7. '	' → logprob: -7.3904571533203125
    8. 'e' → logprob: -8.140457153320312
    9. '		' → logprob: -8.640457153320312
    10. 'a' → logprob: -9.265457153320312

Token 35: '	exit' (ID: 35786)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4900059998035431
    2. '	break' → logprob: -1.2400059700012207
    3. '	b' → logprob: -3.6150059700012207
    4. 'b' → logprob: -3.7400059700012207
    5. 'd' → logprob: -3.9900059700012207
    6. '	' → logprob: -4.990005970001221
    7. '```' → logprob: -5.365005970001221
    8. '	t' → logprob: -5.490005970001221
    9. '   ' → logprob: -5.615005970001221
    10. 'break' → logprob: -5.740005970001221

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16096045076847076
    2. '(' → logprob: -1.9109604358673096
    3. '()
' → logprob: -7.285960674285889
    4. '()

' → logprob: -11.03596019744873
    5. '(
' → logprob: -11.78596019744873
    6. '()\' → logprob: -11.91096019744873
    7. '()
' → logprob: -12.03596019744873
    8. '0' → logprob: -12.53596019744873
    9. '())' → logprob: -12.78596019744873
    10. '()`' → logprob: -13.41096019744873

Token 37: '	elif' (ID: 56165)
  Prédit: '	elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	elif' → logprob: -0.23381945490837097
    2. '	else' → logprob: -2.2338194847106934
    3. '	if' → logprob: -2.8588194847106934
    4. '	
' → logprob: -4.358819484710693
    5. '	s' → logprob: -4.483819484710693
    6. '	' → logprob: -5.233819484710693
    7. '	i' → logprob: -5.358819484710693
    8. ' elif' → logprob: -6.483819484710693
    9. '	for' → logprob: -7.108819484710693
    10. 'elif' → logprob: -7.358819484710693

Token 38: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.008943788707256317
    2. 's' → logprob: -5.133943557739258
    3. ' len' → logprob: -6.258943557739258
    4. ' ' → logprob: -7.383943557739258
    5. 'len' → logprob: -7.883943557739258
    6. ' not' → logprob: -10.633943557739258
    7. ' ' → logprob: -11.258943557739258
    8. ' "' → logprob: -11.383943557739258
    9. ' '' → logprob: -11.633943557739258
    10. '  ' → logprob: -11.758943557739258

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00819384679198265
    2. '.startswith' → logprob: -5.6331939697265625
    3. '==' → logprob: -6.1331939697265625
    4. '=="' → logprob: -7.1331939697265625
    5. '[:' → logprob: -7.1331939697265625
    6. '=='' → logprob: -8.758193969726562
    7. ' ==' → logprob: -8.758193969726562
    8. '.' → logprob: -8.758193969726562
    9. '.split' → logprob: -8.883193969726562
    10. ' [' → logprob: -9.258193969726562

Token 40: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5914875268936157
    2. '0' → logprob: -0.9664875268936157
    3. ''' → logprob: -3.716487407684326
    4. '"' → logprob: -3.716487407684326
    5. ''[' → logprob: -5.841487407684326
    6. '1' → logprob: -6.341487407684326
    7. '.startswith' → logprob: -6.466487407684326
    8. ''s' → logprob: -6.466487407684326
    9. ' ' → logprob: -6.591487407684326
    10. '=="' → logprob: -6.716487407684326

Token 41: ']=="' (ID: 164578)
  Prédit: ']=="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=="' → logprob: -0.7406617403030396
    2. '=="' → logprob: -0.8656617403030396
    3. ']==' → logprob: -2.86566162109375
    4. ']' → logprob: -3.86566162109375
    5. ']=='' → logprob: -4.11566162109375
    6. '==' → logprob: -5.49066162109375
    7. ' =="' → logprob: -6.24066162109375
    8. '=='' → logprob: -7.24066162109375
    9. ' ==' → logprob: -7.49066162109375
    10. '[' → logprob: -7.86566162109375

Token 42: 'e' (ID: 68)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7071781754493713
    2. 'p' → logprob: -0.9571781754493713
    3. 'a' → logprob: -2.2071781158447266
    4. 'h' → logprob: -5.582178115844727
    5. 'e' → logprob: -5.832178115844727
    6. '"' → logprob: -6.457178115844727
    7. 'd' → logprob: -6.957178115844727
    8. 'q' → logprob: -7.332178115844727
    9. 'n' → logprob: -7.332178115844727
    10. 'r' → logprob: -8.207178115844727

Token 43: '":
' (ID: 9213)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0029456093907356262
    2. 'x' → logprob: -6.002945423126221
    3. 'lif' → logprob: -8.627945899963379
    4. 'li' → logprob: -9.502945899963379
    5. 'q' → logprob: -9.752945899963379
    6. 'm' → logprob: -10.002945899963379
    7. 'n' → logprob: -10.377945899963379
    8. 'a' → logprob: -10.502945899963379
    9. 'lse' → logprob: -11.752945899963379
    10. ''l' → logprob: -11.877945899963379

Token 44: '	' (ID: 197)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6033738255500793
    2. '	l' → logprob: -1.4783737659454346
    3. ' l' → logprob: -2.1033737659454346
    4. 'x' → logprob: -3.2283737659454346
    5. 'lse' → logprob: -3.8533737659454346
    6. '	' → logprob: -4.853374004364014
    7. '	x' → logprob: -5.103374004364014
    8. 'm' → logprob: -5.728374004364014
    9. 'lif' → logprob: -5.728374004364014
    10. 'n' → logprob: -6.103374004364014

Token 45: '	print' (ID: 15269)
  Prédit: '	l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	l' → logprob: -1.223792314529419
    2. 'l' → logprob: -1.473792314529419
    3. ' l' → logprob: -1.723792314529419
    4. 'x' → logprob: -2.598792314529419
    5. '	' → logprob: -2.848792314529419
    6. '	x' → logprob: -2.973792314529419
    7. ' ' → logprob: -3.973792314529419
    8. ' x' → logprob: -3.973792314529419
    9. '	n' → logprob: -4.47379207611084
    10. 'n' → logprob: -4.72379207611084

Token 46: '(-' (ID: 8087)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.2509586215019226
    2. '(' → logprob: -2.0009586811065674
    3. '(-' → logprob: -2.7509586811065674
    4. 'heap' → logprob: -4.500958442687988
    5. '(len' → logprob: -5.750958442687988
    6. '()' → logprob: -5.750958442687988
    7. 'he' → logprob: -6.250958442687988
    8. '(min' → logprob: -6.500958442687988
    9. '(h' → logprob: -7.500958442687988
    10. '(max' → logprob: -8.000958442687988

Token 47: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.23594827950000763
    2. 'hq' → logprob: -1.6109483242034912
    3. '1' → logprob: -4.610948085784912
    4. 'h' → logprob: -8.23594856262207
    5. 'he' → logprob: -9.48594856262207
    6. ' heap' → logprob: -9.86094856262207
    7. 'hp' → logprob: -10.48594856262207
    8. 'pq' → logprob: -10.98594856262207
    9. 'hc' → logprob: -11.23594856262207
    10. '```' → logprob: -11.23594856262207

Token 48: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.18150286376476288
    2. '[' → logprob: -1.8065028190612793
    3. 'h' → logprob: -6.556502819061279
    4. 'hq' → logprob: -8.806503295898438
    5. '0' → logprob: -9.306503295898438
    6. '<|end|>' → logprob: -9.681503295898438
    7. ')' → logprob: -11.556503295898438
    8. '	q' → logprob: -12.681503295898438
    9. '```' → logprob: -12.806503295898438
    10. '[h' → logprob: -12.931503295898438

Token 49: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.009146158583462238
    2. 'q' → logprob: -4.884146213531494
    3. '.heap' → logprob: -7.884146213531494
    4. '[' → logprob: -8.134145736694336
    5. '.pop' → logprob: -8.384145736694336
    6. 'he' → logprob: -8.634145736694336
    7. 'op' → logprob: -8.884145736694336
    8. 'pop' → logprob: -9.134145736694336
    9. 'ush' → logprob: -9.259145736694336
    10. '.' → logprob: -10.634145736694336

Token 50: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.22549188137054443
    2. 'ap' → logprob: -1.6004918813705444
    3. 'a' → logprob: -10.600491523742676
    4. '```' → logprob: -10.850491523742676
    5. '[' → logprob: -11.475491523742676
    6. 'ап' → logprob: -11.850491523742676
    7. 'q' → logprob: -11.975491523742676
    8. 'pp' → logprob: -13.100491523742676
    9. 'p' → logprob: -13.600491523742676
    10. 'qp' → logprob: -13.975491523742676

Token 51: 'op' (ID: 467)
  Prédit: 'ush'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.5237169861793518
    2. 'op' → logprob: -0.8987169861793518
    3. 'h' → logprob: -8.898716926574707
    4. 'u' → logprob: -9.023716926574707
    5. '[' → logprob: -9.523716926574707
    6. 'y' → logprob: -10.148716926574707
    7. 'q' → logprob: -10.398716926574707
    8. ')' → logprob: -10.523716926574707
    9. 'le' → logprob: -10.898716926574707
    10. 'ap' → logprob: -11.023716926574707

Token 52: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -5.676981345459353e-06
    2. 'h' → logprob: -12.875005722045898
    3. '(q' → logprob: -13.500005722045898
    4. '(' → logprob: -13.625005722045898
    5. ')' → logprob: -15.625005722045898
    6. '	h' → logprob: -16.0000057220459
    7. ',h' → logprob: -16.7500057220459
    8. 'hq' → logprob: -17.2500057220459
    9. ' h' → logprob: -18.2500057220459
    10. '/h' → logprob: -18.3750057220459

Token 53: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00012689977302215993
    2. ')' → logprob: -10.000126838684082
    3. 'p' → logprob: -10.250126838684082
    4. 'pq' → logprob: -10.750126838684082
    5. ')])' → logprob: -12.125126838684082
    6. '[' → logprob: -12.375126838684082
    7. '])' → logprob: -12.500126838684082
    8. '<|end|>' → logprob: -12.875126838684082
    9. 'Q' → logprob: -13.750126838684082
    10. '))' → logprob: -13.750126838684082

Token 54: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.03242316469550133
    2. ')' → logprob: -3.532423257827759
    3. '))
' → logprob: -6.28242301940918
    4. ')))' → logprob: -7.28242301940918
    5. ')+' → logprob: -10.28242301940918
    6. '),' → logprob: -11.15742301940918
    7. '))
' → logprob: -11.15742301940918
    8. '	' → logprob: -11.78242301940918
    9. ' ))' → logprob: -12.03242301940918
    10. '[' → logprob: -12.03242301940918

Token 55: '	else' (ID: 5107)
  Prédit: '	elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	elif' → logprob: -0.9298365116119385
    2. ' elif' → logprob: -1.1798365116119385
    3. ' else' → logprob: -2.0548365116119385
    4. '	else' → logprob: -2.5548365116119385
    5. '	' → logprob: -3.0548365116119385
    6. 'elif' → logprob: -3.8048365116119385
    7. ')' → logprob: -5.054836273193359
    8. ' ' → logprob: -5.179836273193359
    9. 'else' → logprob: -6.179836273193359
    10. '[' → logprob: -6.304836273193359

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013237286359071732
    2. '	' → logprob: -5.388237476348877
    3. ':
' → logprob: -5.638237476348877
    4. ' :' → logprob: -5.888237476348877
    5. '	if' → logprob: -6.638237476348877
    6. '		' → logprob: -8.013236999511719
    7. ' if' → logprob: -8.763236999511719
    8. ' :
' → logprob: -9.638236999511719
    9. '{' → logprob: -9.763236999511719
    10. 'if' → logprob: -10.138236999511719

Token 57: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.010973653756082058
    2. 'heap' → logprob: -5.2609734535217285
    3. '```' → logprob: -6.3859734535217285
    4. ' heap' → logprob: -6.5109734535217285
    5. '	   ' → logprob: -7.7609734535217285
    6. '	if' → logprob: -8.385973930358887
    7. '       ' → logprob: -8.510973930358887
    8. '(heap' → logprob: -8.885973930358887
    9. '	       ' → logprob: -9.010973930358887
    10. '		' → logprob: -9.010973930358887

Token 58: '	q' (ID: 40893)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.6196824312210083
    2. '	' → logprob: -1.3696824312210083
    3. ' heap' → logprob: -1.6196824312210083
    4. '		' → logprob: -6.619682312011719
    5. '(heap' → logprob: -6.869682312011719
    6. 'x' → logprob: -7.369682312011719
    7. '```' → logprob: -7.744682312011719
    8. 'q' → logprob: -7.744682312011719
    9. '	t' → logprob: -7.869682312011719
    10. 'he' → logprob: -7.994682312011719

Token 59: ',w' (ID: 49598)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10783799737691879
    2. 'ush' → logprob: -3.2328379154205322
    3. 'u' → logprob: -3.8578379154205322
    4. 'q' → logprob: -4.482838153839111
    5. '=[]' → logprob: -5.107838153839111
    6. '.append' → logprob: -5.232838153839111
    7. '=int' → logprob: -6.107838153839111
    8. '=u' → logprob: -6.232838153839111
    9. 'push' → logprob: -6.482838153839111
    10. 'ut' → logprob: -6.607838153839111

Token 60: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004155925940722227
    2. ' =' → logprob: -6.129156112670898
    3. '=w' → logprob: -7.004156112670898
    4. '=list' → logprob: -8.004156112670898
    5. '=int' → logprob: -8.129156112670898
    6. '=q' → logprob: -8.629156112670898
    7. '=value' → logprob: -10.379156112670898
    8. '=[]' → logprob: -10.379156112670898
    9. '=input' → logprob: -10.504156112670898
    10. '=s' → logprob: -10.754156112670898

Token 61: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.42291346192359924
    2. '.strip' → logprob: -1.4229134321212769
    3. '.' → logprob: -2.4229135513305664
    4. 'split' → logprob: -4.672913551330566
    5. '.rstrip' → logprob: -5.297913551330566
    6. 'rstrip' → logprob: -8.422913551330566
    7. 'strip' → logprob: -8.672913551330566
    8. ' .' → logprob: -9.047913551330566
    9. '=' → logprob: -9.297913551330566
    10. 'plit' → logprob: -10.297913551330566

Token 62: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10949047654867172
    2. '()
' → logprob: -2.359490394592285
    3. '(' → logprob: -4.859490394592285
    4. '('' → logprob: -7.484490394592285
    5. '()
' → logprob: -8.484490394592285
    6. '()\' → logprob: -8.484490394592285
    7. '()

' → logprob: -8.984490394592285
    8. '();' → logprob: -9.609490394592285
    9. '(',')
' → logprob: -9.984490394592285
    10. '()`' → logprob: -10.359490394592285

Token 63: '	' (ID: 197)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -1.0479756593704224
    2. '	' → logprob: -1.2979756593704224
    3. 'heap' → logprob: -1.2979756593704224
    4. ' ' → logprob: -3.422975540161133
    5. '	q' → logprob: -3.672975540161133
    6. '<|end|>' → logprob: -4.797975540161133
    7. ' 
' → logprob: -5.297975540161133
    8. '(heap' → logprob: -5.422975540161133
    9. '	
' → logprob: -6.047975540161133
    10. '.heap' → logprob: -6.297975540161133

Token 64: '	w' (ID: 12910)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.007030184846371412
    2. ' heap' → logprob: -5.132030010223389
    3. 'q' → logprob: -7.507030010223389
    4. '	' → logprob: -8.132030487060547
    5. 'w' → logprob: -9.132030487060547
    6. '```' → logprob: -10.757030487060547
    7. 'hq' → logprob: -11.257030487060547
    8. 'x' → logprob: -11.382030487060547
    9. ' w' → logprob: -11.507030487060547
    10. '	q' → logprob: -11.507030487060547

Token 65: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.04308369383215904
    2. '=' → logprob: -3.168083667755127
    3. ' =' → logprob: -10.168084144592285
    4. '=float' → logprob: -10.668084144592285
    5. 'int' → logprob: -12.043084144592285
    6. '=i' → logprob: -12.168084144592285
    7. '=-' → logprob: -12.418084144592285
    8. '=w' → logprob: -12.543084144592285
    9. '=

' → logprob: -14.293084144592285
    10. '=
' → logprob: -14.668084144592285

Token 66: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0004901225329376757
    2. '(' → logprob: -7.625490188598633
    3. 'w' → logprob: -13.750490188598633
    4. ' (' → logprob: -14.625490188598633
    5. '	w' → logprob: -15.875490188598633
    6. '(q' → logprob: -16.000490188598633
    7. '(
' → logprob: -16.500490188598633
    8. '()' → logprob: -16.750490188598633
    9. '(wx' → logprob: -17.750490188598633
    10. '((' → logprob: -18.250490188598633

Token 67: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01549975574016571
    2. ')' → logprob: -4.265499591827393
    3. ')
' → logprob: -6.640499591827393
    4. ' )
' → logprob: -11.14050006866455
    5. '	' → logprob: -11.64050006866455
    6. ')

' → logprob: -12.39050006866455
    7. ')#' → logprob: -14.76550006866455
    8. ')`
' → logprob: -15.64050006866455
    9. ' )' → logprob: -15.76550006866455
    10. '))
' → logprob: -15.76550006866455

Token 68: '	' (ID: 197)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9600846767425537
    2. '	' → logprob: -1.0850846767425537
    3. '	if' → logprob: -1.5850846767425537
    4. ' heap' → logprob: -2.8350846767425537
    5. '(heap' → logprob: -4.960084915161133
    6. ' if' → logprob: -6.335084915161133
    7. '
' → logprob: -6.335084915161133
    8. '.heap' → logprob: -6.960084915161133
    9. 'if' → logprob: -7.335084915161133
    10. 'he' → logprob: -7.585084915161133

Token 69: '	' (ID: 197)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.003407159121707082
    2. '	' → logprob: -6.128407001495361
    3. ' heap' → logprob: -6.753407001495361
    4. 'he' → logprob: -11.37840747833252
    5. '(heap' → logprob: -11.62840747833252
    6. '.heap' → logprob: -11.87840747833252
    7. 'if' → logprob: -12.00340747833252
    8. '```' → logprob: -12.87840747833252
    9. '
' → logprob: -13.00340747833252
    10. '_heap' → logprob: -13.12840747833252

Token 70: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3604061007499695
    2. '	' → logprob: -1.4854061603546143
    3. ' heap' → logprob: -2.9854061603546143
    4. '	if' → logprob: -4.485405921936035
    5. '		' → logprob: -5.110405921936035
    6. '-' → logprob: -6.110405921936035
    7. '(heap' → logprob: -6.985405921936035
    8. '	q' → logprob: -7.235405921936035
    9. 'he' → logprob: -7.235405921936035
    10. '.heap' → logprob: -7.985405921936035

Token 71: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.512236498361744e-07
    2. '.he' → logprob: -14.875000953674316
    3. '	q' → logprob: -16.5
    4. 'p' → logprob: -17.125
    5. '.heap' → logprob: -17.25
    6. '.push' → logprob: -17.375
    7. 'hq' → logprob: -17.625
    8. 'h' → logprob: -18.0
    9. '.q' → logprob: -18.5
    10. 'push' → logprob: -18.5

Token 72: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -8.895480277715251e-06
    2. '.heap' → logprob: -12.500008583068848
    3. ' he' → logprob: -13.125008583068848
    4. 'he' → logprob: -13.250008583068848
    5. '.' → logprob: -14.125008583068848
    6. '.h' → logprob: -15.375008583068848
    7. '-he' → logprob: -16.500009536743164
    8. '.push' → logprob: -16.625009536743164
    9. '.He' → logprob: -16.750009536743164
    10. '_he' → logprob: -17.125009536743164

Token 73: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.01629922352731228
    2. 'ap' → logprob: -4.141299247741699
    3. 'p' → logprob: -8.6412992477417
    4. 'pp' → logprob: -10.3912992477417
    5. 'q' → logprob: -10.8912992477417
    6. 'push' → logprob: -11.1412992477417
    7. 'qp' → logprob: -11.6412992477417
    8. '```' → logprob: -12.1412992477417
    9. 'a' → logprob: -13.1412992477417
    10. 'lp' → logprob: -13.5162992477417

Token 74: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -4.251091377227567e-05
    2. 'push' → logprob: -10.500042915344238
    3. 'q' → logprob: -11.250042915344238
    4. 'op' → logprob: -13.500042915344238
    5. 'p' → logprob: -15.250042915344238
    6. '```' → logprob: -15.875042915344238
    7. 'u' → logprob: -16.625041961669922
    8. 'e' → logprob: -17.250041961669922
    9. 'ap' → logprob: -17.750041961669922
    10. 'le' → logprob: -18.125041961669922

Token 75: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.27099974633893e-05
    2. '(' → logprob: -11.375012397766113
    3. '(q' → logprob: -13.875012397766113
    4. '<|end|>' → logprob: -16.87501335144043
    5. '	h' → logprob: -17.62501335144043
    6. '(s' → logprob: -18.37501335144043
    7. ' (' → logprob: -18.37501335144043
    8. '(heap' → logprob: -18.50001335144043
    9. '```' → logprob: -18.62501335144043
    10. '(n' → logprob: -19.25001335144043

Token 76: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.2855416066013277e-05
    2. 'hq' → logprob: -11.375032424926758
    3. 'qh' → logprob: -11.750032424926758
    4. '	q' → logprob: -12.250032424926758
    5. '(q' → logprob: -13.000032424926758
    6. 'vq' → logprob: -14.000032424926758
    7. '(h' → logprob: -14.125032424926758
    8. '_q' → logprob: -14.250032424926758
    9. '<|end|>' → logprob: -14.375032424926758
    10. '[q' → logprob: -14.375032424926758

Token 77: ',-' (ID: 8202)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -4.990154047845863e-05
    2. '(' → logprob: -10.250049591064453
    3. ' (-' → logprob: -11.875049591064453
    4. '((-' → logprob: -12.750049591064453
    5. '([-' → logprob: -12.750049591064453
    6. ',' → logprob: -14.375049591064453
    7. '(-(' → logprob: -15.000049591064453
    8. ')' → logprob: -15.375049591064453
    9. ' (' → logprob: -16.250049591064453
    10. '(w' → logprob: -16.250049591064453

Token 78: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.5776860184123507e-06
    2. ' w' → logprob: -12.87500286102295
    3. '	w' → logprob: -19.125001907348633
    4. '?w' → logprob: -22.500001907348633
    5. '*w' → logprob: -22.625001907348633
    6. '>w' → logprob: -22.625001907348633
    7. ''w' → logprob: -22.875001907348633
    8. 'int' → logprob: -23.000001907348633
    9. '<w' → logprob: -23.125001907348633
    10. '<|end|>' → logprob: -23.250001907348633

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.431207682704553e-05
    2. ')
' → logprob: -10.000054359436035
    3. ' )' → logprob: -11.875054359436035
    4. '))' → logprob: -14.625054359436035
    5. ')

' → logprob: -14.750054359436035
    6. '<|end|>' → logprob: -14.875054359436035
    7. '`)' → logprob: -15.375054359436035
    8. ')`' → logprob: -16.37505340576172
    9. '）' → logprob: -16.75005340576172
    10. '')' → logprob: -16.87505340576172


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 35.06%
Précision adaptée (1ère position): 35.06%
Précision (top 10): 68.83%
================================================================================
