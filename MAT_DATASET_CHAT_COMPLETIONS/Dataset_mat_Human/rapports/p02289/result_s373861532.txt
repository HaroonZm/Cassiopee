================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def setHeapDown_max(heap, pos):
    targetkey = heap[pos]
    while pos > 0:
        parentpos = (pos - 1) >> 1
        parent = heap[parentpos]
        if parent < targetkey:
            heap[pos] = parent
            pos = parentpos
            continue
        break
    heap[pos] = targetkey

def setHeapUp_max(heap, pos):
    endpos = len(heap)
    targetkey = heap[pos]
    childpos = 2*pos + 1
    while childpos < endpos:
        rightpos = childpos + 1
        if rightpos < endpos and not heap[rightpos] < heap[childpos]:
            childpos = rightpos
        childkey = heap[childpos]
        if targetkey > childkey:
            break
        heap[pos] = childkey
        pos = childpos
        childpos = 2*pos + 1
    heap[pos] = targetkey

def heapPush_max(heap, key):
    heap.append(key)
    setHeapDown_max(heap, len(heap) - 1)

def heapPop_max(heap):
    lastkey = heap.pop()
    if heap:
        returnkey = heap[0]
        heap[0] = lastkey
        setHeapUp_max(heap, 0)
        return returnkey
    return lastkey

import sys

S = []

ans = []

for x in sys.stdin.readlines():
    if x[0] == 'i':
        k = int(x[7:])
        heapPush_max(S, k)
    elif x[1] == 'x':
        ans.append(heapPop_max(S))
    else:
        pass

print(*ans, sep = '\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' set' (ID: 920)
  → Token d'amorce (pas de prédiction)

Token 2: 'Heap' (ID: 39287)
  → Token d'amorce (pas de prédiction)

Token 3: 'Down' (ID: 6064)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.196732960641384e-05
    2. '```' → logprob: -10.375082015991211
    3. ' (' → logprob: -11.375082015991211
    4. '(heap' → logprob: -11.500082015991211
    5. '_' → logprob: -12.375082015991211
    6. '(`' → logprob: -13.000082015991211
    7. '(
' → logprob: -13.000082015991211
    8. 's' → logprob: -13.250082015991211
    9. '(:' → logprob: -13.375082015991211
    10. '()' → logprob: -13.375082015991211

Token 4: '_max' (ID: 13731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013865471119061112
    2. '(self' → logprob: -7.626386642456055
    3. '```' → logprob: -7.626386642456055
    4. '_' → logprob: -8.751386642456055
    5. '(:' → logprob: -9.751386642456055
    6. ' (' → logprob: -9.751386642456055
    7. '():' → logprob: -10.376386642456055
    8. '(_' → logprob: -10.876386642456055
    9. ':' → logprob: -10.876386642456055
    10. '`' → logprob: -12.126386642456055

Token 5: '(heap' (ID: 173794)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011390270665287971
    2. ' (' → logprob: -7.251139163970947
    3. '_' → logprob: -9.251138687133789
    4. '(heap' → logprob: -9.626138687133789
    5. '```' → logprob: -10.001138687133789
    6. '(_' → logprob: -11.001138687133789
    7. 'def' → logprob: -11.126138687133789
    8. 's' → logprob: -11.126138687133789
    9. '():' → logprob: -11.251138687133789
    10. '(parent' → logprob: -11.376138687133789

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002678272081539035
    2. '):' → logprob: -6.127678394317627
    3. ',index' → logprob: -8.252677917480469
    4. '[' → logprob: -9.627677917480469
    5. ' ,' → logprob: -9.877677917480469
    6. ',size' → logprob: -10.627677917480469
    7. ')' → logprob: -10.877677917480469
    8. '```' → logprob: -11.127677917480469
    9. ',parent' → logprob: -11.752677917480469
    10. '   ' → logprob: -11.877677917480469

Token 7: ' pos' (ID: 1253)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.5785462856292725
    2. 'index' → logprob: -1.8285462856292725
    3. ' i' → logprob: -1.9535462856292725
    4. 'i' → logprob: -2.4535462856292725
    5. ' idx' → logprob: -3.3285462856292725
    6. ' pos' → logprob: -5.453546524047852
    7. 'idx' → logprob: -5.578546524047852
    8. ' heap' → logprob: -6.328546524047852
    9. ' n' → logprob: -6.953546524047852
    10. 'pos' → logprob: -7.078546524047852

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31685423851013184
    2. ',' → logprob: -1.3168542385101318
    3. ')' → logprob: -5.691854476928711
    4. ' ,' → logprob: -9.191854476928711
    5. ' ):' → logprob: -10.566854476928711
    6. ':' → logprob: -11.066854476928711
    7. '   ' → logprob: -11.566854476928711
    8. '):
' → logprob: -11.566854476928711
    9. ',size' → logprob: -12.066854476928711
    10. '```' → logprob: -12.441854476928711

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5840070247650146
    2. ':' → logprob: -0.8340070247650146
    3. ' :' → logprob: -5.459007263183594
    4. '):' → logprob: -6.459007263183594
    5. '(' → logprob: -7.084007263183594
    6. ',' → logprob: -7.834007263183594
    7. '():' → logprob: -8.334007263183594
    8. '```' → logprob: -8.334007263183594
    9. '    ' → logprob: -9.084007263183594
    10. ')' → logprob: -9.959007263183594

Token 10: ' target' (ID: 3783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16890284419059753
    2. ':' → logprob: -2.79390287399292
    3. '(' → logprob: -3.54390287399292
    4. '```' → logprob: -3.54390287399292
    5. '    ' → logprob: -4.54390287399292
    6. '`' → logprob: -4.91890287399292
    7. ' ' → logprob: -5.79390287399292
    8. ',' → logprob: -5.91890287399292
    9. ' :' → logprob: -6.16890287399292
    10. ' (' → logprob: -6.16890287399292

Token 11: 'key' (ID: 1898)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35980185866355896
    2. '=' → logprob: -1.3598018884658813
    3. '_' → logprob: -3.234801769256592
    4. '_pos' → logprob: -6.609801769256592
    5. '_idx' → logprob: -6.734801769256592
    6. '_index' → logprob: -6.859801769256592
    7. ' _' → logprob: -7.484801769256592
    8. ')' → logprob: -7.734801769256592
    9. '=_' → logprob: -7.984801769256592
    10. 'Pos' → logprob: -8.35980224609375

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14505667984485626
    2. '=' → logprob: -2.02005672454834
    3. '_' → logprob: -6.77005672454834
    4. ',' → logprob: -7.27005672454834
    5. ' ' → logprob: -7.89505672454834
    6. ' _' → logprob: -10.14505672454834
    7. ')' → logprob: -10.14505672454834
    8. '   ' → logprob: -10.89505672454834
    9. '[' → logprob: -11.52005672454834
    10. ' ,' → logprob: -11.89505672454834

Token 13: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.11295115202665329
    2. 'heap' → logprob: -2.2379510402679443
    3. '(heap' → logprob: -9.987951278686523
    4. '   ' → logprob: -10.112951278686523
    5. ' ' → logprob: -11.362951278686523
    6. '.heap' → logprob: -11.487951278686523
    7. ' max' → logprob: -12.737951278686523
    8. ' len' → logprob: -12.925451278686523
    9. '    ' → logprob: -12.987951278686523
    10. ' heaps' → logprob: -13.237951278686523

Token 14: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.0052782269194722176
    2. '[' → logprob: -5.25527811050415
    3. '[target' → logprob: -11.380278587341309
    4. '.' → logprob: -12.505278587341309
    5. '[parent' → logprob: -12.630278587341309
    6. '[key' → logprob: -13.005278587341309
    7. '[position' → logprob: -13.130278587341309
    8. '[len' → logprob: -13.130278587341309
    9. '```' → logprob: -13.255278587341309
    10. '\[' → logprob: -13.255278587341309

Token 15: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13252459466457367
    2. '][' → logprob: -2.1325244903564453
    3. '])' → logprob: -5.507524490356445
    4. '[' → logprob: -7.382524490356445
    5. '].' → logprob: -8.007524490356445
    6. ' ]' → logprob: -8.632524490356445
    7. ')' → logprob: -8.882524490356445
    8. ']['' → logprob: -9.007524490356445
    9. ' ][' → logprob: -10.132524490356445
    10. '][]' → logprob: -11.132524490356445

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0093342000618577
    2. ',' → logprob: -6.509334087371826
    3. '[' → logprob: -6.509334087371826
    4. ' =' → logprob: -6.884334087371826
    5. 'def' → logprob: -7.009334087371826
    6. ')' → logprob: -7.384334087371826
    7. '
' → logprob: -7.509334087371826
    8. '    
' → logprob: -7.634334087371826
    9. '    ' → logprob: -7.884334087371826
    10. ':
' → logprob: -8.384334564208984

Token 17: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15110176801681519
    2. '[' → logprob: -3.27610182762146
    3. '```' → logprob: -3.40110182762146
    4. ' while' → logprob: -4.151101589202881
    5. ',' → logprob: -4.276101589202881
    6. ' =' → logprob: -5.026101589202881
    7. '    ' → logprob: -5.776101589202881
    8. '
' → logprob: -5.776101589202881
    9. '  ' → logprob: -6.026101589202881
    10. 'while' (adapté à ' while') → logprob: -6.151101589202881

Token 18: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.03494643047451973
    2. 'pos' → logprob: -3.6599464416503906
    3. ' (' → logprob: -5.784946441650391
    4. ' True' → logprob: -6.284946441650391
    5. ' ' → logprob: -6.784946441650391
    6. '(' → logprob: -7.534946441650391
    7. '(pos' → logprob: -7.534946441650391
    8. ' len' → logprob: -7.659946441650391
    9. ' heap' → logprob: -8.53494644165039
    10. ')' → logprob: -8.65994644165039

Token 19: ' >' (ID: 1424)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5684937834739685
    2. ' *' → logprob: -0.9434937834739685
    3. ' <' → logprob: -3.1934938430786133
    4. ' ' → logprob: -6.693493843078613
    5. '+' → logprob: -7.318493843078613
    6. '   ' → logprob: -7.443493843078613
    7. ' +' → logprob: -8.693493843078613
    8. '<' → logprob: -8.693493843078613
    9. '  ' → logprob: -8.818493843078613
    10. '<len' → logprob: -8.943493843078613

Token 20: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6936747431755066
    2. ' ' → logprob: -0.6936747431755066
    3. '1' → logprob: -7.693674564361572
    4. ' (' → logprob: -11.06867504119873
    5. '  ' → logprob: -11.06867504119873
    6. '=' → logprob: -11.31867504119873
    7. '(' → logprob: -11.44367504119873
    8. '   ' → logprob: -11.56867504119873
    9. ' len' → logprob: -13.19367504119873
    10. '(len' → logprob: -13.94367504119873

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020872578024864197
    2. ' ' → logprob: -3.8958725929260254
    3. '(' → logprob: -8.895872116088867
    4. ' (' → logprob: -9.520872116088867
    5. '(len' → logprob: -9.770872116088867
    6. '1' → logprob: -10.395872116088867
    7. '=' → logprob: -11.645872116088867
    8. '  ' → logprob: -11.895872116088867
    9. '(heap' → logprob: -12.395872116088867
    10. '=(' → logprob: -12.770872116088867

Token 22: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0637289434671402
    2. ' *' → logprob: -3.4387290477752686
    3. '*' → logprob: -4.3137288093566895
    4. 'and' → logprob: -4.5637288093566895
    5. '    ' → logprob: -6.1887288093566895
    6. '   ' → logprob: -6.5637288093566895
    7. ' ' → logprob: -6.6887288093566895
    8. ':' → logprob: -8.313729286193848
    9. ',' → logprob: -8.438729286193848
    10. ')' → logprob: -9.188729286193848

Token 23: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5724127888679504
    2. ' ' → logprob: -1.8224127292633057
    3. '    ' → logprob: -2.0724127292633057
    4. ')' → logprob: -3.6974127292633057
    5. '       ' → logprob: -3.6974127292633057
    6. '   ' → logprob: -3.9474127292633057
    7. 'and' → logprob: -4.322412967681885
    8. ' *' → logprob: -4.447412967681885
    9. '<|end|>' → logprob: -4.447412967681885
    10. ':' → logprob: -4.572412967681885

Token 24: ' parent' (ID: 5980)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40323933959007263
    2. ' *' → logprob: -2.1532392501831055
    3. '    ' → logprob: -2.5282392501831055
    4. '*' → logprob: -3.1532392501831055
    5. ' and' → logprob: -4.1532392501831055
    6. ')' → logprob: -4.9032392501831055
    7. ':' → logprob: -5.0282392501831055
    8. '        ' → logprob: -5.0282392501831055
    9. '   ' → logprob: -5.1532392501831055
    10. ' <' → logprob: -5.1532392501831055

Token 25: 'pos' (ID: 1103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13109014928340912
    2. '=' → logprob: -2.2560901641845703
    3. '_' → logprob: -4.38109016418457
    4. '_pos' → logprob: -6.25609016418457
    5. ' ' → logprob: -6.38109016418457
    6. '_idx' → logprob: -7.63109016418457
    7. '_index' → logprob: -8.13109016418457
    8. 'Pos' → logprob: -8.13109016418457
    9. 'pos' → logprob: -8.25609016418457
    10. ')' → logprob: -8.63109016418457

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002152165398001671
    2. '=' → logprob: -6.252151966094971
    3. ' ' → logprob: -8.752152442932129
    4. ',' → logprob: -10.502152442932129
    5. ' =(' → logprob: -11.627152442932129
    6. 's' → logprob: -12.002152442932129
    7. ' ==' → logprob: -12.252152442932129
    8. '   ' → logprob: -13.002152442932129
    9. '    ' → logprob: -13.252152442932129
    10. ')' → logprob: -13.252152442932129

Token 27: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.010996770113706589
    2. '(pos' → logprob: -4.7609968185424805
    3. '(' → logprob: -6.5109968185424805
    4. ' pos' → logprob: -7.5109968185424805
    5. ' ' → logprob: -8.38599681854248
    6. 'pos' → logprob: -9.88599681854248
    7. '(parent' → logprob: -9.88599681854248
    8. '(int' → logprob: -12.76099681854248
    9. '    ' → logprob: -13.26099681854248
    10. '(space' → logprob: -13.76099681854248

Token 28: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1602935791015625
    2. ' pos' → logprob: -1.9102935791015625
    3. '(pos' → logprob: -10.160293579101562
    4. ' (' → logprob: -10.535293579101562
    5. '2' → logprob: -13.660293579101562
    6. '_pos' → logprob: -14.160293579101562
    7. ' ' → logprob: -14.285293579101562
    8. ')' → logprob: -14.910293579101562
    9. '	pos' → logprob: -14.910293579101562
    10. '(' → logprob: -15.410293579101562

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007731196470558643
    2. '-' → logprob: -4.882730960845947
    3. ' ' → logprob: -9.007731437683105
    4. '1' → logprob: -13.882731437683105
    5. '  ' → logprob: -15.132731437683105
    6. ' +' → logprob: -15.382731437683105
    7. '2' → logprob: -15.632731437683105
    8. ' ' → logprob: -15.757731437683105
    9. ')' → logprob: -15.882731437683105
    10. '   ' → logprob: -15.945231437683105

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006730883847922087
    2. ' ' → logprob: -5.006731033325195
    3. '2' → logprob: -11.381731033325195
    4. ')' → logprob: -12.881731033325195
    5. '   ' → logprob: -14.381731033325195
    6. '-' → logprob: -14.506731033325195
    7. '    ' → logprob: -15.694231033325195
    8. '  ' → logprob: -15.694231033325195
    9. ' ' → logprob: -16.256731033325195
    10. ' )' → logprob: -17.006731033325195

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.338466093642637e-05
    2. ' ' → logprob: -10.000073432922363
    3. ')' → logprob: -11.000073432922363
    4. '2' → logprob: -11.500073432922363
    5. '-' → logprob: -15.125073432922363
    6. '```' → logprob: -15.125073432922363
    7. '   ' → logprob: -15.250073432922363
    8. '  ' → logprob: -16.562572479248047
    9. ' )' → logprob: -16.687572479248047
    10. '``' → logprob: -17.187572479248047

Token 32: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000375380739569664
    2. ')//' → logprob: -8.000375747680664
    3. ' )' → logprob: -10.500375747680664
    4. ')>>' → logprob: -11.500375747680664
    5. '   ' → logprob: -14.250375747680664
    6. '）' → logprob: -15.250375747680664
    7. '2' → logprob: -15.500375747680664
    8. ' ' → logprob: -15.500375747680664
    9. '1' → logprob: -15.625375747680664
    10. '//' → logprob: -16.375375747680664

Token 33: ' >>' (ID: 6832)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005725711234845221
    2. ')//' → logprob: -7.625572681427002
    3. ' )' → logprob: -10.125572204589844
    4. ')>>' → logprob: -10.625572204589844
    5. '>>' → logprob: -12.000572204589844
    6. '")' → logprob: -12.375572204589844
    7. '       ' → logprob: -12.750572204589844
    8. '   ' → logprob: -13.625572204589844
    9. '')' → logprob: -14.000572204589844
    10. '//' → logprob: -14.250572204589844

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.125141143798828
    4. '0' → logprob: -15.375141143798828
    5. '```' → logprob: -15.625141143798828
    6. '>' → logprob: -16.000141143798828
    7. '01' → logprob: -16.312641143798828
    8. ' ' → logprob: -16.687641143798828
    9. '6' → logprob: -16.812641143798828
    10. '31' → logprob: -16.875141143798828

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -15.25000286102295
    4. '0' → logprob: -15.37500286102295
    5. '   ' → logprob: -16.500001907348633
    6. '01' → logprob: -17.250001907348633
    7. '' → logprob: -17.687501907348633
    8. '=' → logprob: -17.875001907348633
    9. '31' → logprob: -18.250001907348633
    10. ' ' → logprob: -18.437501907348633

Token 36: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4459841251373291
    2. '
' → logprob: -1.445984125137329
    3. '<|end|>' → logprob: -2.320984125137329
    4. '<|end|>' → logprob: -5.19598388671875
    5. ' ' → logprob: -5.57098388671875
    6. ' if' → logprob: -5.94598388671875
    7. ' 
' → logprob: -6.07098388671875
    8. ' and' → logprob: -6.19598388671875
    9. '        ' → logprob: -6.19598388671875
    10. '        
' → logprob: -6.32098388671875

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5939127802848816
    2. '<|end|>' → logprob: -1.3439128398895264
    3. '
' → logprob: -1.8439128398895264
    4. '<|end|>' → logprob: -4.593912601470947
    5. '        
' → logprob: -5.218912601470947
    6. ' ' → logprob: -5.718912601470947
    7. ' 
' → logprob: -5.718912601470947
    8. ' if' → logprob: -6.593912601470947
    9. ' and' → logprob: -7.218912601470947
    10. '  
' → logprob: -7.468912601470947

Token 38: ' parent' (ID: 5980)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20294253528118134
    2. ' ' → logprob: -2.5779426097869873
    3. '<|end|>' → logprob: -3.3279426097869873
    4. '        ' → logprob: -4.202942371368408
    5. ' if' → logprob: -4.577942371368408
    6. '   ' → logprob: -4.702942371368408
    7. ' 
' → logprob: -4.952942371368408
    8. '
' → logprob: -5.577942371368408
    9. ' and' → logprob: -5.702942371368408
    10. '    ' → logprob: -5.702942371368408

Token 39: ' =' (ID: 314)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.22995606064796448
    2. 'key' → logprob: -1.979956030845642
    3. ']' → logprob: -3.3549561500549316
    4. 'Key' → logprob: -3.7299561500549316
    5. '>' → logprob: -6.229956150054932
    6. '=' → logprob: -6.479956150054932
    7. '_val' → logprob: -6.729956150054932
    8. ' =' → logprob: -6.854956150054932
    9. ']_' → logprob: -6.979956150054932
    10. 'val' → logprob: -7.854956150054932

Token 40: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.03365826606750488
    2. 'heap' → logprob: -3.408658266067505
    3. '(heap' → logprob: -11.533658027648926
    4. '.heap' → logprob: -13.283658027648926
    5. ' ' → logprob: -15.033658027648926
    6. '_heap' → logprob: -15.158658027648926
    7. ' ' → logprob: -16.033658981323242
    8. 'Heap' → logprob: -16.158658981323242
    9. ' heaps' → logprob: -17.158658981323242
    10. '<|end|>' → logprob: -17.283658981323242

Token 41: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -5.931863051955588e-05
    2. 'parent' → logprob: -9.875059127807617
    3. '[' → logprob: -12.000059127807617
    4. '(parent' → logprob: -14.625059127807617
    5. '_parent' → logprob: -14.625059127807617
    6. '[
' → logprob: -15.500059127807617
    7. ',parent' → logprob: -15.500059127807617
    8. '[pos' → logprob: -15.625059127807617
    9. ' parent' → logprob: -16.375059127807617
    10. '	parent' → logprob: -16.875059127807617

Token 42: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00016384923947043717
    2. 'parent' → logprob: -8.750164031982422
    3. ')' → logprob: -13.000164031982422
    4. '[pos' → logprob: -14.250164031982422
    5. '[parent' → logprob: -14.375164031982422
    6. ']' → logprob: -14.625164031982422
    7. '])' → logprob: -15.125164031982422
    8. 'position' → logprob: -15.500164031982422
    9. '_pos' → logprob: -15.500164031982422
    10. '[' → logprob: -15.625164031982422

Token 43: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3143826723098755
    2. ']' → logprob: -1.3143826723098755
    3. ')
' → logprob: -7.564382553100586
    4. ']
' → logprob: -8.814382553100586
    5. '>' → logprob: -9.439382553100586
    6. ' ]' → logprob: -9.564382553100586
    7. '       ' → logprob: -9.564382553100586
    8. '   ' → logprob: -9.814382553100586
    9. ' )' → logprob: -9.939382553100586
    10. '<|end|>' → logprob: -10.189382553100586

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15118736028671265
    2. '<|end|>' → logprob: -2.1511874198913574
    3. '<|end|>' → logprob: -5.151187419891357
    4. ')' → logprob: -5.401187419891357
    5. '
' → logprob: -5.651187419891357
    6. ' if' → logprob: -5.901187419891357
    7. ',' → logprob: -6.276187419891357
    8. ':' → logprob: -6.401187419891357
    9. '>' → logprob: -7.401187419891357
    10. ' ' → logprob: -7.651187419891357

Token 45: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.440747618675232
    2. '       ' → logprob: -1.440747618675232
    3. '        ' → logprob: -2.1907477378845215
    4. ' 
' → logprob: -2.1907477378845215
    5. ' if' → logprob: -2.4407477378845215
    6. '<|end|>' → logprob: -2.9407477378845215
    7. '
' → logprob: -3.6907477378845215
    8. '>' → logprob: -3.6907477378845215
    9. ' >' → logprob: -3.9407477378845215
    10. ':' → logprob: -4.0657477378845215

Token 46: ' parent' (ID: 5980)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.008805541321635246
    2. 'target' → logprob: -4.758805751800537
    3. '   ' → logprob: -9.883805274963379
    4. ' parent' → logprob: -10.133805274963379
    5. ' ' → logprob: -10.383805274963379
    6. '	target' → logprob: -10.758805274963379
    7. ' key' → logprob: -10.883805274963379
    8. '    ' → logprob: -11.258805274963379
    9. 'parent' → logprob: -12.883805274963379
    10. ' not' → logprob: -12.883805274963379

Token 47: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3936971127986908
    2. '>=' → logprob: -1.1436971426010132
    3. ' >=' → logprob: -5.643697261810303
    4. ' <' → logprob: -5.893697261810303
    5. '>' → logprob: -8.893696784973145
    6. '[' → logprob: -9.393696784973145
    7. '<=' → logprob: -9.518696784973145
    8. '<int' → logprob: -10.643696784973145
    9. '<data' → logprob: -10.768696784973145
    10. '   ' → logprob: -11.018696784973145

Token 48: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.474082887172699
    2. ' target' → logprob: -0.974082887172699
    3. '	target' → logprob: -12.849082946777344
    4. ' ' → logprob: -13.849082946777344
    5. '=' → logprob: -14.349082946777344
    6. '   ' → logprob: -14.849082946777344
    7. 't' → logprob: -15.599082946777344
    8. '(target' → logprob: -15.599082946777344
    9. '_target' → logprob: -16.099082946777344
    10. '[target' → logprob: -16.224082946777344

Token 49: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -2.1008713702030946e-06
    2. ' key' → logprob: -14.500001907348633
    3. '_key' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.250001907348633
    5. ':' → logprob: -15.875001907348633
    6. '	key' → logprob: -15.875001907348633
    7. ' ' → logprob: -16.125001907348633
    8. '```' → logprob: -16.250001907348633
    9. ')' → logprob: -16.375001907348633
    10. '  ' → logprob: -16.875001907348633

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005345344077795744
    2. ' :' → logprob: -5.255345344543457
    3. ':
' → logprob: -9.755345344543457
    4. '):' → logprob: -10.380345344543457
    5. '       ' → logprob: -12.130345344543457
    6. '           ' → logprob: -12.255345344543457
    7. ':return' → logprob: -13.130345344543457
    8. ' :
' → logprob: -13.255345344543457
    9. ',' → logprob: -13.505345344543457
    10. ' or' → logprob: -14.005345344543457

Token 51: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7957094311714172
    2. '<|end|>' → logprob: -0.9207094311714172
    3. ':' → logprob: -2.7957093715667725
    4. '<|end|>' → logprob: -3.0457093715667725
    5. '
' → logprob: -4.670709609985352
    6. ')' → logprob: -4.670709609985352
    7. '#' → logprob: -4.795709609985352
    8. '):' → logprob: -6.045709609985352
    9. ' break' → logprob: -6.420709609985352
    10. '       ' → logprob: -6.420709609985352

Token 52: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.4207440912723541
    2. '           ' → logprob: -1.4207440614700317
    3. 'heap' (adapté à ' heap') → logprob: -2.5457441806793213
    4. '(heap' → logprob: -4.545743942260742
    5. ' break' → logprob: -5.045743942260742
    6. '<|end|>' → logprob: -6.295743942260742
    7. '```' → logprob: -6.670743942260742
    8. '.heap' → logprob: -6.920743942260742
    9. ' return' → logprob: -8.170743942260742
    10. ')' → logprob: -8.295743942260742

Token 53: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.1427450180053711
    2. '[parent' → logprob: -2.017745018005371
    3. 'pos' → logprob: -10.142745018005371
    4. '[' → logprob: -10.892745018005371
    5. 'parent' → logprob: -12.267745018005371
    6. '[position' → logprob: -12.517745018005371
    7. ' pos' → logprob: -14.267745018005371
    8. ',pos' → logprob: -14.892745018005371
    9. ' [' → logprob: -15.267745018005371
    10. '```' → logprob: -15.517745018005371

Token 54: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6051419377326965
    2. ']' → logprob: -0.9801419377326965
    3. '=' → logprob: -2.6051418781280518
    4. ']=' → logprob: -5.605142116546631
    5. ',' → logprob: -7.480142116546631
    6. ' ]' → logprob: -7.980142116546631
    7. ')' → logprob: -9.230141639709473
    8. '[' → logprob: -9.855141639709473
    9. '<|end|>' → logprob: -9.855141639709473
    10. '],' → logprob: -10.605141639709473

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6339516639709473
    2. ' =' → logprob: -0.7589516639709473
    3. ',' → logprob: -6.633951663970947
    4. '[' → logprob: -11.633951187133789
    5. '<|end|>' → logprob: -11.633951187133789
    6. '=head' → logprob: -13.258951187133789
    7. '=False' → logprob: -13.633951187133789
    8. '＝' → logprob: -13.758951187133789
    9. '=True' → logprob: -13.758951187133789
    10. '=None' → logprob: -13.758951187133789

Token 56: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.005236956290900707
    2. ' parent' → logprob: -5.255237102508545
    3. '	parent' → logprob: -13.130236625671387
    4. '[parent' → logprob: -14.630236625671387
    5. '(parent' → logprob: -15.005236625671387
    6. ',parent' → logprob: -16.005237579345703
    7. '.parent' → logprob: -16.255237579345703
    8. 'Parent' → logprob: -16.505237579345703
    9. '_parent' → logprob: -16.755237579345703
    10. ' ' → logprob: -17.130237579345703

Token 57: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03738173842430115
    2. '            
' → logprob: -3.537381649017334
    3. ' 
' → logprob: -5.537381649017334
    4. '\n' → logprob: -7.412381649017334
    5. '<|end|>' → logprob: -7.787381649017334
    6. '    
' → logprob: -7.912381649017334
    7. '        
' → logprob: -8.162382125854492
    8. '           
' → logprob: -8.162382125854492
    9. '[pos' → logprob: -8.412382125854492
    10. '  
' → logprob: -8.412382125854492

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12153402715921402
    2. '            
' → logprob: -3.2465341091156006
    3. '<|end|>' → logprob: -3.7465341091156006
    4. ' 
' → logprob: -3.8715341091156006
    5. '[pos' → logprob: -5.1215338706970215
    6. '\n' → logprob: -5.4965338706970215
    7. '       ' → logprob: -5.6215338706970215
    8. '        
' → logprob: -5.9965338706970215
    9. '    
' → logprob: -6.3715338706970215
    10. '           
' → logprob: -6.4965338706970215

Token 59: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.6343897581100464
    2. ' pos' → logprob: -0.7593897581100464
    3. '           ' → logprob: -6.384389877319336
    4. '[pos' → logprob: -10.509389877319336
    5. '<|end|>' → logprob: -10.634389877319336
    6. '	pos' → logprob: -11.009389877319336
    7. ',pos' → logprob: -11.759389877319336
    8. ' ' → logprob: -12.134389877319336
    9. '```' → logprob: -13.009389877319336
    10. '<|end|>' → logprob: -13.134389877319336

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003673352301120758
    2. '=' → logprob: -5.628673553466797
    3. ' <<=' → logprob: -9.753673553466797
    4. ' -=' → logprob: -11.878673553466797
    5. ' ' → logprob: -12.378673553466797
    6. ' >>=' → logprob: -12.753673553466797
    7. ' +=' → logprob: -15.378673553466797
    8. ' |=' → logprob: -15.503673553466797
    9. '<|end|>' → logprob: -15.878673553466797
    10. ' ^=' → logprob: -16.378673553466797

Token 61: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.004079589620232582
    2. ' parent' → logprob: -5.504079818725586
    3. '	parent' → logprob: -15.004079818725586
    4. '[parent' → logprob: -15.129079818725586
    5. '(parent' → logprob: -15.129079818725586
    6. ',parent' → logprob: -16.129079818725586
    7. '_parent' → logprob: -16.379079818725586
    8. '.parent' → logprob: -16.629079818725586
    9. 'paren' → logprob: -17.879079818725586
    10. ' ' → logprob: -18.254079818725586

Token 62: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: 0.0
    2. 'os' → logprob: -18.25
    3. ' pos' → logprob: -19.0
    4. '_pos' → logprob: -20.375
    5. 'position' → logprob: -20.875
    6. 'pop' → logprob: -22.0
    7. 'poz' → logprob: -22.25
    8. '	pos' → logprob: -22.375
    9. 'po' → logprob: -22.5
    10. 'post' → logprob: -22.625

Token 63: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029294703155755997
    2. ' else' → logprob: -3.779294729232788
    3. '<|end|>' → logprob: -6.029294490814209
    4. 'else' → logprob: -6.154294490814209
    5. '   ' → logprob: -6.904294490814209
    6. '```' → logprob: -8.529294967651367
    7. '           ' → logprob: -8.904294967651367
    8. '
' → logprob: -10.654294967651367
    9. '\n' → logprob: -10.779294967651367
    10. '	else' → logprob: -11.029294967651367

Token 64: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009319555014371872
    2. ' else' → logprob: -5.38431978225708
    3. '   ' → logprob: -5.75931978225708
    4. 'else' → logprob: -6.63431978225708
    5. '<|end|>' → logprob: -8.884319305419922
    6. ')' → logprob: -10.509319305419922
    7. '```' → logprob: -10.759319305419922
    8. '[' → logprob: -12.509319305419922
    9. '	else' → logprob: -12.509319305419922
    10. '+' → logprob: -12.759319305419922

Token 65: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017466871067881584
    2. 'else' → logprob: -4.517467021942139
    3. ' else' → logprob: -5.267467021942139
    4. '   ' → logprob: -7.267467021942139
    5. '           ' → logprob: -8.39246654510498
    6. '<|end|>' → logprob: -9.39246654510498
    7. '```' → logprob: -9.64246654510498
    8. 'continue' (adapté à ' continue') → logprob: -9.64246654510498
    9. ')' → logprob: -10.39246654510498
    10. ' continue' → logprob: -10.89246654510498

Token 66: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005278703290969133
    2. 'else' → logprob: -5.505278587341309
    3. ' else' → logprob: -7.130278587341309
    4. '   ' → logprob: -8.380278587341309
    5. 'break' → logprob: -9.255278587341309
    6. 's' → logprob: -11.130278587341309
    7. '        
' → logprob: -11.255278587341309
    8. ')' → logprob: -11.630278587341309
    9. '           ' → logprob: -11.630278587341309
    10. 'return' → logprob: -11.880278587341309

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011272405972704291
    2. '   ' → logprob: -7.251127243041992
    3. 'else' → logprob: -8.501127243041992
    4. ' else' → logprob: -9.126127243041992
    5. 'break' → logprob: -10.126127243041992
    6. 'heap' → logprob: -10.751127243041992
    7. ')' → logprob: -11.376127243041992
    8. ' break' → logprob: -12.251127243041992
    9. ' heap' → logprob: -12.751127243041992
    10. 'return' → logprob: -12.876127243041992

Token 68: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007039778400212526
    2. 'break' (adapté à ' break') → logprob: -5.382039546966553
    3. ' break' → logprob: -6.382039546966553
    4. '   ' → logprob: -7.632039546966553
    5. '	break' → logprob: -9.257040023803711
    6. '```' → logprob: -9.757040023803711
    7. '           ' → logprob: -10.757040023803711
    8. 'else' → logprob: -11.257040023803711
    9. ' else' → logprob: -11.382040023803711
    10. '	' → logprob: -11.632040023803711

Token 69: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025146014988422394
    2. 'heap' → logprob: -4.400146007537842
    3. '<|end|>' → logprob: -5.650146007537842
    4. ')' → logprob: -6.275146007537842
    5. '(heap' → logprob: -6.400146007537842
    6. '       ' → logprob: -6.525146007537842
    7. '[' → logprob: -6.900146007537842
    8. '    
' → logprob: -7.400146007537842
    9. ' ' → logprob: -8.025146484375
    10. ' heap' → logprob: -8.150146484375

Token 70: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.12855248153209686
    2. '   ' → logprob: -2.2535524368286133
    3. ')' → logprob: -5.003552436828613
    4. '(heap' → logprob: -5.253552436828613
    5. '<|end|>' → logprob: -6.628552436828613
    6. ' heap' → logprob: -7.253552436828613
    7. '.heap' → logprob: -7.753552436828613
    8. '[' → logprob: -8.503552436828613
    9. '```' → logprob: -8.628552436828613
    10. '_heap' → logprob: -9.128552436828613

Token 71: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0013058334589004517
    2. '   ' → logprob: -6.876306056976318
    3. ' heap' → logprob: -9.00130558013916
    4. '(heap' → logprob: -9.62630558013916
    5. ')' → logprob: -10.50130558013916
    6. '.heap' → logprob: -10.75130558013916
    7. '```' → logprob: -11.37630558013916
    8. ' ' → logprob: -12.12630558013916
    9. '<|end|>' → logprob: -12.37630558013916
    10. '_heap' → logprob: -12.62630558013916

Token 72: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -6.623244553338736e-05
    2. '[' → logprob: -9.625065803527832
    3. 'pos' → logprob: -16.87506675720215
    4. '[position' → logprob: -17.50006675720215
    5. '```' → logprob: -17.62506675720215
    6. '\[' → logprob: -17.62506675720215
    7. '   ' → logprob: -18.37506675720215
    8. '[p' → logprob: -18.62506675720215
    9. '[prop' → logprob: -18.87506675720215
    10. '[
' → logprob: -19.25006675720215

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00046260483213700354
    2. ']=' → logprob: -8.000462532043457
    3. '=' → logprob: -9.000462532043457
    4. ' =' → logprob: -13.250462532043457
    5. ' ]' → logprob: -13.250462532043457
    6. ')' → logprob: -15.250462532043457
    7. '<|end|>' → logprob: -17.375463485717773
    8. '[' → logprob: -17.625463485717773
    9. ']

' → logprob: -17.625463485717773
    10. '']' → logprob: -17.875463485717773

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858884960412979
    2. ' =' → logprob: -3.048588752746582
    3. ']' → logprob: -14.673588752746582
    4. '[' → logprob: -15.173588752746582
    5. '=

' → logprob: -15.173588752746582
    6. '＝' → logprob: -15.923588752746582
    7. ')' → logprob: -16.2985897064209
    8. '=
' → logprob: -16.5485897064209
    9. ']=' → logprob: -16.9235897064209
    10. ' ' → logprob: -17.0485897064209

Token 75: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -7.941850526549388e-06
    2. ' target' → logprob: -11.750007629394531
    3. '[target' → logprob: -20.00000762939453
    4. '	target' → logprob: -20.25000762939453
    5. '(target' → logprob: -21.25000762939453
    6. '   ' → logprob: -22.37500762939453
    7. 't' → logprob: -22.62500762939453
    8. 'taget' → logprob: -23.50000762939453
    9. '_target' → logprob: -24.00000762939453
    10. '.target' → logprob: -24.12500762939453

Token 76: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -3.128163257315464e-07
    2. '_key' → logprob: -16.125
    3. ' key' → logprob: -16.625
    4. ' ' → logprob: -17.25
    5. '[key' → logprob: -17.75
    6. '	key' → logprob: -18.375
    7. 'keye' → logprob: -18.625
    8. '  ' → logprob: -18.625
    9. 'ke' → logprob: -18.75
    10. 'ey' → logprob: -18.875

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0134438406676054
    2. ' heap' → logprob: -5.013443946838379
    3. 'set' → logprob: -5.638443946838379
    4. ' sift' → logprob: -7.263443946838379
    5. ' heaps' → logprob: -7.638443946838379
    6. ' insert' → logprob: -7.638443946838379
    7. ' ' → logprob: -8.263443946838379
    8. 'he' → logprob: -8.263443946838379
    9. ' he' → logprob: -8.513443946838379
    10. ' get' → logprob: -8.638443946838379

Token 80: 'Heap' (ID: 39287)
  Prédit: 'Heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -0.0002879145904444158
    2. 'heap' → logprob: -8.500288009643555
    3. '_heap' → logprob: -9.875288009643555
    4. 'Max' → logprob: -11.125288009643555
    5. 'Up' → logprob: -12.000288009643555
    6. 'He' → logprob: -13.250288009643555
    7. 'Down' → logprob: -13.500288009643555
    8. 'max' → logprob: -13.625288009643555
    9. 'Min' → logprob: -13.750288009643555
    10. '_' → logprob: -14.375288009643555

Token 81: 'Up' (ID: 2658)
  Prédit: 'Up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Up' → logprob: -0.25535327196121216
    2. 'Down' → logprob: -1.6303532123565674
    3. '_up' → logprob: -3.7553532123565674
    4. '_down' → logprob: -6.0053534507751465
    5. 'up' → logprob: -6.3803534507751465
    6. 'Max' → logprob: -6.8803534507751465
    7. 'down' → logprob: -7.6303534507751465
    8. '_max' → logprob: -9.255352973937988
    9. 'max' → logprob: -9.505352973937988
    10. 'Top' → logprob: -9.755352973937988

Token 82: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.029772469773888588
    2. '_min' → logprob: -3.5297725200653076
    3. '_' → logprob: -11.654772758483887
    4. '_(' → logprob: -12.529772758483887
    5. '```' → logprob: -13.279772758483887
    6. '_m' → logprob: -13.404772758483887
    7. 'max' → logprob: -13.779772758483887
    8. ' _' → logprob: -14.029772758483887
    9. '(' → logprob: -14.154772758483887
    10. '(_' → logprob: -14.279772758483887

Token 83: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -2.868328920158092e-05
    2. '(' → logprob: -10.500028610229492
    3. ' (' → logprob: -14.000028610229492
    4. '_heap' → logprob: -16.000028610229492
    5. '(tree' → logprob: -17.000028610229492
    6. '(
' → logprob: -17.250028610229492
    7. ' heap' → logprob: -17.500028610229492
    8. '(root' → logprob: -17.500028610229492
    9. '(hash' → logprob: -17.500028610229492
    10. 'heap' → logprob: -17.500028610229492

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.282920129597187e-05
    2. ',pos' → logprob: -11.875012397766113
    3. ' ,' → logprob: -12.500012397766113
    4. ',index' → logprob: -14.125012397766113
    5. ',size' → logprob: -14.375012397766113
    6. '   ' → logprob: -14.750012397766113
    7. '(heap' → logprob: -16.75001335144043
    8. ',length' → logprob: -16.87501335144043
    9. ',len' → logprob: -17.12501335144043
    10. '‌,' → logprob: -17.25001335144043

Token 85: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03601527959108353
    2. 'heap' → logprob: -4.036015510559082
    3. ' pos' → logprob: -4.661015510559082
    4. '   ' → logprob: -6.536015510559082
    5. 'length' → logprob: -6.661015510559082
    6. 'size' → logprob: -6.661015510559082
    7. 'len' → logprob: -6.911015510559082
    8. 'n' → logprob: -7.036015510559082
    9. ' heap' → logprob: -8.036015510559082
    10. 'last' → logprob: -8.036015510559082

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017910730093717575
    2. ':' → logprob: -9.375179290771484
    3. '):
' → logprob: -10.000179290771484
    4. '   ' → logprob: -10.875179290771484
    5. ',' → logprob: -11.250179290771484
    6. ')' → logprob: -11.500179290771484
    7. ' ):' → logprob: -13.000179290771484
    8. '=' → logprob: -13.625179290771484
    9. '):
' → logprob: -14.250179290771484
    10. ']:' → logprob: -14.375179290771484

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014635729603469372
    2. '    ' → logprob: -7.501463413238525
    3. ' while' → logprob: -7.626463413238525
    4. ' n' → logprob: -8.501463890075684
    5. ' length' → logprob: -10.126463890075684
    6. 'n' → logprob: -10.251463890075684
    7. '	n' → logprob: -10.501463890075684
    8. '	while' → logprob: -10.876463890075684
    9. '```' → logprob: -11.001463890075684
    10. '   ' → logprob: -11.251463890075684

Token 88: ' end' (ID: 1268)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033879068214446306
    2. 'n' → logprob: -6.378387928009033
    3. 'size' → logprob: -6.628387928009033
    4. 'length' → logprob: -8.378387451171875
    5. '    ' → logprob: -10.128387451171875
    6. ' n' → logprob: -10.878387451171875
    7. ' size' → logprob: -11.128387451171875
    8. ' length' → logprob: -11.378387451171875
    9. 'heap' → logprob: -12.003387451171875
    10. 'l' → logprob: -12.253387451171875

Token 89: 'pos' (ID: 1103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11067290604114532
    2. '=len' → logprob: -3.485672950744629
    3. '=' → logprob: -3.610672950744629
    4. '   ' → logprob: -4.110672950744629
    5. '<|end|>' → logprob: -4.360672950744629
    6. 'pos' → logprob: -4.860672950744629
    7. 'def' → logprob: -5.485672950744629
    8. '  ' → logprob: -6.610672950744629
    9. '    ' → logprob: -6.860672950744629
    10. 'idx' → logprob: -8.235672950744629

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009817834943532944
    2. '=' → logprob: -4.634817600250244
    3. '   ' → logprob: -10.009818077087402
    4. '=len' → logprob: -11.634818077087402
    5. '  ' → logprob: -12.259818077087402
    6. ' ' → logprob: -13.259818077087402
    7. '    ' → logprob: -13.884818077087402
    8. ',' → logprob: -15.509818077087402
    9. '=int' → logprob: -16.384817123413086
    10. ' =
' → logprob: -16.384817123413086

Token 91: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0034957698080688715
    2. 'len' → logprob: -5.753495693206787
    3. '	len' → logprob: -9.128496170043945
    4. ' ' → logprob: -9.378496170043945
    5. '<|end|>' → logprob: -9.378496170043945
    6. '(len' → logprob: -10.753496170043945
    7. '<len' → logprob: -12.503496170043945
    8. '  ' → logprob: -12.628496170043945
    9. ',len' → logprob: -12.628496170043945
    10. ')' → logprob: -13.128496170043945

Token 92: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0009140860638581216
    2. '(' → logprob: -7.000914096832275
    3. '(
' → logprob: -13.250913619995117
    4. '(stack' → logprob: -15.625913619995117
    5. '(queue' → logprob: -15.875913619995117
    6. '(hash' → logprob: -16.000913619995117
    7. '(

' → logprob: -16.875913619995117
    8. ' (' → logprob: -17.250913619995117
    9. '(h' → logprob: -17.250913619995117
    10. 'heap' → logprob: -17.375913619995117

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005993809318169951
    2. ' )' → logprob: -7.875599384307861
    3. '<|end|>' → logprob: -9.000598907470703
    4. ')
' → logprob: -9.750598907470703
    5. ')-' → logprob: -10.875598907470703
    6. '   ' → logprob: -12.250598907470703
    7. ' -' → logprob: -13.000598907470703
    8. '-' → logprob: -13.250598907470703
    9. '<|end|>' → logprob: -13.500598907470703
    10. '()' → logprob: -13.625598907470703

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027989394962787628
    2. '
' → logprob: -4.402989387512207
    3. '    ' → logprob: -5.027989387512207
    4. '    
' → logprob: -6.152989387512207
    5. ' 
' → logprob: -6.402989387512207
    6. ' ' → logprob: -6.527989387512207
    7. ',' → logprob: -7.277989387512207
    8. '     
' → logprob: -7.527989387512207
    9. '>' → logprob: -7.902989387512207
    10. ' while' → logprob: -8.277989387512207

Token 95: ' target' (ID: 3783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6757360100746155
    2. 'child' → logprob: -1.4257359504699707
    3. ' child' → logprob: -1.4257359504699707
    4. 'start' → logprob: -6.425735950469971
    5. '	child' → logprob: -6.425735950469971
    6. ' start' → logprob: -6.550735950469971
    7. '1' → logprob: -6.925735950469971
    8. ' while' → logprob: -7.175735950469971
    9. 'pos' → logprob: -7.300735950469971
    10. 'c' → logprob: -7.925735950469971

Token 96: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -6.706686690449715e-05
    2. 'pos' → logprob: -9.625066757202148
    3. '=' → logprob: -14.500066757202148
    4. '_key' → logprob: -15.375066757202148
    5. ' =' → logprob: -16.25006675720215
    6. ' key' → logprob: -16.87506675720215
    7. 'Key' → logprob: -17.37506675720215
    8. '	key' → logprob: -18.00006675720215
    9. '   ' → logprob: -18.37506675720215
    10. 'index' → logprob: -19.00006675720215

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004104404244571924
    2. '=' → logprob: -5.5041046142578125
    3. ' ' → logprob: -11.254104614257812
    4. '   ' → logprob: -11.754104614257812
    5. '  ' → logprob: -12.254104614257812
    6. '    ' → logprob: -14.879104614257812
    7. '	' → logprob: -17.754104614257812
    8. ',' → logprob: -17.754104614257812
    9. ' ' → logprob: -19.129104614257812
    10. '[' → logprob: -19.504104614257812

Token 98: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.3484804332256317
    2. ' heap' → logprob: -1.223480463027954
    3. '(heap' → logprob: -10.973480224609375
    4. '   ' → logprob: -11.723480224609375
    5. ' ' → logprob: -12.223480224609375
    6. '  ' → logprob: -12.598480224609375
    7. '.heap' → logprob: -13.473480224609375
    8. '_heap' → logprob: -15.473480224609375
    9. '
' → logprob: -16.223480224609375
    10. '0' → logprob: -16.223480224609375

Token 99: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -2.7848862373502925e-05
    2. 'pos' → logprob: -10.500027656555176
    3. '[end' → logprob: -15.125027656555176
    4. '[' → logprob: -16.875028610229492
    5. '[position' → logprob: -18.750028610229492
    6. '[parent' → logprob: -19.000028610229492
    7. '```' → logprob: -19.125028610229492
    8. '
' → logprob: -19.625028610229492
    9. ' pos' → logprob: -19.875028610229492
    10. '(pos' → logprob: -20.000028610229492

Token 100: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1433938592672348
    2. ')
' → logprob: -2.0183937549591064
    3. ']' → logprob: -7.6433939933776855
    4. '   ' → logprob: -8.768393516540527
    5. ']
' → logprob: -10.143393516540527
    6. ' )' → logprob: -11.393393516540527
    7. '
' → logprob: -11.768393516540527
    8. ')
' → logprob: -11.768393516540527
    9. '）' → logprob: -12.518393516540527
    10. ')

' → logprob: -12.518393516540527

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06841129064559937
    2. 'child' → logprob: -2.943411350250244
    3. ' child' → logprob: -4.818411350250244
    4. 'while' → logprob: -5.818411350250244
    5. ' while' → logprob: -6.818411350250244
    6. 'pos' → logprob: -7.068411350250244
    7. 'left' → logprob: -8.318410873413086
    8. '	child' → logprob: -9.818410873413086
    9. 'start' → logprob: -10.568410873413086
    10. '_child' → logprob: -10.693410873413086

Token 102: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.003815630218014121
    2. 'while' → logprob: -6.503815650939941
    3. ' child' → logprob: -7.503815650939941
    4. 'start' → logprob: -7.503815650939941
    5. '   ' → logprob: -7.628815650939941
    6. 'left' → logprob: -7.753815650939941
    7. 'pos' → logprob: -8.628815650939941
    8. '1' → logprob: -9.878815650939941
    9. ' while' → logprob: -11.003815650939941
    10. '0' → logprob: -11.628815650939941

Token 103: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.650518920039758e-06
    2. '_pos' → logprob: -12.625003814697266
    3. ' =' → logprob: -16.000003814697266
    4. '=' → logprob: -16.500003814697266
    5. 'Pos' → logprob: -17.500003814697266
    6. ' ' → logprob: -18.000003814697266
    7. 'poss' → logprob: -18.250003814697266
    8. 's' → logprob: -18.250003814697266
    9. '  ' → logprob: -18.500003814697266
    10. '	pos' → logprob: -18.500003814697266

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028095098678022623
    2. '=' → logprob: -5.877809524536133
    3. ' ' → logprob: -12.502809524536133
    4. 's' → logprob: -14.002809524536133
    5. '<|end|>' → logprob: -17.002809524536133
    6. '  ' → logprob: -17.627809524536133
    7. '1' → logprob: -17.752809524536133
    8. '   ' → logprob: -17.752809524536133
    9. '2' → logprob: -17.877809524536133
    10. ':' → logprob: -18.002809524536133

Token 105: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9966041445732117
    2. 'pos' → logprob: -0.9966041445732117
    3. ' pos' → logprob: -1.3716042041778564
    4. ' (' → logprob: -5.621603965759277
    5. '(' → logprob: -6.246603965759277
    6. '   ' → logprob: -6.996603965759277
    7. '(pos' → logprob: -7.246603965759277
    8. ' ' → logprob: -7.496603965759277
    9. '0' → logprob: -9.246603965759277
    10. '1' → logprob: -9.621603965759277

Token 106: '2' (ID: 17)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.25276222825050354
    2. '2' → logprob: -1.6277621984481812
    3. '(' → logprob: -4.252762317657471
    4. '(pos' → logprob: -5.252762317657471
    5. ' pos' → logprob: -5.377762317657471
    6. ' (' → logprob: -6.502762317657471
    7. '   ' → logprob: -7.377762317657471
    8. ' ' → logprob: -8.002761840820312
    9. '1' → logprob: -8.877761840820312
    10. '    ' → logprob: -9.252761840820312

Token 107: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5759488344192505
    2. ' *' → logprob: -0.8259488344192505
    3. '   ' → logprob: -11.950948715209961
    4. '    ' → logprob: -13.200948715209961
    5. ' ' → logprob: -13.825948715209961
    6. '*(' → logprob: -16.95094871520996
    7. '	' → logprob: -17.20094871520996
    8. '  ' → logprob: -17.95094871520996
    9. '0' → logprob: -18.07594871520996
    10. ' ' → logprob: -18.32594871520996

Token 108: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.00033903829171322286
    2. ' pos' → logprob: -8.00033950805664
    3. '	pos' → logprob: -13.12533950805664
    4. '   ' → logprob: -13.87533950805664
    5. '<|end|>' → logprob: -15.12533950805664
    6. '_pos' → logprob: -15.50033950805664
    7. 'position' → logprob: -17.00033950805664
    8. '[pos' → logprob: -17.12533950805664
    9. '  ' → logprob: -17.12533950805664
    10. '(pos' → logprob: -17.37533950805664

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31326398253440857
    2. ' +' → logprob: -1.313264012336731
    3. '   ' → logprob: -13.938263893127441
    4. '＋' → logprob: -14.938263893127441
    5. '<|end|>' → logprob: -15.063263893127441
    6. '1' → logprob: -15.188263893127441
    7. ' plus' → logprob: -15.313263893127441
    8. '    ' → logprob: -16.063264846801758
    9. '
' → logprob: -16.188264846801758
    10. 'plus' → logprob: -17.313264846801758

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033784625702537596
    2. ' ' → logprob: -8.000337600708008
    3. '<|end|>' → logprob: -13.375337600708008
    4. '   ' → logprob: -14.625337600708008
    5. '  ' → logprob: -15.250337600708008
    6. '2' → logprob: -16.000337600708008
    7. '<|end|>' → logprob: -17.312837600708008
    8. '    ' → logprob: -17.625337600708008
    9. '+' → logprob: -18.062837600708008
    10. '```' → logprob: -18.312837600708008

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.625009536743164
    3. '2' → logprob: -14.875009536743164
    4. '<|end|>' → logprob: -15.000009536743164
    5. '   ' → logprob: -15.750009536743164
    6. '  ' → logprob: -16.937509536743164
    7. '```' → logprob: -17.187509536743164
    8. '0' → logprob: -17.250009536743164
    9. '<|end|>' → logprob: -17.687509536743164
    10. '۱' → logprob: -18.375009536743164

Token 112: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04963766038417816
    2. ' while' → logprob: -3.42463755607605
    3. '	while' → logprob: -4.549637794494629
    4. '<|end|>' → logprob: -5.424637794494629
    5. 'while' → logprob: -7.299637794494629
    6. '
' → logprob: -9.299637794494629
    7. ')' → logprob: -10.549637794494629
    8. '    
' → logprob: -10.924637794494629
    9. ',' → logprob: -11.049637794494629
    10. '       ' → logprob: -11.549637794494629

Token 114: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.17508955299854279
    2. ' while' → logprob: -1.9250895977020264
    3. '   ' → logprob: -4.425089359283447
    4. '	while' → logprob: -5.925089359283447
    5. '<|end|>' → logprob: -9.800089836120605
    6. ' ' → logprob: -10.925089836120605
    7. 'While' → logprob: -11.550089836120605
    8. '>' → logprob: -11.925089836120605
    9. ')' → logprob: -12.550089836120605
    10. '```' → logprob: -12.675089836120605

Token 115: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.16027052700519562
    2. 'child' → logprob: -1.9102705717086792
    3. '	child' → logprob: -10.535270690917969
    4. '   ' → logprob: -11.160270690917969
    5. '(child' → logprob: -12.410270690917969
    6. ' ' → logprob: -14.410270690917969
    7. '    ' → logprob: -14.535270690917969
    8. '_child' → logprob: -15.660270690917969
    9. '.child' → logprob: -15.910270690917969
    10. 'Child' → logprob: -16.16027069091797

Token 116: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -2.5776860184123507e-06
    2. '_pos' → logprob: -13.12500286102295
    3. ' pos' → logprob: -15.50000286102295
    4. ' <' → logprob: -16.375001907348633
    5. '	pos' → logprob: -16.875001907348633
    6. '<' → logprob: -17.000001907348633
    7. 's' → logprob: -17.125001907348633
    8. ' <=' → logprob: -17.125001907348633
    9. 'po' → logprob: -17.875001907348633
    10. 'o' → logprob: -18.375001907348633

Token 117: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5759473443031311
    2. '<' → logprob: -0.8259473443031311
    3. ' ' → logprob: -12.575947761535645
    4. 'in' → logprob: -13.575947761535645
    5. 'end' → logprob: -14.200947761535645
    6. '()<' → logprob: -15.200947761535645
    7. 'and' → logprob: -15.450947761535645
    8. '
' → logprob: -15.700947761535645
    9. '<len' → logprob: -15.700947761535645
    10. '1' → logprob: -15.700947761535645

Token 118: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0004307884373702109
    2. ' end' → logprob: -7.750430583953857
    3. ' ' → logprob: -17.500431060791016
    4. '(end' → logprob: -17.750431060791016
    5. '	end' → logprob: -18.125431060791016
    6. '=end' → logprob: -18.750431060791016
    7. '
' → logprob: -18.875431060791016
    8. '[end' → logprob: -19.250431060791016
    9. '   ' → logprob: -19.750431060791016
    10. ':end' → logprob: -20.250431060791016

Token 119: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.000561373308300972
    2. 'd' → logprob: -8.125561714172363
    3. 'p' → logprob: -8.625561714172363
    4. 'end' → logprob: -10.500561714172363
    5. 's' → logprob: -10.750561714172363
    6. 'os' → logprob: -11.375561714172363
    7. 'po' → logprob: -11.875561714172363
    8. 'op' → logprob: -12.375561714172363
    9. 't' → logprob: -12.875561714172363
    10. ')' → logprob: -13.250561714172363

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042609039694070816
    2. ':
' → logprob: -3.6676089763641357
    3. ' and' → logprob: -4.167609214782715
    4. 'and' → logprob: -8.042609214782715
    5. '       ' → logprob: -9.542609214782715
    6. '   ' → logprob: -9.667609214782715
    7. '<|end|>' → logprob: -9.667609214782715
    8. ' :' → logprob: -10.042609214782715
    9. '):
' → logprob: -10.167609214782715
    10. '):' → logprob: -10.292609214782715

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010730616049841046
    2. ' if' → logprob: -7.626072883605957
    3. '   ' → logprob: -8.376072883605957
    4. 'if' → logprob: -8.876072883605957
    5. '<|end|>' → logprob: -9.376072883605957
    6. '    ' → logprob: -10.501072883605957
    7. 'right' → logprob: -10.626072883605957
    8. ',' → logprob: -11.376072883605957
    9. '```' → logprob: -11.501072883605957
    10. 'next' → logprob: -11.626072883605957

Token 122: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.48470669984817505
    2. '       ' → logprob: -1.4847066402435303
    3. 'right' (adapté à ' right') → logprob: -2.1097066402435303
    4. '    ' → logprob: -4.609706878662109
    5. ' if' → logprob: -4.609706878662109
    6. '   ' → logprob: -5.109706878662109
    7. '        ' → logprob: -5.734706878662109
    8. ' next' → logprob: -6.359706878662109
    9. '	right' → logprob: -7.109706878662109
    10. '<|end|>' → logprob: -7.484706878662109

Token 123: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.023305343464016914
    2. '_pos' → logprob: -4.523305416107178
    3. '=' → logprob: -5.148305416107178
    4. 'child' → logprob: -5.898305416107178
    5. ' =' → logprob: -6.023305416107178
    6. '_child' → logprob: -6.773305416107178
    7. 'Pos' → logprob: -11.02330493927002
    8. '_' → logprob: -11.89830493927002
    9. 'Child' → logprob: -12.02330493927002
    10. '=_' → logprob: -12.39830493927002

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150994554162025
    2. '=' → logprob: -4.018150806427002
    3. ' ' → logprob: -13.76815128326416
    4. '＝' → logprob: -17.768150329589844
    5. '<|end|>' → logprob: -18.893150329589844
    6. ')' → logprob: -19.643150329589844
    7. ' =
' → logprob: -19.643150329589844
    8. '>' → logprob: -19.768150329589844
    9. ' ' → logprob: -19.893150329589844
    10. '	' → logprob: -19.893150329589844

Token 125: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.3132956922054291
    2. 'child' → logprob: -1.3132957220077515
    3. '	child' → logprob: -11.438295364379883
    4. '(child' → logprob: -11.563295364379883
    5. ' ' → logprob: -11.688295364379883
    6. '<|end|>' → logprob: -13.313295364379883
    7. '_child' → logprob: -13.813295364379883
    8. '   ' → logprob: -13.813295364379883
    9. '.child' → logprob: -14.813295364379883
    10. '2' → logprob: -14.938295364379883

Token 126: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.961759259458631e-06
    2. '_pos' → logprob: -12.375004768371582
    3. 'os' → logprob: -14.375004768371582
    4. ' pos' → logprob: -17.0000057220459
    5. '+' → logprob: -17.2500057220459
    6. 'pop' → logprob: -17.8750057220459
    7. 's' → logprob: -18.1250057220459
    8. 'po' → logprob: -18.2500057220459
    9. 'child' → logprob: -18.7500057220459
    10. '(pos' → logprob: -18.8750057220459

Token 127: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5250681638717651
    2. '+' → logprob: -0.9000681638717651
    3. '<|end|>' → logprob: -6.525068283081055
    4. ' and' → logprob: -8.650068283081055
    5. 'and' → logprob: -9.150068283081055
    6. ' ' → logprob: -9.400068283081055
    7. '   ' → logprob: -10.150068283081055
    8. '=' → logprob: -10.525068283081055
    9. ' if' → logprob: -11.525068283081055
    10. ' =' → logprob: -11.775068283081055

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -17.000009536743164
    4. '```' → logprob: -20.000009536743164
    5. '   ' → logprob: -20.750009536743164
    6. '۱' → logprob: -21.750009536743164
    7. '  ' → logprob: -22.125009536743164
    8. '0' → logprob: -22.125009536743164
    9. '１' → logprob: -22.375009536743164
    10. '<|end|>' → logprob: -22.625009536743164

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '<|end|>' → logprob: -17.625
    4. '   ' → logprob: -18.875
    5. '```' → logprob: -20.875
    6. '0' → logprob: -21.25
    7. 'def' → logprob: -21.625
    8. '  ' → logprob: -22.0
    9. '+' → logprob: -22.375
    10. '       ' → logprob: -22.375

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05748950317502022
    2. ' if' → logprob: -3.1824893951416016
    3. '<|end|>' → logprob: -5.057489395141602
    4. 'if' → logprob: -5.182489395141602
    5. '   ' → logprob: -6.307489395141602
    6. ' and' → logprob: -8.182489395141602
    7. ' ' → logprob: -9.057489395141602
    8. '<|end|>' → logprob: -9.557489395141602
    9. '	if' → logprob: -10.307489395141602
    10. 'and' → logprob: -10.807489395141602

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00587534811347723
    2. ' if' → logprob: -5.380875110626221
    3. '<|end|>' → logprob: -7.005875110626221
    4. 'if' → logprob: -8.130875587463379
    5. ',' → logprob: -10.880875587463379
    6. '   ' → logprob: -11.380875587463379
    7. ' and' → logprob: -11.505875587463379
    8. '	if' → logprob: -12.630875587463379
    9. '<|end|>' → logprob: -12.880875587463379
    10. '
' → logprob: -13.630875587463379

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.022704558447003365
    2. '       ' → logprob: -4.272704601287842
    3. ' if' → logprob: -4.772704601287842
    4. '   ' → logprob: -10.147704124450684
    5. '	if' → logprob: -12.897704124450684
    6. 'right' → logprob: -13.022704124450684
    7. '<|end|>' → logprob: -14.272704124450684
    8. 'child' → logprob: -14.397704124450684
    9. '           ' → logprob: -14.772704124450684
    10. '```' → logprob: -14.897704124450684

Token 133: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.38689637184143066
    2. ' right' → logprob: -1.1368963718414307
    3. '	right' → logprob: -10.886896133422852
    4. '(right' → logprob: -12.261896133422852
    5. '   ' → logprob: -14.261896133422852
    6. '[right' → logprob: -14.886896133422852
    7. ' ' → logprob: -14.886896133422852
    8. '_right' → logprob: -15.386896133422852
    9. '.right' → logprob: -15.886896133422852
    10. '  ' → logprob: -16.76189613342285

Token 134: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.9361264946837764e-07
    2. ' pos' → logprob: -16.75
    3. '   ' → logprob: -17.75
    4. '_pos' → logprob: -17.875
    5. 'po' → logprob: -18.0
    6. '	pos' → logprob: -18.5
    7. '<|end|>' → logprob: -19.0
    8. ' ' → logprob: -19.25
    9. '<' → logprob: -19.375
    10. 'post' → logprob: -19.5

Token 135: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.014198292046785355
    2. ' <' → logprob: -4.264198303222656
    3. '<len' → logprob: -10.764198303222656
    4. 'and' → logprob: -13.014198303222656
    5. '<data' → logprob: -13.139198303222656
    6. '<|end|>' → logprob: -13.139198303222656
    7. ' ' → logprob: -14.014198303222656
    8. '<size' → logprob: -14.139198303222656
    9. '<n' → logprob: -14.389198303222656
    10. ' and' → logprob: -14.514198303222656

Token 136: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.005235190503299236
    2. ' end' → logprob: -5.255235195159912
    3. '(end' → logprob: -14.255234718322754
    4. '	end' → logprob: -14.505234718322754
    5. '=end' → logprob: -16.13023567199707
    6. '[end' → logprob: -16.63023567199707
    7. '<|end|>' → logprob: -17.00523567199707
    8. ':end' → logprob: -17.00523567199707
    9. '   ' → logprob: -17.13023567199707
    10. ' ' → logprob: -17.63023567199707

Token 137: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.320199877838604e-07
    2. 'end' → logprob: -15.0
    3. 'po' → logprob: -17.875
    4. 'p' → logprob: -18.125
    5. 'os' → logprob: -18.125
    6. 'pop' → logprob: -18.25
    7. 'post' → logprob: -18.375
    8. 'of' → logprob: -19.125
    9. 'pot' → logprob: -19.125
    10. 'poss' → logprob: -19.25

Token 138: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0297551192343235
    2. 'and' → logprob: -3.529755115509033
    3. ' ' → logprob: -12.529755592346191
    4. '<|end|>' → logprob: -14.279755592346191
    5. '	and' → logprob: -15.904755592346191
    6. '   ' → logprob: -16.029754638671875
    7. '    ' → logprob: -16.404754638671875
    8. '        ' → logprob: -17.279754638671875
    9. '  ' → logprob: -17.654754638671875
    10. '<|end|>' → logprob: -18.654754638671875

Token 139: ' not' (ID: 625)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.09019309282302856
    2. 'heap' → logprob: -2.465193033218384
    3. '(heap' → logprob: -6.715193271636963
    4. '<|end|>' → logprob: -10.590192794799805
    5. '.heap' → logprob: -11.465192794799805
    6. '_heap' → logprob: -12.715192794799805
    7. ' ' → logprob: -14.465192794799805
    8. '    ' → logprob: -15.090192794799805
    9. '   ' → logprob: -15.215192794799805
    10. 'Heap' → logprob: -15.465192794799805

Token 140: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.07713242620229721
    2. 'heap' → logprob: -2.8271324634552
    3. '(heap' → logprob: -4.202132225036621
    4. ' (' → logprob: -9.577132225036621
    5. ' ' → logprob: -11.702132225036621
    6. '_heap' → logprob: -12.827132225036621
    7. '.heap' → logprob: -13.327132225036621
    8. '   ' → logprob: -13.327132225036621
    9. '    ' → logprob: -13.952132225036621
    10. '(' → logprob: -15.077132225036621

Token 141: '[right' (ID: 112866)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3319124011322856e-05
    2. '[right' → logprob: -10.750022888183594
    3. '[left' → logprob: -13.375022888183594
    4. '[
' → logprob: -15.750022888183594
    5. '```' → logprob: -16.625022888183594
    6. '[parent' → logprob: -17.875022888183594
    7. '   ' → logprob: -18.375022888183594
    8. 'child' → logprob: -18.875022888183594
    9. ' [' → logprob: -18.875022888183594
    10. '[ch' → logprob: -19.125022888183594

Token 142: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.002532021841034293
    2. 'child' → logprob: -6.002532005310059
    3. ']' → logprob: -10.377532005310059
    4. '[pos' → logprob: -11.752532005310059
    5. 'right' → logprob: -11.877532005310059
    6. '   ' → logprob: -13.127532005310059
    7. '[' → logprob: -13.127532005310059
    8. '_pos' → logprob: -14.002532005310059
    9. ']>' → logprob: -14.627532005310059
    10. 'key' → logprob: -14.627532005310059

Token 143: ']' (ID: 60)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.015353143215179443
    2. '<' → logprob: -4.515353202819824
    3. ' >' → logprob: -6.140353202819824
    4. '>' → logprob: -7.015353202819824
    5. ' <=' → logprob: -7.015353202819824
    6. ' ' → logprob: -8.765353202819824
    7. ']' → logprob: -9.265353202819824
    8. '[' → logprob: -9.765353202819824
    9. '<=' → logprob: -10.765353202819824
    10. ' ]' → logprob: -12.265353202819824

Token 144: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4456774890422821
    2. ' <' → logprob: -1.6956775188446045
    3. '>' → logprob: -1.8206775188446045
    4. ' >' → logprob: -4.820677280426025
    5. '<=' → logprob: -5.445677280426025
    6. ' <=' → logprob: -6.320677280426025
    7. '[' → logprob: -10.570677757263184
    8. '>=' → logprob: -11.820677757263184
    9. ' ' → logprob: -12.320677757263184
    10. '   ' → logprob: -13.945677757263184

Token 145: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0110511165112257
    2. ' heap' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.386051177978516
    4. '   ' → logprob: -14.136051177978516
    5. '(heap' → logprob: -14.136051177978516
    6. '.heap' → logprob: -15.761051177978516
    7. '  ' → logprob: -16.136051177978516
    8. '[' → logprob: -16.636051177978516
    9. '_heap' → logprob: -17.261051177978516
    10. '
' → logprob: -17.636051177978516

Token 146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0445127372804563e-05
    2. 'child' → logprob: -11.50001049041748
    3. '[left' → logprob: -17.250009536743164
    4. '(child' → logprob: -17.625009536743164
    5. ' child' → logprob: -17.750009536743164
    6. '[
' → logprob: -18.000009536743164
    7. '_child' → logprob: -18.625009536743164
    8. '	child' → logprob: -18.625009536743164
    9. '[right' → logprob: -18.750009536743164
    10. 'Child' → logprob: -18.875009536743164

Token 147: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -3.666993507067673e-05
    2. ' child' → logprob: -10.250036239624023
    3. '(child' → logprob: -14.500036239624023
    4. '	child' → logprob: -14.500036239624023
    5. '[' → logprob: -15.875036239624023
    6. '.child' → logprob: -16.750036239624023
    7. ']' → logprob: -17.000036239624023
    8. ' ' → logprob: -17.250036239624023
    9. '_child' → logprob: -17.250036239624023
    10. '   ' → logprob: -17.625036239624023

Token 148: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.128163257315464e-07
    2. '_pos' → logprob: -15.25
    3. 'os' → logprob: -17.0
    4. ']' → logprob: -18.25
    5. ' pos' → logprob: -18.625
    6. 'po' → logprob: -19.5
    7. 'Pos' → logprob: -19.625
    8. '[pos' → logprob: -19.625
    9. '	pos' → logprob: -20.375
    10. 'child' → logprob: -20.375

Token 149: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.2525665760040283
    2. ']:
' → logprob: -1.5025665760040283
    3. ']' → logprob: -8.25256633758545
    4. ':' → logprob: -8.62756633758545
    5. ']:
' → logprob: -9.25256633758545
    6. ' ]' → logprob: -9.62756633758545
    7. ']:

' → logprob: -11.12756633758545
    8. '   ' → logprob: -12.37756633758545
    9. '       ' → logprob: -12.62756633758545
    10. ':
' → logprob: -12.62756633758545

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018523305654525757
    2. ':
' → logprob: -4.518523216247559
    3. '
' → logprob: -5.393523216247559
    4. ':' → logprob: -6.268523216247559
    5. '       ' → logprob: -7.143523216247559
    6. '):
' → logprob: -10.143523216247559
    7. '            
' → logprob: -10.268523216247559
    8. '<|end|>' → logprob: -10.268523216247559
    9. '	       ' → logprob: -10.518523216247559
    10. ',' → logprob: -11.518523216247559

Token 151: ' child' (ID: 2320)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04965478181838989
    2. 'child' (adapté à ' child') → logprob: -3.424654722213745
    3. ' child' → logprob: -4.299654960632324
    4. ' 
' → logprob: -6.924654960632324
    5. '	child' → logprob: -7.299654960632324
    6. '       ' → logprob: -8.049654960632324
    7. '           ' → logprob: -8.424654960632324
    8. '
' → logprob: -10.674654960632324
    9. '   ' → logprob: -10.924654960632324
    10. '(child' → logprob: -11.174654960632324

Token 152: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.128163257315464e-07
    2. '_pos' → logprob: -15.125
    3. ' pos' → logprob: -18.5
    4. 'po' → logprob: -18.625
    5. '<|end|>' → logprob: -18.875
    6. 'post' → logprob: -19.75
    7. '	pos' → logprob: -20.125
    8. 'pop' → logprob: -20.25
    9. '[pos' → logprob: -20.5
    10. '=' → logprob: -20.875

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196826457977295
    2. ' =' → logprob: -1.501968264579773
    3. ' +=' → logprob: -11.001968383789062
    4. '+=' → logprob: -11.126968383789062
    5. '<|end|>' → logprob: -12.001968383789062
    6. ' ' → logprob: -14.126968383789062
    7. ' <<=' → logprob: -15.126968383789062
    8. ' |=' → logprob: -16.501968383789062
    9. '.=' → logprob: -16.626968383789062
    10. '=}' → logprob: -16.751968383789062

Token 154: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2519364058971405
    2. ' right' → logprob: -1.501936435699463
    3. '	right' → logprob: -12.376935958862305
    4. '[right' → logprob: -12.751935958862305
    5. '(right' → logprob: -16.251935958862305
    6. '_right' → logprob: -17.126935958862305
    7. '<|end|>' → logprob: -17.251935958862305
    8. ':right' → logprob: -17.501935958862305
    9. 'Right' → logprob: -17.751935958862305
    10. '
' → logprob: -18.126935958862305

Token 155: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.128163257315464e-07
    2. '_pos' → logprob: -16.25
    3. ' pos' → logprob: -16.75
    4. 'os' → logprob: -17.125
    5. 'right' → logprob: -17.375
    6. 'poss' → logprob: -17.875
    7. 'ight' → logprob: -18.0
    8. 'Pos' → logprob: -18.75
    9. 'post' → logprob: -19.0
    10. 'child' → logprob: -19.125

Token 156: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062296364456415176
    2. '
' → logprob: -2.8122963905334473
    3. '   ' → logprob: -8.937295913696289
    4. '        
' → logprob: -9.187295913696289
    5. ',' → logprob: -10.937295913696289
    6. '<|end|>' → logprob: -11.062295913696289
    7. ' if' → logprob: -11.312295913696289
    8. '
' → logprob: -11.562295913696289
    9. ')' → logprob: -11.937295913696289
    10. '    
' → logprob: -12.062295913696289

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04711290821433067
    2. '   ' → logprob: -3.1721129417419434
    3. ' if' → logprob: -5.672112941741943
    4. '
' → logprob: -7.797112941741943
    5. '        
' → logprob: -9.172112464904785
    6. 'if' → logprob: -9.547112464904785
    7. '           ' → logprob: -11.422112464904785
    8. '```' → logprob: -11.422112464904785
    9. '    
' → logprob: -11.672112464904785
    10. ' ' → logprob: -11.672112464904785

Token 158: ' child' (ID: 2320)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18329955637454987
    2. '   ' → logprob: -2.1832995414733887
    3. 'heap' → logprob: -3.5582995414733887
    4. ' if' → logprob: -4.433299541473389
    5. '
' → logprob: -4.808299541473389
    6. ' heap' → logprob: -6.058299541473389
    7. 'if' → logprob: -6.433299541473389
    8. ')' → logprob: -7.308299541473389
    9. '```' → logprob: -7.308299541473389
    10. '           ' → logprob: -8.808300018310547

Token 159: 'key' (ID: 1898)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.022780416533350945
    2. 'key' → logprob: -3.897780418395996
    3. '<|end|>' → logprob: -7.022780418395996
    4. '_key' → logprob: -7.272780418395996
    5. ' =' → logprob: -8.397780418395996
    6. '_pos' → logprob: -8.772780418395996
    7. '=' → logprob: -8.772780418395996
    8. 'value' → logprob: -10.397780418395996
    9. 'target' → logprob: -10.772780418395996
    10. 'val' → logprob: -11.022780418395996

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975071594119072
    2. '=' → logprob: -3.5297508239746094
    3. ' ' → logprob: -15.90475082397461
    4. '  ' → logprob: -17.65475082397461
    5. '<|end|>' → logprob: -17.65475082397461
    6. ',' → logprob: -17.77975082397461
    7. ')' → logprob: -17.77975082397461
    8. ' =
' → logprob: -17.90475082397461
    9. ']' → logprob: -18.90475082397461
    10. '   ' → logprob: -19.15475082397461

Token 161: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.07889385521411896
    2. 'heap' → logprob: -2.5788938999176025
    3. '(heap' → logprob: -12.828893661499023
    4. '.heap' → logprob: -13.703893661499023
    5. '_heap' → logprob: -15.578893661499023
    6. ' ' → logprob: -15.828893661499023
    7. ' heaps' → logprob: -17.203893661499023
    8. ' ' → logprob: -17.453893661499023
    9. '   ' → logprob: -17.828893661499023
    10. 'Heap' → logprob: -18.578893661499023

Token 162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'child' → logprob: -16.5
    3. ' [' → logprob: -19.5
    4. '[
' → logprob: -19.875
    5. '[parent' → logprob: -20.5
    6. '[pos' → logprob: -20.875
    7. '(child' → logprob: -21.625
    8. '```' → logprob: -21.875
    9. '	child' → logprob: -22.125
    10. '[cell' → logprob: -22.375

Token 163: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -1.5048530030981055e-06
    2. ' child' → logprob: -13.500001907348633
    3. '(child' → logprob: -17.500001907348633
    4. '	child' → logprob: -17.625001907348633
    5. '_child' → logprob: -19.250001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '.child' → logprob: -19.750001907348633
    8. 'Child' → logprob: -21.500001907348633
    9. ' ' → logprob: -22.125001907348633
    10. '
' → logprob: -22.125001907348633

Token 164: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -4.320199877838604e-07
    2. 'post' → logprob: -16.0
    3. ' pos' → logprob: -16.5
    4. '_pos' → logprob: -16.75
    5. ']' → logprob: -17.0
    6. '[pos' → logprob: -17.125
    7. 'po' → logprob: -17.625
    8. '   ' → logprob: -18.25
    9. '<|end|>' → logprob: -18.25
    10. 'position' → logprob: -18.375

Token 165: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20164917409420013
    2. ']' → logprob: -1.7016491889953613
    3. '       ' → logprob: -8.826648712158203
    4. ']

' → logprob: -10.201648712158203
    5. '   ' → logprob: -10.451648712158203
    6. ']
' → logprob: -11.451648712158203
    7. ' ]
' → logprob: -11.826648712158203
    8. ' ]' → logprob: -13.326648712158203
    9. ')
' → logprob: -13.701648712158203
    10. '<|end|>' → logprob: -13.826648712158203

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004990863148123026
    2. ' if' → logprob: -5.379991054534912
    3. 'if' → logprob: -8.504990577697754
    4. '   ' → logprob: -9.004990577697754
    5. '<|end|>' → logprob: -10.754990577697754
    6. ' ' → logprob: -12.004990577697754
    7. '        
' → logprob: -12.129990577697754
    8. ',' → logprob: -12.629990577697754
    9. '
' → logprob: -13.504990577697754
    10. ')' → logprob: -13.629990577697754

Token 167: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0453423447906971
    2. '       ' → logprob: -3.545342445373535
    3. 'if' (adapté à ' if') → logprob: -4.170342445373535
    4. '   ' → logprob: -11.045342445373535
    5. ' ' → logprob: -12.420342445373535
    6. '	if' → logprob: -12.670342445373535
    7. '    ' → logprob: -15.420342445373535
    8. ')' → logprob: -16.17034149169922
    9. 'If' → logprob: -16.29534149169922
    10. '  ' → logprob: -16.42034149169922

Token 168: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.2584571838378906
    2. ' child' → logprob: -2.0084571838378906
    3. 'target' → logprob: -2.5084571838378906
    4. 'child' → logprob: -4.508457183837891
    5. ' not' → logprob: -7.008457183837891
    6. '	target' → logprob: -9.63345718383789
    7. 'not' → logprob: -9.88345718383789
    8. '	child' → logprob: -10.00845718383789
    9. '   ' → logprob: -10.25845718383789
    10. ' ' → logprob: -10.25845718383789

Token 169: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.9361264946837764e-07
    2. ' key' → logprob: -16.25
    3. ' ' → logprob: -18.625
    4. '	key' → logprob: -19.375
    5. '   ' → logprob: -20.0
    6. '_key' → logprob: -20.25
    7. '
' → logprob: -20.25
    8. '  ' → logprob: -21.125
    9. '>' → logprob: -21.375
    10. 'Key' → logprob: -21.625

Token 170: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7238970994949341
    2. '>=' → logprob: -0.8488970994949341
    3. ' >=' → logprob: -2.7238969802856445
    4. ' <' → logprob: -3.8488969802856445
    5. '>' → logprob: -8.723896980285645
    6. '   ' → logprob: -8.973896980285645
    7. ' ' → logprob: -10.598896980285645
    8. ']>=' → logprob: -13.223896980285645
    9. '<th' → logprob: -13.348896980285645
    10. '[' → logprob: -13.348896980285645

Token 171: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.4740942120552063
    2. ' child' → logprob: -0.9740942120552063
    3. '	child' → logprob: -11.47409439086914
    4. '(child' → logprob: -12.47409439086914
    5. ' ' → logprob: -13.22409439086914
    6. '   ' → logprob: -14.72409439086914
    7. '_child' → logprob: -15.59909439086914
    8. '.child' → logprob: -15.59909439086914
    9. '<|end|>' → logprob: -16.09909439086914
    10. ' child's' → logprob: -16.47409439086914

Token 172: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -3.128163257315464e-07
    2. 'pos' → logprob: -15.625
    3. ' key' → logprob: -17.5
    4. '_key' → logprob: -17.5
    5. '[key' → logprob: -19.375
    6. '	key' → logprob: -19.375
    7. 'k' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. 'Key' → logprob: -20.125
    10. '(key' → logprob: -20.375

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22540225088596344
    2. '           ' → logprob: -2.100402355194092
    3. ' :' → logprob: -3.225402355194092
    4. ':
' → logprob: -3.350402355194092
    5. ' :
' → logprob: -6.225402355194092
    6. '   ' → logprob: -6.975402355194092
    7. ' ' → logprob: -7.100402355194092
    8. '       ' → logprob: -8.600401878356934
    9. ' break' → logprob: -8.725401878356934
    10. '            ' → logprob: -8.850401878356934

Token 174: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012903552269563079
    2. '       ' → logprob: -7.001290321350098
    3. '   ' → logprob: -8.001290321350098
    4. ' break' → logprob: -11.501290321350098
    5. ' ' → logprob: -11.876290321350098
    6. '	break' → logprob: -12.251290321350098
    7. '
' → logprob: -12.376290321350098
    8. ':' → logprob: -12.626290321350098
    9. '    ' → logprob: -13.126290321350098
    10. '	       ' → logprob: -13.376290321350098

Token 175: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04151589050889015
    2. '   ' → logprob: -3.916515827178955
    3. 'break' (adapté à ' break') → logprob: -4.541515827178955
    4. ' break' → logprob: -5.041515827178955
    5. '       ' → logprob: -5.666515827178955
    6. '	break' → logprob: -9.666516304016113
    7. ' ' → logprob: -9.791516304016113
    8. '  ' → logprob: -10.791516304016113
    9. '               ' → logprob: -11.666516304016113
    10. '
' → logprob: -12.041516304016113

Token 176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20375575125217438
    2. '   ' → logprob: -1.7037557363510132
    3. ' heap' → logprob: -6.578755855560303
    4. 'heap' → logprob: -7.953755855560303
    5. '    ' → logprob: -8.078755378723145
    6. '        
' → logprob: -8.703755378723145
    7. 'pos' → logprob: -10.703755378723145
    8. ' pos' → logprob: -10.828755378723145
    9. '    
' → logprob: -11.203755378723145
    10. '  ' → logprob: -11.328755378723145

Token 177: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37843647599220276
    2. ' heap' → logprob: -1.2534364461898804
    3. 'heap' → logprob: -3.87843656539917
    4. '       ' → logprob: -4.87843656539917
    5. '    ' → logprob: -7.12843656539917
    6. ' ' → logprob: -9.003436088562012
    7. '  ' → logprob: -9.253436088562012
    8. '(heap' → logprob: -9.503436088562012
    9. ' pos' → logprob: -10.253436088562012
    10. '
' → logprob: -10.878436088562012

Token 178: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.029791690409183502
    2. ' heap' → logprob: -3.5297915935516357
    3. '   ' → logprob: -10.404791831970215
    4. '       ' → logprob: -12.154791831970215
    5. '
' → logprob: -12.904791831970215
    6. '(heap' → logprob: -13.529791831970215
    7. '.heap' → logprob: -14.279791831970215
    8. '    ' → logprob: -15.404791831970215
    9. '        
' → logprob: -15.529791831970215
    10. ' ' → logprob: -15.654791831970215

Token 179: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.125005722045898
    3. '[parent' → logprob: -15.500005722045898
    4. '[position' → logprob: -17.8750057220459
    5. 'pos' → logprob: -19.6250057220459
    6. '[prop' → logprob: -20.8750057220459
    7. 'child' → logprob: -21.0000057220459
    8. ' [' → logprob: -21.5000057220459
    9. '[ch' → logprob: -21.8750057220459
    10. '[p' → logprob: -22.1250057220459

Token 180: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04810271039605141
    2. ' =' → logprob: -3.548102617263794
    3. '=' → logprob: -4.173102855682373
    4. ']=' → logprob: -6.173102855682373
    5. ' ]' → logprob: -7.298102855682373
    6. ')' → logprob: -11.298102378845215
    7. '[' → logprob: -12.798102378845215
    8. ',' → logprob: -13.048102378845215
    9. ')=' → logprob: -14.923102378845215
    10. ' ' → logprob: -15.173102378845215

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687190413475037
    2. ' =' → logprob: -1.1368719339370728
    3. '<|end|>' → logprob: -14.761872291564941
    4. '[' → logprob: -15.511872291564941
    5. '＝' → logprob: -16.261871337890625
    6. ',' → logprob: -16.636871337890625
    7. '=
' → logprob: -16.636871337890625
    8. ')' → logprob: -16.636871337890625
    9. '=

' → logprob: -17.261871337890625
    10. '.=' → logprob: -17.511871337890625

Token 182: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0003357006062287837
    2. ' child' → logprob: -8.000335693359375
    3. '	child' → logprob: -15.375335693359375
    4. '(child' → logprob: -17.875335693359375
    5. '_child' → logprob: -18.625335693359375
    6. '   ' → logprob: -18.875335693359375
    7. ' ' → logprob: -19.000335693359375
    8. '.child' → logprob: -19.125335693359375
    9. 'heap' → logprob: -19.375335693359375
    10. 'Child' → logprob: -20.000335693359375

Token 183: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.003179975086823106
    2. 'pos' → logprob: -5.753180027008057
    3. 'child' → logprob: -14.378179550170898
    4. '_key' → logprob: -14.378179550170898
    5. '[key' → logprob: -14.628179550170898
    6. ' key' → logprob: -14.878179550170898
    7. '_pos' → logprob: -16.2531795501709
    8. '[pos' → logprob: -16.8781795501709
    9. '[' → logprob: -17.1281795501709
    10. '	key' → logprob: -17.6281795501709

Token 184: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005895610898733139
    2. ' 
' → logprob: -5.380895614624023
    3. '\n' → logprob: -7.755895614624023
    4. '  
' → logprob: -8.505895614624023
    5. 'pos' → logprob: -8.755895614624023
    6. '<|end|>' → logprob: -8.880895614624023
    7. '
' → logprob: -9.005895614624023
    8. '    
' → logprob: -9.130895614624023
    9. '   
' → logprob: -10.755895614624023
    10. '[pos' → logprob: -10.755895614624023

Token 185: '       ' (ID: 309)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.24044206738471985
    2. ' 
' → logprob: -2.2404420375823975
    3. ' pos' → logprob: -2.6154420375823975
    4. '
' → logprob: -3.8654420375823975
    5. '<|end|>' → logprob: -5.240442276000977
    6. '[pos' → logprob: -6.240442276000977
    7. '    
' → logprob: -6.365442276000977
    8. '	pos' → logprob: -6.615442276000977
    9. ' ' → logprob: -7.115442276000977
    10. '   ' → logprob: -7.865442276000977

Token 186: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.002475777640938759
    2. ' pos' → logprob: -6.002475738525391
    3. 'child' → logprob: -16.87747573852539
    4. '	pos' → logprob: -17.37747573852539
    5. '_pos' → logprob: -17.75247573852539
    6. '
' → logprob: -17.75247573852539
    7. '[pos' → logprob: -17.75247573852539
    8. ',pos' → logprob: -19.00247573852539
    9. '.pos' → logprob: -19.12747573852539
    10. '(pos' → logprob: -19.25247573852539

Token 187: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804333135485649
    2. '=' → logprob: -3.288043260574341
    3. '<|end|>' → logprob: -13.663043022155762
    4. ',' → logprob: -14.663043022155762
    5. ')' → logprob: -16.663043975830078
    6. ' <<=' → logprob: -16.788043975830078
    7. ' =)' → logprob: -17.038043975830078
    8. '＝' → logprob: -17.163043975830078
    9. ' +=' → logprob: -17.163043975830078
    10. ' =
' → logprob: -17.288043975830078

Token 188: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.029757438227534294
    2. ' child' → logprob: -3.529757499694824
    3. '	child' → logprob: -12.029757499694824
    4. '.child' → logprob: -14.904757499694824
    5. '(child' → logprob: -15.404757499694824
    6. '_child' → logprob: -15.404757499694824
    7. '   ' → logprob: -16.779756546020508
    8. '<|end|>' → logprob: -16.779756546020508
    9. 'chat' → logprob: -18.404756546020508
    10. 'ch' → logprob: -18.404756546020508

Token 189: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.6312321753939614e-05
    2. '_pos' → logprob: -10.250036239624023
    3. 'os' → logprob: -15.000036239624023
    4. ' pos' → logprob: -15.125036239624023
    5. '[pos' → logprob: -16.500036239624023
    6. '	pos' → logprob: -16.750036239624023
    7. 'op' → logprob: -17.500036239624023
    8. 'pop' → logprob: -18.125036239624023
    9. 'Pos' → logprob: -18.125036239624023
    10. '```' → logprob: -18.250036239624023

Token 190: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5770971179008484
    2. '
' → logprob: -1.3270971775054932
    3. '<|end|>' → logprob: -2.077097177505493
    4. '	child' → logprob: -4.202096939086914
    5. '   ' → logprob: -4.702096939086914
    6. 'child' → logprob: -5.202096939086914
    7. '        
' → logprob: -5.452096939086914
    8. ' 
' → logprob: -5.452096939086914
    9. ' child' → logprob: -6.202096939086914
    10. '<|end|>' → logprob: -6.327096939086914

Token 192: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.1394582837820053
    2. ' child' → logprob: -2.389458179473877
    3. '       ' → logprob: -3.264458179473877
    4. '	child' → logprob: -8.514458656311035
    5. '   ' → logprob: -10.014458656311035
    6. '.child' → logprob: -11.389458656311035
    7. '_child' → logprob: -12.389458656311035
    8. ' ' → logprob: -12.389458656311035
    9. '
' → logprob: -12.639458656311035
    10. '(child' → logprob: -13.639458656311035

Token 193: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.9361264946837764e-07
    2. '_pos' → logprob: -16.125
    3. ' pos' → logprob: -18.25
    4. 'post' → logprob: -18.75
    5. 'po' → logprob: -19.625
    6. '	pos' → logprob: -20.125
    7. 'position' → logprob: -20.25
    8. 'positions' → logprob: -20.625
    9. 'pop' → logprob: -20.875
    10. ' =' → logprob: -20.875

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. '+=' → logprob: -14.77975082397461
    4. ' +=' → logprob: -16.15475082397461
    5. '＝' → logprob: -18.27975082397461
    6. '.=' → logprob: -18.40475082397461
    7. ' ' → logprob: -18.90475082397461
    8. '=

' → logprob: -19.02975082397461
    9. '*=' → logprob: -19.27975082397461
    10. '=
' → logprob: -20.15475082397461

Token 195: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0046318573877215385
    2. ' ' → logprob: -5.379631996154785
    3. '   ' → logprob: -11.629631996154785
    4. 'pos' → logprob: -13.754631996154785
    5. '(' → logprob: -14.879631996154785
    6. '  ' → logprob: -14.879631996154785
    7. '    ' → logprob: -15.379631996154785
    8. '```' → logprob: -15.504631996154785
    9. ' pos' → logprob: -16.12963104248047
    10. '       ' → logprob: -16.62963104248047

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010354319238103926
    2. ' ' → logprob: -9.250103950500488
    3. 'pos' → logprob: -12.000103950500488
    4. '   ' → logprob: -14.500103950500488
    5. '(' → logprob: -15.250103950500488
    6. '[' → logprob: -16.000102996826172
    7. '```' → logprob: -16.500102996826172
    8. '  ' → logprob: -16.750102996826172
    9. '(pos' → logprob: -17.375102996826172
    10. '２' → logprob: -17.500102996826172

Token 197: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -2.816093228830141e-06
    2. ' *' → logprob: -12.87500286102295
    3. 'pos' → logprob: -16.375001907348633
    4. '[pos' → logprob: -16.875001907348633
    5. '*out' → logprob: -19.875001907348633
    6. '*[' → logprob: -19.875001907348633
    7. '*object' → logprob: -20.250001907348633
    8. '*num' → logprob: -20.250001907348633
    9. '*p' → logprob: -20.375001907348633
    10. '*pi' → logprob: -20.625001907348633

Token 198: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -7.896309739408025e-07
    2. ' pos' → logprob: -14.125000953674316
    3. '	pos' → logprob: -18.375
    4. '<|end|>' → logprob: -20.125
    5. '(pos' → logprob: -20.375
    6. '[pos' → logprob: -20.375
    7. 'position' → logprob: -21.875
    8. '```' → logprob: -21.875
    9. '.pos' → logprob: -22.0
    10. '_pos' → logprob: -22.25

Token 199: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2014157623052597
    2. ' +' → logprob: -1.701415777206421
    3. '<|end|>' → logprob: -13.576416015625
    4. ' ' → logprob: -15.201416015625
    5. ' plus' → logprob: -15.326416015625
    6. '＋' → logprob: -15.576416015625
    7. '[' → logprob: -16.201416015625
    8. '```' → logprob: -16.326416015625
    9. '<|end|>' → logprob: -16.576416015625
    10. ' +
' → logprob: -16.576416015625

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005237668287009001
    2. ' ' → logprob: -5.255237579345703
    3. '<|end|>' → logprob: -12.505237579345703
    4. '2' → logprob: -16.005237579345703
    5. '0' → logprob: -16.755237579345703
    6. '   ' → logprob: -17.880237579345703
    7. '  ' → logprob: -17.880237579345703
    8. '<|end|>' → logprob: -18.005237579345703
    9. '```' → logprob: -18.755237579345703
    10. 'space' → logprob: -19.755237579345703

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '<|end|>' → logprob: -16.562545776367188
    4. '```' → logprob: -17.500045776367188
    5. '۱' → logprob: -17.562545776367188
    6. '2' → logprob: -17.812545776367188
    7. '0' → logprob: -17.875045776367188
    8. '   ' → logprob: -18.625045776367188
    9. '１' → logprob: -19.187545776367188
    10. '142' → logprob: -19.500045776367188

Token 202: '
' (ID: 198)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.028736678883433342
    2. '(heap' → logprob: -4.153736591339111
    3. '   ' → logprob: -4.528736591339111
    4. ' heap' → logprob: -7.153736591339111
    5. '
' → logprob: -7.403736591339111
    6. '.heap' → logprob: -8.65373706817627
    7. ')' → logprob: -9.52873706817627
    8. '```' → logprob: -10.02873706817627
    9. '    
' → logprob: -10.40373706817627
    10. '<|end|>' → logprob: -10.65373706817627

Token 203: '   ' (ID: 271)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.06537133455276489
    2. '
' → logprob: -3.31537127494812
    3. '   ' → logprob: -3.94037127494812
    4. '(heap' → logprob: -5.315371513366699
    5. ' heap' → logprob: -6.565371513366699
    6. '    
' → logprob: -7.815371513366699
    7. ' 
' → logprob: -8.3153715133667
    8. 'return' → logprob: -9.1903715133667
    9. '.heap' → logprob: -9.4403715133667
    10. '  
' → logprob: -9.5653715133667

Token 204: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -8.895480277715251e-06
    2. ' heap' → logprob: -11.750008583068848
    3. '
' → logprob: -14.250008583068848
    4. '(heap' → logprob: -15.875008583068848
    5. '   ' → logprob: -16.875009536743164
    6. '.heap' → logprob: -17.875009536743164
    7. '```' → logprob: -19.375009536743164
    8. '    
' → logprob: -19.500009536743164
    9. ' ' → logprob: -19.875009536743164
    10. ' 
' → logprob: -20.250009536743164

Token 205: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -12.625003814697266
    3. '[position' → logprob: -18.000003814697266
    4. '[p' → logprob: -18.125003814697266
    5. '\[' → logprob: -19.000003814697266
    6. '[
' → logprob: -20.000003814697266
    7. 'pos' → logprob: -20.000003814697266
    8. ' [' → logprob: -20.500003814697266
    9. '```' → logprob: -21.125003814697266
    10. '[prop' → logprob: -21.375003814697266

Token 206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001573544810526073
    2. '=' → logprob: -6.50157356262207
    3. ']=' → logprob: -9.62657356262207
    4. ')' → logprob: -12.37657356262207
    5. ' =' → logprob: -14.12657356262207
    6. ' ]' → logprob: -15.25157356262207
    7. '}' → logprob: -16.62657356262207
    8. '[' → logprob: -17.12657356262207
    9. '']' → logprob: -18.00157356262207
    10. ')=' → logprob: -18.37657356262207

Token 207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163747429847717
    2. ' =' → logprob: -4.264163970947266
    3. '=

' → logprob: -15.764163970947266
    4. '=
' → logprob: -16.514163970947266
    5. '[' → logprob: -18.514163970947266
    6. ')' → logprob: -18.889163970947266
    7. '=}' → logprob: -19.014163970947266
    8. '＝' → logprob: -19.139163970947266
    9. '.=' → logprob: -19.389163970947266
    10. ' =
' → logprob: -19.389163970947266

Token 208: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0001584850688232109
    2. ' target' → logprob: -8.750158309936523
    3. '	target' → logprob: -20.250158309936523
    4. '[target' → logprob: -20.250158309936523
    5. '   ' → logprob: -20.875158309936523
    6. 'token' → logprob: -21.125158309936523
    7. '(target' → logprob: -21.625158309936523
    8. ' ' → logprob: -22.250158309936523
    9. 'taget' → logprob: -22.625158309936523
    10. 't' → logprob: -23.625158309936523

Token 209: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.0280383548888494e-06
    2. ' key' → logprob: -14.125000953674316
    3. '_key' → logprob: -16.125001907348633
    4. 'k' → logprob: -16.750001907348633
    5. ' ' → logprob: -17.875001907348633
    6. 'ke' → logprob: -18.250001907348633
    7. '	key' → logprob: -18.250001907348633
    8. 'Key' → logprob: -18.625001907348633
    9. '[key' → logprob: -18.625001907348633
    10. '
' → logprob: -19.250001907348633

Token 210: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6666467785835266
    2. '<|end|>' → logprob: -0.7916467785835266
    3. 'def' → logprob: -3.791646718978882
    4. '\n' → logprob: -5.416646957397461
    5. '#' → logprob: -6.166646957397461
    6. ' def' → logprob: -6.291646957397461
    7. '[' → logprob: -7.166646957397461
    8. ')' → logprob: -7.416646957397461
    9. '\' → logprob: -8.416646957397461
    10. '<|end|>' → logprob: -8.541646957397461

Token 211: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00045736716128885746
    2. '#' → logprob: -7.875457286834717
    3. '```' → logprob: -10.500457763671875
    4. ' def' → logprob: -11.375457763671875
    5. '[' → logprob: -11.375457763671875
    6. '<|end|>' → logprob: -12.000457763671875
    7. '
' → logprob: -12.750457763671875
    8. 'de' → logprob: -13.000457763671875
    9. 'ndef' → logprob: -13.500457763671875
    10. 'heap' → logprob: -13.500457763671875

Token 212: ' heap' (ID: 37237)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -1.3084933757781982
    2. ' heap' → logprob: -1.4334933757781982
    3. 'he' → logprob: -1.6834933757781982
    4. 'heap' → logprob: -2.6834933757781982
    5. ' push' → logprob: -3.0584933757781982
    6. ' heaps' → logprob: -3.1834933757781982
    7. 'build' → logprob: -3.3084933757781982
    8. ' he' → logprob: -3.3084933757781982
    9. 'push' → logprob: -4.183493614196777
    10. ' set' → logprob: -4.308493614196777

Token 213: 'Push' (ID: 25634)
  Prédit: '_sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -0.7514736652374268
    2. '_push' → logprob: -1.2514736652374268
    3. 'ify' → logprob: -1.5014736652374268
    4. '_insert' → logprob: -4.376473426818848
    5. '_max' → logprob: -5.876473426818848
    6. '_add' → logprob: -6.501473426818848
    7. '_pop' → logprob: -7.001473426818848
    8. 'Sort' → logprob: -8.001473426818848
    9. '_' → logprob: -8.626473426818848
    10. 'Push' → logprob: -8.876473426818848

Token 214: '_max' (ID: 13731)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.011392275802791119
    2. '_max' → logprob: -4.636392116546631
    3. '(' → logprob: -6.761392116546631
    4. '_(' → logprob: -8.136392593383789
    5. '(max' → logprob: -8.886392593383789
    6. 'max' → logprob: -11.761392593383789
    7. ' (' → logprob: -12.136392593383789
    8. '(lst' → logprob: -12.261392593383789
    9. '_' → logprob: -12.511392593383789
    10. '```' → logprob: -12.511392593383789

Token 215: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.625007629394531
    3. '(lst' → logprob: -12.750007629394531
    4. '(array' → logprob: -14.625007629394531
    5. ' (' → logprob: -15.250007629394531
    6. '(arr' → logprob: -15.250007629394531
    7. '(h' → logprob: -15.625007629394531
    8. '(stack' → logprob: -15.750007629394531
    9. '(list' → logprob: -16.75000762939453
    10. 'heap' → logprob: -16.87500762939453

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010092071170220152
    2. ',item' → logprob: -9.500101089477539
    3. ',value' → logprob: -11.250101089477539
    4. ' ,' → logprob: -11.875101089477539
    5. ',val' → logprob: -12.750101089477539
    6. '(heap' → logprob: -13.875101089477539
    7. ',key' → logprob: -14.125101089477539
    8. '   ' → logprob: -14.250101089477539
    9. ',pos' → logprob: -15.500101089477539
    10. ',obj' → logprob: -15.875101089477539

Token 217: ' key' (ID: 2140)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.3656095862388611
    2. 'value' → logprob: -2.240609645843506
    3. 'key' → logprob: -2.240609645843506
    4. 'x' → logprob: -3.115609645843506
    5. 'val' → logprob: -3.740609645843506
    6. ' item' → logprob: -4.740609645843506
    7. 'elem' → logprob: -5.490609645843506
    8. 'element' → logprob: -5.740609645843506
    9. ' value' → logprob: -6.615609645843506
    10. ' key' → logprob: -6.615609645843506

Token 218: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10183017700910568
    2. '):
' → logprob: -2.351830244064331
    3. ',' → logprob: -6.476830005645752
    4. '):
' → logprob: -10.10183048248291
    5. '   ' → logprob: -10.60183048248291
    6. ')' → logprob: -11.10183048248291
    7. '):

' → logprob: -13.97683048248291
    8. ' ):' → logprob: -14.35183048248291
    9. ':' → logprob: -14.97683048248291
    10. ' ' → logprob: -15.72683048248291

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014974955469369888
    2. 'heap' → logprob: -4.639975070953369
    3. ' heap' → logprob: -5.264975070953369
    4. '(heap' → logprob: -10.764974594116211
    5. '.heap' → logprob: -11.639974594116211
    6. '   ' → logprob: -13.139974594116211
    7. '_heap' → logprob: -13.264974594116211
    8. '```' → logprob: -14.514974594116211
    9. 'he' → logprob: -15.139974594116211
    10. '	' → logprob: -15.264974594116211

Token 220: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.4368959069252014
    2. '   ' → logprob: -1.5618958473205566
    3. ' heap' → logprob: -1.9368958473205566
    4. '.heap' → logprob: -10.561896324157715
    5. '(heap' → logprob: -10.561896324157715
    6. '```' → logprob: -12.436896324157715
    7. ' ' → logprob: -12.561896324157715
    8. '  ' → logprob: -12.686896324157715
    9. '"""' → logprob: -12.811896324157715
    10. '
' → logprob: -13.061896324157715

Token 221: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002100965939462185
    2. '.' → logprob: -8.50020980834961
    3. '.app' → logprob: -12.62520980834961
    4. 'append' → logprob: -13.62520980834961
    5. '.push' → logprob: -13.75020980834961
    6. '.ap' → logprob: -14.50020980834961
    7. '.Append' → logprob: -16.00020980834961
    8. 'Append' → logprob: -16.12520980834961
    9. '.insert' → logprob: -16.25020980834961
    10. '_append' → logprob: -16.25020980834961

Token 222: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.38691282272338867
    2. '(' → logprob: -1.1369128227233887
    3. '(
' → logprob: -10.136913299560547
    4. '(

' → logprob: -13.636913299560547
    5. '(k' → logprob: -15.511913299560547
    6. ' (' → logprob: -15.636913299560547
    7. 'key' → logprob: -16.011913299560547
    8. '(Key' → logprob: -16.511913299560547
    9. ',key' → logprob: -16.511913299560547
    10. '(value' → logprob: -16.636913299560547

Token 223: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.000432695698691532
    2. ')' → logprob: -7.75043249130249
    3. ')
' → logprob: -13.625432968139648
    4. ' )
' → logprob: -14.750432968139648
    5. '   ' → logprob: -14.875432968139648
    6. ')

' → logprob: -17.75043296813965
    7. '
' → logprob: -19.25043296813965
    8. ')`
' → logprob: -20.12543296813965
    9. ')set' → logprob: -20.37543296813965
    10. ' ' → logprob: -20.62543296813965

Token 224: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00679861381649971
    2. ' 
' → logprob: -6.00679874420166
    3. 'set' → logprob: -6.38179874420166
    4. '   ' → logprob: -6.75679874420166
    5. '    
' → logprob: -7.13179874420166
    6. ' set' → logprob: -7.63179874420166
    7. '
' → logprob: -9.88179874420166
    8. '  
' → logprob: -10.13179874420166
    9. '   
' → logprob: -10.75679874420166
    10. ')
' → logprob: -11.13179874420166

Token 225: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.0007176732178777456
    2. ' set' → logprob: -7.250717639923096
    3. '   ' → logprob: -11.875718116760254
    4. 'pos' → logprob: -14.250718116760254
    5. '	set' → logprob: -17.125717163085938
    6. '
' → logprob: -17.500717163085938
    7. '    
' → logprob: -17.750717163085938
    8. '_set' → logprob: -18.125717163085938
    9. 'def' → logprob: -18.250717163085938
    10. 'return' → logprob: -18.375717163085938

Token 226: 'Heap' (ID: 39287)
  Prédit: 'Heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -1.9361264946837764e-07
    2. 'heap' → logprob: -16.5
    3. '_heap' → logprob: -18.75
    4. ' Heap' → logprob: -19.375
    5. 'Heat' → logprob: -21.75
    6. 'He' → logprob: -21.75
    7. '
' → logprob: -22.0
    8. '```' → logprob: -22.125
    9. ' heap' → logprob: -22.5
    10. '.heap' → logprob: -22.75

Token 227: 'Down' (ID: 6064)
  Prédit: 'Down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Down' → logprob: -0.03805951029062271
    2. 'Up' → logprob: -3.2880594730377197
    3. '_down' → logprob: -11.53805923461914
    4. 'down' → logprob: -12.53805923461914
    5. '_up' → logprob: -12.78805923461914
    6. 'up' → logprob: -14.16305923461914
    7. 'UP' → logprob: -14.66305923461914
    8. '_' → logprob: -15.53805923461914
    9. ' Down' → logprob: -15.78805923461914
    10. 'DOWN' → logprob: -16.41305923461914

Token 228: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.0280383548888494e-06
    2. '_min' → logprob: -14.875000953674316
    3. 'max' → logprob: -16.000001907348633
    4. '_down' → logprob: -16.125001907348633
    5. '```' → logprob: -16.375001907348633
    6. ' _' → logprob: -16.625001907348633
    7. '_' → logprob: -17.375001907348633
    8. '_up' → logprob: -17.750001907348633
    9. '(_' → logprob: -17.750001907348633
    10. '(max' → logprob: -18.000001907348633

Token 229: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.930552313453518e-05
    2. '(' → logprob: -10.500049591064453
    3. '_max' → logprob: -10.875049591064453
    4. '(max' → logprob: -13.875049591064453
    5. '_heap' → logprob: -14.125049591064453
    6. ' (' → logprob: -14.500049591064453
    7. '```' → logprob: -15.375049591064453
    8. '(len' → logprob: -15.750049591064453
    9. '(hist' → logprob: -16.625049591064453
    10. '(hash' → logprob: -17.250049591064453

Token 230: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.06460154801607132
    2. ',' → logprob: -2.8146016597747803
    3. '(len' → logprob: -6.189601421356201
    4. ',len' → logprob: -7.689601421356201
    5. ' ,' → logprob: -9.68960189819336
    6. '(' → logprob: -10.81460189819336
    7. ')' → logprob: -11.43960189819336
    8. '<|end|>' → logprob: -11.93960189819336
    9. ' (' → logprob: -12.06460189819336
    10. 'heap' → logprob: -12.43960189819336

Token 231: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005332778207957745
    2. ' len' → logprob: -5.255332946777344
    3. '	len' → logprob: -9.880332946777344
    4. '(len' → logprob: -10.255332946777344
    5. '[len' → logprob: -11.755332946777344
    6. '   ' → logprob: -13.630332946777344
    7. '<len' → logprob: -13.630332946777344
    8. ',len' → logprob: -13.880332946777344
    9. '=len' → logprob: -14.130332946777344
    10. ')' → logprob: -14.255332946777344

Token 232: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.500006675720215
    3. 'heap' → logprob: -12.875006675720215
    4. ')' → logprob: -15.750006675720215
    5. '```' → logprob: -16.37500762939453
    6. '(
' → logprob: -16.50000762939453
    7. ' heap' → logprob: -17.00000762939453
    8. ' (' → logprob: -18.37500762939453
    9. '.heap' → logprob: -18.37500762939453
    10. '(

' → logprob: -19.00000762939453

Token 233: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09350597113370895
    2. '-' → logprob: -2.718505859375
    3. '()' → logprob: -4.718505859375
    4. ')-' → logprob: -4.968505859375
    5. '(heap' → logprob: -5.718505859375
    6. ' -' → logprob: -6.093505859375
    7. '()-' → logprob: -6.468505859375
    8. '   ' → logprob: -8.968505859375
    9. '```' → logprob: -10.218505859375
    10. 'heap' → logprob: -10.468505859375

Token 234: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013319872319698334
    2. ' -' → logprob: -4.513319969177246
    3. ')' → logprob: -6.138319969177246
    4. ')-' → logprob: -9.263319969177246
    5. '()-' → logprob: -11.513319969177246
    6. '()' → logprob: -13.263319969177246
    7. '   ' → logprob: -13.513319969177246
    8. ' ' → logprob: -13.638319969177246
    9. '[' → logprob: -14.763319969177246
    10. '–' → logprob: -15.138319969177246

Token 235: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.000008583068848
    4. '```' → logprob: -16.62500762939453
    5. '  ' → logprob: -18.87500762939453
    6. ')' → logprob: -19.12500762939453
    7. '2' → logprob: -19.87500762939453
    8. '<|end|>' → logprob: -20.18750762939453
    9. '       ' → logprob: -20.31250762939453
    10. '
' → logprob: -20.50000762939453

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.375001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '  ' → logprob: -19.812501907348633
    6. '2' → logprob: -20.312501907348633
    7. '۱' → logprob: -20.375001907348633
    8. '
' → logprob: -20.375001907348633
    9. '``' → logprob: -20.687501907348633
    10. '<|end|>' → logprob: -21.312501907348633

Token 237: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -12.75000286102295
    3. ' )' → logprob: -15.75000286102295
    4. ')

' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.625003814697266
    6. '))' → logprob: -17.875003814697266
    7. ')}' → logprob: -18.500003814697266
    8. ')#' → logprob: -19.125003814697266
    9. '<|end|>' → logprob: -19.375003814697266
    10. ')return' → logprob: -19.750003814697266

Token 238: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 239: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.030037764459848404
    2. ' heap' → logprob: -3.5300378799438477
    3. 'he' → logprob: -8.280037879943848
    4. '.heap' → logprob: -11.405037879943848
    5. '(heap' → logprob: -12.655037879943848
    6. 'def' → logprob: -12.655037879943848
    7. 'extract' → logprob: -12.780037879943848
    8. ' he' → logprob: -12.905037879943848
    9. 'set' → logprob: -13.405037879943848
    10. '_heap' → logprob: -13.780037879943848

Token 240: 'Pop' (ID: 10640)
  Prédit: 'Pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pop' → logprob: -7.910643762443215e-05
    2. 'pop' → logprob: -9.500079154968262
    3. '_pop' → logprob: -13.000079154968262
    4. 'Push' → logprob: -13.750079154968262
    5. 'Po' → logprob: -14.875079154968262
    6. 'ify' → logprob: -15.875079154968262
    7. 'Poll' → logprob: -16.625078201293945
    8. '[' → logprob: -16.750078201293945
    9. 'Extract' → logprob: -16.750078201293945
    10. 'extract' → logprob: -16.750078201293945

Token 241: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.6240566083070007e-06
    2. 'max' → logprob: -14.000001907348633
    3. '_min' → logprob: -14.500001907348633
    4. '_' → logprob: -16.250001907348633
    5. '(max' → logprob: -17.000001907348633
    6. '(_' → logprob: -18.125001907348633
    7. '```' → logprob: -18.375001907348633
    8. '_MAX' → logprob: -18.625001907348633
    9. ' _' → logprob: -18.750001907348633
    10. 'Max' → logprob: -18.875001907348633

Token 242: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -5.1689596148207784e-05
    2. '(' → logprob: -9.875051498413086
    3. 'heap' → logprob: -17.500051498413086
    4. '(
' → logprob: -17.500051498413086
    5. '(stack' → logprob: -17.500051498413086
    6. '(hash' → logprob: -17.750051498413086
    7. '(h' → logprob: -17.875051498413086
    8. '(queue' → logprob: -18.000051498413086
    9. '(deck' → logprob: -18.125051498413086
    10. ' (' → logprob: -18.750051498413086

Token 243: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025574727915227413
    2. '):
' → logprob: -6.252557277679443
    3. ')' → logprob: -7.377557277679443
    4. '):
' → logprob: -13.252557754516602
    5. '):

' → logprob: -13.502557754516602
    6. ' ):' → logprob: -15.877557754516602
    7. '[]):' → logprob: -16.3775577545166
    8. '():' → logprob: -16.5025577545166
    9. ')：' → logprob: -16.8775577545166
    10. '）：' → logprob: -17.5025577545166

Token 244: '   ' (ID: 271)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.3787009119987488
    2. 'if' → logprob: -1.7537009716033936
    3. 'root' → logprob: -3.2537009716033936
    4. 'retval' → logprob: -3.2537009716033936
    5. 'result' → logprob: -4.1287007331848145
    6. 'end' → logprob: -4.1287007331848145
    7. 'heap' → logprob: -4.7537007331848145
    8. 'ret' → logprob: -4.8787007331848145
    9. 'return' → logprob: -5.7537007331848145
    10. '   ' → logprob: -5.8787007331848145

Token 245: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.09380469471216202
    2. 'if' → logprob: -2.9688045978546143
    3. 'retval' → logprob: -4.343804836273193
    4. 'ret' → logprob: -4.593804836273193
    5. 'result' → logprob: -5.343804836273193
    6. 'end' → logprob: -5.968804836273193
    7. 'target' → logprob: -6.343804836273193
    8. 'return' → logprob: -6.468804836273193
    9. 'root' → logprob: -6.468804836273193
    10. 'res' → logprob: -7.593804836273193

Token 246: 'key' (ID: 1898)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5301252603530884
    2. ' =' → logprob: -1.0301252603530884
    3. '_item' → logprob: -3.905125141143799
    4. 'item' → logprob: -4.780125141143799
    5. '_element' → logprob: -4.905125141143799
    6. '_key' → logprob: -5.530125141143799
    7. 'elem' → logprob: -5.530125141143799
    8. '_elem' → logprob: -5.655125141143799
    9. 'element' → logprob: -6.030125141143799
    10. 'key' → logprob: -7.155125141143799

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014521211385727
    2. '=' → logprob: -1.7014521360397339
    3. '   ' → logprob: -10.326452255249023
    4. ' ' → logprob: -12.451452255249023
    5. '  ' → logprob: -14.201452255249023
    6. '    ' → logprob: -14.826452255249023
    7. '	' → logprob: -15.076452255249023
    8. ' =
' → logprob: -15.576452255249023
    9. ' ' → logprob: -15.701452255249023
    10. '=
' → logprob: -15.826452255249023

Token 248: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.20141851902008057
    2. ' heap' → logprob: -1.7014185190200806
    3. '(heap' → logprob: -12.82641887664795
    4. ' ' → logprob: -13.57641887664795
    5. '.heap' → logprob: -14.57641887664795
    6. '   ' → logprob: -14.70141887664795
    7. 'he' → logprob: -15.95141887664795
    8. '  ' → logprob: -16.201417922973633
    9. ' he' → logprob: -16.576417922973633
    10. '_heap' → logprob: -17.701417922973633

Token 249: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00016349162615370005
    2. '[-' → logprob: -8.750163078308105
    3. '.' → logprob: -12.500163078308105
    4. 'pop' → logprob: -13.625163078308105
    5. ' .' → logprob: -18.250164031982422
    6. '[' → logprob: -18.750164031982422
    7. '   ' → logprob: -19.375164031982422
    8. ' pop' → logprob: -19.750164031982422
    9. 'Pop' → logprob: -20.250164031982422
    10. '	pop' → logprob: -20.250164031982422

Token 250: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10038793087005615
    2. '()
' → logprob: -2.3503880500793457
    3. '(' → logprob: -9.100387573242188
    4. '()

' → logprob: -9.725387573242188
    5. '()
' → logprob: -12.350387573242188
    6. '0' → logprob: -12.975387573242188
    7. '(-' → logprob: -13.475387573242188
    8. '()\' → logprob: -14.350387573242188
    9. '()`' → logprob: -14.975387573242188
    10. 'def' → logprob: -15.600387573242188

Token 251: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0015446186298504472
    2. ' if' → logprob: -6.50154447555542
    3. 'result' → logprob: -11.376544952392578
    4. 'retval' → logprob: -11.501544952392578
    5. '   ' → logprob: -12.001544952392578
    6. 'return' → logprob: -12.501544952392578
    7. '
' → logprob: -12.751544952392578
    8. 'ret' → logprob: -13.126544952392578
    9. '[' → logprob: -13.626544952392578
    10. 'def' → logprob: -13.876544952392578

Token 252: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0010525768157094717
    2. 'retval' → logprob: -7.751052379608154
    3. ' if' → logprob: -8.376052856445312
    4. 'result' → logprob: -8.626052856445312
    5. 'return' → logprob: -9.376052856445312
    6. 'ret' → logprob: -9.751052856445312
    7. 'res' → logprob: -10.376052856445312
    8. 'max' → logprob: -10.626052856445312
    9. '   ' → logprob: -12.126052856445312
    10. 'top' → logprob: -13.126052856445312

Token 253: ' heap' (ID: 37237)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12527772784233093
    2. 'not' → logprob: -2.6252777576446533
    3. 'len' → logprob: -4.125277519226074
    4. ' heap' → logprob: -4.375277519226074
    5. 'heap' → logprob: -4.625277519226074
    6. ' len' → logprob: -5.000277519226074
    7. ' ' → logprob: -10.250277519226074
    8. '	not' → logprob: -12.625277519226074
    9. '   ' → logprob: -13.000277519226074
    10. '(heap' → logprob: -13.250277519226074

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006209974177181721
    2. '[' → logprob: -5.381209850311279
    3. ':
' → logprob: -7.256209850311279
    4. '>' → logprob: -8.256210327148438
    5. 's' → logprob: -8.881210327148438
    6. '[]' → logprob: -9.881210327148438
    7. '==' → logprob: -10.006210327148438
    8. '[:]' → logprob: -10.131210327148438
    9. ':return' → logprob: -10.256210327148438
    10. '<|end|>' → logprob: -10.881210327148438

Token 255: '       ' (ID: 309)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2921302318572998
    2. '[' → logprob: -1.4171302318572998
    3. '   ' → logprob: -2.0421302318573
    4. 'ret' → logprob: -2.2921302318573
    5. 'heap' → logprob: -2.6671302318573
    6. 'retval' → logprob: -3.0421302318573
    7. 'root' → logprob: -3.7921302318573
    8. 'key' → logprob: -3.9171302318573
    9. 'top' → logprob: -4.292130470275879
    10. ':' → logprob: -4.542130470275879

Token 256: ' return' (ID: 622)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.360764741897583
    2. 'ret' → logprob: -1.360764741897583
    3. 'top' → logprob: -1.610764741897583
    4. 'root' → logprob: -1.860764741897583
    5. 'return' (adapté à ' return') → logprob: -2.985764741897583
    6. 'retval' → logprob: -3.110764741897583
    7. 'heap' → logprob: -3.860764741897583
    8. 'result' → logprob: -4.860764503479004
    9. 'res' → logprob: -5.610764503479004
    10. 'key' → logprob: -6.610764503479004

Token 257: 'key' (ID: 1898)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00990411825478077
    2. ' heap' → logprob: -4.634903907775879
    3. 'key' → logprob: -10.009903907775879
    4. 'max' → logprob: -10.384903907775879
    5. '_heap' → logprob: -10.759903907775879
    6. '(heap' → logprob: -10.759903907775879
    7. 'last' → logprob: -11.509903907775879
    8. '_key' → logprob: -12.884903907775879
    9. 'result' → logprob: -12.884903907775879
    10. 'val' → logprob: -13.009903907775879

Token 258: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038098301738500595
    2. '=' → logprob: -3.2880983352661133
    3. ',' → logprob: -10.038098335266113
    4. 'heap' → logprob: -12.288098335266113
    5. ' heap' → logprob: -13.288098335266113
    6. ' ' → logprob: -13.538098335266113
    7. '    ' → logprob: -13.663098335266113
    8. '   ' → logprob: -13.913098335266113
    9. '(heap' → logprob: -13.913098335266113
    10. '[' → logprob: -14.038098335266113

Token 259: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.018151700496673584
    2. ' heap' → logprob: -4.018151760101318
    3. '(heap' → logprob: -13.89315128326416
    4. '   ' → logprob: -14.64315128326416
    5. '.heap' → logprob: -15.39315128326416
    6. ' ' → logprob: -15.76815128326416
    7. '_heap' → logprob: -18.018152236938477
    8. '  ' → logprob: -18.268152236938477
    9. 'he' → logprob: -18.393152236938477
    10. 'Heap' → logprob: -19.643152236938477

Token 260: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.5
    3. '[-' → logprob: -19.375
    4. '```' → logprob: -19.625
    5. 'def' → logprob: -20.375
    6. '
' → logprob: -21.0
    7. '[
' → logprob: -21.25
    8. '.pop' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. '#' → logprob: -22.125

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. '[' → logprob: -9.875051498413086
    3. ' ' → logprob: -15.750051498413086
    4. '   ' → logprob: -18.375051498413086
    5. '
' → logprob: -19.125051498413086
    6. '00' → logprob: -19.625051498413086
    7. '1' → logprob: -20.375051498413086
    8. '۰' → logprob: -20.500051498413086
    9. '...' → logprob: -20.875051498413086
    10. '000' → logprob: -21.625051498413086

Token 262: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3237104117870331
    2. ']
' → logprob: -1.6987104415893555
    3. ']' → logprob: -2.5737104415893555
    4. ')
' → logprob: -4.6987104415893555
    5. ')' → logprob: -5.5737104415893555
    6. '   ' → logprob: -6.3237104415893555
    7. 'last' → logprob: -6.6987104415893555
    8. ' last' → logprob: -7.9487104415893555
    9. ',' → logprob: -8.198710441589355
    10. '<|end|>' → logprob: -8.698710441589355

Token 263: '       ' (ID: 309)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.011595201678574085
    2. ' heap' → logprob: -4.636595249176025
    3. '(heap' → logprob: -7.011595249176025
    4. '   ' → logprob: -7.136595249176025
    5. '[' → logprob: -9.886594772338867
    6. '.heap' → logprob: -10.011594772338867
    7. '
' → logprob: -11.386594772338867
    8. '_heap' → logprob: -11.511594772338867
    9. ' ' → logprob: -12.511594772338867
    10. ',' → logprob: -12.636594772338867

Token 264: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -2.7848862373502925e-05
    2. ' heap' → logprob: -10.500027656555176
    3. 'last' → logprob: -15.125027656555176
    4. '   ' → logprob: -16.875028610229492
    5. '(heap' → logprob: -17.375028610229492
    6. '_heap' → logprob: -17.750028610229492
    7. '.heap' → logprob: -17.750028610229492
    8. 'heat' → logprob: -20.625028610229492
    9. 'he' → logprob: -20.875028610229492
    10. '```' → logprob: -21.250028610229492

Token 265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[-' → logprob: -14.375000953674316
    3. '```' → logprob: -17.625
    4. '0' → logprob: -17.875
    5. '=' → logprob: -18.625
    6. '-' → logprob: -19.0
    7. '
' → logprob: -19.125
    8. '(' → logprob: -19.25
    9. 'a' → logprob: -19.5
    10. 's' → logprob: -20.625

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.531315314830863e-06
    2. '-' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.000003814697266
    4. ' ' → logprob: -16.375003814697266
    5. 'heap' → logprob: -19.375003814697266
    6. '=' → logprob: -19.500003814697266
    7. '```' → logprob: -19.500003814697266
    8. '  ' → logprob: -20.625003814697266
    9. ' -' → logprob: -21.000003814697266
    10. '۰' → logprob: -21.375003814697266

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003402524860575795
    2. '=' → logprob: -6.0034027099609375
    3. ']=' → logprob: -7.3784027099609375
    4. '>' → logprob: -8.878402709960938
    5. ' =' → logprob: -9.128402709960938
    6. ')' → logprob: -10.628402709960938
    7. '}' → logprob: -10.878402709960938
    8. 's' → logprob: -12.128402709960938
    9. ' ' → logprob: -13.503402709960938
    10. ',' → logprob: -14.253402709960938

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141343772411346
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -15.95141315460205
    4. '=head' → logprob: -18.076414108276367
    5. '   ' → logprob: -18.201414108276367
    6. ']' → logprob: -18.201414108276367
    7. '＝' → logprob: -18.826414108276367
    8. ')' → logprob: -19.076414108276367
    9. '=index' → logprob: -19.076414108276367
    10. '=item' → logprob: -19.201414108276367

Token 269: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -6.2729995988775045e-06
    2. ' last' → logprob: -12.000006675720215
    3. '[last' → logprob: -21.6250057220459
    4. '	last' → logprob: -22.6250057220459
    5. 'Last' → logprob: -22.7500057220459
    6. '_last' → logprob: -22.8750057220459
    7. '(last' → logprob: -23.5000057220459
    8. ':last' → logprob: -25.1250057220459
    9. 'lasti' → logprob: -25.5000057220459
    10. '-last' → logprob: -26.0000057220459

Token 270: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: 0.0
    2. 'last' → logprob: -17.125
    3. 'Key' → logprob: -19.25
    4. ' key' → logprob: -19.5
    5. '_key' → logprob: -19.875
    6. '	key' → logprob: -20.125
    7. 'keye' → logprob: -20.5
    8. '(key' → logprob: -20.625
    9. 'k' → logprob: -20.625
    10. 'code' → logprob: -21.0

Token 271: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24316072463989258
    2. '   ' → logprob: -1.9931607246398926
    3. 'set' → logprob: -2.6181607246398926
    4. ' set' → logprob: -5.118160724639893
    5. ' ' → logprob: -8.118160247802734
    6. 'heap' → logprob: -8.118160247802734
    7. '	set' → logprob: -10.493160247802734
    8. ',' → logprob: -11.743160247802734
    9. '  ' → logprob: -11.868160247802734
    10. ' heap' → logprob: -12.243160247802734

Token 272: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0688117742538452
    2. 'set' → logprob: -1.0688117742538452
    3. '   ' → logprob: -1.1938117742538452
    4. ' set' → logprob: -5.068811893463135
    5. 'heap' → logprob: -5.693811893463135
    6. ' ' → logprob: -8.193811416625977
    7. '	set' → logprob: -9.568811416625977
    8. ' heap' → logprob: -10.568811416625977
    9. '  ' → logprob: -11.068811416625977
    10. ')set' → logprob: -11.318811416625977

Token 273: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -9.014684110297821e-06
    2. ' set' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.000008583068848
    4. '       ' → logprob: -15.625008583068848
    5. '
' → logprob: -15.875008583068848
    6. '	set' → logprob: -18.000009536743164
    7. ')set' → logprob: -21.000009536743164
    8. '_set' → logprob: -21.500009536743164
    9. '    
' → logprob: -21.875009536743164
    10. '.set' → logprob: -22.125009536743164

Token 274: 'Heap' (ID: 39287)
  Prédit: 'Heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Heap' → logprob: -9.088346359931165e-07
    2. 'heap' → logprob: -14.000000953674316
    3. 'Heat' → logprob: -18.125
    4. '_heap' → logprob: -18.875
    5. ' Heap' → logprob: -19.75
    6. 'Up' → logprob: -20.0
    7. 'He' → logprob: -20.875
    8. '```' → logprob: -21.25
    9. ' heap' → logprob: -21.75
    10. '.heap' → logprob: -22.125

Token 275: 'Up' (ID: 2658)
  Prédit: 'Up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Up' → logprob: -0.008616226725280285
    2. 'Down' → logprob: -4.7586164474487305
    3. '_up' → logprob: -14.00861644744873
    4. 'up' → logprob: -14.38361644744873
    5. ' Up' → logprob: -15.75861644744873
    6. 'UP' → logprob: -16.258615493774414
    7. 'down' → logprob: -16.883615493774414
    8. '_' → logprob: -18.258615493774414
    9. '_down' → logprob: -18.508615493774414
    10. '_UP' → logprob: -19.258615493774414

Token 276: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.9361264946837764e-07
    2. 'max' → logprob: -16.375
    3. '_min' → logprob: -20.5
    4. '_MAX' → logprob: -21.125
    5. '(max' → logprob: -21.5
    6. '_' → logprob: -22.5
    7. '```' → logprob: -22.75
    8. ' _' → logprob: -23.25
    9. ' max' → logprob: -24.125
    10. '_Max' → logprob: -24.5

Token 277: '(heap' (ID: 173794)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.014239318668842316
    2. '(heap' → logprob: -4.264239311218262
    3. 'max' → logprob: -10.139239311218262
    4. '(max' → logprob: -10.264239311218262
    5. '_(' → logprob: -14.514239311218262
    6. '_MAX' → logprob: -14.514239311218262
    7. '(' → logprob: -15.889239311218262
    8. '_min' → logprob: -16.139240264892578
    9. '_heap' → logprob: -16.514240264892578
    10. ' (' → logprob: -16.764240264892578

Token 278: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -4.246537173457909e-06
    2. '(max' → logprob: -13.250003814697266
    3. ')' → logprob: -13.750003814697266
    4. '_max' → logprob: -14.250003814697266
    5. ' (' → logprob: -14.500003814697266
    6. 'max' → logprob: -16.375003814697266
    7. '(hash' → logprob: -17.125003814697266
    8. '(' → logprob: -17.125003814697266
    9. ')(' → logprob: -17.375003814697266
    10. ',' → logprob: -18.000003814697266

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.62500762939453
    4. ')' → logprob: -20.25000762939453
    5. '۰' → logprob: -20.37500762939453
    6. '<|end|>' → logprob: -20.75000762939453
    7. '(' → logprob: -21.37500762939453
    8. '  ' → logprob: -21.37500762939453
    9. '[' → logprob: -22.37500762939453
    10. '1' → logprob: -22.37500762939453

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -20.5
    4. '۰' → logprob: -20.75
    5. ')' → logprob: -21.5
    6. '(' → logprob: -21.625
    7. '  ' → logprob: -22.0
    8. '<|end|>' → logprob: -22.25
    9. '1' → logprob: -23.125
    10. '00' → logprob: -23.25

Token 281: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023258639499545097
    2. ')' → logprob: -3.773258686065674
    3. ')
' → logprob: -11.773258209228516
    4. '   ' → logprob: -13.023258209228516
    5. '       ' → logprob: -13.023258209228516
    6. ')

' → logprob: -14.273258209228516
    7. ' )
' → logprob: -15.273258209228516
    8. ')return' → logprob: -16.023258209228516
    9. ')`
' → logprob: -17.273258209228516
    10. ' )' → logprob: -19.273258209228516

Token 282: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02372615970671177
    2. '   ' → logprob: -3.773726224899292
    3. 'return' → logprob: -7.898725986480713
    4. ' return' → logprob: -9.148726463317871
    5. '	return' → logprob: -13.148726463317871
    6. '
' → logprob: -15.148726463317871
    7. 'else' → logprob: -16.023725509643555
    8. '           ' → logprob: -16.023725509643555
    9. '      ' → logprob: -16.148725509643555
    10. ':return' → logprob: -16.148725509643555

Token 283: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05912280082702637
    2. '       ' → logprob: -3.0591228008270264
    3. ' return' → logprob: -4.5591230392456055
    4. '   ' → logprob: -11.809123039245605
    5. '	return' → logprob: -13.809123039245605
    6. ' ' → logprob: -15.559123039245605
    7. ':return' → logprob: -15.809123039245605
    8. '{return' → logprob: -17.93412208557129
    9. '_return' → logprob: -18.80912208557129
    10. 'eturn' → logprob: -19.18412208557129

Token 284: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04858816787600517
    2. ' return' → logprob: -3.048588275909424
    3. 'eturn' → logprob: -14.673587799072266
    4. ' ' → logprob: -15.423587799072266
    5. 'key' → logprob: -16.298587799072266
    6. 'value' → logprob: -17.923587799072266
    7. '(return' → logprob: -18.923587799072266
    8. ' key' → logprob: -19.423587799072266
    9. '  ' → logprob: -19.673587799072266
    10. 't' → logprob: -19.923587799072266

Token 285: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00033593899570405483
    2. 'return' → logprob: -8.000335693359375
    3. ' key' → logprob: -14.750335693359375
    4. 'Key' → logprob: -17.250335693359375
    5. '_key' → logprob: -17.625335693359375
    6. ' return' → logprob: -18.000335693359375
    7. 'code' → logprob: -18.875335693359375
    8. 'keye' → logprob: -20.250335693359375
    9. 'value' → logprob: -20.375335693359375
    10. 'ke' → logprob: -20.500335693359375

Token 286: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018746323883533478
    2. '<|end|>' → logprob: -4.643746376037598
    3. 'return' → logprob: -5.768746376037598
    4. 'else' → logprob: -6.518746376037598
    5. ' else' → logprob: -6.768746376037598
    6. '[' → logprob: -6.768746376037598
    7. ' return' → logprob: -7.268746376037598
    8. '[]' → logprob: -7.893746376037598
    9. '    
' → logprob: -8.643746376037598
    10. '    ' → logprob: -8.768746376037598

Token 287: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0659617185592651
    2. '<|end|>' → logprob: -1.1909617185592651
    3. '   ' → logprob: -1.4409617185592651
    4. 'else' → logprob: -2.5659618377685547
    5. ' return' → logprob: -4.065961837768555
    6. ' else' → logprob: -5.065961837768555
    7. 'def' → logprob: -5.440961837768555
    8. '
' → logprob: -5.815961837768555
    9. '```' → logprob: -6.440961837768555
    10. '	return' → logprob: -6.565961837768555

Token 288: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1667926013469696
    2. 'else' → logprob: -1.916792631149292
    3. '   ' → logprob: -5.291792392730713
    4. ' return' → logprob: -6.916792392730713
    5. 'raise' → logprob: -8.416792869567871
    6. ' else' → logprob: -9.166792869567871
    7. ':return' → logprob: -9.916792869567871
    8. '{return' → logprob: -10.041792869567871
    9. 'elif' → logprob: -10.416792869567871
    10. 'undefined' → logprob: -11.416792869567871

Token 289: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06734532862901688
    2. 'None' → logprob: -2.817345380783081
    3. ' last' → logprob: -5.317345142364502
    4. ' None' → logprob: -7.692345142364502
    5. 'none' → logprob: -14.31734561920166
    6. '[last' → logprob: -15.44234561920166
    7. '(last' → logprob: -15.69234561920166
    8. '	last' → logprob: -16.192344665527344
    9. ' ' → logprob: -16.817344665527344
    10. 'Last' → logprob: -17.442344665527344

Token 290: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -9.088346359931165e-07
    2. ' key' → logprob: -15.500000953674316
    3. 'ke' → logprob: -15.625000953674316
    4. 'k' → logprob: -15.625000953674316
    5. 'last' → logprob: -15.750000953674316
    6. '_key' → logprob: -16.375
    7. '[key' → logprob: -17.375
    8. 'keye' → logprob: -18.0
    9. 'keys' → logprob: -18.5
    10. 'Key' → logprob: -18.5

Token 291: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2822662591934204
    2. '#' → logprob: -1.6572662591934204
    3. '<|end|>' → logprob: -3.032266139984131
    4. '[' → logprob: -6.407266139984131
    5. 'heap' → logprob: -6.532266139984131
    6. '
' → logprob: -6.532266139984131
    7. '```' → logprob: -7.782266139984131
    8. ')' → logprob: -7.907266139984131
    9. '<|end|>' → logprob: -7.907266139984131
    10. '.' → logprob: -8.532266616821289

Token 292: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07928191125392914
    2. '#' → logprob: -2.704281806945801
    3. '<|end|>' → logprob: -5.329281806945801
    4. '[' → logprob: -6.204281806945801
    5. 'heap' → logprob: -6.954281806945801
    6. '[]' → logprob: -7.829281806945801
    7. ' def' → logprob: -8.2042818069458
    8. '```' → logprob: -8.4542818069458
    9. '<|end|>' → logprob: -8.9542818069458
    10. '
' → logprob: -9.7042818069458

Token 293: ' sys' (ID: 12228)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.004747198894619942
    2. 'heap' → logprob: -5.37974739074707
    3. ' sys' → logprob: -9.25474739074707
    4. ' bis' → logprob: -11.62974739074707
    5. ' collections' → logprob: -12.37974739074707
    6. ' itertools' → logprob: -12.62974739074707
    7. ' math' → logprob: -12.75474739074707
    8. ' random' → logprob: -12.87974739074707
    9. ' he' → logprob: -13.00474739074707
    10. ' ' → logprob: -13.25474739074707

Token 294: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35579347610473633
    2. 'def' → logprob: -1.7307934761047363
    3. 'input' → logprob: -3.1057934761047363
    4. 'data' → logprob: -3.2307934761047363
    5. 'n' → logprob: -4.105793476104736
    6. 'for' → logprob: -4.480793476104736
    7. 'import' → logprob: -5.730793476104736
    8. '

' → logprob: -6.230793476104736
    9. '\n' → logprob: -6.605793476104736
    10. 'max' → logprob: -6.855793476104736

Token 295: 'S' (ID: 50)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8078585863113403
    2. 'data' → logprob: -1.6828585863113403
    3. 'input' → logprob: -1.6828585863113403
    4. 'for' → logprob: -2.182858467102051
    5. 'n' → logprob: -2.807858467102051
    6. 'if' → logprob: -5.557858467102051
    7. 'import' → logprob: -6.432858467102051
    8. 'class' → logprob: -6.682858467102051
    9. 'lines' → logprob: -6.807858467102051
    10. 'N' → logprob: -7.182858467102051

Token 296: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5578502416610718
    2. 'ys' → logprob: -2.0578503608703613
    3. ' =' → logprob: -2.1828503608703613
    4. '=input' → logprob: -2.4328503608703613
    5. '=sys' → logprob: -2.9328503608703613
    6. 'YS' → logprob: -3.1828503608703613
    7. 'Y' → logprob: -6.057850360870361
    8. '=list' → logprob: -7.682850360870361
    9. '=y' → logprob: -7.682850360870361
    10. '=[]' → logprob: -8.057849884033203

Token 297: ' []

' (ID: 32833)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.081498883664608
    2. ' sys' → logprob: -3.081498861312866
    3. 'input' → logprob: -3.581498861312866
    4. 'list' → logprob: -5.831499099731445
    5. 'int' → logprob: -7.206499099731445
    6. ' input' → logprob: -7.331499099731445
    7. ' list' → logprob: -9.581499099731445
    8. '(sys' → logprob: -10.581499099731445
    9. 'str' → logprob: -10.956499099731445
    10. '[' → logprob: -10.956499099731445

Token 298: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017108354717493057
    2. 'n' → logprob: -4.64210844039917
    3. 'N' → logprob: -5.26710844039917
    4. 'Q' → logprob: -7.14210844039917
    5. 'input' → logprob: -7.39210844039917
    6. 'q' → logprob: -8.642107963562012
    7. ' for' → logprob: -8.767107963562012
    8. 'line' → logprob: -8.892107963562012
    9. 'sys' → logprob: -9.892107963562012
    10. 'import' → logprob: -10.267107963562012

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.633480429649353
    2. '=' → logprob: -0.758480429649353
    3. ',' → logprob: -7.383480548858643
    4. '=[]' → logprob: -8.758480072021484
    5. '_' → logprob: -10.258480072021484
    6. ' ' → logprob: -11.008480072021484
    7. ':' → logprob: -12.133480072021484
    8. '=int' → logprob: -12.258480072021484
    9. '=sys' → logprob: -12.258480072021484
    10. 'import' → logprob: -12.383480072021484

Token 300: ' []

' (ID: 32833)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05886927247047424
    2. '[]' → logprob: -3.0588693618774414
    3. ' ' → logprob: -4.808869361877441
    4. ' []' → logprob: -6.933869361877441
    5. 'sys' → logprob: -8.183869361877441
    6. '[' → logprob: -8.808869361877441
    7. '[]
' → logprob: -8.808869361877441
    8. '""' → logprob: -9.058869361877441
    9. 'int' → logprob: -9.558869361877441
    10. 'set' → logprob: -9.808869361877441

Token 301: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05743468552827835
    2. 'n' → logprob: -3.0574347972869873
    3. 'N' → logprob: -5.182434558868408
    4. '_' → logprob: -6.807434558868408
    5. 'Q' → logprob: -7.307434558868408
    6. 'input' → logprob: -7.557434558868408
    7. 'q' → logprob: -7.807434558868408
    8. ' for' → logprob: -8.057435035705566
    9. 'line' → logprob: -10.057435035705566
    10. 'lines' → logprob: -11.057435035705566

Token 302: ' x' (ID: 1215)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.2529054880142212
    2. '_' → logprob: -1.3779054880142212
    3. ' i' → logprob: -1.5029054880142212
    4. ' _' → logprob: -1.8779054880142212
    5. 'i' → logprob: -3.0029053688049316
    6. 'line' → logprob: -3.3779053688049316
    7. '_i' → logprob: -6.627905368804932
    8. ' l' → logprob: -7.002905368804932
    9. '_line' → logprob: -8.12790584564209
    10. 'l' → logprob: -8.50290584564209

Token 303: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05499805510044098
    2. 'in' → logprob: -2.9299981594085693
    3. ' ' → logprob: -9.679998397827148
    4. 's' → logprob: -11.179998397827148
    5. 'n' → logprob: -11.679998397827148
    6. 'import' → logprob: -12.179998397827148
    7. ',' → logprob: -12.304998397827148
    8. '_' → logprob: -12.929998397827148
    9. '  ' → logprob: -12.929998397827148
    10. 'ine' → logprob: -13.554998397827148

Token 304: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014510874636471272
    2. ' sys' → logprob: -4.3895111083984375
    3. 'map' → logprob: -6.6395111083984375
    4. 'range' → logprob: -7.3895111083984375
    5. ' map' → logprob: -10.014511108398438
    6. ' range' → logprob: -11.139511108398438
    7. 'iter' → logprob: -12.389511108398438
    8. 'list' → logprob: -12.889511108398438
    9. 'input' → logprob: -12.889511108398438
    10. '(sys' → logprob: -13.139511108398438

Token 305: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.0921942703134846e-05
    2. '.argv' → logprob: -12.25001049041748
    3. 'stdin' → logprob: -12.37501049041748
    4. '.' → logprob: -14.50001049041748
    5. '.std' → logprob: -14.50001049041748
    6. '.stdout' → logprob: -14.75001049041748
    7. '.stderr' → logprob: -16.250011444091797
    8. ' .' → logprob: -16.250011444091797
    9. '._' → logprob: -16.250011444091797
    10. 'import' → logprob: -16.625011444091797

Token 306: '.readlines' (ID: 92237)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003138497471809387
    2. ':' → logprob: -6.253138542175293
    3. '.' → logprob: -6.878138542175293
    4. ' in' → logprob: -9.378138542175293
    5. '.readlines' → logprob: -9.503138542175293
    6. ':
' → logprob: -12.128138542175293
    7. 'in' → logprob: -12.128138542175293
    8. ' readline' → logprob: -12.753138542175293
    9. ' .' → logprob: -12.878138542175293
    10. ' ' → logprob: -14.628138542175293

Token 307: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.506661833962426e-05
    2. '()' → logprob: -10.12508487701416
    3. ' ():' → logprob: -11.00008487701416
    4. '(' → logprob: -11.12508487701416
    5. '():
' → logprob: -11.25008487701416
    6. ':' → logprob: -16.125085830688477
    7. '(:' → logprob: -16.250085830688477
    8. '().' → logprob: -16.625085830688477
    9. '()>' → logprob: -17.375085830688477
    10. ' ()' → logprob: -17.625085830688477

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007496124133467674
    2. ' x' → logprob: -5.007496356964111
    3. '    
' → logprob: -8.632495880126953
    4. ' s' → logprob: -8.882495880126953
    5. '.strip' → logprob: -9.007495880126953
    6. '.rstrip' → logprob: -9.382495880126953
    7. 'x' → logprob: -9.507495880126953
    8. ' if' → logprob: -9.882495880126953
    9. ',' → logprob: -10.507495880126953
    10. ':' → logprob: -11.007495880126953

Token 309: ' if' (ID: 538)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20253509283065796
    2. '   ' → logprob: -1.9525351524353027
    3. 'x' → logprob: -3.4525351524353027
    4. ' q' → logprob: -6.327535152435303
    5. ' n' → logprob: -6.327535152435303
    6. ' s' → logprob: -7.077535152435303
    7. ' cmd' → logprob: -7.327535152435303
    8. ' v' → logprob: -7.452535152435303
    9. ' c' → logprob: -7.827535152435303
    10. 'c' → logprob: -7.827535152435303

Token 310: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14441946148872375
    2. 'x' → logprob: -2.0194194316864014
    3. ' not' → logprob: -6.6444196701049805
    4. ''' → logprob: -8.39441967010498
    5. ' ' → logprob: -9.01941967010498
    6. ' '' → logprob: -10.01941967010498
    7. '"' → logprob: -11.51941967010498
    8. ''x' → logprob: -11.51941967010498
    9. 'not' → logprob: -11.89441967010498
    10. ' "' → logprob: -12.39441967010498

Token 311: '[' (ID: 58)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.8468579649925232
    2. '.strip' → logprob: -1.096858024597168
    3. '.' → logprob: -1.471858024597168
    4. '.rstrip' → logprob: -6.346858024597168
    5. '[' → logprob: -6.721858024597168
    6. ' ==' → logprob: -6.846858024597168
    7. ' .' → logprob: -6.971858024597168
    8. '==' → logprob: -7.096858024597168
    9. 'startswith' → logprob: -7.221858024597168
    10. '.split' → logprob: -8.221858024597168

Token 312: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001756456564180553
    2. ':' → logprob: -6.50175666809082
    3. ' ' → logprob: -8.87675666809082
    4. ' :' → logprob: -10.00175666809082
    5. '1' → logprob: -10.37675666809082
    6. ':-' → logprob: -11.25175666809082
    7. '2' → logprob: -11.37675666809082
    8. ':]' → logprob: -13.12675666809082
    9. '-' → logprob: -13.25175666809082
    10. '
' → logprob: -13.25175666809082

Token 313: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0581530332565308
    2. '==' → logprob: -1.1831530332565308
    3. ' ==' → logprob: -1.5581530332565308
    4. '=' → logprob: -3.0581531524658203
    5. ']==' → logprob: -3.0581531524658203
    6. ''' → logprob: -3.5581531524658203
    7. ' ' → logprob: -5.18315315246582
    8. '=='' → logprob: -6.43315315246582
    9. ' a' → logprob: -6.68315315246582
    10. ']=='' → logprob: -6.68315315246582

Token 314: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5540181994438171
    2. ' ==' → logprob: -0.9290181994438171
    3. '=' → logprob: -3.804018259048462
    4. '=='' → logprob: -5.179018020629883
    5. ' ' → logprob: -6.929018020629883
    6. 'is' → logprob: -8.179018020629883
    7. ' =' → logprob: -8.304018020629883
    8. '!=' → logprob: -8.554018020629883
    9. ']==' → logprob: -8.929018020629883
    10. '[' → logprob: -8.929018020629883

Token 315: ' '' (ID: 461)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.5714294910430908
    2. ''' → logprob: -1.0714294910430908
    3. ''I' → logprob: -3.321429491043091
    4. ''A' → logprob: -3.821429491043091
    5. ''-' → logprob: -4.321429252624512
    6. ''i' → logprob: -4.446429252624512
    7. '"+"' → logprob: -5.946429252624512
    8. ''U' → logprob: -6.071429252624512
    9. ''O' → logprob: -6.571429252624512
    10. '"+' → logprob: -7.446429252624512

Token 316: 'i' (ID: 72)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2683059275150299
    2. '+'' → logprob: -2.393306016921997
    3. ''' → logprob: -2.518306016921997
    4. 'I' → logprob: -3.268306016921997
    5. ''+' → logprob: -5.143305778503418
    6. '1' → logprob: -5.143305778503418
    7. 'a' → logprob: -5.643305778503418
    8. '-' → logprob: -6.268305778503418
    9. '+')' → logprob: -6.268305778503418
    10. 'i' → logprob: -6.768305778503418

Token 317: '':
' (ID: 7669)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14393718540668488
    2. '':' → logprob: -2.393937110900879
    3. ''' → logprob: -3.768937110900879
    4. ' '' → logprob: -4.393937110900879
    5. ' ':' → logprob: -5.268937110900879
    6. ''n' → logprob: -7.143937110900879
    7. 'm' → logprob: -7.393937110900879
    8. '':
' → logprob: -7.518937110900879
    9. '']:' → logprob: -10.143937110900879
    10. ''):' → logprob: -10.268937110900879

Token 318: '       ' (ID: 309)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.029451847076416
    2. ':' → logprob: -1.779451847076416
    3. '   ' → logprob: -1.779451847076416
    4. 'n' → logprob: -2.154451847076416
    5. ':
' → logprob: -2.904451847076416
    6. ' key' → logprob: -3.779451847076416
    7. '       ' → logprob: -3.904451847076416
    8. ' s' → logprob: -4.154451847076416
    9. ' ' → logprob: -4.154451847076416
    10. 't' → logprob: -4.279451847076416

Token 319: ' k' (ID: 372)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.9458961486816406
    2. ' key' → logprob: -1.0708961486816406
    3. ' _,' → logprob: -2.4458961486816406
    4. ' ,' → logprob: -3.1958961486816406
    5. ' val' → logprob: -3.3208961486816406
    6. ',' → logprob: -3.3208961486816406
    7. ' n' → logprob: -3.9458961486816406
    8. ' k' → logprob: -4.320896148681641
    9. 'key' → logprob: -4.570896148681641
    10. ' 
' → logprob: -4.945896148681641

Token 320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23121100664138794
    2. 'n' → logprob: -2.481210947036743
    3. 'm' → logprob: -2.731210947036743
    4. 'nt' → logprob: -3.356210947036743
    5. '=' → logprob: -4.856211185455322
    6. 'ns' → logprob: -4.856211185455322
    7. 'mp' → logprob: -5.481211185455322
    8. ' ' → logprob: -7.481211185455322
    9. '=int' → logprob: -7.606211185455322
    10. 's' → logprob: -7.731211185455322

Token 321: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2522701323032379
    2. ' int' → logprob: -1.5022701025009155
    3. 'nt' → logprob: -8.002269744873047
    4. 'x' → logprob: -13.127269744873047
    5. ' x' → logprob: -13.627269744873047
    6. '   ' → logprob: -14.002269744873047
    7. '(int' → logprob: -14.502269744873047
    8. '=int' → logprob: -14.627269744873047
    9. '[int' → logprob: -14.877269744873047
    10. ' nt' → logprob: -15.377269744873047

Token 322: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.004088609013706446
    2. '(' → logprob: -5.504088401794434
    3. 'x' → logprob: -11.754088401794434
    4. ' x' → logprob: -13.629088401794434
    5. ' (' → logprob: -13.879088401794434
    6. '(
' → logprob: -16.50408935546875
    7. '((' → logprob: -17.87908935546875
    8. '(i' → logprob: -18.75408935546875
    9. '(

' → logprob: -18.75408935546875
    10. ' ' → logprob: -19.12908935546875

Token 323: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009021054953336716
    2. '(' → logprob: -5.509021282196045
    3. '.split' → logprob: -5.884021282196045
    4. 'x' → logprob: -7.259021282196045
    5. '.strip' → logprob: -7.759021282196045
    6. '[x' → logprob: -7.884021282196045
    7. '(x' → logprob: -7.884021282196045
    8. '()[' → logprob: -9.259020805358887
    9. '().' → logprob: -9.759020805358887
    10. 'split' → logprob: -10.259020805358887

Token 324: '7' (ID: 22)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.4741671085357666
    2. '7' → logprob: -1.0991671085357666
    3. '5' → logprob: -3.8491671085357666
    4. '2' → logprob: -4.3491668701171875
    5. '10' → logprob: -5.5991668701171875
    6. ' ' → logprob: -6.0991668701171875
    7. '8' → logprob: -6.9741668701171875
    8. '4' → logprob: -7.0991668701171875
    9. '3' → logprob: -7.0991668701171875
    10. '1' → logprob: -7.5991668701171875

Token 325: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11932770162820816
    2. ':-' → logprob: -2.7443277835845947
    3. ':].' → logprob: -3.2443277835845947
    4. ':])
' → logprob: -4.869327545166016
    5. '])' → logprob: -6.619327545166016
    6. ':)' → logprob: -9.369327545166016
    7. ' :' → logprob: -10.119327545166016
    8. ':]' → logprob: -10.994327545166016
    9. ')' → logprob: -11.369327545166016
    10. ':end' → logprob: -12.119327545166016

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011802274966612458
    2. 'heap' → logprob: -7.376180171966553
    3. '   ' → logprob: -8.626180648803711
    4. '<|end|>' → logprob: -8.626180648803711
    5. ' heap' → logprob: -9.126180648803711
    6. ' ' → logprob: -10.876180648803711
    7. ')' → logprob: -11.126180648803711
    8. '
' → logprob: -11.251180648803711
    9. '(heap' → logprob: -11.751180648803711
    10. ',' → logprob: -11.751180648803711

Token 327: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.2527080476284027
    2. ' heap' → logprob: -1.502708077430725
    3. '       ' → logprob: -7.5027079582214355
    4. '   ' → logprob: -9.252708435058594
    5. ' S' → logprob: -9.627708435058594
    6. 'S' → logprob: -10.877708435058594
    7. '(heap' → logprob: -11.377708435058594
    8. '```' → logprob: -11.502708435058594
    9. '.heap' → logprob: -11.877708435058594
    10. '
' → logprob: -12.627708435058594

Token 328: 'Push' (ID: 25634)
  Prédit: 'Push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Push' → logprob: -1.9361264946837764e-07
    2. 'Pop' → logprob: -16.875
    3. 'P' → logprob: -18.0
    4. 'push' → logprob: -18.0
    5. '_push' → logprob: -18.125
    6. '.push' → logprob: -18.25
    7. '.Push' → logprob: -18.625
    8. ' Push' → logprob: -19.5
    9. 'Insert' → logprob: -19.875
    10. 'Put' → logprob: -20.125

Token 329: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.981667537620524e-06
    2. 'max' → logprob: -13.500001907348633
    3. '(max' → logprob: -14.625001907348633
    4. '_MAX' → logprob: -17.375001907348633
    5. '_min' → logprob: -17.500001907348633
    6. '(S' → logprob: -18.000001907348633
    7. '```' → logprob: -18.250001907348633
    8. '(_' → logprob: -19.125001907348633
    9. 'Max' → logprob: -19.375001907348633
    10. '(' → logprob: -19.750001907348633

Token 330: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.0015149809187278152
    2. '_max' → logprob: -6.501514911651611
    3. '(' → logprob: -11.37651538848877
    4. '(max' → logprob: -14.00151538848877
    5. 'max' → logprob: -15.12651538848877
    6. ' (' → logprob: -16.626514434814453
    7. '_MAX' → logprob: -17.126514434814453
    8. '(s' → logprob: -17.626514434814453
    9. '(Max' → logprob: -17.626514434814453
    10. '_S' → logprob: -18.376514434814453

Token 331: ',' (ID: 11)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.00014036978245712817
    2. ',k' → logprob: -9.125140190124512
    3. ',' → logprob: -10.500140190124512
    4. '(' → logprob: -12.750140190124512
    5. '(S' → logprob: -14.625140190124512
    6. ' (' → logprob: -15.375140190124512
    7. ')' → logprob: -15.500140190124512
    8. ' ,' → logprob: -15.875140190124512
    9. ')(' → logprob: -17.125141143798828
    10. '(s' → logprob: -18.000141143798828

Token 332: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03804183006286621
    2. ' k' → logprob: -3.288041830062866
    3. '	k' → logprob: -15.538042068481445
    4. ')' → logprob: -15.913042068481445
    5. '-k' → logprob: -17.663042068481445
    6. '
' → logprob: -17.788042068481445
    7. '(k' → logprob: -17.913042068481445
    8. '{k' → logprob: -18.038042068481445
    9. '+k' → logprob: -18.288042068481445
    10. '```' → logprob: -18.413042068481445

Token 333: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02940514124929905
    2. ')
' → logprob: -3.654405117034912
    3. '   ' → logprob: -5.779405117034912
    4. ' )' → logprob: -12.90440559387207
    5. ')

' → logprob: -13.15440559387207
    6. '<|end|>' → logprob: -13.52940559387207
    7. ')
' → logprob: -13.65440559387207
    8. '       ' → logprob: -14.52940559387207
    9. ')return' → logprob: -14.90440559387207
    10. ')\' → logprob: -15.15440559387207

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011559356935322285
    2. 'elif' → logprob: -7.376155853271484
    3. '       ' → logprob: -7.626155853271484
    4. '
' → logprob: -11.126155853271484
    5. ' elif' → logprob: -11.626155853271484
    6. ' ' → logprob: -11.751155853271484
    7. 'ans' → logprob: -12.501155853271484
    8. 'else' → logprob: -13.001155853271484
    9. '  ' → logprob: -13.751155853271484
    10. '```' → logprob: -14.251155853271484

Token 335: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.02385595813393593
    2. 'else' → logprob: -4.398856163024902
    3. ' elif' → logprob: -4.523856163024902
    4. ' else' → logprob: -8.023856163024902
    5. '   ' → logprob: -9.773856163024902
    6. 'if' → logprob: -10.148856163024902
    7. ' ' → logprob: -12.648856163024902
    8. '	elif' → logprob: -12.773856163024902
    9. '```' → logprob: -13.398856163024902
    10. ' if' → logprob: -13.523856163024902

Token 336: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3488633334636688
    2. 'x' → logprob: -1.2238633632659912
    3. 'len' → logprob: -8.72386360168457
    4. ' S' → logprob: -9.59886360168457
    5. ' len' → logprob: -9.72386360168457
    6. ' not' → logprob: -9.97386360168457
    7. 'S' → logprob: -9.97386360168457
    8. ' ' → logprob: -11.09886360168457
    9. 'not' → logprob: -11.34886360168457
    10. 'k' → logprob: -13.22386360168457

Token 337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003619217313826084
    2. ' ==' → logprob: -8.500362396240234
    3. '==' → logprob: -9.375362396240234
    4. '.startswith' → logprob: -10.875362396240234
    5. ' [' → logprob: -11.250362396240234
    6. '[:' → logprob: -11.625362396240234
    7. '=' → logprob: -11.875362396240234
    8. ' =' → logprob: -12.375362396240234
    9. '=='' → logprob: -12.500362396240234
    10. '['' → logprob: -12.625362396240234

Token 338: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3523663878440857
    2. '0' → logprob: -1.3523664474487305
    3. ''s' → logprob: -3.8523664474487305
    4. '[' → logprob: -5.7273664474487305
    5. ' ' → logprob: -5.7273664474487305
    6. ''x' → logprob: -5.9773664474487305
    7. ''[' → logprob: -6.7273664474487305
    8. ''l' → logprob: -6.8523664474487305
    9. ''i' → logprob: -7.2273664474487305
    10. '']' → logprob: -7.2273664474487305

Token 339: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0098981857299805
    2. ' ==' → logprob: -1.0098981857299805
    3. '[' → logprob: -1.5098981857299805
    4. '=' → logprob: -4.3848981857299805
    5. ''' → logprob: -4.5098981857299805
    6. 'f' → logprob: -4.8848981857299805
    7. ']' → logprob: -5.1348981857299805
    8. '=='' → logprob: -5.5098981857299805
    9. ' ' → logprob: -5.6348981857299805
    10. 'u' → logprob: -6.8848981857299805

Token 340: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11060812324285507
    2. '==' → logprob: -2.6106081008911133
    3. ''' → logprob: -4.235608100891113
    4. ' ' → logprob: -5.360608100891113
    5. '=='' → logprob: -5.485608100891113
    6. 'u' → logprob: -6.360608100891113
    7. '=' → logprob: -6.735608100891113
    8. '[' → logprob: -6.860608100891113
    9. ' =='' → logprob: -7.360608100891113
    10. ' '' → logprob: -7.485608100891113

Token 341: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.46972787380218506
    2. ''i' → logprob: -2.3447279930114746
    3. ''o' → logprob: -2.5947279930114746
    4. ' '' → logprob: -2.8447279930114746
    5. ''d' → logprob: -3.5947279930114746
    6. ''a' → logprob: -3.8447279930114746
    7. ''l' → logprob: -4.094727993011475
    8. ''x' → logprob: -4.094727993011475
    9. ''m' → logprob: -4.344727993011475
    10. ''u' → logprob: -4.594727993011475

Token 342: 'x' (ID: 87)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8295087814331055
    2. 'o' → logprob: -1.3295087814331055
    3. 'x' → logprob: -2.2045087814331055
    4. 'u' → logprob: -2.8295087814331055
    5. ' '' → logprob: -3.4545087814331055
    6. ''' → logprob: -3.5795087814331055
    7. 'p' → logprob: -3.7045087814331055
    8. 'a' → logprob: -4.0795087814331055
    9. ''):
' → logprob: -5.0795087814331055
    10. 'd' → logprob: -5.4545087814331055

Token 343: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.7043157815933228
    2. ''' → logprob: -1.4543157815933228
    3. 'e' → logprob: -2.204315662384033
    4. ''):
' → logprob: -2.329315662384033
    5. '':' → logprob: -3.204315662384033
    6. ':' → logprob: -5.329315662384033
    7. '':

' → logprob: -5.704315662384033
    8. 'p' → logprob: -5.829315662384033
    9. '')' → logprob: -6.204315662384033
    10. '']:
' → logprob: -6.704315662384033

Token 344: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29149922728538513
    2. ' if' → logprob: -2.166499137878418
    3. ':' → logprob: -2.791499137878418
    4. ':
' → logprob: -3.791499137878418
    5. '
' → logprob: -4.041499137878418
    6. 'if' → logprob: -4.416499137878418
    7. ' ans' → logprob: -4.791499137878418
    8. ' =' → logprob: -5.291499137878418
    9. '=' → logprob: -5.541499137878418
    10. ' ' → logprob: -6.916499137878418

Token 345: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.22085312008857727
    2. 'if' → logprob: -1.7208530902862549
    3. ' ans' → logprob: -4.720853328704834
    4. ' if' → logprob: -5.470853328704834
    5. '   ' → logprob: -5.720853328704834
    6. 'v' → logprob: -6.845853328704834
    7. 'a' → logprob: -7.220853328704834
    8. '
' → logprob: -8.220852851867676
    9. 'k' → logprob: -8.220852851867676
    10. '	ans' → logprob: -8.595852851867676

Token 346: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0028210394084453583
    2. '.' → logprob: -5.87782096862793
    3. '.ap' → logprob: -11.62782096862793
    4. '.app' → logprob: -12.25282096862793
    5. '.extend' → logprob: -13.75282096862793
    6. ' .' → logprob: -14.00282096862793
    7. 'append' → logprob: -15.12782096862793
    8. '.a' → logprob: -16.00282096862793
    9. 'value' → logprob: -16.75282096862793
    10. 'key' → logprob: -17.12782096862793

Token 347: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.25249025225639343
    2. '(str' → logprob: -1.5024902820587158
    3. '(' → logprob: -8.627490043640137
    4. 'heap' → logprob: -8.752490043640137
    5. 'str' → logprob: -9.252490043640137
    6. '('' → logprob: -9.377490043640137
    7. '(f' → logprob: -11.252490043640137
    8. '(len' → logprob: -12.127490043640137
    9. '(hex' → logprob: -12.252490043640137
    10. '((' → logprob: -12.502490043640137

Token 348: 'Pop' (ID: 10640)
  Prédit: 'Pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pop' → logprob: -1.9361264946837764e-07
    2. 'pop' → logprob: -16.0
    3. '[' → logprob: -17.0
    4. '.pop' → logprob: -17.875
    5. '_pop' → logprob: -17.875
    6. ')' → logprob: -19.75
    7. ' Pop' → logprob: -20.0
    8. 'Max' → logprob: -20.375
    9. '
' → logprob: -21.125
    10. '.Pop' → logprob: -21.25

Token 349: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -9.088346359931165e-07
    2. 'max' → logprob: -14.125000953674316
    3. '(S' → logprob: -16.25
    4. '_min' → logprob: -18.5
    5. '(max' → logprob: -18.875
    6. ')_' → logprob: -18.875
    7. '```' → logprob: -19.5
    8. '_' → logprob: -19.875
    9. '_MAX' → logprob: -20.625
    10. '_m' → logprob: -20.75

Token 350: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -5.5577775128767826e-06
    2. '_max' → logprob: -12.875005722045898
    3. '(' → logprob: -13.250005722045898
    4. ')' → logprob: -14.125005722045898
    5. '(max' → logprob: -15.625005722045898
    6. 'max' → logprob: -16.0000057220459
    7. ')(' → logprob: -16.6250057220459
    8. ' (' → logprob: -17.1250057220459
    9. 'Max' → logprob: -19.7500057220459
    10. '(
' → logprob: -20.1250057220459

Token 351: '))
' (ID: 2210)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0015742563409730792
    2. '()' → logprob: -7.0015740394592285
    3. '())
' → logprob: -7.5015740394592285
    4. '()))' → logprob: -9.376574516296387
    5. '(S' → logprob: -11.626574516296387
    6. ' ())' → logprob: -12.001574516296387
    7. ')' → logprob: -12.126574516296387
    8. '())

' → logprob: -12.876574516296387
    9. '())
' → logprob: -13.751574516296387
    10. '()))
' → logprob: -14.251574516296387

Token 352: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.34026700258255005
    2. 'print' → logprob: -1.3402669429779053
    3. 'else' → logprob: -3.8402669429779053
    4. ' elif' → logprob: -5.590267181396484
    5. '   ' → logprob: -7.340267181396484
    6. 'for' → logprob: -7.840267181396484
    7. ' else' → logprob: -8.215267181396484
    8. ' print' → logprob: -9.465267181396484
    9. '<|end|>' → logprob: -11.590267181396484
    10. '	elif' → logprob: -11.840267181396484

Token 353: ' else' (ID: 1203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.290189266204834
    2. 'elif' → logprob: -1.415189266204834
    3. 'else' (adapté à ' else') → logprob: -4.790189266204834
    4. ' elif' → logprob: -7.665189266204834
    5. 'for' → logprob: -9.290189743041992
    6. ' else' → logprob: -10.165189743041992
    7. ' print' → logprob: -10.165189743041992
    8. '   ' → logprob: -10.665189743041992
    9. '    
' → logprob: -12.290189743041992
    10. ' 
' → logprob: -13.165189743041992

Token 354: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038221992552280426
    2. ':
' → logprob: -3.288222074508667
    3. ' :' → logprob: -9.663222312927246
    4. 'if' → logprob: -9.663222312927246
    5. ' if' → logprob: -10.538222312927246
    6. ' :
' → logprob: -10.913222312927246
    7. '   ' → logprob: -12.163222312927246
    8. ':

' → logprob: -13.913222312927246
    9. '=' → logprob: -13.913222312927246
    10. ':
' → logprob: -14.163222312927246

Token 355: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13088665902614594
    2. ' ans' → logprob: -2.7558865547180176
    3. 'ans' → logprob: -3.8808865547180176
    4. ' k' → logprob: -4.505886554718018
    5. ' pass' → logprob: -4.505886554718018
    6. 'k' → logprob: -5.005886554718018
    7. 'pass' → logprob: -5.255886554718018
    8. '       ' → logprob: -6.630886554718018
    9. '	ans' → logprob: -7.255886554718018
    10. 's' → logprob: -7.880886554718018

Token 356: ' pass' (ID: 1853)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15896400809288025
    2. ' k' → logprob: -2.283963918685913
    3. 'ans' → logprob: -4.033964157104492
    4. '   ' → logprob: -4.033964157104492
    5. ' ans' → logprob: -5.033964157104492
    6. 'print' → logprob: -6.533964157104492
    7. 'if' → logprob: -7.658964157104492
    8. 'a' → logprob: -8.283964157104492
    9. ' print' → logprob: -8.783964157104492
    10. ' if' → logprob: -8.783964157104492

Token 357: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1616830676794052
    2. 'for' → logprob: -1.9116830825805664
    3. '<|end|>' → logprob: -6.786683082580566
    4. '
' → logprob: -8.536683082580566
    5. '   ' → logprob: -10.536683082580566
    6. ' for' → logprob: -11.161683082580566
    7. 'import' → logprob: -11.286683082580566
    8. '#' → logprob: -11.286683082580566
    9. 'while' → logprob: -11.536683082580566
    10. 'if' → logprob: -11.536683082580566

Token 358: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008616226725280285
    2. 'for' → logprob: -4.7586164474487305
    3. '
' → logprob: -14.50861644744873
    4. 'import' → logprob: -14.88361644744873
    5. '```' → logprob: -14.88361644744873
    6. '#print' → logprob: -15.50861644744873
    7. ' print' → logprob: -15.63361644744873
    8. ' for' → logprob: -16.133615493774414
    9. '\n' → logprob: -18.758615493774414
    10. '#' → logprob: -19.133615493774414

Token 359: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9542680978775024
    2. '(ans' → logprob: -1.3292680978775024
    3. '('' → logprob: -1.4542680978775024
    4. '(*' → logprob: -2.329267978668213
    5. '(len' → logprob: -5.079267978668213
    6. '("' → logprob: -5.204267978668213
    7. '("("' → logprob: -5.954267978668213
    8. '(tuple' → logprob: -6.079267978668213
    9. '(sum' → logprob: -6.329267978668213
    10. '()' → logprob: -7.954267978668213

Token 360: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -5.512236498361744e-07
    2. ' ans' → logprob: -14.750000953674316
    3. '(ans' → logprob: -17.0
    4. '	ans' → logprob: -21.875
    5. 'answer' → logprob: -22.125
    6. 'ann' → logprob: -23.5
    7. 'ANS' → logprob: -23.875
    8. '[' → logprob: -24.375
    9. '   ' → logprob: -24.625
    10. 'anst' → logprob: -24.875

Token 361: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.0
    3. ')
' → logprob: -16.625
    4. ' )' → logprob: -17.0
    5. ')`' → logprob: -17.375
    6. '()' → logprob: -17.875
    7. '(' → logprob: -18.125
    8. '())' → logprob: -18.25
    9. ')#' → logprob: -18.625
    10. ',' → logprob: -18.75

Token 362: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.013662228360772133
    2. ')' → logprob: -4.513662338256836
    3. ' sep' → logprob: -6.388662338256836
    4. 'end' → logprob: -7.138662338256836
    5. 'se' → logprob: -9.763662338256836
    6. 'separator' → logprob: -10.138662338256836
    7. ''\' → logprob: -10.638662338256836
    8. ' )' → logprob: -12.888662338256836
    9. ' ' → logprob: -13.263662338256836
    10. '"\' → logprob: -13.388662338256836

Token 363: ' =' (ID: 314)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '='' → logprob: -0.4024352431297302
    2. '='\' → logprob: -1.152435302734375
    3. '="\' → logprob: -5.152435302734375
    4. '="' → logprob: -5.277435302734375
    5. '=' → logprob: -5.402435302734375
    6. '=\' → logprob: -10.527435302734375
    7. ''' → logprob: -11.652435302734375
    8. '=',' → logprob: -12.277435302734375
    9. ''\' → logprob: -13.277435302734375
    10. '"' → logprob: -13.277435302734375

Token 364: ' '\' (ID: 10855)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.049020830541849136
    2. '"\' → logprob: -3.049020767211914
    3. ''
' → logprob: -8.299020767211914
    4. ''' → logprob: -9.299020767211914
    5. '\n' → logprob: -9.799020767211914
    6. '"
' → logprob: -11.299020767211914
    7. '"' → logprob: -11.299020767211914
    8. '
' → logprob: -12.299020767211914
    9. '"""
' → logprob: -12.924020767211914
    10. '`
' → logprob: -13.049020767211914

Token 365: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03400549665093422
    2. 'n' → logprob: -3.4090054035186768
    3. '
' → logprob: -8.159005165100098
    4. '')' → logprob: -10.409005165100098
    5. ''\' → logprob: -11.034005165100098
    6. ' ' → logprob: -11.909005165100098
    7. ''' → logprob: -11.909005165100098
    8. ')' → logprob: -12.409005165100098
    9. '\' → logprob: -12.909005165100098
    10. 'newline' → logprob: -13.284005165100098

Token 366: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132672905921936
    2. '')' → logprob: -1.3132672309875488
    3. '")' → logprob: -12.563267707824707
    4. '`)' → logprob: -14.188267707824707
    5. '))' → logprob: -14.813267707824707
    6. ' )' → logprob: -15.563267707824707
    7. ')
' → logprob: -15.563267707824707
    8. ')'' → logprob: -15.938267707824707
    9. '')
' → logprob: -16.06326675415039
    10. '’)' → logprob: -16.06326675415039


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 364
Tokens correctement prédits (1ère position, stricte): 166
Tokens correctement prédits (1ère position, avec adaptation): 186
Tokens correctement prédits (top 10): 316
Précision stricte (1ère position): 45.60%
Précision adaptée (1ère position): 51.10%
Précision (top 10): 86.81%
================================================================================
