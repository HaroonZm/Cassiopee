================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """ MAIN """
    DAT = []
    num = int(input())
    for i in range(num):
        x, y = list(map(int,input().split()))
        DAT.append(x)
    DAT.append(y)
    num1 = num + 1
    TBL = [[0] * num1 for i in range(num1)]

    for i in range(0, num1):
        for row in range(num-i):
            col = row + i + 1
            for j in range(row+1,col):
                x = DAT[row] * DAT[j] * DAT[col] + TBL[row][j] + TBL[j][col]
                if TBL[row][col] < 1 or TBL[row][col] > x:
                    TBL[row][col] = x

    print("{}".format(TBL[row][col]))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27454787492752075
    2. '\n' → logprob: -1.774547815322876
    3. '   ' → logprob: -3.524547815322876
    4. '(' → logprob: -4.399548053741455
    5. ' 
' → logprob: -5.149548053741455
    6. '    
' → logprob: -5.274548053741455
    7. ' ' → logprob: -5.524548053741455
    8. ''' → logprob: -5.649548053741455
    9. '```' → logprob: -6.274548053741455
    10. '    ' → logprob: -6.399548053741455

Token 4: ' """' (ID: 9280)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.630554735660553
    2. '   ' → logprob: -1.6305546760559082
    3. 'pass' → logprob: -1.6305546760559082
    4. 'return' → logprob: -3.255554676055908
    5. '    ' → logprob: -5.005554676055908
    6. '\' → logprob: -5.005554676055908
    7. ' pass' → logprob: -5.130554676055908
    8. '```' → logprob: -5.630554676055908
    9. 'a' → logprob: -6.130554676055908
    10. '\n' → logprob: -6.130554676055908

Token 5: ' MAIN' (ID: 74554)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4217335283756256
    2. 'print' → logprob: -2.1717336177825928
    3. '   ' → logprob: -2.7967336177825928
    4. '"""' → logprob: -2.9217336177825928
    5. '#' → logprob: -3.4217336177825928
    6. ' pass' → logprob: -4.796733379364014
    7. 'pass' → logprob: -5.046733379364014
    8. 'return' → logprob: -5.296733379364014
    9. '\' → logprob: -5.296733379364014
    10. 'Pass' → logprob: -5.421733379364014

Token 6: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.38168865442276
    2. '```' → logprob: -1.8816885948181152
    3. '"""
' → logprob: -2.8816885948181152
    4. '   ' → logprob: -3.2566885948181152
    5. ')' → logprob: -4.131688594818115
    6. '\n' → logprob: -4.256688594818115
    7. '
' → logprob: -4.506688594818115
    8. ' """
' → logprob: -4.631688594818115
    9. ' """' → logprob: -5.131688594818115
    10. '()' → logprob: -6.006688594818115

Token 7: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.14191371202468872
    2. '
' → logprob: -2.766913652420044
    3. '    
' → logprob: -3.141913652420044
    4. '   ' → logprob: -4.141913890838623
    5. '\' → logprob: -5.516913890838623
    6. ' 
' → logprob: -6.016913890838623
    7. '```' → logprob: -7.391913890838623
    8. '    ' → logprob: -8.016913414001465
    9. ' pass' → logprob: -8.016913414001465
    10. 'return' → logprob: -8.141913414001465

Token 8: ' DAT' (ID: 82252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6679455041885376
    2. '\n' → logprob: -0.9179455041885376
    3. '\' → logprob: -3.417945384979248
    4. '    
' → logprob: -3.542945384979248
    5. '    ' → logprob: -3.917945384979248
    6. '\r' → logprob: -6.542945384979248
    7. ' ' → logprob: -6.917945384979248
    8. '       ' → logprob: -7.417945384979248
    9. '
' → logprob: -7.667945384979248
    10. 'n' → logprob: -7.917945384979248

Token 9: ' =' (ID: 314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00025442568585276604
    2. ' A' → logprob: -9.25025463104248
    3. 'ADATA' → logprob: -10.25025463104248
    4. 'AS' → logprob: -10.37525463104248
    5. '_A' → logprob: -10.37525463104248
    6. 'ASE' → logprob: -11.12525463104248
    7. 'AP' → logprob: -11.62525463104248
    8. '_' → logprob: -11.75025463104248
    9. 'ATYPE' → logprob: -12.37525463104248
    10. '	A' → logprob: -12.75025463104248

Token 10: ' []
' (ID: 8911)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.2187248170375824
    2. ' []' → logprob: -2.3437247276306152
    3. '{}' → logprob: -3.0937247276306152
    4. ' [' → logprob: -3.8437247276306152
    5. ' "' → logprob: -4.593724727630615
    6. ' ' → logprob: -5.093724727630615
    7. ' {' → logprob: -5.718724727630615
    8. ' None' → logprob: -6.093724727630615
    9. '[]' → logprob: -6.343724727630615
    10. ' ""' → logprob: -6.468724727630615

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17699351906776428
    2. '[' → logprob: -2.8019936084747314
    3. '    
' → logprob: -3.5519936084747314
    4. '.' → logprob: -3.8019936084747314
    5. '\' → logprob: -4.426993370056152
    6. ')' → logprob: -4.426993370056152
    7. '(' → logprob: -4.801993370056152
    8. 'def' → logprob: -5.551993370056152
    9. ' ' → logprob: -6.301993370056152
    10. '    ' → logprob: -6.301993370056152

Token 12: ' num' (ID: 2269)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0535830594599247
    2. ' ' → logprob: -4.053583145141602
    3. '[' → logprob: -4.553583145141602
    4. '    ' → logprob: -4.928583145141602
    5. 'D' → logprob: -5.553583145141602
    6. 'd' → logprob: -6.178583145141602
    7. 'for' → logprob: -6.303583145141602
    8. '    
' → logprob: -6.428583145141602
    9. '  ' → logprob: -6.553583145141602
    10. ')' → logprob: -6.928583145141602

Token 13: ' =' (ID: 314)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.5093857049942017
    2. 's' → logprob: -1.6343857049942017
    3. '_' → logprob: -1.8843857049942017
    4. ' =' → logprob: -3.134385585784912
    5. '=' → logprob: -6.134385585784912
    6. ' ' → logprob: -6.884385585784912
    7. '   ' → logprob: -7.009385585784912
    8. '_items' → logprob: -7.259385585784912
    9. '_tokens' → logprob: -7.384385585784912
    10. '    ' → logprob: -7.509385585784912

Token 14: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03985157236456871
    2. ' int' → logprob: -3.914851665496826
    3. '0' → logprob: -4.039851665496826
    4. 'int' → logprob: -7.039851665496826
    5. '10' → logprob: -8.664851188659668
    6. ' input' → logprob: -9.039851188659668
    7. '1' → logprob: -9.289851188659668
    8. ' []' → logprob: -9.914851188659668
    9. '20' → logprob: -10.164851188659668
    10. '100' → logprob: -10.289851188659668

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026560021564364433
    2. '(input' → logprob: -3.651560068130493
    3. '('' → logprob: -8.401559829711914
    4. 'input' → logprob: -10.901559829711914
    5. '("' → logprob: -12.026559829711914
    6. '(
' → logprob: -13.026559829711914
    7. '()' → logprob: -13.026559829711914
    8. ' (' → logprob: -13.776559829711914
    9. ')' → logprob: -14.276559829711914
    10. '(int' → logprob: -14.526559829711914

Token 16: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0857778862118721
    2. '()' → logprob: -2.585777997970581
    3. '('' → logprob: -5.460777759552002
    4. '("("' → logprob: -6.335777759552002
    5. '())' → logprob: -8.08577823638916
    6. ')' → logprob: -9.08577823638916
    7. '("")' → logprob: -9.33577823638916
    8. '("' → logprob: -9.46077823638916
    9. '(""))' → logprob: -9.71077823638916
    10. '(()' → logprob: -9.83577823638916

Token 17: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36850786209106445
    2. '<|end|>' → logprob: -1.4935078620910645
    3. '   ' → logprob: -2.8685078620910645
    4. ' ' → logprob: -5.3685078620910645
    5. '\' → logprob: -5.4935078620910645
    6. '    ' → logprob: -5.6185078620910645
    7. '<|end|>' → logprob: -5.7435078620910645
    8. ' )' → logprob: -5.7435078620910645
    9. '```' → logprob: -5.8685078620910645
    10. '\n' → logprob: -6.9935078620910645

Token 18: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4245508909225464
    2. '<|end|>' → logprob: -1.6745508909225464
    3. ' for' → logprob: -1.7995508909225464
    4. ')' → logprob: -2.049551010131836
    5. 'for' (adapté à ' for') → logprob: -2.299551010131836
    6. '```' → logprob: -2.674551010131836
    7. '\' → logprob: -3.799551010131836
    8. '\n' → logprob: -3.924551010131836
    9. '    
' → logprob: -4.299551010131836
    10. ' ' → logprob: -4.424551010131836

Token 19: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008977819234132767
    2. ' i' → logprob: -4.758977890014648
    3. '  ' → logprob: -8.008977890014648
    4. ' ' → logprob: -11.758977890014648
    5. ' _' → logprob: -12.133977890014648
    6. '_' → logprob: -12.258977890014648
    7. ' n' → logprob: -12.633977890014648
    8. ' I' → logprob: -13.008977890014648
    9. ' range' → logprob: -13.633977890014648
    10. 'i' → logprob: -13.758977890014648

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005164854694157839
    2. 'in' → logprob: -5.880164623260498
    3. ' ' → logprob: -6.380164623260498
    4. 'n' → logprob: -7.755164623260498
    5. '  ' → logprob: -9.005165100097656
    6. ' n' → logprob: -9.630165100097656
    7. ' i' → logprob: -11.505165100097656
    8. '	in' → logprob: -12.255165100097656
    9. '   ' → logprob: -12.505165100097656
    10. '_' → logprob: -12.505165100097656

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0012714238837361336
    2. ' ' → logprob: -7.2512712478637695
    3. 'range' → logprob: -7.5012712478637695
    4. ' in' → logprob: -11.87627124786377
    5. ' space' → logprob: -14.62627124786377
    6. ' xrange' → logprob: -14.75127124786377
    7. '	range' → logprob: -15.00127124786377
    8. '  ' → logprob: -15.37627124786377
    9. ' r' → logprob: -15.75127124786377
    10. ' RANGE' → logprob: -16.251272201538086

Token 22: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003687128657475114
    2. '(num' → logprob: -5.878686904907227
    3. ' (' → logprob: -7.128686904907227
    4. '(len' → logprob: -10.128686904907227
    5. '(n' → logprob: -10.503686904907227
    6. '(i' → logprob: -12.503686904907227
    7. '(
' → logprob: -13.128686904907227
    8. '(

' → logprob: -13.378686904907227
    9. ' ' → logprob: -14.003686904907227
    10. ')' → logprob: -14.503686904907227

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014538371935486794
    2. ')' → logprob: -4.764538288116455
    3. ' ):' → logprob: -5.264538288116455
    4. ':' → logprob: -7.764538288116455
    5. '+' → logprob: -8.764538764953613
    6. ' )' → logprob: -10.014538764953613
    7. ' ' → logprob: -10.264538764953613
    8. '):
' → logprob: -10.264538764953613
    9. '   ' → logprob: -11.514538764953613
    10. ' :' → logprob: -11.889538764953613

Token 24: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.12268131226301193
    2. ' ' → logprob: -2.3726813793182373
    3. '   ' → logprob: -4.997681140899658
    4. '       ' → logprob: -5.247681140899658
    5. '     
' → logprob: -6.122681140899658
    6. '(' → logprob: -6.372681140899658
    7. 'input' → logprob: -6.622681140899658
    8. ' input' → logprob: -7.247681140899658
    9. ' (' → logprob: -7.372681140899658
    10. '<|end|>' → logprob: -7.497681140899658

Token 25: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6090568900108337
    2. '    ' → logprob: -1.2340569496154785
    3. ' data' → logprob: -3.4840569496154785
    4. ' input' → logprob: -3.4840569496154785
    5. ' dat' → logprob: -3.9840569496154785
    6. 'input' → logprob: -3.9840569496154785
    7. 'data' → logprob: -4.1090569496154785
    8. ' line' → logprob: -4.7340569496154785
    9. '     
' → logprob: -5.2340569496154785
    10. '   ' → logprob: -5.2340569496154785

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48123154044151306
    2. ',' → logprob: -1.1062315702438354
    3. '=' → logprob: -3.106231451034546
    4. ' ,' → logprob: -6.356231689453125
    5. ')' → logprob: -6.731231689453125
    6. ' ' → logprob: -7.106231689453125
    7. 's' → logprob: -7.106231689453125
    8. '_' → logprob: -7.231231689453125
    9. '[' → logprob: -7.981231689453125
    10. '.' → logprob: -8.106231689453125

Token 27: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.2576827108860016
    2. 'y' → logprob: -1.5076826810836792
    3. ' ' → logprob: -5.257682800292969
    4. '<|end|>' → logprob: -8.132682800292969
    5. ' =' → logprob: -9.257682800292969
    6. '<|end|>' → logprob: -10.382682800292969
    7. '=' → logprob: -10.882682800292969
    8. 's' → logprob: -10.882682800292969
    9. '    ' → logprob: -11.257682800292969
    10. 'space' → logprob: -11.382682800292969

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03369007632136345
    2. '=' → logprob: -3.4086899757385254
    3. ',' → logprob: -10.158690452575684
    4. ')' → logprob: -12.533690452575684
    5. '=input' → logprob: -14.158690452575684
    6. ' ' → logprob: -14.658690452575684
    7. ' ,' → logprob: -15.908690452575684
    8. '<|end|>' → logprob: -15.908690452575684
    9. ' =)' → logprob: -16.283689498901367
    10. '  ' → logprob: -16.533689498901367

Token 29: ' list' (ID: 1562)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.05689112842082977
    2. ' input' → logprob: -2.9318912029266357
    3. 'map' → logprob: -7.056890964508057
    4. ' list' → logprob: -7.431890964508057
    5. 'input' → logprob: -8.181891441345215
    6. ' ' → logprob: -9.181891441345215
    7. ' [' → logprob: -9.181891441345215
    8. ' tuple' → logprob: -10.806891441345215
    9. '   ' → logprob: -11.306891441345215
    10. ' int' → logprob: -11.431891441345215

Token 30: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07578989863395691
    2. '(' → logprob: -2.7007899284362793
    3. '(input' → logprob: -5.200789928436279
    4. '(int' → logprob: -9.075789451599121
    5. '()' → logprob: -9.325789451599121
    6. ' map' → logprob: -10.450789451599121
    7. '(
' → logprob: -10.700789451599121
    8. 'map' → logprob: -10.700789451599121
    9. '(

' → logprob: -11.575789451599121
    10. ' (' → logprob: -11.700789451599121

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002696339739486575
    2. '(' → logprob: -6.002696514129639
    3. '<|end|>' → logprob: -9.62769603729248
    4. '(str' → logprob: -10.25269603729248
    5. '(lambda' → logprob: -10.62769603729248
    6. '(
' → logprob: -10.62769603729248
    7. '<int' → logprob: -10.75269603729248
    8. ')' → logprob: -11.50269603729248
    9. '=int' → logprob: -11.62769603729248
    10. '(float' → logprob: -11.62769603729248

Token 32: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010294626466929913
    2. '(' → logprob: -5.385294437408447
    3. ',input' → logprob: -5.385294437408447
    4. 'input' → logprob: -7.135294437408447
    5. ',' → logprob: -8.760294914245605
    6. ')' → logprob: -9.760294914245605
    7. ' input' → logprob: -10.510294914245605
    8. ' (' → logprob: -11.760294914245605
    9. '=input' → logprob: -12.010294914245605
    10. '(
' → logprob: -12.635294914245605

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5213274309644476e-05
    2. '()' → logprob: -11.125015258789062
    3. '(' → logprob: -15.875015258789062
    4. '()))' → logprob: -16.000015258789062
    5. ' ().' → logprob: -16.500015258789062
    6. '())))' → logprob: -17.125015258789062
    7. '()));' → logprob: -17.375015258789062
    8. '())' → logprob: -17.750015258789062
    9. '()
' → logprob: -18.250015258789062
    10. '('').' → logprob: -18.375015258789062

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015502817404922098
    2. 'strip' → logprob: -9.250155448913574
    3. ' split' → logprob: -10.250155448913574
    4. 'rstrip' → logprob: -11.000155448913574
    5. '(split' → logprob: -12.000155448913574
    6. 'spl' → logprob: -15.000155448913574
    7. ')' → logprob: -15.375155448913574
    8. ' ' → logprob: -16.375154495239258
    9. 's' → logprob: -16.750154495239258
    10. '.split' → logprob: -17.375154495239258

Token 35: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009913090616464615
    2. '()' → logprob: -5.384912967681885
    3. '())' → logprob: -6.134912967681885
    4. '))' → logprob: -6.259912967681885
    5. '())))' → logprob: -6.884912967681885
    6. '()))
' → logprob: -9.259913444519043
    7. ')))' → logprob: -10.509913444519043
    8. '()));' → logprob: -10.634913444519043
    9. '(' → logprob: -11.509913444519043
    10. '()))

' → logprob: -12.259913444519043

Token 36: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8870351314544678
    2. '       ' → logprob: -1.0120351314544678
    3. '   ' → logprob: -1.8870351314544678
    4. '<|end|>' → logprob: -3.0120351314544678
    5. ',' → logprob: -5.137035369873047
    6. ' ' → logprob: -5.637035369873047
    7. '    ' → logprob: -6.012035369873047
    8. '    
' → logprob: -6.137035369873047
    9. '
' → logprob: -6.637035369873047
    10. '        
' → logprob: -6.762035369873047

Token 37: ' DAT' (ID: 82252)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15726052224636078
    2. '<|end|>' → logprob: -2.2822604179382324
    3. ' ' → logprob: -4.407260417938232
    4. '   ' → logprob: -4.907260417938232
    5. '        ' → logprob: -5.157260417938232
    6. '<|end|>' → logprob: -5.407260417938232
    7. '    ' → logprob: -5.782260417938232
    8. 'DAT' (adapté à ' DAT') → logprob: -6.157260417938232
    9. ')' → logprob: -6.532260417938232
    10. ',' → logprob: -6.907260417938232

Token 38: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.007638686802238226
    2. '.' → logprob: -4.882638454437256
    3. ' .' → logprob: -11.132638931274414
    4. '.app' → logprob: -12.257638931274414
    5. '.ap' → logprob: -12.632638931274414
    6. '.add' → logprob: -12.632638931274414
    7. '.extend' → logprob: -13.007638931274414
    8. '.setdefault' → logprob: -13.507638931274414
    9. ').' → logprob: -13.882638931274414
    10. '.push' → logprob: -14.007638931274414

Token 39: '(x' (ID: 4061)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014466460794210434
    2. '(' → logprob: -4.264466285705566
    3. '(x' → logprob: -8.639466285705566
    4. '([' → logprob: -9.014466285705566
    5. '(
' → logprob: -13.514466285705566
    6. ' (' → logprob: -14.264466285705566
    7. '(([' → logprob: -14.389466285705566
    8. '(y' → logprob: -14.889466285705566
    9. ' ((' → logprob: -15.139466285705566
    10. '(('' → logprob: -15.389466285705566

Token 40: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0871918648481369
    2. ')' → logprob: -2.8371918201446533
    3. ',y' → logprob: -3.8371918201446533
    4. ' ,' → logprob: -6.587192058563232
    5. '+' → logprob: -6.837192058563232
    6. ' )' → logprob: -7.962192058563232
    7. '-' → logprob: -8.712191581726074
    8. ',)' → logprob: -9.337191581726074
    9. '+y' → logprob: -9.462191581726074
    10. '),' → logprob: -9.587191581726074

Token 41: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' DAT' (ID: 82252)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1465964913368225
    2. '(y' → logprob: -2.1465964317321777
    3. '(x' → logprob: -4.271596431732178
    4. '(max' → logprob: -6.021596431732178
    5. '((' → logprob: -7.021596431732178
    6. '(D' → logprob: -7.146596431732178
    7. '(len' → logprob: -7.396596431732178
    8. '(None' → logprob: -8.521596908569336
    9. '(-' → logprob: -8.896596908569336
    10. '(n' → logprob: -9.521596908569336

Token 45: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ' )' → logprob: -12.750004768371582
    3. ')
' → logprob: -13.750004768371582
    4. '))' → logprob: -14.500004768371582
    5. ')return' → logprob: -16.0000057220459
    6. ')#' → logprob: -16.1250057220459
    7. ')))' → logprob: -16.5000057220459
    8. ')`' → logprob: -16.5000057220459
    9. '`)' → logprob: -16.6250057220459
    10. ')**' → logprob: -17.1250057220459

Token 46: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' num' (ID: 2269)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4186737835407257
    2. '<|end|>' → logprob: -1.2936737537384033
    3. ')' → logprob: -3.0436737537384033
    4. '```' → logprob: -5.293673992156982
    5. '   ' → logprob: -5.418673992156982
    6. '\' → logprob: -5.668673992156982
    7. '<|end|>' → logprob: -6.293673992156982
    8. '
' → logprob: -6.293673992156982
    9. '    
' → logprob: -7.168673992156982
    10. ' ' → logprob: -7.668673992156982

Token 48: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.45345792174339294
    2. '<|end|>' → logprob: -1.3284579515457153
    3. ')' → logprob: -2.578457832336426
    4. ' ' → logprob: -5.453457832336426
    5. '<|end|>' → logprob: -5.578457832336426
    6. ' +' → logprob: -5.828457832336426
    7. '(' → logprob: -5.953457832336426
    8. '=' → logprob: -6.703457832336426
    9. '[' → logprob: -6.703457832336426
    10. '```' → logprob: -6.703457832336426

Token 49: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0376877784729004
    2. '[' → logprob: -1.6626877784729004
    3. ')' → logprob: -2.2876877784729004
    4. ' +=' → logprob: -2.2876877784729004
    5. ' =' → logprob: -2.4126877784729004
    6. '=' → logprob: -2.7876877784729004
    7. ' +' → logprob: -3.9126877784729004
    8. ' ' → logprob: -4.0376877784729
    9. '<|end|>' → logprob: -4.0376877784729
    10. '.' → logprob: -4.0376877784729

Token 50: ' num' (ID: 2269)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5530639886856079
    2. ' int' → logprob: -2.1780638694763184
    3. ' num' → logprob: -2.5530638694763184
    4. '0' → logprob: -2.5530638694763184
    5. 'len' → logprob: -2.8030638694763184
    6. ' ' → logprob: -3.4280638694763184
    7. 'int' → logprob: -4.053063869476318
    8. ' max' → logprob: -4.053063869476318
    9. 'num' → logprob: -4.303063869476318
    10. ' sum' → logprob: -5.053063869476318

Token 51: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02716347947716713
    2. '<|end|>' → logprob: -4.402163505554199
    3. ' +' → logprob: -5.152163505554199
    4. '-' → logprob: -5.777163505554199
    5. '   ' → logprob: -6.527163505554199
    6. '+
' → logprob: -6.652163505554199
    7. ' ' → logprob: -7.402163505554199
    8. ')' → logprob: -7.777163505554199
    9. '<|end|>' → logprob: -7.902163505554199
    10. '*' → logprob: -8.1521635055542

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045807508286088705
    2. '2' → logprob: -8.125457763671875
    3. ' ' → logprob: -8.750457763671875
    4. '   ' → logprob: -12.875457763671875
    5. '+' → logprob: -14.625457763671875
    6. '0' → logprob: -15.125457763671875
    7. '-' → logprob: -17.000457763671875
    8. '  ' → logprob: -17.000457763671875
    9. '...' → logprob: -17.500457763671875
    10. '[' → logprob: -17.500457763671875

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5120287066092715e-05
    2. '2' → logprob: -11.000035285949707
    3. ' ' → logprob: -11.000035285949707
    4. '+' → logprob: -14.000035285949707
    5. '   ' → logprob: -14.750035285949707
    6. '0' → logprob: -14.875035285949707
    7. '-' → logprob: -17.25003433227539
    8. '  ' → logprob: -17.50003433227539
    9. '```' → logprob: -18.00003433227539
    10. '...' → logprob: -18.12503433227539

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7825592756271362
    2. '<|end|>' → logprob: -0.7825592756271362
    3. ')' → logprob: -3.782559394836426
    4. '
' → logprob: -4.157559394836426
    5. '```' → logprob: -4.157559394836426
    6. ' ' → logprob: -5.157559394836426
    7. '\n' → logprob: -5.157559394836426
    8. ':' → logprob: -5.282559394836426
    9. '    
' → logprob: -5.532559394836426
    10. '<|end|>' → logprob: -5.907559394836426

Token 56: ' T' (ID: 353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20216849446296692
    2. ')' → logprob: -2.7021684646606445
    3. '<|end|>' → logprob: -3.4521684646606445
    4. ' ' → logprob: -3.8271684646606445
    5. '[' → logprob: -4.0771684646606445
    6. '```' → logprob: -4.4521684646606445
    7. '\n' → logprob: -5.4521684646606445
    8. ',' → logprob: -5.5771684646606445
    9. 'for' → logprob: -5.8271684646606445
    10. '
' → logprob: -5.8271684646606445

Token 57: 'BL' (ID: 16350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4263803958892822
    2. '=' → logprob: -3.0513803958892822
    3. 'AB' → logprob: -3.4263803958892822
    4. 'OT' → logprob: -3.5513803958892822
    5. 'O' → logprob: -3.6763803958892822
    6. 'ime' → logprob: -4.176380157470703
    7. '1' → logprob: -4.176380157470703
    8. 'OTAL' → logprob: -4.301380157470703
    9. 'otal' → logprob: -4.551380157470703
    10. '   ' → logprob: -4.551380157470703

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18292269110679626
    2. '=' → logprob: -1.8079227209091187
    3. '[' → logprob: -6.057922840118408
    4. '=[' → logprob: -8.43292236328125
    5. '[]' → logprob: -8.80792236328125
    6. ' ' → logprob: -8.93292236328125
    7. '=[]' → logprob: -9.18292236328125
    8. '_' → logprob: -9.80792236328125
    9. ' =[' → logprob: -10.05792236328125
    10. '1' → logprob: -10.80792236328125

Token 59: ' [[' (ID: 9237)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3660286068916321
    2. '[[' → logprob: -1.3660285472869873
    3. ' [' → logprob: -3.4910285472869873
    4. ' [[' → logprob: -3.9910285472869873
    5. '[]' → logprob: -7.116028785705566
    6. '[-' → logprob: -7.991028785705566
    7. '[num' → logprob: -8.116028785705566
    8. '[n' → logprob: -8.741028785705566
    9. '[list' → logprob: -8.866028785705566
    10. ' [[]' → logprob: -9.116028785705566

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022607244551181793
    2. 'False' → logprob: -4.147607326507568
    3. ' ' → logprob: -5.897607326507568
    4. '-' → logprob: -6.647607326507568
    5. 'float' → logprob: -6.647607326507568
    6. 'None' → logprob: -8.02260684967041
    7. ' False' → logprob: -8.64760684967041
    8. '   ' → logprob: -8.77260684967041
    9. '""' → logprob: -9.89760684967041
    10. ' float' → logprob: -10.02260684967041

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24700868129730225
    2. ' for' → logprob: -2.372008800506592
    3. ']*(' → logprob: -2.372008800506592
    4. ']*' → logprob: -3.872008800506592
    5. 'for' → logprob: -4.747008800506592
    6. ' ]' → logprob: -5.997008800506592
    7. '   ' → logprob: -9.247008323669434
    8. ' ' → logprob: -9.497008323669434
    9. '	for' → logprob: -9.747008323669434
    10. ']+' → logprob: -10.497008323669434

Token 62: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0583377443253994
    2. 'for' → logprob: -3.558337688446045
    3. ']' → logprob: -4.308337688446045
    4. ']*(' → logprob: -4.433337688446045
    5. ']*' → logprob: -6.183337688446045
    6. '	for' → logprob: -8.058338165283203
    7. ' ]' → logprob: -8.683338165283203
    8. '   ' → logprob: -8.808338165283203
    9. ' *' → logprob: -10.558338165283203
    10. '*' → logprob: -10.683338165283203

Token 63: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7420459389686584
    2. 'num' → logprob: -0.7420459389686584
    3. '(num' → logprob: -3.1170458793640137
    4. ' (' → logprob: -5.742045879364014
    5. '(' → logprob: -8.867046356201172
    6. ' ' → logprob: -10.242046356201172
    7. '	num' → logprob: -10.867046356201172
    8. '(n' → logprob: -12.117046356201172
    9. '<num' → logprob: -12.242046356201172
    10. ',num' → logprob: -12.742046356201172

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25737467408180237
    2. '+' → logprob: -2.0073747634887695
    3. '<|end|>' → logprob: -2.7573747634887695
    4. '<|end|>' → logprob: -4.3823747634887695
    5. ')' → logprob: -4.7573747634887695
    6. 'num' → logprob: -6.8823747634887695
    7. ' +' → logprob: -6.8823747634887695
    8. ' ' → logprob: -7.0073747634887695
    9. '   ' → logprob: -7.0073747634887695
    10. '[' → logprob: -7.1323747634887695

Token 65: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04914817959070206
    2. 'for' → logprob: -3.0491480827331543
    3. '   ' → logprob: -8.549148559570312
    4. '	for' → logprob: -8.924148559570312
    5. ']' → logprob: -9.174148559570312
    6. ' ' → logprob: -10.299148559570312
    7. ' ]' → logprob: -10.799148559570312
    8. '<|end|>' → logprob: -10.924148559570312
    9. '+' → logprob: -11.299148559570312
    10. '    ' → logprob: -11.549148559570312

Token 66: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20645543932914734
    2. ' _' → logprob: -2.5814554691314697
    3. ' i' → logprob: -3.4564554691314697
    4. '<|end|>' → logprob: -3.8314554691314697
    5. '(range' → logprob: -3.9564554691314697
    6. '_' → logprob: -4.081455230712891
    7. 'range' → logprob: -4.331455230712891
    8. ' ' → logprob: -5.331455230712891
    9. '_range' → logprob: -6.706455230712891
    10. '<|end|>' → logprob: -7.456455230712891

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01044317428022623
    2. 'in' → logprob: -4.760443210601807
    3. '<|end|>' → logprob: -6.385443210601807
    4. ' ' → logprob: -9.635442733764648
    5. '<|end|>' → logprob: -10.135442733764648
    6. 'range' → logprob: -10.885442733764648
    7. '	in' → logprob: -12.010442733764648
    8. ' range' → logprob: -12.260442733764648
    9. '  ' → logprob: -13.885442733764648
    10. ')' → logprob: -14.260442733764648

Token 68: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011054071597754955
    2. 'range' → logprob: -4.511054039001465
    3. '	range' → logprob: -12.261054039001465
    4. ' xrange' → logprob: -14.136054039001465
    5. '(range' → logprob: -14.761054039001465
    6. ' ' → logprob: -15.261054039001465
    7. '_range' → logprob: -17.13605499267578
    8. ' ' → logprob: -17.26105499267578
    9. ' rango' → logprob: -17.51105499267578
    10. '.range' → logprob: -17.63605499267578

Token 69: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0118853859603405
    2. '(' → logprob: -4.636885166168213
    3. ' (' → logprob: -6.636885166168213
    4. ' range' → logprob: -8.136885643005371
    5. ' num' → logprob: -8.386885643005371
    6. '(range' → logprob: -8.511885643005371
    7. 'num' → logprob: -10.136885643005371
    8. '(n' → logprob: -11.136885643005371
    9. 'range' → logprob: -11.136885643005371
    10. ')' → logprob: -12.136885643005371

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07761512696743011
    2. ')]' → logprob: -2.7026150226593018
    3. '+' → logprob: -5.077615261077881
    4. ')' → logprob: -6.952615261077881
    5. '   ' → logprob: -8.577614784240723
    6. '-' → logprob: -9.327614784240723
    7. ')])' → logprob: -10.452614784240723
    8. '):' → logprob: -10.577614784240723
    9. ' +' → logprob: -10.577614784240723
    10. ')]
' → logprob: -10.952614784240723

Token 71: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -4.3226136767771095e-05
    2. ')' → logprob: -10.375042915344238
    3. ']' → logprob: -11.875042915344238
    4. ' )' → logprob: -14.000042915344238
    5. ')])' → logprob: -14.000042915344238
    6. '])]' → logprob: -14.000042915344238
    7. ')],' → logprob: -14.375042915344238
    8. ')]
' → logprob: -14.500042915344238
    9. ')][' → logprob: -15.000042915344238
    10. '])' → logprob: -15.250042915344238

Token 72: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8675184845924377
    2. ')' → logprob: -1.367518424987793
    3. '   ' → logprob: -1.992518424987793
    4. 'for' (adapté à ' for') → logprob: -3.117518424987793
    5. ' for' → logprob: -3.117518424987793
    6. ']' → logprob: -3.742518424987793
    7. '<|end|>' → logprob: -4.117518424987793
    8. '[' → logprob: -5.242518424987793
    9. '    ' → logprob: -5.242518424987793
    10. '  ' → logprob: -5.242518424987793

Token 74: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23008090257644653
    2. ' ' → logprob: -1.6050808429718018
    3. ' _' → logprob: -6.230081081390381
    4. '<|end|>' → logprob: -6.980081081390381
    5. ' x' → logprob: -7.480081081390381
    6. '  ' → logprob: -8.355080604553223
    7. ' in' → logprob: -8.480080604553223
    8. ' range' → logprob: -8.480080604553223
    9. ' j' → logprob: -8.730080604553223
    10. '_' → logprob: -9.105080604553223

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0060111526399850845
    2. 'in' → logprob: -5.131011009216309
    3. ' ' → logprob: -10.256011009216309
    4. '	in' → logprob: -11.006011009216309
    5. '   ' → logprob: -12.006011009216309
    6. '+' → logprob: -12.131011009216309
    7. 'range' → logprob: -12.381011009216309
    8. '1' → logprob: -12.631011009216309
    9. '  ' → logprob: -13.006011009216309
    10. '<|end|>' → logprob: -13.381011009216309

Token 76: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00017803447553887963
    2. 'range' → logprob: -8.750178337097168
    3. ' ' → logprob: -11.375178337097168
    4. ' xrange' → logprob: -12.625178337097168
    5. '  ' → logprob: -13.250178337097168
    6. ' ran' → logprob: -14.000178337097168
    7. '	range' → logprob: -14.500178337097168
    8. ')' → logprob: -15.000178337097168
    9. '   ' → logprob: -15.250178337097168
    10. ' rang' → logprob: -15.375178337097168

Token 77: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025643447414040565
    2. '(num' → logprob: -4.025643348693848
    3. ' (' → logprob: -4.900643348693848
    4. '(len' → logprob: -11.900643348693848
    5. ' ' → logprob: -12.150643348693848
    6. '(n' → logprob: -12.275643348693848
    7. ' num' → logprob: -13.400643348693848
    8. '(
' → logprob: -13.525643348693848
    9. '1' → logprob: -13.775643348693848
    10. '<|end|>' → logprob: -14.150643348693848

Token 78: '0' (ID: 15)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4312487542629242
    2. '1' → logprob: -1.0562487840652466
    3. '2' → logprob: -6.431248664855957
    4. ' num' → logprob: -7.931248664855957
    5. '0' → logprob: -9.056248664855957
    6. '   ' → logprob: -9.306248664855957
    7. ')' → logprob: -9.431248664855957
    8. '(num' → logprob: -9.556248664855957
    9. 'n' → logprob: -9.806248664855957
    10. ' ' → logprob: -9.931248664855957

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.423451691865921
    2. ' ,' → logprob: -1.2984516620635986
    3. '+' → logprob: -3.5484516620635986
    4. ',num' → logprob: -3.6734516620635986
    5. ' ' → logprob: -4.923451900482178
    6. ')' → logprob: -5.048451900482178
    7. ' +' → logprob: -5.923451900482178
    8. '   ' → logprob: -7.423451900482178
    9. ' )' → logprob: -7.548451900482178
    10. '  ' → logprob: -8.79845142364502

Token 80: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.39187657833099365
    2. 'num' → logprob: -1.1418765783309937
    3. '1' → logprob: -5.766876697540283
    4. ' ' → logprob: -6.516876697540283
    5. ')' → logprob: -9.516876220703125
    6. ' n' → logprob: -9.766876220703125
    7. ' len' → logprob: -10.016876220703125
    8. 'n' → logprob: -10.016876220703125
    9. 'len' → logprob: -10.391876220703125
    10. '2' → logprob: -10.641876220703125

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01632831059396267
    2. '+' → logprob: -4.39132833480835
    3. ')' → logprob: -5.76632833480835
    4. ' +' → logprob: -8.266327857971191
    5. '-' → logprob: -8.766327857971191
    6. ',' → logprob: -9.016327857971191
    7. ' ' → logprob: -9.516327857971191
    8. '   ' → logprob: -11.141327857971191
    9. ' -' → logprob: -11.141327857971191
    10. ' ,' → logprob: -11.391327857971191

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016674461076036096
    2. ')' → logprob: -7.126667499542236
    3. ' ):' → logprob: -7.876667499542236
    4. '-' → logprob: -8.126667022705078
    5. '):
' → logprob: -9.001667022705078
    6. ',' → logprob: -10.501667022705078
    7. ':' → logprob: -10.751667022705078
    8. '+' → logprob: -12.001667022705078
    9. ' -' → logprob: -12.626667022705078
    10. '   ' → logprob: -13.626667022705078

Token 83: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5697145462036133
    2. '   ' → logprob: -1.0697145462036133
    3. '    ' → logprob: -3.0697145462036133
    4. ':' → logprob: -3.5697145462036133
    5. '<|end|>' → logprob: -5.819714546203613
    6. '+' → logprob: -5.944714546203613
    7. ' 
' → logprob: -6.319714546203613
    8. '  ' → logprob: -6.319714546203613
    9. ' :' → logprob: -6.569714546203613
    10. '       ' → logprob: -6.569714546203613

Token 84: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2285165935754776
    2. '   ' → logprob: -2.4785165786743164
    3. '    ' → logprob: -2.6035165786743164
    4. ' for' → logprob: -3.4785165786743164
    5. '<|end|>' → logprob: -5.728516578674316
    6. '1' → logprob: -5.978516578674316
    7. 'for' (adapté à ' for') → logprob: -5.978516578674316
    8. ' i' → logprob: -6.478516578674316
    9. '  ' → logprob: -6.728516578674316
    10. '       ' → logprob: -6.853516578674316

Token 85: ' row' (ID: 5225)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6505918502807617
    2. ' ' → logprob: -1.4005918502807617
    3. ' range' → logprob: -1.5255918502807617
    4. 'range' → logprob: -4.650591850280762
    5. ' num' → logprob: -6.900591850280762
    6. ' i' → logprob: -6.900591850280762
    7. 'j' → logprob: -7.025591850280762
    8. '    ' → logprob: -8.025591850280762
    9. ')' → logprob: -8.150591850280762
    10. ' ' → logprob: -8.275591850280762

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014738536439836025
    2. 'in' → logprob: -4.5147385597229
    3. 's' → logprob: -6.1397385597229
    4. ' ' → logprob: -7.5147385597229
    5. '<|end|>' → logprob: -7.5147385597229
    6. ')' → logprob: -9.139738082885742
    7. '=' → logprob: -9.264738082885742
    8. ',' → logprob: -9.264738082885742
    9. ' =' → logprob: -10.639738082885742
    10. '+' → logprob: -10.639738082885742

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47421687841415405
    2. ' range' → logprob: -0.974216878414154
    3. '   ' → logprob: -9.97421646118164
    4. ' ' → logprob: -10.22421646118164
    5. '(range' → logprob: -10.72421646118164
    6. '	range' → logprob: -11.47421646118164
    7. '  ' → logprob: -11.72421646118164
    8. ')' → logprob: -11.84921646118164
    9. 'rang' → logprob: -13.84921646118164
    10. ' xrange' → logprob: -14.09921646118164

Token 88: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09703916311264038
    2. '(i' → logprob: -2.597039222717285
    3. '(num' → logprob: -4.472039222717285
    4. ' (' → logprob: -5.097039222717285
    5. ' i' → logprob: -9.097039222717285
    6. '1' → logprob: -9.347039222717285
    7. ')' → logprob: -9.347039222717285
    8. ' ' → logprob: -9.847039222717285
    9. '(n' → logprob: -10.722039222717285
    10. '   ' → logprob: -10.847039222717285

Token 89: '-i' (ID: 18499)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007392307161353528
    2. '+' → logprob: -7.875739097595215
    3. ')' → logprob: -8.875739097595215
    4. '   ' → logprob: -10.250739097595215
    5. ' ' → logprob: -10.250739097595215
    6. '_' → logprob: -10.375739097595215
    7. '):' → logprob: -10.750739097595215
    8. ',' → logprob: -11.125739097595215
    9. 'i' → logprob: -11.375739097595215
    10. '-' → logprob: -11.563239097595215

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036386530846357346
    2. 't' → logprob: -4.411386489868164
    3. '):
' → logprob: -4.661386489868164
    4. 'nt' → logprob: -5.161386489868164
    5. ',' → logprob: -5.786386489868164
    6. ')' → logprob: -6.286386489868164
    7. 's' → logprob: -7.411386489868164
    8. ' ):' → logprob: -7.411386489868164
    9. '+' → logprob: -7.661386489868164
    10. '-' → logprob: -7.911386489868164

Token 91: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06779502332210541
    2. '   ' → logprob: -3.0677950382232666
    3. '    ' → logprob: -4.8177947998046875
    4. '	   ' → logprob: -5.5677947998046875
    5. '<|end|>' → logprob: -6.3177947998046875
    6. '+' → logprob: -6.9427947998046875
    7. ' ' → logprob: -7.0677947998046875
    8. 'row' → logprob: -7.1927947998046875
    9. ' row' → logprob: -7.8177947998046875
    10. '      ' → logprob: -7.9427947998046875

Token 92: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.620161771774292
    2. '   ' → logprob: -1.495161771774292
    3. ' col' → logprob: -1.620161771774292
    4. ' for' → logprob: -4.745162010192871
    5. 'for' → logprob: -4.995162010192871
    6. '       ' → logprob: -5.370162010192871
    7. 'column' → logprob: -5.370162010192871
    8. '           ' → logprob: -5.870162010192871
    9. 'if' → logprob: -6.370162010192871
    10. ' if' → logprob: -6.620162010192871

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868974447250366
    2. '=' → logprob: -1.1368974447250366
    3. '=row' → logprob: -10.636897087097168
    4. ' ' → logprob: -14.636897087097168
    5. '＝' → logprob: -14.761897087097168
    6. '=
' → logprob: -15.136897087097168
    7. ' =
' → logprob: -15.511897087097168
    8. '=

' → logprob: -15.636897087097168
    9. ',' → logprob: -15.761897087097168
    10. ')' → logprob: -15.886897087097168

Token 94: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.2531147301197052
    2. ' row' → logprob: -1.5031147003173828
    3. '<|end|>' → logprob: -7.128114700317383
    4. '(row' → logprob: -8.628114700317383
    5. '	row' → logprob: -9.753114700317383
    6. '[row' → logprob: -10.128114700317383
    7. '=row' → logprob: -10.878114700317383
    8. ' ' → logprob: -10.878114700317383
    9. '<|end|>' → logprob: -10.878114700317383
    10. 'i' → logprob: -11.253114700317383

Token 95: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04743639752268791
    2. ' +' → logprob: -3.172436475753784
    3. '+i' → logprob: -5.422436237335205
    4. '+
' → logprob: -12.422436714172363
    5. '＋' → logprob: -12.922436714172363
    6. ' plus' → logprob: -13.172436714172363
    7. ' ' → logprob: -14.422436714172363
    8. '+r' → logprob: -15.047436714172363
    9. '+xml' → logprob: -15.422436714172363
    10. ' +
' → logprob: -15.672436714172363

Token 96: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031781906727701426
    2. ' i' → logprob: -5.753178119659424
    3. '	i' → logprob: -15.878178596496582
    4. '   ' → logprob: -15.878178596496582
    5. ' ' → logprob: -16.128177642822266
    6. '    ' → logprob: -17.628177642822266
    7. '  ' → logprob: -17.753177642822266
    8. '<|end|>' → logprob: -18.128177642822266
    9. '1' → logprob: -19.003177642822266
    10. '(i' → logprob: -21.003177642822266

Token 97: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004801888018846512
    2. ' ' → logprob: -5.3798017501831055
    3. '0' → logprob: -8.629801750183105
    4. '   ' → logprob: -13.129801750183105
    5. '+' → logprob: -15.379801750183105
    6. '2' → logprob: -15.379801750183105
    7. '-' → logprob: -15.754801750183105
    8. '<|end|>' → logprob: -15.754801750183105
    9. '  ' → logprob: -16.504802703857422
    10. 'def' → logprob: -16.754802703857422

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002512285253033042
    2. '0' → logprob: -6.002512454986572
    3. ' ' → logprob: -10.252511978149414
    4. '2' → logprob: -14.377511978149414
    5. '   ' → logprob: -14.627511978149414
    6. '  ' → logprob: -17.127511978149414
    7. '```' → logprob: -17.627511978149414
    8. '-' → logprob: -17.752511978149414
    9. 'def' → logprob: -18.065011978149414
    10. '<|end|>' → logprob: -18.190011978149414

Token 100: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8094779253005981
    2. '           ' → logprob: -1.0594779253005981
    3. ']' → logprob: -2.4344778060913086
    4. '<|end|>' → logprob: -3.3094778060913086
    5. ' if' → logprob: -3.8094778060913086
    6. ' ' → logprob: -4.309477806091309
    7. '[' → logprob: -4.309477806091309
    8. '               ' → logprob: -4.809477806091309
    9. ')
' → logprob: -4.934477806091309
    10. '       ' → logprob: -5.059477806091309

Token 103: ' j' (ID: 441)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5842146277427673
    2. 'k' → logprob: -0.8342146277427673
    3. 'mid' → logprob: -5.334214687347412
    4. ' mid' → logprob: -5.959214687347412
    5. 'm' → logprob: -9.334214210510254
    6. 'middle' → logprob: -9.334214210510254
    7. 'split' → logprob: -9.459214210510254
    8. 'j' → logprob: -9.834214210510254
    9. ' ' → logprob: -10.084214210510254
    10. '   ' → logprob: -10.084214210510254

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007561430102214217
    2. 'in' → logprob: -7.25075626373291
    3. '<|end|>' → logprob: -10.37575626373291
    4. ' =' → logprob: -12.12575626373291
    5. ' ' → logprob: -12.12575626373291
    6. 'range' → logprob: -13.25075626373291
    7. '=row' → logprob: -14.12575626373291
    8. '<|end|>' → logprob: -14.62575626373291
    9. ' range' → logprob: -15.12575626373291
    10. '=' → logprob: -15.75075626373291

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4741273820400238
    2. ' range' → logprob: -0.9741274118423462
    3. '(range' → logprob: -9.974127769470215
    4. ' ' → logprob: -13.474127769470215
    5. '	range' → logprob: -13.849127769470215
    6. '   ' → logprob: -14.599127769470215
    7. '  ' → logprob: -14.599127769470215
    8. 'row' → logprob: -15.349127769470215
    9. ' xrange' → logprob: -16.9741268157959
    10. ' row' → logprob: -17.0991268157959

Token 106: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.163173645734787
    2. ' in' → logprob: -2.2881736755371094
    3. '(' → logprob: -3.5381736755371094
    4. ' range' → logprob: -5.038173675537109
    5. '(range' → logprob: -5.038173675537109
    6. ' (' → logprob: -5.163173675537109
    7. 'range' → logprob: -7.663173675537109
    8. ' row' → logprob: -8.03817367553711
    9. ' ' → logprob: -8.66317367553711
    10. 'in' → logprob: -9.03817367553711

Token 107: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11590844392776489
    2. '+' → logprob: -3.11590838432312
    3. ' ,' → logprob: -3.74090838432312
    4. ' col' → logprob: -3.86590838432312
    5. ',col' → logprob: -4.615908622741699
    6. ' +' → logprob: -5.490908622741699
    7. '           ' → logprob: -6.740908622741699
    8. '   ' → logprob: -6.865908622741699
    9. ' :' → logprob: -7.615908622741699
    10. ':' → logprob: -7.740908622741699

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000318065780447796
    2. ' ' → logprob: -8.12531852722168
    3. '0' → logprob: -11.25031852722168
    4. ' col' → logprob: -12.50031852722168
    5. '   ' → logprob: -12.87531852722168
    6. 'row' → logprob: -14.25031852722168
    7. 'col' → logprob: -14.25031852722168
    8. 'i' → logprob: -15.00031852722168
    9. '           ' → logprob: -15.25031852722168
    10. '```' → logprob: -15.75031852722168

Token 109: ',col' (ID: 117560)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1479843556880951
    2. ',col' → logprob: -2.397984266281128
    3. ' col' → logprob: -3.522984266281128
    4. '	col' → logprob: -4.647984504699707
    5. ' ,' → logprob: -6.022984504699707
    6. '<|end|>' → logprob: -6.897984504699707
    7. ' to' → logprob: -7.147984504699707
    8. ':' → logprob: -7.147984504699707
    9. 'col' → logprob: -7.272984504699707
    10. '[col' → logprob: -7.772984504699707

Token 110: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006460039410740137
    2. '):
' → logprob: -5.506460189819336
    3. ')' → logprob: -6.881460189819336
    4. ' ):' → logprob: -6.881460189819336
    5. ':' → logprob: -8.506460189819336
    6. '+' → logprob: -9.881460189819336
    7. ' )' → logprob: -10.881460189819336
    8. '           ' → logprob: -11.631460189819336
    9. ' ):
' → logprob: -11.881460189819336
    10. '):
' → logprob: -11.881460189819336

Token 111: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2016812264919281
    2. '<|end|>' → logprob: -1.9516812562942505
    3. '           ' → logprob: -4.451681137084961
    4. '                ' → logprob: -4.701681137084961
    5. ')' → logprob: -5.201681137084961
    6. ' ' → logprob: -5.326681137084961
    7. ':' → logprob: -5.951681137084961
    8. '            ' → logprob: -6.576681137084961
    9. '                   ' → logprob: -7.201681137084961
    10. '                               ' → logprob: -7.451681137084961

Token 112: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17351143062114716
    2. '                   ' → logprob: -2.923511505126953
    3. '                ' → logprob: -3.548511505126953
    4. ' if' → logprob: -4.048511505126953
    5. '               ' → logprob: -4.173511505126953
    6. '<|end|>' → logprob: -4.798511505126953
    7. ' T' → logprob: -5.048511505126953
    8. '                               ' → logprob: -5.048511505126953
    9. '                    ' → logprob: -5.673511505126953
    10. ' 
' → logprob: -6.173511505126953

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4632433354854584
    2. '=' → logprob: -1.9632433652877808
    3. ',' → logprob: -2.088243246078491
    4. '[' → logprob: -2.963243246078491
    5. '   ' → logprob: -4.58824348449707
    6. ',y' → logprob: -5.08824348449707
    7. 'or' → logprob: -5.58824348449707
    8. ' ' → logprob: -5.71324348449707
    9. '[]' → logprob: -5.96324348449707
    10. ')' → logprob: -6.08824348449707

Token 114: ' DAT' (ID: 82252)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.365010142326355
    2. ' max' → logprob: -1.490010142326355
    3. 'T' → logprob: -2.9900102615356445
    4. 'max' → logprob: -3.6150102615356445
    5. ' min' → logprob: -7.4900102615356445
    6. ' DAT' → logprob: -7.4900102615356445
    7. 'DAT' → logprob: -7.6150102615356445
    8. ' ' → logprob: -7.7400102615356445
    9. ' (' → logprob: -7.9900102615356445
    10. '   ' → logprob: -8.490010261535645

Token 115: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.01605982705950737
    2. '[col' → logprob: -5.016059875488281
    3. '[j' → logprob: -5.016059875488281
    4. '[' → logprob: -6.141059875488281
    5. '[x' → logprob: -8.391059875488281
    6. '][' → logprob: -10.016059875488281
    7. 'j' → logprob: -10.266059875488281
    8. ' [' → logprob: -11.016059875488281
    9. '[i' → logprob: -11.391059875488281
    10. '```' → logprob: -11.391059875488281

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14501161873340607
    2. ']+' → logprob: -2.1450116634368896
    3. ']*' → logprob: -4.1450114250183105
    4. '-' → logprob: -6.6450114250183105
    5. ']
' → logprob: -8.645011901855469
    6. '+' → logprob: -8.895011901855469
    7. ']-' → logprob: -9.395011901855469
    8. '][' → logprob: -9.645011901855469
    9. ' ]' → logprob: -9.770011901855469
    10. ' -' → logprob: -9.770011901855469

Token 117: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2959742844104767
    2. ' *' → logprob: -1.4209742546081543
    3. ']*' → logprob: -5.545974254608154
    4. '*x' → logprob: -6.295974254608154
    5. '*T' → logprob: -6.295974254608154
    6. ']' → logprob: -6.420974254608154
    7. '*j' → logprob: -6.545974254608154
    8. '*y' → logprob: -6.670974254608154
    9. '+' → logprob: -6.920974254608154
    10. 'x' → logprob: -7.170974254608154

Token 118: ' DAT' (ID: 82252)
  Prédit: 'DAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DAT' → logprob: -0.002253506798297167
    2. ' DAT' → logprob: -6.252253532409668
    3. ' ' → logprob: -9.627253532409668
    4. '  ' → logprob: -10.002253532409668
    5. 'y' → logprob: -10.127253532409668
    6. '   ' → logprob: -10.377253532409668
    7. '_DAT' → logprob: -10.502253532409668
    8. 'dat' → logprob: -10.877253532409668
    9. ' y' → logprob: -11.127253532409668
    10. 'D' → logprob: -11.127253532409668

Token 119: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02111165039241314
    2. 'j' → logprob: -3.8961117267608643
    3. '[col' → logprob: -8.146111488342285
    4. '	j' → logprob: -9.396111488342285
    5. ' j' → logprob: -10.146111488342285
    6. '[' → logprob: -10.396111488342285
    7. '```' → logprob: -10.521111488342285
    8. '[row' → logprob: -11.021111488342285
    9. '   ' → logprob: -11.521111488342285
    10. '][' → logprob: -11.646111488342285

Token 120: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03984939306974411
    2. '*' → logprob: -3.664849281311035
    3. ']' → logprob: -4.664849281311035
    4. '<|end|>' → logprob: -5.789849281311035
    5. ']*' → logprob: -7.539849281311035
    6. ')' → logprob: -8.789849281311035
    7. '<|end|>' → logprob: -9.164849281311035
    8. ' ' → logprob: -9.414849281311035
    9. ' ]' → logprob: -9.914849281311035
    10. '[' → logprob: -10.914849281311035

Token 121: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10026220977306366
    2. '*' → logprob: -2.35026216506958
    3. ' ' → logprob: -11.100262641906738
    4. '<|end|>' → logprob: -11.100262641906738
    5. '               ' → logprob: -12.475262641906738
    6. '*num' → logprob: -13.100262641906738
    7. ')' → logprob: -13.350262641906738
    8. '                   ' → logprob: -13.475262641906738
    9. '                ' → logprob: -13.475262641906738
    10. '*y' → logprob: -13.475262641906738

Token 122: ' DAT' (ID: 82252)
  Prédit: 'DAT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DAT' → logprob: -0.007770478259772062
    2. 'col' → logprob: -4.882770538330078
    3. ' DAT' → logprob: -9.507770538330078
    4. ' col' → logprob: -9.757770538330078
    5. 'COL' → logprob: -11.257770538330078
    6. 'Dat' → logprob: -11.382770538330078
    7. '_DAT' → logprob: -12.757770538330078
    8. 'dat' → logprob: -13.382770538330078
    9. 'y' → logprob: -13.507770538330078
    10. '   ' → logprob: -14.632770538330078

Token 123: '[col' (ID: 75852)
  Prédit: '[col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.004320929758250713
    2. 'col' → logprob: -5.504321098327637
    3. '[row' → logprob: -8.879321098327637
    4. '[' → logprob: -10.254321098327637
    5. ' col' → logprob: -10.629321098327637
    6. '               ' → logprob: -12.254321098327637
    7. 'icol' → logprob: -12.379321098327637
    8. '	col' → logprob: -12.379321098327637
    9. '```' → logprob: -12.504321098327637
    10. '                   ' → logprob: -12.629321098327637

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004144648555666208
    2. '])' → logprob: -8.625414848327637
    3. ' ]' → logprob: -8.875414848327637
    4. ']+' → logprob: -10.250414848327637
    5. ']
' → logprob: -10.500414848327637
    6. ')' → logprob: -10.875414848327637
    7. ')]' → logprob: -11.875414848327637
    8. '[' → logprob: -13.125414848327637
    9. ']]' → logprob: -14.000414848327637
    10. ']

' → logprob: -14.875414848327637

Token 125: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37279343605041504
    2. '               ' → logprob: -1.372793436050415
    3. '<|end|>' → logprob: -4.372793197631836
    4. '                ' → logprob: -4.747793197631836
    5. '*' → logprob: -4.747793197631836
    6. '
' → logprob: -5.872793197631836
    7. '                   ' → logprob: -5.872793197631836
    8. '                
' → logprob: -5.997793197631836
    9. ')
' → logprob: -6.247793197631836
    10. '+' → logprob: -6.247793197631836

Token 126: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.3132660686969757
    2. 'T' → logprob: -1.3132660388946533
    3. ' ' → logprob: -13.313265800476074
    4. '   ' → logprob: -13.938265800476074
    5. '	T' → logprob: -14.188265800476074
    6. '    ' → logprob: -15.188265800476074
    7. '           ' → logprob: -15.313265800476074
    8. ' ' → logprob: -15.563265800476074
    9. '               ' → logprob: -16.18826675415039
    10. '  ' → logprob: -16.56326675415039

Token 127: 'BL' (ID: 16350)
  Prédit: 'BL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BL' → logprob: -2.129266067640856e-05
    2. '[row' → logprob: -11.125020980834961
    3. 'B' → logprob: -12.500020980834961
    4. ' BL' → logprob: -14.000020980834961
    5. '[' → logprob: -14.125020980834961
    6. 'BLE' → logprob: -15.125020980834961
    7. '   ' → logprob: -15.750020980834961
    8. 'BLL' → logprob: -15.750020980834961
    9. 'row' → logprob: -16.50002098083496
    10. '(row' → logprob: -16.75002098083496

Token 128: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -9.85366350505501e-05
    2. '[' → logprob: -9.25009822845459
    3. 'row' → logprob: -13.87509822845459
    4. '][' → logprob: -14.62509822845459
    5. '[j' → logprob: -14.75009822845459
    6. '(row' → logprob: -16.000099182128906
    7. ' ' → logprob: -16.250099182128906
    8. '[col' → logprob: -16.625099182128906
    9. ' [' → logprob: -16.750099182128906
    10. '[line' → logprob: -16.750099182128906

Token 129: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13180360198020935
    2. '[j' → logprob: -2.131803512573242
    3. '[' → logprob: -5.506803512573242
    4. '"][' → logprob: -7.881803512573242
    5. '[js' → logprob: -9.756803512573242
    6. '[T' → logprob: -10.006803512573242
    7. ' ][' → logprob: -10.006803512573242
    8. '```' → logprob: -10.006803512573242
    9. ''][' → logprob: -10.131803512573242
    10. '[s' → logprob: -10.506803512573242

Token 130: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.392202976712724e-06
    2. ' j' → logprob: -12.375006675720215
    3. '<|end|>' → logprob: -13.750006675720215
    4. '	j' → logprob: -14.500006675720215
    5. '[j' → logprob: -14.875006675720215
    6. '   ' → logprob: -16.1250057220459
    7. '<|end|>' → logprob: -17.0000057220459
    8. '```' → logprob: -17.1250057220459
    9. '$j' → logprob: -17.3750057220459
    10. '                   ' → logprob: -17.5000057220459

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000206401280593127
    2. ' ]' → logprob: -8.500205993652344
    3. ']+' → logprob: -13.250205993652344
    4. ']
' → logprob: -14.875205993652344
    5. '"]' → logprob: -15.125205993652344
    6. '][' → logprob: -15.625205993652344
    7. ']]' → logprob: -15.875205993652344
    8. '']' → logprob: -16.750205993652344
    9. ']

' → logprob: -17.250205993652344
    10. '-' → logprob: -17.500205993652344

Token 132: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.034671489149332047
    2. '+' → logprob: -3.4096715450286865
    3. '<|end|>' → logprob: -7.034671306610107
    4. ' ' → logprob: -9.159671783447266
    5. ' +
' → logprob: -11.784671783447266
    6. ')' → logprob: -12.159671783447266
    7. '<|end|>' → logprob: -12.284671783447266
    8. '                ' → logprob: -12.534671783447266
    9. '               ' → logprob: -12.659671783447266
    10. '           ' → logprob: -12.909671783447266

Token 133: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.018152514472603798
    2. ' T' → logprob: -4.018152713775635
    3. '   ' → logprob: -13.643152236938477
    4. '               ' → logprob: -14.268152236938477
    5. '           ' → logprob: -15.393152236938477
    6. ' ' → logprob: -15.518152236938477
    7. '                   ' → logprob: -15.768152236938477
    8. '       ' → logprob: -16.018152236938477
    9. '                       ' → logprob: -17.393152236938477
    10. '  ' → logprob: -17.393152236938477

Token 134: 'BL' (ID: 16350)
  Prédit: 'BL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BL' → logprob: -0.00026872646412812173
    2. 'B' → logprob: -8.750268936157227
    3. ' BL' → logprob: -10.000268936157227
    4. '[' → logprob: -10.625268936157227
    5. 'L' → logprob: -10.875268936157227
    6. '   ' → logprob: -12.375268936157227
    7. 'BLE' → logprob: -12.750268936157227
    8. '       ' → logprob: -13.375268936157227
    9. ' ' → logprob: -13.500268936157227
    10. 'LB' → logprob: -13.875268936157227

Token 135: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.292907877039397e-06
    2. '][' → logprob: -13.25000286102295
    3. 'j' → logprob: -14.12500286102295
    4. '```' → logprob: -14.50000286102295
    5. '[i' → logprob: -17.375003814697266
    6. '[js' → logprob: -17.625003814697266
    7. '[' → logprob: -17.750003814697266
    8. '	j' → logprob: -18.375003814697266
    9. '[s' → logprob: -18.750003814697266
    10. '[col' → logprob: -18.875003814697266

Token 136: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011280654929578304
    2. '[col' → logprob: -4.511280536651611
    3. ' ][' → logprob: -8.63628101348877
    4. '"][' → logprob: -10.38628101348877
    5. ' ' → logprob: -11.63628101348877
    6. ']' → logprob: -12.51128101348877
    7. ''][' → logprob: -12.63628101348877
    8. '   ' → logprob: -13.13628101348877
    9. '```' → logprob: -13.51128101348877
    10. 'col' → logprob: -13.76128101348877

Token 137: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.00012356207298580557
    2. ' col' → logprob: -9.000123977661133
    3. '[col' → logprob: -16.000123977661133
    4. '	col' → logprob: -17.625123977661133
    5. '.col' → logprob: -18.875123977661133
    6. 'colm' → logprob: -19.500123977661133
    7. '(col' → logprob: -20.000123977661133
    8. 'coln' → logprob: -20.000123977661133
    9. '_col' → logprob: -20.000123977661133
    10. ' ' → logprob: -20.125123977661133

Token 138: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014155926182866096
    2. '               ' → logprob: -7.376415729522705
    3. ']' → logprob: -7.876415729522705
    4. ')
' → logprob: -8.376415252685547
    5. ')]' → logprob: -9.251415252685547
    6. '           ' → logprob: -10.001415252685547
    7. ')])' → logprob: -12.001415252685547
    8. '       ' → logprob: -12.001415252685547
    9. ' )' → logprob: -12.126415252685547
    10. '])' → logprob: -12.126415252685547

Token 139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12155018001794815
    2. ')' → logprob: -2.2465500831604004
    3. ']' → logprob: -6.2465500831604
    4. '                       ' → logprob: -6.6215500831604
    5. '           ' → logprob: -6.8715500831604
    6. '                   ' → logprob: -6.9965500831604
    7. '<|end|>' → logprob: -7.1215500831604
    8. '                ' → logprob: -7.3715500831604
    9. '              ' → logprob: -7.9965500831604
    10. '                           ' → logprob: -8.246550559997559

Token 140: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33560556173324585
    2. ' if' → logprob: -1.4606056213378906
    3. 'if' (adapté à ' if') → logprob: -2.9606056213378906
    4. '           ' → logprob: -7.335605621337891
    5. '                ' → logprob: -9.21060562133789
    6. '                
' → logprob: -9.21060562133789
    7. ' T' → logprob: -9.58560562133789
    8. '                   ' → logprob: -9.83560562133789
    9. '       ' → logprob: -10.21060562133789
    10. 'T' → logprob: -10.33560562133789

Token 141: ' T' (ID: 353)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0038568400777876377
    2. 'x' → logprob: -5.628856658935547
    3. ' T' → logprob: -8.503856658935547
    4. ' ' → logprob: -10.753856658935547
    5. 'T' → logprob: -11.003856658935547
    6. '(x' → logprob: -12.003856658935547
    7. ' (' → logprob: -12.128856658935547
    8. '	x' → logprob: -13.253856658935547
    9. '(' → logprob: -14.128856658935547
    10. ' not' → logprob: -14.253856658935547

Token 142: 'BL' (ID: 16350)
  Prédit: 'BL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BL' → logprob: -4.978233846486546e-05
    2. '[x' → logprob: -10.750049591064453
    3. 'B' → logprob: -11.250049591064453
    4. 'BLE' → logprob: -11.875049591064453
    5. '[' → logprob: -13.125049591064453
    6. 'BLL' → logprob: -13.500049591064453
    7. '```' → logprob: -14.250049591064453
    8. 'x' → logprob: -14.250049591064453
    9. '<x' → logprob: -14.375049591064453
    10. '(x' → logprob: -14.875049591064453

Token 143: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -4.143808109802194e-05
    2. '[' → logprob: -10.125041007995605
    3. '[col' → logprob: -14.000041007995605
    4. '<|end|>' → logprob: -16.500041961669922
    5. '(row' → logprob: -16.750041961669922
    6. '[line' → logprob: -16.875041961669922
    7. 'row' → logprob: -16.875041961669922
    8. '	row' → logprob: -17.250041961669922
    9. ',row' → logprob: -17.625041961669922
    10. '][' → logprob: -17.625041961669922

Token 144: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16297271847724915
    2. '[row' → logprob: -1.9129726886749268
    3. '[col' → logprob: -6.037972927093506
    4. ' ][' → logprob: -9.162972450256348
    5. ']' → logprob: -9.287972450256348
    6. '[' → logprob: -9.912972450256348
    7. ' ' → logprob: -10.912972450256348
    8. '   ' → logprob: -11.037972450256348
    9. ' [' → logprob: -11.287972450256348
    10. '[column' → logprob: -11.537972450256348

Token 145: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0002624086628202349
    2. ' col' → logprob: -8.250262260437012
    3. '[col' → logprob: -14.000262260437012
    4. '	col' → logprob: -15.750262260437012
    5. '(col' → logprob: -16.750263214111328
    6. ',col' → logprob: -16.875263214111328
    7. '_col' → logprob: -17.375263214111328
    8. 'row' → logprob: -17.750263214111328
    9. '.col' → logprob: -17.875263214111328
    10. 'coln' → logprob: -18.500263214111328

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0034669637680054
    2. '<' → logprob: -1.3784669637680054
    3. ' <' → logprob: -1.3784669637680054
    4. '==' → logprob: -2.753467082977295
    5. ']==' → logprob: -3.628467082977295
    6. ' ==' → logprob: -3.878467082977295
    7. ']<' → logprob: -4.628467082977295
    8. '>' → logprob: -5.503467082977295
    9. ' ]' → logprob: -6.253467082977295
    10. ' >' → logprob: -7.253467082977295

Token 147: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.26636219024658203
    2. '==' → logprob: -1.641362190246582
    3. ' <' → logprob: -3.516362190246582
    4. ' ==' → logprob: -4.766362190246582
    5. '>' → logprob: -6.766362190246582
    6. '=' → logprob: -7.516362190246582
    7. '<int' → logprob: -10.641362190246582
    8. ' >' → logprob: -10.641362190246582
    9. '<len' → logprob: -10.766362190246582
    10. '[' → logprob: -11.016362190246582

Token 148: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.054887473583221436
    2. ' x' → logprob: -2.929887533187866
    3. '0' → logprob: -13.304887771606445
    4. '	x' → logprob: -13.429887771606445
    5. '=x' → logprob: -14.179887771606445
    6. ' ' → logprob: -15.304887771606445
    7. '   ' → logprob: -15.304887771606445
    8. '=' → logprob: -15.554887771606445
    9. '>x' → logprob: -15.679887771606445
    10. '```' → logprob: -16.304887771606445

Token 149: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0067182136699557304
    2. ' x' → logprob: -5.006718158721924
    3. '	x' → logprob: -13.256718635559082
    4. '0' → logprob: -14.756718635559082
    5. '=x' → logprob: -15.006718635559082
    6. '=' → logprob: -16.131717681884766
    7. ' ' → logprob: -16.631717681884766
    8. '(x' → logprob: -16.881717681884766
    9. '   ' → logprob: -17.256717681884766
    10. '>x' → logprob: -17.256717681884766

Token 150: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7532077431678772
    2. ' or' → logprob: -0.7532077431678772
    3. ':
' → logprob: -3.8782076835632324
    4. '               ' → logprob: -4.003207683563232
    5. '=' → logprob: -5.003207683563232
    6. 'or' → logprob: -6.128207683563232
    7. '0' → logprob: -6.128207683563232
    8. '           ' → logprob: -6.253207683563232
    9. '                   ' → logprob: -6.503207683563232
    10. '2' → logprob: -7.003207683563232

Token 151: ' T' (ID: 353)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6274853944778442
    2. ' x' → logprob: -0.8774853944778442
    3. ' T' → logprob: -3.7524852752685547
    4. 'T' → logprob: -4.002485275268555
    5. '               ' → logprob: -5.252485275268555
    6. '                   ' → logprob: -6.377485275268555
    7. '                ' → logprob: -7.377485275268555
    8. '              ' → logprob: -8.752485275268555
    9. ' ' → logprob: -8.877485275268555
    10. '   ' → logprob: -9.002485275268555

Token 152: 'BL' (ID: 16350)
  Prédit: 'BL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BL' → logprob: -0.005961510818451643
    2. '[row' → logprob: -5.1309614181518555
    3. 'BLL' → logprob: -11.880961418151855
    4. 'BLE' → logprob: -12.255961418151855
    5. 'bl' → logprob: -12.380961418151855
    6. '[' → logprob: -12.505961418151855
    7. 'LBL' → logprob: -13.005961418151855
    8. '_BL' → logprob: -13.505961418151855
    9. 'T' → logprob: -13.505961418151855
    10. 'BT' → logprob: -13.505961418151855

Token 153: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -5.7888184528565034e-05
    2. '[' → logprob: -9.8750581741333
    3. '[col' → logprob: -12.5000581741333
    4. 'row' → logprob: -13.8750581741333
    5. ' [' → logprob: -14.8750581741333
    6. '	row' → logprob: -15.6250581741333
    7. ' row' → logprob: -15.8750581741333
    8. ',row' → logprob: -15.8750581741333
    9. '           ' → logprob: -16.000057220458984
    10. '(row' → logprob: -16.125057220458984

Token 154: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.008982781320810318
    2. '[col' → logprob: -4.7589826583862305
    3. '[' → logprob: -8.88398265838623
    4. ' ][' → logprob: -9.50898265838623
    5. ']' → logprob: -10.00898265838623
    6. '[row' → logprob: -10.13398265838623
    7. '   ' → logprob: -10.63398265838623
    8. '       ' → logprob: -11.63398265838623
    9. '<|end|>' → logprob: -11.88398265838623
    10. '"][' → logprob: -12.13398265838623

Token 155: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -8.721228368813172e-05
    2. ' col' → logprob: -9.375086784362793
    3. '[col' → logprob: -13.500086784362793
    4. '	col' → logprob: -14.250086784362793
    5. '   ' → logprob: -16.87508773803711
    6. '(col' → logprob: -17.00008773803711
    7. 'colm' → logprob: -17.25008773803711
    8. '
' → logprob: -17.50008773803711
    9. ' ' → logprob: -17.75008773803711
    10. '```' → logprob: -18.12508773803711

Token 156: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.26013827323913574
    2. ' >' → logprob: -1.7601382732391357
    3. '==' → logprob: -3.0101382732391357
    4. ' ==' → logprob: -4.885138511657715
    5. '>x' → logprob: -9.260138511657715
    6. ']==' → logprob: -11.135138511657715
    7. ' ' → logprob: -11.135138511657715
    8. ']' → logprob: -11.635138511657715
    9. '=' → logprob: -11.635138511657715
    10. '<' → logprob: -11.760138511657715

Token 157: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0395088829100132
    2. ' >' → logprob: -3.289508819580078
    3. '==' → logprob: -6.664508819580078
    4. ' ==' → logprob: -9.039508819580078
    5. '>x' → logprob: -9.664508819580078
    6. '>T' → logprob: -12.664508819580078
    7. '>=' → logprob: -13.664508819580078
    8. '>`' → logprob: -14.164508819580078
    9. '>b' → logprob: -14.539508819580078
    10. ' ' → logprob: -14.539508819580078

Token 158: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11285169422626495
    2. ' x' → logprob: -2.237851619720459
    3. '	x' → logprob: -11.237852096557617
    4. ' ' → logprob: -12.237852096557617
    5. '0' → logprob: -12.987852096557617
    6. '=x' → logprob: -13.237852096557617
    7. '   ' → logprob: -13.737852096557617
    8. '(x' → logprob: -14.237852096557617
    9. '  ' → logprob: -14.425352096557617
    10. '=' → logprob: -14.675352096557617

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00046749215107411146
    2. ':
' → logprob: -7.750467300415039
    3. '):' → logprob: -11.375467300415039
    4. '               ' → logprob: -12.000467300415039
    5. '=' → logprob: -12.125467300415039
    6. '           ' → logprob: -12.250467300415039
    7. ' :' → logprob: -12.625467300415039
    8. '<|end|>' → logprob: -13.375467300415039
    9. '):
' → logprob: -14.500467300415039
    10. '                   ' → logprob: -14.750467300415039

Token 160: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07113788276910782
    2. '                       ' → logprob: -3.3211379051208496
    3. '               ' → logprob: -3.6961379051208496
    4. ':' → logprob: -6.44613790512085
    5. '                           ' → logprob: -6.69613790512085
    6. '                    ' → logprob: -7.07113790512085
    7. '                    
' → logprob: -7.07113790512085
    8. '           ' → logprob: -7.69613790512085
    9. 'T' → logprob: -7.82113790512085
    10. '                ' → logprob: -7.82113790512085

Token 161: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.04541238769888878
    2. ' T' → logprob: -3.170412302017212
    3. '                   ' → logprob: -6.295412540435791
    4. '                       ' → logprob: -7.670412540435791
    5. '                    ' → logprob: -10.170412063598633
    6. '   ' → logprob: -10.795412063598633
    7. '               ' → logprob: -10.920412063598633
    8. '                     ' → logprob: -12.545412063598633
    9. '           ' → logprob: -12.795412063598633
    10. '       ' → logprob: -12.920412063598633

Token 162: 'BL' (ID: 16350)
  Prédit: 'BL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BL' → logprob: -4.763666947837919e-05
    2. 'B' → logprob: -10.00004768371582
    3. 'BLE' → logprob: -14.00004768371582
    4. ' BL' → logprob: -14.50004768371582
    5. 'BLL' → logprob: -14.50004768371582
    6. '   ' → logprob: -16.00004768371582
    7. '           ' → logprob: -17.37504768371582
    8. '       ' → logprob: -17.75004768371582
    9. ' B' → logprob: -17.75004768371582
    10. 'L' → logprob: -17.75004768371582

Token 163: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -1.9385402993066236e-05
    2. '[' → logprob: -11.000019073486328
    3. '[col' → logprob: -13.000019073486328
    4. ' [' → logprob: -16.250019073486328
    5. ' ' → logprob: -17.000019073486328
    6. '][' → logprob: -17.125019073486328
    7. '[
' → logprob: -17.625019073486328
    8. '	row' → logprob: -17.625019073486328
    9. '<|end|>' → logprob: -17.625019073486328
    10. ',row' → logprob: -17.750019073486328

Token 164: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00010568885772954673
    2. '[col' → logprob: -10.250105857849121
    3. '[row' → logprob: -10.875105857849121
    4. '[' → logprob: -10.875105857849121
    5. ']' → logprob: -11.000105857849121
    6. ' ][' → logprob: -12.250105857849121
    7. '"][' → logprob: -12.625105857849121
    8. '<|end|>' → logprob: -12.875105857849121
    9. ']][' → logprob: -13.625105857849121
    10. ''][' → logprob: -13.625105857849121

Token 165: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -5.080963092041202e-06
    2. ' col' → logprob: -12.250004768371582
    3. '[col' → logprob: -15.875004768371582
    4. '	col' → logprob: -17.5000057220459
    5. 'colm' → logprob: -18.5000057220459
    6. 'coln' → logprob: -18.6250057220459
    7. '(col' → logprob: -19.1250057220459
    8. 'cal' → logprob: -20.1250057220459
    9. ',col' → logprob: -20.1250057220459
    10. 'coli' → logprob: -20.5000057220459

Token 166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4563913345336914
    2. '=' → logprob: -1.7063913345336914
    3. ' =' → logprob: -1.7063913345336914
    4. ' ]' → logprob: -6.331391334533691
    5. ']=' → logprob: -6.456391334533691
    6. ')' → logprob: -10.206391334533691
    7. ' ' → logprob: -13.081391334533691
    8. ')=' → logprob: -13.956391334533691
    9. '=x' → logprob: -13.956391334533691
    10. '}' → logprob: -14.456391334533691

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022443771362305
    2. '=' → logprob: -1.910224437713623
    3. '=x' → logprob: -16.03522491455078
    4. '＝' → logprob: -16.66022491455078
    5. ' ' → logprob: -16.91022491455078
    6. ' =
' → logprob: -17.53522491455078
    7. '.=' → logprob: -18.16022491455078
    8. '=

' → logprob: -19.16022491455078
    9. '=
' → logprob: -19.78522491455078
    10. '<|end|>' → logprob: -20.03522491455078

Token 168: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011047814972698689
    2. ' x' → logprob: -4.511047840118408
    3. '	x' → logprob: -18.01104736328125
    4. '                   ' → logprob: -20.13604736328125
    5. ' ' → logprob: -20.63604736328125
    6. '(x' → logprob: -20.76104736328125
    7. '               ' → logprob: -21.76104736328125
    8. '   ' → logprob: -22.01104736328125
    9. ')x' → logprob: -22.76104736328125
    10. '[x' → logprob: -22.88604736328125

Token 169: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11077406257390976
    2. 'return' → logprob: -3.110774040222168
    3. '<|end|>' → logprob: -4.235774040222168
    4. ')' → logprob: -4.610774040222168
    5. ' return' → logprob: -4.610774040222168
    6. '       ' → logprob: -4.610774040222168
    7. '    ' → logprob: -5.360774040222168
    8. '\n' → logprob: -5.985774040222168
    9. ' ' → logprob: -6.360774040222168
    10. '	return' → logprob: -6.485774040222168

Token 171: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3602089583873749
    2. 'return' → logprob: -1.4852089881896973
    3. '   ' → logprob: -2.6102089881896973
    4. ' return' → logprob: -7.235208988189697
    5. 'for' → logprob: -7.235208988189697
    6. ' print' → logprob: -7.860208988189697
    7. 'if' → logprob: -8.485208511352539
    8. ')' → logprob: -8.610208511352539
    9. '    ' → logprob: -9.860208511352539
    10. 'main' → logprob: -9.985208511352539

Token 172: '("' (ID: 568)
  Prédit: '(T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.3959124684333801
    2. '(' → logprob: -1.1459124088287354
    3. '(max' → logprob: -5.1459126472473145
    4. '()' → logprob: -5.8959126472473145
    5. '(sum' → logprob: -8.145912170410156
    6. '(min' → logprob: -9.895912170410156
    7. '(
' → logprob: -10.145912170410156
    8. ' (' → logprob: -11.270912170410156
    9. '(

' → logprob: -12.145912170410156
    10. '("' → logprob: -12.145912170410156

Token 173: '{}".' (ID: 102439)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0017893016338348389
    2. '(T' → logprob: -6.751789093017578
    3. ' T' → logprob: -7.501789093017578
    4. '[T' → logprob: -11.001789093017578
    5. 'max' → logprob: -11.501789093017578
    6. '0' → logprob: -11.876789093017578
    7. '{' → logprob: -12.001789093017578
    8. '   ' → logprob: -12.001789093017578
    9. 'min' → logprob: -12.126789093017578
    10. '"T' → logprob: -12.751789093017578

Token 174: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -3.292907877039397e-06
    2. ' format' → logprob: -13.00000286102295
    3. 'form' → logprob: -14.25000286102295
    4. 'forma' → logprob: -15.75000286102295
    5. 'join' → logprob: -17.375003814697266
    6. 'print' → logprob: -17.625003814697266
    7. 'f' → logprob: -18.125003814697266
    8. 'str' → logprob: -18.125003814697266
    9. '(format' → logprob: -18.125003814697266
    10. ' ' → logprob: -18.250003814697266

Token 175: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.00030424181022681296
    2. '(' → logprob: -8.500304222106934
    3. '(max' → logprob: -9.500304222106934
    4. '(min' → logprob: -10.875304222106934
    5. ' (' → logprob: -13.375304222106934
    6. '(sum' → logprob: -13.375304222106934
    7. 'T' → logprob: -13.500304222106934
    8. '(int' → logprob: -14.125304222106934
    9. 'max' → logprob: -15.250304222106934
    10. '(
' → logprob: -15.375304222106934

Token 176: 'BL' (ID: 16350)
  Prédit: 'BL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BL' → logprob: -2.0100624169572257e-05
    2. 'B' → logprob: -11.750020027160645
    3. 'L' → logprob: -12.750020027160645
    4. '1' → logprob: -12.750020027160645
    5. ' BL' → logprob: -13.625020027160645
    6. '(B' → logprob: -14.250020027160645
    7. 'PL' → logprob: -14.625020027160645
    8. ')' → logprob: -14.750020027160645
    9. '(num' → logprob: -14.875020027160645
    10. 'AB' → logprob: -14.875020027160645

Token 177: '[row' (ID: 35899)
  Prédit: '[num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[num' → logprob: -0.31360214948654175
    2. '[-' → logprob: -1.3136022090911865
    3. '[' → logprob: -8.313602447509766
    4. '[len' → logprob: -9.813602447509766
    5. '[row' → logprob: -10.563602447509766
    6. '[n' → logprob: -11.438602447509766
    7. '   ' → logprob: -14.188602447509766
    8. 'num' → logprob: -14.313602447509766
    9. '[col' → logprob: -14.938602447509766
    10. '  ' → logprob: -15.188602447509766

Token 178: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.049006298184394836
    2. '[col' → logprob: -3.424006223678589
    3. '[num' → logprob: -4.299006462097168
    4. '   ' → logprob: -7.299006462097168
    5. '][-' → logprob: -7.424006462097168
    6. ' ][' → logprob: -9.299006462097168
    7. '[-' → logprob: -10.049006462097168
    8. ',col' → logprob: -10.174006462097168
    9. '[len' → logprob: -10.299006462097168
    10. ',num' → logprob: -10.424006462097168

Token 179: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -1.8312570318812504e-05
    2. ' col' → logprob: -11.000018119812012
    3. 'num' → logprob: -13.875018119812012
    4. '0' → logprob: -15.375018119812012
    5. '   ' → logprob: -16.125019073486328
    6. '[col' → logprob: -16.500019073486328
    7. '(col' → logprob: -17.000019073486328
    8. 'co' → logprob: -17.375019073486328
    9. 'coln' → logprob: -17.625019073486328
    10. ' ' → logprob: -17.625019073486328

Token 180: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009057454881258309
    2. ')' → logprob: -7.125905513763428
    3. ']))' → logprob: -9.875905990600586
    4. ')))' → logprob: -10.375905990600586
    5. '])' → logprob: -11.250905990600586
    6. ' ))' → logprob: -13.375905990600586
    7. '}))' → logprob: -13.500905990600586
    8. '))
' → logprob: -13.750905990600586
    9. '+' → logprob: -14.875905990600586
    10. ']' → logprob: -15.375905990600586

Token 181: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 182: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005994443781673908
    2. '__' → logprob: -5.1309943199157715
    3. ' ' → logprob: -10.38099479675293
    4. '_' → logprob: -10.88099479675293
    5. ' _' → logprob: -11.25599479675293
    6. ' ' → logprob: -14.00599479675293
    7. '_name' → logprob: -14.13099479675293
    8. '___' → logprob: -15.25599479675293
    9. ' ​' → logprob: -15.50599479675293
    10. '  ' → logprob: -15.50599479675293

Token 183: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0030159761663526297
    2. ' ==' → logprob: -6.253015995025635
    3. '==' → logprob: -7.378015995025635
    4. ' __' → logprob: -7.878015995025635
    5. '_' → logprob: -9.878015518188477
    6. 'name' → logprob: -11.378015518188477
    7. '=="' → logprob: -11.628015518188477
    8. '_name' → logprob: -13.253015518188477
    9. '___' → logprob: -13.253015518188477
    10. '__.__' → logprob: -13.753015518188477

Token 184: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.7146746763028204e-05
    2. '==' → logprob: -10.50003719329834
    3. '__.__' → logprob: -11.87503719329834
    4. '=="' → logprob: -14.00003719329834
    5. '___' → logprob: -14.25003719329834
    6. '_' → logprob: -15.12503719329834
    7. '____' → logprob: -15.25003719329834
    8. '__["' → logprob: -15.62503719329834
    9. ' ==' → logprob: -15.75003719329834
    10. '__.' → logprob: -16.000036239624023

Token 185: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7889219522476196
    2. '==' → logprob: -1.0389219522476196
    3. ' ==' → logprob: -1.6639219522476196
    4. '=="' → logprob: -6.28892183303833
    5. '__.__' → logprob: -8.288922309875488
    6. '=='' → logprob: -9.413922309875488
    7. '__["' → logprob: -9.913922309875488
    8. '.' → logprob: -10.038922309875488
    9. '.__' → logprob: -10.288922309875488
    10. '[' → logprob: -10.413922309875488

Token 186: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.062195226550102234
    2. ''' → logprob: -2.812195301055908
    3. ' "__' → logprob: -8.43719482421875
    4. ' '__' → logprob: -11.81219482421875
    5. '__' → logprob: -12.81219482421875
    6. '"user' → logprob: -15.81219482421875
    7. ''"' → logprob: -16.18719482421875
    8. ' "' → logprob: -16.31219482421875
    9. '"_' → logprob: -16.31219482421875
    10. '("__' → logprob: -16.56219482421875

Token 187: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0020013193134218454
    2. 'name' → logprob: -6.2520012855529785
    3. '__' → logprob: -9.627001762390137
    4. '_main' → logprob: -12.752001762390137
    5. '__':
' → logprob: -14.002001762390137
    6. ' main' → logprob: -14.377001762390137
    7. '"' → logprob: -14.877001762390137
    8. '```' → logprob: -14.877001762390137
    9. '_MAIN' → logprob: -15.002001762390137
    10. '   ' → logprob: -15.252001762390137

Token 188: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.38692522048950195
    2. '__':
' → logprob: -1.136925220489502
    3. '__:' → logprob: -10.136924743652344
    4. '__":
' → logprob: -11.761924743652344
    5. '__.' → logprob: -12.761924743652344
    6. '__('' → logprob: -13.136924743652344
    7. '_' → logprob: -14.011924743652344
    8. '('__' → logprob: -15.386924743652344
    9. '___' → logprob: -15.761924743652344
    10. '()' → logprob: -15.886924743652344

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1768568903207779
    2. ' main' → logprob: -1.9268568754196167
    3. '    
' → logprob: -5.051856994628906
    4. '	main' → logprob: -5.301856994628906
    5. 'main' → logprob: -5.676856994628906
    6. '<|end|>' → logprob: -7.051856994628906
    7. '(main' → logprob: -8.676856994628906
    8. '_main' → logprob: -9.051856994628906
    9. ' 
' → logprob: -9.051856994628906
    10. '
' → logprob: -9.426856994628906

Token 190: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -8.2994620242971e-06
    2. ' main' → logprob: -11.750008583068848
    3. '	main' → logprob: -15.250008583068848
    4. '   ' → logprob: -16.12500762939453
    5. '  ' → logprob: -20.62500762939453
    6. ' ' → logprob: -21.12500762939453
    7. '.main' → logprob: -21.50000762939453
    8. '_main' → logprob: -21.50000762939453
    9. '(main' → logprob: -22.12500762939453
    10. '    
' → logprob: -23.12500762939453

Token 191: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7650690674781799
    2. '<|end|>' → logprob: -1.3900690078735352
    3. '(' → logprob: -2.515069007873535
    4. '[' → logprob: -2.640069007873535
    5. '()' → logprob: -3.140069007873535
    6. ':' → logprob: -3.515069007873535
    7. '
' → logprob: -3.890069007873535
    8. '```' → logprob: -4.515069007873535
    9. '\n' → logprob: -5.015069007873535
    10. '<|end|>' → logprob: -5.765069007873535


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 189
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 153
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 44.97%
Précision (top 10): 80.95%
================================================================================
