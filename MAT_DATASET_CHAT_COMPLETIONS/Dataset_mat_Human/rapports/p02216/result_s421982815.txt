================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def LS():return [list(x) for x in sys.stdin.readline().split()]
def S():
    res = list(sys.stdin.readline())
    if res[-1] == "\n":
        return res[:-1]
    return res
def IR(n):
    return [I() for i in range(n)]
def LIR(n):
    return [LI() for i in range(n)]
def SR(n):
    return [S() for i in range(n)]
def LSR(n):
    return [LS() for i in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def solve():
    n = I()
    a = LI()
    print(["First","Second"][((n&1)&(1^sum(a)&1))|((1^n&1)&(1^sum(a)&1)&(1^min(a)&1))])
    return

#Solve
if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'usr' (ID: 15943)
  → Token d'amorce (pas de prédiction)

Token 2: '/bin' (ID: 20950)
  → Token d'amorce (pas de prédiction)

Token 3: '/env' (ID: 34630)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0009450533543713391
    2. '/env' → logprob: -7.625945091247559
    3. '/bin' → logprob: -8.125945091247559
    4. '/python' → logprob: -8.875945091247559
    5. '/bash' → logprob: -11.875945091247559
    6. '/usr' → logprob: -12.125945091247559
    7. '/b' → logprob: -13.000945091247559
    8. '#!/' → logprob: -13.500945091247559
    9. '/dev' → logprob: -13.875945091247559
    10. '```' → logprob: -14.250945091247559

Token 4: ' python' (ID: 22752)
  Prédit: ' python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' python' → logprob: -0.339009165763855
    2. 'python' → logprob: -1.339009165763855
    3. '/python' → logprob: -3.8390092849731445
    4. ' ' → logprob: -6.0890092849731445
    5. '/' → logprob: -7.3390092849731445
    6. '```' → logprob: -8.589009284973145
    7. 'b' → logprob: -8.714009284973145
    8. ' bash' → logprob: -9.089009284973145
    9. 'p' → logprob: -9.214009284973145
    10. ' Python' → logprob: -9.339009284973145

Token 5: '3' (ID: 18)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4196628332138062
    2. '+' → logprob: -1.6696628332138062
    3. '#!/' → logprob: -1.9196628332138062
    4. '-' → logprob: -2.0446629524230957
    5. '```' → logprob: -2.2946629524230957
    6. '/' → logprob: -2.6696629524230957
    7. 'b' → logprob: -4.169662952423096
    8. '>' → logprob: -4.294662952423096
    9. '﻿' → logprob: -4.419662952423096
    10. '\' → logprob: -4.794662952423096

Token 6: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14317889511585236
    2. '\n' → logprob: -3.268178939819336
    3. '```' → logprob: -3.518178939819336
    4. '\' → logprob: -3.643178939819336
    5. '#!/' → logprob: -4.393178939819336
    6. '>' → logprob: -5.143178939819336
    7. '-' → logprob: -5.268178939819336
    8. '!' → logprob: -6.393178939819336
    9. '<|end|>' → logprob: -6.393178939819336
    10. '#!' → logprob: -6.518178939819336

Token 7: 'from' (ID: 2845)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4578990936279297
    2. '#!/' → logprob: -1.9578990936279297
    3. '```' → logprob: -2.5828990936279297
    4. '>' → logprob: -3.2078990936279297
    5. '-' → logprob: -3.7078990936279297
    6. '\' → logprob: -3.9578990936279297
    7. '!' → logprob: -3.9578990936279297
    8. '#!' → logprob: -4.20789909362793
    9. '/' → logprob: -4.83289909362793
    10. '/bin' → logprob: -5.45789909362793

Token 8: ' collections' (ID: 22690)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17334705591201782
    2. ' os' → logprob: -1.923346996307373
    3. ' import' → logprob: -5.173346996307373
    4. ' sys' → logprob: -6.048346996307373
    5. ' python' → logprob: -6.048346996307373
    6. ' collections' → logprob: -7.423346996307373
    7. ' math' → logprob: -7.548346996307373
    8. ' space' → logprob: -7.923346996307373
    9. ' functools' → logprob: -8.548347473144531
    10. ' pathlib' → logprob: -9.173347473144531

Token 9: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5899453163146973
    2. ' import' → logprob: -0.8399453163146973
    3. '.' → logprob: -4.339945316314697
    4. '.Counter' → logprob: -7.714945316314697
    5. '```' → logprob: -8.589944839477539
    6. '.import' → logprob: -8.714944839477539
    7. '_import' → logprob: -10.964944839477539
    8. '_' → logprob: -11.339944839477539
    9. '	import' → logprob: -11.464944839477539
    10. ' .' → logprob: -11.714944839477539

Token 10: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.017119018360972404
    2. ' deque' → logprob: -4.39211893081665
    3. ' Counter' → logprob: -5.89211893081665
    4. 'deque' → logprob: -7.76711893081665
    5. ' abc' → logprob: -8.142119407653809
    6. ' collections' → logprob: -8.267119407653809
    7. 'default' → logprob: -8.392119407653809
    8. ' ' → logprob: -8.517119407653809
    9. ' counter' → logprob: -8.642119407653809
    10. ' default' → logprob: -8.892119407653809

Token 11: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34070733189582825
    2. '
' → logprob: -2.715707302093506
    3. '' → logprob: -2.715707302093506
    4. ' 
' → logprob: -3.340707302093506
    5. ' 

' → logprob: -3.465707302093506
    6. '

' → logprob: -3.590707302093506
    7. '```' → logprob: -4.215707302093506
    8. '<|end|>' → logprob: -4.215707302093506
    9. '\' → logprob: -4.965707302093506
    10. '  
' → logprob: -5.840707302093506

Token 12: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.7488632202148438
    2. ' Counter' → logprob: -1.3738632202148438
    3. 'deque' → logprob: -1.4988632202148438
    4. 'Counter' → logprob: -3.4988632202148438
    5. ' Ordered' → logprob: -4.123863220214844
    6. 'Ordered' → logprob: -6.123863220214844
    7. 'named' → logprob: -6.998863220214844
    8. ' named' → logprob: -6.998863220214844
    9. ' abc' → logprob: -9.873863220214844
    10. ' counter' → logprob: -10.873863220214844

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14387968182563782
    2. '

' → logprob: -2.1438796520233154
    3. '
' → logprob: -4.8938798904418945
    4. '' → logprob: -6.2688798904418945
    5. ' 

' → logprob: -6.5188798904418945
    6. '```' → logprob: -6.7688798904418945
    7. '


' → logprob: -7.1438798904418945
    8. '\n' → logprob: -7.1438798904418945
    9. '<|end|>' → logprob: -7.1438798904418945
    10. 'import' → logprob: -7.6438798904418945

Token 14: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2833423614501953
    2. '
' → logprob: -1.5333423614501953
    3. '<|end|>' → logprob: -5.033342361450195
    4. ' 

' → logprob: -5.158342361450195
    5. '' → logprob: -5.408342361450195
    6. 'd' → logprob: -6.033342361450195
    7. '```' → logprob: -6.158342361450195
    8. 'import' → logprob: -6.283342361450195
    9. '
' → logprob: -6.533342361450195
    10. '\n' → logprob: -6.783342361450195

Token 15: ' heap' (ID: 37237)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.09864561259746552
    2. ' typing' → logprob: -3.5986456871032715
    3. ' ' → logprob: -3.7236456871032715
    4. ' sys' → logprob: -3.8486456871032715
    5. ' collections' → logprob: -5.3486456871032715
    6. ' heap' → logprob: -5.3486456871032715
    7. ' math' → logprob: -5.4736456871032715
    8. ' os' → logprob: -5.8486456871032715
    9. ' functools' → logprob: -6.9736456871032715
    10. ' datetime' → logprob: -7.0986456871032715

Token 16: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. 'queue' → logprob: -16.75
    3. 'import' → logprob: -16.875
    4. ' queue' → logprob: -18.375
    5. 's' → logprob: -18.75
    6. ' q' → logprob: -18.75
    7. 'dict' → logprob: -19.0
    8. '.' → logprob: -19.125
    9. ' ' → logprob: -19.375
    10. 'a' → logprob: -19.5

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.003248651046305895
    2. 'import' → logprob: -5.753248691558838
    3. ' ' → logprob: -9.62824821472168
    4. '	import' → logprob: -13.50324821472168
    5. '_import' → logprob: -13.87824821472168
    6. '<|end|>' → logprob: -13.87824821472168
    7. ' imports' → logprob: -14.25324821472168
    8. ' importar' → logprob: -15.62824821472168
    9. ' Import' → logprob: -16.00324821472168
    10. ' impor' → logprob: -16.12824821472168

Token 18: ' he' (ID: 501)
  Prédit: ' he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' he' → logprob: -0.013486186042428017
    2. 'he' → logprob: -4.513486385345459
    3. ' heap' → logprob: -6.388486385345459
    4. ' ' → logprob: -8.0134859085083
    5. 'heap' → logprob: -8.5134859085083
    6. ' n' → logprob: -9.0134859085083
    7. 'n' → logprob: -11.0134859085083
    8. '.he' → logprob: -11.1384859085083
    9. ' merge' → logprob: -11.2634859085083
    10. '```' → logprob: -11.2634859085083

Token 19: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.008627813309431076
    2. 'ap' → logprob: -4.758627891540527
    3. 'a' → logprob: -11.258627891540527
    4. 'aq' → logprob: -15.633627891540527
    5. 'ап' → logprob: -16.13362693786621
    6. 'apl' → logprob: -17.63362693786621
    7. 'aps' → logprob: -17.88362693786621
    8. 'appen' → logprob: -17.88362693786621
    9. '```' → logprob: -18.38362693786621
    10. '[' → logprob: -18.75862693786621

Token 20: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.0007102862582542002
    2. 'op' → logprob: -7.250710487365723
    3. 'u' → logprob: -15.875710487365723
    4. 'us' → logprob: -16.250709533691406
    5. 'ut' → logprob: -16.500709533691406
    6. '```' → logprob: -17.750709533691406
    7. 'push' → logprob: -18.125709533691406
    8. 'o' → logprob: -18.125709533691406
    9. 'USH' → logprob: -18.750709533691406
    10. 'opleft' → logprob: -18.750709533691406

Token 21: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.053609155118465424
    2. '<|end|>' → logprob: -3.4286091327667236
    3. ',' → logprob: -4.178609371185303
    4. ' ,' → logprob: -6.553609371185303
    5. 'he' → logprob: -7.053609371185303
    6. ' he' → logprob: -7.178609371185303
    7. '  ' → logprob: -8.428608894348145
    8. ' 
' → logprob: -8.428608894348145
    9. 'import' → logprob: -8.678608894348145
    10. '  
' → logprob: -8.678608894348145

Token 22: ' he' (ID: 501)
  Prédit: 'he'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.38692429661750793
    2. ' he' → logprob: -1.1369242668151855
    3. 'heap' → logprob: -10.761924743652344
    4. ' ' → logprob: -11.636924743652344
    5. '.he' → logprob: -12.011924743652344
    6. ' heap' → logprob: -12.761924743652344
    7. 'hev' → logprob: -13.386924743652344
    8. '_he' → logprob: -13.386924743652344
    9. 'h' → logprob: -13.574424743652344
    10. '```' → logprob: -13.574424743652344

Token 23: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0024781543761491776
    2. 'ap' → logprob: -6.002478122711182
    3. 'a' → logprob: -13.75247859954834
    4. ' app' → logprob: -14.87747859954834
    5. 'ап' → logprob: -15.25247859954834
    6. '	app' → logprob: -15.75247859954834
    7. '_app' → logprob: -15.87747859954834
    8. 'appt' → logprob: -16.127477645874023
    9. 'appen' → logprob: -16.502477645874023
    10. '(app' → logprob: -17.002477645874023

Token 24: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5759692788124084
    2. 'ush' → logprob: -0.8259692788124084
    3. 'o' → logprob: -10.700969696044922
    4. 'opp' → logprob: -12.700969696044922
    5. '   ' → logprob: -14.325969696044922
    6. 'opleft' → logprob: -14.700969696044922
    7. 'us' → logprob: -14.825969696044922
    8. '```' → logprob: -14.825969696044922
    9. 'p' → logprob: -14.950969696044922
    10. 'osh' → logprob: -15.325969696044922

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4394325911998749
    2. '

' → logprob: -1.0644326210021973
    3. '
' → logprob: -5.939432621002197
    4. '' → logprob: -6.439432621002197
    5. '```' → logprob: -6.439432621002197
    6. ' 

' → logprob: -6.689432621002197
    7. '\n' → logprob: -6.814432621002197
    8. '<|end|>' → logprob: -7.814432621002197
    9. 'def' → logprob: -7.939432621002197
    10. '


' → logprob: -8.064432144165039

Token 26: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5922309756278992
    2. '

' → logprob: -0.8422309756278992
    3. '' → logprob: -5.092230796813965
    4. 'import' → logprob: -5.967230796813965
    5. 'def' → logprob: -6.342230796813965
    6. ' 

' → logprob: -6.967230796813965
    7. '```' → logprob: -6.967230796813965
    8. '


' → logprob: -7.092230796813965
    9. 'd' → logprob: -7.467230796813965
    10. '
' → logprob: -7.592230796813965

Token 27: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1752612292766571
    2. ' typing' → logprob: -2.0502612590789795
    3. ' math' → logprob: -3.8002612590789795
    4. ' sys' → logprob: -5.0502610206604
    5. ' queue' → logprob: -7.1752610206604
    6. 'typing' → logprob: -7.4252610206604
    7. ' functools' → logprob: -7.4252610206604
    8. ' collections' → logprob: -7.5502610206604
    9. ' datetime' → logprob: -8.550261497497559
    10. 'math' → logprob: -8.675261497497559

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0058177560567855835
    2. 'import' → logprob: -5.255817890167236
    3. '.' → logprob: -8.005817413330078
    4. ' ' → logprob: -8.880817413330078
    5. '	import' → logprob: -10.380817413330078
    6. '.import' → logprob: -10.630817413330078
    7. ' .' → logprob: -10.755817413330078
    8. '<|end|>' → logprob: -11.005817413330078
    9. ' itertools' → logprob: -12.880817413330078
    10. '_import' → logprob: -13.005817413330078

Token 29: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.6671750545501709
    2. ' count' → logprob: -1.667175054550171
    3. ' combinations' → logprob: -2.417175054550171
    4. ' group' → logprob: -2.542175054550171
    5. 'count' → logprob: -2.917175054550171
    6. ' accumulate' → logprob: -3.417175054550171
    7. 'com' → logprob: -4.54217529296875
    8. ' chain' → logprob: -4.54217529296875
    9. ' cycle' → logprob: -5.29217529296875
    10. ' product' → logprob: -5.29217529296875

Token 30: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6248627305030823
    2. '

' → logprob: -0.8748627305030823
    3. 'import' → logprob: -4.6248626708984375
    4. ' 

' → logprob: -4.9998626708984375
    5. '\n' → logprob: -5.2498626708984375
    6. '' → logprob: -5.4998626708984375
    7. '<|end|>' → logprob: -5.4998626708984375
    8. 'def' → logprob: -5.6248626708984375
    9. 'n' → logprob: -5.7498626708984375
    10. '```' → logprob: -5.8748626708984375

Token 31: ' accumulate' (ID: 74226)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.8386747241020203
    2. 'com' → logprob: -0.9636747241020203
    3. ' product' → logprob: -1.963674783706665
    4. ' combinations' → logprob: -3.213674783706665
    5. 'chain' → logprob: -6.213674545288086
    6. 'group' → logprob: -6.838674545288086
    7. 'count' → logprob: -7.213674545288086
    8. ' group' → logprob: -7.588674545288086
    9. ' chain' → logprob: -7.838674545288086
    10. 'cycle' → logprob: -8.088674545288086

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.582358181476593
    2. '

' → logprob: -0.957358181476593
    3. 'import' → logprob: -3.2073581218719482
    4. '<|end|>' → logprob: -5.207358360290527
    5. ' 

' → logprob: -5.832358360290527
    6. '' → logprob: -6.082358360290527
    7. '#' → logprob: -6.957358360290527
    8. ' 
' → logprob: -7.207358360290527
    9. '```' → logprob: -7.207358360290527
    10. '


' → logprob: -7.207358360290527

Token 33: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7957350611686707
    2. '

' → logprob: -1.0457351207733154
    3. 'import' → logprob: -1.7957351207733154
    4. '<|end|>' → logprob: -4.420734882354736
    5. '\n' → logprob: -5.545734882354736
    6. '#' → logprob: -6.045734882354736
    7. '' → logprob: -6.170734882354736
    8. ' 

' → logprob: -6.295734882354736
    9. ',' → logprob: -7.045734882354736
    10. '


' → logprob: -7.170734882354736

Token 34: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.7303824424743652
    2. ' math' → logprob: -0.8553824424743652
    3. ' ' → logprob: -3.3553824424743652
    4. ' os' → logprob: -3.6053824424743652
    5. ' itertools' → logprob: -3.6053824424743652
    6. ' collections' → logprob: -6.230382442474365
    7. ' functools' → logprob: -7.105382442474365
    8. ' ' → logprob: -7.980382442474365
    9. ' space' → logprob: -8.355382919311523
    10. ' json' → logprob: -9.105382919311523

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11753656715154648
    2. '

' → logprob: -2.7425365447998047
    3. '\n' → logprob: -3.7425365447998047
    4. 'import' → logprob: -5.367536544799805
    5. '#' → logprob: -5.617536544799805
    6. '<|end|>' → logprob: -5.742536544799805
    7. '' → logprob: -5.992536544799805
    8. ',' → logprob: -6.617536544799805
    9. 'n' → logprob: -6.742536544799805
    10. 'a' → logprob: -6.742536544799805

Token 37: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.029690789058804512
    2. ' ' → logprob: -3.904690742492676
    3. ' math' → logprob: -5.279690742492676
    4. ' space' → logprob: -6.154690742492676
    5. ' o' → logprob: -7.404690742492676
    6. ' collections' → logprob: -7.904690742492676
    7. ' itertools' → logprob: -7.904690742492676
    8. ' ​' → logprob: -9.529690742492676
    9. ' ‌' → logprob: -9.904690742492676
    10. ' ' → logprob: -10.029690742492676

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5084542036056519
    2. '

' → logprob: -1.0084542036056519
    3. '' → logprob: -4.133454322814941
    4. '<|end|>' → logprob: -5.258454322814941
    5. '
' → logprob: -5.508454322814941
    6. '#' → logprob: -6.508454322814941
    7. ' 

' → logprob: -6.633454322814941
    8. '\n' → logprob: -6.633454322814941
    9. 'import' → logprob: -7.133454322814941
    10. '


' → logprob: -7.633454322814941

Token 39: 'import' (ID: 561)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.35736310482025146
    2. '
' → logprob: -1.2323631048202515
    3. '' → logprob: -5.232363224029541
    4. '
' → logprob: -6.607363224029541
    5. '#' → logprob: -7.732363224029541
    6. '


' → logprob: -7.732363224029541
    7. '<|end|>' → logprob: -7.857363224029541
    8. '\n' → logprob: -8.607362747192383
    9. ' 

' → logprob: -9.107362747192383
    10. 'import' → logprob: -9.482362747192383

Token 40: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.024964414536952972
    2. ' bis' → logprob: -4.774964332580566
    3. ' itertools' → logprob: -5.649964332580566
    4. ' collections' → logprob: -5.899964332580566
    5. ' functools' → logprob: -6.024964332580566
    6. ' random' → logprob: -6.024964332580566
    7. ' operator' → logprob: -6.274964332580566
    8. 'os' → logprob: -6.524964332580566
    9. ' heap' → logprob: -7.024964332580566
    10. ' o' → logprob: -8.399964332580566

Token 41: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -8.2994620242971e-06
    2. 'e' → logprob: -11.875008583068848
    3. 'ec' → logprob: -14.500008583068848
    4. 't' → logprob: -15.000008583068848
    5. 'ected' → logprob: -15.750008583068848
    6. 'ectl' → logprob: -16.62500762939453
    7. 'ector' → logprob: -16.62500762939453
    8. 'ection' → logprob: -16.87500762939453
    9. '```' → logprob: -17.00000762939453
    10. 'ects' → logprob: -17.62500762939453

Token 42: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.39879053831100464
    2. '
' → logprob: -1.1487905979156494
    3. '' → logprob: -5.39879035949707
    4. '#' → logprob: -6.14879035949707
    5. '
' → logprob: -6.64879035949707
    6. '\n' → logprob: -6.89879035949707
    7. '


' → logprob: -7.14879035949707
    8. '<|end|>' → logprob: -7.39879035949707
    9. ' 

' → logprob: -7.52379035949707
    10. '```' → logprob: -9.02379035949707

Token 43: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5029256939888
    2. '

' → logprob: -1.0029256343841553
    3. '' → logprob: -4.877925872802734
    4. '<|end|>' → logprob: -5.627925872802734
    5. ' 

' → logprob: -5.752925872802734
    6. '
' → logprob: -5.877925872802734
    7. '\n' → logprob: -6.127925872802734
    8. '#' → logprob: -6.127925872802734
    9. ' 
' → logprob: -6.502925872802734
    10. 'import' → logprob: -6.627925872802734

Token 44: ' LI' (ID: 14875)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008162968442775309
    2. '_' → logprob: -7.625816345214844
    3. ' s' → logprob: -9.250816345214844
    4. ' space' → logprob: -10.125816345214844
    5. '<|end|>' → logprob: -10.125816345214844
    6. ' _' → logprob: -11.000816345214844
    7. ' main' → logprob: -11.125816345214844
    8. '_space' → logprob: -11.375816345214844
    9. ' ```' → logprob: -11.500816345214844
    10. ' a' → logprob: -11.625816345214844

Token 45: '():' (ID: 9442)
  Prédit: 'ST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ST' → logprob: -0.4663839340209961
    2. 'st' → logprob: -1.466383934020996
    3. 'N' → logprob: -2.216383934020996
    4. '():' → logprob: -3.966383934020996
    5. 'St' → logprob: -5.466383934020996
    6. 'T' → logprob: -6.341383934020996
    7. 'n' → logprob: -6.591383934020996
    8. 'S' → logprob: -6.591383934020996
    9. 'NT' → logprob: -6.716383934020996
    10. '()' → logprob: -7.341383934020996

Token 46: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3619222044944763
    2. ' ' → logprob: -1.611922264099121
    3. ' []' → logprob: -2.486922264099121
    4. ' list' → logprob: -4.611922264099121
    5. ' map' → logprob: -5.486922264099121
    6. ' input' → logprob: -6.236922264099121
    7. 'return' → logprob: -6.611922264099121
    8. '[]' → logprob: -7.236922264099121
    9. ' int' → logprob: -7.361922264099121
    10. ' n' → logprob: -7.486922264099121

Token 47: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25468751788139343
    2. ' list' → logprob: -1.5046875476837158
    3. 'map' → logprob: -6.129687309265137
    4. ' map' → logprob: -7.879687309265137
    5. 'ist' → logprob: -9.504687309265137
    6. 'int' → logprob: -10.379687309265137
    7. '[' → logprob: -10.754687309265137
    8. '[list' → logprob: -11.254687309265137
    9. 'lis' → logprob: -11.379687309265137
    10. 'li' → logprob: -11.379687309265137

Token 48: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012797261297237128
    2. 'i' → logprob: -9.125127792358398
    3. 'in' → logprob: -11.000127792358398
    4. '*' → logprob: -13.875127792358398
    5. ' int' → logprob: -14.250127792358398
    6. ']int' → logprob: -15.000127792358398
    7. '0' → logprob: -15.375127792358398
    8. '(int' → logprob: -16.8751277923584
    9. ']' → logprob: -17.2501277923584
    10. 'inti' → logprob: -17.6251277923584

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.10231207311153412
    2. '(' → logprob: -2.3523120880126953
    3. '(i' → logprob: -6.352312088012695
    4. '(s' → logprob: -8.727312088012695
    5. '(input' → logprob: -9.102312088012695
    6. '()]' → logprob: -10.602312088012695
    7. ']' → logprob: -11.227312088012695
    8. '(
' → logprob: -11.477312088012695
    9. '(a' → logprob: -11.852312088012695
    10. '(sys' → logprob: -12.102312088012695

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007621031254529953
    2. 'for' → logprob: -7.375761985778809
    3. ' for' → logprob: -10.250761985778809
    4. '(' → logprob: -10.250761985778809
    5. '(x' → logprob: -10.625761985778809
    6. ' )' → logprob: -11.125761985778809
    7. ')]' → logprob: -11.500761985778809
    8. '())' → logprob: -12.750761985778809
    9. ']' → logprob: -13.125761985778809
    10. '()' → logprob: -13.250761985778809

Token 51: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1615258753299713
    2. 'for' → logprob: -2.7865259647369385
    3. '(x' → logprob: -3.1615259647369385
    4. ' for' → logprob: -3.1615259647369385
    5. ']' → logprob: -6.786525726318359
    6. '()]' → logprob: -7.911525726318359
    7. '(s' → logprob: -8.16152572631836
    8. '(sys' → logprob: -8.41152572631836
    9. ')' → logprob: -8.66152572631836
    10. '(i' → logprob: -8.78652572631836

Token 52: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.019787870347499847
    2. 'input' → logprob: -4.019787788391113
    3. ' sys' → logprob: -6.519787788391113
    4. ' x' → logprob: -9.394787788391113
    5. ' ' → logprob: -10.894787788391113
    6. ' raw' → logprob: -10.894787788391113
    7. 'sys' → logprob: -11.894787788391113
    8. '(input' → logprob: -12.019787788391113
    9. '=input' → logprob: -12.269787788391113
    10. ' in' → logprob: -12.519787788391113

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.39740005135536194
    2. 'input' → logprob: -1.8974000215530396
    3. '(input' → logprob: -2.272400140762329
    4. ' input' → logprob: -4.02239990234375
    5. '(' → logprob: -4.14739990234375
    6. '(sys' → logprob: -4.52239990234375
    7. '=sys' → logprob: -4.52239990234375
    8. '=input' → logprob: -4.77239990234375
    9. 'in' → logprob: -5.14739990234375
    10. '.' → logprob: -6.64739990234375

Token 54: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7877081632614136
    2. 'sys' → logprob: -1.2877081632614136
    3. ' sys' → logprob: -1.5377081632614136
    4. ' input' → logprob: -2.912708282470703
    5. '=sys' → logprob: -12.912708282470703
    6. '(sys' → logprob: -13.037708282470703
    7. 'in' → logprob: -13.662708282470703
    8. 's' → logprob: -13.662708282470703
    9. ' ' → logprob: -13.787708282470703
    10. '	sys' → logprob: -14.287708282470703

Token 55: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005712636047974229
    2. '.' → logprob: -7.500571250915527
    3. '.st' → logprob: -12.250571250915527
    4. '.std' → logprob: -12.375571250915527
    5. '.argv' → logprob: -12.500571250915527
    6. '.stdout' → logprob: -12.625571250915527
    7. '.readline' → logprob: -13.375571250915527
    8. 'stdin' → logprob: -15.375571250915527
    9. '(stdin' → logprob: -16.250572204589844
    10. '.s' → logprob: -16.375572204589844

Token 56: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0009510025265626609
    2. '.' → logprob: -7.125950813293457
    3. '.read' → logprob: -8.875950813293457
    4. '.readlines' → logprob: -12.750950813293457
    5. '.re' → logprob: -13.000950813293457
    6. '.r' → logprob: -14.750950813293457
    7. '.stdin' → logprob: -15.000950813293457
    8. '].' → logprob: -15.250950813293457
    9. ' .' → logprob: -15.250950813293457
    10. '().' → logprob: -15.750950813293457

Token 57: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.32387158274650574
    2. '()]' → logprob: -1.3238716125488281
    3. '()' → logprob: -4.573871612548828
    4. '()].' → logprob: -8.448871612548828
    5. '()][' → logprob: -12.073871612548828
    6. '())' → logprob: -12.573871612548828
    7. '()[' → logprob: -12.698871612548828
    8. ' ()' → logprob: -13.448871612548828
    9. ']()' → logprob: -13.573871612548828
    10. '()-' → logprob: -13.573871612548828

Token 58: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.012207402847707272
    2. 'rstrip' → logprob: -4.512207508087158
    3. 'split' → logprob: -6.762207508087158
    4. 'read' → logprob: -13.63720703125
    5. ' strip' → logprob: -14.13720703125
    6. 'decode' → logprob: -15.01220703125
    7. '(strip' → logprob: -19.13720703125
    8. 'rs' → logprob: -19.51220703125
    9. ' split' → logprob: -19.76220703125
    10. 'rst' → logprob: -20.01220703125

Token 59: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -8.292095299111679e-05
    2. '()' → logprob: -9.875082969665527
    3. '(' → logprob: -10.500082969665527
    4. ']' → logprob: -12.875082969665527
    5. '()]
' → logprob: -14.250082969665527
    6. ']()' → logprob: -15.500082969665527
    7. '('' → logprob: -15.750082969665527
    8. '())' → logprob: -15.875082969665527
    9. '()][' → logprob: -16.37508201599121
    10. '()].' → logprob: -17.25008201599121

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08155985921621323
    2. '
' → logprob: -2.581559896469116
    3. '#' → logprob: -7.456559658050537
    4. 'd' → logprob: -7.706559658050537
    5. '' → logprob: -7.831559658050537
    6. '\' → logprob: -8.206560134887695
    7. '

' → logprob: -8.456560134887695
    8. '\n' → logprob: -8.581560134887695
    9. ' 
' → logprob: -9.206560134887695
    10. '
' → logprob: -9.456560134887695

Token 61: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.1198604628443718
    2. 'II' → logprob: -2.6198604106903076
    3. ' I' → logprob: -3.7448604106903076
    4. ' II' → logprob: -4.869860649108887
    5. 'S' → logprob: -6.244860649108887
    6. 'int' → logprob: -6.494860649108887
    7. 'LS' → logprob: -7.369860649108887
    8. 'input' → logprob: -7.369860649108887
    9. 'IN' → logprob: -7.619860649108887
    10. 'IS' → logprob: -7.619860649108887

Token 62: '():' (ID: 9442)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.831085205078125
    2. 'n' → logprob: -0.956085205078125
    3. '():' → logprob: -2.456085205078125
    4. '()' → logprob: -2.706085205078125
    5. 'N' → logprob: -3.831085205078125
    6. 'nit' → logprob: -5.331085205078125
    7. 'np' → logprob: -8.331085205078125
    8. 'NT' → logprob: -8.456085205078125
    9. '(' → logprob: -9.956085205078125
    10. ' nt' → logprob: -10.331085205078125

Token 63: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.05635448545217514
    2. ' int' → logprob: -3.056354522705078
    3. 'return' → logprob: -5.181354522705078
    4. 'int' → logprob: -6.181354522705078
    5. ' ' → logprob: -10.056354522705078
    6. ' retur' → logprob: -12.931354522705078
    7. '=int' → logprob: -13.181354522705078
    8. 'eturn' → logprob: -14.431354522705078
    9. ' ' → logprob: -14.931354522705078
    10. '(int' → logprob: -15.556354522705078

Token 64: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2519395649433136
    2. ' int' → logprob: -1.5019395351409912
    3. 'nt' → logprob: -12.00193977355957
    4. ' nt' → logprob: -13.62693977355957
    5. ' ' → logprob: -13.75193977355957
    6. 'in' → logprob: -13.75193977355957
    7. ' in' → logprob: -15.00193977355957
    8. '  ' → logprob: -15.37693977355957
    9. '(int' → logprob: -15.75193977355957
    10. ' i' → logprob: -16.12693977355957

Token 65: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1008470430970192
    2. '(sys' → logprob: -2.350847005844116
    3. '(input' → logprob: -7.475847244262695
    4. '(int' → logprob: -10.475847244262695
    5. '(
' → logprob: -11.725847244262695
    6. '(system' → logprob: -12.100847244262695
    7. '(s' → logprob: -12.100847244262695
    8. '(x' → logprob: -12.100847244262695
    9. ' (' → logprob: -12.350847244262695
    10. '(System' → logprob: -12.600847244262695

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.038352664560079575
    2. '.' → logprob: -3.2883527278900146
    3. '.readline' → logprob: -8.413352966308594
    4. 'stdin' → logprob: -9.913352966308594
    5. '.stdout' → logprob: -11.163352966308594
    6. '.argv' → logprob: -11.538352966308594
    7. '.std' → logprob: -11.788352966308594
    8. '.read' → logprob: -12.788352966308594
    9. '(stdin' → logprob: -13.788352966308594
    10. '.)' → logprob: -13.788352966308594

Token 67: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5895655751228333
    2. '().' → logprob: -1.4645655155181885
    3. '()' → logprob: -1.5895655155181885
    4. '())' → logprob: -4.714565753936768
    5. 'read' → logprob: -7.839565753936768
    6. ')' → logprob: -7.964565753936768
    7. '.' → logprob: -8.33956527709961
    8. '.read' → logprob: -9.96456527709961
    9. '(' → logprob: -10.46456527709961
    10. '.stdin' → logprob: -10.46456527709961

Token 68: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.49058711528778076
    2. '().' → logprob: -0.9905871152877808
    3. '()' → logprob: -4.11558723449707
    4. '()]' → logprob: -10.99058723449707
    5. ')' → logprob: -11.24058723449707
    6. ' ())' → logprob: -11.74058723449707
    7. '.readline' → logprob: -12.11558723449707
    8. '();)' → logprob: -12.11558723449707
    9. '()[' → logprob: -13.24058723449707
    10. '()))' → logprob: -13.36558723449707

Token 69: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4935646653175354
    2. 'd' → logprob: -1.1185646057128906
    3. '
' → logprob: -3.6185646057128906
    4. '\' → logprob: -3.6185646057128906
    5. '\n' → logprob: -5.493564605712891
    6. 'n' → logprob: -6.743564605712891
    7. '#' → logprob: -6.868564605712891
    8. '' → logprob: -6.868564605712891
    9. ' 
' → logprob: -7.743564605712891
    10. 'de' → logprob: -7.868564605712891

Token 70: ' LS' (ID: 60790)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.14566197991371155
    2. 'LS' → logprob: -2.0206620693206787
    3. 'L' → logprob: -6.1456618309021
    4. 'LI' → logprob: -8.145662307739258
    5. 's' → logprob: -9.145662307739258
    6. ' S' → logprob: -9.145662307739258
    7. 'SI' → logprob: -9.145662307739258
    8. 'Ls' → logprob: -10.145662307739258
    9. 'SL' → logprob: -10.270662307739258
    10. ' LS' → logprob: -10.395662307739258

Token 71: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3874683082103729
    2. '()' → logprob: -1.1374683380126953
    3. '().' → logprob: -8.387468338012695
    4. ' ()' → logprob: -8.887468338012695
    5. '()[' → logprob: -9.637468338012695
    6. '()]' → logprob: -9.762468338012695
    7. '()>' → logprob: -10.012468338012695
    8. '()<' → logprob: -11.637468338012695
    9. '[]' → logprob: -11.762468338012695
    10. ' ():' → logprob: -12.137468338012695

Token 72: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.11421190202236176
    2. 'return' → logprob: -2.2392117977142334
    3. ' sys' → logprob: -7.2392120361328125
    4. ' ' → logprob: -8.614212036132812
    5. 'def' → logprob: -9.239212036132812
    6. '()' → logprob: -9.489212036132812
    7. 'sys' → logprob: -9.489212036132812
    8. ' def' → logprob: -10.364212036132812
    9. ')' → logprob: -10.364212036132812
    10. ' lambda' → logprob: -10.489212036132812

Token 73: ' [' (ID: 723)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.22059060633182526
    2. ' [' → logprob: -2.345590591430664
    3. '[' → logprob: -2.845590591430664
    4. 'sys' → logprob: -3.220590591430664
    5. ' list' → logprob: -5.970590591430664
    6. 'list' → logprob: -7.720590591430664
    7. '[s' → logprob: -7.845590591430664
    8. '[list' → logprob: -7.845590591430664
    9. '(sys' → logprob: -9.095590591430664
    10. ' ' → logprob: -9.845590591430664

Token 74: 'list' (ID: 2641)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.424530435353518e-05
    2. 's' → logprob: -9.500094413757324
    3. 'sys' → logprob: -11.000094413757324
    4. ' x' → logprob: -12.875094413757324
    5. 'str' → logprob: -15.750094413757324
    6. 'input' → logprob: -17.500093460083008
    7. '(x' → logprob: -18.250093460083008
    8. 'l' → logprob: -18.625093460083008
    9. 'w' → logprob: -18.625093460083008
    10. ' sys' → logprob: -19.250093460083008

Token 75: '(x' (ID: 4061)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.757110595703125
    2. '(x' → logprob: -1.632110595703125
    3. '(' → logprob: -1.882110595703125
    4. '(sys' → logprob: -2.007110595703125
    5. '(str' → logprob: -3.632110595703125
    6. '(input' → logprob: -4.132110595703125
    7. '(s' → logprob: -5.132110595703125
    8. '(token' → logprob: -9.507110595703125
    9. 'map' → logprob: -9.757110595703125
    10. '(line' → logprob: -9.757110595703125

Token 76: ')' (ID: 8)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0006718054646626115
    2. '()' → logprob: -8.12567138671875
    3. '(' → logprob: -8.75067138671875
    4. '())' → logprob: -9.50067138671875
    5. '()]' → logprob: -10.12567138671875
    6. '=sys' → logprob: -10.25067138671875
    7. '(s' → logprob: -10.75067138671875
    8. 'sys' → logprob: -11.50067138671875
    9. '(input' → logprob: -11.75067138671875
    10. '(str' → logprob: -11.87567138671875

Token 77: ' for' (ID: 395)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00015312091272789985
    2. '(' → logprob: -9.250153541564941
    3. 'sys' → logprob: -10.625153541564941
    4. '(s' → logprob: -10.750153541564941
    5. '=sys' → logprob: -12.000153541564941
    6. '(system' → logprob: -13.625153541564941
    7. '()' → logprob: -13.750153541564941
    8. '(input' → logprob: -14.250153541564941
    9. '(str' → logprob: -14.500153541564941
    10. '(x' → logprob: -15.250153541564941

Token 78: ' x' (ID: 1215)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3387638330459595
    2. '(sys' → logprob: -1.3387638330459595
    3. 'sys' → logprob: -3.71376371383667
    4. '=sys' → logprob: -7.46376371383667
    5. '(' → logprob: -8.838764190673828
    6. '	sys' → logprob: -9.713764190673828
    7. ' (' → logprob: -12.338764190673828
    8. '/sys' → logprob: -12.838764190673828
    9. '(s' → logprob: -12.963764190673828
    10. '(x' → logprob: -13.588764190673828

Token 79: ' in' (ID: 306)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.1843569278717041
    2. '(' → logprob: -1.809356927871704
    3. '()' → logprob: -5.684356689453125
    4. ' (' → logprob: -7.684356689453125
    5. ' ()' → logprob: -7.809356689453125
    6. '=sys' → logprob: -8.934356689453125
    7. '(s' → logprob: -9.809356689453125
    8. 'sys' → logprob: -9.809356689453125
    9. ' sys' → logprob: -11.184356689453125
    10. '('' → logprob: -11.184356689453125

Token 80: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.38690149784088135
    2. ' sys' → logprob: -1.1369014978408813
    3. '(sys' → logprob: -10.76190185546875
    4. '	sys' → logprob: -12.76190185546875
    5. 'input' → logprob: -13.13690185546875
    6. '=sys' → logprob: -13.51190185546875
    7. 'str' → logprob: -13.88690185546875
    8. ' input' → logprob: -14.13690185546875
    9. ' ' → logprob: -14.13690185546875
    10. 'map' → logprob: -15.26190185546875

Token 81: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00016039233014453202
    2. '.readline' → logprob: -9.750160217285156
    3. '.stdout' → logprob: -10.000160217285156
    4. 'stdin' → logprob: -10.500160217285156
    5. '(stdin' → logprob: -11.500160217285156
    6. '.' → logprob: -11.500160217285156
    7. '.argv' → logprob: -12.625160217285156
    8. '.std' → logprob: -13.000160217285156
    9. '().' → logprob: -13.375160217285156
    10. '.stderr' → logprob: -15.125160217285156

Token 82: '.readline' (ID: 74673)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.9330945611000061
    2. '().' → logprob: -1.1830945014953613
    3. '.readline' → logprob: -1.3080945014953613
    4. '()' → logprob: -3.6830945014953613
    5. '.' → logprob: -5.808094501495361
    6. '()]
' → logprob: -7.558094501495361
    7. '.]' → logprob: -8.18309497833252
    8. '()][' → logprob: -8.30809497833252
    9. ']' → logprob: -8.80809497833252
    10. '()].' → logprob: -9.05809497833252

Token 83: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004992394242435694
    2. '()]' → logprob: -5.504992485046387
    3. '()' → logprob: -7.004992485046387
    4. '()].' → logprob: -12.504992485046387
    5. '()[' → logprob: -14.379992485046387
    6. '()][' → logprob: -14.504992485046387
    7. '())' → logprob: -14.629992485046387
    8. ' ().' → logprob: -15.129992485046387
    9. '().'' → logprob: -15.879992485046387
    10. '()<' → logprob: -16.25499153137207

Token 84: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04872339591383934
    2. 'rstrip' → logprob: -3.2987234592437744
    3. 'split' → logprob: -4.548723220825195
    4. 'decode' → logprob: -10.798723220825195
    5. ' strip' → logprob: -11.298723220825195
    6. 'read' → logprob: -11.423723220825195
    7. 'str' → logprob: -14.923723220825195
    8. ' split' → logprob: -16.048723220825195
    9. '-strip' → logprob: -16.298723220825195
    10. 'replace' → logprob: -16.673723220825195

Token 85: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0001249925117008388
    2. '()' → logprob: -9.25012493133545
    3. '(' → logprob: -11.00012493133545
    4. ']' → logprob: -11.50012493133545
    5. ']()' → logprob: -13.87512493133545
    6. '()]
' → logprob: -15.00012493133545
    7. ')]' → logprob: -15.50012493133545
    8. '())' → logprob: -15.87512493133545
    9. '()][' → logprob: -16.125125885009766
    10. ' ()' → logprob: -16.750125885009766

Token 86: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03421252965927124
    2. '()' → logprob: -4.409212589263916
    3. '()
' → logprob: -5.034212589263916
    4. '\' → logprob: -5.284212589263916
    5. 'd' → logprob: -5.409212589263916
    6. '
' → logprob: -5.909212589263916
    7. '(' → logprob: -7.409212589263916
    8. '#' → logprob: -7.659212589263916
    9. '(
' → logprob: -7.659212589263916
    10. '```' → logprob: -8.534212112426758

Token 87: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.005107695236802101
    2. ' S' → logprob: -6.005107879638672
    3. 'L' → logprob: -6.505107879638672
    4. 'LS' → logprob: -7.130107879638672
    5. 'I' → logprob: -8.380107879638672
    6. 'LI' → logprob: -10.005107879638672
    7. 's' → logprob: -10.380107879638672
    8. ' L' → logprob: -11.630107879638672
    9. '()' → logprob: -12.755107879638672
    10. 'input' → logprob: -12.880107879638672

Token 88: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01817312277853489
    2. '()' → logprob: -4.0181732177734375
    3. ' ():' → logprob: -11.768173217773438
    4. '().' → logprob: -12.643173217773438
    5. ' ()' → logprob: -12.643173217773438
    6. '()>' → logprob: -12.893173217773438
    7. '():
' → logprob: -13.393173217773438
    8. '()]' → logprob: -13.643173217773438
    9. '(' → logprob: -14.143173217773438
    10. '())' → logprob: -14.518173217773438

Token 89: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5567467212677002
    2. ' return' → logprob: -1.1817467212677002
    3. ':return' → logprob: -2.5567467212677
    4. '():' → logprob: -3.8067467212677
    5. ':' → logprob: -5.306746482849121
    6. '()' → logprob: -5.431746482849121
    7. '   ' → logprob: -5.931746482849121
    8. ' ' → logprob: -6.181746482849121
    9. ' :' → logprob: -6.806746482849121
    10. '=' → logprob: -7.431746482849121

Token 90: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.028423070907592773
    2. 'sys' → logprob: -3.7784230709075928
    3. ' return' → logprob: -5.403423309326172
    4. ' sys' → logprob: -7.403423309326172
    5. 'ret' → logprob: -10.653423309326172
    6. '   ' → logprob: -11.278423309326172
    7. 'eturn' → logprob: -12.278423309326172
    8. '=sys' → logprob: -12.778423309326172
    9. '(sys' → logprob: -13.028423309326172
    10. 'r' → logprob: -13.153423309326172

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4289838671684265
    2. '=' → logprob: -1.0539839267730713
    3. ' ' → logprob: -9.178983688354492
    4. 'u' → logprob: -9.303983688354492
    5. 'ult' → logprob: -10.678983688354492
    6. ' =
' → logprob: -11.303983688354492
    7. '=[]' → logprob: -12.053983688354492
    8. '.' → logprob: -12.303983688354492
    9. ',' → logprob: -12.303983688354492
    10. '=""' → logprob: -12.678983688354492

Token 92: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.39264747500419617
    2. '""' → logprob: -2.1426475048065186
    3. ' sys' → logprob: -2.2676475048065186
    4. '[]' → logprob: -2.5176475048065186
    5. 'input' → logprob: -4.1426472663879395
    6. '''' → logprob: -5.3926472663879395
    7. ' input' → logprob: -7.2676472663879395
    8. ' []' → logprob: -7.3926472663879395
    9. '"' → logprob: -8.017647743225098
    10. 'list' → logprob: -8.267647743225098

Token 93: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.7760944962501526
    2. '(input' → logprob: -0.9010944962501526
    3. '(' → logprob: -2.776094436645508
    4. '()' → logprob: -2.776094436645508
    5. '(map' → logprob: -4.901094436645508
    6. '(s' → logprob: -7.151094436645508
    7. '(range' → logprob: -8.401094436645508
    8. '(str' → logprob: -8.526094436645508
    9. '(system' → logprob: -9.401094436645508
    10. '("")' → logprob: -9.776094436645508

Token 94: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.3213025744771585e-05
    2. '.' → logprob: -10.500033378601074
    3. '.stdout' → logprob: -12.500033378601074
    4. '.readline' → logprob: -14.125033378601074
    5. '.std' → logprob: -14.875033378601074
    6. '.argv' → logprob: -15.000033378601074
    7. '(stdin' → logprob: -15.000033378601074
    8. 'stdin' → logprob: -16.000032424926758
    9. ' stdin' → logprob: -18.375032424926758
    10. '.input' → logprob: -19.125032424926758

Token 95: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0023437771014869213
    2. 'read' → logprob: -6.252343654632568
    3. ' readline' → logprob: -8.502344131469727
    4. 'stdin' → logprob: -9.002344131469727
    5. '.' → logprob: -10.002344131469727
    6. '().' → logprob: -11.127344131469727
    7. 'rstrip' → logprob: -11.502344131469727
    8. 'line' → logprob: -11.752344131469727
    9. 'reader' → logprob: -13.252344131469727
    10. '.read' → logprob: -13.502344131469727

Token 96: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01295903604477644
    2. '())' → logprob: -4.512959003448486
    3. '()' → logprob: -6.262959003448486
    4. ' ())' → logprob: -14.137959480285645
    5. ' ().' → logprob: -14.762959480285645
    6. '()]' → logprob: -14.887959480285645
    7. '()[' → logprob: -15.137959480285645
    8. '(' → logprob: -15.387959480285645
    9. '()-' → logprob: -15.387959480285645
    10. '()).' → logprob: -15.387959480285645

Token 97: '   ' (ID: 271)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.29464191198349
    2. '()' → logprob: -2.2946419715881348
    3. '.rstrip' → logprob: -2.5446419715881348
    4. 'rstrip' → logprob: -3.9196419715881348
    5. '.strip' → logprob: -4.169641971588135
    6. '   ' → logprob: -4.169641971588135
    7. '()\' → logprob: -4.794641971588135
    8. '<|end|>' → logprob: -5.294641971588135
    9. '.' → logprob: -5.794641971588135
    10. '(' → logprob: -6.169641971588135

Token 98: ' if' (ID: 538)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.7420569658279419
    2. 'rstrip' → logprob: -1.617056965827942
    3. '.strip' → logprob: -2.4920568466186523
    4. 'return' → logprob: -2.7420568466186523
    5. '   ' → logprob: -3.1170568466186523
    6. '.' → logprob: -3.3670568466186523
    7. '[:-' → logprob: -3.7420568466186523
    8. ')' → logprob: -3.8670568466186523
    9. '.pop' → logprob: -4.242056846618652
    10. '()' → logprob: -4.242056846618652

Token 99: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3488636016845703
    2. ' res' → logprob: -1.2238636016845703
    3. 'len' → logprob: -8.34886360168457
    4. ' not' → logprob: -9.34886360168457
    5. ' len' → logprob: -9.84886360168457
    6. '(res' → logprob: -10.59886360168457
    7. ' ' → logprob: -11.59886360168457
    8. 'not' → logprob: -12.47386360168457
    9. '	res' → logprob: -13.72386360168457
    10. '
' → logprob: -14.09886360168457

Token 100: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4489293694496155
    2. ' and' → logprob: -1.0739293098449707
    3. 'and' → logprob: -3.9489293098449707
    4. '[' → logprob: -7.448929309844971
    5. '>' → logprob: -9.573929786682129
    6. '==' → logprob: -9.823929786682129
    7. '.endswith' → logprob: -11.073929786682129
    8. '&&' → logprob: -11.198929786682129
    9. '	and' → logprob: -13.073929786682129
    10. '[len' → logprob: -13.198929786682129

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009620321914553642
    2. '\n' → logprob: -5.384620189666748
    3. ' ' → logprob: -6.134620189666748
    4. ''\' → logprob: -7.134620189666748
    5. ' ==' → logprob: -7.509620189666748
    6. '==' → logprob: -7.759620189666748
    7. '\' → logprob: -8.009620666503906
    8. '('\' → logprob: -8.884620666503906
    9. '='\' → logprob: -9.009620666503906
    10. '"\' → logprob: -9.259620666503906

Token 102: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.013560286723077297
    2. ' ==' → logprob: -4.6385602951049805
    3. '=='' → logprob: -6.2635602951049805
    4. '=' → logprob: -6.7635602951049805
    5. '==
' → logprob: -7.3885602951049805
    6. '=="' → logprob: -9.76356029510498
    7. '='\' → logprob: -11.38856029510498
    8. ']==' → logprob: -11.51356029510498
    9. '===' → logprob: -11.63856029510498
    10. ' in' → logprob: -11.63856029510498

Token 103: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007040244061499834
    2. '==
' → logprob: -5.382040023803711
    3. ' ==' → logprob: -6.632040023803711
    4. '=' → logprob: -7.007040023803711
    5. '=='' → logprob: -8.757040023803711
    6. '=="' → logprob: -11.132040023803711
    7. '\n' → logprob: -12.132040023803711
    8. ' in' → logprob: -12.507040023803711
    9. 'in' → logprob: -13.132040023803711
    10. '===' → logprob: -13.507040023803711

Token 104: ' "\' (ID: 6512)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.000743399141356349
    2. ' '\' → logprob: -7.750743389129639
    3. ''
' → logprob: -8.750743865966797
    4. '\n' → logprob: -9.500743865966797
    5. '"\' → logprob: -9.875743865966797
    6. ''' → logprob: -11.000743865966797
    7. '`\' → logprob: -11.875743865966797
    8. '`
' → logprob: -14.000743865966797
    9. '\' → logprob: -14.375743865966797
    10. ' '
' → logprob: -14.500743865966797

Token 105: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9361264946837764e-07
    2. '\n' → logprob: -16.375
    3. ' n' → logprob: -16.625
    4. '
' → logprob: -19.125
    5. 'newline' → logprob: -20.125
    6. '	n' → logprob: -20.875
    7. '```' → logprob: -21.25
    8. 'r' → logprob: -22.0
    9. 'ndef' → logprob: -22.5
    10. 'x' → logprob: -22.875

Token 106: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0412810742855072
    2. '"' → logprob: -3.66628098487854
    3. '":
' → logprob: -4.416281223297119
    4. ':' → logprob: -6.166281223297119
    5. ':
' → logprob: -8.041280746459961
    6. '):' → logprob: -9.041280746459961
    7. ')' → logprob: -9.541280746459961
    8. '"]:' → logprob: -10.541280746459961
    9. '"):' → logprob: -10.541280746459961
    10. ']' → logprob: -10.666280746459961

Token 107: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10685022175312042
    2. ' res' → logprob: -2.4818501472473145
    3. 'res' → logprob: -4.2318501472473145
    4. '	res' → logprob: -6.2318501472473145
    5. ' del' → logprob: -7.7318501472473145
    6. '       ' → logprob: -8.231850624084473
    7. '
' → logprob: -8.356850624084473
    8. '    
' → logprob: -8.606850624084473
    9. '<|end|>' → logprob: -10.356850624084473
    10. ',res' → logprob: -11.106850624084473

Token 108: ' return' (ID: 622)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05057964846491814
    2. ' res' → logprob: -3.05057954788208
    3. '   ' → logprob: -6.30057954788208
    4. '	res' → logprob: -9.300580024719238
    5. '
' → logprob: -10.050580024719238
    6. 'del' → logprob: -12.300580024719238
    7. ' del' → logprob: -12.425580024719238
    8. 'r' → logprob: -12.800580024719238
    9. '    
' → logprob: -13.050580024719238
    10. '.res' → logprob: -13.675580024719238

Token 109: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.20141489803791046
    2. ' res' → logprob: -1.701414942741394
    3. '	res' → logprob: -14.451415061950684
    4. 'r' → logprob: -15.326415061950684
    5. '(res' → logprob: -15.576415061950684
    6. 're' → logprob: -15.826415061950684
    7. '$res' → logprob: -15.951415061950684
    8. ' ' → logprob: -15.951415061950684
    9. '[' → logprob: -16.326414108276367
    10. '_res' → logprob: -17.076414108276367

Token 110: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -1.9981420336989686e-05
    2. '[' → logprob: -11.000020027160645
    3. '[:]' → logprob: -13.125020027160645
    4. '[:' → logprob: -14.625020027160645
    5. '.rstrip' → logprob: -15.125020027160645
    6. '0' → logprob: -16.000019073486328
    7. '.pop' → logprob: -16.125019073486328
    8. 'rstrip' → logprob: -16.875019073486328
    9. '
' → logprob: -17.625019073486328
    10. '[]' → logprob: -17.625019073486328

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. ']' → logprob: -16.75
    4. '   ' → logprob: -17.625
    5. 'newline' → logprob: -18.875
    6. '-' → logprob: -19.375
    7. '  ' → logprob: -20.125
    8. '１' → logprob: -20.25
    9. '
' → logprob: -20.5
    10. '```' → logprob: -22.125

Token 112: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003281944082118571
    2. ']
' → logprob: -9.125328063964844
    3. ' ]' → logprob: -9.125328063964844
    4. '<|end|>' → logprob: -9.250328063964844
    5. '   ' → logprob: -12.000328063964844
    6. ')' → logprob: -12.875328063964844
    7. '<|end|>' → logprob: -14.000328063964844
    8. '']' → logprob: -14.000328063964844
    9. '"]' → logprob: -14.375328063964844
    10. '}' → logprob: -14.375328063964844

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002518703928217292
    2. ' ' → logprob: -6.627518653869629
    3. '    ' → logprob: -8.377518653869629
    4. '    
' → logprob: -8.502518653869629
    5. ' else' → logprob: -8.627518653869629
    6. '  ' → logprob: -8.877518653869629
    7. '<|end|>' → logprob: -9.252518653869629
    8. '	else' → logprob: -9.377518653869629
    9. 'else' → logprob: -9.752518653869629
    10. '	return' → logprob: -9.877518653869629

Token 114: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4869580864906311
    2. 'return' (adapté à ' return') → logprob: -1.3619580268859863
    3. 'else' → logprob: -2.4869580268859863
    4. ' else' → logprob: -3.8619580268859863
    5. 'r' → logprob: -4.736958026885986
    6. ' return' → logprob: -5.361958026885986
    7. ':return' → logprob: -6.111958026885986
    8. ' ' → logprob: -6.111958026885986
    9. '	return' → logprob: -6.486958026885986
    10. '<|end|>' → logprob: -6.736958026885986

Token 115: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0019368429202586412
    2. ' res' → logprob: -6.251936912536621
    3. '[]' → logprob: -11.751936912536621
    4. ' []' → logprob: -16.126935958862305
    5. 's' → logprob: -16.626935958862305
    6. 're' → logprob: -16.876935958862305
    7. '	res' → logprob: -16.876935958862305
    8. '$res' → logprob: -17.251935958862305
    9. 'resi' → logprob: -17.251935958862305
    10. '_res' → logprob: -17.501935958862305

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04780386760830879
    2. 'def' → logprob: -3.6728038787841797
    3. '<|end|>' → logprob: -4.54780387878418
    4. '\n' → logprob: -5.17280387878418
    5. '

' → logprob: -7.17280387878418
    6. '#' → logprob: -7.29780387878418
    7. 'newline' → logprob: -7.54780387878418
    8. ':' → logprob: -7.67280387878418
    9. 'n' → logprob: -8.04780387878418
    10. '```' → logprob: -8.17280387878418

Token 117: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5918142795562744
    2. '
' → logprob: -1.0918142795562744
    3. '#' → logprob: -2.5918142795562744
    4. 'd' → logprob: -4.091814041137695
    5. '\' → logprob: -5.216814041137695
    6. ' 
' → logprob: -5.591814041137695
    7. '  
' → logprob: -5.966814041137695
    8. '\n' → logprob: -6.216814041137695
    9. '<|end|>' → logprob: -6.716814041137695
    10. '' → logprob: -6.841814041137695

Token 118: ' IR' (ID: 23712)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.011607336811721325
    2. 'main' → logprob: -4.8866071701049805
    3. ' ' → logprob: -7.2616071701049805
    4. ' M' → logprob: -7.7616071701049805
    5. '_main' → logprob: -7.7616071701049805
    6. '_' → logprob: -7.8866071701049805
    7. ' input' → logprob: -8.01160717010498
    8. ' solve' → logprob: -8.63660717010498
    9. ' factorial' → logprob: -8.88660717010498
    10. ' print' → logprob: -9.01160717010498

Token 119: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04859986528754234
    2. '()' → logprob: -3.1735999584198
    3. 'E' → logprob: -5.548599720001221
    4. '():
' → logprob: -7.798599720001221
    5. 'ange' → logprob: -7.798599720001221
    6. 'ead' → logprob: -8.423600196838379
    7. 'ANGE' → logprob: -8.423600196838379
    8. 'e' → logprob: -9.423600196838379
    9. 'L' → logprob: -9.673600196838379
    10. ' ():' → logprob: -9.923600196838379

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00019984507525805384
    2. ')' → logprob: -8.875200271606445
    3. '):
' → logprob: -9.875200271606445
    4. ' ):' → logprob: -11.750200271606445
    5. ':' → logprob: -15.375200271606445
    6. '):
' → logprob: -15.875200271606445
    7. ')：' → logprob: -16.625200271606445
    8. ']:' → logprob: -17.500200271606445
    9. ',' → logprob: -17.750200271606445
    10. '):(' → logprob: -17.750200271606445

Token 121: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22063800692558289
    2. '():' → logprob: -2.2206380367279053
    3. ' :' → logprob: -3.0956380367279053
    4. '   ' → logprob: -3.9706380367279053
    5. ':
' → logprob: -4.345637798309326
    6. ' return' → logprob: -5.595637798309326
    7. ':return' → logprob: -6.220637798309326
    8. '):' → logprob: -6.470637798309326
    9. ' =' → logprob: -7.095637798309326
    10. ' ' → logprob: -7.095637798309326

Token 122: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18503648042678833
    2. 'return' (adapté à ' return') → logprob: -1.8100364208221436
    3. ' res' → logprob: -6.060036659240723
    4. 'r' → logprob: -6.935036659240723
    5. 'res' → logprob: -7.060036659240723
    6. ' r' → logprob: -7.560036659240723
    7. '   ' → logprob: -8.685036659240723
    8. ' for' → logprob: -8.685036659240723
    9. 'ret' → logprob: -9.685036659240723
    10. 'for' → logprob: -10.060036659240723

Token 123: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.005786700639873743
    2. '[' → logprob: -5.255786895751953
    3. ' [' → logprob: -8.005786895751953
    4. '[Int' → logprob: -9.505786895751953
    5. '[I' → logprob: -9.630786895751953
    6. '[i' → logprob: -10.005786895751953
    7. '[list' → logprob: -11.005786895751953
    8. '[List' → logprob: -12.630786895751953
    9. 'int' → logprob: -13.005786895751953
    10. 'deque' → logprob: -13.255786895751953

Token 124: 'I' (ID: 40)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38688287138938904
    2. 'I' → logprob: -1.1368829011917114
    3. ' I' → logprob: -12.386882781982422
    4. ' int' → logprob: -13.136882781982422
    5. '[int' → logprob: -13.261882781982422
    6. '(int' → logprob: -13.636882781982422
    7. '<int' → logprob: -14.511882781982422
    8. '
' → logprob: -14.761882781982422
    9. 'Int' → logprob: -15.011882781982422
    10. ']int' → logprob: -15.011882781982422

Token 125: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.3458322731312364e-06
    2. '()]' → logprob: -12.000007629394531
    3. '()
' → logprob: -14.625007629394531
    4. ' ()' → logprob: -14.625007629394531
    5. '(' → logprob: -15.625007629394531
    6. '（）' → logprob: -18.12500762939453
    7. '()+' → logprob: -19.25000762939453
    8. '()\' → logprob: -19.37500762939453
    9. ']()' → logprob: -19.50000762939453
    10. '()]
' → logprob: -19.50000762939453

Token 126: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008818074711598456
    2. ' for' → logprob: -7.750881671905518
    3. 'for' → logprob: -7.750881671905518
    4. ' ()' → logprob: -11.875882148742676
    5. ')' → logprob: -12.000882148742676
    6. '()]' → logprob: -12.375882148742676
    7. ']' → logprob: -13.375882148742676
    8. '	for' → logprob: -13.875882148742676
    9. '(' → logprob: -14.375882148742676
    10. '()
' → logprob: -16.00088119506836

Token 127: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10034717619419098
    2. ' _' → logprob: -2.3503472805023193
    3. ' ' → logprob: -8.975347518920898
    4. ' range' → logprob: -11.975347518920898
    5. '(' → logprob: -12.475347518920898
    6. ' i' → logprob: -13.475347518920898
    7. 'range' → logprob: -14.225347518920898
    8. '_range' → logprob: -14.475347518920898
    9. ' ' → logprob: -14.850347518920898
    10. ' in' → logprob: -14.850347518920898

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.45173323154449463
    2. 'in' → logprob: -1.3267332315444946
    3. 'n' → logprob: -2.826733112335205
    4. ' ' → logprob: -3.951733112335205
    5. '_' → logprob: -4.201733112335205
    6. ' n' → logprob: -6.326733112335205
    7. 'range' → logprob: -6.451733112335205
    8. ' range' → logprob: -7.576733112335205
    9. '(n' → logprob: -8.076733589172363
    10. '(' → logprob: -8.826733589172363

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009144435753114522
    2. ' range' → logprob: -7.000914573669434
    3. 'rang' → logprob: -13.500914573669434
    4. 'ra' → logprob: -14.500914573669434
    5. '	range' → logprob: -14.875914573669434
    6. 'r' → logprob: -15.000914573669434
    7. '(range' → logprob: -15.250914573669434
    8. 'ran' → logprob: -15.500914573669434
    9. ' ' → logprob: -17.625913619995117
    10. 'ange' → logprob: -18.750913619995117

Token 130: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007104054093360901
    2. '(' → logprob: -7.250710487365723
    3. 'n' → logprob: -15.250710487365723
    4. ' n' → logprob: -16.750709533691406
    5. ' (' → logprob: -17.000709533691406
    6. '(
' → logprob: -17.000709533691406
    7. '	n' → logprob: -19.000709533691406
    8. ')n' → logprob: -19.250709533691406
    9. '(

' → logprob: -19.875709533691406
    10. '(nn' → logprob: -20.375709533691406

Token 131: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.3458322731312364e-06
    2. ')' → logprob: -12.375007629394531
    3. ']' → logprob: -12.750007629394531
    4. ')]
' → logprob: -16.12500762939453
    5. '))' → logprob: -18.00000762939453
    6. '}]' → logprob: -18.25000762939453
    7. ')
' → logprob: -18.37500762939453
    8. ')],' → logprob: -18.50000762939453
    9. ' )' → logprob: -18.62500762939453
    10. ')}' → logprob: -18.62500762939453

Token 132: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14381352066993713
    2. 'def' → logprob: -2.0188136100769043
    3. '<|end|>' → logprob: -7.393813610076904
    4. ' 
' → logprob: -9.018813133239746
    5. '#' → logprob: -9.143813133239746
    6. ' def' → logprob: -9.768813133239746
    7. '\n' → logprob: -10.268813133239746
    8. '

' → logprob: -10.518813133239746
    9. '```' → logprob: -10.893813133239746
    10. '    
' → logprob: -11.018813133239746

Token 133: ' L' (ID: 451)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.1189778596162796
    2. 'IS' → logprob: -3.4939777851104736
    3. 'LI' → logprob: -3.9939777851104736
    4. 'L' → logprob: -3.9939777851104736
    5. 'IRS' → logprob: -4.118978023529053
    6. ' LS' → logprob: -5.118978023529053
    7. 'S' → logprob: -5.243978023529053
    8. 'LR' → logprob: -5.243978023529053
    9. 'IR' → logprob: -5.618978023529053
    10. 'SR' → logprob: -6.118978023529053

Token 134: 'IR' (ID: 4368)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.2127087504486553e-05
    2. 'IR' → logprob: -11.625021934509277
    3. 'S' → logprob: -13.000021934509277
    4. 'def' → logprob: -13.375021934509277
    5. '()' → logprob: -13.750021934509277
    6. 'IST' → logprob: -14.000021934509277
    7. '```' → logprob: -14.250021934509277
    8. ' I' → logprob: -14.375021934509277
    9. 'IS' → logprob: -14.375021934509277
    10. 'ambda' → logprob: -14.500021934509277

Token 135: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. '(N' → logprob: -15.375006675720215
    4. ' (' → logprob: -16.37500762939453
    5. '(i' → logprob: -16.62500762939453
    6. '(a' → logprob: -16.87500762939453
    7. '(num' → logprob: -17.37500762939453
    8. 'n' → logprob: -18.00000762939453
    9. '(k' → logprob: -18.12500762939453
    10. 'def' → logprob: -18.62500762939453

Token 136: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017803447553887963
    2. '):
' → logprob: -9.000178337097168
    3. ')' → logprob: -9.875178337097168
    4. ']:' → logprob: -13.500178337097168
    5. '):
' → logprob: -14.375178337097168
    6. '）：' → logprob: -15.125178337097168
    7. '):

' → logprob: -15.250178337097168
    8. '():' → logprob: -15.375178337097168
    9. ' ):' → logprob: -15.500178337097168
    10. ')]' → logprob: -16.50017738342285

Token 137: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5895944237709045
    2. '():' → logprob: -1.5895943641662598
    3. ' return' → logprob: -2.3395943641662598
    4. ':return' → logprob: -3.3395943641662598
    5. '   ' → logprob: -3.7145943641662598
    6. '(n' → logprob: -3.9645943641662598
    7. ' ' → logprob: -4.46459436416626
    8. 'return' → logprob: -4.46459436416626
    9. '):' → logprob: -4.71459436416626
    10. ':list' → logprob: -5.33959436416626

Token 138: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08121182769536972
    2. ' return' → logprob: -2.581211805343628
    3. '[' → logprob: -6.206212043762207
    4. ' [' → logprob: -8.456212043762207
    5. '   ' → logprob: -9.956212043762207
    6. '[]' → logprob: -10.581212043762207
    7. '[int' → logprob: -12.456212043762207
    8. ':return' → logprob: -13.331212043762207
    9. '[[' → logprob: -13.456212043762207
    10. '[r' → logprob: -13.831212043762207

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.018432730808854103
    2. '[int' → logprob: -4.0184326171875
    3. '[list' → logprob: -9.0184326171875
    4. '[List' → logprob: -9.8934326171875
    5. '[Int' → logprob: -10.0184326171875
    6. ' [' → logprob: -10.0184326171875
    7. '[I' → logprob: -12.0184326171875
    8. '[[' → logprob: -12.3934326171875
    9. '[L' → logprob: -12.7684326171875
    10. '[np' → logprob: -13.3934326171875

Token 140: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -3.070975071750581e-05
    2. 'int' → logprob: -11.125030517578125
    3. 'list' → logprob: -11.250030517578125
    4. 'tuple' → logprob: -13.750030517578125
    5. '[int' → logprob: -13.875030517578125
    6. '[' → logprob: -15.000030517578125
    7. 'li' → logprob: -15.125030517578125
    8. ' LI' → logprob: -15.250030517578125
    9. 'Li' → logprob: -18.625030517578125
    10. 'List' → logprob: -18.750030517578125

Token 141: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011120688170194626
    2. '(n' → logprob: -4.511120796203613
    3. '()]' → logprob: -9.636120796203613
    4. ' ()' → logprob: -12.761120796203613
    5. '(i' → logprob: -13.386120796203613
    6. '(' → logprob: -13.636120796203613
    7. '()
' → logprob: -14.011120796203613
    8. '()(' → logprob: -15.136120796203613
    9. '()[' → logprob: -15.636120796203613
    10. '())' → logprob: -15.886120796203613

Token 142: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -12.250007629394531
    3. 'for' → logprob: -13.375007629394531
    4. '()' → logprob: -14.125007629394531
    5. ' for' → logprob: -14.750007629394531
    6. ' (' → logprob: -15.250007629394531
    7. '(i' → logprob: -15.625007629394531
    8. 'n' → logprob: -15.750007629394531
    9. ')' → logprob: -20.37500762939453
    10. ' n' → logprob: -21.00000762939453

Token 143: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2335308939218521
    2. 'i' → logprob: -1.858530879020691
    3. '_' → logprob: -2.9835309982299805
    4. ' _' → logprob: -7.1085309982299805
    5. ' range' → logprob: -7.7335309982299805
    6. 'range' → logprob: -8.10853099822998
    7. ' ' → logprob: -9.35853099822998
    8. '_i' → logprob: -9.85853099822998
    9. '(i' → logprob: -10.73353099822998
    10. '	i' → logprob: -11.35853099822998

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23375557363033295
    2. 'in' → logprob: -1.6087555885314941
    3. '(' → logprob: -5.108755588531494
    4. 'n' → logprob: -6.608755588531494
    5. ' i' → logprob: -8.233755111694336
    6. '(n' → logprob: -8.483755111694336
    7. ' ' → logprob: -8.733755111694336
    8. 'range' → logprob: -9.233755111694336
    9. 'i' → logprob: -9.483755111694336
    10. ' (' → logprob: -9.858755111694336

Token 145: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0041059465147554874
    2. ' range' → logprob: -5.504106044769287
    3. '(range' → logprob: -10.504105567932129
    4. 'rang' → logprob: -17.504106521606445
    5. '	range' → logprob: -17.754106521606445
    6. 'ange' → logprob: -18.129106521606445
    7. '(' → logprob: -18.879106521606445
    8. 'ran' → logprob: -19.004106521606445
    9. 'r' → logprob: -19.129106521606445
    10. '(n' → logprob: -19.379106521606445

Token 146: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00048632267862558365
    2. 'n' → logprob: -8.250486373901367
    3. '(' → logprob: -8.500486373901367
    4. ' n' → logprob: -11.000486373901367
    5. ' (' → logprob: -12.250486373901367
    6. '(
' → logprob: -16.250486373901367
    7. '	n' → logprob: -17.125486373901367
    8. ' ' → logprob: -18.625486373901367
    9. ')n' → logprob: -18.750486373901367
    10. '(nn' → logprob: -20.250486373901367

Token 147: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.011373155459296e-05
    2. ']' → logprob: -10.625030517578125
    3. '()]' → logprob: -12.875030517578125
    4. ')' → logprob: -12.875030517578125
    5. '()' → logprob: -15.750030517578125
    6. '])' → logprob: -16.750030517578125
    7. '(n' → logprob: -16.750030517578125
    8. '(' → logprob: -16.750030517578125
    9. '')]' → logprob: -16.875030517578125
    10. '())' → logprob: -17.000030517578125

Token 148: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14699432253837585
    2. '
' → logprob: -2.7719943523406982
    3. ':' → logprob: -4.021994113922119
    4. 'd' → logprob: -4.021994113922119
    5. '#' → logprob: -4.146994113922119
    6. '<|end|>' → logprob: -4.896994113922119
    7. '\' → logprob: -5.896994113922119
    8. ')' → logprob: -6.021994113922119
    9. '\n' → logprob: -6.521994113922119
    10. '(' → logprob: -7.021994113922119

Token 149: ' SR' (ID: 30704)
  Prédit: 'SR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'SR' → logprob: -0.03872442618012428
    2. 'LS' → logprob: -3.663724422454834
    3. 'IR' → logprob: -5.663724422454834
    4. 'S' → logprob: -5.788724422454834
    5. 'main' → logprob: -6.663724422454834
    6. 'IS' → logprob: -7.163724422454834
    7. 'SI' → logprob: -7.288724422454834
    8. 'RS' → logprob: -7.413724422454834
    9. 'print' → logprob: -7.538724422454834
    10. 's' → logprob: -8.163724899291992

Token 150: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10481508076190948
    2. '(n' → logprob: -2.3548150062561035
    3. '():
' → logprob: -6.1048150062561035
    4. '()' → logprob: -6.1048150062561035
    5. '()(' → logprob: -9.354815483093262
    6. '(' → logprob: -11.854815483093262
    7. ' ():' → logprob: -12.229815483093262
    8. '(N' → logprob: -12.229815483093262
    9. '():
' → logprob: -12.354815483093262
    10. '():

' → logprob: -12.354815483093262

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035810720873996615
    2. '):
' → logprob: -8.375358581542969
    3. ')' → logprob: -9.000358581542969
    4. ']:' → logprob: -13.000358581542969
    5. '):
' → logprob: -14.875358581542969
    6. '):

' → logprob: -15.000358581542969
    7. ' ):' → logprob: -15.250358581542969
    8. '(n' → logprob: -15.625358581542969
    9. ')]' → logprob: -15.625358581542969
    10. '）：' → logprob: -16.25035858154297

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025955152232199907
    2. ' return' → logprob: -6.3775954246521
    3. ' ' → logprob: -8.127595901489258
    4. '[' → logprob: -8.502595901489258
    5. '[]' → logprob: -9.377595901489258
    6. '  ' → logprob: -9.752595901489258
    7. 'return' → logprob: -9.877595901489258
    8. ' [' → logprob: -10.127595901489258
    9. 'def' → logprob: -10.252595901489258
    10. ' def' → logprob: -11.002595901489258

Token 153: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25087517499923706
    2. '[' → logprob: -2.000875234603882
    3. ' return' → logprob: -3.375875234603882
    4. ' [' → logprob: -3.875875234603882
    5. '[S' → logprob: -4.375874996185303
    6. '[list' → logprob: -4.375874996185303
    7. '[s' → logprob: -6.250874996185303
    8. '   ' → logprob: -6.375874996185303
    9. '[string' → logprob: -8.000875473022461
    10. '[line' → logprob: -8.125875473022461

Token 154: ' [' (ID: 723)
  Prédit: '[S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[S' → logprob: -0.010717996396124363
    2. '[' → logprob: -5.010717868804932
    3. '[list' → logprob: -6.010717868804932
    4. ' [' → logprob: -7.385717868804932
    5. '['' → logprob: -7.635717868804932
    6. '["' → logprob: -9.01071834564209
    7. '[s' → logprob: -9.38571834564209
    8. 'S' → logprob: -9.88571834564209
    9. '[str' → logprob: -10.01071834564209
    10. '[String' → logprob: -10.26071834564209

Token 155: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.4881879400927573e-05
    2. 'sys' → logprob: -10.750035285949707
    3. 'list' → logprob: -11.250035285949707
    4. ' S' → logprob: -14.750035285949707
    5. 'input' → logprob: -17.50003433227539
    6. 'Sys' → logprob: -18.37503433227539
    7. 's' → logprob: -18.50003433227539
    8. '	S' → logprob: -19.62503433227539
    9. '   ' → logprob: -19.62503433227539
    10. 'str' → logprob: -19.87503433227539

Token 156: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04868047684431076
    2. '(n' → logprob: -3.048680543899536
    3. '(i' → logprob: -9.798680305480957
    4. ' ()' → logprob: -10.673680305480957
    5. '()]' → logprob: -11.548680305480957
    6. '(' → logprob: -12.673680305480957
    7. ' (' → logprob: -14.298680305480957
    8. '()
' → logprob: -14.423680305480957
    9. '()(' → logprob: -15.423680305480957
    10. '（）' → logprob: -16.673681259155273

Token 157: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004331726115196943
    2. 'for' → logprob: -5.504331588745117
    3. ' for' → logprob: -8.629331588745117
    4. ')' → logprob: -10.254331588745117
    5. '(' → logprob: -10.629331588745117
    6. 'n' → logprob: -11.504331588745117
    7. ' (' → logprob: -12.379331588745117
    8. '(i' → logprob: -14.754331588745117
    9. '()' → logprob: -16.004331588745117
    10. ')n' → logprob: -16.254331588745117

Token 158: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38811832666397095
    2. ' i' → logprob: -1.1381182670593262
    3. '_' → logprob: -6.763118267059326
    4. ' ' → logprob: -9.888118743896484
    5. ' _' → logprob: -10.388118743896484
    6. 'n' → logprob: -13.263118743896484
    7. ' in' → logprob: -13.388118743896484
    8. '   ' → logprob: -13.763118743896484
    9. ' range' → logprob: -14.138118743896484
    10. 'range' → logprob: -14.138118743896484

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49778151512145996
    2. 'in' → logprob: -1.37278151512146
    3. 'n' → logprob: -1.99778151512146
    4. '(n' → logprob: -6.372781753540039
    5. ' n' → logprob: -7.372781753540039
    6. '(' → logprob: -7.997781753540039
    7. ' ' → logprob: -8.372781753540039
    8. 'range' → logprob: -9.997781753540039
    9. ' i' → logprob: -10.497781753540039
    10. '  ' → logprob: -10.997781753540039

Token 160: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004477592650800943
    2. ' range' → logprob: -5.504477500915527
    3. '(n' → logprob: -8.379477500915527
    4. '(range' → logprob: -8.879477500915527
    5. 'n' → logprob: -10.504477500915527
    6. '(' → logprob: -13.004477500915527
    7. 'rang' → logprob: -15.129477500915527
    8. '	range' → logprob: -16.254478454589844
    9. 'r' → logprob: -16.754478454589844
    10. ' (' → logprob: -16.754478454589844

Token 161: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008191577508114278
    2. 'n' → logprob: -7.250819206237793
    3. '(' → logprob: -9.125819206237793
    4. ' (' → logprob: -15.375819206237793
    5. '(
' → logprob: -16.375818252563477
    6. ' n' → logprob: -16.625818252563477
    7. ')n' → logprob: -17.250818252563477
    8. ')' → logprob: -18.375818252563477
    9. '	n' → logprob: -19.000818252563477
    10. '
' → logprob: -19.625818252563477

Token 162: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001495484757469967
    2. ')' → logprob: -8.875149726867676
    3. ']' → logprob: -11.750149726867676
    4. '):' → logprob: -14.375149726867676
    5. ')]
' → logprob: -14.750149726867676
    6. ' )' → logprob: -15.875149726867676
    7. ')],' → logprob: -16.00014877319336
    8. '))' → logprob: -16.00014877319336
    9. ')}' → logprob: -16.25014877319336
    10. ')].' → logprob: -16.62514877319336

Token 163: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025943268556147814
    2. 'class' → logprob: -6.502594470977783
    3. 'd' → logprob: -7.252594470977783
    4. '#' → logprob: -8.877593994140625
    5. '
' → logprob: -9.002593994140625
    6. 'n' → logprob: -10.252593994140625
    7. 'a' → logprob: -10.877593994140625
    8. '0' → logprob: -12.002593994140625
    9. 'ndef' → logprob: -12.002593994140625
    10. 'from' → logprob: -12.127593994140625

Token 164: ' L' (ID: 451)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0981445387005806
    2. ' main' → logprob: -2.47314453125
    3. 'solve' → logprob: -5.84814453125
    4. ' solve' → logprob: -7.34814453125
    5. 'LS' → logprob: -7.34814453125
    6. 'print' → logprob: -7.34814453125
    7. 'D' → logprob: -7.47314453125
    8. 'dfs' → logprob: -7.84814453125
    9. 'DR' → logprob: -8.34814453125
    10. 'T' → logprob: -8.34814453125

Token 165: 'SR' (ID: 22892)
  Prédit: 'IR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IR' → logprob: -0.4036482274532318
    2. 'I' → logprob: -1.1536482572555542
    3. 'R' → logprob: -4.528648376464844
    4. 'S' → logprob: -5.528648376464844
    5. 'SR' → logprob: -6.528648376464844
    6. 'IS' → logprob: -8.778648376464844
    7. 'def' → logprob: -9.903648376464844
    8. '(IR' → logprob: -10.278648376464844
    9. '(' → logprob: -11.153648376464844
    10. '():' → logprob: -11.403648376464844

Token 166: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.751746746478602e-05
    2. '(' → logprob: -10.00004768371582
    3. ' (' → logprob: -13.12504768371582
    4. '(
' → logprob: -17.62504768371582
    5. 'n' → logprob: -17.62504768371582
    6. '():' → logprob: -18.00004768371582
    7. 'def' → logprob: -20.37504768371582
    8. '(N' → logprob: -20.37504768371582
    9. ',n' → logprob: -20.50004768371582
    10. ':' → logprob: -20.50004768371582

Token 167: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003391574718989432
    2. '):
' → logprob: -8.25033950805664
    3. ')' → logprob: -9.50033950805664
    4. ' ):' → logprob: -13.00033950805664
    5. '):
' → logprob: -15.00033950805664
    6. '():' → logprob: -15.75033950805664
    7. '):

' → logprob: -16.37533950805664
    8. ')：' → logprob: -17.12533950805664
    9. '):(' → logprob: -17.12533950805664
    10. 'def' → logprob: -17.37533950805664

Token 168: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008679908351041377
    2. '   ' → logprob: -7.37586784362793
    3. '(' → logprob: -9.12586784362793
    4. ':' → logprob: -9.62586784362793
    5. ' (' → logprob: -10.62586784362793
    6. ' n' → logprob: -11.00086784362793
    7. ' return' → logprob: -11.50086784362793
    8. ' =' → logprob: -13.00086784362793
    9. 'n' → logprob: -13.12586784362793
    10. ':return' → logprob: -13.37586784362793

Token 169: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.31828856468200684
    2. ' return' → logprob: -1.3182885646820068
    3. '[' → logprob: -5.443288803100586
    4. 'def' → logprob: -8.443288803100586
    5. ' [' → logprob: -8.693288803100586
    6. '   ' → logprob: -8.818288803100586
    7. '[L' → logprob: -9.818288803100586
    8. '[int' → logprob: -10.818288803100586
    9. '[List' → logprob: -10.943288803100586
    10. '[]' → logprob: -11.443288803100586

Token 170: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.661626634420827e-05
    2. '[L' → logprob: -10.250086784362793
    3. '[int' → logprob: -10.750086784362793
    4. ' [' → logprob: -11.000086784362793
    5. '[List' → logprob: -11.500086784362793
    6. '[list' → logprob: -13.125086784362793
    7. '[Int' → logprob: -14.250086784362793
    8. '[len' → logprob: -15.750086784362793
    9. '[S' → logprob: -16.125085830688477
    10. '[line' → logprob: -17.500085830688477

Token 171: 'LS' (ID: 10172)
  Prédit: 'LS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.06285502016544342
    2. 'S' → logprob: -2.8128550052642822
    3. 'list' → logprob: -7.187855243682861
    4. '[S' → logprob: -9.812854766845703
    5. 'sys' → logprob: -10.437854766845703
    6. ' LS' → logprob: -11.062854766845703
    7. 'ls' → logprob: -11.437854766845703
    8. '[' → logprob: -11.562854766845703
    9. '(S' → logprob: -12.312854766845703
    10. 'LI' → logprob: -13.437854766845703

Token 172: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5780482292175293
    2. '()' → logprob: -0.8280482292175293
    3. '()]' → logprob: -6.328048229217529
    4. '(' → logprob: -8.453048706054688
    5. ' ()' → logprob: -10.203048706054688
    6. '()(' → logprob: -10.453048706054688
    7. '()
' → logprob: -10.703048706054688
    8. ' (' → logprob: -11.703048706054688
    9. '(i' → logprob: -12.703048706054688
    10. '()+' → logprob: -13.828048706054688

Token 173: ' for' (ID: 395)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -11.625021934509277
    3. 'for' → logprob: -12.125021934509277
    4. ' (' → logprob: -12.500021934509277
    5. ' for' → logprob: -12.875021934509277
    6. ')' → logprob: -13.625021934509277
    7. '()' → logprob: -15.000021934509277
    8. 'n' → logprob: -16.125022888183594
    9. '(i' → logprob: -17.875022888183594
    10. '((' → logprob: -19.000022888183594

Token 174: ' i' (ID: 575)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16497580707073212
    2. '(n' → logprob: -1.9149757623672485
    3. ' n' → logprob: -5.414975643157959
    4. 'int' → logprob: -8.164976119995117
    5. ')n' → logprob: -13.289976119995117
    6. ' (' → logprob: -13.539976119995117
    7. 'range' → logprob: -13.539976119995117
    8. 'in' → logprob: -14.789976119995117
    9. '	n' → logprob: -15.039976119995117
    10. ')' → logprob: -15.414976119995117

Token 175: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.30698105692863464
    2. ' in' → logprob: -1.806981086730957
    3. '(n' → logprob: -2.806981086730957
    4. '(' → logprob: -3.306981086730957
    5. 'range' → logprob: -6.306981086730957
    6. 'n' → logprob: -7.431981086730957
    7. ' (' → logprob: -8.056981086730957
    8. '(range' → logprob: -8.806981086730957
    9. 'i' → logprob: -9.806981086730957
    10. '(in' → logprob: -9.806981086730957

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018305746838450432
    2. ' range' → logprob: -4.018305778503418
    3. '(range' → logprob: -8.768305778503418
    4. '(n' → logprob: -16.5183048248291
    5. '(' → logprob: -16.7683048248291
    6. '	range' → logprob: -17.3933048248291
    7. ' (' → logprob: -17.5183048248291
    8. 'rang' → logprob: -18.0183048248291
    9. 'in' → logprob: -18.7683048248291
    10. ' in' → logprob: -19.0183048248291

Token 177: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00010747690976131707
    2. 'n' → logprob: -9.375107765197754
    3. '(' → logprob: -10.750107765197754
    4. ' (' → logprob: -13.750107765197754
    5. ' n' → logprob: -17.750106811523438
    6. ')' → logprob: -18.125106811523438
    7. '(
' → logprob: -18.375106811523438
    8. 's' → logprob: -18.625106811523438
    9. ')n' → logprob: -18.875106811523438
    10. 'range' → logprob: -19.375106811523438

Token 178: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00130094971973449
    2. ')' → logprob: -7.126300811767578
    3. '):' → logprob: -7.751300811767578
    4. ']' → logprob: -10.501300811767578
    5. '(n' → logprob: -10.751300811767578
    6. 'n' → logprob: -11.626300811767578
    7. ')]
' → logprob: -12.751300811767578
    8. ')n' → logprob: -13.626300811767578
    9. '()]' → logprob: -14.001300811767578
    10. '))' → logprob: -14.501300811767578

Token 179: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05005762726068497
    2. 'd' → logprob: -3.1750576496124268
    3. 'n' → logprob: -5.925057411193848
    4. '#' → logprob: -6.050057411193848
    5. 'class' → logprob: -6.425057411193848
    6. 'de' → logprob: -9.800057411193848
    7. 'D' → logprob: -10.175057411193848
    8. 'dp' → logprob: -10.175057411193848
    9. 'a' → logprob: -10.300057411193848
    10. ' ' → logprob: -10.800057411193848

Token 180: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6438291072845459
    2. '.exit' → logprob: -1.393829107284546
    3. '.stdout' → logprob: -1.643829107284546
    4. '.stdin' → logprob: -3.643829107284546
    5. '.stderr' → logprob: -5.518829345703125
    6. '.argv' → logprob: -6.018829345703125
    7. '.setdefault' → logprob: -8.143829345703125
    8. '.path' → logprob: -8.268829345703125
    9. '.max' → logprob: -9.393829345703125
    10. '.set' → logprob: -9.893829345703125

Token 181: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0005959240952506661
    2. '_rec' → logprob: -7.625596046447754
    3. 're' → logprob: -9.750596046447754
    4. 'limit' → logprob: -10.500596046447754
    5. 'set' → logprob: -11.375596046447754
    6. ' recursion' → logprob: -12.875596046447754
    7. '_re' → logprob: -13.125596046447754
    8. '_limit' → logprob: -13.250596046447754
    9. 'execution' → logprob: -14.375596046447754
    10. 'ursion' → logprob: -14.500596046447754

Token 182: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -6.551721889991313e-05
    2. 'ursive' → logprob: -10.250065803527832
    3. 'urs' → logprob: -11.125065803527832
    4. 'limit' → logprob: -11.250065803527832
    5. 'ur' → logprob: -14.250065803527832
    6. 'usion' → logprob: -14.375065803527832
    7. 'ursor' → logprob: -14.375065803527832
    8. '_limit' → logprob: -15.000065803527832
    9. 'ursively' → logprob: -16.250064849853516
    10. 'urst' → logprob: -16.875064849853516

Token 183: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.8624639324116288e-06
    2. 'lim' → logprob: -14.250001907348633
    3. '_limit' → logprob: -14.250001907348633
    4. ' limit' → logprob: -14.500001907348633
    5. 'depth' → logprob: -17.000001907348633
    6. 'limits' → logprob: -18.500001907348633
    7. 'Limit' → logprob: -19.375001907348633
    8. '(limit' → logprob: -20.750001907348633
    9. '-limit' → logprob: -21.125001907348633
    10. 'LIMIT' → logprob: -21.500001907348633

Token 184: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.1008713702030946e-06
    2. '(
' → logprob: -13.250001907348633
    3. ' (' → logprob: -15.750001907348633
    4. '((' → logprob: -16.750001907348633
    5. '(

' → logprob: -17.500001907348633
    6. '(int' → logprob: -18.500001907348633
    7. '()' → logprob: -19.250001907348633
    8. '(
' → logprob: -20.500001907348633
    9. '100' → logprob: -21.000001907348633
    10. '('' → logprob: -21.375001907348633

Token 185: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0015040287980809808
    2. '100' → logprob: -6.501503944396973
    3. '1' → logprob: -13.626503944396973
    4. ' ' → logprob: -15.001503944396973
    5. '500' → logprob: -16.75150489807129
    6. '200' → logprob: -16.75150489807129
    7. '400' → logprob: -16.87650489807129
    8. '300' → logprob: -17.25150489807129
    9. '999' → logprob: -17.37650489807129
    10. '410' → logprob: -17.62650489807129

Token 186: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.007765747141093016
    2. '00' → logprob: -4.882765769958496
    3. '0' → logprob: -10.007765769958496
    4. '007' → logprob: -10.007765769958496
    5. '7' → logprob: -10.382765769958496
    6. '6' → logprob: -11.007765769958496
    7. '006' → logprob: -11.757765769958496
    8. '9' → logprob: -12.632765769958496
    9. '07' → logprob: -13.007765769958496
    10. '_' → logprob: -13.132765769958496

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005236956290900707
    2. ')' → logprob: -5.255237102508545
    3. '00' → logprob: -13.005236625671387
    4. ')
' → logprob: -14.505236625671387
    5. '000' → logprob: -15.755236625671387
    6. ' )' → logprob: -16.005237579345703
    7. '(' → logprob: -16.880237579345703
    8. ' ' → logprob: -17.005237579345703
    9. '))' → logprob: -17.130237579345703
    10. '1' → logprob: -17.130237579345703

Token 188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.875000953674316
    4. ')

' → logprob: -18.25
    5. '))' → logprob: -18.625
    6. ')`' → logprob: -19.375
    7. ')
' → logprob: -19.5
    8. '),' → logprob: -20.0
    9. '0' → logprob: -20.125
    10. ')#' → logprob: -20.5

Token 189: 'mod' (ID: 4847)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40763843059539795
    2. 'def' → logprob: -1.407638430595398
    3. 'class' → logprob: -3.4076385498046875
    4. 'n' → logprob: -3.6576385498046875
    5. 'd' → logprob: -4.0326385498046875
    6. '

' → logprob: -4.7826385498046875
    7. '' → logprob: -6.5326385498046875
    8. ' 
' → logprob: -6.7826385498046875
    9. '\n' → logprob: -7.4076385498046875
    10. '#' → logprob: -7.9076385498046875

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08379460871219635
    2. '=' → logprob: -2.583794593811035
    3. ' ' → logprob: -5.958794593811035
    4. '_' → logprob: -6.083794593811035
    5. ' _' → logprob: -10.958794593811035
    6. ',' → logprob: -12.333794593811035
    7. '  ' → logprob: -13.583794593811035
    8. ' ' → logprob: -13.708794593811035
    9. ' ,' → logprob: -14.083794593811035
    10. '_=' → logprob: -14.083794593811035

Token 191: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6942963004112244
    2. '10' → logprob: -0.6942963004112244
    3. '100' → logprob: -6.819296360015869
    4. '1' → logprob: -9.819295883178711
    5. '998' → logprob: -14.819295883178711
    6. 'int' → logprob: -14.944295883178711
    7. '999' → logprob: -15.194295883178711
    8. ' ' → logprob: -16.06929588317871
    9. ' 
' → logprob: -16.19429588317871
    10. ' (' → logprob: -16.19429588317871

Token 192: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0015500946901738644
    2. '100' → logprob: -6.501550197601318
    3. ' ' → logprob: -10.12654972076416
    4. '1' → logprob: -12.00154972076416
    5. '998' → logprob: -13.37654972076416
    6. 'int' → logprob: -16.626550674438477
    7. '109' → logprob: -18.501550674438477
    8. '１０' → logprob: -18.626550674438477
    9. '999' → logprob: -18.751550674438477
    10. 'pow' → logprob: -19.376550674438477

Token 193: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00682702474296093
    2. '9' → logprob: -5.006826877593994
    3. '09' → logprob: -10.131827354431152
    4. '0' → logprob: -10.381827354431152
    5. '+' → logprob: -10.881827354431152
    6. '00' → logprob: -12.006827354431152
    7. '_' → logprob: -12.256827354431152
    8. '009' → logprob: -12.256827354431152
    9. '%' → logprob: -13.506827354431152
    10. '7' → logprob: -13.631827354431152

Token 194: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.00015622020873706788
    2. '007' → logprob: -9.25015640258789
    3. '7' → logprob: -10.12515640258789
    4. '0' → logprob: -11.62515640258789
    5. '+' → logprob: -11.87515640258789
    6. '00' → logprob: -13.25015640258789
    7. '07' → logprob: -13.75015640258789
    8. '9' → logprob: -14.12515640258789
    9. '009' → logprob: -15.37515640258789
    10. '19' → logprob: -15.50015640258789

Token 195: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.696889623621246e-06
    2. '07' → logprob: -13.25000286102295
    3. '9' → logprob: -14.25000286102295
    4. '+' → logprob: -16.000001907348633
    5. ' ' → logprob: -16.500001907348633
    6. '0' → logprob: -17.625001907348633
    7. '
' → logprob: -18.500001907348633
    8. '```' → logprob: -18.750001907348633
    9. '79' → logprob: -19.750001907348633
    10. '007' → logprob: -19.750001907348633

Token 196: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.003107368713244796
    2. '

' → logprob: -6.62810754776001
    3. '<|end|>' → logprob: -7.37810754776001
    4. '\n' → logprob: -7.75310754776001
    5. 'def' → logprob: -8.503107070922852
    6. '#' → logprob: -8.503107070922852
    7. '' → logprob: -9.253107070922852
    8. ' 
' → logprob: -9.253107070922852
    9. '
' → logprob: -9.753107070922852
    10. 'n' → logprob: -10.878107070922852

Token 197: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007387855555862188
    2. 'd' → logprob: -5.507387638092041
    3. 'class' → logprob: -6.382387638092041
    4. 'n' → logprob: -6.507387638092041
    5. 'de' → logprob: -9.3823881149292
    6. '#' → logprob: -11.3823881149292
    7. '
' → logprob: -11.6323881149292
    8. 'ndef' → logprob: -12.7573881149292
    9. 'dp' → logprob: -12.8823881149292
    10. ' 
' → logprob: -13.1323881149292

Token 198: ' solve' (ID: 17722)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07302900403738022
    2. ' solve' → logprob: -2.948029041290283
    3. ' factorial' → logprob: -5.198029041290283
    4. ' dfs' → logprob: -5.323029041290283
    5. 'main' → logprob: -6.948029041290283
    6. ' pow' → logprob: -6.948029041290283
    7. 'solve' → logprob: -7.323029041290283
    8. ' factor' → logprob: -7.323029041290283
    9. ' max' → logprob: -7.698029041290283
    10. ' mod' → logprob: -7.823029041290283

Token 199: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.685467764735222e-05
    2. ' ():' → logprob: -9.375086784362793
    3. '():
' → logprob: -13.500086784362793
    4. '()' → logprob: -14.375086784362793
    5. '(' → logprob: -18.75008773803711
    6. ' ()' → logprob: -20.25008773803711
    7. '():
' → logprob: -20.37508773803711
    8. '(":' → logprob: -20.37508773803711
    9. '().' → logprob: -20.75008773803711
    10. '(:' → logprob: -20.87508773803711

Token 200: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018812192603945732
    2. '(' → logprob: -4.89381217956543
    3. ':' → logprob: -5.14381217956543
    4. '    ' → logprob: -6.64381217956543
    5. ' ' → logprob: -6.89381217956543
    6. 'n' → logprob: -7.39381217956543
    7. '    
' → logprob: -7.39381217956543
    8. ' 
' → logprob: -7.76881217956543
    9. '()' → logprob: -8.51881217956543
    10. ')' → logprob: -8.64381217956543

Token 201: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7659012675285339
    2. ' ' → logprob: -1.0159013271331787
    3. 'n' (adapté à ' n') → logprob: -1.7659013271331787
    4. '   ' → logprob: -7.5159010887146
    5. '    ' → logprob: -7.7659010887146
    6. ' pass' → logprob: -8.265901565551758
    7. 'a' → logprob: -9.015901565551758
    8. ' 
' → logprob: -9.140901565551758
    9. '  ' → logprob: -9.515901565551758
    10. ' #' → logprob: -9.515901565551758

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22275161743164062
    2. ',' → logprob: -2.0977516174316406
    3. '=' → logprob: -2.5977516174316406
    4. ' ' → logprob: -6.472751617431641
    5. ' ,' → logprob: -7.097751617431641
    6. '=int' → logprob: -9.22275161743164
    7. ')' → logprob: -11.59775161743164
    8. ',int' → logprob: -11.97275161743164
    9. ' =
' → logprob: -11.97275161743164
    10. ',n' → logprob: -12.34775161743164

Token 203: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.03145468235015869
    2. ' I' → logprob: -3.531454563140869
    3. 'int' → logprob: -6.406454563140869
    4. ' int' → logprob: -9.906455039978027
    5. ' ' → logprob: -13.281455039978027
    6. '	I' → logprob: -16.53145408630371
    7. '  ' → logprob: -16.90645408630371
    8. '=int' → logprob: -17.40645408630371
    9. '_I' → logprob: -17.53145408630371
    10. 'LI' → logprob: -17.65645408630371

Token 204: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006403613369911909
    2. '()
' → logprob: -8.125639915466309
    3. ')' → logprob: -8.375639915466309
    4. '   ' → logprob: -9.500639915466309
    5. '(' → logprob: -10.875639915466309
    6. ' ()' → logprob: -11.875639915466309
    7. '())' → logprob: -12.625639915466309
    8. '()\' → logprob: -12.875639915466309
    9. ':' → logprob: -13.500639915466309
    10. ',' → logprob: -13.750639915466309

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006960927043110132
    2. '    
' → logprob: -5.631960868835449
    3. '    ' → logprob: -6.381960868835449
    4. ' ' → logprob: -7.756960868835449
    5. 'a' → logprob: -8.13196086883545
    6. '<|end|>' → logprob: -8.13196086883545
    7. '
' → logprob: -8.88196086883545
    8. ' 
' → logprob: -9.00696086883545
    9. ')' → logprob: -9.63196086883545
    10. 'n' → logprob: -10.00696086883545

Token 206: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0611518919467926
    2. 'arr' → logprob: -2.9361519813537598
    3. 'A' → logprob: -5.31115198135376
    4. ' a' → logprob: -7.81115198135376
    5. 's' → logprob: -8.436151504516602
    6. 'dp' → logprob: -8.436151504516602
    7. ' arr' → logprob: -8.811151504516602
    8. 'd' → logprob: -9.561151504516602
    9. 'lst' → logprob: -9.936151504516602
    10. 'data' → logprob: -10.311151504516602

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38691484928131104
    2. '=' → logprob: -1.136914849281311
    3. ' ' → logprob: -10.26191520690918
    4. 'rr' → logprob: -12.51191520690918
    5. ',' → logprob: -13.38691520690918
    6. 'r' → logprob: -14.26191520690918
    7. ' =[' → logprob: -14.38691520690918
    8. ' =
' → logprob: -14.51191520690918
    9. '   ' → logprob: -14.51191520690918
    10. 'rray' → logprob: -15.01191520690918

Token 208: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.023577256128191948
    2. ' LI' → logprob: -3.7735772132873535
    3. 'L' → logprob: -8.773577690124512
    4. 'LS' → logprob: -9.648577690124512
    5. ' L' → logprob: -9.773577690124512
    6. 'I' → logprob: -10.273577690124512
    7. ' ' → logprob: -11.648577690124512
    8. '[' → logprob: -12.398577690124512
    9. '[]' → logprob: -13.398577690124512
    10. '   ' → logprob: -13.648577690124512

Token 209: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5451681974809617e-05
    2. '()
' → logprob: -11.375015258789062
    3. '(' → logprob: -12.750015258789062
    4. ' ()' → logprob: -14.500015258789062
    5. '()]' → logprob: -15.250015258789062
    6. '()

' → logprob: -16.125015258789062
    7. '())' → logprob: -16.500015258789062
    8. '().' → logprob: -17.375015258789062
    9. '（）' → logprob: -17.375015258789062
    10. '()[' → logprob: -17.500015258789062

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4062582552433014
    2. '
' → logprob: -1.281258225440979
    3. '    
' → logprob: -3.2812583446502686
    4. '<|end|>' → logprob: -4.9062581062316895
    5. ' 
' → logprob: -5.1562581062316895
    6. ' ' → logprob: -6.6562581062316895
    7. '  
' → logprob: -7.2812581062316895
    8. 'a' → logprob: -8.031258583068848
    9. '   
' → logprob: -8.031258583068848
    10. '    ' → logprob: -8.031258583068848

Token 211: ' print' (ID: 2123)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1343783587217331
    2. 'cnt' → logprob: -3.509378433227539
    3. 'a' → logprob: -3.884378433227539
    4. 'count' → logprob: -4.009378433227539
    5. 'd' → logprob: -4.134378433227539
    6. 'freq' → logprob: -4.634378433227539
    7. 'c' → logprob: -5.134378433227539
    8. 'b' → logprob: -5.259378433227539
    9. 'ans' → logprob: -5.509378433227539
    10. 's' → logprob: -5.884378433227539

Token 212: '(["' (ID: 41418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7937920689582825
    2. '(sum' → logprob: -0.7937920689582825
    3. '(a' → logprob: -2.4187920093536377
    4. '(max' → logprob: -5.418792247772217
    5. '(len' → logprob: -6.293792247772217
    6. '(n' → logprob: -8.543791770935059
    7. '()' → logprob: -9.793791770935059
    8. '(min' → logprob: -10.043791770935059
    9. '((' → logprob: -10.418791770935059
    10. '(s' → logprob: -10.668791770935059

Token 213: 'First' (ID: 7127)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3401429057121277
    2. '"No' → logprob: -2.4651429653167725
    3. 'NO' → logprob: -2.4651429653167725
    4. '-' → logprob: -3.2151429653167725
    5. 'No' → logprob: -3.5901429653167725
    6. '0' → logprob: -4.215142726898193
    7. 'YES' → logprob: -4.840142726898193
    8. '"N' → logprob: -5.215142726898193
    9. 'Yes' → logprob: -5.715142726898193
    10. ''' → logprob: -6.090142726898193

Token 214: '","' (ID: 4294)
  Prédit: '","'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '","' → logprob: -0.41621243953704834
    2. '",' → logprob: -1.2912124395370483
    3. '(",' → logprob: -3.166212558746338
    4. '"' → logprob: -4.416212558746338
    5. '(","' → logprob: -5.041212558746338
    6. '("' → logprob: -5.791212558746338
    7. '(' → logprob: -7.041212558746338
    8. '()",' → logprob: -8.41621208190918
    9. '",
' → logprob: -8.91621208190918
    10. ' ","' → logprob: -9.16621208190918

Token 215: 'Second' (ID: 17422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05642490088939667
    2. 'Second' → logprob: -3.306424856185913
    3. ' "' → logprob: -4.056425094604492
    4. ' Second' → logprob: -7.181425094604492
    5. ' ' → logprob: -10.181425094604492
    6. '""' → logprob: -11.306425094604492
    7. 'second' → logprob: -11.431425094604492
    8. '","' → logprob: -11.681425094604492
    9. '"No' → logprob: -11.806425094604492
    10. 'Last' → logprob: -11.931425094604492

Token 216: '"][' (ID: 40438)
  Prédit: '"]['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"][' → logprob: -0.0027970336377620697
    2. '"]' → logprob: -6.2527971267700195
    3. '"]["' → logprob: -7.1277971267700195
    4. '][' → logprob: -10.37779712677002
    5. '"' → logprob: -10.62779712677002
    6. '")[' → logprob: -12.25279712677002
    7. '"])' → logprob: -13.25279712677002
    8. '"[' → logprob: -14.37779712677002
    9. ']["' → logprob: -14.50279712677002
    10. '"])
' → logprob: -14.62779712677002

Token 217: '((' (ID: 2054)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13375985622406006
    2. ' a' → logprob: -2.6337599754333496
    3. 'sum' → logprob: -3.8837599754333496
    4. 'n' → logprob: -4.63375997543335
    5. ' sum' → logprob: -5.00875997543335
    6. '(a' → logprob: -5.38375997543335
    7. ' n' → logprob: -5.75875997543335
    8. 'len' → logprob: -6.13375997543335
    9. ' not' → logprob: -6.50875997543335
    10. 'not' → logprob: -6.63375997543335

Token 218: 'n' (ID: 77)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.07238698750734329
    2. 'a' → logprob: -2.9473869800567627
    3. 'n' → logprob: -4.572387218475342
    4. '(sum' → logprob: -6.447387218475342
    5. 'min' → logprob: -6.572387218475342
    6. 'len' → logprob: -6.697387218475342
    7. 'max' → logprob: -6.947387218475342
    8. 'xor' → logprob: -7.572387218475342
    9. 'math' → logprob: -8.072386741638184
    10. '(n' → logprob: -8.322386741638184

Token 219: '&' (ID: 5)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7773492932319641
    2. 'a' → logprob: -1.9023492336273193
    3. ' -' → logprob: -2.1523492336273193
    4. '%' → logprob: -2.2773492336273193
    5. '+' → logprob: -2.9023492336273193
    6. 'sum' → logprob: -3.0273492336273193
    7. ' %' → logprob: -3.4023492336273193
    8. ' +' → logprob: -4.277349472045898
    9. ')' → logprob: -5.027349472045898
    10. ' ' → logprob: -5.277349472045898

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005018008523620665
    2. 'a' → logprob: -8.25050163269043
    3. ' ' → logprob: -8.50050163269043
    4. '(a' → logprob: -11.50050163269043
    5. ' a' → logprob: -11.75050163269043
    6. ' (' → logprob: -12.00050163269043
    7. '(' → logprob: -12.25050163269043
    8. '
' → logprob: -13.00050163269043
    9. 'n' → logprob: -13.50050163269043
    10. '(n' → logprob: -13.75050163269043

Token 221: ')&' (ID: 34370)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20255115628242493
    2. ')==' → logprob: -1.7025511264801025
    3. ' )' → logprob: -7.577551364898682
    4. ')>>' → logprob: -8.452550888061523
    5. ')^' → logprob: -8.952550888061523
    6. ')<<' → logprob: -9.452550888061523
    7. ')
' → logprob: -9.827550888061523
    8. '==' → logprob: -10.202550888061523
    9. '))' → logprob: -10.702550888061523
    10. ')!=' → logprob: -11.327550888061523

Token 222: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09285129606723785
    2. '(a' → logprob: -3.092851400375366
    3. ' (' → logprob: -4.092851161956787
    4. ' ' → logprob: -4.592851161956787
    5. 'a' → logprob: -4.842851161956787
    6. ' a' → logprob: -4.967851161956787
    7. '(' → logprob: -6.842851161956787
    8. '((' → logprob: -8.342851638793945
    9. ' ((' → logprob: -9.342851638793945
    10. '0' → logprob: -9.592851638793945

Token 223: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5254270434379578
    2. '(a' → logprob: -1.2754271030426025
    3. 'sum' → logprob: -2.9004271030426025
    4. ' (' → logprob: -3.6504271030426025
    5. ' a' → logprob: -3.6504271030426025
    6. '(sum' → logprob: -4.400426864624023
    7. ' sum' → logprob: -5.150426864624023
    8. '1' → logprob: -6.525426864624023
    9. 'all' → logprob: -7.150426864624023
    10. '((' → logprob: -7.400426864624023

Token 224: '^' (ID: 61)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.4127899706363678
    2. ')' → logprob: -2.287790060043335
    3. 'a' → logprob: -3.787790060043335
    4. '[' → logprob: -3.787790060043335
    5. '<<' → logprob: -4.162789821624756
    6. '^' → logprob: -4.162789821624756
    7. '][' → logprob: -4.287789821624756
    8. ')a' → logprob: -4.287789821624756
    9. '
' → logprob: -4.412789821624756
    10. ' and' → logprob: -4.537789821624756

Token 225: 'sum' (ID: 12298)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30324745178222656
    2. '(a' → logprob: -1.4282474517822266
    3. ' (' → logprob: -4.678247451782227
    4. ' a' → logprob: -5.428247451782227
    5. 'sum' → logprob: -5.803247451782227
    6. '(' → logprob: -6.553247451782227
    7. '(sum' → logprob: -6.553247451782227
    8. '((' → logprob: -6.678247451782227
    9. '1' → logprob: -8.178247451782227
    10. 'int' → logprob: -8.928247451782227

Token 226: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.019161228090524673
    2. '([' → logprob: -4.519161224365234
    3. '(x' → logprob: -5.394161224365234
    4. '(i' → logprob: -6.269161224365234
    5. '(' → logprob: -7.769161224365234
    6. '(
' → logprob: -8.019161224365234
    7. '((' → logprob: -8.019161224365234
    8. 'a' → logprob: -8.144161224365234
    9. '([(' → logprob: -8.769161224365234
    10. '[a' → logprob: -10.019161224365234

Token 227: ')&' (ID: 34370)
  Prédit: '()%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()%' → logprob: -1.0158685445785522
    2. '[i' → logprob: -1.2658685445785522
    3. '()[' → logprob: -1.8908685445785522
    4. '()' → logprob: -2.640868663787842
    5. ')%' → logprob: -3.265868663787842
    6. '[' → logprob: -3.515868663787842
    7. ')' → logprob: -3.640868663787842
    8. '%' → logprob: -3.890868663787842
    9. ')))' → logprob: -5.515868663787842
    10. '())' → logprob: -5.515868663787842

Token 228: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007220837287604809
    2. ' ' → logprob: -7.2507219314575195
    3. '
' → logprob: -11.87572193145752
    4. '   ' → logprob: -13.25072193145752
    5. '

' → logprob: -14.37572193145752
    6. '
' → logprob: -14.56322193145752
    7. ' ' → logprob: -14.56322193145752
    8. '' → logprob: -15.75072193145752
    9. '(' → logprob: -15.75072193145752
    10. '#' → logprob: -16.125722885131836

Token 229: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7274683713912964
    2. ')])' → logprob: -0.9774683713912964
    3. '))' → logprob: -2.727468490600586
    4. ')]' → logprob: -2.852468490600586
    5. '())' → logprob: -4.727468490600586
    6. ')==' → logprob: -5.727468490600586
    7. ')))' → logprob: -6.727468490600586
    8. ' )' → logprob: -6.852468490600586
    9. ')>>' → logprob: -7.227468490600586
    10. '()))' → logprob: -7.602468490600586

Token 230: '|' (ID: 91)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006143859936855733
    2. ']' → logprob: -8.625614166259766
    3. ')])' → logprob: -8.875614166259766
    4. ' ])' → logprob: -9.125614166259766
    5. '])
' → logprob: -9.750614166259766
    6. ')' → logprob: -9.750614166259766
    7. ']])' → logprob: -10.625614166259766
    8. ']))' → logprob: -11.125614166259766
    9. '==' → logprob: -11.750614166259766
    10. ')]' → logprob: -12.000614166259766

Token 231: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5046027302742004
    2. '(' → logprob: -1.7546026706695557
    3. '1' → logprob: -3.0046026706695557
    4. '(a' → logprob: -3.1296026706695557
    5. '0' → logprob: -3.5046026706695557
    6. ' (' → logprob: -3.6296026706695557
    7. '(n' → logprob: -3.6296026706695557
    8. '(sum' → logprob: -3.6296026706695557
    9. ' ((' → logprob: -4.379602909088135
    10. '(((' → logprob: -5.754602909088135

Token 232: '1' (ID: 16)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.296400785446167
    2. 'n' → logprob: -1.671400785446167
    3. '1' → logprob: -1.796400785446167
    4. '(sum' → logprob: -2.421400785446167
    5. 'sum' → logprob: -2.546400785446167
    6. 'a' → logprob: -2.546400785446167
    7. '(' → logprob: -3.296400785446167
    8. '((' → logprob: -3.296400785446167
    9. '(a' → logprob: -3.421400785446167
    10. '0' → logprob: -5.296401023864746

Token 233: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.5505250692367554
    2. '&' → logprob: -1.3005250692367554
    3. '&a' → logprob: -2.300525188446045
    4. ' &' → logprob: -4.300525188446045
    5. '&(' → logprob: -4.800525188446045
    6. '
' → logprob: -4.800525188446045
    7. ' ^' → logprob: -5.425525188446045
    8. ')' → logprob: -6.175525188446045
    9. ' ' → logprob: -6.300525188446045
    10. '[a' → logprob: -6.300525188446045

Token 234: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9743866920471191
    2. 'sum' → logprob: -1.4743866920471191
    3. 'n' → logprob: -2.349386692047119
    4. '(sum' → logprob: -2.599386692047119
    5. 'len' → logprob: -2.974386692047119
    6. '(len' → logprob: -2.974386692047119
    7. 'a' → logprob: -3.099386692047119
    8. '(a' → logprob: -3.349386692047119
    9. '((' → logprob: -3.474386692047119
    10. ' (' → logprob: -6.099386692047119

Token 235: '&' (ID: 5)
  Prédit: ')&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.21400272846221924
    2. '&' → logprob: -1.7140027284622192
    3. ')' → logprob: -4.58900260925293
    4. '[' → logprob: -7.21400260925293
    5. ')])' → logprob: -8.08900260925293
    6. ']&' → logprob: -8.08900260925293
    7. '))' → logprob: -8.33900260925293
    8. ')]' → logprob: -8.33900260925293
    9. '&a' → logprob: -8.83900260925293
    10. '&
' → logprob: -9.58900260925293

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.126521035796031e-05
    2. ' ' → logprob: -9.875091552734375
    3. 'a' → logprob: -10.625091552734375
    4. '(' → logprob: -12.750091552734375
    5. '
' → logprob: -13.250091552734375
    6. '2' → logprob: -13.375091552734375
    7. '7' → logprob: -13.750091552734375
    8. '0' → logprob: -13.750091552734375
    9. '(a' → logprob: -13.875091552734375
    10. '3' → logprob: -13.937591552734375

Token 237: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.11185147613286972
    2. ')' → logprob: -2.361851453781128
    3. ')])' → logprob: -5.361851692199707
    4. ')]' → logprob: -6.236851692199707
    5. '))' → logprob: -6.361851692199707
    6. ')
' → logprob: -6.611851692199707
    7. ')>>' → logprob: -7.361851692199707
    8. ')<<' → logprob: -7.861851692199707
    9. ' )' → logprob: -8.611851692199707
    10. '&' → logprob: -9.111851692199707

Token 238: '(' (ID: 7)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.265468031167984
    2. '(' → logprob: -2.515468120574951
    3. '(any' → logprob: -2.890468120574951
    4. '((' → logprob: -3.140468120574951
    5. ' (' → logprob: -4.390468120574951
    6. '(all' → logprob: -4.515468120574951
    7. 'sum' → logprob: -5.015468120574951
    8. '(a' → logprob: -5.265468120574951
    9. '(s' → logprob: -5.515468120574951
    10. '(bool' → logprob: -5.765468120574951

Token 239: '1' (ID: 16)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.647371232509613
    2. '(' → logprob: -1.5223712921142578
    3. 'sum' → logprob: -1.6473712921142578
    4. '1' → logprob: -3.647371292114258
    5. ' sum' → logprob: -4.272371292114258
    6. ' (' → logprob: -4.522371292114258
    7. '((' → logprob: -5.397371292114258
    8. '(a' → logprob: -5.772371292114258
    9. '0' → logprob: -6.397371292114258
    10. '(s' → logprob: -6.522371292114258

Token 240: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.00017076305812224746
    2. '^(' → logprob: -9.375170707702637
    3. '&' → logprob: -9.875170707702637
    4. '^)' → logprob: -11.625170707702637
    5. ' ^' → logprob: -11.875170707702637
    6. '&a' → logprob: -12.625170707702637
    7. '[a' → logprob: -13.000170707702637
    8. '^[' → logprob: -13.250170707702637
    9. '
' → logprob: -13.500170707702637
    10. '^

' → logprob: -13.750170707702637

Token 241: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04148353636264801
    2. '(sum' → logprob: -3.2914836406707764
    3. 'a' → logprob: -6.291483402252197
    4. ' sum' → logprob: -7.416483402252197
    5. '(a' → logprob: -8.041483879089355
    6. '((' → logprob: -8.291483879089355
    7. 'len' → logprob: -9.041483879089355
    8. '(' → logprob: -9.791483879089355
    9. ' (' → logprob: -10.166483879089355
    10. 's' → logprob: -10.416483879089355

Token 242: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0007479215855710208
    2. '(' → logprob: -7.500748157501221
    3. 'a' → logprob: -8.625747680664062
    4. '(
' → logprob: -12.000747680664062
    5. '((' → logprob: -13.250747680664062
    6. ')' → logprob: -13.250747680664062
    7. '([' → logprob: -13.500747680664062
    8. ' (' → logprob: -14.125747680664062
    9. '[a' → logprob: -14.375747680664062
    10. '```' → logprob: -14.625747680664062

Token 243: ')&' (ID: 34370)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.5264215469360352
    2. ')&' → logprob: -0.9014215469360352
    3. '()' → logprob: -6.026421546936035
    4. ')' → logprob: -8.276421546936035
    5. ']&' → logprob: -8.401421546936035
    6. '[' → logprob: -8.776421546936035
    7. ' &' → logprob: -9.526421546936035
    8. '
' → logprob: -9.776421546936035
    9. '&
' → logprob: -10.651421546936035
    10. '))' → logprob: -10.776421546936035

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001637300301808864
    2. ' ' → logprob: -9.250164031982422
    3. '0' → logprob: -9.750164031982422
    4. '
' → logprob: -12.562664031982422
    5. ')' → logprob: -13.750164031982422
    6. '```' → logprob: -14.125164031982422
    7. '

' → logprob: -14.500164031982422
    8. '   ' → logprob: -15.250164031982422
    9. 'n' → logprob: -15.500164031982422
    10. '2' → logprob: -15.500164031982422

Token 245: ')&' (ID: 34370)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.47299429774284363
    2. ')]' → logprob: -1.097994327545166
    3. ')' → logprob: -3.597994327545166
    4. '))' → logprob: -4.222994327545166
    5. ')))' → logprob: -7.847994327545166
    6. ')])
' → logprob: -7.972994327545166
    7. '])' → logprob: -8.972993850708008
    8. '):' → logprob: -9.597993850708008
    9. ')][' → logprob: -9.722993850708008
    10. ')])

' → logprob: -9.722993850708008

Token 246: '(' (ID: 7)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5081031918525696
    2. 'a' → logprob: -1.3831031322479248
    3. '(' → logprob: -2.758103132247925
    4. '(n' → logprob: -3.633103132247925
    5. '((' → logprob: -4.383103370666504
    6. '(len' → logprob: -4.508103370666504
    7. '1' → logprob: -5.008103370666504
    8. ' (' → logprob: -5.258103370666504
    9. 'all' → logprob: -5.883103370666504
    10. 'any' → logprob: -5.883103370666504

Token 247: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0346349477767944
    2. '(a' → logprob: -1.2846349477767944
    3. 'any' → logprob: -2.034635066986084
    4. 'all' → logprob: -2.659635066986084
    5. '(any' → logprob: -3.284635066986084
    6. ' any' → logprob: -3.909635066986084
    7. '(n' → logprob: -4.409635066986084
    8. '(all' → logprob: -4.534635066986084
    9. 'max' → logprob: -4.659635066986084
    10. '(' → logprob: -4.784635066986084

Token 248: '^' (ID: 61)
  Prédit: '^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '^' → logprob: -0.6689227223396301
    2. '&' → logprob: -0.9189227223396301
    3. '&a' → logprob: -3.6689226627349854
    4. ')])' → logprob: -3.9189226627349854
    5. '))' → logprob: -4.2939229011535645
    6. '|' → logprob: -5.2939229011535645
    7. ')' → logprob: -5.4189229011535645
    8. '
' → logprob: -5.7939229011535645
    9. ')]' → logprob: -5.7939229011535645
    10. '&(' → logprob: -6.0439229011535645

Token 249: 'min' (ID: 1493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2919466197490692
    2. '(a' → logprob: -2.5419466495513916
    3. '((' → logprob: -3.0419466495513916
    4. '(n' → logprob: -3.2919466495513916
    5. '1' → logprob: -3.4169466495513916
    6. 'n' → logprob: -3.5419466495513916
    7. 'sum' → logprob: -4.6669464111328125
    8. '(' → logprob: -4.7919464111328125
    9. '0' → logprob: -5.7919464111328125
    10. '(sum' → logprob: -6.1669464111328125

Token 250: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0071013206616044044
    2. 'a' → logprob: -5.007101535797119
    3. '(' → logprob: -8.632101058959961
    4. '(
' → logprob: -8.882101058959961
    5. ' (' → logprob: -11.007101058959961
    6. ')' → logprob: -11.132101058959961
    7. '()' → logprob: -11.757101058959961
    8. ')a' → logprob: -11.757101058959961
    9. ' a' → logprob: -12.132101058959961
    10. '))' → logprob: -12.507101058959961

Token 251: ')&' (ID: 34370)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -1.6684556007385254
    2. '()' → logprob: -1.7934556007385254
    3. '()))' → logprob: -1.7934556007385254
    4. '())' → logprob: -1.9184556007385254
    5. ')' → logprob: -2.2934556007385254
    6. '())))' → logprob: -2.5434556007385254
    7. '))' → logprob: -2.6684556007385254
    8. '))))' → logprob: -3.6684556007385254
    9. ')]' → logprob: -3.9184556007385254
    10. ')])' → logprob: -4.293455600738525

Token 252: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014565435703843832
    2. '0' → logprob: -7.6264567375183105
    3. '))' → logprob: -7.6264567375183105
    4. ' ' → logprob: -8.751456260681152
    5. '
' → logprob: -9.376456260681152
    6. ')))' → logprob: -9.876456260681152
    7. ')' → logprob: -10.126456260681152
    8. '(' → logprob: -10.126456260681152
    9. ']))' → logprob: -11.126456260681152
    10. '```' → logprob: -11.126456260681152

Token 253: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.28708416223526
    2. ')])' → logprob: -2.0370841026306152
    3. ')]' → logprob: -2.6620841026306152
    4. ')' → logprob: -3.1620841026306152
    5. ')))' → logprob: -5.162084102630615
    6. ']))' → logprob: -8.537084579467773
    7. '))]
' → logprob: -8.662084579467773
    8. '))))' → logprob: -8.912084579467773
    9. '()))' → logprob: -9.412084579467773
    10. ')
' → logprob: -9.537084579467773

Token 254: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.006945652887225151
    2. ')])' → logprob: -5.256945610046387
    3. ')' → logprob: -6.631945610046387
    4. ')]' → logprob: -8.756945610046387
    5. ']' → logprob: -9.506945610046387
    6. ']))' → logprob: -9.881945610046387
    7. '])
' → logprob: -9.881945610046387
    8. '])]' → logprob: -10.881945610046387
    9. ' ])' → logprob: -11.256945610046387
    10. ']])' → logprob: -11.381945610046387

Token 255: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6739957928657532
    2. '<|end|>' → logprob: -0.7989957928657532
    3. '()' → logprob: -4.2989959716796875
    4. ')' → logprob: -4.5489959716796875
    5. '(' → logprob: -4.6739959716796875
    6. '(
' → logprob: -6.0489959716796875
    7. '```' → logprob: -6.4239959716796875
    8. '#' → logprob: -6.6739959716796875
    9. '\n' → logprob: -7.6739959716796875
    10. '()
' → logprob: -7.6739959716796875

Token 256: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23778896033763885
    2. '<|end|>' → logprob: -1.8627889156341553
    3. '\n' → logprob: -3.1127889156341553
    4. 'solve' → logprob: -4.862789154052734
    5. ' solve' → logprob: -7.362789154052734
    6. '0' → logprob: -7.362789154052734
    7. '```' → logprob: -7.487789154052734
    8. '[' → logprob: -8.112789154052734
    9. '#' → logprob: -8.112789154052734
    10. '

' → logprob: -8.362789154052734

Token 258: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 259: 'Solve' (ID: 144594)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 260: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17829839885234833
    2. 'if' → logprob: -2.5532984733581543
    3. '<|end|>' → logprob: -2.5532984733581543
    4. '()
' → logprob: -6.428298473358154
    5. '```' → logprob: -6.553298473358154
    6. '
' → logprob: -6.678298473358154
    7. 'solve' → logprob: -7.428298473358154
    8. '()

' → logprob: -7.803298473358154
    9. '#' → logprob: -8.178297996520996
    10. '(' → logprob: -8.303297996520996

Token 261: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5761318802833557
    2. 'solve' → logprob: -0.8261318802833557
    3. '()' → logprob: -8.951131820678711
    4. ' solve' → logprob: -10.826131820678711
    5. '```' → logprob: -11.451131820678711
    6. '{' → logprob: -12.076131820678711
    7. ' if' → logprob: -12.451131820678711
    8. 'def' → logprob: -12.576131820678711
    9. '.solve' → logprob: -12.576131820678711
    10. '#' → logprob: -12.951131820678711

Token 262: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018155209720134735
    2. '__' → logprob: -4.018155097961426
    3. '_' → logprob: -12.518155097961426
    4. ' ' → logprob: -14.018155097961426
    5. '_name' → logprob: -14.768155097961426
    6. ' _' → logprob: -15.268155097961426
    7. 'name' → logprob: -16.643156051635742
    8. ' ___' → logprob: -16.643156051635742
    9. '___' → logprob: -16.643156051635742
    10. ' ' → logprob: -16.893156051635742

Token 263: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013162701390683651
    2. '_' → logprob: -5.513162612915039
    3. ' __' → logprob: -5.513162612915039
    4. ' ==' → logprob: -5.638162612915039
    5. '==' → logprob: -6.638162612915039
    6. '___' → logprob: -10.388162612915039
    7. '=="' → logprob: -10.763162612915039
    8. '__.__' → logprob: -11.138162612915039
    9. '____' → logprob: -11.638162612915039
    10. '_main' → logprob: -11.638162612915039

Token 264: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.36574100604048e-06
    2. '_' → logprob: -13.500004768371582
    3. '__.__' → logprob: -13.625004768371582
    4. '==' → logprob: -13.750004768371582
    5. '___' → logprob: -15.625004768371582
    6. '__.' → logprob: -16.125003814697266
    7. '__('' → logprob: -16.375003814697266
    8. '____' → logprob: -16.375003814697266
    9. '__
' → logprob: -16.875003814697266
    10. '__["' → logprob: -17.125003814697266

Token 265: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.061043452471494675
    2. '==' → logprob: -3.3110435009002686
    3. ' ==' → logprob: -3.9360435009002686
    4. '=="' → logprob: -5.8110432624816895
    5. '_' → logprob: -9.436043739318848
    6. '=' → logprob: -9.561043739318848
    7. ' =="' → logprob: -10.936043739318848
    8. '=='' → logprob: -11.186043739318848
    9. '==
' → logprob: -11.311043739318848
    10. ' __' → logprob: -11.311043739318848

Token 266: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019910898990929127
    2. ''' → logprob: -6.251991271972656
    3. ' "__' → logprob: -9.751991271972656
    4. '__' → logprob: -12.501991271972656
    5. ' '__' → logprob: -15.126991271972656
    6. '"user' → logprob: -16.126991271972656
    7. '"_' → logprob: -16.626991271972656
    8. '"class' → logprob: -17.376991271972656
    9. ''"' → logprob: -17.501991271972656
    10. '"
' → logprob: -17.501991271972656

Token 267: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00026181264547631145
    2. 'name' → logprob: -8.250262260437012
    3. 'ma' → logprob: -15.250262260437012
    4. '_main' → logprob: -15.500262260437012
    5. '__' → logprob: -16.375261306762695
    6. ' main' → logprob: -17.125261306762695
    7. 'm' → logprob: -19.250261306762695
    8. '(main' → logprob: -19.625261306762695
    9. '	main' → logprob: -20.750261306762695
    10. '__":
' → logprob: -20.875261306762695

Token 268: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12812848389148712
    2. '__' → logprob: -2.1281285285949707
    3. '__:' → logprob: -7.253128528594971
    4. '__':
' → logprob: -7.628128528594971
    5. '_' → logprob: -12.753128051757812
    6. '():
' → logprob: -14.378128051757812
    7. '__
' → logprob: -14.628128051757812
    8. ':' → logprob: -14.878128051757812
    9. '__["' → logprob: -15.003128051757812
    10. '__",' → logprob: -15.753128051757812

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09493393450975418
    2. ' solve' → logprob: -2.4699339866638184
    3. 'solve' → logprob: -5.219933986663818
    4. '.solve' → logprob: -8.71993350982666
    5. '<|end|>' → logprob: -8.71993350982666
    6. '    
' → logprob: -9.46993350982666
    7. '	s' → logprob: -9.59493350982666
    8. '
' → logprob: -11.09493350982666
    9. ' ' → logprob: -11.21993350982666
    10. '   ' → logprob: -11.59493350982666

Token 270: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.0016630393220111728
    2. ' solve' → logprob: -6.6266632080078125
    3. '   ' → logprob: -8.001663208007812
    4. '.solve' → logprob: -13.251663208007812
    5. '	s' → logprob: -15.501663208007812
    6. '  ' → logprob: -16.376663208007812
    7. ' ' → logprob: -17.251663208007812
    8. '```' → logprob: -18.001663208007812
    9. '   ' → logprob: -18.126663208007812
    10. ' ' → logprob: -18.251663208007812

Token 271: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.702754474943504e-05
    2. '()
' → logprob: -10.75003719329834
    3. '(' → logprob: -11.25003719329834
    4. ' ()' → logprob: -13.75003719329834
    5. '()`' → logprob: -15.25003719329834
    6. '()?' → logprob: -15.50003719329834
    7. '()<' → logprob: -15.62503719329834
    8. '();' → logprob: -15.75003719329834
    9. '()">' → logprob: -15.75003719329834
    10. '()\' → logprob: -16.375036239624023


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 269
Tokens correctement prédits (1ère position, stricte): 110
Tokens correctement prédits (1ère position, avec adaptation): 115
Tokens correctement prédits (top 10): 217
Précision stricte (1ère position): 40.89%
Précision adaptée (1ère position): 42.75%
Précision (top 10): 80.67%
================================================================================
