================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline
sys.setrecursionlimit(1000000)
from collections import deque, Counter
def getN():
    return int(input())
def getList():
    return list(map(int, input().split()))
import math

INF = 10 ** 20

def main():
    n = getN()
    nums = getList()
    sm = sum(nums)
    ans = sm % 2
    if n % 2 == 1:
        if ans == 1:
            print("First")
        else:
            print("Second")
        return
    if n % 2 == 0:
        mn = min(nums)
        if ans == 1:
            if sm == mn * n:
                print("Second")
            else:
                print("First")

        else:
            if mn % 2 == 1:
                print("First")
            else:
                print("Second")

    # print(ans)
    # if ans == 0:
    #     print("Second")
    # else:
    #     print("First")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29739612340927124
    2. '\n' → logprob: -1.547396183013916
    3. '<|end|>' → logprob: -3.797396183013916
    4. '\' → logprob: -4.922396183013916
    5. 'newline' → logprob: -5.672396183013916
    6. 'import' → logprob: -5.672396183013916
    7. '<|end|>' → logprob: -6.047396183013916
    8. '
' → logprob: -6.922396183013916
    9. '```' → logprob: -6.922396183013916
    10. '' → logprob: -7.547396183013916

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056168390437960625
    2. '.' → logprob: -5.255616664886475
    3. ' (' → logprob: -9.255617141723633
    4. '(
' → logprob: -9.380617141723633
    5. ')' → logprob: -9.755617141723633
    6. '()' → logprob: -10.005617141723633
    7. '[' → logprob: -11.005617141723633
    8. '('' → logprob: -11.130617141723633
    9. ' ' → logprob: -11.630617141723633
    10. '=' → logprob: -11.755617141723633

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013695230009034276
    2. ' .' → logprob: -7.376369476318359
    3. '.stdin' → logprob: -7.751369476318359
    4. '.import' → logprob: -9.25136947631836
    5. '.readline' → logprob: -9.50136947631836
    6. '.
' → logprob: -10.12636947631836
    7. '.argv' → logprob: -10.37636947631836
    8. '.stdout' → logprob: -11.37636947631836
    9. '.input' → logprob: -11.50136947631836
    10. '.exit' → logprob: -12.00136947631836

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3237557113170624
    2. '.' → logprob: -1.3237557411193848
    3. '.read' → logprob: -4.573755741119385
    4. '.readlines' → logprob: -9.698755264282227
    5. '```' → logprob: -10.823755264282227
    6. '.Read' → logprob: -11.448755264282227
    7. 'read' → logprob: -12.323755264282227
    8. '().' → logprob: -12.948755264282227
    9. ' .' → logprob: -13.073755264282227
    10. '.write' → logprob: -13.198755264282227

Token 8: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 'sys' (ID: 17324)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10097215324640274
    2. '(' → logprob: -2.3509721755981445
    3. '().' → logprob: -8.100972175598145
    4. '()
' → logprob: -8.350972175598145
    5. '(
' → logprob: -9.725972175598145
    6. '()

' → logprob: -10.100972175598145
    7. '()\' → logprob: -10.100972175598145
    8. '#' → logprob: -11.600972175598145
    9. '())' → logprob: -11.725972175598145
    10. ')' → logprob: -11.725972175598145

Token 10: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.466968650580384e-05
    2. '.readline' → logprob: -11.125054359436035
    3. '.exit' → logprob: -11.500054359436035
    4. '.stdout' → logprob: -12.125054359436035
    5. '.write' → logprob: -12.375054359436035
    6. ' .' → logprob: -12.375054359436035
    7. '.stdin' → logprob: -13.250054359436035
    8. '.stderr' → logprob: -13.375054359436035
    9. '."""' → logprob: -13.500054359436035
    10. '.setdefault' → logprob: -13.625054359436035

Token 11: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.03941812366247177
    2. 'limit' → logprob: -4.6644182205200195
    3. 's' → logprob: -5.0394182205200195
    4. '_rec' → logprob: -5.2894182205200195
    5. '_' → logprob: -5.5394182205200195
    6. '_limit' → logprob: -6.0394182205200195
    7. 'trace' → logprob: -6.1644182205200195
    8. 'set' → logprob: -6.4144182205200195
    9. '_version' → logprob: -6.7894182205200195
    10. 'execution' → logprob: -6.9144182205200195

Token 12: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.05212067440152168
    2. 'ursive' → logprob: -3.4271206855773926
    3. '_limit' → logprob: -4.427120685577393
    4. 'urs' → logprob: -5.677120685577393
    5. 'limit' → logprob: -6.552120685577393
    6. 'ur' → logprob: -7.427120685577393
    7. '_' → logprob: -8.677120208740234
    8. '_set' → logprob: -8.677120208740234
    9. 't' → logprob: -8.927120208740234
    10. '_len' → logprob: -10.177120208740234

Token 13: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.005259014666080475
    2. '_limit' → logprob: -5.255259037017822
    3. ' limit' → logprob: -10.630258560180664
    4. '_depth' → logprob: -14.630258560180664
    5. 'depth' → logprob: -15.005258560180664
    6. 'lim' → logprob: -15.630258560180664
    7. 'Limit' → logprob: -17.005258560180664
    8. '-limit' → logprob: -17.005258560180664
    9. '(limit' → logprob: -17.005258560180664
    10. '_LIMIT' → logprob: -18.380258560180664

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.2729995988775045e-06
    2. ' (' → logprob: -12.375006675720215
    3. '((' → logprob: -14.250006675720215
    4. '(
' → logprob: -14.500006675720215
    5. '(

' → logprob: -15.125006675720215
    6. '()' → logprob: -16.2500057220459
    7. '("("' → logprob: -16.5000057220459
    8. '(`' → logprob: -16.7500057220459
    9. '```' → logprob: -17.1250057220459
    10. '40' → logprob: -17.1250057220459

Token 15: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0011708177626132965
    2. '100' → logprob: -6.751170635223389
    3. '1' → logprob: -15.251171112060547
    4. ' ' → logprob: -15.376171112060547
    5. 'int' → logprob: -16.626171112060547
    6. '500' → logprob: -17.001171112060547
    7. '999' → logprob: -18.126171112060547
    8. '１０' → logprob: -18.126171112060547
    9. '300' → logprob: -18.251171112060547
    10. '200' → logprob: -18.251171112060547

Token 16: '000' (ID: 1302)
  Prédit: '00'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.6229550242424011
    2. '0' → logprob: -0.8729550242424011
    3. '000' → logprob: -3.122955083847046
    4. '4' → logprob: -6.872954845428467
    5. '6' → logprob: -7.497954845428467
    6. '5' → logprob: -8.247955322265625
    7. '9' → logprob: -10.997955322265625
    8. '3' → logprob: -12.497955322265625
    9. '06' → logprob: -12.497955322265625
    10. '04' → logprob: -12.622955322265625

Token 17: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03805606812238693
    2. '0' → logprob: -3.2880561351776123
    3. '1' → logprob: -12.163056373596191
    4. '+' → logprob: -12.913056373596191
    5. '))' → logprob: -12.913056373596191
    6. ' )' → logprob: -13.663056373596191
    7. '```' → logprob: -14.038056373596191
    8. ')
' → logprob: -14.163056373596191
    9. '`)' → logprob: -15.038056373596191
    10. '')' → logprob: -15.538056373596191

Token 18: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ' )' → logprob: -13.375001907348633
    3. ')
' → logprob: -15.625001907348633
    4. ' ' → logprob: -17.125001907348633
    5. '))' → logprob: -17.250001907348633
    6. '```' → logprob: -17.375001907348633
    7. ')

' → logprob: -18.625001907348633
    8. '')' → logprob: -18.750001907348633
    9. '）' → logprob: -18.750001907348633
    10. '0' → logprob: -18.875001907348633

Token 19: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8828638195991516
    2. 'def' → logprob: -1.6328637599945068
    3. '\n' → logprob: -2.257863759994507
    4. '

' → logprob: -2.257863759994507
    5. 'n' → logprob: -3.132863759994507
    6. '\' → logprob: -3.132863759994507
    7. '' → logprob: -3.382863759994507
    8. '```' → logprob: -3.507863759994507
    9. 'd' → logprob: -4.007863998413086
    10. '`' → logprob: -5.382863998413086

Token 20: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.3248884379863739
    2. ' ' → logprob: -1.3248884677886963
    3. ' math' → logprob: -5.199888229370117
    4. 'collections' → logprob: -5.449888229370117
    5. ' functools' → logprob: -7.074888229370117
    6. ' itertools' → logprob: -7.574888229370117
    7. ' io' → logprob: -8.449888229370117
    8. '_' → logprob: -9.824888229370117
    9. ' typing' → logprob: -10.574888229370117
    10. ' sys' → logprob: -10.699888229370117

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03735360503196716
    2. 'import' → logprob: -3.412353515625
    3. ' ' → logprob: -5.787353515625
    4. '.' → logprob: -7.412353515625
    5. '<|end|>' → logprob: -11.787353515625
    6. ' defaultdict' → logprob: -12.287353515625
    7. '	import' → logprob: -12.662353515625
    8. '```' → logprob: -12.787353515625
    9. '.import' → logprob: -13.287353515625
    10. ' ' → logprob: -13.537353515625

Token 22: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.03600631281733513
    2. ' defaultdict' → logprob: -4.036006450653076
    3. 'deque' → logprob: -4.036006450653076
    4. ' de' → logprob: -11.036005973815918
    5. 'de' → logprob: -11.911005973815918
    6. 'default' → logprob: -12.411005973815918
    7. ' d' → logprob: -13.411005973815918
    8. ' default' → logprob: -13.661005973815918
    9. ' dee' → logprob: -16.411006927490234
    10. 'd' → logprob: -16.536006927490234

Token 23: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.38531890511512756
    2. 'n' → logprob: -1.6353188753128052
    3. '
' → logprob: -3.5103189945220947
    4. 'def' → logprob: -3.6353189945220947
    5. 'deque' → logprob: -3.6353189945220947
    6. '' → logprob: -4.260318756103516
    7. 'q' → logprob: -4.385318756103516
    8. '\' → logprob: -5.885318756103516
    9. '#' → logprob: -5.885318756103516
    10. 'queue' → logprob: -6.260318756103516

Token 24: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.015018060803413391
    2. 'default' → logprob: -4.265017986297607
    3. ' Counter' → logprob: -7.265017986297607
    4. 'Counter' → logprob: -9.265018463134766
    5. ' default' → logprob: -10.515018463134766
    6. ' named' → logprob: -11.515018463134766
    7. 'named' → logprob: -11.765018463134766
    8. ' Ordered' → logprob: -12.015018463134766
    9. 'deque' → logprob: -12.765018463134766
    10. ' deque' → logprob: -12.765018463134766

Token 25: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38112854957580566
    2. '\' → logprob: -2.5061285495758057
    3. 'n' → logprob: -2.7561285495758057
    4. '' → logprob: -3.2561285495758057
    5. '\n' → logprob: -3.2561285495758057
    6. 'd' → logprob: -3.5061285495758057
    7. '```' → logprob: -4.256128311157227
    8. '

' → logprob: -4.506128311157227
    9. 'import' → logprob: -4.881128311157227
    10. '#' → logprob: -5.006128311157227

Token 26: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2756703794002533
    2. '

' → logprob: -1.5256704092025757
    3. 'import' → logprob: -4.525670528411865
    4. 'n' → logprob: -5.650670528411865
    5. 'def' → logprob: -5.650670528411865
    6. '\n' → logprob: -6.650670528411865
    7. '
' → logprob: -6.900670528411865
    8. 'd' → logprob: -7.525670528411865
    9. '```' → logprob: -7.525670528411865
    10. '' → logprob: -8.150670051574707

Token 27: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27681925892829895
    2. ' bfs' → logprob: -1.6518192291259766
    3. ' dfs' → logprob: -3.2768192291259766
    4. ' main' → logprob: -5.026819229125977
    5. ' BFS' → logprob: -5.526819229125977
    6. ' space' → logprob: -7.651819229125977
    7. ' solve' → logprob: -8.276819229125977
    8. ' ‌' → logprob: -8.526819229125977
    9. '_' → logprob: -8.776819229125977
    10. ' ' → logprob: -9.151819229125977

Token 28: 'N' (ID: 45)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2845836579799652
    2. '_max' → logprob: -2.534583568572998
    3. '_input' → logprob: -3.659583568572998
    4. '_path' → logprob: -3.659583568572998
    5. '_depth' → logprob: -4.159583568572998
    6. '_count' → logprob: -4.659583568572998
    7. '_answer' → logprob: -5.034583568572998
    8. '_parent' → logprob: -5.034583568572998
    9. '_neighbors' → logprob: -5.034583568572998
    10. '_distance' → logprob: -5.284583568572998

Token 29: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3487073481082916
    2. '(' → logprob: -2.223707437515259
    3. 'umber' → logprob: -2.723707437515259
    4. 'ame' → logprob: -2.848707437515259
    5. 'um' → logprob: -3.723707437515259
    6. 'ext' → logprob: -3.848707437515259
    7. ' ()' → logprob: -4.97370719909668
    8. 'a' → logprob: -5.47370719909668
    9. '():' → logprob: -6.09870719909668
    10. ' (' → logprob: -6.84870719909668

Token 30: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46935293078422546
    2. '()' → logprob: -1.3443529605865479
    3. '(int' → logprob: -2.469352960586548
    4. ' ()' → logprob: -4.469352722167969
    5. 'int' → logprob: -4.594352722167969
    6. 'return' → logprob: -6.094352722167969
    7. ' (' → logprob: -6.344352722167969
    8. ' return' → logprob: -6.469352722167969
    9. ' int' → logprob: -7.594352722167969
    10. '(
' → logprob: -8.094352722167969

Token 31: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3618053197860718
    2. 'return' (adapté à ' return') → logprob: -1.3618053197860718
    3. 'int' → logprob: -3.2368054389953613
    4. ' int' → logprob: -4.986805438995361
    5. '   ' → logprob: -6.861805438995361
    6. '(int' → logprob: -9.361804962158203
    7. '    ' → logprob: -9.611804962158203
    8. ' ' → logprob: -11.111804962158203
    9. '=int' → logprob: -11.736804962158203
    10. 'n' → logprob: -12.111804962158203

Token 32: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.002905443077906966
    2. 'int' → logprob: -5.877905368804932
    3. ' ' → logprob: -9.37790584564209
    4. '(int' → logprob: -11.25290584564209
    5. '  ' → logprob: -13.75290584564209
    6. ' in' → logprob: -14.37790584564209
    7. ' map' → logprob: -15.50290584564209
    8. '   ' → logprob: -15.75290584564209
    9. '<int' → logprob: -15.75290584564209
    10. ' list' → logprob: -15.75290584564209

Token 33: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20141683518886566
    2. '(' → logprob: -1.7014168500900269
    3. 'input' → logprob: -13.576416969299316
    4. '(
' → logprob: -14.451416969299316
    5. '(sys' → logprob: -14.451416969299316
    6. '(

' → logprob: -14.451416969299316
    7. '((' → logprob: -15.076416969299316
    8. '(in' → logprob: -15.826416969299316
    9. '(i' → logprob: -16.951416015625
    10. '(int' → logprob: -16.951416015625

Token 34: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002781100571155548
    2. '().' → logprob: -6.002780914306641
    3. '()' → logprob: -8.12778091430664
    4. ' ())' → logprob: -12.00278091430664
    5. '()))' → logprob: -13.12778091430664
    6. '();)' → logprob: -14.37778091430664
    7. '())
' → logprob: -14.87778091430664
    8. '(' → logprob: -15.12778091430664
    9. ')' → logprob: -15.75278091430664
    10. '()]' → logprob: -15.87778091430664

Token 35: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.062085773795843124
    2. '\n' → logprob: -3.5620858669281006
    3. 'def' → logprob: -4.1870856285095215
    4. '\' → logprob: -5.3120856285095215
    5. '' → logprob: -5.4370856285095215
    6. '<|end|>' → logprob: -6.4370856285095215
    7. '```' → logprob: -6.6870856285095215
    8. '
' → logprob: -7.3120856285095215
    9. 'n' → logprob: -7.3120856285095215
    10. '

' → logprob: -7.5620856285095215

Token 36: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.14459937810897827
    2. 'get' → logprob: -2.019599437713623
    3. ' main' → logprob: -7.394599437713623
    4. ' solve' → logprob: -8.394598960876465
    5. ' ' → logprob: -8.769598960876465
    6. '	get' → logprob: -9.144598960876465
    7. ' input' → logprob: -9.144598960876465
    8. 's' → logprob: -9.644598960876465
    9. ' gets' → logprob: -9.769598960876465
    10. 'input' → logprob: -9.832098960876465

Token 37: 'List' (ID: 950)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9216233491897583
    2. 'S' → logprob: -1.1716233491897583
    3. 'M' → logprob: -1.7966233491897583
    4. 'List' → logprob: -3.0466232299804688
    5. 's' → logprob: -3.1716232299804688
    6. 'list' → logprob: -4.796623229980469
    7. 'lst' → logprob: -5.421623229980469
    8. '()' → logprob: -5.671623229980469
    9. 'str' → logprob: -5.796623229980469
    10. 'int' → logprob: -6.171623229980469

Token 38: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00044068231363780797
    2. '(' → logprob: -8.00044059753418
    3. ' ()' → logprob: -10.87544059753418
    4. '()]' → logprob: -11.25044059753418
    5. '()[' → logprob: -11.37544059753418
    6. '()">' → logprob: -11.37544059753418
    7. '().' → logprob: -11.75044059753418
    8. '()>' → logprob: -11.87544059753418
    9. '()<<' → logprob: -12.37544059753418
    10. '(){' → logprob: -12.50044059753418

Token 39: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.054701149463653564
    2. '   ' → logprob: -3.179701089859009
    3. '[]' → logprob: -5.179701328277588
    4. '()[' → logprob: -5.929701328277588
    5. 'return' → logprob: -6.304701328277588
    6. 'list' → logprob: -7.804701328277588
    7. '()
' → logprob: -7.804701328277588
    8. '[' → logprob: -8.67970085144043
    9. '(' → logprob: -9.67970085144043
    10. ' return' → logprob: -9.80470085144043

Token 40: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011472645215690136
    2. ' list' → logprob: -5.011472702026367
    3. 'return' (adapté à ' return') → logprob: -5.511472702026367
    4. 'map' → logprob: -7.636472702026367
    5. '   ' → logprob: -8.511472702026367
    6. ' return' → logprob: -11.011472702026367
    7. ' map' → logprob: -13.261472702026367
    8. '  ' → logprob: -14.136472702026367
    9. '	list' → logprob: -14.136472702026367
    10. ' ' → logprob: -14.511472702026367

Token 41: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.128292053937912
    2. ' list' → logprob: -2.1282920837402344
    3. '(list' → logprob: -7.128292083740234
    4. '[list' → logprob: -7.753292083740234
    5. '[' → logprob: -9.128292083740234
    6. '	list' → logprob: -11.503292083740234
    7. 'map' → logprob: -12.503292083740234
    8. ' [' → logprob: -13.128292083740234
    9. '=list' → logprob: -13.128292083740234
    10. '(' → logprob: -13.253292083740234

Token 42: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.05006250739097595
    2. '(' → logprob: -3.050062417984009
    3. '(input' → logprob: -6.925062656402588
    4. '(int' → logprob: -7.675062656402588
    5. '(list' → logprob: -11.55006217956543
    6. '(s' → logprob: -11.92506217956543
    7. '(m' → logprob: -13.42506217956543
    8. '(eval' → logprob: -13.67506217956543
    9. '(x' → logprob: -14.17506217956543
    10. '(tuple' → logprob: -14.17506217956543

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0029484592378139496
    2. '(' → logprob: -5.87794828414917
    3. '(str' → logprob: -9.502948760986328
    4. 'int' → logprob: -10.252948760986328
    5. '[int' → logprob: -11.502948760986328
    6. '<int' → logprob: -11.627948760986328
    7. ',int' → logprob: -12.877948760986328
    8. '(input' → logprob: -12.877948760986328
    9. '=int' → logprob: -13.127948760986328
    10. '(
' → logprob: -13.752948760986328

Token 44: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.35633331537246704
    2. ',input' → logprob: -1.3563332557678223
    3. ',' → logprob: -3.2313332557678223
    4. '(' → logprob: -6.106333255767822
    5. 'input' → logprob: -8.60633373260498
    6. ' (' → logprob: -9.23133373260498
    7. ',(' → logprob: -9.35633373260498
    8. ' ,' → logprob: -10.48133373260498
    9. ' input' → logprob: -11.73133373260498
    10. ')' → logprob: -11.73133373260498

Token 45: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01416750717908144
    2. ' input' → logprob: -4.264167308807373
    3. '(input' → logprob: -13.139167785644531
    4. ',input' → logprob: -14.014167785644531
    5. '	input' → logprob: -15.014167785644531
    6. '   ' → logprob: -15.264167785644531
    7. ' ' → logprob: -15.514167785644531
    8. '<input' → logprob: -15.889167785644531
    9. '=input' → logprob: -16.51416778564453
    10. '
' → logprob: -17.13916778564453

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.375015258789062
    3. '()))' → logprob: -13.250015258789062
    4. ' ().' → logprob: -13.375015258789062
    5. '())' → logprob: -16.625015258789062
    6. 'split' → logprob: -16.875015258789062
    7. '))' → logprob: -17.500015258789062
    8. '.' → logprob: -17.500015258789062
    9. '())))' → logprob: -17.500015258789062
    10. '(' → logprob: -18.000015258789062

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3890415132045746
    2. 'strip' → logprob: -1.139041543006897
    3. 'rstrip' → logprob: -6.139041423797607
    4. 'read' → logprob: -11.514041900634766
    5. ' strip' → logprob: -14.889041900634766
    6. ' split' → logprob: -15.014041900634766
    7. ')' → logprob: -15.389041900634766
    8. '(split' → logprob: -16.264041900634766
    9. 'rs' → logprob: -17.014041900634766
    10. 's' → logprob: -17.264041900634766

Token 48: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.390205442905426
    2. '))' → logprob: -1.1402053833007812
    3. '()' → logprob: -5.890205383300781
    4. '())' → logprob: -7.890205383300781
    5. '(' → logprob: -9.140205383300781
    6. ')' → logprob: -10.265205383300781
    7. ')))' → logprob: -11.015205383300781
    8. '()))
' → logprob: -11.015205383300781
    9. '())))' → logprob: -12.140205383300781
    10. ' ))' → logprob: -13.015205383300781

Token 49: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10625377297401428
    2. 'd' → logprob: -2.7312538623809814
    3. '
' → logprob: -4.231253623962402
    4. '' → logprob: -5.106253623962402
    5. '\' → logprob: -5.231253623962402
    6. 'n' → logprob: -5.481253623962402
    7. '\n' → logprob: -6.356253623962402
    8. '#' → logprob: -6.856253623962402
    9. 'de' → logprob: -7.356253623962402
    10. '```' → logprob: -7.731253623962402

Token 50: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2799956202507019
    2. ' itertools' → logprob: -1.7799956798553467
    3. ' sys' → logprob: -3.5299956798553467
    4. ' ' → logprob: -3.6549956798553467
    5. ' collections' → logprob: -5.154995441436768
    6. ' os' → logprob: -5.279995441436768
    7. ' functools' → logprob: -5.904995441436768
    8. ' re' → logprob: -6.154995441436768
    9. ' bis' → logprob: -6.279995441436768
    10. ' heap' → logprob: -6.404995441436768

Token 51: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.6746416091918945
    2. 'def' → logprob: -1.4246416091918945
    3. '\n' → logprob: -1.5496416091918945
    4. '
' → logprob: -3.9246416091918945
    5. '' → logprob: -4.9246416091918945
    6. 'n' → logprob: -5.9246416091918945
    7. 'd' → logprob: -6.0496416091918945
    8. '```' → logprob: -6.2996416091918945
    9. '

' → logprob: -7.2996416091918945
    10. '`' → logprob: -8.299641609191895

Token 52: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16032040119171143
    2. 'd' → logprob: -2.035320281982422
    3. '\' → logprob: -4.535320281982422
    4. 'n' → logprob: -5.535320281982422
    5. '#' → logprob: -7.660320281982422
    6. '\n' → logprob: -7.660320281982422
    7. 'a' → logprob: -8.035320281982422
    8. 'de' → logprob: -8.160320281982422
    9. 'class' → logprob: -8.160320281982422
    10. '' → logprob: -8.285320281982422

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20308879017829895
    2. '=' → logprob: -1.7030887603759766
    3. '_' → logprob: -6.578088760375977
    4. ' ' → logprob: -9.203088760375977
    5. ')' → logprob: -9.328088760375977
    6. '.' → logprob: -10.703088760375977
    7. '<|end|>' → logprob: -10.703088760375977
    8. ' =)' → logprob: -11.578088760375977
    9. ',' → logprob: -11.828088760375977
    10. ' )' → logprob: -12.703088760375977

Token 54: ' ' (ID: 220)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4875115156173706
    2. 'float' → logprob: -1.4875115156173706
    3. ' ' → logprob: -2.48751163482666
    4. '10' → logprob: -2.98751163482666
    5. ' math' → logprob: -3.98751163482666
    6. 'math' → logprob: -4.86251163482666
    7. 'int' → logprob: -10.48751163482666
    8. ' int' → logprob: -10.61251163482666
    9. '1' → logprob: -10.86251163482666
    10. '	float' → logprob: -11.23751163482666

Token 55: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.27032986283302307
    2. '10' → logprob: -1.5203298330307007
    3. 'math' → logprob: -4.02032995223999
    4. 'int' → logprob: -8.645329475402832
    5. ' float' → logprob: -9.645329475402832
    6. '1' → logprob: -10.270329475402832
    7. ' ' → logprob: -12.145329475402832
    8. ' math' → logprob: -13.895329475402832
    9. '100' → logprob: -14.020329475402832
    10. '	float' → logprob: -14.145329475402832

Token 56: ' **' (ID: 6240)
  Prédit: '18'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '18' → logprob: -0.09122996777296066
    2. '9' → logprob: -2.9662299156188965
    3. '10' → logprob: -3.8412299156188965
    4. '12' → logprob: -5.2162299156188965
    5. '15' → logprob: -5.3412299156188965
    6. '8' → logprob: -6.5912299156188965
    7. '09' → logprob: -7.2162299156188965
    8. '000' → logprob: -7.4662299156188965
    9. '16' → logprob: -7.5912299156188965
    10. '20' → logprob: -8.341230392456055

Token 57: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6269644498825073
    2. '15' → logprob: -1.3769644498825073
    3. '18' → logprob: -1.6269644498825073
    4. '10' → logprob: -4.251964569091797
    5. '12' → logprob: -6.126964569091797
    6. '16' → logprob: -8.501964569091797
    7. '14' → logprob: -9.001964569091797
    8. '13' → logprob: -9.501964569091797
    9. '20' → logprob: -10.251964569091797
    10. '17' → logprob: -10.376964569091797

Token 58: '20' (ID: 455)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.23308822512626648
    2. '15' → logprob: -2.108088254928589
    3. '18' → logprob: -2.608088254928589
    4. '10' → logprob: -4.48308801651001
    5. '12' → logprob: -6.73308801651001
    6. '16' → logprob: -9.233088493347168
    7. '14' → logprob: -9.358088493347168
    8. '13' → logprob: -9.733088493347168
    9. '17' → logprob: -10.983088493347168
    10. '20' → logprob: -11.483088493347168

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14011931419372559
    2. '\n' → logprob: -2.8901193141937256
    3. '' → logprob: -3.5151193141937256
    4. '\' → logprob: -4.015119552612305
    5. 'n' → logprob: -5.515119552612305
    6. ' 
' → logprob: -5.640119552612305
    7. '#' → logprob: -5.765119552612305
    8. 'newline' → logprob: -5.765119552612305
    9. '

' → logprob: -5.890119552612305
    10. '<|end|>' → logprob: -6.390119552612305

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04238637164235115
    2. 'n' → logprob: -3.292386293411255
    3. 'd' → logprob: -6.417386531829834
    4. 'class' → logprob: -6.792386531829834
    5. 'a' → logprob: -7.792386531829834
    6. '#' → logprob: -8.167386054992676
    7. ' 
' → logprob: -8.792386054992676
    8. '
' → logprob: -9.042386054992676
    9. ' ' → logprob: -9.167386054992676
    10. 'dp' → logprob: -9.292386054992676

Token 61: ' main' (ID: 2758)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solve' → logprob: -1.0474352836608887
    2. ' ' → logprob: -1.4224352836608887
    3. ' d' → logprob: -2.1724352836608887
    4. ' main' → logprob: -2.4224352836608887
    5. ' dfs' → logprob: -2.4224352836608887
    6. ' max' → logprob: -4.297435283660889
    7. ' shortest' → logprob: -4.297435283660889
    8. ' calculate' → logprob: -4.547435283660889
    9. ' pow' → logprob: -4.547435283660889
    10. ' math' → logprob: -4.672435283660889

Token 62: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.756989700486884e-05
    2. '(' → logprob: -9.62508773803711
    3. '()' → logprob: -11.50008773803711
    4. ' ():' → logprob: -11.50008773803711
    5. '(:' → logprob: -14.00008773803711
    6. '():
' → logprob: -16.25008773803711
    7. '(":' → logprob: -16.37508773803711
    8. ':' → logprob: -16.75008773803711
    9. '()>' → logprob: -18.62508773803711
    10. '(()' → logprob: -18.75008773803711

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012466677464544773
    2. '    ' → logprob: -5.012466907501221
    3. '(' → logprob: -6.762466907501221
    4. ')' → logprob: -6.887466907501221
    5. '    
' → logprob: -6.887466907501221
    6. 'n' → logprob: -7.262466907501221
    7. '<|end|>' → logprob: -7.637466907501221
    8. ' ' → logprob: -8.012466430664062
    9. ':' → logprob: -8.137466430664062
    10. '(n' → logprob: -9.262466430664062

Token 64: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.17606566846370697
    2. 'N' → logprob: -2.176065683364868
    3. ' n' → logprob: -3.176065683364868
    4. ' N' → logprob: -5.676065444946289
    5. '   ' → logprob: -5.926065444946289
    6. ' ' → logprob: -10.301065444946289
    7. 't' → logprob: -10.801065444946289
    8. '    ' → logprob: -11.676065444946289
    9. '	n' → logprob: -11.676065444946289
    10. 'k' → logprob: -12.301065444946289

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004751222673803568
    2. ',' → logprob: -6.004751205444336
    3. '=' → logprob: -6.129751205444336
    4. ' ' → logprob: -10.004751205444336
    5. ' ,' → logprob: -10.004751205444336
    6. '=int' → logprob: -12.629751205444336
    7. '  ' → logprob: -14.379751205444336
    8. ' =
' → logprob: -14.879751205444336
    9. ')' → logprob: -15.379751205444336
    10. '.' → logprob: -15.629751205444336

Token 66: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.0009305141866207123
    2. 'get' → logprob: -7.000930309295654
    3. ' int' → logprob: -10.875930786132812
    4. ' n' → logprob: -16.875930786132812
    5. 'int' → logprob: -16.875930786132812
    6. ' ' → logprob: -17.875930786132812
    7. ' math' → logprob: -18.500930786132812
    8. '	get' → logprob: -18.500930786132812
    9. ' gets' → logprob: -19.000930786132812
    10. '=get' → logprob: -19.500930786132812

Token 67: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004713972564786673
    2. 'List' → logprob: -5.379714012145996
    3. 'int' → logprob: -10.129714012145996
    4. 'Int' → logprob: -10.254714012145996
    5. '(' → logprob: -11.504714012145996
    6. '()' → logprob: -12.254714012145996
    7. '(int' → logprob: -13.129714012145996
    8. 'n' → logprob: -14.629714012145996
    9. 'I' → logprob: -14.879714012145996
    10. ' N' → logprob: -15.504714012145996

Token 68: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.3226136767771095e-05
    2. '()
' → logprob: -11.000042915344238
    3. '(' → logprob: -11.125042915344238
    4. ' ()' → logprob: -12.375042915344238
    5. ')' → logprob: -12.625042915344238
    6. '()\' → logprob: -13.375042915344238
    7. '())' → logprob: -13.625042915344238
    8. '()

' → logprob: -15.000042915344238
    9. '()<' → logprob: -15.375042915344238
    10. '()>' → logprob: -15.500042915344238

Token 69: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' nums' (ID: 18117)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6598642468452454
    2. ' a' → logprob: -1.4098641872406006
    3. ' A' → logprob: -3.0348641872406006
    4. 'A' → logprob: -3.1598641872406006
    5. 'arr' → logprob: -3.1598641872406006
    6. ' arr' → logprob: -3.4098641872406006
    7. '   ' → logprob: -3.9098641872406006
    8. ' lst' → logprob: -4.78486442565918
    9. 'lst' → logprob: -4.90986442565918
    10. ' graph' → logprob: -5.15986442565918

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009761283174157143
    2. '=' → logprob: -4.634761333465576
    3. ' ' → logprob: -12.634760856628418
    4. '[' → logprob: -14.509760856628418
    5. '.' → logprob: -15.134760856628418
    6. ')' → logprob: -15.509760856628418
    7. ' =
' → logprob: -15.759760856628418
    8. '[:]' → logprob: -15.884760856628418
    9. ' =[' → logprob: -15.884760856628418
    10. '   ' → logprob: -16.134761810302734

Token 72: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.03376729413866997
    2. 'get' → logprob: -3.4087672233581543
    3. '[get' → logprob: -9.283767700195312
    4. ' [' → logprob: -10.908767700195312
    5. ' []' → logprob: -12.533767700195312
    6. ' list' → logprob: -13.033767700195312
    7. ' ' → logprob: -13.533767700195312
    8. '	get' → logprob: -13.658767700195312
    9. '[]' → logprob: -14.658767700195312
    10. '(get' → logprob: -14.783767700195312

Token 73: 'List' (ID: 950)
  Prédit: 'List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: 0.0
    2. 'Lis' → logprob: -19.0
    3. 'L' → logprob: -20.625
    4. ' List' → logprob: -21.125
    5. '(List' → logprob: -22.25
    6. 'Liste' → logprob: -22.625
    7. 'Li' → logprob: -22.625
    8. '[List' → logprob: -22.75
    9. 'Lista' → logprob: -23.0
    10. '_list' → logprob: -23.125

Token 74: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.981667537620524e-06
    2. '()
' → logprob: -14.000001907348633
    3. '(' → logprob: -14.500001907348633
    4. '())' → logprob: -15.625001907348633
    5. '()]' → logprob: -15.875001907348633
    6. ' ()' → logprob: -16.125001907348633
    7. '()`' → logprob: -16.625001907348633
    8. '()

' → logprob: -16.625001907348633
    9. '()"' → logprob: -18.375001907348633
    10. '()<' → logprob: -18.500001907348633

Token 75: '   ' (ID: 271)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6181095838546753
    2. '   ' → logprob: -1.3681095838546753
    3. '
' → logprob: -2.118109703063965
    4. '<|end|>' → logprob: -3.118109703063965
    5. '    ' → logprob: -4.243109703063965
    6. ' ' → logprob: -5.243109703063965
    7. ' 
' → logprob: -5.243109703063965
    8. '     
' → logprob: -6.118109703063965
    9. '' → logprob: -6.368109703063965
    10. '\' → logprob: -6.618109703063965

Token 76: ' sm' (ID: 1765)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5759443044662476
    2. 'dp' → logprob: -1.7009443044662476
    3. ' nums' → logprob: -2.450944423675537
    4. 'nums' → logprob: -3.575944423675537
    5. '   ' → logprob: -3.825944423675537
    6. ' ans' → logprob: -4.825944423675537
    7. ' cnt' → logprob: -4.825944423675537
    8. '    
' → logprob: -4.950944423675537
    9. ' counter' → logprob: -5.200944423675537
    10. ' max' → logprob: -5.200944423675537

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38773220777511597
    2. ' =' → logprob: -1.1377322673797607
    3. '   ' → logprob: -8.26273250579834
    4. ' ' → logprob: -9.01273250579834
    5. '=sum' → logprob: -9.26273250579834
    6. 'a' → logprob: -9.38773250579834
    7. 'all' → logprob: -9.63773250579834
    8. 'o' → logprob: -10.26273250579834
    9. '  ' → logprob: -10.51273250579834
    10. ' +=' → logprob: -10.51273250579834

Token 78: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6660562753677368
    2. 'sum' → logprob: -1.1660562753677368
    3. ' sum' → logprob: -1.7910562753677368
    4. ' ' → logprob: -4.916056156158447
    5. ' nums' → logprob: -9.041056632995605
    6. 'nums' → logprob: -9.166056632995605
    7. 'math' → logprob: -9.541056632995605
    8. ' math' → logprob: -9.791056632995605
    9. '   ' → logprob: -9.916056632995605
    10. 'max' → logprob: -10.916056632995605

Token 79: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.3869599997997284
    2. '(' → logprob: -1.1369600296020508
    3. '(num' → logprob: -9.51196002960205
    4. '(numbers' → logprob: -11.63696002960205
    5. '(n' → logprob: -13.51196002960205
    6. ' (' → logprob: -13.51196002960205
    7. '(s' → logprob: -13.63696002960205
    8. '(
' → logprob: -14.13696002960205
    9. '(

' → logprob: -15.51196002960205
    10. '(nn' → logprob: -15.51196002960205

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019657472148537636
    2. ' )' → logprob: -6.251965522766113
    3. ')
' → logprob: -10.751965522766113
    4. '[' → logprob: -12.876965522766113
    5. '+' → logprob: -13.001965522766113
    6. '())' → logprob: -13.251965522766113
    7. '))' → logprob: -13.376965522766113
    8. '()' → logprob: -13.751965522766113
    9. '   ' → logprob: -13.876965522766113
    10. '<|end|>' → logprob: -14.251965522766113

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022544311359524727
    2. '    
' → logprob: -4.0225443840026855
    3. '    ' → logprob: -6.3975443840026855
    4. ' if' → logprob: -7.1475443840026855
    5. '
' → logprob: -7.3975443840026855
    6. '<|end|>' → logprob: -7.8975443840026855
    7. 'if' → logprob: -8.022543907165527
    8. '     
' → logprob: -9.022543907165527
    9. ' 
' → logprob: -9.647543907165527
    10. '   
' → logprob: -9.647543907165527

Token 82: ' ans' (ID: 3345)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7279483079910278
    2. ' if' → logprob: -1.8529483079910278
    3. 'dp' → logprob: -1.8529483079910278
    4. 'if' → logprob: -2.6029481887817383
    5. ' ans' → logprob: -2.9779481887817383
    6. '   ' → logprob: -3.7279481887817383
    7. 'ans' (adapté à ' ans') → logprob: -4.477948188781738
    8. ' l' → logprob: -5.102948188781738
    9. 'mod' → logprob: -5.727948188781738
    10. ' for' → logprob: -5.977948188781738

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031929241959005594
    2. '=' → logprob: -5.753192901611328
    3. ' ' → logprob: -11.503192901611328
    4. '_' → logprob: -12.628192901611328
    5. ',' → logprob: -14.753192901611328
    6. ' =
' → logprob: -14.878192901611328
    7. '1' → logprob: -15.753192901611328
    8. '.' → logprob: -16.003192901611328
    9. '=int' → logprob: -16.003192901611328
    10. ':' → logprob: -16.378192901611328

Token 84: ' sm' (ID: 1765)
  Prédit: ' INF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' INF' → logprob: -0.3972148597240448
    2. ' sm' → logprob: -1.6472148895263672
    3. 'INF' → logprob: -2.397214889526367
    4. '0' → logprob: -4.147214889526367
    5. 'sm' → logprob: -4.272214889526367
    6. ' ' → logprob: -5.147214889526367
    7. ' math' → logprob: -6.022214889526367
    8. ' abs' → logprob: -6.272214889526367
    9. ' max' → logprob: -6.647214889526367
    10. ' [' → logprob: -7.772214889526367

Token 85: ' %' (ID: 1851)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9794430732727051
    2. '<|end|>' → logprob: -1.104443073272705
    3. ' //' → logprob: -2.604443073272705
    4. ' *' → logprob: -3.229443073272705
    5. '+' → logprob: -3.229443073272705
    6. '<|end|>' → logprob: -3.979443073272705
    7. '*' → logprob: -4.104443073272705
    8. '%' → logprob: -4.104443073272705
    9. '
' → logprob: -4.604443073272705
    10. ' +' → logprob: -4.604443073272705

Token 86: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.042461097240448
    2. '2' → logprob: -3.4174611568450928
    3. '(n' → logprob: -5.667460918426514
    4. '3' → logprob: -5.792460918426514
    5. '10' → logprob: -7.042460918426514
    6. '(' → logprob: -7.917460918426514
    7. '9' → logprob: -8.542461395263672
    8. ' n' → logprob: -8.667461395263672
    9. '360' → logprob: -8.792461395263672
    10. '4' → logprob: -8.917461395263672

Token 87: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08299192041158676
    2. '2' → logprob: -2.9579918384552
    3. '(n' → logprob: -4.082992076873779
    4. '10' → logprob: -5.707992076873779
    5. '3' → logprob: -5.957992076873779
    6. '200' → logprob: -6.582992076873779
    7. '(' → logprob: -7.082992076873779
    8. '360' → logprob: -7.082992076873779
    9. '9' → logprob: -7.582992076873779
    10. '998' → logprob: -8.082991600036621

Token 88: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7546489834785461
    2. '
' → logprob: -0.7546489834785461
    3. '<|end|>' → logprob: -3.7546489238739014
    4. 'if' → logprob: -4.2546491622924805
    5. ' if' → logprob: -5.0046491622924805
    6. ' ' → logprob: -5.7546491622924805
    7. '\n' → logprob: -5.7546491622924805
    8. '\' → logprob: -6.5046491622924805
    9. '

' → logprob: -6.6296491622924805
    10. '+' → logprob: -7.0046491622924805

Token 89: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5949633121490479
    2. '   ' → logprob: -1.0949633121490479
    3. '\n' → logprob: -3.094963312149048
    4. '<|end|>' → logprob: -3.969963312149048
    5. '    
' → logprob: -4.344963073730469
    6. ' 
' → logprob: -5.219963073730469
    7. ' ' → logprob: -5.219963073730469
    8. '\' → logprob: -5.219963073730469
    9. ' if' → logprob: -5.344963073730469
    10. 'if' → logprob: -6.094963073730469

Token 90: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6316238641738892
    2. '
' → logprob: -2.2566237449645996
    3. ' if' → logprob: -3.0066237449645996
    4. '\n' → logprob: -3.0066237449645996
    5. ' 
' → logprob: -3.2566237449645996
    6. ' for' → logprob: -3.2566237449645996
    7. 'if' (adapté à ' if') → logprob: -3.3816237449645996
    8. ' ' → logprob: -3.5066237449645996
    9. '    
' → logprob: -3.7566237449645996
    10. '    ' → logprob: -4.0066237449646

Token 91: ' n' (ID: 297)
  Prédit: ' sm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sm' → logprob: -0.8043375015258789
    2. ' ans' → logprob: -0.8043375015258789
    3. ' ' → logprob: -2.804337501525879
    4. ' n' → logprob: -3.304337501525879
    5. ' len' → logprob: -5.929337501525879
    6. ' not' → logprob: -6.304337501525879
    7. 'sm' → logprob: -7.179337501525879
    8. 'ans' → logprob: -7.429337501525879
    9. ' nums' → logprob: -7.679337501525879
    10. 'n' → logprob: -7.679337501525879

Token 92: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2693315744400024
    2. ' ' → logprob: -1.7693315744400024
    3. ' >' → logprob: -1.7693315744400024
    4. ' %' → logprob: -1.8943315744400024
    5. ' <' → logprob: -2.144331455230713
    6. '%' → logprob: -3.269331455230713
    7. ' >=' → logprob: -3.769331455230713
    8. '==' → logprob: -4.144331455230713
    9. ' <=' → logprob: -4.269331455230713
    10. '>' → logprob: -4.394331455230713

Token 93: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5760853290557861
    2. '2' → logprob: -0.8260853290557861
    3. '4' → logprob: -9.951085090637207
    4. ' ==' → logprob: -10.576085090637207
    5. '  ' → logprob: -10.576085090637207
    6. '3' → logprob: -11.201085090637207
    7. '==' → logprob: -11.826085090637207
    8. '<|end|>' → logprob: -12.326085090637207
    9. ' ' → logprob: -12.701085090637207
    10. ')' → logprob: -12.826085090637207

Token 94: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008245145436376333
    2. ' ' → logprob: -7.125824451446533
    3. '4' → logprob: -11.750824928283691
    4. '  ' → logprob: -12.250824928283691
    5. '3' → logprob: -12.375824928283691
    6. '   ' → logprob: -14.000824928283691
    7. '1' → logprob: -14.125824928283691
    8. '10' → logprob: -14.750824928283691
    9. ')' → logprob: -15.625824928283691
    10. '==' → logprob: -15.875824928283691

Token 95: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0587974488735199
    2. '==' → logprob: -3.0587973594665527
    3. ' !=' → logprob: -4.683797359466553
    4. ':' → logprob: -7.433797359466553
    5. '!=' → logprob: -8.558797836303711
    6. ' :' → logprob: -9.808797836303711
    7. ' ' → logprob: -10.683797836303711
    8. '0' → logprob: -10.683797836303711
    9. ' =' → logprob: -11.808797836303711
    10. '=' → logprob: -11.808797836303711

Token 96: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.460632860660553
    2. '0' → logprob: -1.0856328010559082
    3. '1' → logprob: -3.460632801055908
    4. ' ' → logprob: -12.335633277893066
    5. '  ' → logprob: -12.835633277893066
    6. '   ' → logprob: -12.835633277893066
    7. '==' → logprob: -13.335633277893066
    8. '=' → logprob: -13.523133277893066
    9. '```' → logprob: -14.648133277893066
    10. ' ==' → logprob: -14.710633277893066

Token 97: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.049188461154699326
    2. '1' → logprob: -3.0491883754730225
    3. ' ' → logprob: -7.424188613891602
    4. '```' → logprob: -13.861688613891602
    5. '   ' → logprob: -14.236688613891602
    6. '۰' → logprob: -15.236688613891602
    7. '2' → logprob: -15.361688613891602
    8. '  ' → logprob: -15.361688613891602
    9. '=' → logprob: -15.424188613891602
    10. '==' → logprob: -15.611688613891602

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030004678294062614
    2. ' and' → logprob: -3.6550047397613525
    3. ' :' → logprob: -5.780004501342773
    4. ':
' → logprob: -7.780004501342773
    5. 'and' → logprob: -9.155004501342773
    6. ':return' → logprob: -10.655004501342773
    7. ' or' → logprob: -10.905004501342773
    8. '   ' → logprob: -11.030004501342773
    9. ' :
' → logprob: -11.405004501342773
    10. ' ' → logprob: -11.780004501342773

Token 99: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4474645256996155
    2. '   ' → logprob: -1.3224644660949707
    3. '       ' → logprob: -3.0724644660949707
    4. ':
' → logprob: -3.6974644660949707
    5. ' and' → logprob: -3.9474644660949707
    6. ' :' → logprob: -6.697464466094971
    7. '
' → logprob: -7.447464466094971
    8. ':return' → logprob: -7.572464466094971
    9. ' :
' → logprob: -8.322464942932129
    10. '):' → logprob: -8.822464942932129

Token 100: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6217088103294373
    2. ' ans' → logprob: -1.246708869934082
    3. ' print' → logprob: -1.871708869934082
    4. 'print' → logprob: -4.371708869934082
    5. 'ans' → logprob: -5.621708869934082
    6. ' if' → logprob: -6.621708869934082
    7. ' return' → logprob: -6.621708869934082
    8. ' for' → logprob: -7.496708869934082
    9. ' pass' → logprob: -7.746708869934082
    10. '    ' → logprob: -7.871708869934082

Token 101: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.11968523263931274
    2. ' sm' → logprob: -2.619685173034668
    3. 'ans' → logprob: -3.994685173034668
    4. ' nums' → logprob: -4.744685173034668
    5. 'sm' → logprob: -6.119685173034668
    6. '(ans' → logprob: -6.244685173034668
    7. ' (' → logprob: -6.369685173034668
    8. ' any' → logprob: -6.494685173034668
    9. ' sum' → logprob: -6.744685173034668
    10. ' len' → logprob: -6.994685173034668

Token 102: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.15437036752700806
    2. '==' → logprob: -2.0293703079223633
    3. ' !=' → logprob: -4.654370307922363
    4. '!=' → logprob: -6.904370307922363
    5. ':' → logprob: -7.529370307922363
    6. ' :' → logprob: -8.029370307922363
    7. ' ' → logprob: -8.779370307922363
    8. '=' → logprob: -10.654370307922363
    9. ' =' → logprob: -11.529370307922363
    10. ')' → logprob: -11.529370307922363

Token 103: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4198921024799347
    2. '1' → logprob: -1.5448920726776123
    3. '0' → logprob: -2.0448920726776123
    4. ' sm' → logprob: -10.044892311096191
    5. 'sm' → logprob: -10.044892311096191
    6. '=' → logprob: -10.732392311096191
    7. '   ' → logprob: -11.357392311096191
    8. '  ' → logprob: -12.107392311096191
    9. ' (' → logprob: -12.544892311096191
    10. 'nums' → logprob: -12.794892311096191

Token 104: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8694666624069214
    2. '1' → logprob: -1.1194666624069214
    3. ' ' → logprob: -1.3694666624069214
    4. 'sm' → logprob: -9.994466781616211
    5. ' sm' → logprob: -10.369466781616211
    6. '   ' → logprob: -11.369466781616211
    7. '=' → logprob: -11.744466781616211
    8. '  ' → logprob: -12.369466781616211
    9. 'num' → logprob: -12.681966781616211
    10. ' ' → logprob: -12.869466781616211

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031270908657461405
    2. ':
' → logprob: -6.003127098083496
    3. ':return' → logprob: -8.003127098083496
    4. ' :' → logprob: -8.503127098083496
    5. ' and' → logprob: -9.753127098083496
    6. '       ' → logprob: -10.253127098083496
    7. '   ' → logprob: -12.253127098083496
    8. ' :
' → logprob: -12.753127098083496
    9. '):' → logprob: -13.003127098083496
    10. ' or' → logprob: -13.128127098083496

Token 106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25922033190727234
    2. ':' → logprob: -1.6342203617095947
    3. ':
' → logprob: -4.134220123291016
    4. '           ' → logprob: -4.884220123291016
    5. '
' → logprob: -4.884220123291016
    6. ':return' → logprob: -7.259220123291016
    7. '   ' → logprob: -8.009220123291016
    8. 'print' → logprob: -9.009220123291016
    9. ' :' → logprob: -9.009220123291016
    10. ',' → logprob: -9.009220123291016

Token 107: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5166747570037842
    2. 'print' (adapté à ' print') → logprob: -1.1416747570037842
    3. ' print' → logprob: -2.641674757003784
    4. '   ' → logprob: -4.516674995422363
    5. '           ' → logprob: -6.766674995422363
    6. 'return' → logprob: -7.766674995422363
    7. '    ' → logprob: -9.266674995422363
    8. '
' → logprob: -9.266674995422363
    9. ' return' → logprob: -9.391674995422363
    10. '```' → logprob: -9.641674995422363

Token 108: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39695069193840027
    2. '("' → logprob: -1.7719507217407227
    3. '(-' → logprob: -1.8969507217407227
    4. '0' → logprob: -6.021950721740723
    5. '("-' → logprob: -6.521950721740723
    6. '-' → logprob: -6.771950721740723
    7. '(n' → logprob: -7.271950721740723
    8. '('' → logprob: -7.396950721740723
    9. '1' → logprob: -7.771950721740723
    10. '"' → logprob: -8.771950721740723

Token 109: 'First' (ID: 7127)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.744049072265625
    2. '0' → logprob: -1.369049072265625
    3. '1' → logprob: -1.869049072265625
    4. '"' → logprob: -2.619049072265625
    5. 'NO' → logprob: -4.244049072265625
    6. 'No' → logprob: -5.244049072265625
    7. '"No' → logprob: -5.619049072265625
    8. 'Impossible' → logprob: -5.869049072265625
    9. '2' → logprob: -6.244049072265625
    10. '(' → logprob: -6.244049072265625

Token 110: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0008486981969326735
    2. '")
' → logprob: -7.750848770141602
    3. ')' → logprob: -9.125848770141602
    4. 'Player' → logprob: -9.250848770141602
    5. '\n' → logprob: -9.375848770141602
    6. ' Player' → logprob: -9.875848770141602
    7. 'player' → logprob: -11.000848770141602
    8. '"' → logprob: -11.375848770141602
    9. ' player' → logprob: -11.500848770141602
    10. '')' → logprob: -11.500848770141602

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0526280514895916
    2. '   ' → logprob: -3.8026280403137207
    3. '           ' → logprob: -3.9276280403137207
    4. 'else' → logprob: -5.052628040313721
    5. ' else' → logprob: -6.052628040313721
    6. ' ' → logprob: -9.177628517150879
    7. '
' → logprob: -9.677628517150879
    8. '    ' → logprob: -9.927628517150879
    9. 'return' → logprob: -9.927628517150879
    10. '<|end|>' → logprob: -10.177628517150879

Token 112: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9255542159080505
    2. 'else' (adapté à ' else') → logprob: -1.1755542755126953
    3. ' else' → logprob: -1.3005542755126953
    4. '       ' → logprob: -3.8005542755126953
    5. ' ' → logprob: -8.925554275512695
    6. '    ' → logprob: -9.550554275512695
    7. '	else' → logprob: -9.800554275512695
    8. '  ' → logprob: -11.050554275512695
    9. '           ' → logprob: -12.425554275512695
    10. '     ' → logprob: -12.425554275512695

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006344011635519564
    2. ':
' → logprob: -7.50063419342041
    3. '           ' → logprob: -9.50063419342041
    4. ' :' → logprob: -12.87563419342041
    5. '       ' → logprob: -13.25063419342041
    6. '   ' → logprob: -14.00063419342041
    7. '          ' → logprob: -14.50063419342041
    8. ':

' → logprob: -15.75063419342041
    9. ':
' → logprob: -16.000635147094727
    10. '{' → logprob: -16.000635147094727

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022880789765622467
    2. 'print' → logprob: -8.750228881835938
    3. '	       ' → logprob: -11.250228881835938
    4. ' print' → logprob: -11.250228881835938
    5. '       ' → logprob: -11.625228881835938
    6. ':' → logprob: -11.625228881835938
    7. '               ' → logprob: -12.375228881835938
    8. '<|end|>' → logprob: -12.375228881835938
    9. '          ' → logprob: -12.500228881835938
    10. '   ' → logprob: -12.500228881835938

Token 115: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.44141706824302673
    2. ' print' → logprob: -1.1914170980453491
    3. '           ' → logprob: -2.9414169788360596
    4. '	print' → logprob: -9.44141674041748
    5. '       ' → logprob: -9.94141674041748
    6. '               ' → logprob: -9.94141674041748
    7. '   ' → logprob: -10.44141674041748
    8. ' ' → logprob: -10.44141674041748
    9. '            ' → logprob: -11.19141674041748
    10. '.print' → logprob: -11.31641674041748

Token 116: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.012715536169707775
    2. '(' → logprob: -4.3877153396606445
    3. '("("' → logprob: -8.637715339660645
    4. '("(' → logprob: -11.012715339660645
    5. '("""' → logprob: -12.137715339660645
    6. '('' → logprob: -13.012715339660645
    7. '("")' → logprob: -13.512715339660645
    8. '(""' → logprob: -13.887715339660645
    9. '(
' → logprob: -14.762715339660645
    10. 'Second' → logprob: -15.012715339660645

Token 117: 'Second' (ID: 17422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.009906834922730923
    2. 'Second' → logprob: -4.634906768798828
    3. '("' → logprob: -9.134906768798828
    4. 'Last' → logprob: -11.009906768798828
    5. '   ' → logprob: -12.509906768798828
    6. ' "' → logprob: -12.634906768798828
    7. ''' → logprob: -12.634906768798828
    8. '"D' → logprob: -12.634906768798828
    9. ' Second' → logprob: -13.009906768798828
    10. 'second' → logprob: -13.884906768798828

Token 118: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00046725376159884036
    2. ')' → logprob: -8.000467300415039
    3. '")
' → logprob: -9.375467300415039
    4. ')")' → logprob: -10.000467300415039
    5. '   ' → logprob: -15.000467300415039
    6. '}")' → logprob: -15.250467300415039
    7. '()' → logprob: -15.500467300415039
    8. '"' → logprob: -16.00046730041504
    9. ')
' → logprob: -16.12546730041504
    10. '```' → logprob: -16.50046730041504

Token 119: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009710535407066345
    2. 'else' → logprob: -4.759710311889648
    3. ' else' → logprob: -7.759710311889648
    4. '<|end|>' → logprob: -8.134710311889648
    5. '       ' → logprob: -8.259710311889648
    6. 'elif' → logprob: -9.759710311889648
    7. ')' → logprob: -10.759710311889648
    8. '	else' → logprob: -11.009710311889648
    9. '```' → logprob: -12.259710311889648
    10. '
' → logprob: -12.509710311889648

Token 120: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11400484293699265
    2. '       ' → logprob: -2.2390048503875732
    3. 'else' → logprob: -6.864004611968994
    4. ' else' → logprob: -9.489005088806152
    5. 'return' (adapté à ' return') → logprob: -10.989005088806152
    6. '           ' → logprob: -11.239005088806152
    7. '    ' → logprob: -11.614005088806152
    8. ' ' → logprob: -11.864005088806152
    9. 'elif' → logprob: -12.739005088806152
    10. '<|end|>' → logprob: -12.864005088806152

Token 121: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004889673553407192
    2. '    
' → logprob: -6.379889488220215
    3. ' for' → logprob: -6.879889488220215
    4. 'if' → logprob: -7.504889488220215
    5. 'for' → logprob: -7.629889488220215
    6. ' if' → logprob: -8.254889488220215
    7. 'rest' → logprob: -8.754889488220215
    8. 'n' → logprob: -9.254889488220215
    9. 'else' → logprob: -9.379889488220215
    10. '#' → logprob: -9.754889488220215

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24435745179653168
    2. 'half' → logprob: -2.6193573474884033
    3. 'for' → logprob: -3.3693573474884033
    4. 'if' → logprob: -3.4943573474884033
    5. ' for' → logprob: -4.869357585906982
    6. 'dp' → logprob: -4.869357585906982
    7. '    
' → logprob: -4.869357585906982
    8. 'even' → logprob: -5.119357585906982
    9. 'm' → logprob: -5.119357585906982
    10. 'else' → logprob: -5.244357585906982

Token 123: ' if' (ID: 538)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8286299705505371
    2. '   ' → logprob: -2.203629970550537
    3. 'if' (adapté à ' if') → logprob: -2.203629970550537
    4. 'for' → logprob: -2.703629970550537
    5. '#' → logprob: -2.828629970550537
    6. 'cnt' → logprob: -3.578629970550537
    7. 'even' → logprob: -3.953629970550537
    8. 'd' → logprob: -4.203629970550537
    9. 'nums' → logprob: -4.203629970550537
    10. 'left' → logprob: -4.328629970550537

Token 124: ' n' (ID: 297)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.14900217950344086
    2. ' sm' → logprob: -2.1490020751953125
    3. ' n' → logprob: -4.8990020751953125
    4. ' (' → logprob: -5.2740020751953125
    5. '(ans' → logprob: -5.8990020751953125
    6. 'ans' → logprob: -6.2740020751953125
    7. ' nums' → logprob: -6.2740020751953125
    8. 'sm' → logprob: -7.5240020751953125
    9. ' all' → logprob: -7.7740020751953125
    10. ' sum' → logprob: -8.024002075195312

Token 125: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0208597369492054
    2. '%' → logprob: -4.645859718322754
    3. ' ==' → logprob: -5.020859718322754
    4. ' ' → logprob: -5.895859718322754
    5. '==' → logprob: -6.645859718322754
    6. '   ' → logprob: -9.020859718322754
    7. ' >' → logprob: -9.520859718322754
    8. ' <' → logprob: -9.645859718322754
    9. '>' → logprob: -10.145859718322754
    10. ' >=' → logprob: -10.645859718322754

Token 126: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4907669723033905
    2. ' ' → logprob: -0.9907670021057129
    3. '4' → logprob: -4.115767002105713
    4. '  ' → logprob: -9.240766525268555
    5. '   ' → logprob: -9.740766525268555
    6. '```' → logprob: -11.240766525268555
    7. '8' → logprob: -11.490766525268555
    8. '3' → logprob: -11.865766525268555
    9. '
' → logprob: -11.928266525268555
    10. '    ' → logprob: -12.365766525268555

Token 127: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024084746837615967
    2. ' ' → logprob: -8.62524127960205
    3. '4' → logprob: -10.00024127960205
    4. '1' → logprob: -11.37524127960205
    5. '   ' → logprob: -13.50024127960205
    6. '0' → logprob: -14.18774127960205
    7. '  ' → logprob: -14.75024127960205
    8. '3' → logprob: -15.18774127960205
    9. '==' → logprob: -15.25024127960205
    10. '```' → logprob: -15.25024127960205

Token 128: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17988066375255585
    2. ' ==' → logprob: -1.8048806190490723
    3. '!=' → logprob: -9.55488109588623
    4. ' !=' → logprob: -10.17988109588623
    5. '0' → logprob: -11.67988109588623
    6. '==
' → logprob: -12.17988109588623
    7. '=' → logprob: -12.42988109588623
    8. ' ' → logprob: -12.55488109588623
    9. '()==' → logprob: -13.42988109588623
    10. ')==' → logprob: -13.80488109588623

Token 129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004882431123405695
    2. ' ' → logprob: -5.754882335662842
    3. '1' → logprob: -6.379882335662842
    4. '2' → logprob: -12.3798828125
    5. '   ' → logprob: -13.4423828125
    6. '```' → logprob: -14.3173828125
    7. '
' → logprob: -15.1298828125
    8. '=' → logprob: -16.0048828125
    9. '  ' → logprob: -16.0673828125
    10. '[' → logprob: -16.4423828125

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011995165841653943
    2. '1' → logprob: -6.751199722290039
    3. '2' → logprob: -11.126199722290039
    4. ' ' → logprob: -11.251199722290039
    5. '```' → logprob: -14.626199722290039
    6. '   ' → logprob: -14.876199722290039
    7. '[' → logprob: -16.56369972229004
    8. '۰' → logprob: -16.81369972229004
    9. 'o' → logprob: -16.93869972229004
    10. '``' → logprob: -16.93869972229004

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024567391723394394
    2. ':
' → logprob: -3.7745673656463623
    3. ' and' → logprob: -6.899567604064941
    4. ' :' → logprob: -8.524567604064941
    5. 'and' → logprob: -9.399567604064941
    6. ' :
' → logprob: -10.899567604064941
    7. ' ==' → logprob: -12.399567604064941
    8. '   ' → logprob: -12.774567604064941
    9. '==' → logprob: -12.899567604064941
    10. '=' → logprob: -13.524567604064941

Token 132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037144499365240335
    2. '       ' → logprob: -6.128714561462402
    3. ':' → logprob: -6.753714561462402
    4. ' and' → logprob: -8.628714561462402
    5. ':
' → logprob: -9.378714561462402
    6. ' if' → logprob: -9.878714561462402
    7. 'if' → logprob: -11.253714561462402
    8. 'and' → logprob: -12.253714561462402
    9. ' for' → logprob: -12.378714561462402
    10. '
' → logprob: -12.378714561462402

Token 133: ' mn' (ID: 34208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5502349734306335
    2. ' if' → logprob: -1.9252350330352783
    3. 'cnt' → logprob: -2.1752350330352783
    4. ' cnt' → logprob: -3.3002350330352783
    5. '   ' → logprob: -3.4252350330352783
    6. 'for' → logprob: -3.6752350330352783
    7. 'print' → logprob: -4.800234794616699
    8. 'dp' → logprob: -4.925234794616699
    9. 'half' → logprob: -5.050234794616699
    10. ' for' → logprob: -5.175234794616699

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06996756047010422
    2. '=' → logprob: -2.69496750831604
    3. '=min' → logprob: -11.319967269897461
    4. ' ' → logprob: -12.069967269897461
    5. '_' → logprob: -12.569967269897461
    6. '_val' → logprob: -13.194967269897461
    7. '   ' → logprob: -13.569967269897461
    8. '_=' → logprob: -13.819967269897461
    9. '=num' → logprob: -14.069967269897461
    10. '=_' → logprob: -14.194967269897461

Token 135: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02546321228146553
    2. ' min' → logprob: -4.025463104248047
    3. 'INF' → logprob: -5.150463104248047
    4. 'math' → logprob: -6.650463104248047
    5. ' INF' → logprob: -9.525463104248047
    6. ' math' → logprob: -10.275463104248047
    7. 'nums' → logprob: -10.400463104248047
    8. 'float' → logprob: -11.525463104248047
    9. '[min' → logprob: -11.775463104248047
    10. '10' → logprob: -11.900463104248047

Token 136: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -1.3663626305060461e-05
    2. 'nums' → logprob: -11.37501335144043
    3. '(' → logprob: -14.00001335144043
    4. '(num' → logprob: -14.00001335144043
    5. ' nums' → logprob: -15.37501335144043
    6. '(abs' → logprob: -16.00001335144043
    7. '(numbers' → logprob: -16.75001335144043
    8. '(ans' → logprob: -17.00001335144043
    9. '(n' → logprob: -17.75001335144043
    10. ' (' → logprob: -18.00001335144043

Token 137: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5761016011238098
    2. ')
' → logprob: -0.8261016011238098
    3. ' )
' → logprob: -9.326101303100586
    4. ' )' → logprob: -9.951101303100586
    5. '   ' → logprob: -11.701101303100586
    6. ')
' → logprob: -11.826101303100586
    7. ')

' → logprob: -12.826101303100586
    8. '())
' → logprob: -13.451101303100586
    9. '))' → logprob: -14.451101303100586
    10. '())' → logprob: -14.451101303100586

Token 138: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5197998285293579
    2. '
' → logprob: -1.769799828529358
    3. '       ' → logprob: -2.0197997093200684
    4. ' if' → logprob: -2.7697997093200684
    5. 'if' → logprob: -3.2697997093200684
    6. '    
' → logprob: -7.394799709320068
    7. '        
' → logprob: -7.894799709320068
    8. '
' → logprob: -9.269800186157227
    9. ',' → logprob: -9.519800186157227
    10. '  
' → logprob: -9.769800186157227

Token 139: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0058726174756884575
    2. ' if' → logprob: -6.00587272644043
    3. 'for' → logprob: -7.38087272644043
    4. 'print' → logprob: -7.38087272644043
    5. 'ans' → logprob: -7.50587272644043
    6. '   ' → logprob: -7.50587272644043
    7. 'cnt' → logprob: -7.88087272644043
    8. 'sm' → logprob: -8.25587272644043
    9. '       ' → logprob: -9.13087272644043
    10. 'idx' → logprob: -9.88087272644043

Token 140: ' ans' (ID: 3345)
  Prédit: ' mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mn' → logprob: -0.6955121159553528
    2. ' (' → logprob: -0.9455121159553528
    3. '(m' → logprob: -2.820512056350708
    4. ' sm' → logprob: -3.945512056350708
    5. ' ans' → logprob: -4.695512294769287
    6. 'mn' → logprob: -4.820512294769287
    7. '(ans' → logprob: -4.945512294769287
    8. '(' → logprob: -5.195512294769287
    9. '(sm' → logprob: -6.320512294769287
    10. '((' → logprob: -7.820512294769287

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4741537570953369
    2. '==' → logprob: -0.9741537570953369
    3. ' !=' → logprob: -10.099153518676758
    4. '!=' → logprob: -11.349153518676758
    5. ' ' → logprob: -11.724153518676758
    6. ':' → logprob: -12.724153518676758
    7. ' ^' → logprob: -13.349153518676758
    8. ')' → logprob: -13.349153518676758
    9. '   ' → logprob: -13.724153518676758
    10. '==
' → logprob: -13.724153518676758

Token 142: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4201398193836212
    2. '1' → logprob: -1.1701397895812988
    3. '0' → logprob: -3.420139789581299
    4. '=' → logprob: -12.170140266418457
    5. ' mn' → logprob: -13.045140266418457
    6. ' ' → logprob: -13.670140266418457
    7. '   ' → logprob: -13.795140266418457
    8. ' (' → logprob: -14.295140266418457
    9. '(' → logprob: -14.795140266418457
    10. 'mn' → logprob: -15.045140266418457

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23673902451992035
    2. '0' → logprob: -1.6117390394210815
    3. ' ' → logprob: -4.486739158630371
    4. '(' → logprob: -13.861739158630371
    5. '   ' → logprob: -14.236739158630371
    6. ' ' → logprob: -15.111739158630371
    7. '=' → logprob: -15.174239158630371
    8. 'sm' → logprob: -15.549239158630371
    9. '[' → logprob: -15.924239158630371
    10. '(m' → logprob: -15.986739158630371

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12021389603614807
    2. ' and' → logprob: -2.3702139854431152
    3. ':
' → logprob: -4.620213985443115
    4. ' :' → logprob: -4.995213985443115
    5. 'and' → logprob: -6.120213985443115
    6. ' or' → logprob: -8.370213508605957
    7. ' ==' → logprob: -8.620213508605957
    8. '           ' → logprob: -8.745213508605957
    9. ' :
' → logprob: -8.745213508605957
    10. '==' → logprob: -8.870213508605957

Token 145: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15344488620758057
    2. ':
' → logprob: -2.403444766998291
    3. '           ' → logprob: -3.028444766998291
    4. ' and' → logprob: -6.153444766998291
    5. '       ' → logprob: -7.778444766998291
    6. 'print' → logprob: -8.02844524383545
    7. 'and' → logprob: -8.65344524383545
    8. ' or' → logprob: -8.65344524383545
    9. '==' → logprob: -9.90344524383545
    10. ' print' → logprob: -10.65344524383545

Token 146: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24781550467014313
    2. '           ' → logprob: -1.622815489768982
    3. ' print' → logprob: -4.1228156089782715
    4. '       ' → logprob: -5.4978156089782715
    5. '               ' → logprob: -7.1228156089782715
    6. '   ' → logprob: -7.9978156089782715
    7. ':' → logprob: -8.247815132141113
    8. '
' → logprob: -8.622815132141113
    9. 'if' (adapté à ' if') → logprob: -9.122815132141113
    10. ':
' → logprob: -9.997815132141113

Token 147: ' sm' (ID: 1765)
  Prédit: ' mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mn' → logprob: -0.043610829859972
    2. 'mn' → logprob: -3.6686108112335205
    3. ' (' → logprob: -4.9186110496521
    4. ' n' → logprob: -5.0436110496521
    5. 'n' → logprob: -6.9186110496521
    6. '(m' → logprob: -7.2936110496521
    7. '(n' → logprob: -7.5436110496521
    8. ' all' → logprob: -8.293610572814941
    9. ' any' → logprob: -8.543610572814941
    10. ' sm' → logprob: -8.543610572814941

Token 148: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.0771315097808838
    2. ' -' → logprob: -1.3271315097808838
    3. ' >' → logprob: -1.9521315097808838
    4. '<' → logprob: -3.077131509780884
    5. '>' → logprob: -3.202131509780884
    6. ' %' → logprob: -3.202131509780884
    7. ' >=' → logprob: -3.202131509780884
    8. '-' → logprob: -3.452131509780884
    9. '%' → logprob: -3.952131509780884
    10. '>=' → logprob: -4.577131271362305

Token 149: ' mn' (ID: 34208)
  Prédit: ' mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mn' → logprob: -0.6671092510223389
    2. 'mn' → logprob: -0.9171092510223389
    3. ' ' → logprob: -3.292109251022339
    4. 'n' → logprob: -4.292109489440918
    5. '1' → logprob: -4.542109489440918
    6. 'INF' → logprob: -4.542109489440918
    7. ' n' → logprob: -5.042109489440918
    8. '2' → logprob: -5.542109489440918
    9. '0' → logprob: -6.042109489440918
    10. ' INF' → logprob: -6.542109489440918

Token 150: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22642098367214203
    2. ':
' → logprob: -1.6014209985733032
    3. '               ' → logprob: -8.101421356201172
    4. ' :' → logprob: -8.726421356201172
    5. ' and' → logprob: -9.101421356201172
    6. '           ' → logprob: -9.101421356201172
    7. ' or' → logprob: -9.476421356201172
    8. ':
' → logprob: -9.726421356201172
    9. ' :
' → logprob: -9.851421356201172
    10. ' +' → logprob: -10.601421356201172

Token 151: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03455852344632149
    2. '(n' → logprob: -3.7845585346221924
    3. ' n' → logprob: -4.909558296203613
    4. 'len' → logprob: -6.034558296203613
    5. '2' → logprob: -7.409558296203613
    6. ' (' → logprob: -7.909558296203613
    7. '(' → logprob: -8.409558296203613
    8. '(len' → logprob: -9.034558296203613
    9. ' ' → logprob: -9.284558296203613
    10. '   ' → logprob: -10.909558296203613

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22583043575286865
    2. ':
' → logprob: -1.6008304357528687
    3. '           ' → logprob: -8.850830078125
    4. '               ' → logprob: -9.850830078125
    5. ' and' → logprob: -9.975830078125
    6. ' or' → logprob: -10.475830078125
    7. ' :' → logprob: -10.475830078125
    8. '       ' → logprob: -10.850830078125
    9. ':
' → logprob: -10.975830078125
    10. ' :
' → logprob: -11.100830078125

Token 153: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7813833355903625
    2. ':
' → logprob: -0.9063833355903625
    3. ':' → logprob: -2.0313832759857178
    4. '           ' → logprob: -5.156383514404297
    5. '):
' → logprob: -7.156383514404297
    6. 'print' → logprob: -8.656383514404297
    7. '):' → logprob: -9.406383514404297
    8. ' and' → logprob: -10.281383514404297
    9. '
' → logprob: -10.281383514404297
    10. '       ' → logprob: -10.406383514404297

Token 154: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013005747459828854
    2. '               ' → logprob: -4.76300573348999
    3. ' print' → logprob: -6.13800573348999
    4. '           ' → logprob: -6.13800573348999
    5. '                   ' → logprob: -10.138006210327148
    6. '   ' → logprob: -11.388006210327148
    7. '       ' → logprob: -11.888006210327148
    8. '
' → logprob: -13.138006210327148
    9. '```' → logprob: -14.138006210327148
    10. ' ' → logprob: -14.388006210327148

Token 155: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.250036239624023
    3. '("")' → logprob: -15.750036239624023
    4. '('' → logprob: -15.875036239624023
    5. '(("' → logprob: -16.750036239624023
    6. '()' → logprob: -16.875036239624023
    7. '("("' → logprob: -17.125036239624023
    8. '"' → logprob: -17.750036239624023
    9. ' ("' → logprob: -17.750036239624023
    10. '(n' → logprob: -18.250036239624023

Token 156: 'Second' (ID: 17422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25379884243011475
    2. 'First' → logprob: -1.5037988424301147
    3. 'Second' → logprob: -6.378798961639404
    4. ''' → logprob: -10.128798484802246
    5. '("' → logprob: -10.753798484802246
    6. ' First' → logprob: -11.128798484802246
    7. 'Third' → logprob: -11.503798484802246
    8. '"No' → logprob: -11.628798484802246
    9. '
' → logprob: -11.753798484802246
    10. '""' → logprob: -12.003798484802246

Token 157: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.16044773161411285
    2. '")' → logprob: -1.9104477167129517
    3. ')
' → logprob: -9.66044807434082
    4. ')' → logprob: -9.78544807434082
    5. '           ' → logprob: -10.41044807434082
    6. '")
' → logprob: -10.41044807434082
    7. ')")
' → logprob: -10.41044807434082
    8. ')")' → logprob: -12.16044807434082
    9. '       ' → logprob: -13.03544807434082
    10. '               ' → logprob: -13.41044807434082

Token 158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003434238489717245
    2. '               ' → logprob: -6.003434181213379
    3. 'else' → logprob: -7.253434181213379
    4. ')' → logprob: -8.753434181213379
    5. ' else' → logprob: -10.128434181213379
    6. '       ' → logprob: -10.503434181213379
    7. ')
' → logprob: -12.128434181213379
    8. '<|end|>' → logprob: -12.128434181213379
    9. '")' → logprob: -12.503434181213379
    10. '
' → logprob: -12.878434181213379

Token 159: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1619676947593689
    2. 'else' (adapté à ' else') → logprob: -2.5369677543640137
    3. ' else' → logprob: -2.6619677543640137
    4. '               ' → logprob: -7.786967754364014
    5. '       ' → logprob: -9.036967277526855
    6. '
' → logprob: -10.036967277526855
    7. ')' → logprob: -11.661967277526855
    8. ':
' → logprob: -12.411967277526855
    9. '	else' → logprob: -12.411967277526855
    10. '   ' → logprob: -12.661967277526855

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.944735586643219
    2. '               ' → logprob: -1.0697355270385742
    3. ':
' → logprob: -1.3197355270385742
    4. '           ' → logprob: -7.319735527038574
    5. '):
' → logprob: -9.694735527038574
    6. ' :
' → logprob: -10.319735527038574
    7. '                   ' → logprob: -10.694735527038574
    8. 'print' → logprob: -10.944735527038574
    9. '              ' → logprob: -11.069735527038574
    10. ':

' → logprob: -11.194735527038574

Token 161: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04896475374698639
    2. 'print' → logprob: -3.173964738845825
    3. ' print' → logprob: -5.173964977264404
    4. '           ' → logprob: -8.298964500427246
    5. '       ' → logprob: -11.423964500427246
    6. '                   ' → logprob: -11.423964500427246
    7. '   ' → logprob: -12.298964500427246
    8. '```' → logprob: -12.798964500427246
    9. ' ' → logprob: -13.798964500427246
    10. '              ' → logprob: -13.923964500427246

Token 162: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6966676115989685
    2. ' print' → logprob: -0.6966676115989685
    3. '               ' → logprob: -5.696667671203613
    4. '           ' → logprob: -8.946667671203613
    5. '       ' → logprob: -12.071667671203613
    6. '   ' → logprob: -12.196667671203613
    7. '	print' → logprob: -12.696667671203613
    8. ' ' → logprob: -12.821667671203613
    9. '                   ' → logprob: -12.946667671203613
    10. '                ' → logprob: -13.321667671203613

Token 163: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.625003814697266
    3. '("("' → logprob: -17.750003814697266
    4. '('' → logprob: -18.250003814697266
    5. '(
' → logprob: -19.000003814697266
    6. ')("' → logprob: -20.750003814697266
    7. '()' → logprob: -21.000003814697266
    8. '(("' → logprob: -21.250003814697266
    9. ' ("' → logprob: -21.500003814697266
    10. '"' → logprob: -21.500003814697266

Token 164: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.08953933417797089
    2. '"' → logprob: -2.7145392894744873
    3. '("' → logprob: -3.9645392894744873
    4. 'Second' → logprob: -8.464539527893066
    5. '(' → logprob: -9.464539527893066
    6. '
' → logprob: -10.464539527893066
    7. 'first' → logprob: -10.964539527893066
    8. 'Third' → logprob: -11.214539527893066
    9. '('' → logprob: -11.339539527893066
    10. ''' → logprob: -11.589539527893066

Token 165: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08138350397348404
    2. ')' → logprob: -2.581383466720581
    3. '")
' → logprob: -6.20638370513916
    4. ')
' → logprob: -8.45638370513916
    5. ')")' → logprob: -8.70638370513916
    6. '       ' → logprob: -9.70638370513916
    7. '           ' → logprob: -11.33138370513916
    8. '()' → logprob: -11.45638370513916
    9. ')")
' → logprob: -12.58138370513916
    10. '```' → logprob: -13.20638370513916

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014473795890808105
    2. 'else' → logprob: -6.6264472007751465
    3. ' else' → logprob: -9.126447677612305
    4. '<|end|>' → logprob: -12.626447677612305
    5. '```' → logprob: -12.751447677612305
    6. '           ' → logprob: -13.501447677612305
    7. '   ' → logprob: -13.876447677612305
    8. ')' → logprob: -14.001447677612305
    9. '	else' → logprob: -14.126447677612305
    10. '
' → logprob: -14.501447677612305

Token 167: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6588563323020935
    2. 'else' (adapté à ' else') → logprob: -0.7838563323020935
    3. ' else' → logprob: -3.6588563919067383
    4. '	else' → logprob: -9.533856391906738
    5. 'elif' → logprob: -10.408856391906738
    6. '           ' → logprob: -11.033856391906738
    7. '
' → logprob: -11.533856391906738
    8. '   ' → logprob: -11.533856391906738
    9. '	' → logprob: -12.658856391906738
    10. '<|end|>' → logprob: -13.033856391906738

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14744311571121216
    2. ':
' → logprob: -2.1474430561065674
    3. '           ' → logprob: -3.8974430561065674
    4. '               ' → logprob: -12.397442817687988
    5. 'print' → logprob: -12.897442817687988
    6. '       ' → logprob: -13.022442817687988
    7. ':

' → logprob: -14.147442817687988
    8. ':
' → logprob: -14.397442817687988
    9. ' :
' → logprob: -14.397442817687988
    10. ' :' → logprob: -14.522442817687988

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004682073777075857
    2. '               ' → logprob: -8.375468254089355
    3. 'print' → logprob: -8.375468254089355
    4. ' print' → logprob: -12.250468254089355
    5. '       ' → logprob: -14.375468254089355
    6. '          ' → logprob: -14.500468254089355
    7. '		' → logprob: -15.000468254089355
    8. '
' → logprob: -15.250468254089355
    9. '         ' → logprob: -15.250468254089355
    10. '                   ' → logprob: -15.875468254089355

Token 170: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04892003536224365
    2. '           ' → logprob: -3.298920154571533
    3. ' print' → logprob: -4.548920154571533
    4. '       ' → logprob: -8.923919677734375
    5. '               ' → logprob: -9.673919677734375
    6. 'if' (adapté à ' if') → logprob: -10.673919677734375
    7. '   ' → logprob: -11.423919677734375
    8. ' if' → logprob: -12.048919677734375
    9. ' ' → logprob: -13.923919677734375
    10. '          ' → logprob: -14.048919677734375

Token 171: ' mn' (ID: 34208)
  Prédit: ' mn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mn' → logprob: -0.8577390909194946
    2. ' sm' → logprob: -0.9827390909194946
    3. 'mn' → logprob: -2.357738971710205
    4. 'sm' → logprob: -2.357738971710205
    5. 'sum' → logprob: -5.482738971710205
    6. ' sum' → logprob: -6.732738971710205
    7. ' ans' → logprob: -6.732738971710205
    8. ' all' → logprob: -7.232738971710205
    9. 'ans' → logprob: -7.357738971710205
    10. 'nums' → logprob: -7.607738971710205

Token 172: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4599866271018982
    2. '==' → logprob: -1.709986686706543
    3. ' >' → logprob: -2.209986686706543
    4. ' !=' → logprob: -3.334986686706543
    5. '>' → logprob: -4.209986686706543
    6. '%' → logprob: -4.584986686706543
    7. ' %' → logprob: -4.834986686706543
    8. '!=' → logprob: -5.334986686706543
    9. ' ' → logprob: -5.584986686706543
    10. ' <' → logprob: -7.709986686706543

Token 173: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002204855205491185
    2. ' ' → logprob: -6.127204895019531
    3. '   ' → logprob: -11.252204895019531
    4. '  ' → logprob: -12.127204895019531
    5. '```' → logprob: -15.377204895019531
    6. '     ' → logprob: -15.877204895019531
    7. '
' → logprob: -16.00220489501953
    8. '4' → logprob: -16.00220489501953
    9. '==' → logprob: -16.37720489501953
    10. '    ' → logprob: -16.37720489501953

Token 174: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -12.00001049041748
    3. '   ' → logprob: -12.50001049041748
    4. '4' → logprob: -16.000011444091797
    5. '  ' → logprob: -16.125011444091797
    6. '```' → logprob: -16.125011444091797
    7. '1' → logprob: -16.625011444091797
    8. '
' → logprob: -16.750011444091797
    9. '

' → logprob: -17.375011444091797
    10. '    ' → logprob: -17.875011444091797

Token 175: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740930497646332
    2. ' ==' → logprob: -0.9740930795669556
    3. ' !=' → logprob: -11.974093437194824
    4. '!=' → logprob: -12.724093437194824
    5. '           ' → logprob: -13.599093437194824
    6. '==
' → logprob: -13.599093437194824
    7. '```' → logprob: -14.099093437194824
    8. '()==' → logprob: -14.224093437194824
    9. '1' → logprob: -14.474093437194824
    10. '0' → logprob: -14.474093437194824

Token 176: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10635796189308167
    2. '1' → logprob: -2.356358051300049
    3. '2' → logprob: -5.481358051300049
    4. ' ' → logprob: -6.231358051300049
    5. '==' → logprob: -14.66885757446289
    6. '```' → logprob: -14.66885757446289
    7. '   ' → logprob: -15.10635757446289
    8. '=' → logprob: -15.29385757446289
    9. '
' → logprob: -16.23135757446289
    10. '[' → logprob: -16.48135757446289

Token 177: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03918477147817612
    2. '1' → logprob: -3.289184808731079
    3. '2' → logprob: -6.7891845703125
    4. ' ' → logprob: -11.0391845703125
    5. '```' → logprob: -15.3516845703125
    6. '==' → logprob: -16.1641845703125
    7. '   ' → logprob: -16.4766845703125
    8. '=' → logprob: -16.7266845703125
    9. 'n' → logprob: -16.7266845703125
    10. '
' → logprob: -17.2891845703125

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5134392380714417
    2. ':
' → logprob: -1.0134391784667969
    3. '               ' → logprob: -3.263439178466797
    4. '           ' → logprob: -8.138439178466797
    5. ':

' → logprob: -11.513439178466797
    6. '):
' → logprob: -11.763439178466797
    7. ' and' → logprob: -12.013439178466797
    8. ' :
' → logprob: -12.263439178466797
    9. 'print' → logprob: -12.388439178466797
    10. ',' → logprob: -12.888439178466797

Token 179: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02814100682735443
    2. ':
' → logprob: -3.7781410217285156
    3. 'print' → logprob: -5.778141021728516
    4. '           ' → logprob: -6.778141021728516
    5. ':' → logprob: -7.528141021728516
    6. '                   ' → logprob: -10.278141021728516
    7. '):
' → logprob: -10.903141021728516
    8. ' print' → logprob: -10.903141021728516
    9. '       ' → logprob: -11.403141021728516
    10. '
' → logprob: -12.403141021728516

Token 180: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011901873163878918
    2. '               ' → logprob: -5.01190185546875
    3. ' print' → logprob: -5.38690185546875
    4. '           ' → logprob: -7.63690185546875
    5. '                   ' → logprob: -9.51190185546875
    6. '   ' → logprob: -10.51190185546875
    7. '       ' → logprob: -11.76190185546875
    8. '
' → logprob: -13.26190185546875
    9. ' ' → logprob: -13.63690185546875
    10. '	print' → logprob: -13.76190185546875

Token 181: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -8.566264295950532e-05
    2. '(' → logprob: -9.375085830688477
    3. '('' → logprob: -14.375085830688477
    4. '("("' → logprob: -15.875085830688477
    5. ' ("' → logprob: -17.500085830688477
    6. '(("' → logprob: -18.250085830688477
    7. '("")' → logprob: -18.500085830688477
    8. '("""' → logprob: -18.625085830688477
    9. '(
' → logprob: -18.875085830688477
    10. '()' → logprob: -19.500085830688477

Token 182: 'First' (ID: 7127)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09048290550708771
    2. 'First' → logprob: -2.5904829502105713
    3. 'Second' → logprob: -4.465482711791992
    4. ''' → logprob: -11.590482711791992
    5. '("' → logprob: -12.215482711791992
    6. ' First' → logprob: -12.840482711791992
    7. 'Third' → logprob: -12.965482711791992
    8. '
' → logprob: -13.215482711791992
    9. '""' → logprob: -13.840482711791992
    10. ' Second' → logprob: -14.715482711791992

Token 183: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.4635990560054779
    2. '")' → logprob: -1.4635990858078003
    3. ')
' → logprob: -2.4635989665985107
    4. ')' → logprob: -3.5885989665985107
    5. '           ' → logprob: -3.7135989665985107
    6. '       ' → logprob: -6.08859920501709
    7. '               ' → logprob: -9.83859920501709
    8. 'else' → logprob: -10.96359920501709
    9. '   ' → logprob: -11.08859920501709
    10. ')")
' → logprob: -11.08859920501709

Token 184: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001593292225152254
    2. '               ' → logprob: -7.001593112945557
    3. 'else' → logprob: -7.376593112945557
    4. '       ' → logprob: -10.126593589782715
    5. ' else' → logprob: -11.376593589782715
    6. '```' → logprob: -13.126593589782715
    7. '		' → logprob: -14.001593589782715
    8. '<|end|>' → logprob: -14.501593589782715
    9. '	       ' → logprob: -15.501593589782715
    10. ')' → logprob: -15.626593589782715

Token 185: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.49090439081192017
    2. '           ' → logprob: -0.9909043908119202
    3. ' else' → logprob: -4.240904331207275
    4. '       ' → logprob: -6.365904331207275
    5. '               ' → logprob: -7.490904331207275
    6. '
' → logprob: -11.990904808044434
    7. '   ' → logprob: -12.365904808044434
    8. 'elif' → logprob: -13.740904808044434
    9. '	else' → logprob: -13.865904808044434
    10. '```' → logprob: -14.490904808044434

Token 186: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3411576747894287
    2. ':
' → logprob: -1.7161576747894287
    3. ':' → logprob: -2.2161576747894287
    4. '           ' → logprob: -8.591157913208008
    5. '():
' → logprob: -10.341157913208008
    6. '                   ' → logprob: -11.091157913208008
    7. '):
' → logprob: -11.591157913208008
    8. 'print' → logprob: -11.966157913208008
    9. '              ' → logprob: -12.216157913208008
    10. '       ' → logprob: -12.716157913208008

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008079635445028543
    2. 'print' → logprob: -7.125807762145996
    3. '           ' → logprob: -13.250807762145996
    4. ' print' → logprob: -13.875807762145996
    5. '              ' → logprob: -15.375807762145996
    6. '                   ' → logprob: -15.750807762145996
    7. '	           ' → logprob: -16.125808715820312
    8. '       ' → logprob: -16.250808715820312
    9. '   ' → logprob: -16.500808715820312
    10. '		       ' → logprob: -17.250808715820312

Token 188: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00045545989996753633
    2. ' print' → logprob: -8.250455856323242
    3. '           ' → logprob: -8.750455856323242
    4. '               ' → logprob: -10.250455856323242
    5. '   ' → logprob: -15.625455856323242
    6. '       ' → logprob: -15.750455856323242
    7. '	print' → logprob: -16.875455856323242
    8. ' ' → logprob: -18.500455856323242
    9. '          ' → logprob: -19.000455856323242
    10. '                   ' → logprob: -19.625455856323242

Token 189: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. '"' → logprob: -17.125001907348633
    4. '('' → logprob: -18.500001907348633
    5. '(
' → logprob: -18.875001907348633
    6. '("("' → logprob: -19.375001907348633
    7. ' ("' → logprob: -20.750001907348633
    8. '   ' → logprob: -21.625001907348633
    9. '(("' → logprob: -22.000001907348633
    10. '(

' → logprob: -22.125001907348633

Token 190: 'Second' (ID: 17422)
  Prédit: 'Second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.0110534792765975
    2. '"' → logprob: -4.511053562164307
    3. '("' → logprob: -13.011053085327148
    4. ' Second' → logprob: -13.761053085327148
    5. ''' → logprob: -14.136053085327148
    6. 'second' → logprob: -14.136053085327148
    7. 'Third' → logprob: -14.636053085327148
    8. 'print' → logprob: -15.761053085327148
    9. '.Second' → logprob: -15.886053085327148
    10. 'First' → logprob: -16.88605308532715

Token 191: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035645465832203627
    2. '")' → logprob: -5.753564357757568
    3. ')
' → logprob: -8.378564834594727
    4. '<|end|>' → logprob: -9.628564834594727
    5. '       ' → logprob: -10.503564834594727
    6. '```' → logprob: -11.128564834594727
    7. '())' → logprob: -11.503564834594727
    8. '`)' → logprob: -11.753564834594727
    9. '')' → logprob: -11.878564834594727
    10. '()' → logprob: -12.003564834594727

Token 192: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06697537004947662
    2. '
' → logprob: -3.5669753551483154
    3. '<|end|>' → logprob: -4.0669755935668945
    4. '\n' → logprob: -4.3169755935668945
    5. '\' → logprob: -6.3169755935668945
    6. '   ' → logprob: -6.6919755935668945
    7. 'main' → logprob: -7.0669755935668945
    8. '```' → logprob: -7.4419755935668945
    9. ' if' → logprob: -7.8169755935668945
    10. 'print' → logprob: -8.191975593566895

Token 193: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010814229026436806
    2. '
' → logprob: -4.635814189910889
    3. '<|end|>' → logprob: -7.510814189910889
    4. '\n' → logprob: -8.635814666748047
    5. 'main' → logprob: -8.760814666748047
    6. ' if' → logprob: -9.885814666748047
    7. '```' → logprob: -10.260814666748047
    8. 'print' → logprob: -10.385814666748047
    9. '    
' → logprob: -11.635814666748047
    10. 'return' → logprob: -11.760814666748047

Token 194: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 195: '(ans' (ID: 70054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025588995777070522
    2. '(' → logprob: -6.377558708190918
    3. '("")' → logprob: -7.752558708190918
    4. '("' → logprob: -8.252558708190918
    5. '(ans' → logprob: -8.877558708190918
    6. '()
' → logprob: -12.252558708190918
    7. '(n' → logprob: -12.377558708190918
    8. '('' → logprob: -12.752558708190918
    9. '())' → logprob: -13.377558708190918
    10. '("("' → logprob: -13.627558708190918

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.3464544432936236e-05
    2. '()' → logprob: -10.625043869018555
    3. '())' → logprob: -11.375043869018555
    4. ')#' → logprob: -13.125043869018555
    5. ' )' → logprob: -13.375043869018555
    6. ')
' → logprob: -13.500043869018555
    7. '#' → logprob: -13.625043869018555
    8. '   ' → logprob: -14.375043869018555
    9. '))' → logprob: -15.250043869018555
    10. '(' → logprob: -15.750043869018555

Token 197: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.75740647315979
    2. 'if' → logprob: -1.25740647315979
    3. '<|end|>' → logprob: -1.50740647315979
    4. '\n' → logprob: -3.88240647315979
    5. '```' → logprob: -6.757406234741211
    6. 'main' → logprob: -6.757406234741211
    7. '\' → logprob: -7.882406234741211
    8. ' if' → logprob: -7.882406234741211
    9. '<|end|>' → logprob: -7.882406234741211
    10. '

' → logprob: -8.257406234741211

Token 198: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6490334868431091
    2. '<|end|>' → logprob: -1.149033546447754
    3. '
' → logprob: -1.899033546447754
    4. 'main' → logprob: -5.024033546447754
    5. '\n' → logprob: -6.399033546447754
    6. '```' → logprob: -7.399033546447754
    7. '<|end|>' → logprob: -7.524033546447754
    8. ' if' → logprob: -8.024033546447754
    9. ')' → logprob: -8.274033546447754
    10. 'return' → logprob: -8.774033546447754

Token 199: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016940539702773094
    2. 'main' → logprob: -4.891940593719482
    3. '<|end|>' → logprob: -5.391940593719482
    4. 'return' → logprob: -5.766940593719482
    5. '
' → logprob: -7.391940593719482
    6. 'print' → logprob: -7.641940593719482
    7. ' if' → logprob: -8.891940116882324
    8. '#' → logprob: -9.516940116882324
    9. '```' → logprob: -9.641940116882324
    10. '    
' → logprob: -9.891940116882324

Token 200: ' ans' (ID: 3345)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.349533349275589
    2. '__' → logprob: -1.2245333194732666
    3. ' n' → logprob: -7.974533557891846
    4. ' ans' → logprob: -8.224533081054688
    5. 'n' → logprob: -8.849533081054688
    6. ' sm' → logprob: -8.974533081054688
    7. ' True' → logprob: -9.599533081054688
    8. 'ans' → logprob: -10.349533081054688
    9. 'sm' → logprob: -11.099533081054688
    10. ' ' → logprob: -11.099533081054688

Token 201: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014305942691862583
    2. '==' → logprob: -4.38930606842041
    3. '<|end|>' → logprob: -7.38930606842041
    4. ' %' → logprob: -8.01430606842041
    5. ' ' → logprob: -8.38930606842041
    6. '   ' → logprob: -8.51430606842041
    7. '  ' → logprob: -9.13930606842041
    8. '%' → logprob: -9.26430606842041
    9. ' !=' → logprob: -9.76430606842041
    10. '<|end|>' → logprob: -10.38930606842041

Token 202: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4203219711780548
    2. '1' → logprob: -1.4203219413757324
    3. '0' → logprob: -2.2953219413757324
    4. '=' → logprob: -7.670321941375732
    5. '   ' → logprob: -9.42032241821289
    6. '2' → logprob: -9.79532241821289
    7. '  ' → logprob: -9.92032241821289
    8. '"' → logprob: -11.17032241821289
    9. ' ' → logprob: -11.17032241821289
    10. ' n' → logprob: -11.48282241821289

Token 203: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.34871843457221985
    2. '0' → logprob: -1.2237184047698975
    3. ' ' → logprob: -8.348718643188477
    4. '2' → logprob: -10.848718643188477
    5. '   ' → logprob: -12.723718643188477
    6. 'ans' → logprob: -12.973718643188477
    7. 'n' → logprob: -13.348718643188477
    8. '=' → logprob: -13.473718643188477
    9. '#' → logprob: -13.723718643188477
    10. '(' → logprob: -13.848718643188477

Token 204: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6566815972328186
    2. 'return' → logprob: -2.156681537628174
    3. ' return' → logprob: -2.156681537628174
    4. 'print' → logprob: -2.281681537628174
    5. 'if' → logprob: -2.406681537628174
    6. ' print' → logprob: -4.281681537628174
    7. '       ' → logprob: -4.656681537628174
    8. '#' → logprob: -4.656681537628174
    9. 'pass' → logprob: -5.031681537628174
    10. ' pass' → logprob: -5.406681537628174

Token 208: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2746124565601349
    2. 'pass' → logprob: -1.7746124267578125
    3. 'return' → logprob: -2.8996124267578125
    4. 'for' → logprob: -4.8996124267578125
    5. 'if' → logprob: -5.1496124267578125
    6. '   ' → logprob: -6.6496124267578125
    7. ' pass' → logprob: -7.6496124267578125
    8. '#' → logprob: -8.274612426757812
    9. ' return' → logprob: -9.649612426757812
    10. ' print' → logprob: -9.774612426757812

Token 209: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00012844942102674395
    2. '(' → logprob: -9.250128746032715
    3. '()' → logprob: -10.625128746032715
    4. '('' → logprob: -12.375128746032715
    5. '("")' → logprob: -12.750128746032715
    6. '"' → logprob: -15.250128746032715
    7. '(
' → logprob: -15.875128746032715
    8. 'Second' → logprob: -16.1251277923584
    9. '(None' → logprob: -16.3751277923584
    10. '(("' → logprob: -16.6251277923584

Token 210: 'Second' (ID: 17422)
  Prédit: 'Second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.511919379234314
    2. 'First' → logprob: -1.261919379234314
    3. '")' → logprob: -2.5119194984436035
    4. 'if' → logprob: -3.7619194984436035
    5. 'main' → logprob: -5.1369194984436035
    6. 'Third' → logprob: -5.8869194984436035
    7. '"' → logprob: -6.2619194984436035
    8. '__' → logprob: -7.3869194984436035
    9. '")
' → logprob: -7.5119194984436035
    10. 'Main' → logprob: -8.761919021606445

Token 211: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04858975484967232
    2. '<|end|>' → logprob: -3.4235897064208984
    3. '")' → logprob: -4.298589706420898
    4. '<|end|>' → logprob: -8.048589706420898
    5. '
' → logprob: -8.173589706420898
    6. '```' → logprob: -8.423589706420898
    7. '   ' → logprob: -9.173589706420898
    8. '\n' → logprob: -9.298589706420898
    9. ')
' → logprob: -9.423589706420898
    10. '')' → logprob: -10.673589706420898

Token 212: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7100872993469238
    2. '<|end|>' → logprob: -0.7100872993469238
    3. '   ' → logprob: -5.585087299346924
    4. '
' → logprob: -5.710087299346924
    5. '```' → logprob: -5.960087299346924
    6. 'else' → logprob: -6.460087299346924
    7. 'print' → logprob: -6.460087299346924
    8. ')' → logprob: -6.960087299346924
    9. 'elif' → logprob: -6.960087299346924
    10. '<|end|>' → logprob: -7.085087299346924

Token 214: ' else' (ID: 1203)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05048240348696709
    2. 'else' → logprob: -3.0504825115203857
    3. 'elif' → logprob: -6.675482273101807
    4. '
' → logprob: -7.925482273101807
    5. 'return' → logprob: -8.800482749938965
    6. '```' → logprob: -10.550482749938965
    7. ' if' → logprob: -10.800482749938965
    8. '    
' → logprob: -11.050482749938965
    9. ' else' → logprob: -11.425482749938965
    10. '<|end|>' → logprob: -11.425482749938965

Token 215: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5821935534477234
    2. ':' → logprob: -0.8321935534477234
    3. ':
' → logprob: -5.582193374633789
    4. '   ' → logprob: -6.457193374633789
    5. '():' → logprob: -7.832193374633789
    6. '           ' → logprob: -8.957193374633789
    7. '(' → logprob: -9.082193374633789
    8. '():
' → logprob: -9.957193374633789
    9. '{' → logprob: -10.207193374633789
    10. '<|end|>' → logprob: -10.332193374633789

Token 216: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.792751032160595e-05
    2. '           ' → logprob: -10.00008773803711
    3. 'print' → logprob: -10.25008773803711
    4. '   ' → logprob: -12.12508773803711
    5. ' print' → logprob: -14.00008773803711
    6. '      ' → logprob: -15.00008773803711
    7. '        ' → logprob: -15.00008773803711
    8. '    ' → logprob: -16.87508773803711
    9. '     ' → logprob: -16.87508773803711
    10. '```' → logprob: -17.00008773803711

Token 217: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005948548787273467
    2. 'print' → logprob: -7.6255950927734375
    3. ' print' → logprob: -10.000595092773438
    4. '   ' → logprob: -10.125595092773438
    5. '           ' → logprob: -10.875595092773438
    6. '      ' → logprob: -14.375595092773438
    7. '        ' → logprob: -14.500595092773438
    8. '    ' → logprob: -14.750595092773438
    9. '```' → logprob: -14.875595092773438
    10. ' ' → logprob: -15.000595092773438

Token 218: '    ' (ID: 257)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1749708652496338
    2. ' print' → logprob: -2.674970865249634
    3. 'print' → logprob: -3.049970865249634
    4. '       ' → logprob: -3.174970865249634
    5. '    ' → logprob: -6.174970626831055
    6. '           ' → logprob: -8.174970626831055
    7. ' ' → logprob: -10.424970626831055
    8. '        ' → logprob: -11.049970626831055
    9. '```' → logprob: -11.299970626831055
    10. '  ' → logprob: -11.549970626831055

Token 219: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007348202052526176
    2. ' print' → logprob: -7.250734806060791
    3. '   ' → logprob: -10.87573528289795
    4. '       ' → logprob: -12.12573528289795
    5. '	print' → logprob: -15.75073528289795
    6. '           ' → logprob: -16.125734329223633
    7. '```' → logprob: -16.125734329223633
    8. ' ' → logprob: -17.875734329223633
    9. 'pass' → logprob: -18.125734329223633
    10. 'First' → logprob: -18.250734329223633

Token 220: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -5.438573680294212e-06
    2. '"' → logprob: -12.750005722045898
    3. '(' → logprob: -13.000005722045898
    4. '(
' → logprob: -16.3750057220459
    5. '('' → logprob: -16.6250057220459
    6. 'First' → logprob: -17.2500057220459
    7. '()' → logprob: -18.2500057220459
    8. '   ' → logprob: -20.3750057220459
    9. '("")' → logprob: -20.8750057220459
    10. '"The' → logprob: -21.0000057220459

Token 221: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.0004562943649943918
    2. 'Second' → logprob: -8.125455856323242
    3. '")' → logprob: -9.375455856323242
    4. '"' → logprob: -10.250455856323242
    5. 'Third' → logprob: -10.750455856323242
    6. ' First' → logprob: -11.750455856323242
    7. 'first' → logprob: -13.250455856323242
    8. '"""' → logprob: -13.500455856323242
    9. 'Fi' → logprob: -13.750455856323242
    10. ')' → logprob: -14.000455856323242

Token 222: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07926879823207855
    2. '()' → logprob: -2.95426869392395
    3. '")' → logprob: -4.704268932342529
    4. '<|end|>' → logprob: -5.579268932342529
    5. 'if' → logprob: -5.829268932342529
    6. '
' → logprob: -6.079268932342529
    7. '())' → logprob: -6.329268932342529
    8. '\n' → logprob: -6.454268932342529
    9. '()
' → logprob: -6.954268932342529
    10. '```' → logprob: -7.079268932342529

Token 223: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013094472698867321
    2. 'main' → logprob: -4.513094425201416
    3. '
' → logprob: -6.263094425201416
    4. '\n' → logprob: -10.013094902038574
    5. ' if' → logprob: -10.763094902038574
    6. '```' → logprob: -10.763094902038574
    7. '(main' → logprob: -10.888094902038574
    8. '<|end|>' → logprob: -11.388094902038574
    9. '\
' → logprob: -12.388094902038574
    10. 'print' → logprob: -12.513094902038574

Token 224: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007829130627214909
    2. '__' → logprob: -4.882829189300537
    3. ' main' → logprob: -8.757828712463379
    4. ' ' → logprob: -10.882828712463379
    5. '_' → logprob: -11.132828712463379
    6. ' _' → logprob: -11.382828712463379
    7. ' ' → logprob: -11.757828712463379
    8. '_main' → logprob: -12.382828712463379
    9. 'main' → logprob: -13.132828712463379
    10. ' ___' → logprob: -14.007828712463379

Token 225: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002971399575471878
    2. ' ==' → logprob: -6.377971172332764
    3. '==' → logprob: -7.127971172332764
    4. ' __' → logprob: -8.002971649169922
    5. '__.__' → logprob: -9.752971649169922
    6. '__.' → logprob: -10.377971649169922
    7. '.__' → logprob: -10.502971649169922
    8. '_' → logprob: -12.627971649169922
    9. '[' → logprob: -13.252971649169922
    10. '__[' → logprob: -13.502971649169922

Token 226: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.537868779967539e-06
    2. '==' → logprob: -11.750008583068848
    3. '__.__' → logprob: -15.125008583068848
    4. '_' → logprob: -15.750008583068848
    5. ' ==' → logprob: -16.25000762939453
    6. '____' → logprob: -17.25000762939453
    7. '__.' → logprob: -18.37500762939453
    8. '__
' → logprob: -18.50000762939453
    9. '___' → logprob: -18.50000762939453
    10. ' __' → logprob: -18.62500762939453

Token 227: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.33593592047691345
    2. '==' → logprob: -1.8359359502792358
    3. ' ==' → logprob: -2.0859358310699463
    4. '=="' → logprob: -6.460936069488525
    5. '=='' → logprob: -10.085935592651367
    6. '__.__' → logprob: -11.210935592651367
    7. '_' → logprob: -11.460935592651367
    8. '=' → logprob: -11.835935592651367
    9. '==
' → logprob: -11.960935592651367
    10. '.__' → logprob: -11.960935592651367

Token 228: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008652388118207455
    2. ''' → logprob: -4.758652210235596
    3. ' "__' → logprob: -10.508652687072754
    4. '__' → logprob: -11.508652687072754
    5. ' '__' → logprob: -15.008652687072754
    6. ''"' → logprob: -17.008651733398438
    7. '"'' → logprob: -17.008651733398438
    8. '"name' → logprob: -17.133651733398438
    9. '"_' → logprob: -17.758651733398438
    10. '   ' → logprob: -17.883651733398438

Token 229: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.240481914370321e-05
    2. 'name' → logprob: -9.875052452087402
    3. '__' → logprob: -14.250052452087402
    4. ' main' → logprob: -15.625052452087402
    5. '_main' → logprob: -16.125051498413086
    6. 'ma' → logprob: -17.625051498413086
    7. 'm' → logprob: -18.000051498413086
    8. '(main' → logprob: -18.125051498413086
    9. 'built' → logprob: -18.125051498413086
    10. '__":
' → logprob: -18.500051498413086

Token 230: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.006872728932648897
    2. '__' → logprob: -5.006872653961182
    3. '__':
' → logprob: -8.75687313079834
    4. '__:' → logprob: -17.756872177124023
    5. '__["' → logprob: -17.881872177124023
    6. '__.' → logprob: -18.131872177124023
    7. '__
' → logprob: -18.631872177124023
    8. '__("' → logprob: -20.131872177124023
    9. '_' → logprob: -20.256872177124023
    10. '__.__' → logprob: -20.381872177124023

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.712029218673706
    2. 'main' → logprob: -1.462029218673706
    3. ' main' → logprob: -1.712029218673706
    4. '	main' → logprob: -2.337029218673706
    5. '(main' → logprob: -8.712029457092285
    6. '_main' → logprob: -8.962029457092285
    7. '    
' → logprob: -9.337029457092285
    8. '   ' → logprob: -10.587029457092285
    9. '<|end|>' → logprob: -11.087029457092285
    10. ' ' → logprob: -11.962029457092285

Token 232: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00026169343618676066
    2. ' main' → logprob: -8.250261306762695
    3. '	main' → logprob: -15.000261306762695
    4. '   ' → logprob: -16.750261306762695
    5. '(main' → logprob: -19.250261306762695
    6. '_main' → logprob: -19.375261306762695
    7. '.main' → logprob: -22.250261306762695
    8. 'Main' → logprob: -23.125261306762695
    9. ' ' → logprob: -24.500261306762695
    10. 'mainwindow' → logprob: -24.750261306762695

Token 233: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 231
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 189
Précision stricte (1ère position): 35.06%
Précision adaptée (1ère position): 39.83%
Précision (top 10): 81.82%
================================================================================
