================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N=int(input())
A=list(map(int,input().split()))

if N%2==1:
    if sum(A)%2==1:
        print("First")
    else:
        print("Second")
else:
    if min(A)%2==1:
        print("First")
    else:
        if sum(A)%2==0:
            print("Second")
        else:
            print("First")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46642011404037476
    2. ')' → logprob: -1.0914201736450195
    3. '()' → logprob: -3.8414201736450195
    4. '())' → logprob: -4.4664201736450195
    5. '(
' → logprob: -7.3414201736450195
    6. '```' → logprob: -7.5914201736450195
    7. '")' → logprob: -7.8414201736450195
    8. '')' → logprob: -7.8414201736450195
    9. '`)' → logprob: -7.9664201736450195
    10. '<|end|>' → logprob: -8.46642017364502

Token 4: 'A' (ID: 32)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.47875475883483887
    2. 'for' → logprob: -2.103754758834839
    3. '#' → logprob: -2.978754758834839
    4. '\n' → logprob: -3.103754758834839
    5. ')' → logprob: -3.478754758834839
    6. 's' → logprob: -3.603754758834839
    7. '+' → logprob: -3.978754758834839
    8. 'if' → logprob: -4.228754997253418
    9. '\' → logprob: -4.353754997253418
    10. 'a' → logprob: -4.853754997253418

Token 5: '=list' (ID: 93413)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011143776355311275
    2. '.' → logprob: -7.251114368438721
    3. '\[' → logprob: -9.126114845275879
    4. '[A' → logprob: -9.626114845275879
    5. '[]' → logprob: -9.876114845275879
    6. '+' → logprob: -9.876114845275879
    7. '=' → logprob: -10.626114845275879
    8. '[i' → logprob: -10.876114845275879
    9. 'A' → logprob: -11.376114845275879
    10. ')' → logprob: -11.501114845275879

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017743845819495618
    2. '[' → logprob: -9.500177383422852
    3. '(range' → logprob: -10.250177383422852
    4. '(
' → logprob: -11.500177383422852
    5. '```' → logprob: -11.500177383422852
    6. '[(' → logprob: -11.625177383422852
    7. '(A' → logprob: -11.875177383422852
    8. '(input' → logprob: -12.500177383422852
    9. ')' → logprob: -12.500177383422852
    10. ' (' → logprob: -12.625177383422852

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3222092390060425
    2. '(int' → logprob: -1.3222092390060425
    3. '(str' → logprob: -5.822209358215332
    4. '(input' → logprob: -5.947209358215332
    5. '(lambda' → logprob: -6.072209358215332
    6. ')' → logprob: -7.822209358215332
    7. '(
' → logprob: -8.322209358215332
    8. '(eval' → logprob: -9.447209358215332
    9. '<int' → logprob: -9.572209358215332
    10. '(list' → logprob: -10.322209358215332

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09060028195381165
    2. '(' → logprob: -2.4656002521514893
    3. ',input' → logprob: -7.465600490570068
    4. '(int' → logprob: -8.09060001373291
    5. ')' → logprob: -8.84060001373291
    6. '(eval' → logprob: -9.09060001373291
    7. '))' → logprob: -9.34060001373291
    8. '<|end|>' → logprob: -9.34060001373291
    9. '(INPUT' → logprob: -9.71560001373291
    10. '=input' → logprob: -9.84060001373291

Token 9: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7482773661613464
    2. '()))' → logprob: -1.3732774257659912
    3. '().' → logprob: -1.9982774257659912
    4. '())' → logprob: -2.123277425765991
    5. '()));' → logprob: -4.498277187347412
    6. '()>' → logprob: -5.998277187347412
    7. '(' → logprob: -6.748277187347412
    8. '())))' → logprob: -6.998277187347412
    9. '());' → logprob: -7.248277187347412
    10. '()-' → logprob: -7.998277187347412

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00012892624363303185
    2. 'strip' → logprob: -9.000128746032715
    3. 'rstrip' → logprob: -12.250128746032715
    4. ' split' → logprob: -14.375128746032715
    5. 'spl' → logprob: -16.62512969970703
    6. '(split' → logprob: -16.62512969970703
    7. '.split' → logprob: -19.25012969970703
    8. 'replace' → logprob: -19.50012969970703
    9. ')' → logprob: -19.62512969970703
    10. 's' → logprob: -19.87512969970703

Token 11: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47437334060668945
    2. '))' → logprob: -1.7243733406066895
    3. '())' → logprob: -2.5993733406066895
    4. '(' → logprob: -2.5993733406066895
    5. ')' → logprob: -3.2243733406066895
    6. '('' → logprob: -5.0993733406066895
    7. '()' → logprob: -5.8493733406066895
    8. '(','' → logprob: -7.7243733406066895
    9. '())))' → logprob: -7.7243733406066895
    10. ')))' → logprob: -7.9743733406066895

Token 12: 'if' (ID: 366)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.761170506477356
    2. 'for' → logprob: -0.886170506477356
    3. 'c' → logprob: -3.1361703872680664
    4. 'count' → logprob: -4.261170387268066
    5. 'sum' → logprob: -4.636170387268066
    6. 'S' → logprob: -4.636170387268066
    7. 'd' → logprob: -5.136170387268066
    8. 'result' → logprob: -5.136170387268066
    9. 'b' → logprob: -5.386170387268066
    10. 'M' → logprob: -5.636170387268066

Token 13: ' N' (ID: 478)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.09316674619913101
    2. 'A' → logprob: -2.4681668281555176
    3. ' N' → logprob: -5.968166828155518
    4. 'N' → logprob: -6.718166828155518
    5. ' ' → logprob: -7.843166828155518
    6. ' len' → logprob: -10.21816635131836
    7. ' ' → logprob: -11.59316635131836
    8. 'len' → logprob: -12.21816635131836
    9. ' not' → logprob: -12.34316635131836
    10. '(A' → logprob: -14.21816635131836

Token 14: '%' (ID: 4)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.178302600979805
    2. '>' → logprob: -1.9283026456832886
    3. ' >=' → logprob: -5.053302764892578
    4. ' ' → logprob: -5.178302764892578
    5. ' <' → logprob: -6.303302764892578
    6. ' <=' → logprob: -6.803302764892578
    7. ' ==' → logprob: -7.053302764892578
    8. '<' → logprob: -7.303302764892578
    9. '>=' → logprob: -7.678302764892578
    10. '[' → logprob: -8.678302764892578

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0030165724456310272
    2. ' ' → logprob: -5.878016471862793
    3. '3' → logprob: -8.753016471862793
    4. '4' → logprob: -10.628016471862793
    5. '10' → logprob: -11.503016471862793
    6. '5' → logprob: -11.878016471862793
    7. '7' → logprob: -12.253016471862793
    8. '1' → logprob: -13.378016471862793
    9. '100' → logprob: -13.753016471862793
    10. '```' → logprob: -13.878016471862793

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.45500442385673523
    2. '==' → logprob: -1.0800044536590576
    3. ' !=' → logprob: -3.9550044536590576
    4. '!=' → logprob: -5.3300042152404785
    5. ' ' → logprob: -6.4550042152404785
    6. '=' → logprob: -8.330004692077637
    7. ')' → logprob: -9.580004692077637
    8. '>' → logprob: -10.705004692077637
    9. ' =' → logprob: -10.830004692077637
    10. '0' → logprob: -12.080004692077637

Token 17: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001065559103153646
    2. ' ' → logprob: -7.126065731048584
    3. '1' → logprob: -8.251065254211426
    4. '2' → logprob: -15.876065254211426
    5. '  ' → logprob: -18.126066207885742
    6. ')' → logprob: -18.626066207885742
    7. '```' → logprob: -18.751066207885742
    8. '۰' → logprob: -19.813566207885742
    9. '   ' → logprob: -19.876066207885742
    10. '

' → logprob: -20.063566207885742

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001761272142175585
    2. ' :' → logprob: -8.750176429748535
    3. ':**' → logprob: -11.750176429748535
    4. '):' → logprob: -12.500176429748535
    5. ':
' → logprob: -12.875176429748535
    6. '>:' → logprob: -13.250176429748535
    7. '>' → logprob: -14.875176429748535
    8. ' and' → logprob: -15.250176429748535
    9. '':'' → logprob: -15.500176429748535
    10. ':return' → logprob: -15.875176429748535

Token 19: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2485918253660202
    2. ' ' → logprob: -2.748591899871826
    3. 'print' → logprob: -2.873591899871826
    4. ' A' → logprob: -3.248591899871826
    5. '   ' → logprob: -3.873591899871826
    6. '    ' → logprob: -3.873591899871826
    7. ' 
' → logprob: -5.248591899871826
    8. ' \' → logprob: -5.623591899871826
    9. '     
' → logprob: -5.873591899871826
    10. '    
' → logprob: -5.998591899871826

Token 20: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.17496265470981598
    2. 'print' → logprob: -2.6749627590179443
    3. ' A' → logprob: -3.1749627590179443
    4. ' for' → logprob: -3.2999627590179443
    5. 'for' → logprob: -5.549962520599365
    6. 'A' → logprob: -5.674962520599365
    7. ' ' → logprob: -6.424962520599365
    8. '   ' → logprob: -6.924962520599365
    9. ' p' → logprob: -7.549962520599365
    10. ' a' → logprob: -7.674962520599365

Token 21: ' sum' (ID: 4215)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.06403860449790955
    2. 'A' → logprob: -2.8140385150909424
    3. ' N' → logprob: -6.6890387535095215
    4. ' ' → logprob: -7.3140387535095215
    5. 'N' → logprob: -9.064038276672363
    6. '   ' → logprob: -11.689038276672363
    7. ' all' → logprob: -11.939038276672363
    8. '  ' → logprob: -12.314038276672363
    9. ' sum' → logprob: -12.689038276672363
    10. ' len' → logprob: -13.064038276672363

Token 22: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.006158438976854086
    2. '(' → logprob: -5.131158351898193
    3. 'A' → logprob: -9.131158828735352
    4. '(a' → logprob: -9.256158828735352
    5. '([' → logprob: -11.506158828735352
    6. '((' → logprob: -12.506158828735352
    7. '(i' → logprob: -12.506158828735352
    8. '(abs' → logprob: -13.131158828735352
    9. ' (' → logprob: -13.256158828735352
    10. ' A' → logprob: -13.381158828735352

Token 23: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2034023404121399
    2. ')>' → logprob: -2.828402280807495
    3. '%' → logprob: -3.203402280807495
    4. ' )' → logprob: -3.328402280807495
    5. ')%' → logprob: -4.328402519226074
    6. '[' → logprob: -4.828402519226074
    7. ' %' → logprob: -4.953402519226074
    8. '[:' → logprob: -5.453402519226074
    9. ' >' → logprob: -5.578402519226074
    10. ')>=' → logprob: -5.578402519226074

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.3358446166384965e-05
    2. '3' → logprob: -10.000053405761719
    3. ' ' → logprob: -12.500053405761719
    4. '10' → logprob: -13.375053405761719
    5. '==' → logprob: -13.500053405761719
    6. '1' → logprob: -14.500053405761719
    7. '4' → logprob: -15.375053405761719
    8. '```' → logprob: -15.500053405761719
    9. '!=' → logprob: -15.625053405761719
    10. 'N' → logprob: -16.00005340576172

Token 25: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020719151943922043
    2. '!=' → logprob: -4.020719051361084
    3. ' ==' → logprob: -6.395719051361084
    4. '=' → logprob: -7.895719051361084
    5. ' !=' → logprob: -8.645719528198242
    6. ')' → logprob: -9.020719528198242
    7. '1' → logprob: -9.020719528198242
    8. ')==' → logprob: -10.645719528198242
    9. '0' → logprob: -11.270719528198242
    10. '===' → logprob: -11.395719528198242

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.313321053981781
    2. '0' → logprob: -1.3133211135864258
    3. ' ' → logprob: -9.813321113586426
    4. '```' → logprob: -13.313321113586426
    5. 'N' → logprob: -14.250821113586426
    6. '   ' → logprob: -14.813321113586426
    7. '

' → logprob: -15.500821113586426
    8. '2' → logprob: -15.563321113586426
    9. '==' → logprob: -16.12582015991211
    10. '  ' → logprob: -16.18832015991211

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.52788148727268e-05
    2. ':
' → logprob: -10.750064849853516
    3. ' and' → logprob: -10.875064849853516
    4. ' :' → logprob: -11.125064849853516
    5. '):' → logprob: -12.125064849853516
    6. ':return' → logprob: -13.500064849853516
    7. 'and' → logprob: -14.000064849853516
    8. '   ' → logprob: -14.125064849853516
    9. ':**' → logprob: -14.500064849853516
    10. ')' → logprob: -15.125064849853516

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0358039066195488
    2. '   ' → logprob: -3.53580379486084
    3. ' print' → logprob: -6.16080379486084
    4. ' ' → logprob: -6.53580379486084
    5. '    ' → logprob: -6.91080379486084
    6. ':' → logprob: -7.91080379486084
    7. '\n' → logprob: -8.28580379486084
    8. '        
' → logprob: -9.16080379486084
    9. 'print' → logprob: -9.28580379486084
    10. ' 
' → logprob: -9.41080379486084

Token 29: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1509866714477539
    2. 'print' (adapté à ' print') → logprob: -2.400986671447754
    3. '   ' → logprob: -3.025986671447754
    4. '       ' → logprob: -7.400986671447754
    5. '           ' → logprob: -8.775986671447754
    6. ' ' → logprob: -9.525986671447754
    7. '    ' → logprob: -10.150986671447754
    8. ' pass' → logprob: -10.525986671447754
    9. '```' → logprob: -10.525986671447754
    10. ' A' → logprob: -11.150986671447754

Token 30: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14738500118255615
    2. '("' → logprob: -2.1473851203918457
    3. '('' → logprob: -4.272385120391846
    4. '(True' → logprob: -5.272385120391846
    5. '(A' → logprob: -7.522385120391846
    6. '("("' → logprob: -8.272384643554688
    7. '(False' → logprob: -8.647384643554688
    8. '()' → logprob: -9.897384643554688
    9. '(None' → logprob: -10.647384643554688
    10. '("")' → logprob: -10.647384643554688

Token 31: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.5796326994895935
    2. 'NO' → logprob: -1.8296327590942383
    3. '1' → logprob: -2.4546327590942383
    4. '-' → logprob: -2.9546327590942383
    5. 'Yes' → logprob: -3.0796327590942383
    6. 'YES' → logprob: -3.3296327590942383
    7. '2' → logprob: -4.579632759094238
    8. 'No' → logprob: -4.579632759094238
    9. 'first' → logprob: -4.829632759094238
    10. 'Second' → logprob: -4.829632759094238

Token 32: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01572509855031967
    2. ')' → logprob: -5.265725135803223
    3. 'Player' → logprob: -5.390725135803223
    4. ' Player' → logprob: -5.640725135803223
    5. ' ")' → logprob: -6.640725135803223
    6. ' player' → logprob: -7.890725135803223
    7. '")
' → logprob: -8.515725135803223
    8. ' )' → logprob: -8.890725135803223
    9. '\n' → logprob: -9.265725135803223
    10. '"' → logprob: -9.390725135803223

Token 33: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02727995254099369
    2. ' else' → logprob: -4.027279853820801
    3. '   ' → logprob: -5.027279853820801
    4. '<|end|>' → logprob: -6.777279853820801
    5. 'elif' → logprob: -7.152279853820801
    6. '	else' → logprob: -8.1522798538208
    7. '
' → logprob: -9.2772798538208
    8. '<|end|>' → logprob: -9.5272798538208
    9. '```' → logprob: -9.6522798538208
    10. ')' → logprob: -10.4022798538208

Token 34: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.029970085248351097
    2. ' else' → logprob: -3.529970169067383
    3. 'elif' → logprob: -9.154970169067383
    4. '
' → logprob: -10.654970169067383
    5. '   ' → logprob: -10.779970169067383
    6. '<|end|>' → logprob: -11.154970169067383
    7. ' ' → logprob: -11.279970169067383
    8. '	else' → logprob: -11.529970169067383
    9. ')' → logprob: -11.779970169067383
    10. '    
' → logprob: -12.029970169067383

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002221272327005863
    2. ':
' → logprob: -6.12722110748291
    3. '       ' → logprob: -10.37722110748291
    4. '   ' → logprob: -13.00222110748291
    5. '<|end|>' → logprob: -14.50222110748291
    6. 'print' → logprob: -15.12722110748291
    7. '```' → logprob: -15.25222110748291
    8. ':

' → logprob: -15.25222110748291
    9. ' :' → logprob: -15.37722110748291
    10. ':
' → logprob: -15.50222110748291

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00039647609810344875
    2. 'print' → logprob: -8.125396728515625
    3. '   ' → logprob: -10.250396728515625
    4. '```' → logprob: -10.250396728515625
    5. ' print' → logprob: -11.250396728515625
    6. '<|end|>' → logprob: -13.000396728515625
    7. '	   ' → logprob: -13.125396728515625
    8. '           ' → logprob: -13.250396728515625
    9. '     ' → logprob: -13.500396728515625
    10. '    ' → logprob: -13.625396728515625

Token 37: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.32151827216148376
    2. ' print' → logprob: -1.3215183019638062
    3. '       ' → logprob: -5.196518421173096
    4. '   ' → logprob: -5.946518421173096
    5. '	print' → logprob: -10.571517944335938
    6. '```' → logprob: -10.696517944335938
    7. ' ' → logprob: -11.446517944335938
    8. '           ' → logprob: -12.696517944335938
    9. '    ' → logprob: -12.946517944335938
    10. '  ' → logprob: -13.196517944335938

Token 38: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02335926704108715
    2. '(' → logprob: -3.7733592987060547
    3. '("("' → logprob: -9.523359298706055
    4. '("")' → logprob: -10.648359298706055
    5. '("(' → logprob: -12.023359298706055
    6. '('' → logprob: -12.273359298706055
    7. '()' → logprob: -12.523359298706055
    8. '("""' → logprob: -14.023359298706055
    9. '(None' → logprob: -14.648359298706055
    10. '(""' → logprob: -15.273359298706055

Token 39: 'Second' (ID: 17422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.34852278232574463
    2. 'Second' → logprob: -1.2235227823257446
    3. 'second' → logprob: -10.598523139953613
    4. ' Second' → logprob: -10.848523139953613
    5. 'Last' → logprob: -11.848523139953613
    6. ''' → logprob: -12.348523139953613
    7. '   ' → logprob: -12.723523139953613
    8. '"No' → logprob: -12.848523139953613
    9. '"D' → logprob: -13.598523139953613
    10. 'First' → logprob: -13.723523139953613

Token 40: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0187721848487854
    2. ')' → logprob: -4.018772125244141
    3. ')")' → logprob: -7.393772125244141
    4. '")
' → logprob: -12.39377212524414
    5. '}")' → logprob: -13.51877212524414
    6. ')
' → logprob: -14.89377212524414
    7. '"' → logprob: -15.26877212524414
    8. '```' → logprob: -15.76877212524414
    9. '')' → logprob: -16.26877212524414
    10. '()' → logprob: -16.39377212524414

Token 41: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011882089078426361
    2. 'elif' → logprob: -5.011882305145264
    3. ' else' → logprob: -6.136882305145264
    4. '<|end|>' → logprob: -6.636882305145264
    5. '```' → logprob: -7.011882305145264
    6. '
' → logprob: -7.761882305145264
    7. '\n' → logprob: -8.636881828308105
    8. '    
' → logprob: -10.261881828308105
    9. ')' → logprob: -10.886881828308105
    10. '_else' → logprob: -11.011881828308105

Token 42: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001184276770800352
    2. ':
' → logprob: -6.751184463500977
    3. '   ' → logprob: -11.251184463500977
    4. ' :' → logprob: -14.876184463500977
    5. ':

' → logprob: -15.626184463500977
    6. '<|end|>' → logprob: -15.626184463500977
    7. '```' → logprob: -16.001184463500977
    8. ':
' → logprob: -16.501184463500977
    9. '       ' → logprob: -17.376184463500977
    10. ':return' → logprob: -17.501184463500977

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004892880679108202
    2. ' if' → logprob: -8.125489234924316
    3. '```' → logprob: -9.250489234924316
    4. '       ' → logprob: -10.125489234924316
    5. 'if' → logprob: -10.500489234924316
    6. 'print' → logprob: -11.750489234924316
    7. '   ' → logprob: -12.000489234924316
    8. ' print' → logprob: -12.125489234924316
    9. '``' → logprob: -13.125489234924316
    10. '    
' → logprob: -13.250489234924316

Token 44: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5915576219558716
    2. 'if' (adapté à ' if') → logprob: -1.4665576219558716
    3. '   ' → logprob: -1.8415576219558716
    4. 'print' → logprob: -3.841557502746582
    5. ' print' → logprob: -4.591557502746582
    6. 'count' → logprob: -5.716557502746582
    7. ' for' → logprob: -5.716557502746582
    8. 'sum' → logprob: -5.716557502746582
    9. 'for' → logprob: -5.966557502746582
    10. ' cnt' → logprob: -6.091557502746582

Token 45: ' min' (ID: 1349)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.19980362057685852
    2. 'sum' → logprob: -1.9498035907745361
    3. ' all' → logprob: -4.199803829193115
    4. ' A' → logprob: -4.324803829193115
    5. ' any' → logprob: -5.199803829193115
    6. ' len' → logprob: -6.574803829193115
    7. 'A' → logprob: -6.949803829193115
    8. 'all' → logprob: -7.574803829193115
    9. ' N' → logprob: -7.824803829193115
    10. ' max' → logprob: -7.824803829193115

Token 46: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.2524021157296374e-05
    2. '(' → logprob: -10.625052452087402
    3. '(a' → logprob: -10.750052452087402
    4. '(min' → logprob: -12.250052452087402
    5. '((' → logprob: -14.750052452087402
    6. '(abs' → logprob: -15.125052452087402
    7. '([' → logprob: -15.375052452087402
    8. '(sum' → logprob: -15.500052452087402
    9. '(
' → logprob: -15.625052452087402
    10. '(max' → logprob: -15.875052452087402

Token 47: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.8955209255218506
    2. ')' → logprob: -1.2705209255218506
    3. '%' → logprob: -1.6455209255218506
    4. ' %' → logprob: -3.0205209255218506
    5. ' )' → logprob: -3.1455209255218506
    6. ')>' → logprob: -4.39552116394043
    7. ')==' → logprob: -5.02052116394043
    8. '()%' → logprob: -5.64552116394043
    9. ')<' → logprob: -7.14552116394043
    10. ' ' → logprob: -7.14552116394043

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011131768114864826
    2. ' ' → logprob: -4.511131763458252
    3. '==' → logprob: -10.76113224029541
    4. '1' → logprob: -10.94863224029541
    5. '%' → logprob: -11.19863224029541
    6. '=' → logprob: -12.63613224029541
    7. '```' → logprob: -12.63613224029541
    8. '/' → logprob: -13.19863224029541
    9. '3' → logprob: -13.26113224029541
    10. '{' → logprob: -13.57363224029541

Token 49: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00018113377154804766
    2. ' ==' → logprob: -9.250181198120117
    3. '1' → logprob: -9.875181198120117
    4. '```' → logprob: -11.875181198120117
    5. '==
' → logprob: -12.125181198120117
    6. '!=' → logprob: -12.125181198120117
    7. '0' → logprob: -12.250181198120117
    8. '=' → logprob: -12.375181198120117
    9. ')==' → logprob: -13.250181198120117
    10. ']==' → logprob: -13.625181198120117

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5238386988639832
    2. '0' → logprob: -0.8988386988639832
    3. ' ' → logprob: -7.273838520050049
    4. '```' → logprob: -12.523838996887207
    5. '2' → logprob: -12.648838996887207
    6. '   ' → logprob: -13.773838996887207
    7. '==' → logprob: -13.961338996887207
    8. '-' → logprob: -14.023838996887207
    9. '[' → logprob: -14.336338996887207
    10. '=' → logprob: -14.898838996887207

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03814442455768585
    2. ':
' → logprob: -3.28814435005188
    3. '       ' → logprob: -9.7881441116333
    4. '==' → logprob: -10.7881441116333
    5. '   ' → logprob: -11.5381441116333
    6. ' and' → logprob: -11.7881441116333
    7. '=' → logprob: -13.0381441116333
    8. 'and' → logprob: -13.7881441116333
    9. '):
' → logprob: -13.9131441116333
    10. '):' → logprob: -14.0381441116333

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010757743380963802
    2. '   ' → logprob: -4.635757923126221
    3. 'print' → logprob: -7.135757923126221
    4. '           ' → logprob: -9.385757446289062
    5. '
' → logprob: -10.385757446289062
    6. ':
' → logprob: -10.510757446289062
    7. ' print' → logprob: -10.760757446289062
    8. ':' → logprob: -11.010757446289062
    9. '     ' → logprob: -11.760757446289062
    10. ' ' → logprob: -12.260757446289062

Token 53: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6510970592498779
    2. 'print' (adapté à ' print') → logprob: -1.026097059249878
    3. ' print' → logprob: -2.276097059249878
    4. '   ' → logprob: -4.401097297668457
    5. '           ' → logprob: -5.901097297668457
    6. ' ' → logprob: -7.151097297668457
    7. '
' → logprob: -7.651097297668457
    8. '```' → logprob: -7.776097297668457
    9. '	print' → logprob: -7.901097297668457
    10. '``' → logprob: -9.526097297668457

Token 54: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008620485663414001
    2. '(' → logprob: -4.758620262145996
    3. '("("' → logprob: -12.508620262145996
    4. '('' → logprob: -13.508620262145996
    5. '("")' → logprob: -14.883620262145996
    6. '()' → logprob: -15.633620262145996
    7. '(""' → logprob: -16.383621215820312
    8. '("""' → logprob: -16.758621215820312
    9. '(
' → logprob: -17.008621215820312
    10. '("(' → logprob: -17.008621215820312

Token 55: 'First' (ID: 7127)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4510177671909332
    2. 'First' → logprob: -1.0760177373886108
    3. 'Second' → logprob: -3.8260178565979004
    4. 'Third' → logprob: -9.201017379760742
    5. 'first' → logprob: -10.326017379760742
    6. ''' → logprob: -10.451017379760742
    7. '("' → logprob: -10.576017379760742
    8. '""' → logprob: -11.576017379760742
    9. ' First' → logprob: -12.201017379760742
    10. 'F' → logprob: -12.201017379760742

Token 56: '")
' (ID: 1896)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6237460374832153
    2. '   ' → logprob: -0.9987460374832153
    3. ')' → logprob: -2.998745918273926
    4. '")
' → logprob: -3.373745918273926
    5. '")' → logprob: -4.498745918273926
    6. 'else' → logprob: -8.123745918273926
    7. '')
' → logprob: -9.748745918273926
    8. ')
' → logprob: -10.373745918273926
    9. '```' → logprob: -10.498745918273926
    10. ')")
' → logprob: -11.373745918273926

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006888470146805048
    2. 'else' → logprob: -5.006888389587402
    3. ' else' → logprob: -8.756888389587402
    4. '	else' → logprob: -11.631888389587402
    5. '       ' → logprob: -12.756888389587402
    6. '<|end|>' → logprob: -13.506888389587402
    7. '```' → logprob: -14.006888389587402
    8. 'elif' → logprob: -14.506888389587402
    9. ')' → logprob: -15.006888389587402
    10. ' ' → logprob: -15.256888389587402

Token 58: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20628301799297333
    2. '   ' → logprob: -1.7062829732894897
    3. ' else' → logprob: -5.331283092498779
    4. '	else' → logprob: -11.581282615661621
    5. ' ' → logprob: -12.456282615661621
    6. 'elif' → logprob: -12.706282615661621
    7. '       ' → logprob: -13.706282615661621
    8. ')' → logprob: -14.456282615661621
    9. '```' → logprob: -14.706282615661621
    10. '  ' → logprob: -15.081282615661621

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32849809527397156
    2. '       ' → logprob: -1.453498125076294
    3. ':
' → logprob: -3.078498125076294
    4. '   ' → logprob: -8.578497886657715
    5. '           ' → logprob: -11.953497886657715
    6. '      ' → logprob: -12.328497886657715
    7. ':
' → logprob: -12.578497886657715
    8. '     ' → logprob: -12.828497886657715
    9. '):
' → logprob: -12.953497886657715
    10. '```' → logprob: -13.578497886657715

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2471589798224159e-05
    2. 'print' → logprob: -11.625012397766113
    3. '   ' → logprob: -13.000012397766113
    4. '```' → logprob: -14.625012397766113
    5. '           ' → logprob: -14.875012397766113
    6. '     ' → logprob: -16.12501335144043
    7. '      ' → logprob: -16.37501335144043
    8. ' print' → logprob: -17.25001335144043
    9. '	   ' → logprob: -17.87501335144043
    10. '(' → logprob: -17.87501335144043

Token 61: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004601841792464256
    2. '       ' → logprob: -5.504601955413818
    3. ' print' → logprob: -8.25460147857666
    4. '   ' → logprob: -8.25460147857666
    5. '	print' → logprob: -13.87960147857666
    6. '```' → logprob: -14.00460147857666
    7. ' ' → logprob: -14.37960147857666
    8. '           ' → logprob: -15.25460147857666
    9. '     ' → logprob: -16.004602432250977
    10. '  ' → logprob: -16.004602432250977

Token 62: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.013108229264616966
    2. 'sum' → logprob: -4.888108253479004
    3. ' min' → logprob: -5.388108253479004
    4. ' all' → logprob: -8.138108253479004
    5. ' max' → logprob: -8.513108253479004
    6. ' ' → logprob: -9.013108253479004
    7. ' N' → logprob: -9.013108253479004
    8. ' A' → logprob: -9.763108253479004
    9. ' len' → logprob: -9.763108253479004
    10. ' ' → logprob: -11.138108253479004

Token 63: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.003178901970386505
    2. '(' → logprob: -5.75317907333374
    3. '(a' → logprob: -15.253178596496582
    4. ')' → logprob: -15.753178596496582
    5. ' (' → logprob: -15.753178596496582
    6. '((' → logprob: -15.878178596496582
    7. '()' → logprob: -16.7531795501709
    8. 'A' → logprob: -16.7531795501709
    9. '(S' → logprob: -16.8781795501709
    10. '(s' → logprob: -16.8781795501709

Token 64: ')%' (ID: 57656)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.33569589257240295
    2. '()%' → logprob: -1.3356958627700806
    3. ')%' → logprob: -3.83569598197937
    4. '()' → logprob: -8.08569622039795
    5. ' %' → logprob: -8.71069622039795
    6. ')' → logprob: -9.83569622039795
    7. '%)' → logprob: -10.46069622039795
    8. '```' → logprob: -11.58569622039795
    9. '   ' → logprob: -11.71069622039795
    10. ' )' → logprob: -12.46069622039795

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.0868278524139896e-05
    2. ' ' → logprob: -9.87506103515625
    3. '==' → logprob: -13.37506103515625
    4. '```' → logprob: -13.75006103515625
    5. '%' → logprob: -14.00006103515625
    6. '   ' → logprob: -14.06256103515625
    7. '1' → logprob: -14.43756103515625
    8. '>' → logprob: -14.75006103515625
    9. '4' → logprob: -14.87506103515625
    10. '.' → logprob: -15.25006103515625

Token 66: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00016921341011766344
    2. ' ==' → logprob: -9.250168800354004
    3. '==
' → logprob: -10.625168800354004
    4. '!=' → logprob: -10.750168800354004
    5. '=' → logprob: -11.625168800354004
    6. '()==' → logprob: -12.000168800354004
    7. '===' → logprob: -12.625168800354004
    8. ')==' → logprob: -12.750168800354004
    9. '```' → logprob: -13.500168800354004
    10. '==(' → logprob: -13.750168800354004

Token 67: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.043032873421907425
    2. '0' → logprob: -3.1680328845977783
    3. ' ' → logprob: -10.6680326461792
    4. '2' → logprob: -12.1680326461792
    5. '   ' → logprob: -13.5430326461792
    6. '```' → logprob: -14.8555326461792
    7. '' → logprob: -15.1680326461792
    8. '           ' → logprob: -15.7930326461792
    9. '-' → logprob: -16.105533599853516
    10. '	' → logprob: -16.105533599853516

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038944309926591814
    2. ':
' → logprob: -7.875389575958252
    3. '):' → logprob: -12.375389099121094
    4. '       ' → logprob: -12.750389099121094
    5. '           ' → logprob: -13.625389099121094
    6. ' :' → logprob: -14.625389099121094
    7. '   ' → logprob: -15.375389099121094
    8. ':

' → logprob: -16.750389099121094
    9. ')' → logprob: -16.875389099121094
    10. ':**' → logprob: -17.000389099121094

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00915372185409069
    2. '       ' → logprob: -4.884153842926025
    3. 'print' → logprob: -6.759153842926025
    4. ':' → logprob: -8.634153366088867
    5. ')' → logprob: -10.384153366088867
    6. '   ' → logprob: -10.509153366088867
    7. ' print' → logprob: -10.634153366088867
    8. '
' → logprob: -10.759153366088867
    9. '	       ' → logprob: -10.884153366088867
    10. '```' → logprob: -11.259153366088867

Token 70: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6011582016944885
    2. '           ' → logprob: -0.9761582016944885
    3. '               ' → logprob: -2.9761581420898438
    4. '       ' → logprob: -3.9761581420898438
    5. ' print' → logprob: -5.351158142089844
    6. '   ' → logprob: -7.851158142089844
    7. '```' → logprob: -9.226158142089844
    8. '          ' → logprob: -11.101158142089844
    9. '	print' → logprob: -11.101158142089844
    10. '         ' → logprob: -11.226158142089844

Token 71: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.018153805285692215
    2. '(' → logprob: -4.018153667449951
    3. '("("' → logprob: -12.89315414428711
    4. '('' → logprob: -13.89315414428711
    5. '("""' → logprob: -16.01815414428711
    6. '("")' → logprob: -16.01815414428711
    7. '("\"' → logprob: -16.51815414428711
    8. '"' → logprob: -16.89315414428711
    9. '(
' → logprob: -17.01815414428711
    10. '(""' → logprob: -17.14315414428711

Token 72: 'Second' (ID: 17422)
  Prédit: 'Second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Second' → logprob: -0.06301117688417435
    2. '"' → logprob: -2.8130111694335938
    3. 'First' → logprob: -6.938011169433594
    4. 'Third' → logprob: -10.063011169433594
    5. ' Second' → logprob: -11.438011169433594
    6. '("' → logprob: -11.813011169433594
    7. '")' → logprob: -12.938011169433594
    8. 'second' → logprob: -13.188011169433594
    9. ''' → logprob: -13.438011169433594
    10. '.Second' → logprob: -13.938011169433594

Token 73: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.49818480014801025
    2. ')' → logprob: -0.9981848001480103
    3. '       ' → logprob: -4.373184680938721
    4. ')
' → logprob: -5.123184680938721
    5. '")
' → logprob: -5.623184680938721
    6. ')")' → logprob: -7.123184680938721
    7. '   ' → logprob: -7.248184680938721
    8. ')")
' → logprob: -9.998185157775879
    9. '()' → logprob: -10.248185157775879
    10. '())' → logprob: -12.248185157775879

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04983184114098549
    2. 'else' → logprob: -3.1748318672180176
    3. '   ' → logprob: -5.174831867218018
    4. ' else' → logprob: -6.799831867218018
    5. '	else' → logprob: -11.54983139038086
    6. 'elif' → logprob: -12.17483139038086
    7. '```' → logprob: -12.29983139038086
    8. ')' → logprob: -12.42483139038086
    9. '<|end|>' → logprob: -12.79983139038086
    10. ' ' → logprob: -13.04983139038086

Token 75: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6117761135101318
    2. '       ' → logprob: -0.9867761135101318
    3. '   ' → logprob: -2.611776113510132
    4. ' else' → logprob: -4.486776351928711
    5. 'elif' → logprob: -10.236776351928711
    6. '	else' → logprob: -10.486776351928711
    7. ' ' → logprob: -10.611776351928711
    8. '           ' → logprob: -10.861776351928711
    9. ')' → logprob: -11.236776351928711
    10. '  ' → logprob: -11.361776351928711

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12821927666664124
    2. '           ' → logprob: -2.7532193660736084
    3. ':
' → logprob: -2.8782193660736084
    4. '       ' → logprob: -8.753219604492188
    5. '():
' → logprob: -9.378219604492188
    6. '               ' → logprob: -10.378219604492188
    7. '):
' → logprob: -10.628219604492188
    8. '   ' → logprob: -11.128219604492188
    9. '          ' → logprob: -11.253219604492188
    10. '):' → logprob: -11.253219604492188

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002045817207545042
    2. 'print' → logprob: -6.877045631408691
    3. '       ' → logprob: -7.627045631408691
    4. '
' → logprob: -8.502045631408691
    5. '               ' → logprob: -9.377045631408691
    6. '	       ' → logprob: -9.877045631408691
    7. '```' → logprob: -10.127045631408691
    8. '   ' → logprob: -10.252045631408691
    9. ' print' → logprob: -11.002045631408691
    10. '            
' → logprob: -11.252045631408691

Token 78: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.015328487381339073
    2. ' print' → logprob: -4.390328407287598
    3. '           ' → logprob: -6.140328407287598
    4. '       ' → logprob: -7.890328407287598
    5. '               ' → logprob: -8.390328407287598
    6. '   ' → logprob: -9.890328407287598
    7. '	print' → logprob: -12.515328407287598
    8. ' ' → logprob: -13.140328407287598
    9. '  ' → logprob: -14.390328407287598
    10. '.print' → logprob: -14.765328407287598

Token 79: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.02981170266866684
    2. '(' → logprob: -3.5298116207122803
    3. '("("' → logprob: -9.77981185913086
    4. '('' → logprob: -13.40481185913086
    5. '("")' → logprob: -13.77981185913086
    6. '(""' → logprob: -14.15481185913086
    7. '("""' → logprob: -14.15481185913086
    8. '("(' → logprob: -15.52981185913086
    9. '(
' → logprob: -15.90481185913086
    10. '(("' → logprob: -16.27981185913086

Token 80: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.160579115152359
    2. '"' → logprob: -1.9105790853500366
    3. 'Second' → logprob: -8.285578727722168
    4. 'Third' → logprob: -10.160578727722168
    5. 'Fi' → logprob: -10.535578727722168
    6. '")' → logprob: -11.660578727722168
    7. '("' → logprob: -12.035578727722168
    8. 'F' → logprob: -12.285578727722168
    9. ''' → logprob: -12.785578727722168
    10. 'first' → logprob: -12.910578727722168

Token 81: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06205092743039131
    2. '")' → logprob: -2.8120508193969727
    3. ')")' → logprob: -9.812050819396973
    4. ')
' → logprob: -10.812050819396973
    5. '')' → logprob: -12.187050819396973
    6. '`)' → logprob: -13.562050819396973
    7. '")
' → logprob: -14.187050819396973
    8. '```' → logprob: -14.812050819396973
    9. '))' → logprob: -15.312050819396973
    10. '"' → logprob: -15.937050819396973


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 79
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 43.04%
Précision adaptée (1ère position): 50.63%
Précision (top 10): 87.34%
================================================================================
