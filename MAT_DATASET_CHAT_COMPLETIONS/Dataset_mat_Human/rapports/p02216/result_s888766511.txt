================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = list(map(int, input().split()))
t = min(a)
s = sum(a)

if s%2 or (not n%2 and t%2):
    print('First')
else:
    print('Second')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13287097215652466
    2. ')' → logprob: -2.13287091255188
    3. '()' → logprob: -5.382871150970459
    4. '())' → logprob: -7.382871150970459
    5. '(
' → logprob: -8.1328706741333
    6. '```' → logprob: -9.8828706741333
    7. '(

' → logprob: -10.2578706741333
    8. '('' → logprob: -10.3828706741333
    9. ''' → logprob: -10.6328706741333
    10. '(n' → logprob: -10.7578706741333

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034722555428743362
    2. '[a' → logprob: -6.503472328186035
    3. 'a' → logprob: -7.628472328186035
    4. '[i' → logprob: -7.878472328186035
    5. '+' → logprob: -8.253472328186035
    6. '[n' → logprob: -8.378472328186035
    7. '[:]' → logprob: -9.378472328186035
    8. '.' → logprob: -9.503472328186035
    9. '\[' → logprob: -9.503472328186035
    10. '=' → logprob: -9.628472328186035

Token 7: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7187201380729675
    2. ' []' → logprob: -0.8437201380729675
    3. 'list' → logprob: -3.7187201976776123
    4. ' [' → logprob: -3.7187201976776123
    5. '[' → logprob: -4.593719959259033
    6. '[int' → logprob: -4.718719959259033
    7. ' list' → logprob: -4.843719959259033
    8. '[input' → logprob: -6.218719959259033
    9. 'a' → logprob: -6.843719959259033
    10. 'n' → logprob: -6.843719959259033

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003077886998653412
    2. '[' → logprob: -6.253077983856201
    3. '(range' → logprob: -8.003077507019043
    4. '```' → logprob: -8.003077507019043
    5. '[(' → logprob: -8.753077507019043
    6. ')' → logprob: -9.128077507019043
    7. '(a' → logprob: -10.128077507019043
    8. ' (' → logprob: -10.378077507019043
    9. ''s' → logprob: -10.628077507019043
    10. '`' → logprob: -10.753077507019043

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.020255954936146736
    2. '(' → logprob: -4.145256042480469
    3. '(str' → logprob: -6.770256042480469
    4. '(input' → logprob: -7.020256042480469
    5. '(lambda' → logprob: -7.145256042480469
    6. '<int' → logprob: -7.770256042480469
    7. ')' → logprob: -8.520256042480469
    8. '[int' → logprob: -8.520256042480469
    9. 'int' → logprob: -8.645256042480469
    10. '```' → logprob: -9.020256042480469

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004638622514903545
    2. '(' → logprob: -5.879638671875
    3. '))' → logprob: -7.254638671875
    4. ',input' → logprob: -7.379638671875
    5. 'input' → logprob: -8.629638671875
    6. ')' → logprob: -8.754638671875
    7. '=input' → logprob: -9.629638671875
    8. '[input' → logprob: -11.379638671875
    9. '(user' → logprob: -11.754638671875
    10. ')))' → logprob: -12.004638671875

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006735026836395264
    2. ' input' → logprob: -5.006734848022461
    3. '(input' → logprob: -10.881734848022461
    4. ',input' → logprob: -15.131734848022461
    5. ')' → logprob: -15.506734848022461
    6. '=input' → logprob: -15.631734848022461
    7. '	input' → logprob: -16.25673484802246
    8. '<input' → logprob: -17.25673484802246
    9. '_input' → logprob: -18.00673484802246
    10. ' ' → logprob: -18.13173484802246

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.472834974527359
    2. '())' → logprob: -1.4728349447250366
    3. '()' → logprob: -1.9728349447250366
    4. '().' → logprob: -5.097835063934326
    5. '(' → logprob: -7.347835063934326
    6. '()));' → logprob: -7.472835063934326
    7. ')' → logprob: -7.972835063934326
    8. '))' → logprob: -8.222834587097168
    9. '())))' → logprob: -8.597834587097168
    10. '()>' → logprob: -8.972834587097168

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000573167169932276
    2. 'strip' → logprob: -7.50057315826416
    3. 'rstrip' → logprob: -10.87557315826416
    4. ' split' → logprob: -13.87557315826416
    5. '(split' → logprob: -15.75057315826416
    6. 'spl' → logprob: -16.500574111938477
    7. ')' → logprob: -18.375574111938477
    8. 's' → logprob: -18.500574111938477
    9. 'sp' → logprob: -19.250574111938477
    10. 'replace' → logprob: -19.875574111938477

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25695663690567017
    2. ')' → logprob: -2.1319565773010254
    3. '()))' → logprob: -2.3819565773010254
    4. '())' → logprob: -4.506956577301025
    5. '(' → logprob: -5.756956577301025
    6. '()' → logprob: -7.006956577301025
    7. ')))' → logprob: -8.256957054138184
    8. ''))' → logprob: -9.006957054138184
    9. '('' → logprob: -9.756957054138184
    10. '())))' → logprob: -11.256957054138184

Token 15: 't' (ID: 83)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6970422863960266
    2. 's' → logprob: -0.9470422863960266
    3. 'c' → logprob: -3.322042226791382
    4. 'for' → logprob: -3.822042226791382
    5. 'sum' → logprob: -4.322042465209961
    6. 'count' → logprob: -4.697042465209961
    7. 'm' → logprob: -4.822042465209961
    8. 'b' → logprob: -4.822042465209961
    9. 'result' → logprob: -5.072042465209961
    10. 'd' → logprob: -6.572042465209961

Token 16: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.072277307510376
    2. 'o' → logprob: -1.322277307510376
    3. '=' → logprob: -2.197277307510376
    4. 'r' → logprob: -2.322277307510376
    5. ' =' → logprob: -2.697277307510376
    6. '[' → logprob: -3.447277307510376
    7. '.o' → logprob: -4.322277069091797
    8. '[i' → logprob: -4.697277069091797
    9. 'otal' → logprob: -4.822277069091797
    10. '.append' → logprob: -5.322277069091797

Token 17: ' min' (ID: 1349)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9379811882972717
    2. '0' → logprob: -1.062981128692627
    3. ' [' → logprob: -2.437981128692627
    4. ' ' → logprob: -3.187981128692627
    5. '[' → logprob: -3.312981128692627
    6. ' a' → logprob: -3.937981128692627
    7. ' []' → logprob: -4.062981128692627
    8. 'sum' → logprob: -4.187981128692627
    9. '[]' → logprob: -4.437981128692627
    10. 'max' → logprob: -4.437981128692627

Token 18: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34975966811180115
    2. '(a' → logprob: -1.2247596979141235
    3. '(t' → logprob: -6.849759578704834
    4. 'a' → logprob: -9.474760055541992
    5. '(n' → logprob: -9.474760055541992
    6. '(len' → logprob: -10.849760055541992
    7. '((' → logprob: -11.099760055541992
    8. '(
' → logprob: -11.724760055541992
    9. '(max' → logprob: -12.099760055541992
    10. '(s' → logprob: -12.599760055541992

Token 19: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04319478198885918
    2. '))' → logprob: -3.1681947708129883
    3. 'a' → logprob: -9.543194770812988
    4. '[' → logprob: -9.668194770812988
    5. '[a' → logprob: -11.418194770812988
    6. ')))' → logprob: -11.543194770812988
    7. '(' → logprob: -11.793194770812988
    8. '(a' → logprob: -11.918194770812988
    9. ')a' → logprob: -12.043194770812988
    10. ' )' → logprob: -12.168194770812988

Token 20: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8888908624649048
    2. ' 
' → logprob: -1.7638908624649048
    3. ')' → logprob: -2.1388907432556152
    4. '(' → logprob: -2.2638907432556152
    5. '
' → logprob: -3.2638907432556152
    6. '\' → logprob: -3.3888907432556152
    7. ' for' → logprob: -4.263890743255615
    8. 'a' → logprob: -4.263890743255615
    9. '(
' → logprob: -4.638890743255615
    10. '  
' → logprob: -4.638890743255615

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5977490544319153
    2. 'um' → logprob: -1.0977489948272705
    3. ' =' → logprob: -2.2227489948272705
    4. 'u' → logprob: -5.22274923324585
    5. '_' → logprob: -7.34774923324585
    6. '=u' → logprob: -7.47274923324585
    7. '=sum' → logprob: -7.97274923324585
    8. '+=' → logprob: -8.597748756408691
    9. ' +=' → logprob: -8.597748756408691
    10. ' ' → logprob: -8.847748756408691

Token 22: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4669826030731201
    2. ' sum' → logprob: -1.0919826030731201
    3. '0' → logprob: -3.96698260307312
    4. 'a' → logprob: -4.966982841491699
    5. 't' → logprob: -5.716982841491699
    6. ' t' → logprob: -6.091982841491699
    7. ' a' → logprob: -6.216982841491699
    8. ' min' → logprob: -6.591982841491699
    9. 'min' → logprob: -6.716982841491699
    10. ' ' → logprob: -7.091982841491699

Token 23: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006746042985469103
    2. '(' → logprob: -5.0067458152771
    3. '(s' → logprob: -10.881746292114258
    4. '(min' → logprob: -13.006746292114258
    5. '(t' → logprob: -13.256746292114258
    6. '(max' → logprob: -13.381746292114258
    7. '((' → logprob: -13.506746292114258
    8. 'a' → logprob: -13.756746292114258
    9. '(ai' → logprob: -14.381746292114258
    10. '([' → logprob: -14.631746292114258

Token 24: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002193908003391698
    2. '))' → logprob: -9.250219345092773
    3. '-' → logprob: -9.875219345092773
    4. ' )' → logprob: -10.500219345092773
    5. ' -' → logprob: -11.625219345092773
    6. ')t' → logprob: -11.625219345092773
    7. ')-' → logprob: -12.125219345092773
    8. '`)' → logprob: -12.625219345092773
    9. ')a' → logprob: -12.750219345092773
    10. '-)' → logprob: -12.750219345092773

Token 25: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.170066237449646
    2. 'print' → logprob: -2.0450663566589355
    3. ' if' → logprob: -2.2950663566589355
    4. ' ' → logprob: -2.6700663566589355
    5. ')' → logprob: -2.7950663566589355
    6. '(' → logprob: -3.0450663566589355
    7. 'n' → logprob: -3.2950663566589355
    8. '#' → logprob: -3.2950663566589355
    9. '\n' → logprob: -3.4200663566589355
    10. ' +' → logprob: -3.7950663566589355

Token 26: ' s' (ID: 265)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.1771298348903656
    2. ' s' → logprob: -1.927129864692688
    3. ' ' → logprob: -4.302129745483398
    4. ' n' → logprob: -6.427129745483398
    5. 't' → logprob: -7.052129745483398
    6. 's' → logprob: -7.552129745483398
    7. ' a' → logprob: -8.677129745483398
    8. 'n' → logprob: -11.052129745483398
    9. ' ' → logprob: -11.177129745483398
    10. '  ' → logprob: -12.427129745483398

Token 27: '%' (ID: 4)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5084503293037415
    2. ' ==' → logprob: -1.6334502696990967
    3. '>' → logprob: -2.7584502696990967
    4. ' !=' → logprob: -2.7584502696990967
    5. ' <' → logprob: -3.7584502696990967
    6. ' %' → logprob: -4.258450508117676
    7. '==' → logprob: -4.258450508117676
    8. ' >=' → logprob: -5.133450508117676
    9. '%' → logprob: -5.383450508117676
    10. ' <=' → logprob: -5.508450508117676

Token 28: '2' (ID: 17)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08050144463777542
    2. 'n' → logprob: -3.3305015563964844
    3. '2' → logprob: -3.5805015563964844
    4. ' t' → logprob: -5.205501556396484
    5. '3' → logprob: -5.580501556396484
    6. 'len' → logprob: -6.080501556396484
    7. ' n' → logprob: -7.205501556396484
    8. ' ' → logprob: -7.330501556396484
    9. '4' → logprob: -7.830501556396484
    10. '5' → logprob: -9.330501556396484

Token 29: ' or' (ID: 503)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20466847717761993
    2. '==' → logprob: -2.0796685218811035
    3. ' !=' → logprob: -2.9546685218811035
    4. '!=' → logprob: -5.0796685218811035
    5. ':' → logprob: -6.9546685218811035
    6. '=' → logprob: -8.204668045043945
    7. ' :' → logprob: -8.204668045043945
    8. ' =' → logprob: -8.579668045043945
    9. ' ' → logprob: -9.954668045043945
    10. '0' → logprob: -11.079668045043945

Token 30: ' (' (ID: 350)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.018934909254312515
    2. 't' → logprob: -4.143934726715088
    3. ' ' → logprob: -6.768934726715088
    4. ' n' → logprob: -7.768934726715088
    5. ' min' → logprob: -8.143935203552246
    6. ' s' → logprob: -8.268935203552246
    7. ' a' → logprob: -8.268935203552246
    8. ' all' → logprob: -8.893935203552246
    9. ' not' → logprob: -9.518935203552246
    10. ' any' → logprob: -9.643935203552246

Token 31: 'not' (ID: 2878)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3971256613731384
    2. ' t' → logprob: -1.1471257209777832
    3. 'a' → logprob: -6.147125720977783
    4. 's' → logprob: -6.647125720977783
    5. ' s' → logprob: -6.772125720977783
    6. ' n' → logprob: -6.772125720977783
    7. 'n' → logprob: -6.897125720977783
    8. ' a' → logprob: -6.897125720977783
    9. ' (' → logprob: -7.522125720977783
    10. ' ' → logprob: -7.522125720977783

Token 32: ' n' (ID: 297)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0963597521185875
    2. 't' → logprob: -3.0963597297668457
    3. ' all' → logprob: -3.9713597297668457
    4. ' s' → logprob: -4.721359729766846
    5. ' (' → logprob: -4.846359729766846
    6. ' any' → logprob: -5.096359729766846
    7. '(t' → logprob: -6.221359729766846
    8. ' a' → logprob: -6.846359729766846
    9. 's' → logprob: -7.846359729766846
    10. ' n' → logprob: -8.346360206604004

Token 33: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.19609743356704712
    2. ')' → logprob: -1.8210973739624023
    3. ' %' → logprob: -5.071097373962402
    4. ' )' → logprob: -5.571097373962402
    5. '==' → logprob: -5.946097373962402
    6. ' or' → logprob: -6.571097373962402
    7. '%)' → logprob: -6.696097373962402
    8. '>' → logprob: -7.946097373962402
    9. ' %)' → logprob: -9.196097373962402
    10. ' ==' → logprob: -9.196097373962402

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023166877508629113
    2. ' ' → logprob: -8.375231742858887
    3. '  ' → logprob: -14.625231742858887
    4. '4' → logprob: -14.750231742858887
    5. '   ' → logprob: -16.50023078918457
    6. ')' → logprob: -16.87523078918457
    7. '3' → logprob: -17.62523078918457
    8. '```' → logprob: -17.62523078918457
    9. 't' → logprob: -18.12523078918457
    10. '

' → logprob: -18.12523078918457

Token 35: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2930391728878021
    2. ')' → logprob: -1.6680392026901245
    3. 'and' → logprob: -2.918039083480835
    4. '):' → logprob: -5.168039321899414
    5. ' or' → logprob: -5.293039321899414
    6. ' )' → logprob: -7.793039321899414
    7. 'or' → logprob: -9.043039321899414
    8. ' ):' → logprob: -10.418039321899414
    9. ' ' → logprob: -10.543039321899414
    10. '):

' → logprob: -11.043039321899414

Token 36: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.06572871655225754
    2. ' all' → logprob: -3.9407286643981934
    3. 't' → logprob: -4.315728664398193
    4. ' ' → logprob: -4.690728664398193
    5. ' a' → logprob: -5.190728664398193
    6. ' (' → logprob: -5.440728664398193
    7. ' s' → logprob: -5.690728664398193
    8. ' any' → logprob: -5.815728664398193
    9. ' not' → logprob: -6.190728664398193
    10. ' min' → logprob: -6.815728664398193

Token 37: '%' (ID: 4)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.0455507040023804
    2. '==' → logprob: -1.6705507040023804
    3. ' >' → logprob: -1.7955507040023804
    4. '<' → logprob: -2.04555082321167
    5. ' ==' → logprob: -2.67055082321167
    6. ' <' → logprob: -3.29555082321167
    7. '*' → logprob: -3.92055082321167
    8. '!=' → logprob: -4.42055082321167
    9. ' !=' → logprob: -4.79555082321167
    10. '%' → logprob: -4.79555082321167

Token 38: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -11.125041961669922
    3. '1' → logprob: -11.875041961669922
    4. '==' → logprob: -12.000041961669922
    5. '=' → logprob: -12.375041961669922
    6. ')' → logprob: -12.875041961669922
    7. '!=' → logprob: -13.125041961669922
    8. '3' → logprob: -13.500041961669922
    9. 't' → logprob: -14.250041961669922
    10. '%' → logprob: -15.000041961669922

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021853535436093807
    2. ')' → logprob: -6.252185344696045
    3. ' ):' → logprob: -8.627185821533203
    4. '==' → logprob: -10.627185821533203
    5. ':' → logprob: -11.002185821533203
    6. '):
' → logprob: -11.377185821533203
    7. ' and' → logprob: -12.002185821533203
    8. 'and' → logprob: -12.377185821533203
    9. ')==' → logprob: -12.502185821533203
    10. '=' → logprob: -12.627185821533203

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5757671594619751
    2. ' print' → logprob: -0.9507671594619751
    3. 'print' → logprob: -3.8257670402526855
    4. '\n' → logprob: -4.8257670402526855
    5. '    ' → logprob: -5.2007670402526855
    6. ' 
' → logprob: -5.5757670402526855
    7. ' ' → logprob: -5.9507670402526855
    8. '	print' → logprob: -6.0757670402526855
    9. '    
' → logprob: -6.2007670402526855
    10. '
' → logprob: -6.4507670402526855

Token 41: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.007725633680820465
    2. 'print' (adapté à ' print') → logprob: -4.882725715637207
    3. '   ' → logprob: -9.882725715637207
    4. ' \' → logprob: -10.507725715637207
    5. '\n' → logprob: -11.132725715637207
    6. ' 
' → logprob: -11.882725715637207
    7. '    ' → logprob: -12.382725715637207
    8. ' prin' → logprob: -12.382725715637207
    9. '\' → logprob: -12.632725715637207
    10. 'pr' → logprob: -13.007725715637207

Token 42: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4063788056373596
    2. '(' → logprob: -1.1563787460327148
    3. '('' → logprob: -4.656378746032715
    4. '(-' → logprob: -4.656378746032715
    5. '()' → logprob: -9.156378746032715
    6. '("")' → logprob: -10.406378746032715
    7. '(
' → logprob: -10.781378746032715
    8. '(":' → logprob: -10.781378746032715
    9. '((' → logprob: -10.906378746032715
    10. '("?' → logprob: -11.031378746032715

Token 43: 'First' (ID: 7127)
  Prédit: 'First'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'First' → logprob: -0.9493693113327026
    2. 'NO' → logprob: -1.0743693113327026
    3. '-' → logprob: -2.324369430541992
    4. 'No' → logprob: -2.324369430541992
    5. 'Second' → logprob: -3.449369430541992
    6. 'D' → logprob: -5.199369430541992
    7. 'Da' → logprob: -5.449369430541992
    8. 'Alice' → logprob: -5.449369430541992
    9. 'no' → logprob: -5.824369430541992
    10. '1' → logprob: -6.199369430541992

Token 44: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.03433716669678688
    2. ')' → logprob: -3.534337282180786
    3. ' Player' → logprob: -6.034337043762207
    4. 'Player' → logprob: -7.159337043762207
    5. '')
' → logprob: -7.784337043762207
    6. '")' → logprob: -8.159337043762207
    7. ''' → logprob: -8.409337043762207
    8. ' ')' → logprob: -8.909337043762207
    9. ' player' → logprob: -9.534337043762207
    10. ' )' → logprob: -9.659337043762207

Token 45: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.000511091377120465
    2. ' else' → logprob: -7.625511169433594
    3. 'elif' → logprob: -11.625511169433594
    4. '<|end|>' → logprob: -11.625511169433594
    5. 'e' → logprob: -13.625511169433594
    6. '```' → logprob: -13.750511169433594
    7. '
' → logprob: -14.875511169433594
    8. ')' → logprob: -15.000511169433594
    9. '_else' → logprob: -15.500511169433594
    10. '    
' → logprob: -15.500511169433594

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014668923104181886
    2. ':
' → logprob: -6.876466751098633
    3. '   ' → logprob: -7.876466751098633
    4. '<|end|>' → logprob: -10.876466751098633
    5. '():' → logprob: -11.626466751098633
    6. ' :' → logprob: -12.376466751098633
    7. '```' → logprob: -12.376466751098633
    8. '):' → logprob: -12.751466751098633
    9. '():
' → logprob: -13.126466751098633
    10. '       ' → logprob: -13.126466751098633

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038469864521175623
    2. 'print' → logprob: -6.003847122192383
    3. ''' → logprob: -7.878847122192383
    4. ' print' → logprob: -8.128847122192383
    5. '	print' → logprob: -8.378847122192383
    6. '    ' → logprob: -8.628847122192383
    7. ' ' → logprob: -9.503847122192383
    8. '       ' → logprob: -10.128847122192383
    9. '```' → logprob: -10.128847122192383
    10. '    
' → logprob: -10.628847122192383

Token 48: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007713816128671169
    2. ' print' → logprob: -5.257713794708252
    3. '   ' → logprob: -6.007713794708252
    4. '	print' → logprob: -11.25771427154541
    5. '    ' → logprob: -13.75771427154541
    6. 'Print' → logprob: -14.13271427154541
    7. '.print' → logprob: -14.25771427154541
    8. '  ' → logprob: -14.75771427154541
    9. ' ' → logprob: -15.13271427154541
    10. 'printf' → logprob: -15.25771427154541

Token 49: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03804631531238556
    2. '(' → logprob: -3.288046360015869
    3. '("' → logprob: -13.413045883178711
    4. ''' → logprob: -14.163045883178711
    5. '(('' → logprob: -14.163045883178711
    6. '()' → logprob: -14.663045883178711
    7. '('(' → logprob: -14.788045883178711
    8. ' ('' → logprob: -14.913045883178711
    9. '(
' → logprob: -15.163045883178711
    10. ' (' → logprob: -15.788045883178711

Token 50: 'Second' (ID: 17422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4740985631942749
    2. 'Second' → logprob: -0.9740985631942749
    3. 'second' → logprob: -12.099098205566406
    4. '"' → logprob: -12.599098205566406
    5. '('' → logprob: -12.724098205566406
    6. ' Second' → logprob: -12.849098205566406
    7. '`' → logprob: -13.099098205566406
    8. 'First' → logprob: -13.724098205566406
    9. 'Last' → logprob: -14.099098205566406
    10. ''S' → logprob: -14.599098205566406

Token 51: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.01815064437687397
    2. ')' → logprob: -4.018150806427002
    3. ''' → logprob: -15.393150329589844
    4. '')
' → logprob: -15.393150329589844
    5. '")' → logprob: -15.518150329589844
    6. '}')' → logprob: -16.768150329589844
    7. '('' → logprob: -17.018150329589844
    8. ')'' → logprob: -17.268150329589844
    9. '()' → logprob: -17.518150329589844
    10. '`)' → logprob: -17.768150329589844


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 34
Précision stricte (1ère position): 30.61%
Précision adaptée (1ère position): 32.65%
Précision (top 10): 69.39%
================================================================================
