================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
T = input()
P = input()

if len(P) > len(T):
    pass
else:
    p = len(P)
    ans = []
    for i in range(len(T)-len(P)+1):
        tmp = ""
        for j in range(i,i+p):
            tmp += T[j]
        if tmp == P:
            ans.append(i)
    
    for i in ans:
        print(i)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'T' (ID: 51)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020776940509676933
    2. '('' → logprob: -7.127077579498291
    3. ''' → logprob: -7.502077579498291
    4. '"' → logprob: -8.12707805633545
    5. '.' → logprob: -8.62707805633545
    6. '(
' → logprob: -9.62707805633545
    7. '()' → logprob: -10.25207805633545
    8. '[' → logprob: -10.37707805633545
    9. '("("' → logprob: -10.37707805633545
    10. ' (' → logprob: -11.62707805633545

Token 4: 'P' (ID: 47)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011863001622259617
    2. '+' → logprob: -5.3868632316589355
    3. '=' → logprob: -5.7618632316589355
    4. '.strip' → logprob: -6.8868632316589355
    5. '[' → logprob: -7.1368632316589355
    6. '()' → logprob: -7.6368632316589355
    7. '*' → logprob: -8.011862754821777
    8. '(' → logprob: -8.136862754821777
    9. '.split' → logprob: -8.511862754821777
    10. ')' → logprob: -8.761862754821777

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16994033753871918
    2. '=' → logprob: -2.169940233230591
    3. 'r' → logprob: -3.544940233230591
    4. '.' → logprob: -5.66994047164917
    5. '=input' → logprob: -6.16994047164917
    6. ')' → logprob: -6.54494047164917
    7. 'rocess' → logprob: -6.54494047164917
    8. '(' → logprob: -6.79494047164917
    9. '()' → logprob: -7.79494047164917
    10. ':' → logprob: -8.044939994812012

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.28522953391075134
    2. ' input' → logprob: -1.4102295637130737
    3. ' T' → logprob: -6.035229682922363
    4. 'T' → logprob: -7.035229682922363
    5. 'int' → logprob: -8.035229682922363
    6. '"' → logprob: -8.785229682922363
    7. ' ' → logprob: -10.035229682922363
    8. ''' → logprob: -10.035229682922363
    9. '""' → logprob: -10.160229682922363
    10. ' int' → logprob: -10.285229682922363

Token 7: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16050204634666443
    2. '(' → logprob: -1.9105020761489868
    3. ')' → logprob: -9.285502433776855
    4. '```' → logprob: -10.035502433776855
    5. '()`' → logprob: -10.535502433776855
    6. '`()' → logprob: -10.535502433776855
    7. ' ()' → logprob: -11.285502433776855
    8. '.' → logprob: -11.410502433776855
    9. '(
' → logprob: -11.535502433776855
    10. '(

' → logprob: -11.910502433776855

Token 8: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22841186821460724
    2. 'if' → logprob: -1.7284119129180908
    3. 'i' → logprob: -4.603411674499512
    4. 'count' → logprob: -5.228411674499512
    5. 'while' → logprob: -5.603411674499512
    6. 'len' → logprob: -5.728411674499512
    7. 'result' → logprob: -6.728411674499512
    8. 'found' → logprob: -6.978411674499512
    9. 'print' → logprob: -8.103411674499512
    10. 'n' → logprob: -8.103411674499512

Token 9: ' len' (ID: 4631)
  Prédit: ' T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.3819561302661896
    2. ' ' → logprob: -1.2569561004638672
    3. ' P' → logprob: -4.381956100463867
    4. 'T' → logprob: -5.256956100463867
    5. ' '' → logprob: -5.256956100463867
    6. ' len' → logprob: -5.506956100463867
    7. ''' → logprob: -5.756956100463867
    8. ' ' → logprob: -7.131956100463867
    9. '  ' → logprob: -7.381956100463867
    10. 'P' → logprob: -7.506956100463867

Token 10: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4119371175765991
    2. '(T' → logprob: -1.6619371175765991
    3. '(P' → logprob: -1.9119371175765991
    4. ' (' → logprob: -10.03693675994873
    5. '('' → logprob: -12.16193675994873
    6. '(S' → logprob: -12.41193675994873
    7. '("' → logprob: -12.53693675994873
    8. '(p' → logprob: -13.41193675994873
    9. '(len' → logprob: -13.41193675994873
    10. 'T' → logprob: -13.41193675994873

Token 11: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060170795768499374
    2. ' )' → logprob: -5.131017208099365
    3. ')>' → logprob: -10.131016731262207
    4. ')<=' → logprob: -11.131016731262207
    5. '>' → logprob: -11.506016731262207
    6. ' >' → logprob: -12.006016731262207
    7. ' <=' → logprob: -12.131016731262207
    8. ' ' → logprob: -12.381016731262207
    9. ')>=' → logprob: -13.131016731262207
    10. ')==' → logprob: -13.256016731262207

Token 12: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2848678231239319
    2. ' <=' → logprob: -2.284867763519287
    3. ' <' → logprob: -2.409867763519287
    4. ' ==' → logprob: -3.659867763519287
    5. '>' → logprob: -4.034867763519287
    6. ' ' → logprob: -5.409867763519287
    7. ' >=' → logprob: -6.034867763519287
    8. '<' → logprob: -6.034867763519287
    9. ')' → logprob: -6.284867763519287
    10. '<=' → logprob: -7.409867763519287

Token 13: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.39005985856056213
    2. ' len' → logprob: -1.1400598287582397
    3. '0' → logprob: -5.890059947967529
    4. '=len' → logprob: -8.140059471130371
    5. ' ' → logprob: -9.140059471130371
    6. '	len' → logprob: -11.890059471130371
    7. '(len' → logprob: -12.515059471130371
    8. '1' → logprob: -12.890059471130371
    9. '=' → logprob: -13.390059471130371
    10. '<len' → logprob: -13.640059471130371

Token 14: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.6327893733978271
    2. '(' → logprob: -0.7577893733978271
    3. '(P' → logprob: -10.132789611816406
    4. '(S' → logprob: -10.132789611816406
    5. ' (' → logprob: -10.257789611816406
    6. '('' → logprob: -10.507789611816406
    7. 'T' → logprob: -10.632789611816406
    8. '(
' → logprob: -12.007789611816406
    9. '(s' → logprob: -12.632789611816406
    10. '("' → logprob: -12.757789611816406

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004861330613493919
    2. ')' → logprob: -5.379861354827881
    3. ' ):' → logprob: -9.004860877990723
    4. ':' → logprob: -9.379860877990723
    5. '):
' → logprob: -10.629860877990723
    6. ''):' → logprob: -12.254860877990723
    7. ' )' → logprob: -13.629860877990723
    8. '"):' → logprob: -14.504860877990723
    9. ' or' → logprob: -14.754860877990723
    10. '+' → logprob: -14.754860877990723

Token 16: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3310839533805847
    2. '   ' → logprob: -2.0810840129852295
    3. ' 
' → logprob: -3.2060840129852295
    4. ' print' → logprob: -3.8310840129852295
    5. 'print' → logprob: -4.33108377456665
    6. '    
' → logprob: -4.45608377456665
    7. '\' → logprob: -4.45608377456665
    8. ' ' → logprob: -4.58108377456665
    9. ' True' → logprob: -4.70608377456665
    10. ''\' → logprob: -5.08108377456665

Token 17: ' pass' (ID: 1853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38159486651420593
    2. ' print' → logprob: -1.2565948963165283
    3. '   ' → logprob: -4.631594657897949
    4. '\n' → logprob: -4.756594657897949
    5. ' pass' → logprob: -5.506594657897949
    6. ' False' → logprob: -5.756594657897949
    7. 'False' → logprob: -6.256594657897949
    8. 'pass' (adapté à ' pass') → logprob: -6.256594657897949
    9. ' True' → logprob: -7.381594657897949
    10. '    ' → logprob: -7.631594657897949

Token 18: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2377326488494873
    2. '\n' → logprob: -1.8627326488494873
    3. ':
' → logprob: -3.4877326488494873
    4. ' else' → logprob: -4.737732887268066
    5. ' :' → logprob: -4.987732887268066
    6. '\' → logprob: -5.862732887268066
    7. 'else' → logprob: -6.612732887268066
    8. ' :
' → logprob: -6.737732887268066
    9. '.' → logprob: -6.987732887268066
    10. '   ' → logprob: -7.112732887268066

Token 19: 'else' (ID: 2807)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07701963186264038
    2. ':
' → logprob: -3.577019691467285
    3. ' else' → logprob: -4.077019691467285
    4. 'else' → logprob: -4.327019691467285
    5. '\n' → logprob: -4.452019691467285
    6. ' :' → logprob: -6.577019691467285
    7. 'elif' → logprob: -6.952019691467285
    8. '   ' → logprob: -7.577019691467285
    9. ' :
' → logprob: -8.452019691467285
    10. '\' → logprob: -8.577019691467285

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.157039049663581e-05
    2. ' :' → logprob: -10.375051498413086
    3. ':
' → logprob: -11.000051498413086
    4. '   ' → logprob: -13.125051498413086
    5. ':return' → logprob: -15.000051498413086
    6. ':def' → logprob: -15.500051498413086
    7. ':

' → logprob: -15.875051498413086
    8. '():' → logprob: -16.000051498413086
    9. ':**' → logprob: -16.250051498413086
    10. '：' → logprob: -16.250051498413086

Token 21: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43717625737190247
    2. '   ' → logprob: -1.18717622756958
    3. '    ' → logprob: -4.06217622756958
    4. ' if' → logprob: -4.18717622756958
    5. 'for' → logprob: -4.68717622756958
    6. ' print' → logprob: -5.81217622756958
    7. '    
' → logprob: -6.68717622756958
    8. ' ' → logprob: -7.18717622756958
    9. ' i' → logprob: -8.187176704406738
    10. ' n' → logprob: -8.187176704406738

Token 22: ' p' (ID: 275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12467554211616516
    2. 'for' → logprob: -2.3746755123138428
    3. ' if' → logprob: -5.249675750732422
    4. ' result' → logprob: -5.374675750732422
    5. ' print' → logprob: -5.874675750732422
    6. ' found' → logprob: -6.124675750732422
    7. ' i' → logprob: -6.374675750732422
    8. '   ' → logprob: -6.374675750732422
    9. 'result' → logprob: -6.624675750732422
    10. 'print' → logprob: -6.874675750732422

Token 23: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.01089407131075859
    2. 'os' → logprob: -4.760894298553467
    3. '=' → logprob: -7.510894298553467
    4. ' =' → logprob: -7.885894298553467
    5. 'for' → logprob: -8.010893821716309
    6. 'i' → logprob: -8.760893821716309
    7. '   ' → logprob: -8.885893821716309
    8. 'len' → logprob: -9.260893821716309
    9. 'print' → logprob: -9.385893821716309
    10. 'attern' → logprob: -9.760893821716309

Token 24: ' len' (ID: 4631)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5647713541984558
    2. ' ' → logprob: -1.3147714138031006
    3. ' P' → logprob: -2.6897714138031006
    4. 'len' → logprob: -3.1897714138031006
    5. 'P' → logprob: -3.8147714138031006
    6. ' len' → logprob: -3.8147714138031006
    7. ' T' → logprob: -5.5647711753845215
    8. ' [' → logprob: -5.8147711753845215
    9. '[' → logprob: -7.4397711753845215
    10. 'T' → logprob: -7.8147711753845215

Token 25: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.005866459105163813
    2. '(' → logprob: -5.380866527557373
    3. '(p' → logprob: -7.130866527557373
    4. 'P' → logprob: -8.505866050720215
    5. '(T' → logprob: -8.755866050720215
    6. 'p' → logprob: -9.755866050720215
    7. '('' → logprob: -12.505866050720215
    8. '()' → logprob: -13.130866050720215
    9. ' (' → logprob: -13.130866050720215
    10. '(
' → logprob: -13.255866050720215

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003229528898373246
    2. ' )' → logprob: -6.12822961807251
    3. ')+' → logprob: -7.50322961807251
    4. '   ' → logprob: -9.003229141235352
    5. '))' → logprob: -9.253229141235352
    6. ')
' → logprob: -9.378229141235352
    7. '+' → logprob: -10.378229141235352
    8. '):' → logprob: -11.128229141235352
    9. ')-' → logprob: -11.253229141235352
    10. ' ' → logprob: -11.503229141235352

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11551449447870255
    2. ' ' → logprob: -3.6155145168304443
    3. '<|end|>' → logprob: -3.9905145168304443
    4. ' for' → logprob: -4.490514278411865
    5. '+' → logprob: -4.615514278411865
    6. 'n' → logprob: -5.240514278411865
    7. '    ' → logprob: -5.365514278411865
    8. ' 
' → logprob: -5.615514278411865
    9. 'for' → logprob: -5.865514278411865
    10. '    
' → logprob: -5.990514278411865

Token 28: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45073696970939636
    2. ' for' → logprob: -1.9507369995117188
    3. 't' → logprob: -2.3257369995117188
    4. '   ' → logprob: -2.7007369995117188
    5. 'i' → logprob: -3.8257369995117188
    6. 'n' → logprob: -5.200736999511719
    7. 'T' → logprob: -5.325736999511719
    8. 'result' → logprob: -5.700736999511719
    9. 'max' → logprob: -5.825736999511719
    10. 'count' → logprob: -5.950736999511719

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029820965602993965
    2. '=' → logprob: -3.5298209190368652
    3. ' +=' → logprob: -9.904821395874023
    4. ' ' → logprob: -11.404821395874023
    5. '_' → logprob: -12.654821395874023
    6. '   ' → logprob: -14.029821395874023
    7. '+=' → logprob: -14.029821395874023
    8. ',' → logprob: -14.779821395874023
    9. '    ' → logprob: -14.779821395874023
    10. ' -=' → logprob: -15.029821395874023

Token 30: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09264551848173141
    2. 'float' → logprob: -3.4676454067230225
    3. 'len' → logprob: -3.8426454067230225
    4. ' ' → logprob: -3.9676454067230225
    5. '[]' → logprob: -5.467645645141602
    6. '100' → logprob: -5.592645645141602
    7. '10' → logprob: -5.717645645141602
    8. '-' → logprob: -6.717645645141602
    9. ' float' → logprob: -6.717645645141602
    10. '999' → logprob: -7.217645645141602

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.824802041053772
    2. 'for' → logprob: -1.074802041053772
    3. ' for' → logprob: -1.824802041053772
    4. '
' → logprob: -3.4498019218444824
    5. '\n' → logprob: -3.8248019218444824
    6. '    
' → logprob: -6.699801921844482
    7. ' 
' → logprob: -6.699801921844482
    8. '\' → logprob: -7.449801921844482
    9. 'n' → logprob: -7.824801921844482
    10. 'i' → logprob: -7.949801921844482

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.28950732946395874
    2. ' for' → logprob: -1.4145073890686035
    3. '   ' → logprob: -5.1645073890686035
    4. '\n' → logprob: -6.7895073890686035
    5. ' 
' → logprob: -7.6645073890686035
    6. 'i' → logprob: -8.039506912231445
    7. ' ' → logprob: -8.789506912231445
    8. 'n' → logprob: -8.914506912231445
    9. '
' → logprob: -9.539506912231445
    10. '\' → logprob: -9.789506912231445

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011423501186072826
    2. 'i' → logprob: -4.511423587799072
    3. ' ' → logprob: -8.011423110961914
    4. ' _' → logprob: -10.761423110961914
    5. '_' → logprob: -11.636423110961914
    6. '	i' → logprob: -13.136423110961914
    7. 's' → logprob: -13.261423110961914
    8. ' t' → logprob: -13.511423110961914
    9. '_i' → logprob: -13.761423110961914
    10. 'I' → logprob: -14.011423110961914

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008695526979863644
    2. 'in' → logprob: -4.758695602416992
    3. ' ' → logprob: -9.508695602416992
    4. '	in' → logprob: -13.258695602416992
    5. 'range' → logprob: -13.508695602416992
    6. ' range' → logprob: -13.758695602416992
    7. '  ' → logprob: -14.133695602416992
    8. ',' → logprob: -14.883695602416992
    9. '   ' → logprob: -15.508695602416992
    10. '<|end|>' → logprob: -15.571195602416992

Token 35: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868750035762787
    2. 'range' → logprob: -1.136875033378601
    3. ' ' → logprob: -12.76187515258789
    4. '	range' → logprob: -14.63687515258789
    5. '   ' → logprob: -15.76187515258789
    6. '  ' → logprob: -16.38687515258789
    7. '(range' → logprob: -16.38687515258789
    8. ' xrange' → logprob: -16.63687515258789
    9. 'r' → logprob: -17.01187515258789
    10. ' p' → logprob: -17.63687515258789

Token 36: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.003720980603247881
    2. '(' → logprob: -5.753720760345459
    3. ' (' → logprob: -8.503721237182617
    4. '(p' → logprob: -8.628721237182617
    5. ' len' → logprob: -8.753721237182617
    6. '(l' → logprob: -13.878721237182617
    7. 'len' → logprob: -13.878721237182617
    8. ' p' → logprob: -14.003721237182617
    9. '(n' → logprob: -15.253721237182617
    10. '   ' → logprob: -15.503721237182617

Token 37: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.0008101018611341715
    2. '(P' → logprob: -7.250810146331787
    3. 'T' → logprob: -9.875809669494629
    4. '(' → logprob: -10.500809669494629
    5. '(p' → logprob: -12.000809669494629
    6. '(t' → logprob: -12.125809669494629
    7. 'P' → logprob: -13.250809669494629
    8. ' (' → logprob: -13.250809669494629
    9. ')' → logprob: -13.500809669494629
    10. '	T' → logprob: -14.125809669494629

Token 38: ')-' (ID: 14080)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.09727703779935837
    2. '-' → logprob: -2.5972769260406494
    3. '-p' → logprob: -4.0972771644592285
    4. ')' → logprob: -6.8472771644592285
    5. ' ' → logprob: -8.09727668762207
    6. '   ' → logprob: -8.59727668762207
    7. ')):
' → logprob: -11.22227668762207
    8. '):
' → logprob: -11.72227668762207
    9. '  ' → logprob: -12.34727668762207
    10. '))' → logprob: -12.47227668762207

Token 39: 'len' (ID: 3303)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.033667825162410736
    2. ' p' → logprob: -3.408667802810669
    3. 'len' → logprob: -11.28366756439209
    4. '(p' → logprob: -12.65866756439209
    5. ' (' → logprob: -12.90866756439209
    6. '<p' → logprob: -14.03366756439209
    7. ' ' → logprob: -14.40866756439209
    8. '   ' → logprob: -14.65866756439209
    9. ' len' → logprob: -15.28366756439209
    10. '	p' → logprob: -15.40866756439209

Token 40: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.00018161057960242033
    2. 'P' → logprob: -9.000181198120117
    3. '(' → logprob: -9.875181198120117
    4. '(p' → logprob: -12.750181198120117
    5. '(T' → logprob: -13.750181198120117
    6. ')' → logprob: -14.625181198120117
    7. ' (' → logprob: -14.875181198120117
    8. '+' → logprob: -15.000181198120117
    9. '[P' → logprob: -15.125181198120117
    10. 'p' → logprob: -15.875181198120117

Token 41: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05662352219223976
    2. ')+' → logprob: -3.4316234588623047
    3. ' +' → logprob: -3.9316234588623047
    4. ')' → logprob: -5.806623458862305
    5. '()+' → logprob: -11.431623458862305
    6. ']+' → logprob: -11.556623458862305
    7. ' plus' → logprob: -11.806623458862305
    8. ')):' → logprob: -11.806623458862305
    9. '))' → logprob: -11.931623458862305
    10. ')):
' → logprob: -12.056623458862305

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.6087021473795176e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.875045776367188
    4. ')' → logprob: -16.125045776367188
    5. '```' → logprob: -16.375045776367188
    6. '１' → logprob: -16.500045776367188
    7. '{' → logprob: -16.750045776367188
    8. '
' → logprob: -18.625045776367188
    9. '  ' → logprob: -18.687545776367188
    10. '۱' → logprob: -18.812545776367188

Token 43: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019200756214559078
    2. ')' → logprob: -6.626920223236084
    3. ':' → logprob: -8.126919746398926
    4. ' ):' → logprob: -8.501919746398926
    5. '):
' → logprob: -9.376919746398926
    6. '   ' → logprob: -12.251919746398926
    7. '():' → logprob: -13.501919746398926
    8. '+' → logprob: -14.001919746398926
    9. ' )' → logprob: -14.501919746398926
    10. ')：' → logprob: -14.626919746398926

Token 44: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8047749400138855
    2. '    ' → logprob: -1.3047749996185303
    3. '       ' → logprob: -1.5547749996185303
    4. '[' → logprob: -4.179774761199951
    5. '   ' → logprob: -4.679774761199951
    6. '(' → logprob: -5.054774761199951
    7. ':' → logprob: -5.179774761199951
    8. '     
' → logprob: -5.304774761199951
    9. '<|end|>' → logprob: -5.429774761199951
    10. ' (' → logprob: -5.804774761199951

Token 45: ' tmp' (ID: 8919)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5030774474143982
    2. ' ' → logprob: -1.378077507019043
    3. 'if' → logprob: -2.128077507019043
    4. ' ans' → logprob: -5.128077507019043
    5. '    ' → logprob: -5.628077507019043
    6. '       ' → logprob: -5.878077507019043
    7. 'i' → logprob: -6.378077507019043
    8. '   ' → logprob: -6.503077507019043
    9. 's' → logprob: -6.628077507019043
    10. ' s' → logprob: -7.253077507019043

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410649061203003
    2. '=' → logprob: -0.97410649061203
    3. '=T' → logprob: -10.724106788635254
    4. '＝' → logprob: -13.099106788635254
    5. '_' → logprob: -13.724106788635254
    6. ',' → logprob: -13.849106788635254
    7. 'T' → logprob: -14.099106788635254
    8. 's' → logprob: -14.224106788635254
    9. ')' → logprob: -15.224106788635254
    10. '_=' → logprob: -15.474106788635254

Token 47: ' ""
' (ID: 18061)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0002655079588294029
    2. ' T' → logprob: -8.250265121459961
    3. '   ' → logprob: -12.625265121459961
    4. '	T' → logprob: -14.750265121459961
    5. '0' → logprob: -15.625265121459961
    6. ' ' → logprob: -16.37526512145996
    7. '  ' → logprob: -16.50026512145996
    8. 'i' → logprob: -17.62526512145996
    9. '    ' → logprob: -17.75026512145996
    10. '       ' → logprob: -18.12526512145996

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13646943867206573
    2. ' for' → logprob: -2.6364693641662598
    3. 'for' → logprob: -3.3864693641662598
    4. '<|end|>' → logprob: -4.51146936416626
    5. ' ' → logprob: -5.38646936416626
    6. '   ' → logprob: -5.63646936416626
    7. '        
' → logprob: -7.13646936416626
    8. '           ' → logprob: -7.26146936416626
    9. '    ' → logprob: -8.136469841003418
    10. ',' → logprob: -8.511469841003418

Token 49: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3580794632434845
    2. ' for' → logprob: -1.233079433441162
    3. '       ' → logprob: -4.733079433441162
    4. '<|end|>' → logprob: -8.35807991027832
    5. 'tmp' → logprob: -8.60807991027832
    6. '   ' → logprob: -8.98307991027832
    7. '	for' → logprob: -9.23307991027832
    8. ' ' → logprob: -9.85807991027832
    9. '           ' → logprob: -10.98307991027832
    10. ' tmp' → logprob: -11.10807991027832

Token 50: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.048604074865579605
    2. ' j' → logprob: -3.0486040115356445
    3. 'k' → logprob: -11.298604011535645
    4. ' ' → logprob: -13.048604011535645
    5. ' k' → logprob: -14.298604011535645
    6. '	j' → logprob: -14.673604011535645
    7. 'range' → logprob: -15.423604011535645
    8. '_j' → logprob: -15.423604011535645
    9. '   ' → logprob: -15.548604011535645
    10. '  ' → logprob: -15.923604011535645

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02340712584555149
    2. 'in' → logprob: -3.773407220840454
    3. ' ' → logprob: -9.148406982421875
    4. '<|end|>' → logprob: -10.898406982421875
    5. '   ' → logprob: -11.523406982421875
    6. '    ' → logprob: -11.648406982421875
    7. '	in' → logprob: -12.148406982421875
    8. '        ' → logprob: -13.023406982421875
    9. '=' → logprob: -13.273406982421875
    10. '  ' → logprob: -13.523406982421875

Token 52: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687339425086975
    2. ' range' → logprob: -1.1368733644485474
    3. '	range' → logprob: -13.261873245239258
    4. '(range' → logprob: -14.886873245239258
    5. ' ' → logprob: -15.886873245239258
    6. ' xrange' → logprob: -17.386873245239258
    7. '.range' → logprob: -17.511873245239258
    8. 'p' → logprob: -18.011873245239258
    9. '_range' → logprob: -18.136873245239258
    10. '   ' → logprob: -18.386873245239258

Token 53: '(i' (ID: 3649)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.042744629085063934
    2. 'p' → logprob: -3.5427446365356445
    3. '(len' → logprob: -4.4177446365356445
    4. ' p' → logprob: -7.7927446365356445
    5. 'len' → logprob: -8.542744636535645
    6. '(' → logprob: -8.917744636535645
    7. '(j' → logprob: -10.417744636535645
    8. '   ' → logprob: -10.917744636535645
    9. '<p' → logprob: -11.167744636535645
    10. ' (' → logprob: -11.417744636535645

Token 54: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06339623779058456
    2. ',len' → logprob: -4.063396453857422
    3. '       ' → logprob: -4.438396453857422
    4. ' ,' → logprob: -4.813396453857422
    5. '   ' → logprob: -4.938396453857422
    6. '+' → logprob: -5.438396453857422
    7. ' ' → logprob: -5.938396453857422
    8. ' to' → logprob: -6.188396453857422
    9. '           ' → logprob: -6.313396453857422
    10. '        ' → logprob: -6.438396453857422

Token 55: '+p' (ID: 150971)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6946737766265869
    2. '+p' → logprob: -0.6946737766265869
    3. ' +' → logprob: -6.569673538208008
    4. '+j' → logprob: -9.444673538208008
    5. 'p' → logprob: -10.194673538208008
    6. '+
' → logprob: -13.069673538208008
    7. '+l' → logprob: -13.944673538208008
    8. ' p' → logprob: -13.944673538208008
    9. '+n' → logprob: -14.194673538208008
    10. '+t' → logprob: -14.944673538208008

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028449371457099915
    2. '):
' → logprob: -3.653449296951294
    3. '+' → logprob: -6.403449535369873
    4. ')' → logprob: -7.903449535369873
    5. ' ):' → logprob: -9.903449058532715
    6. '):
' → logprob: -10.403449058532715
    7. ':' → logprob: -11.153449058532715
    8. '   ' → logprob: -11.903449058532715
    9. '       ' → logprob: -11.903449058532715
    10. ' ):
' → logprob: -12.778449058532715

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010874846950173378
    2. ' tmp' → logprob: -5.2608747482299805
    3. 'tmp' → logprob: -5.3858747482299805
    4. '<|end|>' → logprob: -8.13587474822998
    5. '               ' → logprob: -8.76087474822998
    6. '```' → logprob: -8.88587474822998
    7. '   ' → logprob: -9.51087474822998
    8. '       ' → logprob: -9.51087474822998
    9. '            
' → logprob: -9.88587474822998
    10. ' ' → logprob: -10.01087474822998

Token 58: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.44040796160697937
    2. ' tmp' → logprob: -1.0654079914093018
    3. '           ' → logprob: -4.690407752990723
    4. ' if' → logprob: -6.690407752990723
    5. '               ' → logprob: -7.190407752990723
    6. '	tmp' → logprob: -8.565407752990723
    7. 'if' → logprob: -8.690407752990723
    8. ' ' → logprob: -10.940407752990723
    9. '$tmp' → logprob: -10.940407752990723
    10. '/tmp' → logprob: -11.315407752990723

Token 59: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018193958327174187
    2. ' +=' → logprob: -4.01819372177124
    3. '+' → logprob: -10.143194198608398
    4. '+='' → logprob: -13.143194198608398
    5. '+="' → logprob: -13.643194198608398
    6. '=' → logprob: -14.643194198608398
    7. ']+=' → logprob: -14.768194198608398
    8. '.append' → logprob: -14.893194198608398
    9. '+=(' → logprob: -15.393194198608398
    10. ' +' → logprob: -16.0181941986084

Token 60: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0011706985533237457
    2. ' T' → logprob: -6.751170635223389
    3. '	T' → logprob: -15.751171112060547
    4. '   ' → logprob: -15.876171112060547
    5. ' ' → logprob: -15.876171112060547
    6. '  ' → logprob: -17.501171112060547
    7. '_T' → logprob: -18.001171112060547
    8. ' ' → logprob: -18.251171112060547
    9. '`' → logprob: -18.876171112060547
    10. 'Ｔ' → logprob: -19.251171112060547

Token 61: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.5120287066092715e-05
    2. '[' → logprob: -10.375035285949707
    3. 'j' → logprob: -12.625035285949707
    4. '[
' → logprob: -15.875035285949707
    5. '```' → logprob: -16.12503433227539
    6. '[i' → logprob: -16.37503433227539
    7. ' [' → logprob: -17.12503433227539
    8. '[T' → logprob: -17.25003433227539
    9. ' ' → logprob: -18.25003433227539
    10. '[js' → logprob: -18.37503433227539

Token 62: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003479262813925743
    2. ')' → logprob: -5.753479480743408
    3. ']
' → logprob: -8.87847900390625
    4. ' ]' → logprob: -9.12847900390625
    5. '']' → logprob: -11.00347900390625
    6. ')]' → logprob: -11.25347900390625
    7. '])' → logprob: -12.37847900390625
    8. '"]' → logprob: -12.37847900390625
    9. '       ' → logprob: -12.62847900390625
    10. '}' → logprob: -13.00347900390625

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.699722409248352
    2. '<|end|>' → logprob: -0.949722409248352
    3. '
' → logprob: -2.3247222900390625
    4. '<|end|>' → logprob: -5.0747222900390625
    5. '        
' → logprob: -5.4497222900390625
    6. '\n' → logprob: -5.6997222900390625
    7. ')' → logprob: -6.4497222900390625
    8. ' if' → logprob: -7.6997222900390625
    9. '   ' → logprob: -8.074722290039062
    10. '  
' → logprob: -8.574722290039062

Token 64: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.369049996137619
    2. ' if' → logprob: -1.7440500259399414
    3. 'if' (adapté à ' if') → logprob: -3.6190500259399414
    4. '
' → logprob: -3.7440500259399414
    5. '<|end|>' → logprob: -3.8690500259399414
    6. '   ' → logprob: -3.9940500259399414
    7. '        
' → logprob: -4.244050025939941
    8. ' ' → logprob: -4.744050025939941
    9. '==' → logprob: -5.994050025939941
    10. '<|end|>' → logprob: -6.119050025939941

Token 65: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.03127792477607727
    2. 'tmp' → logprob: -3.531277894973755
    3. ' P' → logprob: -6.656278133392334
    4. 'P' → logprob: -9.406277656555176
    5. ' ' → logprob: -9.406277656555176
    6. '(tmp' → logprob: -10.281277656555176
    7. ' temp' → logprob: -11.906277656555176
    8. ' ' → logprob: -12.031277656555176
    9. '	tmp' → logprob: -12.406277656555176
    10. ' p' → logprob: -12.781277656555176

Token 66: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740923047065735
    2. '==' → logprob: -0.9740923047065735
    3. '=' → logprob: -12.224092483520508
    4. ')==' → logprob: -12.974092483520508
    5. ' !=' → logprob: -13.349092483520508
    6. '.startswith' → logprob: -13.349092483520508
    7. ')' → logprob: -13.849092483520508
    8. ' in' → logprob: -14.099092483520508
    9. '==
' → logprob: -14.474092483520508
    10. '!=' → logprob: -14.599092483520508

Token 67: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.4742835760116577
    2. ' P' → logprob: -0.9742835760116577
    3. ' ' → logprob: -9.349283218383789
    4. ''' → logprob: -9.849283218383789
    5. '"' → logprob: -10.349283218383789
    6. '"P' → logprob: -11.099283218383789
    7. ' '' → logprob: -12.974283218383789
    8. '	P' → logprob: -13.224283218383789
    9. ' "' → logprob: -13.411783218383789
    10. '  ' → logprob: -13.474283218383789

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001499060745118186
    2. ':
' → logprob: -8.875149726867676
    3. '):' → logprob: -12.500149726867676
    4. ' :' → logprob: -13.500149726867676
    5. '<|end|>' → logprob: -13.625149726867676
    6. ':**' → logprob: -13.750149726867676
    7. ':return' → logprob: -14.250149726867676
    8. '       ' → logprob: -14.250149726867676
    9. '           ' → logprob: -15.375149726867676
    10. ':

' → logprob: -15.750149726867676

Token 69: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4385707676410675
    2. ':' → logprob: -1.0635707378387451
    3. ':
' → logprob: -4.688570976257324
    4. '):' → logprob: -8.813570976257324
    5. '               ' → logprob: -8.938570976257324
    6. '\n' → logprob: -9.938570976257324
    7. '       ' → logprob: -9.938570976257324
    8. ')' → logprob: -10.188570976257324
    9. ' :' → logprob: -10.188570976257324
    10. 'ans' → logprob: -11.063570976257324

Token 70: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.09946465492248535
    2. ' ans' → logprob: -2.4744646549224854
    3. '           ' → logprob: -4.599464416503906
    4. '	ans' → logprob: -8.849464416503906
    5. 'answer' → logprob: -9.599464416503906
    6. '(ans' → logprob: -9.974464416503906
    7. '       ' → logprob: -10.474464416503906
    8. 'print' → logprob: -10.599464416503906
    9. '               ' → logprob: -10.849464416503906
    10. '```' → logprob: -11.099464416503906

Token 71: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0052386182360351086
    2. '.' → logprob: -5.2552385330200195
    3. ' .' → logprob: -13.50523853302002
    4. '.Append' → logprob: -13.88023853302002
    5. '.add' → logprob: -14.25523853302002
    6. '.extend' → logprob: -14.50523853302002
    7. '.ap' → logprob: -14.75523853302002
    8. '.app' → logprob: -14.88023853302002
    9. '.push' → logprob: -15.00523853302002
    10. 'append' → logprob: -15.88023853302002

Token 72: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.4881879400927573e-05
    2. '(' → logprob: -10.500035285949707
    3. '(j' → logprob: -12.375035285949707
    4. '(True' → logprob: -13.250035285949707
    5. 'i' → logprob: -13.625035285949707
    6. '(False' → logprob: -18.12503433227539
    7. '((' → logprob: -18.62503433227539
    8. '(a' → logprob: -18.75003433227539
    9. '()' → logprob: -18.75003433227539
    10. '(len' → logprob: -18.87503433227539

Token 73: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.182190554682165e-05
    2. '<|end|>' → logprob: -10.500061988830566
    3. ')
' → logprob: -10.750061988830566
    4. '       ' → logprob: -12.625061988830566
    5. ' )' → logprob: -13.000061988830566
    6. ')return' → logprob: -13.000061988830566
    7. '   ' → logprob: -13.875061988830566
    8. '<|end|>' → logprob: -13.875061988830566
    9. '+' → logprob: -14.375061988830566
    10. ')}}' → logprob: -14.750061988830566

Token 74: '    
' (ID: 1944)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020998544991016388
    2. '\n' → logprob: -4.145998477935791
    3. '<|end|>' → logprob: -7.270998477935791
    4. '
' → logprob: -7.395998477935791
    5. '[' → logprob: -7.520998477935791
    6. '   ' → logprob: -7.645998477935791
    7. 'for' → logprob: -7.645998477935791
    8. ' print' → logprob: -7.895998477935791
    9. '```' → logprob: -7.895998477935791
    10. ':' → logprob: -8.77099895477295

Token 75: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23563650250434875
    2. 'if' → logprob: -1.6106364727020264
    3. 'for' → logprob: -4.6106367111206055
    4. '   ' → logprob: -9.235636711120605
    5. ' if' → logprob: -10.110636711120605
    6. '```' → logprob: -10.235636711120605
    7. '#print' → logprob: -12.110636711120605
    8. 'i' → logprob: -12.235636711120605
    9. ' for' → logprob: -12.235636711120605
    10. '#' → logprob: -12.360636711120605

Token 76: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3507950007915497
    2. 'for' (adapté à ' for') → logprob: -1.850795030593872
    3. 'if' → logprob: -1.975795030593872
    4. '   ' → logprob: -10.100794792175293
    5. ' for' → logprob: -10.475794792175293
    6. ' if' → logprob: -11.350794792175293
    7. ' print' → logprob: -11.600794792175293
    8. 'ans' → logprob: -12.225794792175293
    9. '#print' → logprob: -12.475794792175293
    10. 'i' → logprob: -13.725794792175293

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10271909832954407
    2. 'i' → logprob: -2.4777190685272217
    3. ' a' → logprob: -5.352719306945801
    4. ' idx' → logprob: -5.477719306945801
    5. ' index' → logprob: -6.602719306945801
    6. ' ' → logprob: -6.727719306945801
    7. 'a' → logprob: -6.977719306945801
    8. ' x' → logprob: -7.977719306945801
    9. ' ans' → logprob: -8.6027193069458
    10. 'idx' → logprob: -8.9777193069458

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029921729117631912
    2. 'in' → logprob: -3.529921770095825
    3. ' ' → logprob: -8.779921531677246
    4. '  ' → logprob: -11.779921531677246
    5. 'n' → logprob: -12.279921531677246
    6. '   ' → logprob: -13.904921531677246
    7. '	in' → logprob: -14.029921531677246
    8. ',' → logprob: -14.154921531677246
    9. '<|end|>' → logprob: -14.529921531677246
    10. '_in' → logprob: -14.529921531677246

Token 79: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06858762353658676
    2. 'range' → logprob: -3.0685875415802
    3. ' ans' → logprob: -4.068587779998779
    4. ' range' → logprob: -5.943587779998779
    5. '(ans' → logprob: -9.943587303161621
    6. ' ' → logprob: -11.818587303161621
    7. '	ans' → logprob: -12.318587303161621
    8. 'answer' → logprob: -12.318587303161621
    9. '   ' → logprob: -12.443587303161621
    10. '  ' → logprob: -12.818587303161621

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00597335072234273
    2. ':
' → logprob: -5.1309733390808105
    3. 'print' → logprob: -10.755973815917969
    4. '):' → logprob: -11.630973815917969
    5. '+' → logprob: -13.130973815917969
    6. ':
' → logprob: -13.505973815917969
    7. '():
' → logprob: -13.505973815917969
    8. '():' → logprob: -13.505973815917969
    9. '):
' → logprob: -13.630973815917969
    10. ' print' → logprob: -13.630973815917969

Token 81: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04373932257294655
    2. ' print' → logprob: -3.4187393188476562
    3. 'print' → logprob: -4.793739318847656
    4. '       ' → logprob: -6.543739318847656
    5. '    ' → logprob: -9.043739318847656
    6. '    
' → logprob: -9.168739318847656
    7. '	print' → logprob: -10.543739318847656
    8. '```' → logprob: -11.293739318847656
    9. '\n' → logprob: -11.543739318847656
    10. ' ' → logprob: -11.668739318847656

Token 82: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005261510610580444
    2. ' print' → logprob: -5.255261421203613
    3. '   ' → logprob: -11.130261421203613
    4. 'pr' → logprob: -12.005261421203613
    5. '       ' → logprob: -13.005261421203613
    6. '    ' → logprob: -13.130261421203613
    7. '```' → logprob: -14.630261421203613
    8. '	print' → logprob: -14.880261421203613
    9. '.print' → logprob: -15.130261421203613
    10. 'prit' → logprob: -15.380261421203613

Token 83: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.005234952084720135
    2. '(' → logprob: -5.255234718322754
    3. '('' → logprob: -15.005234718322754
    4. '(f' → logprob: -15.630234718322754
    5. '()' → logprob: -15.630234718322754
    6. '("("' → logprob: -15.630234718322754
    7. 'i' → logprob: -16.13023567199707
    8. '((' → logprob: -16.75523567199707
    9. '(I' → logprob: -16.75523567199707
    10. '("' → logprob: -17.50523567199707

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.875001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '))' → logprob: -17.125001907348633
    5. ')#' → logprob: -17.375001907348633
    6. ')`' → logprob: -17.500001907348633
    7. ')i' → logprob: -17.625001907348633
    8. ')}' → logprob: -17.625001907348633
    9. '')' → logprob: -18.125001907348633
    10. '())' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 82
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 36.59%
Précision adaptée (1ère position): 42.68%
Précision (top 10): 84.15%
================================================================================
