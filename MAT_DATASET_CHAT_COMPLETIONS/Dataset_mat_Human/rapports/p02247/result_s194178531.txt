================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
T = input()
P = input()
t = len(T)
p = len(P)
for i in range(t - p + 1):
    if T[i : i + p] == P:
        print(i)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'T' (ID: 51)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0020776940509676933
    2. '('' → logprob: -7.127077579498291
    3. ''' → logprob: -7.502077579498291
    4. '"' → logprob: -8.12707805633545
    5. '.' → logprob: -8.62707805633545
    6. '(
' → logprob: -9.62707805633545
    7. '()' → logprob: -10.25207805633545
    8. '[' → logprob: -10.37707805633545
    9. '("("' → logprob: -10.37707805633545
    10. ' (' → logprob: -11.62707805633545

Token 4: 'P' (ID: 47)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013396685011684895
    2. '+' → logprob: -5.263396739959717
    3. '=' → logprob: -5.638396739959717
    4. '.strip' → logprob: -6.763396739959717
    5. '[' → logprob: -7.013396739959717
    6. '()' → logprob: -7.513396739959717
    7. '*' → logprob: -7.888396739959717
    8. '(' → logprob: -8.013396263122559
    9. '.split' → logprob: -8.513396263122559
    10. ')' → logprob: -8.638396263122559

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3574627935886383
    2. '=' → logprob: -1.732462763786316
    3. 'r' → logprob: -2.2324628829956055
    4. '.' → logprob: -5.3574628829956055
    5. '=input' → logprob: -5.7324628829956055
    6. 'rocess' → logprob: -6.2324628829956055
    7. ')' → logprob: -6.4824628829956055
    8. 'er' → logprob: -7.8574628829956055
    9. '()' → logprob: -7.9824628829956055
    10. 'rocessing' → logprob: -7.9824628829956055

Token 6: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.28522953391075134
    2. ' input' → logprob: -1.4102295637130737
    3. ' T' → logprob: -6.035229682922363
    4. 'T' → logprob: -7.035229682922363
    5. 'int' → logprob: -8.035229682922363
    6. '"' → logprob: -8.785229682922363
    7. ' ' → logprob: -10.035229682922363
    8. ''' → logprob: -10.035229682922363
    9. '""' → logprob: -10.160229682922363
    10. ' int' → logprob: -10.285229682922363

Token 7: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16050204634666443
    2. '(' → logprob: -1.9105020761489868
    3. ')' → logprob: -9.285502433776855
    4. '```' → logprob: -10.035502433776855
    5. '()`' → logprob: -10.535502433776855
    6. '`()' → logprob: -10.535502433776855
    7. ' ()' → logprob: -11.285502433776855
    8. '.' → logprob: -11.410502433776855
    9. '(
' → logprob: -11.535502433776855
    10. '(

' → logprob: -11.910502433776855

Token 8: 't' (ID: 83)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07548784464597702
    2. 'if' → logprob: -2.9504878520965576
    3. 'for' → logprob: -4.5754876136779785
    4. 't' → logprob: -5.7004876136779785
    5. 'while' → logprob: -6.7004876136779785
    6. 'c' → logprob: -7.3254876136779785
    7. 'len' → logprob: -7.5754876136779785
    8. 'm' → logprob: -7.7004876136779785
    9. 'count' → logprob: -7.7004876136779785
    10. 'n' → logprob: -7.8254876136779785

Token 9: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5675150156021118
    2. '[' → logprob: -2.3175148963928223
    3. 'oken' → logprob: -2.3175148963928223
    4. 'okens' → logprob: -2.5675148963928223
    5. '=' → logprob: -2.9425148963928223
    6. '[i' → logprob: -3.4425148963928223
    7. 'o' → logprob: -4.067514896392822
    8. ' =' → logprob: -4.442514896392822
    9. 'ext' → logprob: -4.817514896392822
    10. '[len' → logprob: -4.942514896392822

Token 10: ' len' (ID: 4631)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.48250529170036316
    2. 'T' → logprob: -1.4825053215026855
    3. ' input' → logprob: -3.3575053215026855
    4. '0' → logprob: -3.3575053215026855
    5. ' T' → logprob: -3.7325053215026855
    6. 'len' → logprob: -3.8575053215026855
    7. '""' → logprob: -4.9825053215026855
    8. 'int' → logprob: -5.1075053215026855
    9. '[]' → logprob: -5.1075053215026855
    10. 'list' → logprob: -5.6075053215026855

Token 11: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11886493861675262
    2. '(T' → logprob: -2.6188650131225586
    3. '(t' → logprob: -3.2438650131225586
    4. '(P' → logprob: -9.118865013122559
    5. '(
' → logprob: -10.868865013122559
    6. '((' → logprob: -11.368865013122559
    7. '('' → logprob: -12.118865013122559
    8. '(len' → logprob: -12.368865013122559
    9. 's' → logprob: -12.493865013122559
    10. 'T' → logprob: -12.743865013122559

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ')t' → logprob: -12.500008583068848
    3. ' )' → logprob: -13.500008583068848
    4. ')
' → logprob: -13.500008583068848
    5. '`)' → logprob: -14.625008583068848
    6. 't' → logprob: -14.625008583068848
    7. '))' → logprob: -15.000008583068848
    8. '')' → logprob: -15.250008583068848
    9. '()' → logprob: -15.500008583068848
    10. '[' → logprob: -16.000009536743164

Token 13: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007905708043836057
    2. 'm' → logprob: -7.875790596008301
    3. 'n' → logprob: -8.3757905960083
    4. ' p' → logprob: -8.7507905960083
    5. 'l' → logprob: -11.8757905960083
    6. 's' → logprob: -12.8757905960083
    7. '```' → logprob: -12.8757905960083
    8. '_' → logprob: -13.0007905960083
    9. 'pl' → logprob: -14.2507905960083
    10. 'P' → logprob: -14.2507905960083

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16750356554985046
    2. 'len' → logprob: -2.917503595352173
    3. '_len' → logprob: -3.042503595352173
    4. '=' → logprob: -3.667503595352173
    5. '_length' → logprob: -5.292503356933594
    6. ')' → logprob: -5.417503356933594
    7. 'l' → logprob: -5.417503356933594
    8. '_l' → logprob: -5.792503356933594
    9. '=len' → logprob: -6.042503356933594
    10. ' =' → logprob: -6.542503356933594

Token 15: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6931489706039429
    2. ' len' → logprob: -0.6931489706039429
    3. '(len' → logprob: -13.693148612976074
    4. '[len' → logprob: -14.818148612976074
    5. '=len' → logprob: -15.693148612976074
    6. ' ' → logprob: -16.94314956665039
    7. '	len' → logprob: -16.94314956665039
    8. '0' → logprob: -17.81814956665039
    9. ',len' → logprob: -18.31814956665039
    10. '<len' → logprob: -18.44314956665039

Token 16: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.02985358238220215
    2. '(' → logprob: -3.529853582382202
    3. '(T' → logprob: -9.404853820800781
    4. '(p' → logprob: -11.279853820800781
    5. 'P' → logprob: -12.529853820800781
    6. '(
' → logprob: -13.029853820800781
    7. '(

' → logprob: -14.404853820800781
    8. '("("' → logprob: -14.779853820800781
    9. '('' → logprob: -15.029853820800781
    10. '((' → logprob: -15.279853820800781

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.491498531133402e-06
    2. '()' → logprob: -12.125009536743164
    3. '`)' → logprob: -13.375009536743164
    4. ' )' → logprob: -14.250009536743164
    5. '')' → logprob: -14.625009536743164
    6. ')
' → logprob: -14.875009536743164
    7. '())' → logprob: -15.000009536743164
    8. '```' → logprob: -16.000009536743164
    9. '#' → logprob: -16.125009536743164
    10. '))' → logprob: -16.250009536743164

Token 18: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6673072576522827
    2. 'i' → logprob: -1.4173072576522827
    3. 'for' → logprob: -2.4173073768615723
    4. 'd' → logprob: -3.2923073768615723
    5. 'dp' → logprob: -3.2923073768615723
    6. '\' → logprob: -3.9173073768615723
    7. 'n' → logprob: -4.167307376861572
    8. '
' → logprob: -5.042307376861572
    9. 'result' → logprob: -5.042307376861572
    10. 'm' → logprob: -5.542307376861572

Token 19: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023115256801247597
    2. ' i' → logprob: -3.8981151580810547
    3. '  ' → logprob: -6.023115158081055
    4. '_' → logprob: -9.898115158081055
    5. ' ‌' → logprob: -10.523115158081055
    6. 'i' → logprob: -10.648115158081055
    7. ' _' → logprob: -10.773115158081055
    8. ' )' → logprob: -12.148115158081055
    9. ' ' → logprob: -12.148115158081055
    10. ' ▁' → logprob: -12.773115158081055

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15902897715568542
    2. ' ' → logprob: -2.284029006958008
    3. 'in' → logprob: -3.284029006958008
    4. '  ' → logprob: -5.909029006958008
    5. '<|end|>' → logprob: -6.159029006958008
    6. ' range' → logprob: -7.159029006958008
    7. ' space' → logprob: -7.659029006958008
    8. ')' → logprob: -7.909029006958008
    9. 'space' → logprob: -8.659029006958008
    10. 'range' → logprob: -8.659029006958008

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.038043100386857986
    2. 'range' → logprob: -3.2880430221557617
    3. ' ' → logprob: -13.663043022155762
    4. '	range' → logprob: -15.413043022155762
    5. ' xrange' → logprob: -16.163043975830078
    6. '(range' → logprob: -16.413043975830078
    7. '0' → logprob: -18.538043975830078
    8. ' rang' → logprob: -19.413043975830078
    9. '.range' → logprob: -19.538043975830078
    10. '```' → logprob: -19.538043975830078

Token 22: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023471000604331493
    2. '(p' → logprob: -6.752346992492676
    3. '(t' → logprob: -7.377346992492676
    4. ' (' → logprob: -7.752346992492676
    5. '(len' → logprob: -9.252346992492676
    6. '(i' → logprob: -12.002346992492676
    7. ' ' → logprob: -12.252346992492676
    8. '(n' → logprob: -12.377346992492676
    9. '(
' → logprob: -12.877346992492676
    10. '(space' → logprob: -13.002346992492676

Token 23: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.555827796459198
    2. '):' → logprob: -1.6808278560638428
    3. ')' → logprob: -2.1808278560638428
    4. '-' → logprob: -2.4308278560638428
    5. ' ):' → logprob: -3.6808278560638428
    6. ' )' → logprob: -4.805827617645264
    7. '-p' → logprob: -6.055827617645264
    8. '+' → logprob: -6.680827617645264
    9. '-m' → logprob: -7.555827617645264
    10. '-i' → logprob: -8.180828094482422

Token 24: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6931641101837158
    2. ' p' → logprob: -0.6931641101837158
    3. ' ' → logprob: -11.443163871765137
    4. '	p' → logprob: -12.818163871765137
    5. '<p' → logprob: -13.068163871765137
    6. '   ' → logprob: -15.443163871765137
    7. '(p' → logprob: -15.568163871765137
    8. '  ' → logprob: -15.818163871765137
    9. '&p' → logprob: -15.818163871765137
    10. '+p' → logprob: -15.943163871765137

Token 25: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693158745765686
    2. ' +' → logprob: -0.693158745765686
    3. ')' → logprob: -12.068159103393555
    4. ' ' → logprob: -13.068159103393555
    5. '1' → logprob: -13.318159103393555
    6. '+i' → logprob: -14.818159103393555
    7. '+)' → logprob: -15.068159103393555
    8. ')+' → logprob: -15.068159103393555
    9. 's' → logprob: -15.193159103393555
    10. ' )' → logprob: -15.818159103393555

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029752222821116447
    2. ' ' → logprob: -3.529752254486084
    3. ')' → logprob: -14.029751777648926
    4. '```' → logprob: -15.467251777648926
    5. '  ' → logprob: -16.029752731323242
    6. '   ' → logprob: -16.404752731323242
    7. '<|end|>' → logprob: -16.529752731323242
    8. ' ' → logprob: -16.592252731323242
    9. '0' → logprob: -17.279752731323242
    10. '۱' → logprob: -17.279752731323242

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001596771035110578
    2. ' ' → logprob: -8.75015926361084
    3. ')' → logprob: -14.87515926361084
    4. '```' → logprob: -15.37515926361084
    5. '   ' → logprob: -16.750160217285156
    6. '{' → logprob: -16.875160217285156
    7. '  ' → logprob: -17.062660217285156
    8. '`' → logprob: -17.125160217285156
    9. '１' → logprob: -17.437660217285156
    10. '۱' → logprob: -17.562660217285156

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003958716988563538
    2. ')' → logprob: -6.003958702087402
    3. ':' → logprob: -7.128958702087402
    4. ' ):' → logprob: -7.378958702087402
    5. '):
' → logprob: -10.003958702087402
    6. ' )' → logprob: -12.878958702087402
    7. ' :' → logprob: -13.628958702087402
    8. '():' → logprob: -13.753958702087402
    9. ':)' → logprob: -13.878958702087402
    10. '+' → logprob: -14.128958702087402

Token 29: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7265331149101257
    2. '   ' → logprob: -0.7265331149101257
    3. '<|end|>' → logprob: -4.476532936096191
    4. '    ' → logprob: -4.601532936096191
    5. ' if' → logprob: -5.351532936096191
    6. '  ' → logprob: -6.476532936096191
    7. ':' → logprob: -6.976532936096191
    8. '    
' → logprob: -7.101532936096191
    9. 'if' → logprob: -7.226532936096191
    10. ' 
' → logprob: -7.351532936096191

Token 30: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23920582234859467
    2. 'if' (adapté à ' if') → logprob: -1.7392058372497559
    3. '   ' → logprob: -3.489205837249756
    4. '    ' → logprob: -5.989205837249756
    5. ' ' → logprob: -6.614205837249756
    6. ' i' → logprob: -6.739205837249756
    7. ' for' → logprob: -7.489205837249756
    8. 'i' → logprob: -7.989205837249756
    9. 'for' → logprob: -8.614205360412598
    10. '  ' → logprob: -8.989205360412598

Token 31: ' T' (ID: 353)
  Prédit: ' T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' T' → logprob: -0.006834483239799738
    2. 'T' → logprob: -5.006834506988525
    3. ' ' → logprob: -9.131834030151367
    4. ' ' → logprob: -12.006834030151367
    5. '   ' → logprob: -13.756834030151367
    6. ')' → logprob: -14.131834030151367
    7. '	T' → logprob: -14.506834030151367
    8. '  ' → logprob: -14.756834030151367
    9. '    ' → logprob: -14.881834030151367
    10. '(T' → logprob: -15.631834030151367

Token 32: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003397535183466971
    2. '[' → logprob: -8.00033950805664
    3. '.startswith' → logprob: -12.87533950805664
    4. '   ' → logprob: -14.25033950805664
    5. '[I' → logprob: -15.12533950805664
    6. '```' → logprob: -15.12533950805664
    7. ' [' → logprob: -15.75033950805664
    8. 'i' → logprob: -16.62533950805664
    9. '[
' → logprob: -16.87533950805664
    10. '[j' → logprob: -17.37533950805664

Token 33: ' :' (ID: 712)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.13322296738624573
    2. ':' → logprob: -2.133223056793213
    3. ' :' → logprob: -6.133223056793213
    4. ':].' → logprob: -6.383223056793213
    5. ':]' → logprob: -6.508223056793213
    6. ']==' → logprob: -8.133222579956055
    7. ']' → logprob: -8.383222579956055
    8. ' ' → logprob: -8.758222579956055
    9. '==' → logprob: -9.383222579956055
    10. ' :]' → logprob: -9.758222579956055

Token 34: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03385419398546219
    2. ' i' → logprob: -3.4088542461395264
    3. '   ' → logprob: -8.533854484558105
    4. ' ' → logprob: -12.283854484558105
    5. '	i' → logprob: -13.408854484558105
    6. '  ' → logprob: -13.408854484558105
    7. '(i' → logprob: -14.033854484558105
    8. ':i' → logprob: -14.283854484558105
    9. ']' → logprob: -14.533854484558105
    10. '    ' → logprob: -14.783854484558105

Token 35: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7746415734291077
    2. '+p' → logprob: -0.8996415734291077
    3. ' +' → logprob: -2.024641513824463
    4. '+i' → logprob: -8.399641990661621
    5. '   ' → logprob: -9.524641990661621
    6. ' ' → logprob: -10.149641990661621
    7. ']+' → logprob: -11.524641990661621
    8. 'p' → logprob: -12.399641990661621
    9. '+s' → logprob: -12.899641990661621
    10. '＋' → logprob: -12.899641990661621

Token 36: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001930301426909864
    2. ' p' → logprob: -6.251930236816406
    3. ' ' → logprob: -13.626930236816406
    4. '   ' → logprob: -15.001930236816406
    5. '  ' → logprob: -16.501930236816406
    6. '	p' → logprob: -16.876930236816406
    7. 'len' → logprob: -17.376930236816406
    8. '```' → logprob: -17.501930236816406
    9. '    ' → logprob: -18.376930236816406
    10. ')p' → logprob: -19.001930236816406

Token 37: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035097955260425806
    2. ']==' → logprob: -6.003509998321533
    3. ' ]' → logprob: -6.878509998321533
    4. '].' → logprob: -14.378509521484375
    5. '==' → logprob: -14.753509521484375
    6. ')]' → logprob: -15.003509521484375
    7. ']!=' → logprob: -15.003509521484375
    8. ']=='' → logprob: -15.128509521484375
    9. ']

' → logprob: -15.253509521484375
    10. '"]' → logprob: -15.378509521484375

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14546482264995575
    2. '==' → logprob: -2.0204648971557617
    3. '=' → logprob: -6.145464897155762
    4. ' =' → logprob: -8.020464897155762
    5. ')' → logprob: -8.770464897155762
    6. ']' → logprob: -9.645464897155762
    7. ']==' → logprob: -9.770464897155762
    8. ' ' → logprob: -11.145464897155762
    9. ')==' → logprob: -11.520464897155762
    10. '===' → logprob: -12.770464897155762

Token 39: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.3132977783679962
    2. ' P' → logprob: -1.3132977485656738
    3. ' ' → logprob: -10.563298225402832
    4. ''' → logprob: -12.813298225402832
    5. '	P' → logprob: -13.563298225402832
    6. '   ' → logprob: -13.813298225402832
    7. ' ' → logprob: -14.438298225402832
    8. '\P' → logprob: -14.438298225402832
    9. ')' → logprob: -14.813298225402832
    10. '`' → logprob: -14.875798225402832

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002067588793579489
    2. ' :' → logprob: -8.62520694732666
    3. ':
' → logprob: -11.37520694732666
    4. ':**' → logprob: -12.37520694732666
    5. '):' → logprob: -12.37520694732666
    6. '():' → logprob: -13.50020694732666
    7. ':return' → logprob: -13.62520694732666
    8. '':' → logprob: -13.87520694732666
    9. '>:' → logprob: -14.37520694732666
    10. '   ' → logprob: -14.62520694732666

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0702279657125473
    2. ':' → logprob: -3.320227861404419
    3. '    ' → logprob: -3.820227861404419
    4. '   ' → logprob: -5.445228099822998
    5. ' ' → logprob: -6.445228099822998
    6. ' :' → logprob: -6.695228099822998
    7. '      ' → logprob: -7.320228099822998
    8. '        ' → logprob: -7.445228099822998
    9. '     ' → logprob: -7.695228099822998
    10. '<|end|>' → logprob: -8.82022762298584

Token 42: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013072580099105835
    2. ' print' → logprob: -5.013072490692139
    3. '       ' → logprob: -5.263072490692139
    4. '   ' → logprob: -7.138072490692139
    5. '    ' → logprob: -8.263072967529297
    6. 'i' → logprob: -10.888072967529297
    7. '        ' → logprob: -10.888072967529297
    8. '           ' → logprob: -11.388072967529297
    9. 'pr' → logprob: -11.638072967529297
    10. ' ' → logprob: -12.138072967529297

Token 43: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0006442877347581089
    2. '(' → logprob: -7.375644207000732
    3. 'i' → logprob: -11.00064468383789
    4. '()' → logprob: -13.87564468383789
    5. '('' → logprob: -17.37564468383789
    6. '(I' → logprob: -17.62564468383789
    7. '((' → logprob: -18.00064468383789
    8. '(j' → logprob: -18.37564468383789
    9. ' (' → logprob: -18.75064468383789
    10. ' i' → logprob: -18.75064468383789

Token 44: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.082895273109898e-05
    2. ' )' → logprob: -11.250030517578125
    3. ')
' → logprob: -11.875030517578125
    4. '`)' → logprob: -13.125030517578125
    5. '   ' → logprob: -13.250030517578125
    6. ')`' → logprob: -13.250030517578125
    7. '')' → logprob: -13.875030517578125
    8. '))' → logprob: -14.000030517578125
    9. ',' → logprob: -14.250030517578125
    10. '")' → logprob: -14.875030517578125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 38
Précision stricte (1ère position): 35.71%
Précision adaptée (1ère position): 38.10%
Précision (top 10): 90.48%
================================================================================
