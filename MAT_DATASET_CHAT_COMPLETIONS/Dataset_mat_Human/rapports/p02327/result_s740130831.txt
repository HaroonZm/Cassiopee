================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
h, w = map(int, input().split())
max_rect, prev = 0, [0] * (w + 1)
for i in range(h):
    current = [p + 1 if f else 0 for f, p in zip(map(lambda x: int(x) ^ 1, input().split()), prev)] + [0]
    stack = [(0, 0)]
    for j in range(w + 1):
        c_j = current[j]
        if stack[-1][0] < c_j:
            stack.append((c_j, j))
            continue
        if stack[-1][0] > c_j:
            since = 0
            while stack[-1][0] > c_j:
                height, since = stack.pop()
                max_rect = max(max_rect, height * (j - since))
            if c_j:
                stack.append((c_j, since))
    prev = current
print(max_rect)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'h' (ID: 71)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' w' (ID: 286)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7141396999359131
    2. '=' → logprob: -0.7141396999359131
    3. ' =' → logprob: -4.089139938354492
    4. ')' → logprob: -6.464139938354492
    5. '*' → logprob: -6.839139938354492
    6. '.' → logprob: -7.964139938354492
    7. ':' → logprob: -8.839139938354492
    8. '[' → logprob: -8.839139938354492
    9. '```' → logprob: -9.339139938354492
    10. ' ' → logprob: -9.464139938354492

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20660795271396637
    2. ' image' → logprob: -2.4566080570220947
    3. ' h' → logprob: -3.0816080570220947
    4. ' img' → logprob: -3.3316080570220947
    5. ' map' → logprob: -4.956607818603516
    6. '0' → logprob: -5.956607818603516
    7. 'image' → logprob: -5.956607818603516
    8. 'map' → logprob: -6.456607818603516
    9. ' input' → logprob: -7.206607818603516
    10. ' np' → logprob: -7.331607818603516

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06916536390781403
    2. '(int' → logprob: -3.4441654682159424
    3. '(lambda' → logprob: -3.8191654682159424
    4. '(str' → logprob: -4.694165229797363
    5. '```' → logprob: -6.694165229797363
    6. '<|end|>' → logprob: -7.819165229797363
    7. '[int' → logprob: -8.069165229797363
    8. ')' → logprob: -8.319165229797363
    9. '(len' → logprob: -8.694165229797363
    10. '<int' → logprob: -8.819165229797363

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016287608072161674
    2. '(' → logprob: -4.891287803649902
    3. ')' → logprob: -4.891287803649902
    4. 'input' → logprob: -7.516287803649902
    5. '(str' → logprob: -8.891287803649902
    6. '(raw' → logprob: -9.141287803649902
    7. '```' → logprob: -9.141287803649902
    8. ' input' → logprob: -10.266287803649902
    9. '(int' → logprob: -10.391287803649902
    10. '[input' → logprob: -10.766287803649902

Token 7: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4742640554904938
    2. 'input' → logprob: -0.9742640256881714
    3. '(input' → logprob: -9.099264144897461
    4. ')' → logprob: -9.599264144897461
    5. ',input' → logprob: -12.474264144897461
    6. '=input' → logprob: -13.849264144897461
    7. ' )' → logprob: -13.849264144897461
    8. '<input' → logprob: -15.099264144897461
    9. '[input' → logprob: -15.349264144897461
    10. '	input' → logprob: -15.849264144897461

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5141751766204834
    2. '()' → logprob: -1.3891751766204834
    3. ')' → logprob: -2.2641751766204834
    4. '(' → logprob: -4.2641754150390625
    5. '`()' → logprob: -5.5141754150390625
    6. '()">' → logprob: -5.6391754150390625
    7. '()>' → logprob: -5.7641754150390625
    8. '(()' → logprob: -5.7641754150390625
    9. '```' → logprob: -5.7641754150390625
    10. '().' → logprob: -5.8891754150390625

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009176511666737497
    2. 'strip' → logprob: -7.000917434692383
    3. 'rstrip' → logprob: -12.250917434692383
    4. 'read' → logprob: -14.125917434692383
    5. ' split' → logprob: -14.625917434692383
    6. '(split' → logprob: -15.875917434692383
    7. ')' → logprob: -16.500917434692383
    8. 'startswith' → logprob: -17.750917434692383
    9. 'decode' → logprob: -18.250917434692383
    10. '```' → logprob: -18.375917434692383

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5657400488853455
    2. ')' → logprob: -0.9407400488853455
    3. '))' → logprob: -3.4407401084899902
    4. '()' → logprob: -5.19074010848999
    5. '()))' → logprob: -5.69074010848999
    6. '('' → logprob: -8.315739631652832
    7. '`)' → logprob: -8.815739631652832
    8. '(' → logprob: -8.815739631652832
    9. '')' → logprob: -10.190739631652832
    10. ' ())' → logprob: -10.565739631652832

Token 11: 'max' (ID: 3228)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9505304098129272
    2. ',' → logprob: -1.8255304098129272
    3. 'a' → logprob: -1.9505304098129272
    4. '#' → logprob: -1.9505304098129272
    5. ')' → logprob: -3.325530529022217
    6. 'r' → logprob: -4.075530529022217
    7. 'print' → logprob: -4.200530529022217
    8. 'for' → logprob: -4.450530529022217
    9. 'n' → logprob: -4.700530529022217
    10. 'm' → logprob: -4.700530529022217

Token 12: '_rect' (ID: 39269)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08112730830907822
    2. '_height' → logprob: -3.206127405166626
    3. '(' → logprob: -4.081127166748047
    4. '_h' → logprob: -5.081127166748047
    5. '_depth' → logprob: -5.581127166748047
    6. '_size' → logprob: -5.706127166748047
    7. '_width' → logprob: -5.956127166748047
    8. '_w' → logprob: -7.081127166748047
    9. '_len' → logprob: -7.081127166748047
    10. '_length' → logprob: -7.206127166748047

Token 13: ',' (ID: 11)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.02178792841732502
    2. '_angle' → logprob: -4.146788120269775
    3. '_' → logprob: -5.896788120269775
    4. '_area' → logprob: -6.146788120269775
    5. 'angler' → logprob: -8.896787643432617
    6. '_width' → logprob: -9.021787643432617
    7. 'angel' → logprob: -9.021787643432617
    8. 'angular' → logprob: -9.396787643432617
    9. ' =' → logprob: -9.521787643432617
    10. 'ang' → logprob: -9.771787643432617

Token 14: ' prev' (ID: 10258)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.035239338874817
    2. 'max' → logprob: -1.035239338874817
    3. ' area' → logprob: -2.6602392196655273
    4. 'min' → logprob: -3.0352392196655273
    5. '=' → logprob: -3.2852392196655273
    6. ' min' → logprob: -3.4102392196655273
    7. 'area' → logprob: -3.7852392196655273
    8. ' h' → logprob: -4.035239219665527
    9. 'h' → logprob: -4.285239219665527
    10. ' =' → logprob: -4.285239219665527

Token 15: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1959409713745117
    2. '_max' → logprob: -1.5709409713745117
    3. '_area' → logprob: -1.9459409713745117
    4. '_h' → logprob: -2.0709409713745117
    5. '_rect' → logprob: -2.4459409713745117
    6. '_height' → logprob: -2.9459409713745117
    7. '=' → logprob: -3.8209409713745117
    8. '_w' → logprob: -3.8209409713745117
    9. '_width' → logprob: -4.320940971374512
    10. '_sum' → logprob: -4.445940971374512

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15830272436141968
    2. ' ' → logprob: -2.0333027839660645
    3. '(' → logprob: -4.6583027839660645
    4. ' (' → logprob: -5.7833027839660645
    5. '[' → logprob: -6.6583027839660645
    6. '-' → logprob: -7.6583027839660645
    7. ' [' → logprob: -7.6583027839660645
    8. ' -' → logprob: -8.783302307128906
    9. ' h' → logprob: -9.033302307128906
    10. 'h' → logprob: -9.658302307128906

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0940822884440422
    2. '(' → logprob: -2.5940823554992676
    3. '[' → logprob: -4.469082355499268
    4. '-' → logprob: -7.344082355499268
    5. ' ' → logprob: -7.844082355499268
    6. 'h' → logprob: -7.844082355499268
    7. '[h' → logprob: -7.844082355499268
    8. '(h' → logprob: -7.969082355499268
    9. '(w' → logprob: -8.46908187866211
    10. 'w' → logprob: -8.46908187866211

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1622503101825714
    2. '<|end|>' → logprob: -2.412250280380249
    3. 'for' → logprob: -3.412250280380249
    4. ' for' → logprob: -4.412250518798828
    5. ',
' → logprob: -5.287250518798828
    6. ' ' → logprob: -5.912250518798828
    7. ' ,' → logprob: -6.037250518798828
    8. '<|end|>' → logprob: -6.412250518798828
    9. ' =' → logprob: -7.662250518798828
    10. '```' → logprob: -7.662250518798828

Token 19: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09595617651939392
    2. ' ' → logprob: -2.7209560871124268
    3. '-' → logprob: -4.220956325531006
    4. ' -' → logprob: -5.220956325531006
    5. 'h' → logprob: -6.095956325531006
    6. 'w' → logprob: -6.970956325531006
    7. 'None' → logprob: -7.595956325531006
    8. ' (' → logprob: -7.720956325531006
    9. ' h' → logprob: -7.845956325531006
    10. ' None' → logprob: -8.345955848693848

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015918580815196037
    2. 'w' → logprob: -5.515918731689453
    3. ']' → logprob: -5.640918731689453
    4. '-' → logprob: -6.015918731689453
    5. '[' → logprob: -6.015918731689453
    6. '(' → logprob: -7.265918731689453
    7. 'False' → logprob: -7.265918731689453
    8. 'h' → logprob: -7.390918731689453
    9. '1' → logprob: -8.265918731689453
    10. '[h' → logprob: -8.390918731689453

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.201755553483963
    2. ']*' → logprob: -1.7017555236816406
    3. ']*(' → logprob: -8.07675552368164
    4. ' ]' → logprob: -11.20175552368164
    5. ']+' → logprob: -11.32675552368164
    6. '*' → logprob: -13.32675552368164
    7. ' for' → logprob: -13.32675552368164
    8. '*w' → logprob: -13.82675552368164
    9. '0' → logprob: -14.95175552368164
    10. 'for' → logprob: -15.32675552368164

Token 22: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3063914179801941
    2. ' *' → logprob: -1.5563914775848389
    3. '*w' → logprob: -3.306391477584839
    4. '*h' → logprob: -4.30639123916626
    5. '*(' → logprob: -5.93139123916626
    6. '*[' → logprob: -9.306391716003418
    7. '*p' → logprob: -10.431391716003418
    8. '*n' → logprob: -11.181391716003418
    9. '**' → logprob: -11.806391716003418
    10. '0' → logprob: -11.931391716003418

Token 23: ' (' (ID: 350)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.049369461834430695
    2. '(w' → logprob: -3.0493695735931396
    3. ' w' → logprob: -7.4243693351745605
    4. ' (' → logprob: -9.299369812011719
    5. '(' → logprob: -9.924369812011719
    6. 'h' → logprob: -10.674369812011719
    7. '(h' → logprob: -12.049369812011719
    8. '_w' → logprob: -13.299369812011719
    9. '100' → logprob: -13.549369812011719
    10. '102' → logprob: -13.799369812011719

Token 24: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014696354046463966
    2. '(w' → logprob: -4.26469612121582
    3. ' w' → logprob: -7.76469612121582
    4. ' (' → logprob: -9.76469612121582
    5. '(' → logprob: -10.51469612121582
    6. 'h' → logprob: -11.38969612121582
    7. ' ' → logprob: -13.26469612121582
    8. '   ' → logprob: -13.26469612121582
    9. '(h' → logprob: -13.38969612121582
    10. '	w' → logprob: -13.70219612121582

Token 25: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2835265100002289
    2. '+' → logprob: -1.4085265398025513
    3. ' +' → logprob: -6.908526420593262
    4. ' )' → logprob: -7.033526420593262
    5. '+)' → logprob: -8.658526420593262
    6. '))' → logprob: -8.908526420593262
    7. '*' → logprob: -10.908526420593262
    8. '+h' → logprob: -10.908526420593262
    9. ']' → logprob: -11.033526420593262
    10. '1' → logprob: -11.158526420593262

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003687486285343766
    2. ' ' → logprob: -6.128687381744385
    3. '2' → logprob: -6.503687381744385
    4. '   ' → logprob: -13.503687858581543
    5. '  ' → logprob: -14.128687858581543
    6. '3' → logprob: -15.003687858581543
    7. '+' → logprob: -15.128687858581543
    8. '```' → logprob: -15.378687858581543
    9. '１' → logprob: -16.878686904907227
    10. '4' → logprob: -16.941186904907227

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022153646568767726
    2. '2' → logprob: -8.500221252441406
    3. ' ' → logprob: -11.000221252441406
    4. '１' → logprob: -15.250221252441406
    5. '```' → logprob: -15.250221252441406
    6. '   ' → logprob: -15.500221252441406
    7. '  ' → logprob: -16.187721252441406
    8. '+' → logprob: -16.375221252441406
    9. '3' → logprob: -16.750221252441406
    10. '۱' → logprob: -17.125221252441406

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001238004770129919
    2. '`)' → logprob: -9.875123977661133
    3. ')
' → logprob: -10.125123977661133
    4. '```' → logprob: -11.750123977661133
    5. ' )' → logprob: -11.875123977661133
    6. ')`' → logprob: -12.375123977661133
    7. '')' → logprob: -13.125123977661133
    8. '))' → logprob: -13.250123977661133
    9. '),' → logprob: -13.375123977661133
    10. '<|end|>' → logprob: -13.500123977661133

Token 29: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2941572964191437
    2. ' for' → logprob: -1.4191572666168213
    3. '
' → logprob: -4.9191575050354
    4. '\n' → logprob: -5.4191575050354
    5. '
' → logprob: -8.294157028198242
    6. '```' → logprob: -8.294157028198242
    7. '0' → logprob: -8.919157028198242
    8. ' 
' → logprob: -9.044157028198242
    9. '' → logprob: -9.544157028198242
    10. '\' → logprob: -9.919157028198242

Token 30: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13687944412231445
    2. ' _' → logprob: -2.5118794441223145
    3. '_' → logprob: -3.3868794441223145
    4. ' h' → logprob: -5.0118794441223145
    5. ' row' → logprob: -5.7618794441223145
    6. 'i' → logprob: -6.5118794441223145
    7. ' ' → logprob: -7.6368794441223145
    8. ' r' → logprob: -7.8868794441223145
    9. ' line' → logprob: -8.011878967285156
    10. ' j' → logprob: -9.011878967285156

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31384044885635376
    2. 'in' → logprob: -1.313840389251709
    3. 'n' → logprob: -8.188840866088867
    4. ' ' → logprob: -8.563840866088867
    5. '_' → logprob: -10.688840866088867
    6. '	in' → logprob: -10.688840866088867
    7. ',' → logprob: -10.938840866088867
    8. ' n' → logprob: -11.938840866088867
    9. 'range' → logprob: -12.376340866088867
    10. '  ' → logprob: -12.438840866088867

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.014173386618494987
    2. 'range' → logprob: -4.26417350769043
    3. ' ' → logprob: -12.63917350769043
    4. ' r' → logprob: -13.63917350769043
    5. ' input' → logprob: -13.76417350769043
    6. '	range' → logprob: -13.88917350769043
    7. ' ran' → logprob: -14.01417350769043
    8. ' h' → logprob: -14.88917350769043
    9. ' xrange' → logprob: -14.88917350769043
    10. '```' → logprob: -15.26417350769043

Token 33: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.04859509319067001
    2. '(' → logprob: -3.0485951900482178
    3. '(w' → logprob: -12.548595428466797
    4. '(H' → logprob: -13.423595428466797
    5. '(n' → logprob: -14.298595428466797
    6. '(l' → logprob: -14.423595428466797
    7. '(i' → logprob: -14.923595428466797
    8. '(len' → logprob: -15.423595428466797
    9. '(
' → logprob: -15.673595428466797
    10. '(x' → logprob: -16.173595428466797

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00229489803314209
    2. ' ):' → logprob: -6.377295017242432
    3. ':' → logprob: -8.002294540405273
    4. '):
' → logprob: -8.877294540405273
    5. '+' → logprob: -9.377294540405273
    6. ')' → logprob: -11.377294540405273
    7. ',' → logprob: -12.627294540405273
    8. ' :' → logprob: -12.877294540405273
    9. '+:' → logprob: -12.877294540405273
    10. ' ' → logprob: -13.502294540405273

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9216566681861877
    2. '   ' → logprob: -1.171656608581543
    3. '    ' → logprob: -1.421656608581543
    4. ' line' → logprob: -4.171656608581543
    5. '     
' → logprob: -4.546656608581543
    6. ' s' → logprob: -5.046656608581543
    7. ' row' → logprob: -5.546656608581543
    8. '    
' → logprob: -5.671656608581543
    9. ' 
' → logprob: -6.421656608581543
    10. '```' → logprob: -7.046656608581543

Token 36: ' current' (ID: 2208)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.0271352529525757
    2. '   ' → logprob: -1.4021352529525757
    3. '    ' → logprob: -1.7771352529525757
    4. 'row' → logprob: -2.6521353721618652
    5. ' line' → logprob: -3.2771353721618652
    6. 's' → logprob: -3.9021353721618652
    7. 'line' → logprob: -4.277135372161865
    8. 'arr' → logprob: -4.527135372161865
    9. 'data' → logprob: -4.652135372161865
    10. ' arr' → logprob: -4.652135372161865

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004772818647325039
    2. '=' → logprob: -5.504772663116455
    3. ' ' → logprob: -7.504772663116455
    4. ',' → logprob: -10.504773139953613
    5. '<|end|>' → logprob: -10.879773139953613
    6. ')' → logprob: -11.254773139953613
    7. 'line' → logprob: -11.629773139953613
    8. '_row' → logprob: -11.629773139953613
    9. 'row' → logprob: -12.129773139953613
    10. '   ' → logprob: -12.254773139953613

Token 38: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5107194185256958
    2. ' [' → logprob: -1.1357194185256958
    3. ' list' → logprob: -3.0107192993164062
    4. 'list' → logprob: -4.135719299316406
    5. '[list' → logprob: -4.385719299316406
    6. '[input' → logprob: -7.260719299316406
    7. '[int' → logprob: -8.885719299316406
    8. '[]' → logprob: -10.135719299316406
    9. '[i' → logprob: -10.260719299316406
    10. '[List' → logprob: -10.760719299316406

Token 39: 'p' (ID: 79)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -7.40998875699006e-05
    2. ' ' → logprob: -9.75007438659668
    3. 'int' → logprob: -11.62507438659668
    4. ')' → logprob: -13.00007438659668
    5. ']' → logprob: -13.62507438659668
    6. '1' → logprob: -13.87507438659668
    7. '   ' → logprob: -14.62507438659668
    8. '```' → logprob: -15.12507438659668
    9. '(' → logprob: -15.62507438659668
    10. '  ' → logprob: -15.62507438659668

Token 40: ' +' (ID: 659)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42844074964523315
    2. '+' → logprob: -1.303440809249878
    3. 'x' → logprob: -3.803440809249878
    4. ' +' → logprob: -4.053440570831299
    5. ']' → logprob: -4.428440570831299
    6. '1' → logprob: -4.553440570831299
    7. 'lus' → logprob: -6.053440570831299
    8. 'ixel' → logprob: -6.178440570831299
    9. ')' → logprob: -6.428440570831299
    10. ' for' → logprob: -6.678440570831299

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039406660944223404
    2. 'int' → logprob: -3.5394067764282227
    3. '(int' → logprob: -5.164406776428223
    4. ' int' → logprob: -6.539406776428223
    5. ' ' → logprob: -6.914406776428223
    6. ' (' → logprob: -7.289406776428223
    7. '   ' → logprob: -9.039406776428223
    8. '(input' → logprob: -9.164406776428223
    9. '(' → logprob: -9.289406776428223
    10. '(i' → logprob: -9.289406776428223

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022427968215197325
    2. 'int' → logprob: -6.377242565155029
    3. '(int' → logprob: -8.252243041992188
    4. ' ' → logprob: -9.127243041992188
    5. '(input' → logprob: -9.752243041992188
    6. '(' → logprob: -10.377243041992188
    7. 'input' → logprob: -10.877243041992188
    8. '(i' → logprob: -11.252243041992188
    9. ' (' → logprob: -11.627243041992188
    10. '   ' → logprob: -11.752243041992188

Token 43: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038171857595443726
    2. 'if' → logprob: -3.2881717681884766
    3. ' for' → logprob: -9.288171768188477
    4. ' ' → logprob: -10.288171768188477
    5. 'for' → logprob: -13.913171768188477
    6. '	if' → logprob: -14.288171768188477
    7. '<|end|>' → logprob: -14.288171768188477
    8. '   ' → logprob: -14.413171768188477
    9. ')' → logprob: -15.538171768188477
    10. '    ' → logprob: -15.538171768188477

Token 44: ' f' (ID: 285)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4554009735584259
    2. ' input' → logprob: -1.0804009437561035
    3. 'int' → logprob: -4.3304009437561035
    4. 'c' → logprob: -6.2054009437561035
    5. '(input' → logprob: -6.3304009437561035
    6. 'x' → logprob: -6.3304009437561035
    7. ' int' → logprob: -6.4554009437561035
    8. ' c' → logprob: -6.9554009437561035
    9. 'i' → logprob: -7.0804009437561035
    10. ' x' → logprob: -7.2054009437561035

Token 45: ' else' (ID: 1203)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6246304512023926
    2. '==' → logprob: -1.8746304512023926
    3. 'else' → logprob: -2.2496304512023926
    4. 'irst' → logprob: -2.6246304512023926
    5. '[int' → logprob: -2.8746304512023926
    6. '(int' → logprob: -2.9996304512023926
    7. 'loat' → logprob: -3.1246304512023926
    8. ' else' → logprob: -3.1246304512023926
    9. 'or' → logprob: -3.4996304512023926
    10. 'i' → logprob: -3.4996304512023926

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4438440501689911
    2. ' ' → logprob: -1.0688440799713135
    3. '1' → logprob: -4.318843841552734
    4. ' p' → logprob: -7.568843841552734
    5. ' f' → logprob: -8.068843841552734
    6. 'p' → logprob: -8.318843841552734
    7. 'f' → logprob: -9.068843841552734
    8. '   ' → logprob: -9.506343841552734
    9. ' (' → logprob: -9.943843841552734
    10. ' w' → logprob: -10.318843841552734

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0322149433195591
    2. ' ' → logprob: -3.532214879989624
    3. '1' → logprob: -6.157215118408203
    4. 'p' → logprob: -9.407215118408203
    5. '   ' → logprob: -9.907215118408203
    6. 'current' → logprob: -10.282215118408203
    7. ' current' → logprob: -10.532215118408203
    8. ' p' → logprob: -10.657215118408203
    9. 'f' → logprob: -10.657215118408203
    10. '(' → logprob: -11.282215118408203

Token 48: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.009876616299152374
    2. 'for' → logprob: -4.759876728057861
    3. '(' → logprob: -8.259876251220703
    4. ' ' → logprob: -8.384876251220703
    5. ' (' → logprob: -8.634876251220703
    6. ')' → logprob: -8.884876251220703
    7. ' in' → logprob: -9.009876251220703
    8. '(p' → logprob: -9.259876251220703
    9. '   ' → logprob: -9.509876251220703
    10. '[' → logprob: -10.384876251220703

Token 49: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.856745719909668
    2. ' f' → logprob: -1.981745719909668
    3. ' p' → logprob: -1.981745719909668
    4. 'prev' → logprob: -1.981745719909668
    5. 'p' → logprob: -2.356745719909668
    6. ' map' → logprob: -2.606745719909668
    7. '(prev' → logprob: -2.856745719909668
    8. '(p' → logprob: -3.106745719909668
    9. ' prev' → logprob: -3.481745719909668
    10. 'map' → logprob: -3.856745719909668

Token 50: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011386963538825512
    2. 'in' → logprob: -4.511386871337891
    3. ',' → logprob: -8.13638687133789
    4. '<|end|>' → logprob: -11.13638687133789
    5. ' ,' → logprob: -12.13638687133789
    6. '   ' → logprob: -12.38638687133789
    7. '    ' → logprob: -12.63638687133789
    8. ' ' → logprob: -13.19888687133789
    9. '<|end|>' → logprob: -13.57388687133789
    10. '  ' → logprob: -13.69888687133789

Token 51: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06720668077468872
    2. 'v' → logprob: -3.442206621170044
    3. 'q' → logprob: -4.567206859588623
    4. '(p' → logprob: -5.192206859588623
    5. 'prev' → logprob: -5.567206859588623
    6. ' p' → logprob: -5.567206859588623
    7. 'j' → logprob: -6.317206859588623
    8. 'e' → logprob: -6.942206859588623
    9. 'c' → logprob: -7.192206859588623
    10. ' (' → logprob: -7.192206859588623

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08896269649267197
    2. 'in' → logprob: -2.4639627933502197
    3. ' ' → logprob: -12.08896255493164
    4. ',' → logprob: -12.33896255493164
    5. 'n' → logprob: -12.58896255493164
    6. 'p' → logprob: -13.46396255493164
    7. 'i' → logprob: -13.83896255493164
    8. 'ine' → logprob: -14.15146255493164
    9. 's' → logprob: -14.21396255493164
    10. '	in' → logprob: -14.46396255493164

Token 53: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.3133336901664734
    2. 'zip' → logprob: -1.3133337497711182
    3. '(zip' → logprob: -9.563333511352539
    4. '.zip' → logprob: -14.188333511352539
    5. 'enumer' → logprob: -14.688333511352539
    6. '_zip' → logprob: -15.313333511352539
    7. ' ' → logprob: -15.938333511352539
    8. 'z' → logprob: -16.18833351135254
    9. '  ' → logprob: -16.81333351135254
    10. ' enumerate' → logprob: -17.31333351135254

Token 54: '(map' (ID: 16946)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.0006181967910379171
    2. '(' → logprob: -7.500617980957031
    3. '(previous' → logprob: -10.625617980957031
    4. ' (' → logprob: -11.500617980957031
    5. '((' → logprob: -11.875617980957031
    6. '(current' → logprob: -12.125617980957031
    7. '(row' → logprob: -12.625617980957031
    8. 'prev' → logprob: -12.875617980957031
    9. '(
' → logprob: -13.250617980957031
    10. '(range' → logprob: -13.875617980957031

Token 55: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.012713531032204628
    2. '(lambda' → logprob: -4.762713432312012
    3. '(bool' → logprob: -5.637713432312012
    4. '(' → logprob: -7.637713432312012
    5. '(map' → logprob: -11.012713432312012
    6. '(eval' → logprob: -11.887713432312012
    7. 'int' → logprob: -12.012713432312012
    8. '(input' → logprob: -12.762713432312012
    9. '(str' → logprob: -13.012713432312012
    10. 'lambda' → logprob: -13.262713432312012

Token 56: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15755221247673035
    2. '(int' → logprob: -2.5325522422790527
    3. 'bool' → logprob: -3.4075522422790527
    4. 'lambda' → logprob: -4.157552242279053
    5. ' int' → logprob: -4.407552242279053
    6. '(lambda' → logprob: -6.157552242279053
    7. '(bool' → logprob: -6.907552242279053
    8. ' bool' → logprob: -7.282552242279053
    9. ' lambda' → logprob: -7.407552242279053
    10. ':int' → logprob: -8.407551765441895

Token 57: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10677159577608109
    2. '(int' → logprob: -2.60677170753479
    3. ':int' → logprob: -4.106771469116211
    4. ' int' → logprob: -5.481771469116211
    5. '<int' → logprob: -6.231771469116211
    6. ',int' → logprob: -6.856771469116211
    7. ':' → logprob: -6.856771469116211
    8. 'lambda' → logprob: -7.106771469116211
    9. 'bool' → logprob: -7.481771469116211
    10. '   ' → logprob: -7.731771469116211

Token 58: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008903615176677704
    2. ' int' → logprob: -5.508903503417969
    3. 'lambda' → logprob: -5.883903503417969
    4. '(int' → logprob: -7.258903503417969
    5. 'bool' → logprob: -7.258903503417969
    6. 'x' → logprob: -8.008903503417969
    7. 'input' → logprob: -9.133903503417969
    8. ' lambda' → logprob: -9.508903503417969
    9. '(lambda' → logprob: -10.258903503417969
    10. ' x' → logprob: -10.883903503417969

Token 59: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.013400794938206673
    2. '(input' → logprob: -4.388401031494141
    3. '(' → logprob: -7.388401031494141
    4. 'x' → logprob: -9.01340103149414
    5. ',' → logprob: -9.13840103149414
    6. 'input' → logprob: -11.01340103149414
    7. ',x' → logprob: -12.01340103149414
    8. ',input' → logprob: -12.38840103149414
    9. ' (' → logprob: -12.51340103149414
    10. '(int' → logprob: -13.26340103149414

Token 60: ')' (ID: 8)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3605271577835083
    2. '(),' → logprob: -1.6105271577835083
    3. ',' → logprob: -2.7355270385742188
    4. 'input' → logprob: -4.110527038574219
    5. ',input' → logprob: -4.485527038574219
    6. '()),' → logprob: -5.860527038574219
    7. '()' → logprob: -5.985527038574219
    8. '(x' → logprob: -6.235527038574219
    9. '),' → logprob: -6.735527038574219
    10. '(' → logprob: -7.235527038574219

Token 61: ' ^' (ID: 7602)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03272131085395813
    2. ',' → logprob: -4.032721519470215
    3. 'input' → logprob: -4.907721519470215
    4. ',input' → logprob: -5.532721519470215
    5. '(' → logprob: -6.407721519470215
    6. '(),' → logprob: -6.907721519470215
    7. ' input' → logprob: -9.282721519470215
    8. ' (' → logprob: -9.407721519470215
    9. '=input' → logprob: -9.782721519470215
    10. '   ' → logprob: -10.032721519470215

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011496334336698055
    2. ' ' → logprob: -4.511496543884277
    3. 'int' → logprob: -8.511496543884277
    4. '0' → logprob: -8.761496543884277
    5. ' (' → logprob: -10.386496543884277
    6. '   ' → logprob: -10.886496543884277
    7. ' int' → logprob: -11.136496543884277
    8. '(int' → logprob: -12.136496543884277
    9. '(' → logprob: -12.511496543884277
    10. '  ' → logprob: -12.948996543884277

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00040779312257654965
    2. ' ' → logprob: -8.500408172607422
    3. 'int' → logprob: -9.000408172607422
    4. '0' → logprob: -10.125408172607422
    5. '   ' → logprob: -11.000408172607422
    6. '(int' → logprob: -12.125408172607422
    7. '(' → logprob: -12.875408172607422
    8. 'True' → logprob: -13.000408172607422
    9. '           ' → logprob: -13.125408172607422
    10. '       ' → logprob: -13.250408172607422

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00827861949801445
    2. ',input' → logprob: -5.258278846740723
    3. ',map' → logprob: -6.758278846740723
    4. ' ,' → logprob: -7.383278846740723
    5. '(input' → logprob: -7.633278846740723
    6. '),' → logprob: -8.633278846740723
    7. ',list' → logprob: -8.883278846740723
    8. '(' → logprob: -9.383278846740723
    9. ')' → logprob: -9.633278846740723
    10. 'input' → logprob: -10.008278846740723

Token 65: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.761760950088501
    2. 'map' → logprob: -1.386760950088501
    3. 'list' → logprob: -1.636760950088501
    4. ' input' → logprob: -3.511760950088501
    5. ' list' → logprob: -3.511760950088501
    6. ' map' → logprob: -3.761760950088501
    7. '   ' → logprob: -5.261760711669922
    8. ' ' → logprob: -9.261760711669922
    9. '    ' → logprob: -10.011760711669922
    10. '(map' → logprob: -10.074260711669922

Token 66: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0021085054613649845
    2. '()),' → logprob: -7.002108573913574
    3. '()' → logprob: -7.127108573913574
    4. '()))' → logprob: -8.627108573913574
    5. '())))' → logprob: -9.127108573913574
    6. '())' → logprob: -9.252108573913574
    7. '(),' → logprob: -12.627108573913574
    8. '()));' → logprob: -12.752108573913574
    9. '());' → logprob: -14.127108573913574
    10. '()
' → logprob: -14.752108573913574

Token 67: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007836606819182634
    2. 'strip' → logprob: -7.375783443450928
    3. ' split' → logprob: -9.125783920288086
    4. '().' → logprob: -10.250783920288086
    5. 'rstrip' → logprob: -12.125783920288086
    6. '(split' → logprob: -12.750783920288086
    7. '.split' → logprob: -13.000783920288086
    8. '()' → logprob: -14.625783920288086
    9. ')' → logprob: -14.625783920288086
    10. 'str' → logprob: -15.500783920288086

Token 68: '()),' (ID: 24379)
  Prédit: '()),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()),' → logprob: -0.03148216754198074
    2. '()' → logprob: -3.531482219696045
    3. '),' → logprob: -7.281482219696045
    4. '())' → logprob: -7.906482219696045
    5. '()))' → logprob: -8.031481742858887
    6. '())))' → logprob: -8.656481742858887
    7. '(),' → logprob: -9.406481742858887
    8. '()),
' → logprob: -11.031481742858887
    9. '().' → logprob: -11.281481742858887
    10. '(' → logprob: -11.281481742858887

Token 69: ' prev' (ID: 10258)
  Prédit: ' prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -0.4741181433200836
    2. 'prev' → logprob: -0.9741181135177612
    3. '	prev' → logprob: -11.09911823272705
    4. '(prev' → logprob: -11.34911823272705
    5. ' ' → logprob: -12.22411823272705
    6. '   ' → logprob: -12.47411823272705
    7. '    ' → logprob: -13.34911823272705
    8. '.prev' → logprob: -13.72411823272705
    9. '  ' → logprob: -14.34911823272705
    10. '_prev' → logprob: -14.59911823272705

Token 70: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019722258730325848
    2. ' )' → logprob: -10.125197410583496
    3. ')])' → logprob: -10.125197410583496
    4. ']' → logprob: -10.375197410583496
    5. ')]
' → logprob: -10.375197410583496
    6. ')' → logprob: -10.375197410583496
    7. '])]' → logprob: -11.750197410583496
    8. ' ' → logprob: -12.750197410583496
    9. '))' → logprob: -13.250197410583496
    10. ')],' → logprob: -13.250197410583496

Token 71: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009769546799361706
    2. ' [' → logprob: -4.634769439697266
    3. '[current' → logprob: -12.259769439697266
    4. ' ' → logprob: -13.134769439697266
    5. '[p' → logprob: -13.759769439697266
    6. '[next' → logprob: -14.009769439697266
    7. '   ' → logprob: -14.009769439697266
    8. '0' → logprob: -14.384769439697266
    9. '  ' → logprob: -14.509769439697266
    10. '([' → logprob: -14.509769439697266

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.214019307051785e-05
    2. ' ' → logprob: -10.375032424926758
    3. '   ' → logprob: -14.500032424926758
    4. ')' → logprob: -16.375032424926758
    5. '۰' → logprob: -17.062532424926758
    6. '  ' → logprob: -17.250032424926758
    7. '000' → logprob: -17.437532424926758
    8. '00' → logprob: -17.562532424926758
    9. ']' → logprob: -18.187532424926758
    10. '    ' → logprob: -18.250032424926758

Token 74: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006227265694178641
    2. ')]' → logprob: -8.750622749328613
    3. ')' → logprob: -8.875622749328613
    4. ']
' → logprob: -9.000622749328613
    5. ' ]' → logprob: -9.000622749328613
    6. '])' → logprob: -9.750622749328613
    7. '   ' → logprob: -12.125622749328613
    8. '`]' → logprob: -12.500622749328613
    9. ']

' → logprob: -13.000622749328613
    10. '()]' → logprob: -13.250622749328613

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' stack' (ID: 10825)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0012884517200291157
    2. '=' → logprob: -6.751288414001465
    3. ',' → logprob: -9.751288414001465
    4. '=[]' → logprob: -9.876288414001465
    5. ' ,' → logprob: -13.501288414001465
    6. ' ' → logprob: -13.501288414001465
    7. 's' → logprob: -13.876288414001465
    8. '  ' → logprob: -14.251288414001465
    9. '[:]' → logprob: -14.501288414001465
    10. '.append' → logprob: -14.501288414001465

Token 78: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.021910516545176506
    2. '[-' → logprob: -4.021910667419434
    3. '[(' → logprob: -6.021910667419434
    4. '[' → logprob: -6.646910667419434
    5. ' []' → logprob: -11.146910667419434
    6. '[]
' → logprob: -11.771910667419434
    7. '[]}' → logprob: -12.521910667419434
    8. '[]>' → logprob: -13.646910667419434
    9. '[],' → logprob: -14.271910667419434
    10. '[((' → logprob: -14.771910667419434

Token 79: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03531403839588165
    2. '0' → logprob: -3.6603140830993652
    3. '(-' → logprob: -4.910314083099365
    4. '(' → logprob: -6.535314083099365
    5. ' -' → logprob: -9.160313606262207
    6. ' ' → logprob: -10.535313606262207
    7. '   ' → logprob: -12.660313606262207
    8. ')' → logprob: -12.785313606262207
    9. '  ' → logprob: -13.035313606262207
    10. '-w' → logprob: -13.035313606262207

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.404745439183898e-05
    2. '0' → logprob: -11.00003433227539
    3. ' ,' → logprob: -11.25003433227539
    4. ' ' → logprob: -13.87503433227539
    5. ',)' → logprob: -14.12503433227539
    6. ')]' → logprob: -14.25003433227539
    7. ')' → logprob: -14.62503433227539
    8. ',-' → logprob: -14.75003433227539
    9. ',
' → logprob: -14.87503433227539
    10. '<|end|>' → logprob: -16.12503433227539

Token 81: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17664912343025208
    2. '-' → logprob: -2.1766490936279297
    3. ' ' → logprob: -3.5516490936279297
    4. ' -' → logprob: -3.9266490936279297
    5. '  ' → logprob: -10.55164909362793
    6. ')' → logprob: -10.80164909362793
    7. '   ' → logprob: -10.92664909362793
    8. 'prev' → logprob: -11.67664909362793
    9. '1' → logprob: -12.05164909362793
    10. ' ' → logprob: -12.42664909362793

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1616586297750473
    2. '-' → logprob: -1.9116586446762085
    3. ' -' → logprob: -6.911658763885498
    4. ' ' → logprob: -7.786658763885498
    5. '1' → logprob: -12.53665828704834
    6. '−' → logprob: -12.78665828704834
    7. 'prev' → logprob: -13.03665828704834
    8. '   ' → logprob: -13.28665828704834
    9. '  ' → logprob: -13.41165828704834
    10. '-p' → logprob: -13.41165828704834

Token 83: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0029407329857349396
    2. ')]
' → logprob: -5.877940654754639
    3. ')' → logprob: -9.627941131591797
    4. ' )' → logprob: -10.127941131591797
    5. ')]

' → logprob: -11.252941131591797
    6. ')]
' → logprob: -11.252941131591797
    7. ']' → logprob: -13.127941131591797
    8. ',' → logprob: -14.627941131591797
    9. '')]' → logprob: -14.877941131591797
    10. ')])' → logprob: -15.127941131591797

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04274691268801689
    2. ' for' → logprob: -4.0427470207214355
    3. 'for' → logprob: -4.1677470207214355
    4. '```' → logprob: -5.6677470207214355
    5. '    
' → logprob: -6.4177470207214355
    6. '<|end|>' → logprob: -6.9177470207214355
    7. ',' → logprob: -7.0427470207214355
    8. ' ' → logprob: -8.042746543884277
    9. '
' → logprob: -8.042746543884277
    10. ' 
' → logprob: -8.292746543884277

Token 85: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6763775944709778
    2. 'for' (adapté à ' for') → logprob: -0.8013775944709778
    3. ' for' → logprob: -3.176377534866333
    4. '
' → logprob: -7.426377773284912
    5. ' ' → logprob: -9.051377296447754
    6. '    
' → logprob: -9.301377296447754
    7. '```' → logprob: -9.426377296447754
    8. '  ' → logprob: -9.801377296447754
    9. ')' → logprob: -9.926377296447754
    10. '	for' → logprob: -10.551377296447754

Token 86: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16146522760391235
    2. ' j' → logprob: -1.9114651679992676
    3. 'x' → logprob: -8.536465644836426
    4. ' ' → logprob: -8.536465644836426
    5. 'idx' → logprob: -8.536465644836426
    6. '   ' → logprob: -8.536465644836426
    7. 'i' → logprob: -8.786465644836426
    8. 'k' → logprob: -9.786465644836426
    9. ' idx' → logprob: -10.036465644836426
    10. 'index' → logprob: -10.786465644836426

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051852691918611526
    2. 'in' → logprob: -3.3018527030944824
    3. ',' → logprob: -4.301852703094482
    4. ' ,' → logprob: -9.676852226257324
    5. ' ' → logprob: -9.801852226257324
    6. '   ' → logprob: -10.426852226257324
    7. '1' → logprob: -11.926852226257324
    8. '  ' → logprob: -12.051852226257324
    9. '    ' → logprob: -12.176852226257324
    10. '0' → logprob: -13.176852226257324

Token 88: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47407856583595276
    2. ' range' → logprob: -0.9740785360336304
    3. '(range' → logprob: -14.099078178405762
    4. '	range' → logprob: -15.099078178405762
    5. ' ' → logprob: -15.224078178405762
    6. '1' → logprob: -15.849078178405762
    7. 'ange' → logprob: -17.099079132080078
    8. '   ' → logprob: -17.224079132080078
    9. 'r' → logprob: -17.224079132080078
    10. ' xrange' → logprob: -17.849079132080078

Token 89: '(w' (ID: 7420)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009757975116372108
    2. '(w' → logprob: -4.759757995605469
    3. '1' → logprob: -7.384757995605469
    4. '(len' → logprob: -7.634757995605469
    5. 'w' → logprob: -10.509757995605469
    6. 'len' → logprob: -12.634757995605469
    7. '(
' → logprob: -13.009757995605469
    8. ' (' → logprob: -13.009757995605469
    9. ' ' → logprob: -13.509757995605469
    10. '   ' → logprob: -13.759757995605469

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06295140087604523
    2. ' +' → logprob: -2.8129513263702393
    3. '):' → logprob: -8.06295108795166
    4. '1' → logprob: -8.31295108795166
    5. '   ' → logprob: -8.81295108795166
    6. ' ' → logprob: -9.43795108795166
    7. '    ' → logprob: -9.93795108795166
    8. '):
' → logprob: -10.31295108795166
    9. '+
' → logprob: -10.31295108795166
    10. ',' → logprob: -10.56295108795166

Token 91: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024801772087812424
    2. ' ' → logprob: -6.0024800300598145
    3. '   ' → logprob: -13.377480506896973
    4. '0' → logprob: -13.502480506896973
    5. '  ' → logprob: -14.502480506896973
    6. '2' → logprob: -14.877480506896973
    7. '```' → logprob: -15.564980506896973
    8. ')' → logprob: -16.064979553222656
    9. '-' → logprob: -16.314979553222656
    10. '+' → logprob: -17.064979553222656

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.750024795532227
    4. '0' → logprob: -16.375024795532227
    5. '2' → logprob: -16.625024795532227
    6. '  ' → logprob: -17.875024795532227
    7. '```' → logprob: -19.125024795532227
    8. '１' → logprob: -19.375024795532227
    9. '۱' → logprob: -20.125024795532227
    10. '10' → logprob: -20.312524795532227

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08402995020151138
    2. '):
' → logprob: -2.5840299129486084
    3. ':' → logprob: -5.4590301513671875
    4. ')' → logprob: -7.9590301513671875
    5. '   ' → logprob: -8.459030151367188
    6. '1' → logprob: -8.709030151367188
    7. ' ):' → logprob: -9.959030151367188
    8. '):
' → logprob: -10.834030151367188
    9. '):

' → logprob: -10.834030151367188
    10. ',' → logprob: -11.584030151367188

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03959563747048378
    2. '   ' → logprob: -4.039595603942871
    3. '    ' → logprob: -5.289595603942871
    4. ' while' → logprob: -5.289595603942871
    5. '<|end|>' → logprob: -5.289595603942871
    6. ' ' → logprob: -6.664595603942871
    7. '1' → logprob: -6.789595603942871
    8. 'while' → logprob: -6.914595603942871
    9. '```' → logprob: -6.914595603942871
    10. '        ' → logprob: -8.164595603942871

Token 95: ' c' (ID: 274)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07174132019281387
    2. '   ' → logprob: -3.1967413425445557
    3. ' while' → logprob: -3.8217413425445557
    4. 'height' → logprob: -5.696741104125977
    5. 'h' → logprob: -7.071741104125977
    6. '       ' → logprob: -7.196741104125977
    7. 'current' → logprob: -7.821741104125977
    8. 'cur' → logprob: -7.946741104125977
    9. '	while' → logprob: -8.321741104125977
    10. 'count' → logprob: -9.821741104125977

Token 96: '_j' (ID: 12021)
  Prédit: 'urrent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'urrent' → logprob: -0.37116846442222595
    2. 'urr' → logprob: -2.371168375015259
    3. 'ount' → logprob: -2.871168375015259
    4. 'ur' → logprob: -2.996168375015259
    5. '   ' → logprob: -3.746168375015259
    6. '       ' → logprob: -3.746168375015259
    7. 'height' → logprob: -3.746168375015259
    8. ',' → logprob: -4.246168613433838
    9. '_height' → logprob: -4.746168613433838
    10. ' =' → logprob: -4.996168613433838

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25777706503868103
    2. '=' → logprob: -2.132776975631714
    3. ',' → logprob: -3.132776975631714
    4. 'urrent' → logprob: -3.257776975631714
    5. '   ' → logprob: -5.382777214050293
    6. ' ' → logprob: -5.382777214050293
    7. '_height' → logprob: -5.382777214050293
    8. 'urr' → logprob: -5.757777214050293
    9. 'ount' → logprob: -5.882777214050293
    10. 'height' → logprob: -6.132777214050293

Token 98: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00682288222014904
    2. ' current' → logprob: -5.0068230628967285
    3. '0' → logprob: -10.13182258605957
    4. ' ' → logprob: -11.00682258605957
    5. '   ' → logprob: -11.13182258605957
    6. '1' → logprob: -11.63182258605957
    7. '(current' → logprob: -11.88182258605957
    8. 'j' → logprob: -12.00682258605957
    9. 'prev' → logprob: -12.75682258605957
    10. '[current' → logprob: -13.13182258605957

Token 99: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0005882986588403583
    2. 'j' → logprob: -7.750588417053223
    3. '[' → logprob: -9.250588417053223
    4. '_j' → logprob: -10.000588417053223
    5. '```' → logprob: -11.875588417053223
    6. ',j' → logprob: -12.750588417053223
    7. ' [' → logprob: -13.500588417053223
    8. '=j' → logprob: -13.750588417053223
    9. '   ' → logprob: -14.250588417053223
    10. '[i' → logprob: -14.500588417053223

Token 100: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42592835426330566
    2. ',' → logprob: -1.5509283542633057
    3. ')
' → logprob: -2.1759283542633057
    4. '
' → logprob: -5.425928115844727
    5. ' ,' → logprob: -5.925928115844727
    6. ' )' → logprob: -6.175928115844727
    7. ',)' → logprob: -6.300928115844727
    8. '[' → logprob: -6.425928115844727
    9. ')]' → logprob: -6.425928115844727
    10. ']' → logprob: -6.800928115844727

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032159775495529175
    2. '```' → logprob: -4.157159805297852
    3. 'while' → logprob: -5.157159805297852
    4. ' while' → logprob: -5.282159805297852
    5. '1' → logprob: -5.657159805297852
    6. '0' → logprob: -7.282159805297852
    7. 'While' → logprob: -8.157159805297852
    8. '``' → logprob: -8.657159805297852
    9. ',' → logprob: -9.032159805297852
    10. '           ' → logprob: -9.657159805297852

Token 102: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.554935872554779
    2. 'count' → logprob: -1.6799359321594238
    3. 'height' → logprob: -2.054935932159424
    4. 'pos' → logprob: -3.179935932159424
    5. '       ' → logprob: -3.429935932159424
    6. 'h' → logprob: -4.929935932159424
    7. 'cnt' → logprob: -4.929935932159424
    8. 'last' → logprob: -5.054935932159424
    9. 'start' → logprob: -5.179935932159424
    10. ' while' → logprob: -6.179935932159424

Token 103: ' stack' (ID: 10825)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2829185426235199
    2. 'c' → logprob: -1.4079185724258423
    3. ' stack' → logprob: -7.032918453216553
    4. 'stack' → logprob: -7.282918453216553
    5. ' ' → logprob: -9.907918930053711
    6. 'j' → logprob: -10.157918930053711
    7. '   ' → logprob: -10.407918930053711
    8. ' j' → logprob: -10.532918930053711
    9. '    ' → logprob: -11.157918930053711
    10. ' not' → logprob: -11.157918930053711

Token 104: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0025081203784793615
    2. ' and' → logprob: -6.002508163452148
    3. 'and' → logprob: -10.377508163452148
    4. ' [-' → logprob: -14.127508163452148
    5. '```' → logprob: -15.377508163452148
    6. '[' → logprob: -16.25250816345215
    7. ' ' → logprob: -16.37750816345215
    8. '][-' → logprob: -16.62750816345215
    9. '   ' → logprob: -16.75250816345215
    10. ':' → logprob: -17.00250816345215

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025633294717408717
    2. '0' → logprob: -8.625256538391113
    3. '][' → logprob: -10.250256538391113
    4. ' ' → logprob: -10.500256538391113
    5. '   ' → logprob: -11.625256538391113
    6. '[' → logprob: -12.875256538391113
    7. '```' → logprob: -15.000256538391113
    8. '()[' → logprob: -15.125256538391113
    9. ' ][' → logprob: -15.500256538391113
    10. '    ' → logprob: -15.687756538391113

Token 106: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.016613829880952835
    2. '][' → logprob: -4.141613960266113
    3. '>[' → logprob: -7.891613960266113
    4. ' [' → logprob: -9.266613960266113
    5. ' ][' → logprob: -10.141613960266113
    6. ')[' → logprob: -10.641613960266113
    7. '()[' → logprob: -10.766613960266113
    8. '"][' → logprob: -12.141613960266113
    9. ':' → logprob: -12.766613960266113
    10. '   ' → logprob: -12.891613960266113

Token 107: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0046271225437521935
    2. '0' → logprob: -5.379627227783203
    3. ' ' → logprob: -12.254627227783203
    4. '
' → logprob: -13.754627227783203
    5. '   ' → logprob: -14.254627227783203
    6. '][' → logprob: -16.379627227783203
    7. '```' → logprob: -16.879627227783203
    8. '

' → logprob: -16.879627227783203
    9. '  ' → logprob: -17.254627227783203
    10. '[' → logprob: -17.379627227783203

Token 108: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.009944374673068523
    2. ' >' → logprob: -4.634944438934326
    3. ']>' → logprob: -9.384943962097168
    4. ']' → logprob: -9.634943962097168
    5. '>=' → logprob: -11.384943962097168
    6. ')>' → logprob: -11.759943962097168
    7. ')' → logprob: -12.384943962097168
    8. ' ' → logprob: -12.759943962097168
    9. ']>=' → logprob: -12.884943962097168
    10. '">' → logprob: -13.134943962097168

Token 109: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0014504714636132121
    2. ' >' → logprob: -6.876450538635254
    3. '>=' → logprob: -7.876450538635254
    4. '<=' → logprob: -10.751450538635254
    5. '<' → logprob: -11.126450538635254
    6. '>
' → logprob: -15.251450538635254
    7. '==' → logprob: -15.376450538635254
    8. ' >=' → logprob: -15.501450538635254
    9. '()>' → logprob: -15.751450538635254
    10. '＞' → logprob: -15.751450538635254

Token 110: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002189279766753316
    2. ' c' → logprob: -6.1271891593933105
    3. '   ' → logprob: -13.127189636230469
    4. 'current' → logprob: -14.127189636230469
    5. ' ' → logprob: -14.502189636230469
    6. '  ' → logprob: -14.877189636230469
    7. '	c' → logprob: -15.377189636230469
    8. '
' → logprob: -15.877189636230469
    9. '    ' → logprob: -16.62718963623047
    10. ' current' → logprob: -16.87718963623047

Token 111: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.25
    3. 'j' → logprob: -17.375
    4. '_i' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. 'urrent' → logprob: -19.75
    7. '_c' → logprob: -21.125
    8. '[j' → logprob: -21.5
    9. 'current' → logprob: -21.75
    10. '_js' → logprob: -22.25

Token 112: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023261552676558495
    2. ':
' → logprob: -3.773261547088623
    3. '):
' → logprob: -12.773262023925781
    4. ':
' → logprob: -12.773262023925781
    5. ':

' → logprob: -12.898262023925781
    6. '):' → logprob: -13.398262023925781
    7. ' :' → logprob: -13.648262023925781
    8. '   ' → logprob: -13.898262023925781
    9. 'stack' → logprob: -14.898262023925781
    10. '>:' → logprob: -14.898262023925781

Token 113: '           ' (ID: 352)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6105933785438538
    2. '           ' → logprob: -1.235593318939209
    3. ' stack' → logprob: -2.235593318939209
    4. '       ' → logprob: -2.860593318939209
    5. '	stack' → logprob: -6.485593318939209
    6. '_stack' → logprob: -8.860593795776367
    7. 'Stack' → logprob: -9.360593795776367
    8. '(stack' → logprob: -9.610593795776367
    9. '        ' → logprob: -9.735593795776367
    10. '.stack' → logprob: -9.860593795776367

Token 114: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.16729150712490082
    2. ' stack' → logprob: -1.917291522026062
    3. '           ' → logprob: -5.167291641235352
    4. '	stack' → logprob: -7.542291641235352
    5. '       ' → logprob: -7.792291641235352
    6. '_stack' → logprob: -9.042291641235352
    7. 'Stack' → logprob: -9.167291641235352
    8. '               ' → logprob: -9.792291641235352
    9. '   ' → logprob: -10.167291641235352
    10. '.stack' → logprob: -10.292291641235352

Token 115: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001256303396075964
    2. '.' → logprob: -6.876256465911865
    3. '.app' → logprob: -8.876255989074707
    4. ' .' → logprob: -9.626255989074707
    5. '].' → logprob: -11.376255989074707
    6. '.ap' → logprob: -12.751255989074707
    7. '[-' → logprob: -13.251255989074707
    8. ').' → logprob: -14.126255989074707
    9. 'append' → logprob: -15.126255989074707
    10. '>.' → logprob: -15.626255989074707

Token 116: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00396762415766716
    2. '(' → logprob: -5.628967761993408
    3. '(c' → logprob: -8.37896728515625
    4. ' (' → logprob: -9.37896728515625
    5. ' ((' → logprob: -10.25396728515625
    6. '   ' → logprob: -11.37896728515625
    7. '(
' → logprob: -13.25396728515625
    8. ' ' → logprob: -13.25396728515625
    9. '  ' → logprob: -13.50396728515625
    10. '(('' → logprob: -13.75396728515625

Token 117: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00029625516617670655
    2. ' c' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.875296592712402
    4. 'current' → logprob: -16.875295639038086
    5. ')c' → logprob: -18.125295639038086
    6. ' ' → logprob: -18.625295639038086
    7. '	c' → logprob: -19.375295639038086
    8. '  ' → logprob: -20.250295639038086
    9. '
' → logprob: -20.500295639038086
    10. 'cation' → logprob: -20.750295639038086

Token 118: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.4121114822482923e-06
    2. 'j' → logprob: -14.000003814697266
    3. ',' → logprob: -14.250003814697266
    4. ' _' → logprob: -14.875003814697266
    5. '_' → logprob: -14.875003814697266
    6. ' ' → logprob: -15.250003814697266
    7. '   ' → logprob: -15.500003814697266
    8. '_,' → logprob: -15.750003814697266
    9. '_js' → logprob: -16.250003814697266
    10. '_i' → logprob: -16.875003814697266

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007367274374701083
    2. ' ,' → logprob: -7.375736713409424
    3. ',j' → logprob: -9.125737190246582
    4. 'j' → logprob: -14.500737190246582
    5. '),' → logprob: -14.875737190246582
    6. ',
' → logprob: -16.000736236572266
    7. '   ' → logprob: -16.250736236572266
    8. ')' → logprob: -16.500736236572266
    9. ' ' → logprob: -16.750736236572266
    10. '‌,' → logprob: -16.875736236572266

Token 120: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08900947868824005
    2. ' j' → logprob: -2.4640095233917236
    3. ' ' → logprob: -10.464009284973145
    4. '   ' → logprob: -10.839009284973145
    5. '  ' → logprob: -11.589009284973145
    6. '1' → logprob: -11.589009284973145
    7. '    ' → logprob: -13.714009284973145
    8. '	j' → logprob: -13.964009284973145
    9. '$j' → logprob: -15.464009284973145
    10. ')' → logprob: -15.464009284973145

Token 121: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.22668540477752686
    2. '))
' → logprob: -1.6016854047775269
    3. '       ' → logprob: -6.976685523986816
    4. ')' → logprob: -9.101685523986816
    5. '))
' → logprob: -9.601685523986816
    6. '           ' → logprob: -9.976685523986816
    7. '   ' → logprob: -10.226685523986816
    8. '));' → logprob: -11.101685523986816
    9. ' ))' → logprob: -11.101685523986816
    10. ' ))
' → logprob: -11.101685523986816

Token 122: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.17633014917373657
    2. '       ' → logprob: -1.9263300895690918
    3. 'elif' → logprob: -4.426330089569092
    4. ' else' → logprob: -5.551330089569092
    5. 'while' → logprob: -10.30133056640625
    6. '```' → logprob: -10.42633056640625
    7. ' elif' → logprob: -10.55133056640625
    8. '   ' → logprob: -10.92633056640625
    9. ')' → logprob: -11.30133056640625
    10. '	' → logprob: -13.05133056640625

Token 123: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03539976477622986
    2. 'elif' → logprob: -4.035399913787842
    3. 'else' → logprob: -4.785399913787842
    4. 'continue' (adapté à ' continue') → logprob: -5.035399913787842
    5. ')' → logprob: -7.285399913787842
    6. '   ' → logprob: -7.910399913787842
    7. ' continue' → logprob: -8.160399436950684
    8. ' else' → logprob: -8.535399436950684
    9. '
' → logprob: -8.535399436950684
    10. 'while' → logprob: -8.785399436950684

Token 124: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11721526086330414
    2. '       ' → logprob: -2.242215156555176
    3. '   ' → logprob: -5.992215156555176
    4. ' while' → logprob: -7.242215156555176
    5. 'if' → logprob: -7.867215156555176
    6. '```' → logprob: -8.492215156555176
    7. 'else' → logprob: -8.742215156555176
    8. 'elif' → logprob: -8.992215156555176
    9. '        
' → logprob: -9.117215156555176
    10. '
' → logprob: -9.992215156555176

Token 125: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.28913626074790955
    2. '       ' → logprob: -1.414136290550232
    3. ' while' → logprob: -5.1641364097595215
    4. '   ' → logprob: -6.6641364097595215
    5. '```' → logprob: -8.164135932922363
    6. '
' → logprob: -8.664135932922363
    7. 'else' → logprob: -9.039135932922363
    8. '        
' → logprob: -9.414135932922363
    9. 'elif' → logprob: -9.539135932922363
    10. 'count' → logprob: -10.164135932922363

Token 126: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.27288463711738586
    2. 'height' → logprob: -1.5228846073150635
    3. 'else' → logprob: -3.8978846073150635
    4. 'count' → logprob: -8.647884368896484
    5. '   ' → logprob: -9.022884368896484
    6. '       ' → logprob: -10.272884368896484
    7. 'h' → logprob: -10.522884368896484
    8. 'pop' → logprob: -11.397884368896484
    9. '_,' → logprob: -11.647884368896484
    10. '
' → logprob: -11.772884368896484

Token 127: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.008694934658706188
    2. ' stack' → logprob: -4.758695125579834
    3. '(stack' → logprob: -10.508694648742676
    4. 'c' → logprob: -11.008694648742676
    5. 'not' → logprob: -11.383694648742676
    6. ' not' → logprob: -12.008694648742676
    7. '	stack' → logprob: -12.133694648742676
    8. ' c' → logprob: -12.133694648742676
    9. '
' → logprob: -12.883694648742676
    10. '_stack' → logprob: -13.633694648742676

Token 128: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -7.123899558791891e-05
    2. ' and' → logprob: -9.62507152557373
    3. 'and' → logprob: -13.25007152557373
    4. '][-' → logprob: -14.25007152557373
    5. ')' → logprob: -14.87507152557373
    6. ':' → logprob: -15.25007152557373
    7. 'else' → logprob: -15.25007152557373
    8. '-' → logprob: -15.37507152557373
    9. '.pop' → logprob: -15.50007152557373
    10. '
' → logprob: -15.62507152557373

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -12.12501049041748
    3. '```' → logprob: -13.56251049041748
    4. '0' → logprob: -14.31251049041748
    5. '
' → logprob: -14.81251049041748
    6. '   ' → logprob: -14.81251049041748
    7. 'j' → logprob: -15.12501049041748
    8. '(' → logprob: -15.18751049041748
    9. '-' → logprob: -15.25001049041748
    10. '2' → logprob: -15.62501049041748

Token 130: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24207597970962524
    2. ')[' → logprob: -2.1170759201049805
    3. '][' → logprob: -2.3670759201049805
    4. '```' → logprob: -8.49207592010498
    5. ')][' → logprob: -8.61707592010498
    6. ')' → logprob: -9.49207592010498
    7. '>[' → logprob: -9.61707592010498
    8. '0' → logprob: -9.99207592010498
    9. '   ' → logprob: -9.99207592010498
    10. ' ][' → logprob: -9.99207592010498

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. '1' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '
' → logprob: -14.25001049041748
    5. '   ' → logprob: -15.18751049041748
    6. '```' → logprob: -15.87501049041748
    7. '[' → logprob: -16.500011444091797
    8. '...' → logprob: -16.625011444091797
    9. '

' → logprob: -16.687511444091797
    10. '(' → logprob: -16.937511444091797

Token 132: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.239264577627182
    2. ' >' → logprob: -1.7392646074295044
    3. ']' → logprob: -4.614264488220215
    4. '==' → logprob: -4.739264488220215
    5. '>=' → logprob: -4.739264488220215
    6. ' >=' → logprob: -5.489264488220215
    7. ')' → logprob: -5.614264488220215
    8. ' ==' → logprob: -6.614264488220215
    9. ' ' → logprob: -8.364264488220215
    10. '=' → logprob: -9.114264488220215

Token 133: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.08590380847454071
    2. ' >' → logprob: -2.5859038829803467
    3. '>=' → logprob: -5.085903644561768
    4. ' >=' → logprob: -7.585903644561768
    5. '==' → logprob: -8.210904121398926
    6. ' ==' → logprob: -11.835904121398926
    7. ']' → logprob: -12.335904121398926
    8. '=' → logprob: -12.460904121398926
    9. ' ' → logprob: -12.960904121398926
    10. '```' → logprob: -13.335904121398926

Token 134: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10021507740020752
    2. ' c' → logprob: -2.350214958190918
    3. '=' → logprob: -12.600214958190918
    4. ' ' → logprob: -13.600214958190918
    5. 'current' → logprob: -13.725214958190918
    6. '0' → logprob: -14.475214958190918
    7. '=c' → logprob: -14.475214958190918
    8. '
' → logprob: -14.850214958190918
    9. ' current' → logprob: -14.850214958190918
    10. '_c' → logprob: -15.475214958190918

Token 135: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.011373155459296e-05
    2. 'j' → logprob: -10.750030517578125
    3. 'c' → logprob: -12.500030517578125
    4. '_c' → logprob: -13.000030517578125
    5. 'stack' → logprob: -13.375030517578125
    6. 'current' → logprob: -14.125030517578125
    7. '```' → logprob: -15.500030517578125
    8. '_' → logprob: -16.875030517578125
    9. ' c' → logprob: -17.000030517578125
    10. '_i' → logprob: -17.625030517578125

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6329261660575867
    2. ':
' → logprob: -0.7579261660575867
    3. ',' → logprob: -8.382925987243652
    4. '):
' → logprob: -9.882925987243652
    5. ':

' → logprob: -11.632925987243652
    6. ' :
' → logprob: -11.632925987243652
    7. '):' → logprob: -11.757925987243652
    8. ':
' → logprob: -11.882925987243652
    9. ',
' → logprob: -12.882925987243652
    10. '[' → logprob: -13.007925987243652

Token 137: '           ' (ID: 352)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.2217586487531662
    2. '       ' → logprob: -2.5967586040496826
    3. '           ' → logprob: -2.7217586040496826
    4. ' height' → logprob: -2.9717586040496826
    5. '```' → logprob: -6.221758842468262
    6. ',' → logprob: -6.346758842468262
    7. 'h' → logprob: -6.971758842468262
    8. 'while' → logprob: -6.971758842468262
    9. 'pop' → logprob: -8.471758842468262
    10. '   ' → logprob: -8.471758842468262

Token 138: ' since' (ID: 3630)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.01855970360338688
    2. 'h' → logprob: -5.01855993270874
    3. 'while' → logprob: -5.01855993270874
    4. '       ' → logprob: -6.39355993270874
    5. '   ' → logprob: -6.76855993270874
    6. 'last' → logprob: -7.26855993270874
    7. 'l' → logprob: -7.64355993270874
    8. ' height' → logprob: -7.76855993270874
    9. '           ' → logprob: -8.643559455871582
    10. 'count' → logprob: -9.268559455871582

Token 139: ' =' (ID: 314)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.7590464949607849
    2. '_height' → logprob: -1.2590465545654297
    3. ' stack' → logprob: -3.2590465545654297
    4. ',' → logprob: -3.5090465545654297
    5. '_idx' → logprob: -3.5090465545654297
    6. '_' → logprob: -3.6340465545654297
    7. 'stack' → logprob: -4.00904655456543
    8. '_index' → logprob: -4.25904655456543
    9. '_len' → logprob: -4.38404655456543
    10. ' =' → logprob: -4.75904655456543

Token 140: ' ' (ID: 220)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009466234594583511
    2. '0' → logprob: -5.134466171264648
    3. ' j' → logprob: -6.134466171264648
    4. 'None' → logprob: -7.009466171264648
    5. 'stack' → logprob: -7.759466171264648
    6. ' None' → logprob: -10.759466171264648
    7. ' ' → logprob: -12.259466171264648
    8. ' stack' → logprob: -12.384466171264648
    9. '-' → logprob: -14.134466171264648
    10. '$j' → logprob: -14.384466171264648

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14211881160736084
    2. 'j' → logprob: -2.5171189308166504
    3. 'stack' → logprob: -3.1421189308166504
    4. 'None' → logprob: -4.76711893081665
    5. ' stack' → logprob: -11.017118453979492
    6. ' j' → logprob: -11.017118453979492
    7. ' ' → logprob: -11.392118453979492
    8. '(stack' → logprob: -11.517118453979492
    9. '[j' → logprob: -11.892118453979492
    10. ' None' → logprob: -12.142118453979492

Token 142: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09540573507547379
    2. 'while' → logprob: -2.7204058170318604
    3. ' while' → logprob: -3.7204058170318604
    4. '
' → logprob: -7.845405578613281
    5. ',' → logprob: -8.470405578613281
    6. '       ' → logprob: -8.720405578613281
    7. 'While' → logprob: -10.220405578613281
    8. '   ' → logprob: -10.470405578613281
    9. '```' → logprob: -11.095405578613281
    10. ',
' → logprob: -11.345405578613281

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2477630078792572
    2. 'while' → logprob: -1.8727630376815796
    3. ' while' → logprob: -2.74776291847229
    4. '       ' → logprob: -7.122763156890869
    5. '```' → logprob: -7.997763156890869
    6. '   ' → logprob: -8.872762680053711
    7. 'While' → logprob: -8.872762680053711
    8. '
' → logprob: -9.122762680053711
    9. '	while' → logprob: -10.247762680053711
    10. ',' → logprob: -10.872762680053711

Token 144: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.004163876175880432
    2. ' while' → logprob: -5.50416374206543
    3. '           ' → logprob: -9.37916374206543
    4. '               ' → logprob: -14.62916374206543
    5. '	while' → logprob: -16.00416374206543
    6. 'While' → logprob: -16.12916374206543
    7. '
' → logprob: -16.25416374206543
    8. '       ' → logprob: -16.75416374206543
    9. 'for' → logprob: -16.87916374206543
    10. '```' → logprob: -17.25416374206543

Token 145: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.029787981882691383
    2. ' stack' → logprob: -3.529788017272949
    3. 'len' → logprob: -10.77978801727295
    4. '(stack' → logprob: -11.15478801727295
    5. '	stack' → logprob: -14.15478801727295
    6. ' len' → logprob: -14.15478801727295
    7. ' ' → logprob: -15.27978801727295
    8. 'True' → logprob: -15.52978801727295
    9. '   ' → logprob: -15.77978801727295
    10. 'st' → logprob: -16.279787063598633

Token 146: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.014538837596774101
    2. ' and' → logprob: -4.264538764953613
    3. 'and' → logprob: -7.889538764953613
    4. '```' → logprob: -15.514538764953613
    5. '][-' → logprob: -16.26453971862793
    6. '-' → logprob: -16.38953971862793
    7. '[
' → logprob: -17.01453971862793
    8. '	and' → logprob: -17.01453971862793
    9. '
' → logprob: -17.13953971862793
    10. '&&' → logprob: -17.13953971862793

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.625005722045898
    3. '
' → logprob: -13.875005722045898
    4. '(' → logprob: -14.500005722045898
    5. '-' → logprob: -14.750005722045898
    6. '```' → logprob: -15.875005722045898
    7. '[' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.6250057220459
    9. '`' → logprob: -16.6875057220459
    10. 'len' → logprob: -16.7500057220459

Token 148: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22594000399112701
    2. '][' → logprob: -1.6009399890899658
    3. '0' → logprob: -8.225939750671387
    4. ')[' → logprob: -8.975939750671387
    5. '()[' → logprob: -10.225939750671387
    6. '```' → logprob: -10.600939750671387
    7. '>[' → logprob: -10.975939750671387
    8. ' [' → logprob: -11.475939750671387
    9. ' ][' → logprob: -11.850939750671387
    10. '   ' → logprob: -12.100939750671387

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۰' → logprob: -17.25
    4. '```' → logprob: -17.75
    5. '
' → logprob: -17.875
    6. '1' → logprob: -18.375
    7. '[' → logprob: -19.1875
    8. '   ' → logprob: -19.75
    9. '][' → logprob: -19.875
    10. '০' → logprob: -19.9375

Token 150: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12769126892089844
    2. ' >' → logprob: -2.1276912689208984
    3. '>=' → logprob: -7.377691268920898
    4. ' >=' → logprob: -9.002691268920898
    5. ' ' → logprob: -11.752691268920898
    6. '>
' → logprob: -13.627691268920898
    7. ']' → logprob: -13.627691268920898
    8. '[' → logprob: -14.252691268920898
    9. 'and' → logprob: -14.377691268920898
    10. '   ' → logprob: -14.502691268920898

Token 151: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10054641216993332
    2. ' >' → logprob: -2.350546360015869
    3. '>=' → logprob: -8.100546836853027
    4. ' >=' → logprob: -10.475546836853027
    5. ' ' → logprob: -12.600546836853027
    6. '>
' → logprob: -13.350546836853027
    7. '   ' → logprob: -14.975546836853027
    8. '```' → logprob: -14.975546836853027
    9. '>end' → logprob: -15.100546836853027
    10. '>C' → logprob: -15.225546836853027

Token 152: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01815006136894226
    2. ' c' → logprob: -4.0181498527526855
    3. 'stack' → logprob: -17.268150329589844
    4. ' ' → logprob: -17.268150329589844
    5. '   ' → logprob: -17.393150329589844
    6. ')c' → logprob: -17.393150329589844
    7. 'current' → logprob: -17.518150329589844
    8. '	c' → logprob: -18.143150329589844
    9. '0' → logprob: -18.393150329589844
    10. '`' → logprob: -18.393150329589844

Token 153: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.650518920039758e-06
    2. 'j' → logprob: -12.750003814697266
    3. '_i' → logprob: -15.250003814697266
    4. '[j' → logprob: -15.625003814697266
    5. '[' → logprob: -16.250003814697266
    6. '```' → logprob: -16.500003814697266
    7. '_' → logprob: -17.375003814697266
    8. 'stack' → logprob: -17.500003814697266
    9. '
' → logprob: -17.875003814697266
    10. '_c' → logprob: -18.750003814697266

Token 154: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1631712168455124
    2. ':' → logprob: -1.9131711721420288
    3. ' and' → logprob: -6.038171291351318
    4. 'and' → logprob: -8.41317081451416
    5. ' :
' → logprob: -9.16317081451416
    6. '):
' → logprob: -9.53817081451416
    7. ',' → logprob: -9.91317081451416
    8. '[' → logprob: -10.91317081451416
    9. '   ' → logprob: -10.91317081451416
    10. ' :' → logprob: -11.28817081451416

Token 155: '               ' (ID: 506)
  Prédit: ' height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' height' → logprob: -0.7905944585800171
    2. 'height' → logprob: -1.915594458580017
    3. ' size' → logprob: -2.4155945777893066
    4. ' since' → logprob: -2.4155945777893066
    5. '               ' → logprob: -2.9155945777893066
    6. ',' → logprob: -3.1655945777893066
    7. ' h' → logprob: -4.165594577789307
    8. 'size' → logprob: -4.290594577789307
    9. 'since' → logprob: -4.290594577789307
    10. ' pop' → logprob: -4.665594577789307

Token 156: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' (adapté à ' height') → logprob: -0.025667617097496986
    2. 'h' → logprob: -4.400667667388916
    3. ' height' → logprob: -4.650667667388916
    4. '               ' → logprob: -6.150667667388916
    5. '           ' → logprob: -7.650667667388916
    6. 'pop' → logprob: -8.650667190551758
    7. 'c' → logprob: -9.025667190551758
    8. '   ' → logprob: -9.025667190551758
    9. '       ' → logprob: -9.650667190551758
    10. '                   ' → logprob: -9.900667190551758

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.93448489275761e-05
    2. '=' → logprob: -10.000079154968262
    3. ',height' → logprob: -11.250079154968262
    4. ' ,' → logprob: -11.750079154968262
    5. ',width' → logprob: -12.875079154968262
    6. '               ' → logprob: -13.250079154968262
    7. ',length' → logprob: -13.250079154968262
    8. ',index' → logprob: -13.875079154968262
    9. ',h' → logprob: -14.375079154968262
    10. ',j' → logprob: -14.375079154968262

Token 158: ' since' (ID: 3630)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6640023589134216
    2. 'pos' → logprob: -0.9140023589134216
    3. 'idx' → logprob: -2.6640024185180664
    4. 'position' → logprob: -5.664002418518066
    5. 'since' → logprob: -5.789002418518066
    6. 'width' → logprob: -5.914002418518066
    7. 'ind' → logprob: -6.664002418518066
    8. 'left' → logprob: -6.664002418518066
    9. ' index' → logprob: -6.789002418518066
    10. 'start' → logprob: -7.414002418518066

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751529917120934
    2. ' =' → logprob: -3.5297515392303467
    3. ',' → logprob: -14.154751777648926
    4. ' ' → logprob: -15.529751777648926
    5. '_=' → logprob: -17.52975082397461
    6. ')=' → logprob: -17.90475082397461
    7. '=j' → logprob: -18.02975082397461
    8. ')' → logprob: -18.52975082397461
    9. '＝' → logprob: -18.52975082397461
    10. '```' → logprob: -18.52975082397461

Token 160: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.029761601239442825
    2. ' stack' → logprob: -3.529761552810669
    3. '   ' → logprob: -11.77976131439209
    4. '	stack' → logprob: -13.02976131439209
    5. ' ' → logprob: -14.90476131439209
    6. '(stack' → logprob: -15.15476131439209
    7. '    ' → logprob: -16.029762268066406
    8. '  ' → logprob: -16.154762268066406
    9. 'stackoverflow' → logprob: -16.529762268066406
    10. '       ' → logprob: -16.654762268066406

Token 161: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.002129087457433343
    2. '[-' → logprob: -6.377129077911377
    3. 'pop' → logprob: -7.877129077911377
    4. '.' → logprob: -10.127129554748535
    5. '-' → logprob: -12.377129554748535
    6. '-pop' → logprob: -14.127129554748535
    7. ' pop' → logprob: -14.502129554748535
    8. '	pop' → logprob: -14.627129554748535
    9. '].' → logprob: -15.002129554748535
    10. '[:-' → logprob: -15.377129554748535

Token 162: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6169618964195251
    2. '()' → logprob: -1.11696195602417
    3. '
' → logprob: -2.74196195602417
    4. '<|end|>' → logprob: -3.24196195602417
    5. '()[' → logprob: -4.99196195602417
    6. '()(' → logprob: -5.61696195602417
    7. '<|end|>' → logprob: -5.86696195602417
    8. '[' → logprob: -5.86696195602417
    9. '(height' → logprob: -5.99196195602417
    10. '#' → logprob: -6.24196195602417

Token 163: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47715213894844055
    2. ',' → logprob: -1.4771521091461182
    3. '               ' → logprob: -2.477152109146118
    4. 'height' → logprob: -3.977152109146118
    5. 'j' → logprob: -4.977152347564697
    6. ' j' → logprob: -5.102152347564697
    7. ' since' → logprob: -5.102152347564697
    8. ' height' → logprob: -5.477152347564697
    9. 'since' → logprob: -5.477152347564697
    10. '[' → logprob: -5.977152347564697

Token 164: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.008813104592263699
    2. ' max' → logprob: -5.00881290435791
    3. '(max' → logprob: -7.00881290435791
    4. 'width' → logprob: -7.25881290435791
    5. 'area' → logprob: -8.75881290435791
    6. 'since' → logprob: -9.50881290435791
    7. 'print' → logprob: -9.63381290435791
    8. 'w' → logprob: -10.13381290435791
    9. '(' → logprob: -10.50881290435791
    10. 'size' → logprob: -11.13381290435791

Token 165: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.011843803338706493
    2. '_area' → logprob: -4.636843681335449
    3. 'rect' → logprob: -6.511843681335449
    4. 'area' → logprob: -8.38684368133545
    5. '_rectangle' → logprob: -8.88684368133545
    6. 'max' → logprob: -9.26184368133545
    7. '_height' → logprob: -10.76184368133545
    8. '(max' → logprob: -11.13684368133545
    9. '_width' → logprob: -11.26184368133545
    10. 'Rect' → logprob: -11.38684368133545

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.225449338555336
    2. '=' → logprob: -1.6004493236541748
    3. '=max' → logprob: -10.475449562072754
    4. 'max' → logprob: -12.475449562072754
    5. ',' → logprob: -12.725449562072754
    6. ' ' → logprob: -14.975449562072754
    7. '```' → logprob: -15.475449562072754
    8. ' max' → logprob: -15.475449562072754
    9. 's' → logprob: -15.600449562072754
    10. ')' → logprob: -15.850449562072754

Token 167: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16022971272468567
    2. ' max' → logprob: -1.9102296829223633
    3. '(max' → logprob: -12.535229682922363
    4. '	max' → logprob: -13.535229682922363
    5. '[max' → logprob: -15.035229682922363
    6. '=max' → logprob: -15.160229682922363
    7. '                   ' → logprob: -17.91023063659668
    8. 'height' → logprob: -17.91023063659668
    9. '.max' → logprob: -18.16023063659668
    10. '   ' → logprob: -18.16023063659668

Token 168: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0007289938512258232
    2. 'max' → logprob: -7.250729084014893
    3. ' max' → logprob: -11.375728607177734
    4. '(' → logprob: -12.000728607177734
    5. '[max' → logprob: -14.875728607177734
    6. ',max' → logprob: -14.875728607177734
    7. '=max' → logprob: -15.625728607177734
    8. ' (' → logprob: -15.750728607177734
    9. '(
' → logprob: -15.875728607177734
    10. '	max' → logprob: -16.000728607177734

Token 169: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0016593512846156955
    2. '(max' → logprob: -7.876659393310547
    3. 'height' → logprob: -8.001659393310547
    4. 'rect' → logprob: -8.126659393310547
    5. 'ct' → logprob: -8.376659393310547
    6. '(height' → logprob: -8.626659393310547
    7. 'max' → logprob: -9.626659393310547
    8. '(' → logprob: -10.876659393310547
    9. 'ect' → logprob: -10.876659393310547
    10. 't' → logprob: -11.001659393310547

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021259987261146307
    2. ',
' → logprob: -9.000212669372559
    3. ' ,' → logprob: -9.875212669372559
    4. ',max' → logprob: -10.625212669372559
    5. ',height' → logprob: -12.000212669372559
    6. 'height' → logprob: -13.125212669372559
    7. 'max' → logprob: -13.125212669372559
    8. ',
' → logprob: -13.750212669372559
    9. ',(' → logprob: -14.125212669372559
    10. ',

' → logprob: -15.375212669372559

Token 171: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.20522816479206085
    2. ' height' → logprob: -1.7052282094955444
    3. '(height' → logprob: -5.580228328704834
    4. ' (' → logprob: -11.330227851867676
    5. ' ' → logprob: -11.580227851867676
    6. '	height' → logprob: -12.830227851867676
    7. '   ' → logprob: -13.205227851867676
    8. '
' → logprob: -13.330227851867676
    9. '(' → logprob: -13.580227851867676
    10. '  ' → logprob: -13.705227851867676

Token 172: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023788094520568848
    2. '*' → logprob: -3.7737879753112793
    3. '*(' → logprob: -7.523787975311279
    4. ' ' → logprob: -13.273788452148438
    5. ' *(' → logprob: -15.023788452148438
    6. '   ' → logprob: -15.523788452148438
    7. ')' → logprob: -17.148788452148438
    8. '```' → logprob: -17.148788452148438
    9. '  ' → logprob: -17.273788452148438
    10. ' ' → logprob: -18.148788452148438

Token 173: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00788578949868679
    2. '(s' → logprob: -5.007885932922363
    3. ' (' → logprob: -6.757885932922363
    4. '(' → logprob: -12.882885932922363
    5. '(js' → logprob: -13.132885932922363
    6. '((' → logprob: -13.757885932922363
    7. '(abs' → logprob: -14.007885932922363
    8. '(now' → logprob: -14.132885932922363
    9. '   ' → logprob: -14.757885932922363
    10. '(J' → logprob: -16.507884979248047

Token 174: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.003577618859708309
    2. ' j' → logprob: -5.878577709197998
    3. '(j' → logprob: -7.253577709197998
    4. 'since' → logprob: -10.37857723236084
    5. ' (' → logprob: -11.37857723236084
    6. '(' → logprob: -12.00357723236084
    7. '(s' → logprob: -12.75357723236084
    8. '   ' → logprob: -12.87857723236084
    9. '_j' → logprob: -13.50357723236084
    10. '
' → logprob: -13.87857723236084

Token 175: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023429367691278458
    2. '-' → logprob: -3.7734293937683105
    3. '-s' → logprob: -8.648428916931152
    4. ' since' → logprob: -12.398428916931152
    5. ' ' → logprob: -12.898428916931152
    6. 'since' → logprob: -14.023428916931152
    7. 'Since' → logprob: -15.148428916931152
    8. ' minus' → logprob: -15.773428916931152
    9. '-minus' → logprob: -16.64842987060547
    10. ' ' → logprob: -16.89842987060547

Token 176: ' since' (ID: 3630)
  Prédit: 'since'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'since' → logprob: -0.0012792840134352446
    2. ' since' → logprob: -6.751279354095459
    3. '1' → logprob: -9.1262788772583
    4. ' ' → logprob: -15.8762788772583
    5. 'because' → logprob: -16.376279830932617
    6. '   ' → logprob: -16.876279830932617
    7. '(s' → logprob: -17.001279830932617
    8. 'Since' → logprob: -17.251279830932617
    9. '(' → logprob: -18.001279830932617
    10. '2' → logprob: -19.376279830932617

Token 177: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005837318487465382
    2. '))
' → logprob: -5.505837440490723
    3. ')' → logprob: -6.505837440490723
    4. ' ))' → logprob: -8.380837440490723
    5. '))

' → logprob: -11.505837440490723
    6. ')
' → logprob: -11.630837440490723
    7. ' ))
' → logprob: -12.130837440490723
    8. ')))' → logprob: -13.005837440490723
    9. '1' → logprob: -13.130837440490723
    10. ' )' → logprob: -13.255837440490723

Token 178: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12402612715959549
    2. ' since' → logprob: -3.12402606010437
    3. '           ' → logprob: -3.12402606010437
    4. ')' → logprob: -4.374026298522949
    5. ',' → logprob: -4.999026298522949
    6. ' stack' → logprob: -6.499026298522949
    7. 'since' → logprob: -6.624026298522949
    8. 'stack' → logprob: -6.749026298522949
    9. '```' → logprob: -6.999026298522949
    10. '
' → logprob: -7.124026298522949

Token 179: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.05267950892448425
    2. ' stack' → logprob: -3.0526795387268066
    3. '           ' → logprob: -5.552679538726807
    4. ' since' → logprob: -9.677679061889648
    5. 'since' → logprob: -10.052679061889648
    6. '(stack' → logprob: -10.177679061889648
    7. '       ' → logprob: -10.677679061889648
    8. '               ' → logprob: -11.927679061889648
    9. '   ' → logprob: -12.052679061889648
    10. '	stack' → logprob: -12.302679061889648

Token 180: ' c' (ID: 274)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.14161111414432526
    2. ' stack' → logprob: -2.641611099243164
    3. 'c' → logprob: -3.391611099243164
    4. 'since' → logprob: -4.391611099243164
    5. ' since' → logprob: -5.141611099243164
    6. 'len' → logprob: -6.016611099243164
    7. ' c' → logprob: -6.141611099243164
    8. 'not' → logprob: -6.266611099243164
    9. ' not' → logprob: -6.766611099243164
    10. 'height' → logprob: -7.641611099243164

Token 181: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.500108141452074e-05
    2. 'j' → logprob: -10.625035285949707
    3. '<' → logprob: -13.375035285949707
    4. '>' → logprob: -13.500035285949707
    5. '_i' → logprob: -13.875035285949707
    6. '>=' → logprob: -14.125035285949707
    7. 'stack' → logprob: -14.250035285949707
    8. '[' → logprob: -14.375035285949707
    9. '_' → logprob: -14.625035285949707
    10. '_stack' → logprob: -14.875035285949707

Token 182: ':
' (ID: 734)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.23335000872612
    2. '<' → logprob: -1.6083500385284424
    3. ' !=' → logprob: -5.733349800109863
    4. ' <=' → logprob: -5.983349800109863
    5. ' not' → logprob: -7.483349800109863
    6. '!=' → logprob: -7.983349800109863
    7. ' >' → logprob: -8.233349800109863
    8. ':' → logprob: -8.483349800109863
    9. '<=' → logprob: -8.733349800109863
    10. ' >=' → logprob: -8.983349800109863

Token 183: '               ' (ID: 506)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.09080146998167038
    2. 'stack' → logprob: -2.465801477432251
    3. '               ' → logprob: -6.840801239013672
    4. '(stack' → logprob: -8.465801239013672
    5. '           ' → logprob: -8.715801239013672
    6. '_stack' → logprob: -8.840801239013672
    7. '	stack' → logprob: -9.215801239013672
    8. ',' → logprob: -9.715801239013672
    9. '.stack' → logprob: -9.965801239013672
    10. '       ' → logprob: -11.840801239013672

Token 184: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.026306800544261932
    2. ' stack' → logprob: -3.6513068675994873
    3. '               ' → logprob: -12.776307106018066
    4. '	stack' → logprob: -13.526307106018066
    5. '                   ' → logprob: -14.276307106018066
    6. '(stack' → logprob: -14.651307106018066
    7. '_stack' → logprob: -15.401307106018066
    8. '.stack' → logprob: -15.526307106018066
    9. ' since' → logprob: -15.901307106018066
    10. ' ' → logprob: -16.15130615234375

Token 185: '.append' (ID: 3709)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.31561022996902466
    2. '.append' → logprob: -1.3156101703643799
    3. '.pop' → logprob: -6.065610408782959
    4. '.' → logprob: -11.1906099319458
    5. '[:-' → logprob: -11.5656099319458
    6. 'pop' → logprob: -15.1906099319458
    7. '```' → logprob: -15.3156099319458
    8. 'append' → logprob: -15.6906099319458
    9. '=' → logprob: -16.690610885620117
    10. '.setdefault' → logprob: -16.815610885620117

Token 186: '((' (ID: 2054)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00032998246024362743
    2. '(' → logprob: -8.750329971313477
    3. '((' → logprob: -8.875329971313477
    4. ' (' → logprob: -10.375329971313477
    5. '(C' → logprob: -15.250329971313477
    6. '(current' → logprob: -16.000329971313477
    7. '(
' → logprob: -16.875329971313477
    8. ' ' → logprob: -17.000329971313477
    9. '(stack' → logprob: -17.375329971313477
    10. '(ci' → logprob: -17.375329971313477

Token 187: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.754368223482743e-05
    2. ' c' → logprob: -9.875067710876465
    3. '(c' → logprob: -11.125067710876465
    4. ')c' → logprob: -14.125067710876465
    5. 'cj' → logprob: -15.625067710876465
    6. '(' → logprob: -16.12506675720215
    7. '%c' → logprob: -16.75006675720215
    8. ' (' → logprob: -16.87506675720215
    9. '	c' → logprob: -17.25006675720215
    10. '   ' → logprob: -17.56256675720215

Token 188: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -3.1424973713001236e-05
    2. 'j' → logprob: -10.375031471252441
    3. 'c' → logprob: -16.500030517578125
    4. ',' → logprob: -17.125030517578125
    5. '_c' → logprob: -17.250030517578125
    6. '_i' → logprob: -17.750030517578125
    7. '_,' → logprob: -19.000030517578125
    8. '[' → logprob: -19.500030517578125
    9. ',j' → logprob: -19.500030517578125
    10. '[j' → logprob: -19.625030517578125

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.1557283111615106e-05
    2. ' ,' → logprob: -10.625041961669922
    3. ',s' → logprob: -11.125041961669922
    4. ',j' → logprob: -14.125041961669922
    5. 'since' → logprob: -14.125041961669922
    6. ',
' → logprob: -14.250041961669922
    7. ' since' → logprob: -14.875041961669922
    8. 'Since' → logprob: -17.375041961669922
    9. '),' → logprob: -18.875041961669922
    10. 's' → logprob: -19.000041961669922

Token 190: ' since' (ID: 3630)
  Prédit: 'since'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'since' → logprob: -0.0015100972959771752
    2. ' since' → logprob: -6.501510143280029
    3. 'j' → logprob: -12.126509666442871
    4. '   ' → logprob: -14.501509666442871
    5. 'sin' → logprob: -14.501509666442871
    6. 'because' → logprob: -15.001509666442871
    7. '(s' → logprob: -15.376509666442871
    8. 'Since' → logprob: -15.876509666442871
    9. 'min' → logprob: -15.876509666442871
    10. ' j' → logprob: -16.376510620117188

Token 191: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004237627435941249
    2. ' ))' → logprob: -8.000423431396484
    3. '))
' → logprob: -9.625423431396484
    4. ')' → logprob: -11.250423431396484
    5. ')))' → logprob: -12.000423431396484
    6. '));' → logprob: -14.125423431396484
    7. ' ' → logprob: -14.875423431396484
    8. '   ' → logprob: -15.000423431396484
    9. '))

' → logprob: -15.125423431396484
    10. '<|end|>' → logprob: -15.625423431396484

Token 192: '   ' (ID: 271)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.06993743777275085
    2. '   ' → logprob: -3.0699374675750732
    3. 'else' → logprob: -4.694937229156494
    4. ' prev' → logprob: -4.819937229156494
    5. '       ' → logprob: -6.444937229156494
    6. '
' → logprob: -6.694937229156494
    7. ' else' → logprob: -7.694937229156494
    8. '	prev' → logprob: -7.944937229156494
    9. '           ' → logprob: -9.444937705993652
    10. '```' → logprob: -9.944937705993652

Token 193: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.02539290301501751
    2. ' prev' → logprob: -4.275393009185791
    3. '   ' → logprob: -4.525393009185791
    4. 'print' → logprob: -8.275392532348633
    5. '	prev' → logprob: -10.150392532348633
    6. '
' → logprob: -11.400392532348633
    7. '```' → logprob: -11.525392532348633
    8. '    
' → logprob: -12.525392532348633
    9. ' ' → logprob: -12.650392532348633
    10. '(prev' → logprob: -12.900392532348633

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014184147119522
    2. '=' → logprob: -1.701418399810791
    3. '[:]' → logprob: -12.70141887664795
    4. '[' → logprob: -13.82641887664795
    5. ',' → logprob: -15.20141887664795
    6. '<|end|>' → logprob: -15.82641887664795
    7. '＝' → logprob: -16.201417922973633
    8. ' =)' → logprob: -16.451417922973633
    9. ' ' → logprob: -16.576417922973633
    10. ')' → logprob: -16.576417922973633

Token 195: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014163747429847717
    2. ' current' → logprob: -4.264163970947266
    3. '[current' → logprob: -15.764163970947266
    4. '   ' → logprob: -17.014163970947266
    5. '	current' → logprob: -17.889163970947266
    6. '(current' → logprob: -18.264163970947266
    7. 'c' → logprob: -19.389163970947266
    8. ' ' → logprob: -19.514163970947266
    9. '[' → logprob: -19.514163970947266
    10. '.current' → logprob: -19.639163970947266

Token 196: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5223093032836914
    2. '<|end|>' → logprob: -1.2723093032836914
    3. ')' → logprob: -2.2723093032836914
    4. 'max' → logprob: -4.272309303283691
    5. '```' → logprob: -5.272309303283691
    6. '
' → logprob: -6.397309303283691
    7. '#' → logprob: -7.147309303283691
    8. ']' → logprob: -7.647309303283691
    9. ',' → logprob: -8.147309303283691
    10. '[max' → logprob: -8.272309303283691

Token 197: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0052428836934268475
    2. '(' → logprob: -5.255242824554443
    3. '()' → logprob: -12.005243301391602
    4. 'max' → logprob: -13.005243301391602
    5. ' (' → logprob: -15.505243301391602
    6. '(
' → logprob: -15.505243301391602
    7. '((' → logprob: -16.1302433013916
    8. '('' → logprob: -16.7552433013916
    9. '("' → logprob: -17.1302433013916
    10. '(`' → logprob: -17.5052433013916

Token 199: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -3.249780638725497e-05
    2. 'rect' → logprob: -10.875032424926758
    3. '(max' → logprob: -11.375032424926758
    4. 'max' → logprob: -13.375032424926758
    5. 'Rect' → logprob: -15.125032424926758
    6. '(_' → logprob: -16.625032424926758
    7. '_Rect' → logprob: -16.625032424926758
    8. '(rect' → logprob: -17.250032424926758
    9. '_RECT' → logprob: -17.250032424926758
    10. '_' → logprob: -17.750032424926758

Token 200: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ' )' → logprob: -13.000004768371582
    3. ')
' → logprob: -13.875004768371582
    4. '))' → logprob: -14.750004768371582
    5. '+' → logprob: -15.125004768371582
    6. ')`' → logprob: -15.500004768371582
    7. '`)' → logprob: -15.750004768371582
    8. '())' → logprob: -17.000003814697266
    9. '+)' → logprob: -17.625003814697266
    10. '()' → logprob: -17.625003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 198
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 166
Précision stricte (1ère position): 38.38%
Précision adaptée (1ère position): 41.41%
Précision (top 10): 83.84%
================================================================================
