================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n,m=map(int,input().split())
dp=[0]*(m+1)
for _ in range(n):
    v,w=map(int,input().split())
    for i in range(w,m+1):dp[i]=max(dp[i],dp[i-w]+v)
print(dp[m])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',m' (ID: 26648)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.6591809988021851
    2. ' map' → logprob: -1.159180998802185
    3. 'input' → logprob: -2.4091811180114746
    4. '0' → logprob: -3.0341811180114746
    5. ' ' → logprob: -4.159181118011475
    6. ' input' → logprob: -4.409181118011475
    7. '10' → logprob: -6.659181118011475
    8. 'int' → logprob: -6.784181118011475
    9. '1' → logprob: -8.409180641174316
    10. '5' → logprob: -8.659180641174316

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017670509405434132
    2. '(int' → logprob: -7.626767158508301
    3. '(lambda' → logprob: -7.626767158508301
    4. '```' → logprob: -7.626767158508301
    5. '(str' → logprob: -9.0017671585083
    6. '<|end|>' → logprob: -11.0017671585083
    7. '(
' → logprob: -11.1267671585083
    8. ')' → logprob: -11.2517671585083
    9. '[int' → logprob: -11.3767671585083
    10. '(input' → logprob: -11.5017671585083

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.06514205783605576
    2. ',input' → logprob: -3.1901421546936035
    3. 'input' → logprob: -4.6901421546936035
    4. ')' → logprob: -4.8151421546936035
    5. ',' → logprob: -5.6901421546936035
    6. '(' → logprob: -7.4401421546936035
    7. '=input' → logprob: -9.065141677856445
    8. ' input' → logprob: -9.315141677856445
    9. '(int' → logprob: -9.440141677856445
    10. '<input' → logprob: -9.690141677856445

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2164042890071869
    2. '()' → logprob: -1.9664043188095093
    3. ')' → logprob: -3.5914041996002197
    4. '(' → logprob: -4.341404438018799
    5. '().' → logprob: -5.466404438018799
    6. '()>' → logprob: -5.841404438018799
    7. '```' → logprob: -6.966404438018799
    8. '('' → logprob: -7.091404438018799
    9. '(""))' → logprob: -7.341404438018799
    10. '`()' → logprob: -7.591404438018799

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.374227425316349e-05
    2. 'strip' → logprob: -10.250073432922363
    3. ')' → logprob: -10.625073432922363
    4. ' split' → logprob: -11.875073432922363
    5. '(split' → logprob: -12.375073432922363
    6. 'rstrip' → logprob: -13.375073432922363
    7. 'spl' → logprob: -14.500073432922363
    8. 'read' → logprob: -15.000073432922363
    9. 's' → logprob: -16.50007438659668
    10. 'plit' → logprob: -16.50007438659668

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009647716768085957
    2. '())' → logprob: -5.009647846221924
    3. '))' → logprob: -6.009647846221924
    4. '()' → logprob: -8.009647369384766
    5. '`)' → logprob: -9.634647369384766
    6. '(' → logprob: -10.134647369384766
    7. ')`' → logprob: -11.259647369384766
    8. '()))' → logprob: -12.509647369384766
    9. ' )' → logprob: -13.009647369384766
    10. '')' → logprob: -13.259647369384766

Token 9: 'dp' (ID: 19037)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9232463836669922
    2. '
' → logprob: -1.7982463836669922
    3. 'for' → logprob: -2.048246383666992
    4. 'a' → logprob: -2.048246383666992
    5. '#' → logprob: -2.798246383666992
    6. '```' → logprob: -3.548246383666992
    7. '`' → logprob: -4.048246383666992
    8. ' ' → logprob: -4.423246383666992
    9. 'if' → logprob: -4.673246383666992
    10. '\' → logprob: -5.048246383666992

Token 10: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011844364780699834
    2. '=' → logprob: -9.500118255615234
    3. '\[' → logprob: -10.875118255615234
    4. '[n' → logprob: -11.625118255615234
    5. '[i' → logprob: -12.500118255615234
    6. '=[' → logprob: -12.875118255615234
    7. ' =' → logprob: -13.375118255615234
    8. ' ' → logprob: -13.750118255615234
    9. '[:]' → logprob: -13.750118255615234
    10. '```' → logprob: -13.875118255615234

Token 11: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16058103740215302
    2. '0' → logprob: -1.9105809926986694
    3. '[int' → logprob: -9.1605806350708
    4. ' [' → logprob: -9.2855806350708
    5. '[]' → logprob: -9.9105806350708
    6. '[[' → logprob: -10.1605806350708
    7. '[-' → logprob: -10.5355806350708
    8. ']' → logprob: -11.6605806350708
    9. '[m' → logprob: -12.1605806350708
    10. '[i' → logprob: -12.1605806350708

Token 12: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7515333294868469
    2. ']*' → logprob: -1.0015332698822021
    3. ']*(' → logprob: -1.8765332698822021
    4. ' for' → logprob: -5.126533508300781
    5. ',' → logprob: -7.126533508300781
    6. ' ]' → logprob: -7.251533508300781
    7. ']+' → logprob: -7.751533508300781
    8. '[' → logprob: -11.126533508300781
    9. 'for' → logprob: -11.251533508300781
    10. ',n' → logprob: -12.376533508300781

Token 13: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00018792471382766962
    2. 'n' → logprob: -9.000187873840332
    3. ' m' → logprob: -9.750187873840332
    4. '(m' → logprob: -12.750187873840332
    5. ' ' → logprob: -13.375187873840332
    6. 'max' → logprob: -14.375187873840332
    7. '   ' → logprob: -15.125187873840332
    8. '100' → logprob: -15.500187873840332
    9. '101' → logprob: -15.500187873840332
    10. ')m' → logprob: -16.12518882751465

Token 14: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006750239408574998
    2. ')' → logprob: -7.375675201416016
    3. '+)' → logprob: -10.500675201416016
    4. ' +' → logprob: -10.875675201416016
    5. ')+' → logprob: -14.375675201416016
    6. '+
' → logprob: -14.375675201416016
    7. '+n' → logprob: -15.750675201416016
    8. '+')' → logprob: -15.750675201416016
    9. '```' → logprob: -16.000675201416016
    10. '*' → logprob: -16.250675201416016

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3915141355246305e-05
    2. ' ' → logprob: -10.87502384185791
    3. '2' → logprob: -12.25002384185791
    4. '  ' → logprob: -17.125024795532227
    5. '   ' → logprob: -17.500024795532227
    6. '10' → logprob: -17.625024795532227
    7. '5' → logprob: -18.750024795532227
    8. '+' → logprob: -18.875024795532227
    9. '１' → logprob: -18.875024795532227
    10. '3' → logprob: -19.000024795532227

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. '`)' → logprob: -11.37502670288086
    3. ' )' → logprob: -12.37502670288086
    4. ')
' → logprob: -12.62502670288086
    5. '<|end|>' → logprob: -13.25002670288086
    6. '')' → logprob: -13.62502670288086
    7. '```' → logprob: -14.25002670288086
    8. '))' → logprob: -14.87502670288086
    9. '*)' → logprob: -15.00002670288086
    10. ')`' → logprob: -15.00002670288086

Token 17: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8602008819580078
    2. '\n' → logprob: -1.2352008819580078
    3. 'for' → logprob: -1.7352008819580078
    4. ' for' → logprob: -2.985200881958008
    5. 'dp' → logprob: -3.110200881958008
    6. '
' → logprob: -5.485200881958008
    7. ' 
' → logprob: -5.735200881958008
    8. '' → logprob: -6.360200881958008
    9. '  
' → logprob: -6.485200881958008
    10. '\' → logprob: -6.485200881958008

Token 18: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025831546634435654
    2. '_' → logprob: -4.275831699371338
    3. ' _' → logprob: -5.025831699371338
    4. 'i' → logprob: -5.525831699371338
    5. ' ' → logprob: -6.900831699371338
    6. ' range' → logprob: -10.90083122253418
    7. '_i' → logprob: -11.15083122253418
    8. ' ‌' → logprob: -12.90083122253418
    9. 'range' → logprob: -13.02583122253418
    10. ' in' → logprob: -13.65083122253418

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007696179207414389
    2. 'in' → logprob: -4.882696151733398
    3. 'n' → logprob: -9.757696151733398
    4. ' ' → logprob: -11.882696151733398
    5. 'i' → logprob: -12.257696151733398
    6. ' i' → logprob: -12.382696151733398
    7. 'range' → logprob: -12.382696151733398
    8. ' _' → logprob: -12.757696151733398
    9. '_' → logprob: -13.132696151733398
    10. '```' → logprob: -13.382696151733398

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01105170976370573
    2. ' range' → logprob: -4.511051654815674
    3. 'n' → logprob: -14.386052131652832
    4. 'r' → logprob: -14.886052131652832
    5. 'ran' → logprob: -14.886052131652832
    6. '(range' → logprob: -14.886052131652832
    7. '[' → logprob: -15.011052131652832
    8. '```' → logprob: -15.011052131652832
    9. 'rang' → logprob: -15.136052131652832
    10. '	range' → logprob: -15.136052131652832

Token 21: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02328205481171608
    2. '(' → logprob: -3.773282051086426
    3. ' (' → logprob: -10.523282051086426
    4. '(range' → logprob: -11.898282051086426
    5. '(m' → logprob: -14.023282051086426
    6. '(int' → logprob: -14.648282051086426
    7. 'n' → logprob: -15.023282051086426
    8. '(
' → logprob: -15.523282051086426
    9. '(i' → logprob: -15.648282051086426
    10. '(s' → logprob: -15.648282051086426

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01583128795027733
    2. ')' → logprob: -4.265831470489502
    3. ':' → logprob: -6.640831470489502
    4. ',' → logprob: -9.265830993652344
    5. '+' → logprob: -9.265830993652344
    6. ' ):' → logprob: -9.265830993652344
    7. '):
' → logprob: -10.015830993652344
    8. ']:' → logprob: -12.140830993652344
    9. '>' → logprob: -12.390830993652344
    10. '-' → logprob: -12.515830993652344

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26742953062057495
    2. '    ' → logprob: -3.1424295902252197
    3. ' ' → logprob: -3.2674295902252197
    4. 'a' → logprob: -3.5174295902252197
    5. ' a' → logprob: -3.7674295902252197
    6. ' s' → logprob: -4.892429351806641
    7. ' items' → logprob: -5.017429351806641
    8. '	a' → logprob: -5.517429351806641
    9. ' ind' → logprob: -5.767429351806641
    10. ' nums' → logprob: -5.767429351806641

Token 24: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.7360635995864868
    2. 'a' → logprob: -1.1110635995864868
    3. 'arr' → logprob: -3.2360634803771973
    4. 'weights' → logprob: -3.4860634803771973
    5. '   ' → logprob: -3.7360634803771973
    6. 'coins' → logprob: -3.8610634803771973
    7. ' w' → logprob: -3.8610634803771973
    8. 'for' → logprob: -3.9860634803771973
    9. 'nums' → logprob: -4.861063480377197
    10. ' a' → logprob: -5.236063480377197

Token 25: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8202033638954163
    2. ',w' → logprob: -1.0702033042907715
    3. ',v' → logprob: -1.9452033042907715
    4. ',a' → logprob: -3.4452033042907715
    5. ',value' → logprob: -4.5702033042907715
    6. 'alue' → logprob: -4.6952033042907715
    7. ' ,' → logprob: -5.3202033042907715
    8. ',val' → logprob: -5.9452033042907715
    9. ',i' → logprob: -6.0702033042907715
    10. ',c' → logprob: -6.1952033042907715

Token 26: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0020146444439888
    2. ' =' → logprob: -6.252014636993408
    3. '=input' → logprob: -10.002015113830566
    4. ',' → logprob: -10.377015113830566
    5. '=int' → logprob: -12.752015113830566
    6. '=v' → logprob: -13.377015113830566
    7. ',v' → logprob: -13.627015113830566
    8. '=line' → logprob: -13.752015113830566
    9. '=i' → logprob: -14.502015113830566
    10. '=value' → logprob: -14.627015113830566

Token 27: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.005234594456851482
    2. ' map' → logprob: -5.255234718322754
    3. '	map' → logprob: -14.630234718322754
    4. 'm' → logprob: -15.630234718322754
    5. 'list' → logprob: -15.755234718322754
    6. ' ' → logprob: -17.255233764648438
    7. '   ' → logprob: -18.130233764648438
    8. 'ma' → logprob: -18.255233764648438
    9. '(map' → logprob: -18.505233764648438
    10. ',map' → logprob: -18.505233764648438

Token 28: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -9.710618905955926e-05
    2. '(' → logprob: -10.500097274780273
    3. '<int' → logprob: -10.625097274780273
    4. '(lambda' → logprob: -10.875097274780273
    5. '[int' → logprob: -11.250097274780273
    6. 'int' → logprob: -11.750097274780273
    7. '=int' → logprob: -13.250097274780273
    8. '(str' → logprob: -13.875097274780273
    9. '(input' → logprob: -13.875097274780273
    10. ',int' → logprob: -14.500097274780273

Token 29: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0031442048493772745
    2. ',' → logprob: -6.128144264221191
    3. '(input' → logprob: -7.378144264221191
    4. ',int' → logprob: -8.128144264221191
    5. '(),' → logprob: -12.128144264221191
    6. 'input' → logprob: -12.253144264221191
    7. '`,' → logprob: -12.378144264221191
    8. '(' → logprob: -12.378144264221191
    9. ',user' → logprob: -12.878144264221191
    10. '(','' → logprob: -13.253144264221191

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5690089639974758e-05
    2. '.' → logprob: -11.250015258789062
    3. '()' → logprob: -13.250015258789062
    4. ' ().' → logprob: -15.000015258789062
    5. '.split' → logprob: -15.250015258789062
    6. '.readline' → logprob: -16.125015258789062
    7. '('').' → logprob: -17.000015258789062
    8. ')' → logprob: -17.250015258789062
    9. '(' → logprob: -17.375015258789062
    10. '().__' → logprob: -17.625015258789062

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. 'spl' → logprob: -16.0
    3. ' split' → logprob: -16.625
    4. '(split' → logprob: -17.125
    5. 'plit' → logprob: -18.375
    6. 'strip' → logprob: -20.0
    7. 'rstrip' → logprob: -20.375
    8. '.split' → logprob: -20.375
    9. 's' → logprob: -20.625
    10. 'sp' → logprob: -20.875

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3349437117576599
    2. ')' → logprob: -1.4599437713623047
    3. '()' → logprob: -2.9599437713623047
    4. '())
' → logprob: -7.709943771362305
    5. ')
' → logprob: -10.584943771362305
    6. '(' → logprob: -10.834943771362305
    7. '());' → logprob: -11.959943771362305
    8. '())
' → logprob: -12.209943771362305
    9. '()
' → logprob: -12.459943771362305
    10. '();)' → logprob: -12.459943771362305

Token 33: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4022035002708435
    2. 'for' (adapté à ' for') → logprob: -1.1522035598754883
    3. '   ' → logprob: -4.402203559875488
    4. '```' → logprob: -6.527203559875488
    5. '	for' → logprob: -7.402203559875488
    6. '`' → logprob: -8.402203559875488
    7. '[' → logprob: -9.277203559875488
    8. ' ' → logprob: -9.277203559875488
    9. '``' → logprob: -9.527203559875488
    10. '    ' → logprob: -9.527203559875488

Token 35: ' i' (ID: 575)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3096587359905243
    2. ' range' → logprob: -1.8096587657928467
    3. ' m' → logprob: -2.8096587657928467
    4. ' w' → logprob: -3.5596587657928467
    5. 'j' → logprob: -4.809658527374268
    6. ' v' → logprob: -5.684658527374268
    7. ' i' → logprob: -7.184658527374268
    8. 'm' → logprob: -7.684658527374268
    9. ' ' → logprob: -7.934658527374268
    10. 'range' → logprob: -7.934658527374268

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002904966240748763
    2. 'in' → logprob: -5.877904891967773
    3. 'range' → logprob: -10.752904891967773
    4. ' range' → logprob: -10.877904891967773
    5. '<|end|>' → logprob: -11.502904891967773
    6. ' ' → logprob: -11.627904891967773
    7. '```' → logprob: -11.877904891967773
    8. ' v' → logprob: -12.127904891967773
    9. ',v' → logprob: -12.252904891967773
    10. '	in' → logprob: -13.127904891967773

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03805101290345192
    2. 'range' → logprob: -3.288051128387451
    3. 'm' → logprob: -12.913050651550293
    4. '(range' → logprob: -13.538050651550293
    5. ' m' → logprob: -13.913050651550293
    6. 'v' → logprob: -13.913050651550293
    7. '	range' → logprob: -14.038050651550293
    8. ' v' → logprob: -14.288050651550293
    9. 'r' → logprob: -14.538050651550293
    10. ' ' → logprob: -14.788050651550293

Token 38: '(w' (ID: 7420)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0034821126610040665
    2. '(w' → logprob: -6.003482341766357
    3. '(v' → logprob: -7.378482341766357
    4. '(' → logprob: -8.0034818649292
    5. 'm' → logprob: -10.2534818649292
    6. '(i' → logprob: -12.6284818649292
    7. 'w' → logprob: -12.6284818649292
    8. ')m' → logprob: -14.2534818649292
    9. ' m' → logprob: -14.5034818649292
    10. ')' → logprob: -14.5034818649292

Token 39: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30054569244384766
    2. ',m' → logprob: -1.8005456924438477
    3. ',v' → logprob: -2.6755456924438477
    4. ' ,' → logprob: -4.050545692443848
    5. ',n' → logprob: -5.175545692443848
    6. ',w' → logprob: -6.050545692443848
    7. ',len' → logprob: -11.175545692443848
    8. ',int' → logprob: -11.550545692443848
    9. '   ' → logprob: -11.925545692443848
    10. ',i' → logprob: -12.175545692443848

Token 40: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01488159317523241
    2. ',' → logprob: -5.639881610870361
    3. ' +' → logprob: -6.014881610870361
    4. '-w' → logprob: -6.389881610870361
    5. ',v' → logprob: -6.389881610870361
    6. ',-' → logprob: -6.514881610870361
    7. ',w' → logprob: -6.514881610870361
    8. '+w' → logprob: -6.889881610870361
    9. '-v' → logprob: -7.514881610870361
    10. ' -' → logprob: -8.014881134033203

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.6250057220459
    4. '```' → logprob: -16.8125057220459
    5. 'v' → logprob: -17.4375057220459
    6. 'w' → logprob: -17.5625057220459
    7. '2' → logprob: -17.7500057220459
    8. ')' → logprob: -17.7500057220459
    9. 'i' → logprob: -18.0625057220459
    10. '１' → logprob: -18.1875057220459

Token 42: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007899156771600246
    2. '):
' → logprob: -4.882899284362793
    3. ':' → logprob: -9.382899284362793
    4. ',' → logprob: -9.507899284362793
    5. ' ):' → logprob: -9.757899284362793
    6. ')' → logprob: -10.507899284362793
    7. '+' → logprob: -11.507899284362793
    8. '[i' → logprob: -12.132899284362793
    9. '[::-' → logprob: -12.257899284362793
    10. '):
' → logprob: -12.382899284362793

Token 43: 'dp' (ID: 19037)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001627217628993094
    2. '[' → logprob: -6.501627445220947
    3. '[v' → logprob: -9.876626968383789
    4. '[j' → logprob: -11.001626968383789
    5. '```' → logprob: -11.376626968383789
    6. '[w' → logprob: -12.251626968383789
    7. '\[' → logprob: -12.251626968383789
    8. '[int' → logprob: -12.501626968383789
    9. '[a' → logprob: -12.751626968383789
    10. '[ip' → logprob: -12.876626968383789

Token 45: ']=' (ID: 9539)
  Prédit: '=max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=max' → logprob: -0.01544141210615635
    2. ']=' → logprob: -4.640441417694092
    3. ' =' → logprob: -6.140441417694092
    4. ']+=' → logprob: -6.265441417694092
    5. '=' → logprob: -7.140441417694092
    6. ']' → logprob: -8.265440940856934
    7. 'max' → logprob: -8.640440940856934
    8. '+=' → logprob: -8.890440940856934
    9. '[max' → logprob: -9.265440940856934
    10. '-max' → logprob: -10.015440940856934

Token 46: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.759734732331708e-05
    2. ' max' → logprob: -11.125017166137695
    3. 'dp' → logprob: -12.875017166137695
    4. '[max' → logprob: -15.375017166137695
    5. '(max' → logprob: -16.375017166137695
    6. '	max' → logprob: -17.250017166137695
    7. '=max' → logprob: -17.625017166137695
    8. 'm' → logprob: -19.250017166137695
    9. ' ' → logprob: -19.375017166137695
    10. ',max' → logprob: -19.500017166137695

Token 47: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0005151443183422089
    2. '(' → logprob: -7.625514984130859
    3. 'dp' → logprob: -10.75051498413086
    4. ' dp' → logprob: -12.37551498413086
    5. '	dp' → logprob: -14.25051498413086
    6. ' (' → logprob: -14.87551498413086
    7. '(
' → logprob: -15.62551498413086
    8. '_dp' → logprob: -16.62551498413086
    9. '(max' → logprob: -17.62551498413086
    10. '(d' → logprob: -17.87551498413086

Token 48: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. '[' → logprob: -12.125006675720215
    3. 'i' → logprob: -15.000006675720215
    4. ')' → logprob: -15.500006675720215
    5. '[j' → logprob: -16.1250057220459
    6. '```' → logprob: -16.5000057220459
    7. '[I' → logprob: -17.8750057220459
    8. ' ' → logprob: -17.8750057220459
    9. ']' → logprob: -18.0000057220459
    10. ',i' → logprob: -18.2500057220459

Token 49: '],' (ID: 2155)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11415362358093262
    2. '],' → logprob: -2.2391536235809326
    3. 'i' → logprob: -7.614153861999512
    4. ',i' → logprob: -8.614153861999512
    5. ' -' → logprob: -8.739153861999512
    6. '-' → logprob: -8.864153861999512
    7. '(i' → logprob: -9.239153861999512
    8. ']' → logprob: -9.864153861999512
    9. '-i' → logprob: -9.864153861999512
    10. ' ],' → logprob: -10.114153861999512

Token 50: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0031887630466371775
    2. ' dp' → logprob: -5.753188610076904
    3. '	dp' → logprob: -11.878189086914062
    4. '   ' → logprob: -12.878189086914062
    5. '(dp' → logprob: -14.378189086914062
    6. ' ' → logprob: -14.628189086914062
    7. '_dp' → logprob: -16.003189086914062
    8. '  ' → logprob: -16.253189086914062
    9. '.dp' → logprob: -16.253189086914062
    10. 'd' → logprob: -17.253189086914062

Token 51: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.250000953674316
    3. 'i' → logprob: -14.250000953674316
    4. ' i' → logprob: -19.000001907348633
    5. '[
' → logprob: -19.750001907348633
    6. ' [' → logprob: -20.250001907348633
    7. '{i' → logprob: -20.375001907348633
    8. '[j' → logprob: -21.125001907348633
    9. '```' → logprob: -21.125001907348633
    10. '[I' → logprob: -21.625001907348633

Token 52: '-w' (ID: 4450)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01267716009169817
    2. ' -' → logprob: -4.887677192687988
    3. '-i' → logprob: -6.012677192687988
    4. 'i' → logprob: -6.262677192687988
    5. '-' → logprob: -7.637677192687988
    6. '[' → logprob: -9.012677192687988
    7. '-w' → logprob: -10.387677192687988
    8. '[-' → logprob: -10.887677192687988
    9. '   ' → logprob: -11.137677192687988
    10. ']' → logprob: -11.637677192687988

Token 53: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.006727095227688551
    2. ']' → logprob: -5.00672721862793
    3. ' ]' → logprob: -11.75672721862793
    4. ']+=' → logprob: -13.50672721862793
    5. '])+' → logprob: -14.63172721862793
    6. '+' → logprob: -14.88172721862793
    7. ']+"' → logprob: -15.00672721862793
    8. '-' → logprob: -15.50672721862793
    9. ']-' → logprob: -15.63172721862793
    10. ']+\' → logprob: -15.88172721862793

Token 54: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -8.923874702304602e-05
    2. ' v' → logprob: -9.375089645385742
    3. '1' → logprob: -12.750089645385742
    4. '	v' → logprob: -14.750089645385742
    5. '[v' → logprob: -15.000089645385742
    6. '   ' → logprob: -15.250089645385742
    7. ' ' → logprob: -15.875089645385742
    8. 'w' → logprob: -16.250089645385742
    9. ')v' → logprob: -16.375089645385742
    10. '-v' → logprob: -16.750089645385742

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6060808522743173e-05
    2. '))' → logprob: -11.250025749206543
    3. ' )' → logprob: -11.750025749206543
    4. ')
' → logprob: -13.250025749206543
    5. '[' → logprob: -14.125025749206543
    6. '])' → logprob: -14.875025749206543
    7. '`)' → logprob: -14.875025749206543
    8. '[i' → logprob: -15.000025749206543
    9. '   ' → logprob: -15.125025749206543
    10. ')`' → logprob: -15.375025749206543

Token 56: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.03887384384870529
    2. '(' → logprob: -3.2888739109039307
    3. '(max' → logprob: -7.163873672485352
    4. '(sum' → logprob: -9.788873672485352
    5. '()' → logprob: -15.038873672485352
    6. ' (' → logprob: -15.038873672485352
    7. '(df' → logprob: -15.538873672485352
    8. '(
' → logprob: -15.538873672485352
    9. '(len' → logprob: -15.538873672485352
    10. '(

' → logprob: -15.788873672485352

Token 58: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -8.697387966094539e-05
    2. '[-' → logprob: -9.375086784362793
    3. ')' → logprob: -13.875086784362793
    4. 'm' → logprob: -15.125086784362793
    5. '])' → logprob: -15.375086784362793
    6. '[n' → logprob: -15.500086784362793
    7. ')m' → logprob: -16.00008773803711
    8. '[M' → logprob: -16.00008773803711
    9. '(m' → logprob: -16.25008773803711
    10. ']' → logprob: -16.62508773803711

Token 59: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20222178101539612
    2. ')' → logprob: -1.7022217512130737
    3. '))' → logprob: -7.202221870422363
    4. '})' → logprob: -10.452221870422363
    5. ')])' → logprob: -11.327221870422363
    6. '>)' → logprob: -11.827221870422363
    7. ']' → logprob: -12.327221870422363
    8. ')]' → logprob: -12.702221870422363
    9. '）' → logprob: -12.827221870422363
    10. ''])' → logprob: -13.077221870422363


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 31
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 54.39%
Précision adaptée (1ère position): 54.39%
Précision (top 10): 89.47%
================================================================================
