================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
readline = sys.stdin.readline

def knapsack(N, weight):
    dp = [0] * (weight + 1)
    for _ in range(N):
        v, w = map(int, readline().split())
        ww = w
        while ww <= weight:
            dp[ww] = max(dp[ww], dp[ww - w] + v)
            ww += 1
    return dp[-1]

if __name__ == "__main__":
    n_goods, weight = map(int, input().split())
    print(knapsack(n_goods, weight))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'read' (ID: 1293)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: 'line' (ID: 1137)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17498648166656494
    2. 'line' → logprob: -2.2999863624572754
    3. '_' → logprob: -3.9249863624572754
    4. '()' → logprob: -4.674986362457275
    5. 'er' → logprob: -4.799986362457275
    6. '_line' → logprob: -4.799986362457275
    7. '.' → logprob: -5.299986362457275
    8. 'ing' → logprob: -6.049986362457275
    9. ')' → logprob: -6.674986362457275
    10. ' (' → logprob: -7.049986362457275

Token 5: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04655074328184128
    2. '.' → logprob: -3.296550750732422
    3. '()' → logprob: -4.921550750732422
    4. ')' → logprob: -8.171550750732422
    5. '(
' → logprob: -8.171550750732422
    6. ' (' → logprob: -8.671550750732422
    7. '('' → logprob: -9.921550750732422
    8. '=' → logprob: -9.921550750732422
    9. '```' → logprob: -9.921550750732422
    10. '[' → logprob: -10.296550750732422

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759586691856384
    2. 'sys' → logprob: -0.8259586691856384
    3. '	sys' → logprob: -11.575958251953125
    4. '=sys' → logprob: -11.950958251953125
    5. '(sys' → logprob: -13.325958251953125
    6. ' ' → logprob: -13.700958251953125
    7. 'input' → logprob: -15.325958251953125
    8. '_sys' → logprob: -16.075958251953125
    9. ' input' → logprob: -16.450958251953125
    10. '```' → logprob: -16.825958251953125

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.018458478152751923
    2. '.readline' → logprob: -4.143458366394043
    3. '.stdin' → logprob: -6.143458366394043
    4. '.stdout' → logprob: -9.143458366394043
    5. '.argv' → logprob: -10.018458366394043
    6. '[' → logprob: -10.643458366394043
    7. '.read' → logprob: -10.893458366394043
    8. '.import' → logprob: -11.393458366394043
    9. '.setdefault' → logprob: -11.643458366394043
    10. ' .' → logprob: -11.768458366394043

Token 8: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.024403128772974014
    2. '.' → logprob: -3.7744030952453613
    3. '.read' → logprob: -6.774403095245361
    4. '.readlines' → logprob: -11.89940357208252
    5. '.buffer' → logprob: -12.27440357208252
    6. 'read' → logprob: -14.27440357208252
    7. '.Read' → logprob: -14.52440357208252
    8. ' .' → logprob: -15.02440357208252
    9. '.

' → logprob: -15.77440357208252
    10. '.\' → logprob: -15.77440357208252

Token 9: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3613564074039459
    2. '(' → logprob: -1.2363563776016235
    3. '\n' → logprob: -5.736356258392334
    4. '(
' → logprob: -5.861356258392334
    5. '\' → logprob: -5.986356258392334
    6. '()
' → logprob: -6.611356258392334
    7. '\(' → logprob: -7.361356258392334
    8. '
' → logprob: -7.486356258392334
    9. '.' → logprob: -7.861356258392334
    10. ')' → logprob: -8.236356735229492

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026051657274365425
    2. '()' → logprob: -3.9010517597198486
    3. 'def' → logprob: -6.5260515213012695
    4. '(
' → logprob: -6.7760515213012695
    5. 'for' → logprob: -7.1510515213012695
    6. ')' → logprob: -7.7760515213012695
    7. '(n' → logprob: -7.9010515213012695
    8. 'data' → logprob: -8.52605152130127
    9. 'n' → logprob: -8.52605152130127
    10. 'a' → logprob: -9.02605152130127

Token 11: ' kn' (ID: 1313)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0019351851660758257
    2. ' space' → logprob: -7.126935005187988
    3. ' main' → logprob: -7.126935005187988
    4. ' my' → logprob: -9.001935005187988
    5. ' hello' → logprob: -10.251935005187988
    6. '_' → logprob: -10.501935005187988
    7. ' add' → logprob: -10.876935005187988
    8. ' test' → logprob: -11.251935005187988
    9. ' foo' → logprob: -11.251935005187988
    10. ' process' → logprob: -11.501935005187988

Token 12: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -0.07833373546600342
    2. 'ight' → logprob: -2.953333854675293
    3. 'ap' → logprob: -4.078333854675293
    4. 'e' → logprob: -5.578333854675293
    5. 'ights' → logprob: -7.078333854675293
    6. 'ock' → logprob: -7.828333854675293
    7. 'ee' → logprob: -8.203333854675293
    8. 'n' → logprob: -8.453333854675293
    9. '_' → logprob: -8.828333854675293
    10. 'aps' → logprob: -9.453333854675293

Token 13: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00075459701474756
    2. '_' → logprob: -7.8757548332214355
    3. '```' → logprob: -9.625754356384277
    4. '(n' → logprob: -10.250754356384277
    5. '(cap' → logprob: -10.500754356384277
    6. '(size' → logprob: -10.500754356384277
    7. '_cap' → logprob: -10.875754356384277
    8. ' (' → logprob: -11.000754356384277
    9. 'def' → logprob: -11.125754356384277
    10. '_capacity' → logprob: -11.250754356384277

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002314303710591048
    2. ' ,' → logprob: -8.375231742858887
    3. ',int' → logprob: -14.750231742858887
    4. ',K' → logprob: -15.625231742858887
    5. ',
' → logprob: -17.00023078918457
    6. '‌,' → logprob: -17.25023078918457
    7. ',

' → logprob: -17.62523078918457
    8. ',P' → logprob: -17.75023078918457
    9. ',I' → logprob: -17.75023078918457
    10. '):' → logprob: -17.87523078918457

Token 15: ' weight' (ID: 6049)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.5341730713844299
    2. 'W' → logprob: -0.9091730713844299
    3. 'K' → logprob: -6.159173011779785
    4. 'w' → logprob: -6.409173011779785
    5. ' K' → logprob: -6.534173011779785
    6. ' w' → logprob: -6.659173011779785
    7. 'weights' → logprob: -6.909173011779785
    8. ' capacity' → logprob: -7.034173011779785
    9. ' weights' → logprob: -7.034173011779785
    10. 'capacity' → logprob: -7.409173011779785

Token 16: '):
' (ID: 1883)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026462620124220848
    2. ',' → logprob: -3.6514625549316406
    3. '):' → logprob: -8.90146255493164
    4. ' ,' → logprob: -11.52646255493164
    5. ' s' → logprob: -12.27646255493164
    6. ',s' → logprob: -12.52646255493164
    7. '_list' → logprob: -13.15146255493164
    8. ')s' → logprob: -13.52646255493164
    9. '_s' → logprob: -13.65146255493164
    10. ')' → logprob: -13.65146255493164

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20006218552589417
    2. '   ' → logprob: -2.2000622749328613
    3. '):' → logprob: -3.2000622749328613
    4. ' :' → logprob: -4.450062274932861
    5. ':
' → logprob: -5.200062274932861
    6. ')' → logprob: -6.075062274932861
    7. ' ' → logprob: -6.075062274932861
    8. '    ' → logprob: -6.075062274932861
    9. '    
' → logprob: -6.700062274932861
    10. ',' → logprob: -7.200062274932861

Token 18: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9275299906730652
    2. ' ' → logprob: -1.17753005027771
    3. '    ' → logprob: -1.92753005027771
    4. ' 
' → logprob: -2.42753005027771
    5. '    
' → logprob: -3.55253005027771
    6. '\' → logprob: -5.302529811859131
    7. '   
' → logprob: -5.552529811859131
    8. '     
' → logprob: -5.552529811859131
    9. ' w' → logprob: -5.927529811859131
    10. '
' → logprob: -5.927529811859131

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0027884691953659058
    2. ' ' → logprob: -6.377788543701172
    3. '[' → logprob: -7.627788543701172
    4. '=' → logprob: -7.627788543701172
    5. '   ' → logprob: -9.752788543701172
    6. ' =[' → logprob: -10.752788543701172
    7. '  ' → logprob: -11.252788543701172
    8. '    ' → logprob: -11.877788543701172
    9. '=[' → logprob: -12.752788543701172
    10. '[i' → logprob: -13.627788543701172

Token 20: ' [' (ID: 723)
  Prédit: ' [['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[' → logprob: -1.00200355052948
    2. '[[' → logprob: -1.25200355052948
    3. ' [' → logprob: -1.75200355052948
    4. '[' → logprob: -1.75200355052948
    5. '[-' → logprob: -10.12700366973877
    6. '[n' → logprob: -11.87700366973877
    7. ' [[[' → logprob: -11.87700366973877
    8. '[N' → logprob: -12.37700366973877
    9. '[len' → logprob: -13.00200366973877
    10. ' [-' → logprob: -13.50200366973877

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00046689616283401847
    2. 'False' → logprob: -8.125467300415039
    3. ' ' → logprob: -8.875467300415039
    4. '[' → logprob: -11.000467300415039
    5. 'float' → logprob: -12.125467300415039
    6. '   ' → logprob: -12.750467300415039
    7. ' [' → logprob: -13.250467300415039
    8. '-' → logprob: -13.375467300415039
    9. ' False' → logprob: -13.375467300415039
    10. ' float' → logprob: -15.500467300415039

Token 22: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014648792333900928
    2. ' ]' → logprob: -4.514648914337158
    3. ']*(' → logprob: -6.139648914337158
    4. ' for' → logprob: -7.139648914337158
    5. ']*' → logprob: -7.389648914337158
    6. ',' → logprob: -11.2646484375
    7. ' *' → logprob: -12.6396484375
    8. 'for' → logprob: -12.8896484375
    9. ')' → logprob: -13.2646484375
    10. '   ' → logprob: -13.3896484375

Token 23: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3337947726249695
    2. ']' → logprob: -2.2087948322296143
    3. '*' → logprob: -2.7087948322296143
    4. ' ]' → logprob: -2.9587948322296143
    5. ' for' → logprob: -3.7087948322296143
    6. ']*(' → logprob: -4.083794593811035
    7. '*(' → logprob: -4.833794593811035
    8. '[' → logprob: -6.958794593811035
    9. ']*' → logprob: -6.958794593811035
    10. ' ' → logprob: -7.083794593811035

Token 24: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.41329213976860046
    2. '(' → logprob: -1.1632921695709229
    3. '(sum' → logprob: -4.288291931152344
    4. '(n' → logprob: -5.913291931152344
    5. ' (' → logprob: -5.913291931152344
    6. '(max' → logprob: -6.413291931152344
    7. '(weight' → logprob: -6.913291931152344
    8. '(len' → logprob: -7.163291931152344
    9. '(k' → logprob: -7.288291931152344
    10. '100' → logprob: -7.788291931152344

Token 25: 'weight' (ID: 8250)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1011943817138672
    2. '100' → logprob: -1.1011943817138672
    3. 'weight' → logprob: -2.101194381713867
    4. 'sum' → logprob: -2.601194381713867
    5. '101' → logprob: -3.351194381713867
    6. 'K' → logprob: -3.851194381713867
    7. '500' → logprob: -3.976194381713867
    8. 'W' → logprob: -4.226194381713867
    9. 'max' → logprob: -4.601194381713867
    10. 'len' → logprob: -5.101194381713867

Token 26: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06196869537234306
    2. ' +' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.811968803405762
    4. ')' → logprob: -15.186968803405762
    5. '+)' → logprob: -15.561968803405762
    6. ' )' → logprob: -16.811967849731445
    7. ')+' → logprob: -17.311967849731445
    8. ' +
' → logprob: -17.436967849731445
    9. '＋' → logprob: -17.561967849731445
    10. '+
' → logprob: -17.811967849731445

Token 27: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049000546336174
    2. ' ' → logprob: -4.511048793792725
    3. '   ' → logprob: -13.886049270629883
    4. '  ' → logprob: -15.886049270629883
    5. '    ' → logprob: -16.386049270629883
    6. '```' → logprob: -16.511049270629883
    7. '2' → logprob: -18.136049270629883
    8. ')' → logprob: -18.386049270629883
    9. ' ' → logprob: -18.448549270629883
    10. '     ' → logprob: -19.073549270629883

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.62507438659668
    4. '```' → logprob: -18.37507438659668
    5. '  ' → logprob: -18.75007438659668
    6. '2' → logprob: -19.25007438659668
    7. '１' → logprob: -19.62507438659668
    8. '0' → logprob: -20.12507438659668
    9. '    ' → logprob: -20.31257438659668
    10. '+' → logprob: -20.68757438659668

Token 29: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.578184497309849e-05
    2. ')
' → logprob: -9.500085830688477
    3. '   ' → logprob: -12.000085830688477
    4. ' )' → logprob: -12.750085830688477
    5. ' ' → logprob: -15.000085830688477
    6. ')

' → logprob: -15.125085830688477
    7. ']' → logprob: -15.375085830688477
    8. '}' → logprob: -15.500085830688477
    9. ')
' → logprob: -15.625085830688477
    10. '<|end|>' → logprob: -16.250085830688477

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3384615182876587
    2. '   ' → logprob: -2.213461399078369
    3. '\n' → logprob: -3.088461399078369
    4. '    
' → logprob: -3.088461399078369
    5. ' 
' → logprob: -3.463461399078369
    6. '' → logprob: -3.713461399078369
    7. ' ' → logprob: -4.588461399078369
    8. '  
' → logprob: -4.838461399078369
    9. '<|end|>' → logprob: -5.463461399078369
    10. '\' → logprob: -5.963461399078369

Token 31: ' for' (ID: 395)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.035083532333374
    2. ' for' → logprob: -1.785083532333374
    3. '\n' → logprob: -1.785083532333374
    4. '
' → logprob: -1.910083532333374
    5. 'for' (adapté à ' for') → logprob: -2.660083532333374
    6. ' ' → logprob: -3.160083532333374
    7. '    
' → logprob: -3.910083532333374
    8. '   ' → logprob: -4.660083770751953
    9. '  
' → logprob: -4.910083770751953
    10. '\' → logprob: -5.785083770751953

Token 32: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0343758650124073
    2. ' ' → logprob: -3.5343759059906006
    3. ' _' → logprob: -6.5343756675720215
    4. ' range' → logprob: -6.9093756675720215
    5. 'i' → logprob: -7.2843756675720215
    6. '_' → logprob: -7.2843756675720215
    7. ' w' → logprob: -8.40937614440918
    8. ' in' → logprob: -8.40937614440918
    9. ' N' → logprob: -9.53437614440918
    10. ' item' → logprob: -9.53437614440918

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014857756905257702
    2. 'in' → logprob: -4.264857769012451
    3. 'n' → logprob: -8.264857292175293
    4. ' i' → logprob: -8.514857292175293
    5. 'i' → logprob: -8.639857292175293
    6. 'range' → logprob: -10.639857292175293
    7. '_' → logprob: -11.889857292175293
    8. 'weight' → logprob: -12.014857292175293
    9. ' n' → logprob: -12.139857292175293
    10. ' ' → logprob: -12.264857292175293

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007618814241141081
    2. ' range' → logprob: -4.8826189041137695
    3. '(range' → logprob: -11.50761890411377
    4. ')' → logprob: -14.38261890411377
    5. '   ' → logprob: -15.00761890411377
    6. '	range' → logprob: -15.13261890411377
    7. 'weight' → logprob: -15.38261890411377
    8. ' ' → logprob: -15.38261890411377
    9. 'rang' → logprob: -15.50761890411377
    10. 'ange' → logprob: -15.50761890411377

Token 35: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03471628576517105
    2. ' (' → logprob: -3.9097163677215576
    3. '(' → logprob: -4.6597161293029785
    4. ' N' → logprob: -5.4097161293029785
    5. 'N' → logprob: -9.409716606140137
    6. ')' → logprob: -11.284716606140137
    7. ' ' → logprob: -11.284716606140137
    8. '(n' → logprob: -11.534716606140137
    9. '   ' → logprob: -12.534716606140137
    10. ' )' → logprob: -12.659716606140137

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002214172709500417
    2. ':' → logprob: -9.250221252441406
    3. ')' → logprob: -9.750221252441406
    4. ' ):' → logprob: -10.250221252441406
    5. '):
' → logprob: -10.875221252441406
    6. ',' → logprob: -11.750221252441406
    7. '   ' → logprob: -12.750221252441406
    8. '():' → logprob: -14.625221252441406
    9. '}:' → logprob: -15.500221252441406
    10. '>:' → logprob: -15.500221252441406

Token 37: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.7142050862312317
    2. ' ' → logprob: -1.339205026626587
    3. '       ' → logprob: -1.589205026626587
    4. '        ' → logprob: -3.464205026626587
    5. '   ' → logprob: -5.089205265045166
    6. '     ' → logprob: -6.589205265045166
    7. '  ' → logprob: -6.714205265045166
    8. '        
' → logprob: -6.714205265045166
    9. '     
' → logprob: -7.464205265045166
    10. '      ' → logprob: -7.464205265045166

Token 38: ' v' (ID: 323)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.1316208392381668
    2. 'w' → logprob: -2.1316208839416504
    3. ' W' → logprob: -6.38162088394165
    4. ' ' → logprob: -6.75662088394165
    5. '   ' → logprob: -7.13162088394165
    6. '    ' → logprob: -7.88162088394165
    7. 'W' → logprob: -9.131620407104492
    8. 'wj' → logprob: -9.506620407104492
    9. '       ' → logprob: -9.881620407104492
    10. ' weight' → logprob: -9.881620407104492

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22243425250053406
    2. 'alue' → logprob: -1.8474342823028564
    3. ',w' → logprob: -3.7224342823028564
    4. 'al' → logprob: -5.097434043884277
    5. ' ,' → logprob: -5.597434043884277
    6. '_,' → logprob: -6.222434043884277
    7. 'ol' → logprob: -6.597434043884277
    8. 'a' → logprob: -6.722434043884277
    9. 'w' → logprob: -7.472434043884277
    10. ',a' → logprob: -7.597434043884277

Token 40: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3869677186012268
    2. 'w' → logprob: -1.136967658996582
    3. '	w' → logprob: -10.386967658996582
    4. ' ' → logprob: -10.886967658996582
    5. '_w' → logprob: -11.886967658996582
    6. '_' → logprob: -12.011967658996582
    7. '```' → logprob: -12.136967658996582
    8. 'wt' → logprob: -12.761967658996582
    9. '   ' → logprob: -12.886967658996582
    10. 'c' → logprob: -13.136967658996582

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033670712262392044
    2. '=' → logprob: -3.408670663833618
    3. ' ' → logprob: -11.408670425415039
    4. ',' → logprob: -11.533670425415039
    5. ')' → logprob: -13.408670425415039
    6. '  ' → logprob: -14.408670425415039
    7. '=int' → logprob: -14.408670425415039
    8. '   ' → logprob: -15.283670425415039
    9. '    ' → logprob: -15.283670425415039
    10. ' ,' → logprob: -15.658670425415039

Token 42: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1427142173051834
    2. 'map' → logprob: -2.017714262008667
    3. '	map' → logprob: -11.767714500427246
    4. ' list' → logprob: -11.892714500427246
    5. 'list' → logprob: -12.392714500427246
    6. ' tuple' → logprob: -12.642714500427246
    7. ' ' → logprob: -12.892714500427246
    8. '(map' → logprob: -12.892714500427246
    9. '   ' → logprob: -13.267714500427246
    10. ' [' → logprob: -13.517714500427246

Token 43: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005533903022296727
    2. '(' → logprob: -7.750553607940674
    3. 'int' → logprob: -9.375553131103516
    4. '(lambda' → logprob: -11.125553131103516
    5. '(input' → logprob: -11.875553131103516
    6. '(list' → logprob: -12.250553131103516
    7. '(str' → logprob: -12.250553131103516
    8. '<int' → logprob: -13.125553131103516
    9. 'list' → logprob: -13.875553131103516
    10. '[int' → logprob: -13.875553131103516

Token 44: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.5975125432014465
    2. ',' → logprob: -1.3475124835968018
    3. '(sys' → logprob: -2.8475124835968018
    4. 'read' → logprob: -2.8475124835968018
    5. '(input' → logprob: -3.3475124835968018
    6. ')' → logprob: -4.222512722015381
    7. ',input' → logprob: -4.722512722015381
    8. 'sys' → logprob: -4.847512722015381
    9. 'input' → logprob: -5.597512722015381
    10. '(' → logprob: -6.347512722015381

Token 45: ' readline' (ID: 179561)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.002227098448202014
    2. ' readline' → logprob: -6.627227306365967
    3. 'input' → logprob: -7.502227306365967
    4. ' read' → logprob: -8.252226829528809
    5. 'sys' → logprob: -9.752226829528809
    6. ')' → logprob: -11.002226829528809
    7. '.readline' → logprob: -12.377226829528809
    8. ' input' → logprob: -12.502226829528809
    9. '(read' → logprob: -12.502226829528809
    10. '	read' → logprob: -13.877226829528809

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004031737335026264
    2. '()' → logprob: -5.629031658172607
    3. '())' → logprob: -7.754031658172607
    4. ')' → logprob: -13.754032135009766
    5. '()
' → logprob: -14.879032135009766
    6. ' ().' → logprob: -15.004032135009766
    7. '();)' → logprob: -15.879032135009766
    8. '()))' → logprob: -16.004032135009766
    9. '(' → logprob: -16.129032135009766
    10. '().'' → logprob: -16.629032135009766

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08687181770801544
    2. 'strip' → logprob: -2.586871862411499
    3. 'rstrip' → logprob: -4.83687162399292
    4. ' split' → logprob: -11.336872100830078
    5. ')' → logprob: -13.211872100830078
    6. '(split' → logprob: -13.711872100830078
    7. '().' → logprob: -13.711872100830078
    8. ' strip' → logprob: -13.961872100830078
    9. 'read' → logprob: -14.336872100830078
    10. 'spl' → logprob: -15.461872100830078

Token 48: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06597258895635605
    2. ')' → logprob: -2.8159725666046143
    3. '()))' → logprob: -6.315972805023193
    4. '()' → logprob: -6.565972805023193
    5. '))' → logprob: -7.190972805023193
    6. '())
' → logprob: -10.940972328186035
    7. '(' → logprob: -12.065972328186035
    8. ' ())' → logprob: -13.315972328186035
    9. ' )' → logprob: -14.440972328186035
    10. '()))
' → logprob: -14.940972328186035

Token 49: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.206063985824585
    2. ' 
' → logprob: -1.331063985824585
    3. ' ' → logprob: -1.706063985824585
    4. '       ' → logprob: -2.581063985824585
    5. '  
' → logprob: -3.081063985824585
    6. '        
' → logprob: -3.331063985824585
    7. '    
' → logprob: -3.831063985824585
    8. '    ' → logprob: -4.206064224243164
    9. '<|end|>' → logprob: -4.206064224243164
    10. '   ' → logprob: -4.456064224243164

Token 50: ' ww' (ID: 110880)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15753306448459625
    2. ' for' → logprob: -2.1575331687927246
    3. ' 
' → logprob: -4.907533168792725
    4. 'for' → logprob: -5.157533168792725
    5. '       ' → logprob: -5.407533168792725
    6. '    ' → logprob: -5.657533168792725
    7. '   ' → logprob: -5.782533168792725
    8. '        ' → logprob: -5.907533168792725
    9. '<|end|>' → logprob: -7.657533168792725
    10. '  
' → logprob: -8.407532691955566

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05185709148645401
    2. '=' → logprob: -3.4268569946289062
    3. ',' → logprob: -4.051856994628906
    4. '   ' → logprob: -8.926856994628906
    5. 'hile' → logprob: -8.926856994628906
    6. ' ,' → logprob: -9.301856994628906
    7. ' ' → logprob: -9.926856994628906
    8. 't' → logprob: -10.051856994628906
    9. 'w' → logprob: -10.426856994628906
    10. '  ' → logprob: -10.801856994628906

Token 52: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.28312063217163086
    2. ' w' → logprob: -1.4081206321716309
    3. 'weight' → logprob: -6.658120632171631
    4. ' weight' → logprob: -7.658120632171631
    5. ' ' → logprob: -9.408121109008789
    6. 'v' → logprob: -10.158121109008789
    7. '[w' → logprob: -10.783121109008789
    8. ' v' → logprob: -11.408121109008789
    9. 'ww' → logprob: -11.533121109008789
    10. ' [' → logprob: -11.658121109008789

Token 53: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6290689706802368
    2. ' for' → logprob: -2.1290688514709473
    3. ' +' → logprob: -2.1290688514709473
    4. ',' → logprob: -2.3790688514709473
    5. 'for' → logprob: -3.2540688514709473
    6. '
' → logprob: -3.6290688514709473
    7. ' ' → logprob: -3.8790688514709473
    8. '<|end|>' → logprob: -4.629068851470947
    9. '   ' → logprob: -5.129068851470947
    10. ' *' → logprob: -5.504068851470947

Token 54: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06478022038936615
    2. ',' → logprob: -4.189780235290527
    3. ' 
' → logprob: -4.564780235290527
    4. '
' → logprob: -4.689780235290527
    5. ' for' → logprob: -5.189780235290527
    6. '<|end|>' → logprob: -5.439780235290527
    7. '  
' → logprob: -5.814780235290527
    8. '  ' → logprob: -5.814780235290527
    9. '   ' → logprob: -5.939780235290527
    10. '+' → logprob: -6.189780235290527

Token 55: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6726919412612915
    2. 'v' → logprob: -2.172691822052002
    3. ' ' → logprob: -2.172691822052002
    4. 'for' → logprob: -2.297691822052002
    5. ',' → logprob: -3.047691822052002
    6. ' v' → logprob: -3.422691822052002
    7. '
' → logprob: -4.047691822052002
    8. ' 
' → logprob: -4.297691822052002
    9. '  
' → logprob: -4.797691822052002
    10. ' while' → logprob: -4.922691822052002

Token 56: ' ww' (ID: 110880)
  Prédit: ' ww'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ww' → logprob: -0.003573580412194133
    2. 'ww' → logprob: -6.003573417663574
    3. ' w' → logprob: -7.003573417663574
    4. ' weight' → logprob: -8.878573417663574
    5. ' ' → logprob: -10.628573417663574
    6. 'weight' → logprob: -11.628573417663574
    7. 'w' → logprob: -12.003573417663574
    8. '   ' → logprob: -13.003573417663574
    9. '  ' → logprob: -13.253573417663574
    10. '    ' → logprob: -13.378573417663574

Token 57: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.22546018660068512
    2. ' <=' → logprob: -1.600460171699524
    3. '>=' → logprob: -10.350460052490234
    4. 'weight' → logprob: -12.350460052490234
    5. ' >=' → logprob: -12.600460052490234
    6. '<' → logprob: -13.350460052490234
    7. 'w' → logprob: -13.600460052490234
    8. ',' → logprob: -14.600460052490234
    9. ' weight' → logprob: -14.600460052490234
    10. '≤' → logprob: -14.725460052490234

Token 58: ' weight' (ID: 6049)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.006716079078614712
    2. ' weight' → logprob: -5.006716251373291
    3. 'weig' → logprob: -14.381715774536133
    4. 'we' → logprob: -16.631715774536133
    5. 'w' → logprob: -17.006715774536133
    6. 'weights' → logprob: -18.006715774536133
    7. ' gewicht' → logprob: -19.006715774536133
    8. '(weight' → logprob: -19.006715774536133
    9. 'width' → logprob: -19.881715774536133
    10. 'Weight' → logprob: -19.881715774536133

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016793079674243927
    2. ':
' → logprob: -4.141793251037598
    3. '):' → logprob: -7.766793251037598
    4. ' and' → logprob: -8.641793251037598
    5. ' :' → logprob: -9.766793251037598
    6. '):
' → logprob: -9.891793251037598
    7. ' :
' → logprob: -11.516793251037598
    8. '       ' → logprob: -11.766793251037598
    9. '   ' → logprob: -11.891793251037598
    10. '<|end|>' → logprob: -12.016793251037598

Token 60: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6327226758003235
    2. ':' → logprob: -1.1327226161956787
    3. '       ' → logprob: -2.3827226161956787
    4. '<|end|>' → logprob: -3.8827226161956787
    5. 'dp' → logprob: -4.132722854614258
    6. ' dp' → logprob: -5.132722854614258
    7. ' and' → logprob: -6.132722854614258
    8. ':
' → logprob: -6.132722854614258
    9. '<|end|>' → logprob: -6.382722854614258
    10. '(dp' → logprob: -6.507722854614258

Token 61: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6057562828063965
    2. 'dp' (adapté à ' dp') → logprob: -0.8557562828063965
    3. '           ' → logprob: -3.8557562828063965
    4. '       ' → logprob: -6.1057562828063965
    5. '               ' → logprob: -6.4807562828063965
    6. '<|end|>' → logprob: -6.6057562828063965
    7. '	dp' → logprob: -6.8557562828063965
    8. '   ' → logprob: -7.1057562828063965
    9. ' ' → logprob: -8.605756759643555
    10. ' for' → logprob: -8.730756759643555

Token 62: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.371605948312208e-05
    2. '[w' → logprob: -10.125053405761719
    3. '[max' → logprob: -12.375053405761719
    4. ' [' → logprob: -12.750053405761719
    5. 'ww' → logprob: -13.750053405761719
    6. '[...]' → logprob: -13.750053405761719
    7. '[v' → logprob: -14.000053405761719
    8. 'max' → logprob: -14.000053405761719
    9. '           ' → logprob: -14.625053405761719
    10. '   ' → logprob: -14.875053405761719

Token 63: 'ww' (ID: 1566)
  Prédit: 'ww'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ww' → logprob: -0.000771509250625968
    2. 'w' → logprob: -7.250771522521973
    3. ']' → logprob: -10.750771522521973
    4. ' ww' → logprob: -11.000771522521973
    5. '[' → logprob: -11.250771522521973
    6. '   ' → logprob: -13.500771522521973
    7. '[w' → logprob: -13.625771522521973
    8. '(' → logprob: -14.250771522521973
    9. 'v' → logprob: -14.375771522521973
    10. 'vv' → logprob: -14.625771522521973

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011589158093556762
    2. ']=' → logprob: -7.251158714294434
    3. ' ]' → logprob: -7.876158714294434
    4. ' =' → logprob: -10.376158714294434
    5. 'max' → logprob: -10.626158714294434
    6. '=max' → logprob: -12.001158714294434
    7. '=' → logprob: -12.501158714294434
    8. ']+=' → logprob: -13.876158714294434
    9. '-' → logprob: -14.626158714294434
    10. 'w' → logprob: -15.376158714294434

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22693388164043427
    2. '=' → logprob: -1.6019338369369507
    3. '=max' → logprob: -6.60193395614624
    4. 'max' → logprob: -8.851933479309082
    5. ' max' → logprob: -11.851933479309082
    6. '+=' → logprob: -12.601933479309082
    7. '(max' → logprob: -13.476933479309082
    8. ' ' → logprob: -13.726933479309082
    9. '+' → logprob: -13.726933479309082
    10. '[max' → logprob: -13.851933479309082

Token 66: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008615042082965374
    2. ' max' → logprob: -4.758615016937256
    3. '	max' → logprob: -14.883615493774414
    4. 'dp' → logprob: -16.258615493774414
    5. '(max' → logprob: -17.258615493774414
    6. '[max' → logprob: -17.258615493774414
    7. '_max' → logprob: -18.758615493774414
    8. '=max' → logprob: -18.758615493774414
    9. '   ' → logprob: -19.258615493774414
    10. 'min' → logprob: -19.383615493774414

Token 67: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0015436685644090176
    2. '(' → logprob: -6.5015435218811035
    3. 'dp' → logprob: -10.376543998718262
    4. ' dp' → logprob: -11.751543998718262
    5. '	dp' → logprob: -13.751543998718262
    6. ' (' → logprob: -14.376543998718262
    7. '(
' → logprob: -15.501543998718262
    8. '_dp' → logprob: -15.751543998718262
    9. '(max' → logprob: -16.626543045043945
    10. ')' → logprob: -17.251543045043945

Token 68: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3902033970225602e-05
    2. '-' → logprob: -12.625014305114746
    3. '][' → logprob: -13.625014305114746
    4. '       ' → logprob: -13.875014305114746
    5. '[w' → logprob: -13.875014305114746
    6. '```' → logprob: -13.875014305114746
    7. ')' → logprob: -14.125014305114746
    8. ')[' → logprob: -14.125014305114746
    9. '   ' → logprob: -14.625014305114746
    10. 'w' → logprob: -14.625014305114746

Token 69: 'ww' (ID: 1566)
  Prédit: 'ww'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ww' → logprob: -0.020773928612470627
    2. 'w' → logprob: -3.8957738876342773
    3. '[' → logprob: -8.895773887634277
    4. '-' → logprob: -10.645773887634277
    5. '   ' → logprob: -11.145773887634277
    6. ' ww' → logprob: -11.145773887634277
    7. 'wt' → logprob: -11.770773887634277
    8. '[w' → logprob: -12.395773887634277
    9. ']' → logprob: -12.770773887634277
    10. '       ' → logprob: -13.020773887634277

Token 70: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0046686455607414246
    2. ' ,' → logprob: -5.504668712615967
    3. '],' → logprob: -7.504668712615967
    4. 'dp' → logprob: -11.129668235778809
    5. ']' → logprob: -12.379668235778809
    6. '   ' → logprob: -12.754668235778809
    7. ' ],' → logprob: -12.879668235778809
    8. ' -' → logprob: -13.004668235778809
    9. '),' → logprob: -13.504668235778809
    10. '           ' → logprob: -13.504668235778809

Token 71: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6328734755516052
    2. 'dp' → logprob: -0.7578734755516052
    3. '           ' → logprob: -9.38287353515625
    4. '	dp' → logprob: -9.75787353515625
    5. 'v' → logprob: -10.00787353515625
    6. '(dp' → logprob: -10.75787353515625
    7. '               ' → logprob: -11.38287353515625
    8. ' v' → logprob: -11.88287353515625
    9. '_dp' → logprob: -11.88287353515625
    10. '   ' → logprob: -12.00787353515625

Token 72: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.125
    3. '   ' → logprob: -16.25
    4. 'ww' → logprob: -16.875
    5. '[w' → logprob: -17.625
    6. '           ' → logprob: -18.125
    7. '\[' → logprob: -18.375
    8. '```' → logprob: -18.75
    9. '          ' → logprob: -19.0
    10. '       ' → logprob: -19.25

Token 73: 'ww' (ID: 1566)
  Prédit: 'ww'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ww' → logprob: -0.0004155377100687474
    2. ' ww' → logprob: -8.125415802001953
    3. '[' → logprob: -9.750415802001953
    4. '(' → logprob: -11.375415802001953
    5. '   ' → logprob: -11.500415802001953
    6. '{' → logprob: -11.625415802001953
    7. 'w' → logprob: -11.750415802001953
    8. '           ' → logprob: -12.125415802001953
    9. 'wo' → logprob: -12.625415802001953
    10. 'wt' → logprob: -13.375415802001953

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42940863966941833
    2. '-' → logprob: -1.1794086694717407
    3. '-w' → logprob: -3.179408550262451
    4. ']' → logprob: -11.42940902709961
    5. '   ' → logprob: -11.92940902709961
    6. ' ' → logprob: -12.05440902709961
    7. '-W' → logprob: -12.17940902709961
    8. '-v' → logprob: -12.30440902709961
    9. '	' → logprob: -14.80440902709961
    10. '  ' → logprob: -14.92940902709961

Token 75: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01604093797504902
    2. ' w' → logprob: -4.141040802001953
    3. '           ' → logprob: -12.766040802001953
    4. ']' → logprob: -14.641040802001953
    5. ' ' → logprob: -15.016040802001953
    6. '<|end|>' → logprob: -15.016040802001953
    7. '	w' → logprob: -15.141040802001953
    8. '            ' → logprob: -15.516040802001953
    9. ''w' → logprob: -15.516040802001953
    10. '   ' → logprob: -15.641040802001953

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.240481914370321e-05
    2. ' ]' → logprob: -10.500052452087402
    3. ']+' → logprob: -10.625052452087402
    4. '])' → logprob: -16.125051498413086
    5. '']' → logprob: -16.250051498413086
    6. 'w' → logprob: -16.625051498413086
    7. ']]' → logprob: -16.875051498413086
    8. '1' → logprob: -17.250051498413086
    9. '`]' → logprob: -17.375051498413086
    10. ']
' → logprob: -17.750051498413086

Token 77: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07549193501472473
    2. ' +' → logprob: -3.2004919052124023
    3. '+' → logprob: -3.7004919052124023
    4. ']+' → logprob: -5.200491905212402
    5. ' ]' → logprob: -6.950491905212402
    6. ')' → logprob: -7.200491905212402
    7. ' ' → logprob: -11.575491905212402
    8. ')+' → logprob: -11.825491905212402
    9. '])' → logprob: -11.950491905212402
    10. '[' → logprob: -12.700491905212402

Token 78: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004091458860784769
    2. ' v' → logprob: -5.504091262817383
    3. '1' → logprob: -11.754091262817383
    4. '   ' → logprob: -13.504091262817383
    5. ' ' → logprob: -13.629091262817383
    6. '	v' → logprob: -14.129091262817383
    7. ')v' → logprob: -14.754091262817383
    8. '    ' → logprob: -15.004091262817383
    9. '[v' → logprob: -15.254091262817383
    10. '```' → logprob: -16.254091262817383

Token 79: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5761609077453613
    2. ')' → logprob: -0.8261609077453613
    3. ')
' → logprob: -8.826160430908203
    4. '           ' → logprob: -10.201160430908203
    5. ' )
' → logprob: -10.826160430908203
    6. '       ' → logprob: -11.451160430908203
    7. ' )' → logprob: -12.826160430908203
    8. ')

' → logprob: -13.576160430908203
    9. '               ' → logprob: -13.701160430908203
    10. ')`
' → logprob: -13.951160430908203

Token 80: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08031520992517471
    2. '
' → logprob: -2.830315113067627
    3. '       ' → logprob: -4.580315113067627
    4. '   ' → logprob: -5.580315113067627
    5. '```' → logprob: -6.705315113067627
    6. ' 
' → logprob: -7.330315113067627
    7. '            
' → logprob: -7.330315113067627
    8. '
' → logprob: -7.705315113067627
    9. '        
' → logprob: -8.205315589904785
    10. '               ' → logprob: -8.580315589904785

Token 81: ' ww' (ID: 110880)
  Prédit: 'ww'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ww' (adapté à ' ww') → logprob: -0.002233401872217655
    2. ' ww' → logprob: -6.127233505249023
    3. '1' → logprob: -10.877233505249023
    4. '   ' → logprob: -11.752233505249023
    5. 'w' → logprob: -12.127233505249023
    6. '```' → logprob: -12.252233505249023
    7. '++' → logprob: -12.752233505249023
    8. '           ' → logprob: -12.877233505249023
    9. ' ' → logprob: -13.502233505249023
    10. '  ' → logprob: -14.002233505249023

Token 82: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.034183043986558914
    2. ' +=' → logprob: -3.4091830253601074
    3. '+' → logprob: -7.534183025360107
    4. '=' → logprob: -14.159183502197266
    5. ']+=' → logprob: -14.284183502197266
    6. '+='' → logprob: -15.159183502197266
    7. '+="' → logprob: -15.409183502197266
    8. ' +' → logprob: -15.659183502197266
    9. '	' → logprob: -15.659183502197266
    10. '+=(' → logprob: -15.659183502197266

Token 83: ' ' (ID: 220)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.006967081688344479
    2. '1' → logprob: -5.131967067718506
    3. ' w' → logprob: -6.881967067718506
    4. ' ' → logprob: -12.256967544555664
    5. '0' → logprob: -13.631967544555664
    6. '-w' → logprob: -13.881967544555664
    7. '?w' → logprob: -14.006967544555664
    8. '<w' → logprob: -14.256967544555664
    9. '100' → logprob: -14.381967544555664
    10. '>w' → logprob: -15.319467544555664

Token 84: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.018345193937420845
    2. '1' → logprob: -4.018345355987549
    3. ' w' → logprob: -8.64334487915039
    4. ' ' → logprob: -11.89334487915039
    5. '0' → logprob: -12.76834487915039
    6. '100' → logprob: -13.26834487915039
    7. 'weight' → logprob: -13.39334487915039
    8. '?w' → logprob: -14.01834487915039
    9. '-w' → logprob: -14.14334487915039
    10. '<w' → logprob: -14.70584487915039

Token 85: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' dp' (ID: 21546)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7594528198242188
    2. 'max' → logprob: -1.0094528198242188
    3. 'dp' → logprob: -2.1344528198242188
    4. ' dp' → logprob: -3.0094528198242188
    5. '(dp' → logprob: -11.884452819824219
    6. '(max' → logprob: -12.009452819824219
    7. '[max' → logprob: -12.259452819824219
    8. ' ' → logprob: -12.634452819824219
    9. '	dp' → logprob: -13.134452819824219
    10. '0' → logprob: -13.821952819824219

Token 89: '[-' (ID: 17503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -15.375004768371582
    4. '0' → logprob: -17.3125057220459
    5. ')' → logprob: -17.3750057220459
    6. '2' → logprob: -17.5000057220459
    7. '１' → logprob: -17.8125057220459
    8. '`' → logprob: -17.9375057220459
    9. '-' → logprob: -18.1875057220459
    10. ']' → logprob: -18.6875057220459

Token 91: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -11.875007629394531
    3. ']' → logprob: -16.37500762939453
    4. ')

' → logprob: -17.12500762939453
    5. '}' → logprob: -17.50000762939453
    6. '<|end|>' → logprob: -17.75000762939453
    7. '```' → logprob: -17.87500762939453
    8. '）' → logprob: -17.87500762939453
    9. ' )' → logprob: -18.00000762939453
    10. ')`' → logprob: -18.12500762939453

Token 92: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0019289902411401272
    2. '__' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.251928329467773
    5. 'name' → logprob: -17.626928329467773
    6. '_' → logprob: -18.501928329467773
    7. '___' → logprob: -18.626928329467773
    8. ' ___' → logprob: -18.751928329467773
    9. '_name' → logprob: -19.251928329467773
    10. '/__' → logprob: -19.501928329467773

Token 94: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06005001813173294
    2. '==' → logprob: -3.6850500106811523
    3. '.__' → logprob: -4.060050010681152
    4. 'name' → logprob: -5.435050010681152
    5. ' ==' → logprob: -5.560050010681152
    6. ' __' → logprob: -6.060050010681152
    7. '.name' → logprob: -6.310050010681152
    8. '__.' → logprob: -6.310050010681152
    9. '__.__' → logprob: -6.685050010681152
    10. '.' → logprob: -8.185050010681152

Token 95: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0445127372804563e-05
    2. '_' → logprob: -11.87501049041748
    3. '__.__' → logprob: -13.50001049041748
    4. '==' → logprob: -14.00001049041748
    5. '___' → logprob: -14.50001049041748
    6. '__.' → logprob: -15.75001049041748
    7. '____' → logprob: -15.87501049041748
    8. ' __' → logprob: -16.000009536743164
    9. '__
' → logprob: -16.375009536743164
    10. ' ==' → logprob: -16.750009536743164

Token 96: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03615947812795639
    2. ' ==' → logprob: -3.6611595153808594
    3. '==' → logprob: -4.786159515380859
    4. '__":
' → logprob: -7.661159515380859
    5. '__.__' → logprob: -7.911159515380859
    6. '__':
' → logprob: -8.41115951538086
    7. '=="' → logprob: -8.53615951538086
    8. '.__' → logprob: -9.53615951538086
    9. '.' → logprob: -10.53615951538086
    10. '=='' → logprob: -10.91115951538086

Token 97: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1269402801990509
    2. ''' → logprob: -2.1269402503967285
    3. ' "__' → logprob: -12.001940727233887
    4. ' "' → logprob: -12.251940727233887
    5. '__' → logprob: -14.626940727233887
    6. ' '__' → logprob: -15.001940727233887
    7. ' '' → logprob: -15.751940727233887
    8. '"user' → logprob: -15.876940727233887
    9. ''"' → logprob: -16.00193977355957
    10. ' ' → logprob: -17.37693977355957

Token 98: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -6.158350151963532e-05
    2. 'name' → logprob: -9.750061988830566
    3. 'ma' → logprob: -14.250061988830566
    4. 'm' → logprob: -14.750061988830566
    5. 'py' → logprob: -15.125061988830566
    6. ' main' → logprob: -15.125061988830566
    7. 'python' → logprob: -15.250061988830566
    8. 'mp' → logprob: -15.375061988830566
    9. 'built' → logprob: -15.375061988830566
    10. '_main' → logprob: -15.500061988830566

Token 99: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7035897970199585
    2. '__":
' → logprob: -0.7035897970199585
    3. '__:' → logprob: -4.578589916229248
    4. '__':
' → logprob: -9.20358943939209
    5. '_' → logprob: -11.70358943939209
    6. '__["' → logprob: -12.45358943939209
    7. '__
' → logprob: -13.57858943939209
    8. '__.' → logprob: -13.82858943939209
    9. ':' → logprob: -13.95358943939209
    10. '__
' → logprob: -14.45358943939209

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032136032823473215
    2. '    
' → logprob: -6.753213405609131
    3. ' input' → logprob: -7.628213405609131
    4. ' readline' → logprob: -7.628213405609131
    5. '<|end|>' → logprob: -8.253213882446289
    6. 'n' → logprob: -8.628213882446289
    7. 'input' → logprob: -8.753213882446289
    8. ' n' → logprob: -9.253213882446289
    9. '    ' → logprob: -10.003213882446289
    10. '   ' → logprob: -10.253213882446289

Token 101: ' n' (ID: 297)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03000016324222088
    2. ' N' → logprob: -4.28000020980835
    3. 'n' (adapté à ' n') → logprob: -4.40500020980835
    4. '   ' → logprob: -5.78000020980835
    5. ' n' → logprob: -8.029999732971191
    6. 'import' → logprob: -9.654999732971191
    7. '	N' → logprob: -12.279999732971191
    8. 'input' → logprob: -13.279999732971191
    9. ' ' → logprob: -13.654999732971191
    10. '    
' → logprob: -13.779999732971191

Token 102: '_goods' (ID: 114346)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.045293234288692474
    2. ' =' → logprob: -3.2952933311462402
    3. ' ,' → logprob: -5.04529333114624
    4. '=' → logprob: -8.420292854309082
    5. ' ' → logprob: -8.545292854309082
    6. ',w' → logprob: -8.545292854309082
    7. '   ' → logprob: -9.420292854309082
    8. '  ' → logprob: -10.045292854309082
    9. ',W' → logprob: -11.420292854309082
    10. ',N' → logprob: -11.920292854309082

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14336204528808594
    2. ' =' → logprob: -2.143362045288086
    3. '=' → logprob: -4.143362045288086
    4. ' ,' → logprob: -7.893362045288086
    5. ' ' → logprob: -11.393362045288086
    6. '=int' → logprob: -11.893362045288086
    7. ',n' → logprob: -12.018362045288086
    8. ',num' → logprob: -12.268362045288086
    9. '   ' → logprob: -12.518362045288086
    10. ',w' → logprob: -12.893362045288086

Token 104: ' weight' (ID: 6049)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7360697984695435
    2. ' max' → logprob: -1.8610697984695435
    3. 'capacity' → logprob: -2.111069679260254
    4. 'W' → logprob: -2.736069679260254
    5. 'w' → logprob: -2.861069679260254
    6. ' W' → logprob: -3.111069679260254
    7. ' capacity' → logprob: -3.236069679260254
    8. ' w' → logprob: -3.986069679260254
    9. 'weight' → logprob: -5.236069679260254
    10. 'limit' → logprob: -5.736069679260254

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03365330398082733
    2. '=' → logprob: -3.4086532592773438
    3. ' ' → logprob: -12.033653259277344
    4. ',' → logprob: -14.283653259277344
    5. ')' → logprob: -15.658653259277344
    6. '_' → logprob: -16.158653259277344
    7. 's' → logprob: -16.408653259277344
    8. '=input' → logprob: -16.533653259277344
    9. ' ,' → logprob: -16.658653259277344
    10. '=int' → logprob: -16.783653259277344

Token 106: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023246407508850098
    2. 'map' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.773246765136719
    4. '	map' → logprob: -15.398246765136719
    5. ' ' → logprob: -15.898246765136719
    6. '  ' → logprob: -17.77324676513672
    7. ' list' → logprob: -17.89824676513672
    8. '(map' → logprob: -18.27324676513672
    9. ' read' → logprob: -18.52324676513672
    10. '    ' → logprob: -18.52324676513672

Token 107: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007628988474607468
    2. '(' → logprob: -4.882628917694092
    3. '(input' → logprob: -12.25762939453125
    4. '(map' → logprob: -12.63262939453125
    5. '(list' → logprob: -12.75762939453125
    6. 'int' → logprob: -13.00762939453125
    7. '(in' → logprob: -13.25762939453125
    8. '(str' → logprob: -13.38262939453125
    9. '(lambda' → logprob: -13.63262939453125
    10. '[int' → logprob: -13.88262939453125

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04376089200377464
    2. '(read' → logprob: -3.2937607765197754
    3. 'read' → logprob: -5.668760776519775
    4. ',input' → logprob: -6.668760776519775
    5. ')' → logprob: -7.668760776519775
    6. '(input' → logprob: -8.293761253356934
    7. '(),' → logprob: -9.418761253356934
    8. 'input' → logprob: -9.793761253356934
    9. '(' → logprob: -10.418761253356934
    10. '.readline' → logprob: -10.543761253356934

Token 109: ' input' (ID: 3422)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.006954180542379618
    2. ' readline' → logprob: -5.006954193115234
    3. ' read' → logprob: -8.631954193115234
    4. 'input' → logprob: -9.756954193115234
    5. '(read' → logprob: -13.881954193115234
    6. '.readline' → logprob: -14.006954193115234
    7. ' input' → logprob: -14.506954193115234
    8. ')' → logprob: -15.756954193115234
    9. '	read' → logprob: -16.756954193115234
    10. 'sys' → logprob: -16.756954193115234

Token 110: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000963627069722861
    2. '()' → logprob: -7.1259636878967285
    3. '())' → logprob: -8.75096321105957
    4. ')' → logprob: -14.87596321105957
    5. ' ().' → logprob: -15.62596321105957
    6. '()
' → logprob: -16.25096321105957
    7. '()[' → logprob: -16.62596321105957
    8. '(' → logprob: -16.62596321105957
    9. '());' → logprob: -16.87596321105957
    10. '()`' → logprob: -17.87596321105957

Token 111: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.8802491215174086e-05
    2. 'strip' → logprob: -10.500028610229492
    3. '(split' → logprob: -14.250028610229492
    4. ' split' → logprob: -15.000028610229492
    5. 'rstrip' → logprob: -15.750028610229492
    6. 'spl' → logprob: -17.250028610229492
    7. '.split' → logprob: -18.000028610229492
    8. ')' → logprob: -18.125028610229492
    9. 'read' → logprob: -18.125028610229492
    10. '().' → logprob: -18.125028610229492

Token 112: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08381543308496475
    2. '())' → logprob: -2.583815336227417
    3. '()' → logprob: -5.333815574645996
    4. '))' → logprob: -10.083815574645996
    5. ')
' → logprob: -10.708815574645996
    6. '())
' → logprob: -11.333815574645996
    7. ')`' → logprob: -12.333815574645996
    8. ')")' → logprob: -13.583815574645996
    9. ')\' → logprob: -13.833815574645996
    10. ' )' → logprob: -13.958815574645996

Token 113: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08274666965007782
    2. '   ' → logprob: -2.582746744155884
    3. '<|end|>' → logprob: -5.707746505737305
    4. ' print' → logprob: -8.457746505737305
    5. '    
' → logprob: -9.207746505737305
    6. '
' → logprob: -9.207746505737305
    7. 'result' → logprob: -9.957746505737305
    8. ')' → logprob: -11.332746505737305
    9. '	print' → logprob: -11.457746505737305
    10. 'results' → logprob: -12.082746505737305

Token 114: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -9.253090865968261e-06
    2. 'result' → logprob: -12.000009536743164
    3. ' print' → logprob: -13.125009536743164
    4. '   ' → logprob: -14.375009536743164
    5. 'pr' → logprob: -15.625009536743164
    6. 'results' → logprob: -16.500009536743164
    7. 'values' → logprob: -17.000009536743164
    8. '    
' → logprob: -17.875009536743164
    9. 'data' → logprob: -18.125009536743164
    10. 'answer' → logprob: -18.125009536743164

Token 115: '(kn' (ID: 190369)
  Prédit: '(kn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(kn' → logprob: -0.0007110013975761831
    2. '(' → logprob: -7.250710964202881
    3. '(k' → logprob: -14.125711441040039
    4. '(
' → logprob: -15.750711441040039
    5. '(K' → logprob: -17.00071144104004
    6. '(f' → logprob: -17.25071144104004
    7. '()' → logprob: -17.37571144104004
    8. '(

' → logprob: -17.62571144104004
    9. '((' → logprob: -18.62571144104004
    10. '(len' → logprob: -18.75071144104004

Token 116: 'apsack' (ID: 178559)
  Prédit: 'apsack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apsack' → logprob: -1.580929347255733e-05
    2. 'aps' → logprob: -11.375016212463379
    3. 's' → logprob: -12.375016212463379
    4. 'ap' → logprob: -17.125015258789062
    5. 'as' → logprob: -17.250015258789062
    6. 'ps' → logprob: -18.000015258789062
    7. '(s' → logprob: -19.250015258789062
    8. 'apse' → logprob: -19.625015258789062
    9. 'es' → logprob: -19.875015258789062
    10. '_s' → logprob: -20.500015258789062

Token 117: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.3464544432936236e-05
    2. '(' → logprob: -10.125043869018555
    3. ' (' → logprob: -13.000043869018555
    4. ')(' → logprob: -13.875043869018555
    5. ')' → logprob: -16.125043869018555
    6. '(N' → logprob: -17.250043869018555
    7. '(
' → logprob: -17.375043869018555
    8. ')n' → logprob: -19.125043869018555
    9. '(noun' → logprob: -20.375043869018555
    10. '((' → logprob: -20.375043869018555

Token 118: '_goods' (ID: 114346)
  Prédit: '_goods'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_goods' → logprob: -0.000375380739569664
    2. 'goods' → logprob: -8.000375747680664
    3. ',' → logprob: -10.750375747680664
    4. '(goods' → logprob: -11.875375747680664
    5. '_good' → logprob: -12.375375747680664
    6. '(n' → logprob: -13.375375747680664
    7. ',n' → logprob: -13.625375747680664
    8. 'oods' → logprob: -13.875375747680664
    9. '_go' → logprob: -14.375375747680664
    10. '.goods' → logprob: -14.500375747680664

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',n' → logprob: -16.875001907348633
    4. '(weight' → logprob: -16.875001907348633
    5. ',
' → logprob: -18.750001907348633
    6. 'weight' → logprob: -18.875001907348633
    7. ',w' → logprob: -19.250001907348633
    8. '‌,' → logprob: -19.750001907348633
    9. '(' → logprob: -19.750001907348633
    10. '(n' → logprob: -20.375001907348633

Token 120: ' weight' (ID: 6049)
  Prédit: ' weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weight' → logprob: -0.02072744630277157
    2. 'weight' → logprob: -3.8957273960113525
    3. ')' → logprob: -8.770727157592773
    4. ' )' → logprob: -11.020727157592773
    5. '"' → logprob: -12.270727157592773
    6. '(weight' → logprob: -12.645727157592773
    7. ''' → logprob: -13.770727157592773
    8. ' ' → logprob: -13.770727157592773
    9. ' gewicht' → logprob: -14.020727157592773
    10. 'Weight' → logprob: -14.520727157592773

Token 121: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008617881685495377
    2. ')' → logprob: -4.758617877960205
    3. '))
' → logprob: -12.758618354797363
    4. ')))' → logprob: -15.633618354797363
    5. ' ))' → logprob: -16.383617401123047
    6. '()))' → logprob: -16.633617401123047
    7. ')
' → logprob: -16.633617401123047
    8. '),' → logprob: -17.133617401123047
    9. '())' → logprob: -18.008617401123047
    10. ' )' → logprob: -18.508617401123047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 46.22%
Précision adaptée (1ère position): 47.90%
Précision (top 10): 84.03%
================================================================================
