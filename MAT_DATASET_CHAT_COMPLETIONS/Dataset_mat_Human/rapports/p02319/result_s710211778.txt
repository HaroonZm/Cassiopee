================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, W = map(int, input().split())
I = [list(map(int, input().split())) for _ in range(N)]
MAX_V = sum(v for v, _ in I)

dp = [W+1] * (MAX_V + 1)
dp[0] = 0
for v, w in I:
    for j in range(MAX_V, v-1, -1):
        dp[j] = min(dp[j-v] + w, dp[j])
        
for i in range(MAX_V, -1, -1):
  if dp[i] <= W:
    print(i)
    break
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012910309247672558
    2. ',' → logprob: -5.13791036605835
    3. ' =' → logprob: -5.13791036605835
    4. '[' → logprob: -7.76291036605835
    5. '.' → logprob: -8.887909889221191
    6. '*' → logprob: -8.887909889221191
    7. ')' → logprob: -9.137909889221191
    8. ';' → logprob: -9.512909889221191
    9. '_' → logprob: -10.387909889221191
    10. '+' → logprob: -10.762909889221191

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.14273788034915924
    2. 'map' → logprob: -2.267737865447998
    3. ' ' → logprob: -4.142737865447998
    4. '10' → logprob: -5.017737865447998
    5. ' input' → logprob: -6.267737865447998
    6. 'input' → logprob: -6.767737865447998
    7. ' [' → logprob: -7.517737865447998
    8. '20' → logprob: -7.642737865447998
    9. 'int' → logprob: -7.892737865447998
    10. '0' → logprob: -7.892737865447998

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024616697803139687
    2. '(lambda' → logprob: -4.274616718292236
    3. '(int' → logprob: -5.149616718292236
    4. '<|end|>' → logprob: -6.399616718292236
    5. '```' → logprob: -6.774616718292236
    6. '(str' → logprob: -8.274616241455078
    7. ')' → logprob: -8.399616241455078
    8. '[int' → logprob: -8.399616241455078
    9. '<|end|>' → logprob: -9.024616241455078
    10. '<int' → logprob: -9.774616241455078

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0003074407577515
    2. '(input' → logprob: -1.0003074407577515
    3. ')' → logprob: -1.3753074407577515
    4. '(user' → logprob: -6.000307559967041
    5. '(int' → logprob: -6.750307559967041
    6. '```' → logprob: -7.125307559967041
    7. '(data' → logprob: -7.250307559967041
    8. '())' → logprob: -7.375307559967041
    9. '`)' → logprob: -7.375307559967041
    10. '(token' → logprob: -7.500307559967041

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193408131599426
    2. ' input' → logprob: -1.5019340515136719
    3. '(input' → logprob: -13.001934051513672
    4. ',input' → logprob: -13.626934051513672
    5. ' ' → logprob: -14.376934051513672
    6. ')' → logprob: -14.376934051513672
    7. '	input' → logprob: -15.751934051513672
    8. '=input' → logprob: -16.126934051513672
    9. '<input' → logprob: -16.876934051513672
    10. '[input' → logprob: -17.501934051513672

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8407900333404541
    2. '())' → logprob: -0.8407900333404541
    3. '(' → logprob: -2.465790033340454
    4. '().' → logprob: -4.340789794921875
    5. '('' → logprob: -4.465789794921875
    6. ')' → logprob: -5.215789794921875
    7. '`()' → logprob: -5.340789794921875
    8. '());' → logprob: -5.465789794921875
    9. '(()' → logprob: -5.965789794921875
    10. '(""))' → logprob: -6.090789794921875

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00261133280582726
    2. 'strip' → logprob: -6.00261116027832
    3. 'rstrip' → logprob: -9.50261116027832
    4. 'read' → logprob: -9.75261116027832
    5. ')' → logprob: -13.50261116027832
    6. ' split' → logprob: -13.87761116027832
    7. '(split' → logprob: -16.00261116027832
    8. 'startswith' → logprob: -16.50261116027832
    9. 'replace' → logprob: -16.75261116027832
    10. ' readline' → logprob: -16.75261116027832

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05773100629448891
    2. '())' → logprob: -3.0577309131622314
    3. '))' → logprob: -5.0577311515808105
    4. '()' → logprob: -6.3077311515808105
    5. '`)' → logprob: -7.6827311515808105
    6. '(' → logprob: -8.432730674743652
    7. '()))' → logprob: -9.432730674743652
    8. '('' → logprob: -10.057730674743652
    9. '>)' → logprob: -10.932730674743652
    10. '')' → logprob: -10.932730674743652

Token 11: 'I' (ID: 40)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10146094113588333
    2. 'for' → logprob: -3.8514609336853027
    3. 'x' → logprob: -4.101460933685303
    4. 'A' → logprob: -4.226460933685303
    5. 'arr' → logprob: -4.851460933685303
    6. 'data' → logprob: -4.851460933685303
    7. 'd' → logprob: -5.226460933685303
    8. 's' → logprob: -5.851460933685303
    9. 'dp' → logprob: -5.976460933685303
    10. 'array' → logprob: -6.101460933685303

Token 12: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1089249923825264
    2. 'f' → logprob: -2.9839251041412354
    3. 'm' → logprob: -3.9839251041412354
    4. 't' → logprob: -4.233924865722656
    5. ' =' → logprob: -4.608924865722656
    6. '=' → logprob: -5.233924865722656
    7. 's' → logprob: -6.983924865722656
    8. 'nt' → logprob: -7.358924865722656
    9. 'for' → logprob: -7.733924865722656
    10. 'np' → logprob: -7.983924865722656

Token 13: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.012637734413147
    2. '[int' → logprob: -1.637637734413147
    3. 'int' → logprob: -2.0126376152038574
    4. '[]' → logprob: -3.0126376152038574
    5. ' list' → logprob: -3.0126376152038574
    6. 'input' → logprob: -3.1376376152038574
    7. ' [' → logprob: -3.3876376152038574
    8. 'map' → logprob: -3.5126376152038574
    9. ' []' → logprob: -3.6376376152038574
    10. ' map' → logprob: -3.6376376152038574

Token 14: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0016544676618650556
    2. ' int' → logprob: -7.001654624938965
    3. '*' → logprob: -8.251654624938965
    4. '0' → logprob: -8.751654624938965
    5. 'map' → logprob: -8.876654624938965
    6. ']int' → logprob: -9.376654624938965
    7. 'list' → logprob: -9.501654624938965
    8. ']' → logprob: -11.626654624938965
    9. '(int' → logprob: -12.251654624938965
    10. ' ' → logprob: -12.501654624938965

Token 15: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0002406090497970581
    2. '(' → logprob: -8.375240325927734
    3. '(int' → logprob: -12.625240325927734
    4. '()' → logprob: -13.000240325927734
    5. 'map' → logprob: -13.250240325927734
    6. '(range' → logprob: -13.625240325927734
    7. '(input' → logprob: -13.750240325927734
    8. '(
' → logprob: -16.000240325927734
    9. '	map' → logprob: -16.625240325927734
    10. ' map' → logprob: -16.750240325927734

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00025669054593890905
    2. 'int' → logprob: -8.375256538391113
    3. '(' → logprob: -11.125256538391113
    4. ',int' → logprob: -12.625256538391113
    5. '<int' → logprob: -12.625256538391113
    6. '[int' → logprob: -13.250256538391113
    7. ' int' → logprob: -13.750256538391113
    8. '=int' → logprob: -14.125256538391113
    9. ']int' → logprob: -14.375256538391113
    10. '(lambda' → logprob: -15.375256538391113

Token 17: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07177804410457611
    2. ',input' → logprob: -3.3217780590057373
    3. '(' → logprob: -3.9467780590057373
    4. ',' → logprob: -4.321777820587158
    5. 'input' → logprob: -8.196778297424316
    6. ')' → logprob: -9.446778297424316
    7. '(),' → logprob: -9.571778297424316
    8. ' ,' → logprob: -9.821778297424316
    9. '=input' → logprob: -10.321778297424316
    10. ' input' → logprob: -11.071778297424316

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868856430053711
    2. ' input' → logprob: -1.136885643005371
    3. '(input' → logprob: -11.886885643005371
    4. ',input' → logprob: -12.636885643005371
    5. ')' → logprob: -13.136885643005371
    6. '=input' → logprob: -14.511885643005371
    7. '	input' → logprob: -14.636885643005371
    8. '_input' → logprob: -15.136885643005371
    9. 'list' → logprob: -15.136885643005371
    10. ' ' → logprob: -15.386885643005371

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1637164789135568e-05
    2. '()' → logprob: -11.625011444091797
    3. '(' → logprob: -14.375011444091797
    4. ' ().' → logprob: -14.375011444091797
    5. '()))' → logprob: -14.625011444091797
    6. '.' → logprob: -15.250011444091797
    7. ')' → logprob: -15.375011444091797
    8. '())' → logprob: -16.000011444091797
    9. '))' → logprob: -16.375011444091797
    10. '.readline' → logprob: -16.625011444091797

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.650518920039758e-06
    2. ' split' → logprob: -13.375003814697266
    3. '(split' → logprob: -14.000003814697266
    4. 'rstrip' → logprob: -14.000003814697266
    5. 'strip' → logprob: -14.875003814697266
    6. 'spl' → logprob: -16.750003814697266
    7. '.split' → logprob: -19.750003814697266
    8. ')' → logprob: -19.750003814697266
    9. 's' → logprob: -19.875003814697266
    10. 'read' → logprob: -20.250003814697266

Token 21: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0036760864313691854
    2. '())' → logprob: -6.503675937652588
    3. '))' → logprob: -7.003675937652588
    4. '()' → logprob: -7.003675937652588
    5. '(' → logprob: -8.253676414489746
    6. '())))' → logprob: -9.753676414489746
    7. '()));' → logprob: -11.628676414489746
    8. '().' → logprob: -12.003676414489746
    9. '()))
' → logprob: -12.253676414489746
    10. '('' → logprob: -12.503676414489746

Token 22: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8491101861000061
    2. '(' → logprob: -1.5991101264953613
    3. ')' → logprob: -1.7241101264953613
    4. '()' → logprob: -1.9741101264953613
    5. ')]' → logprob: -3.8491101264953613
    6. 'for' → logprob: -4.474110126495361
    7. '()]' → logprob: -4.599110126495361
    8. '(input' → logprob: -5.724110126495361
    9. '()),' → logprob: -6.224110126495361
    10. '),' → logprob: -7.474110126495361

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.01152343861758709
    2. '_' → logprob: -4.886523246765137
    3. 'range' → logprob: -6.261523246765137
    4. '(range' → logprob: -6.761523246765137
    5. ' in' → logprob: -7.886523246765137
    6. '(' → logprob: -8.386523246765137
    7. ' ' → logprob: -9.136523246765137
    8. ' _' → logprob: -9.386523246765137
    9. '_range' → logprob: -10.636523246765137
    10. '	range' → logprob: -11.011523246765137

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03403222933411598
    2. 'in' → logprob: -3.4090323448181152
    3. 'range' → logprob: -8.159031867980957
    4. ' ' → logprob: -9.909031867980957
    5. '(' → logprob: -11.034031867980957
    6. 'n' → logprob: -12.159031867980957
    7. ' range' → logprob: -12.534031867980957
    8. 'In' → logprob: -12.534031867980957
    9. '	in' → logprob: -13.159031867980957
    10. ')' → logprob: -13.284031867980957

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009118211455643177
    2. ' range' → logprob: -7.000911712646484
    3. '	range' → logprob: -15.375911712646484
    4. ' ' → logprob: -16.750911712646484
    5. '   ' → logprob: -16.750911712646484
    6. '(range' → logprob: -17.125911712646484
    7. '  ' → logprob: -17.375911712646484
    8. '```' → logprob: -18.000911712646484
    9. '.range' → logprob: -18.125911712646484
    10. 'rang' → logprob: -18.375911712646484

Token 26: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0059433747082948685
    2. '(' → logprob: -5.130943298339844
    3. '(n' → logprob: -11.380943298339844
    4. '(I' → logprob: -14.255943298339844
    5. '(
' → logprob: -14.755943298339844
    6. 'N' → logprob: -14.755943298339844
    7. '(W' → logprob: -15.130943298339844
    8. '(int' → logprob: -15.255943298339844
    9. ' (' → logprob: -15.505943298339844
    10. '(len' → logprob: -15.630943298339844

Token 27: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002905334113165736
    2. ')' → logprob: -8.250290870666504
    3. ']' → logprob: -10.625290870666504
    4. ')])' → logprob: -12.875290870666504
    5. '])]' → logprob: -14.375290870666504
    6. '))' → logprob: -14.625290870666504
    7. '')]' → logprob: -15.250290870666504
    8. '])' → logprob: -15.375290870666504
    9. ')],' → logprob: -15.500290870666504
    10. ')][' → logprob: -15.750290870666504

Token 28: 'MAX' (ID: 21911)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020068207755684853
    2. 'DP' → logprob: -4.520068168640137
    3. '
' → logprob: -6.020068168640137
    4. 'd' → logprob: -7.020068168640137
    5. 'result' → logprob: -7.395068168640137
    6. 'D' → logprob: -7.520068168640137
    7. 'sorted' → logprob: -7.520068168640137
    8. 'items' → logprob: -8.020068168640137
    9. 'total' → logprob: -8.145068168640137
    10. 'I' → logprob: -8.270068168640137

Token 29: '_V' (ID: 4553)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6427488327026367
    2. '_W' → logprob: -1.5177488327026367
    3. '_WEIGHT' → logprob: -2.3927488327026367
    4. '_VALUE' → logprob: -2.7677488327026367
    5. '_V' → logprob: -3.1427488327026367
    6. '_SUM' → logprob: -4.392748832702637
    7. ' =' → logprob: -4.517748832702637
    8. '_DP' → logprob: -4.767748832702637
    9. '_VAL' → logprob: -5.142748832702637
    10. '_COST' → logprob: -5.642748832702637

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19995100796222687
    2. '=' → logprob: -1.8249510526657104
    3. 'ALUE' → logprob: -4.449951171875
    4. 'AL' → logprob: -5.074951171875
    5. 'al' → logprob: -6.449951171875
    6. 'alue' → logprob: -9.074951171875
    7. 'OLUME' → logprob: -9.699951171875
    8. '_' → logprob: -9.824951171875
    9. 'ol' → logprob: -9.949951171875
    10. 'OL' → logprob: -10.074951171875

Token 31: ' sum' (ID: 4215)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18973825871944427
    2. '100' → logprob: -1.8147382736206055
    3. ' ' → logprob: -4.9397382736206055
    4. 'sum' → logprob: -6.8147382736206055
    5. '101' → logprob: -7.5647382736206055
    6. '1' → logprob: -8.064738273620605
    7. 'W' → logprob: -8.189738273620605
    8. 'max' → logprob: -9.064738273620605
    9. '200' → logprob: -9.439738273620605
    10. 'float' → logprob: -9.689738273620605

Token 32: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1111841201782227
    2. '(W' → logprob: -1.2361841201782227
    3. '([' → logprob: -1.4861841201782227
    4. '(I' → logprob: -2.7361841201782227
    5. '(i' → logprob: -3.2361841201782227
    6. '(w' → logprob: -3.3611841201782227
    7. '(max' → logprob: -4.861184120178223
    8. '(v' → logprob: -6.861184120178223
    9. '(item' → logprob: -7.111184120178223
    10. '(x' → logprob: -7.111184120178223

Token 33: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05104861781001091
    2. '[' → logprob: -3.176048517227173
    3. 'alue' → logprob: -5.801048755645752
    4. 'al' → logprob: -6.176048755645752
    5. 'for' → logprob: -7.051048755645752
    6. '[i' → logprob: -7.301048755645752
    7. ')' → logprob: -7.426048755645752
    8. '[v' → logprob: -8.801048278808594
    9. 'als' → logprob: -8.926048278808594
    10. 'alent' → logprob: -9.426048278808594

Token 34: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.29114967584609985
    2. '_,' → logprob: -1.791149616241455
    3. ',' → logprob: -3.416149616241455
    4. ' w' → logprob: -4.041149616241455
    5. ',w' → logprob: -4.041149616241455
    6. '_' → logprob: -5.291149616241455
    7. '_w' → logprob: -5.416149616241455
    8. 'v' → logprob: -5.791149616241455
    9. ',_' → logprob: -6.791149616241455
    10. '__,' → logprob: -7.291149616241455

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032584939152002335
    2. ',w' → logprob: -3.6575849056243896
    3. ',_' → logprob: -5.282585144042969
    4. ',v' → logprob: -7.032585144042969
    5. 'w' → logprob: -9.407585144042969
    6. ' ,' → logprob: -9.657585144042969
    7. ',value' → logprob: -10.532585144042969
    8. ',i' → logprob: -11.157585144042969
    9. ',d' → logprob: -11.532585144042969
    10. ',j' → logprob: -11.657585144042969

Token 36: ' _' (ID: 1175)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.014461754821240902
    2. ' w' → logprob: -4.264461517333984
    3. '_' → logprob: -9.514461517333984
    4. '```' → logprob: -9.514461517333984
    5. '_w' → logprob: -10.014461517333984
    6. '   ' → logprob: -10.639461517333984
    7. 'c' → logprob: -10.889461517333984
    8. 'wt' → logprob: -11.139461517333984
    9. '  ' → logprob: -12.139461517333984
    10. ' ' → logprob: -12.264461517333984

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4374353885650635
    2. ',' → logprob: -1.0624353885650635
    3. 'in' → logprob: -5.687435150146484
    4. ' ,' → logprob: -6.187435150146484
    5. ',_' → logprob: -6.437435150146484
    6. ')' → logprob: -7.562435150146484
    7. ',v' → logprob: -7.687435150146484
    8. ',w' → logprob: -8.687435150146484
    9. 'w' → logprob: -9.062435150146484
    10. '<|end|>' → logprob: -9.187435150146484

Token 38: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.00012606535165105015
    2. ' I' → logprob: -9.000125885009766
    3. ')' → logprob: -14.000125885009766
    4. '[I' → logprob: -15.000125885009766
    5. '(I' → logprob: -15.625125885009766
    6. 'user' → logprob: -15.625125885009766
    7. '<|end|>' → logprob: -15.625125885009766
    8. ' ' → logprob: -16.250125885009766
    9. '<|end|>' → logprob: -16.375125885009766
    10. '`' → logprob: -16.625125885009766

Token 39: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001997273648157716
    2. ')+' → logprob: -6.251997470855713
    3. '+' → logprob: -10.626996994018555
    4. ' )' → logprob: -11.251996994018555
    5. '),' → logprob: -12.126996994018555
    6. ',' → logprob: -12.501996994018555
    7. ')
' → logprob: -12.626996994018555
    8. ')>' → logprob: -12.876996994018555
    9. '))' → logprob: -13.126996994018555
    10. '```' → logprob: -13.251996994018555

Token 40: 'dp' (ID: 19037)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.6035637259483337
    2. 'dp' → logprob: -1.7285637855529785
    3. '+' → logprob: -1.8535637855529785
    4. ' +' → logprob: -2.4785637855529785
    5. ' DP' → logprob: -4.4785637855529785
    6. ' ' → logprob: -4.8535637855529785
    7. ' INF' → logprob: -5.8535637855529785
    8. '1' → logprob: -6.2285637855529785
    9. '_dp' → logprob: -6.4785637855529785
    10. '0' → logprob: -6.6035637855529785

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008633122779428959
    2. '=' → logprob: -4.758633136749268
    3. '[' → logprob: -11.13363265991211
    4. '_' → logprob: -13.75863265991211
    5. ' =[' → logprob: -13.88363265991211
    6. ' ' → logprob: -14.13363265991211
    7. '=[' → logprob: -15.00863265991211
    8. ')' → logprob: -16.25863265991211
    9. 's' → logprob: -16.38363265991211
    10. '0' → logprob: -16.38363265991211

Token 42: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0026429600547999144
    2. ' [' → logprob: -6.00264310836792
    3. '[-' → logprob: -8.877642631530762
    4. '[N' → logprob: -11.127642631530762
    5. '[n' → logprob: -12.752642631530762
    6. '[int' → logprob: -13.127642631530762
    7. '[[' → logprob: -13.252642631530762
    8. '[len' → logprob: -13.377642631530762
    9. '[max' → logprob: -13.627642631530762
    10. ' [-' → logprob: -14.002642631530762

Token 43: 'W' (ID: 54)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.13134053349494934
    2. 'False' → logprob: -2.256340503692627
    3. '0' → logprob: -4.381340503692627
    4. ' float' → logprob: -6.256340503692627
    5. '-' → logprob: -6.631340503692627
    6. 'MAX' → logprob: -6.631340503692627
    7. '10' → logprob: -8.006340980529785
    8. 'W' → logprob: -8.631340980529785
    9. '[' → logprob: -8.881340980529785
    10. ' ' → logprob: -9.131340980529785

Token 44: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011049943044781685
    2. ' +' → logprob: -4.511049747467041
    3. '＋' → logprob: -13.7610502243042
    4. '+
' → logprob: -14.2610502243042
    5. ' +
' → logprob: -16.261049270629883
    6. '+

' → logprob: -16.636049270629883
    7. '+]' → logprob: -16.636049270629883
    8. '+i' → logprob: -17.136049270629883
    9. '+j' → logprob: -17.136049270629883
    10. '
' → logprob: -17.636049270629883

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. ' ' → logprob: -11.500011444091797
    3. '10' → logprob: -14.000011444091797
    4. '2' → logprob: -15.625011444091797
    5. '100' → logprob: -16.750011444091797
    6. '１' → logprob: -17.125011444091797
    7. '

' → logprob: -18.125011444091797
    8. '5' → logprob: -18.750011444091797
    9. '   ' → logprob: -18.750011444091797
    10. '
' → logprob: -19.000011444091797

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008217801805585623
    2. ' ]' → logprob: -8.000822067260742
    3. ']*(' → logprob: -8.250822067260742
    4. ']*' → logprob: -8.500822067260742
    5. ' for' → logprob: -11.625822067260742
    6. ']+' → logprob: -12.000822067260742
    7. ',' → logprob: -12.750822067260742
    8. ')' → logprob: -14.000822067260742
    9. '][' → logprob: -14.000822067260742
    10. ']int' → logprob: -14.500822067260742

Token 47: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13565818965435028
    2. ' *' → logprob: -3.3856582641601562
    3. '[' → logprob: -3.7606582641601562
    4. ']' → logprob: -4.135658264160156
    5. '*[' → logprob: -4.135658264160156
    6. '*(' → logprob: -4.510658264160156
    7. '+' → logprob: -4.635658264160156
    8. ']*(' → logprob: -5.385658264160156
    9. ',' → logprob: -5.760658264160156
    10. ' for' → logprob: -6.010658264160156

Token 48: ' (' (ID: 350)
  Prédit: '(MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.00015097891446202993
    2. '(M' → logprob: -8.875150680541992
    3. '(Max' → logprob: -12.500150680541992
    4. '[MAX' → logprob: -12.875150680541992
    5. '(max' → logprob: -13.125150680541992
    6. '((' → logprob: -13.750150680541992
    7. '(' → logprob: -14.250150680541992
    8. 'MAX' → logprob: -14.875150680541992
    9. ' (' → logprob: -14.875150680541992
    10. '(V' → logprob: -16.500150680541992

Token 49: 'MAX' (ID: 21911)
  Prédit: 'MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.02060553804039955
    2. '(MAX' → logprob: -3.8956055641174316
    3. '[MAX' → logprob: -10.645605087280273
    4. ' MAX' → logprob: -10.770605087280273
    5. '(' → logprob: -12.270605087280273
    6. 'MA' → logprob: -13.145605087280273
    7. '(max' → logprob: -13.270605087280273
    8. '_MAX' → logprob: -13.520605087280273
    9. '(M' → logprob: -13.520605087280273
    10. 'Max' → logprob: -13.645605087280273

Token 50: '_V' (ID: 4553)
  Prédit: '_V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_V' → logprob: -1.0087516784551553e-05
    2. '+' → logprob: -12.25001049041748
    3. '_v' → logprob: -13.50001049041748
    4. '```' → logprob: -13.87501049041748
    5. ' _' → logprob: -14.37501049041748
    6. '_' → logprob: -14.62501049041748
    7. 'V' → logprob: -15.12501049041748
    8. ' ' → logprob: -15.75001049041748
    9. '_VAL' → logprob: -16.000009536743164
    10. '\' → logprob: -16.125009536743164

Token 51: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001503790495917201
    2. ' +' → logprob: -6.501503944396973
    3. '+
' → logprob: -14.501503944396973
    4. '+)' → logprob: -15.251503944396973
    5. ')' → logprob: -15.501503944396973
    6. '1' → logprob: -16.001502990722656
    7. '＋' → logprob: -16.001502990722656
    8. ')+' → logprob: -16.376502990722656
    9. '```' → logprob: -16.376502990722656
    10. ' +
' → logprob: -17.251502990722656

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008054602658376098
    2. ' ' → logprob: -7.125805377960205
    3. '2' → logprob: -14.625805854797363
    4. '   ' → logprob: -15.500805854797363
    5. '```' → logprob: -15.875805854797363
    6. '１' → logprob: -16.625804901123047
    7. '  ' → logprob: -17.750804901123047
    8. ' ' → logprob: -18.000804901123047
    9. ')' → logprob: -18.000804901123047
    10. '+' → logprob: -18.313304901123047

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '１' → logprob: -16.0000057220459
    4. '2' → logprob: -16.5000057220459
    5. ')' → logprob: -18.2500057220459
    6. '```' → logprob: -18.3750057220459
    7. '10' → logprob: -18.5000057220459
    8. '۱' → logprob: -18.5625057220459
    9. '100' → logprob: -18.8125057220459
    10. '+' → logprob: -19.2500057220459

Token 54: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.909333023941144e-05
    2. ')
' → logprob: -9.750068664550781
    3. ' )' → logprob: -11.625068664550781
    4. ')

' → logprob: -14.125068664550781
    5. ')
' → logprob: -15.000068664550781
    6. ']' → logprob: -15.500068664550781
    7. '),' → logprob: -16.50006866455078
    8. ')`' → logprob: -16.75006866455078
    9. '}' → logprob: -16.87506866455078
    10. '`)' → logprob: -16.87506866455078

Token 55: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12859566509723663
    2. '
' → logprob: -2.1285955905914307
    3. '<|end|>' → logprob: -7.25359582901001
    4. ' dp' → logprob: -8.128595352172852
    5. '_dp' → logprob: -8.878595352172852
    6. ' 
' → logprob: -9.128595352172852
    7. '(dp' → logprob: -9.128595352172852
    8. '  
' → logprob: -9.378595352172852
    9. '```' → logprob: -9.628595352172852
    10. '
' → logprob: -9.878595352172852

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.511406809295295e-06
    2. '\[' → logprob: -13.000006675720215
    3. '[
' → logprob: -13.375006675720215
    4. '```' → logprob: -13.875006675720215
    5. '<|end|>' → logprob: -14.125006675720215
    6. ' [' → logprob: -14.500006675720215
    7. '0' → logprob: -15.750006675720215
    8. 'dp' → logprob: -16.5000057220459
    9. '
' → logprob: -16.5000057220459
    10. '][' → logprob: -17.7500057220459

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '[' → logprob: -18.125
    4. '۰' → logprob: -18.375
    5. '000' → logprob: -18.625
    6. '０' → logprob: -18.875
    7. '```' → logprob: -19.75
    8. '00' → logprob: -19.875
    9. '०' → logprob: -20.625
    10. '_' → logprob: -20.625

Token 58: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009595814626663923
    2. ']=' → logprob: -7.750959396362305
    3. ')' → logprob: -7.875959396362305
    4. '=' → logprob: -9.375959396362305
    5. ' ]' → logprob: -9.750959396362305
    6. ' =' → logprob: -12.375959396362305
    7. ')=' → logprob: -13.625959396362305
    8. ')]' → logprob: -16.000959396362305
    9. ' )' → logprob: -16.000959396362305
    10. '])' → logprob: -16.750959396362305

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759405493736267
    2. ' =' → logprob: -0.8259405493736267
    3. '＝' → logprob: -14.700940132141113
    4. ' ' → logprob: -15.075940132141113
    5. '<|end|>' → logprob: -16.07594108581543
    6. ' ' → logprob: -16.57594108581543
    7. '0' → logprob: -17.07594108581543
    8. '=int' → logprob: -17.20094108581543
    9. ' =)' → logprob: -17.20094108581543
    10. '```' → logprob: -17.95094108581543

Token 60: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '000' → logprob: -18.875003814697266
    4. '۰' → logprob: -19.125003814697266
    5. '00' → logprob: -19.250003814697266
    6. '```' → logprob: -19.375003814697266
    7. '   ' → logprob: -19.625003814697266
    8. '０' → logprob: -20.562503814697266
    9. ' ' → logprob: -20.812503814697266
    10. '०' → logprob: -21.250003814697266

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '۰' → logprob: -19.25
    4. '000' → logprob: -19.375
    5. '00' → logprob: -20.375
    6. '０' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. '०' → logprob: -21.5
    9. '০' → logprob: -21.75
    10. '[' → logprob: -22.5

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011450992315076292
    2. ' for' → logprob: -9.500114440917969
    3. '<|end|>' → logprob: -10.250114440917969
    4. '```' → logprob: -12.500114440917969
    5. '	for' → logprob: -16.12511444091797
    6. '<|end|>' → logprob: -16.37511444091797
    7. 'For' → logprob: -17.12511444091797
    8. '``' → logprob: -17.25011444091797
    9. 'v' → logprob: -17.37511444091797
    10. '_for' → logprob: -17.75011444091797

Token 64: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16325828433036804
    2. ' v' → logprob: -1.9132583141326904
    3. 'i' → logprob: -6.163258075714111
    4. ' i' → logprob: -7.288258075714111
    5. '(v' → logprob: -8.66325855255127
    6. ' (' → logprob: -11.28825855255127
    7. '```' → logprob: -11.28825855255127
    8. 'w' → logprob: -11.78825855255127
    9. ' ' → logprob: -12.03825855255127
    10. '`' → logprob: -12.28825855255127

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00525403767824173
    2. ',v' → logprob: -5.63025426864624
    3. ',_' → logprob: -7.50525426864624
    4. '_,' → logprob: -7.63025426864624
    5. ' ,' → logprob: -8.380253791809082
    6. 'x' → logprob: -9.630253791809082
    7. ' in' → logprob: -9.755253791809082
    8. 'v' → logprob: -9.880253791809082
    9. ',w' → logprob: -10.130253791809082
    10. 'w' → logprob: -10.380253791809082

Token 66: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.007674653083086014
    2. ' w' → logprob: -4.882674694061279
    3. '```' → logprob: -10.632674217224121
    4. '_w' → logprob: -11.257674217224121
    5. '   ' → logprob: -11.507674217224121
    6. ' ' → logprob: -12.257674217224121
    7. 'wt' → logprob: -12.257674217224121
    8. 'weight' → logprob: -13.132674217224121
    9. '    ' → logprob: -13.257674217224121
    10. 'c' → logprob: -13.507674217224121

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030619574710726738
    2. 'in' → logprob: -3.5306196212768555
    3. ',' → logprob: -7.2806196212768555
    4. 's' → logprob: -9.405619621276855
    5. ':' → logprob: -10.155619621276855
    6. '<|end|>' → logprob: -11.280619621276855
    7. ')' → logprob: -11.905619621276855
    8. ' ' → logprob: -12.030619621276855
    9. '_in' → logprob: -12.155619621276855
    10. 'In' → logprob: -12.405619621276855

Token 68: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -6.623244553338736e-05
    2. ' I' → logprob: -9.625065803527832
    3. '[I' → logprob: -16.12506675720215
    4. '(I' → logprob: -17.87506675720215
    5. '	I' → logprob: -18.12506675720215
    6. ' ' → logprob: -18.37506675720215
    7. 'range' → logprob: -18.50006675720215
    8. '`' → logprob: -19.12506675720215
    9. 'i' → logprob: -19.62506675720215
    10. '   ' → logprob: -19.75006675720215

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.214019307051785e-05
    2. ':
' → logprob: -10.500032424926758
    3. '):' → logprob: -13.750032424926758
    4. ' :' → logprob: -14.000032424926758
    5. '<|end|>' → logprob: -14.000032424926758
    6. ':**' → logprob: -14.250032424926758
    7. ':

' → logprob: -15.375032424926758
    8. ',' → logprob: -15.500032424926758
    9. ':v' → logprob: -16.125032424926758
    10. 'v' → logprob: -16.125032424926758

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9619543552398682
    2. ' for' → logprob: -1.0869543552398682
    3. '<|end|>' → logprob: -1.3369543552398682
    4. ' ' → logprob: -5.586954116821289
    5. '```' → logprob: -5.586954116821289
    6. '    ' → logprob: -5.961954116821289
    7. '	for' → logprob: -6.211954116821289
    8. 'for' → logprob: -7.336954116821289
    9. ' 
' → logprob: -7.461954116821289
    10. '[' → logprob: -7.586954116821289

Token 71: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016724849119782448
    2. 'for' (adapté à ' for') → logprob: -4.266725063323975
    3. '   ' → logprob: -6.016725063323975
    4. '	for' → logprob: -10.141724586486816
    5. ' range' → logprob: -10.891724586486816
    6. 'range' → logprob: -11.141724586486816
    7. '```' → logprob: -11.391724586486816
    8. ' ' → logprob: -11.516724586486816
    9. 'v' → logprob: -12.516724586486816
    10. '    ' → logprob: -12.516724586486816

Token 72: ' j' (ID: 441)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.7176557183265686
    2. 'v' → logprob: -1.0926556587219238
    3. ' range' → logprob: -1.8426556587219238
    4. 'range' → logprob: -4.717655658721924
    5. ' MAX' → logprob: -5.217655658721924
    6. 'MAX' → logprob: -5.717655658721924
    7. ' vmax' → logprob: -7.842655658721924
    8. ' max' → logprob: -9.842656135559082
    9. ' ' → logprob: -9.967656135559082
    10. 'max' → logprob: -9.967656135559082

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0029055625200271606
    2. 'in' → logprob: -5.877905368804932
    3. 'range' → logprob: -9.50290584564209
    4. ' range' → logprob: -11.37790584564209
    5. ' ' → logprob: -12.62790584564209
    6. 'v' → logprob: -12.87790584564209
    7. ' i' → logprob: -13.12790584564209
    8. 'n' → logprob: -13.62790584564209
    9. ' v' → logprob: -13.87790584564209
    10. 's' → logprob: -14.12790584564209

Token 74: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132656216621399
    2. ' range' → logprob: -1.3132655620574951
    3. 'v' → logprob: -13.438265800476074
    4. ' ' → logprob: -14.188265800476074
    5. ' reversed' → logprob: -14.813265800476074
    6. 'r' → logprob: -15.313265800476074
    7. 're' → logprob: -15.438265800476074
    8. ' v' → logprob: -15.438265800476074
    9. '   ' → logprob: -15.688265800476074
    10. '	range' → logprob: -16.063264846801758

Token 75: '(MAX' (ID: 129209)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.6977413296699524
    2. '(MAX' → logprob: -0.6977413296699524
    3. ' MAX' → logprob: -5.447741508483887
    4. '[MAX' → logprob: -8.697741508483887
    5. 'v' → logprob: -9.322741508483887
    6. '(v' → logprob: -12.197741508483887
    7. '   ' → logprob: -12.322741508483887
    8. '_MAX' → logprob: -12.697741508483887
    9. '.MAX' → logprob: -13.322741508483887
    10. '(' → logprob: -13.447741508483887

Token 76: '_V' (ID: 4553)
  Prédit: '_V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_V' → logprob: -6.034592388459714e-06
    2. '_v' → logprob: -12.625005722045898
    3. 'V' → logprob: -13.000005722045898
    4. '-V' → logprob: -15.500005722045898
    5. '	V' → logprob: -17.1250057220459
    6. '-' → logprob: -17.2500057220459
    7. 'v' → logprob: -17.7500057220459
    8. '_MAX' → logprob: -18.0000057220459
    9. ' ' → logprob: -18.3750057220459
    10. '

' → logprob: -18.6250057220459

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28762373328208923
    2. ' ,' → logprob: -1.6626237630844116
    3. ',v' → logprob: -2.912623643875122
    4. ' -' → logprob: -5.537623882293701
    5. '-v' → logprob: -6.537623882293701
    6. '-' → logprob: -8.037623405456543
    7. ',-' → logprob: -9.662623405456543
    8. 'v' → logprob: -9.912623405456543
    9. ',w' → logprob: -10.162623405456543
    10. '+' → logprob: -10.162623405456543

Token 78: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0032305908389389515
    2. ' v' → logprob: -5.753230571746826
    3. 'w' → logprob: -10.503231048583984
    4. '	v' → logprob: -11.878231048583984
    5. '-v' → logprob: -12.003231048583984
    6. '_v' → logprob: -12.753231048583984
    7. 'vj' → logprob: -13.128231048583984
    8. ')v' → logprob: -13.253231048583984
    9. '<|end|>' → logprob: -13.378231048583984
    10. ',v' → logprob: -13.878231048583984

Token 79: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08894328027963638
    2. ' -' → logprob: -2.4639432430267334
    3. '−' → logprob: -13.213943481445312
    4. ' ' → logprob: -14.213943481445312
    5. '1' → logprob: -14.963943481445312
    6. '```' → logprob: -15.338943481445312
    7. 'v' → logprob: -16.151443481445312
    8. '0' → logprob: -16.338943481445312
    9. '–' → logprob: -16.588943481445312
    10. ' ' → logprob: -16.588943481445312

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.35837464465294e-05
    2. ' ' → logprob: -10.125043869018555
    3. '```' → logprob: -13.125043869018555
    4. ')' → logprob: -14.750043869018555
    5. '0' → logprob: -16.187543869018555
    6. '   ' → logprob: -16.375043869018555
    7. '2' → logprob: -16.437543869018555
    8. ':' → logprob: -16.562543869018555
    9. ',' → logprob: -16.625043869018555
    10. '

' → logprob: -16.687543869018555

Token 81: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7231627702713013
    2. ' -' → logprob: -0.9731627702713013
    3. ',' → logprob: -2.3481626510620117
    4. ',-' → logprob: -3.2231626510620117
    5. ' ,' → logprob: -7.473162651062012
    6. ' ,-' → logprob: -8.723162651062012
    7. '```' → logprob: -8.723162651062012
    8. ' ' → logprob: -8.973162651062012
    9. '0' → logprob: -8.973162651062012
    10. '   ' → logprob: -9.348162651062012

Token 82: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.033650077879428864
    2. ' -' → logprob: -3.4086501598358154
    3. ' ' → logprob: -13.033650398254395
    4. ')' → logprob: -14.533650398254395
    5. '-w' → logprob: -14.533650398254395
    6. '   ' → logprob: -15.283650398254395
    7. '  ' → logprob: -15.658650398254395
    8. '```' → logprob: -15.783650398254395
    9. '1' → logprob: -15.908650398254395
    10. ',-' → logprob: -16.158649444580078

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030709904967807233
    2. ' ' → logprob: -8.375307083129883
    3. ')' → logprob: -10.000307083129883
    4. 'w' → logprob: -11.125307083129883
    5. ' w' → logprob: -12.125307083129883
    6. '):' → logprob: -12.500307083129883
    7. ',' → logprob: -13.875307083129883
    8. '```' → logprob: -13.875307083129883
    9. ' -' → logprob: -14.000307083129883
    10. 's' → logprob: -14.250307083129883

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20477911829948425
    2. '):
' → logprob: -1.7047791481018066
    3. ')' → logprob: -6.079779148101807
    4. '):
' → logprob: -7.704779148101807
    5. '):

' → logprob: -8.079778671264648
    6. ':' → logprob: -9.579778671264648
    7. ' ):' → logprob: -9.579778671264648
    8. '-' → logprob: -9.704778671264648
    9. '):-' → logprob: -11.079778671264648
    10. ' ):
' → logprob: -11.079778671264648

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048039309680461884
    2. '<|end|>' → logprob: -3.548039197921753
    3. '   ' → logprob: -4.798039436340332
    4. ' ' → logprob: -5.298039436340332
    5. ' if' → logprob: -6.548039436340332
    6. '    ' → logprob: -7.048039436340332
    7. '	   ' → logprob: -7.298039436340332
    8. '<|end|>' → logprob: -8.548039436340332
    9. '[' → logprob: -8.673039436340332
    10. 'dp' → logprob: -8.673039436340332

Token 86: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.02156955748796463
    2. ' dp' → logprob: -3.8965694904327393
    3. 'if' → logprob: -7.271569728851318
    4. '	dp' → logprob: -8.77156925201416
    5. ' if' → logprob: -9.52156925201416
    6. '   ' → logprob: -9.77156925201416
    7. '           ' → logprob: -10.64656925201416
    8. '       ' → logprob: -11.27156925201416
    9. '_dp' → logprob: -12.64656925201416
    10. '.dp' → logprob: -13.39656925201416

Token 87: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.4868770196917467e-05
    2. '[' → logprob: -11.000024795532227
    3. '[w' → logprob: -12.625024795532227
    4. '[v' → logprob: -13.500024795532227
    5. '[min' → logprob: -14.250024795532227
    6. 'j' → logprob: -14.250024795532227
    7. ' [' → logprob: -14.750024795532227
    8. '[i' → logprob: -14.875024795532227
    9. '[js' → logprob: -14.875024795532227
    10. '```' → logprob: -15.250024795532227

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08105497807264328
    2. ' =' → logprob: -2.956054925918579
    3. '=' → logprob: -4.081055164337158
    4. ']=' → logprob: -5.081055164337158
    5. ')' → logprob: -6.331055164337158
    6. '=min' → logprob: -7.081055164337158
    7. ')=' → logprob: -10.9560546875
    8. 'min' → logprob: -10.9560546875
    9. '```' → logprob: -11.2060546875
    10. '>' → logprob: -11.3310546875

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13053834438323975
    2. '=' → logprob: -2.1305384635925293
    3. '=min' → logprob: -5.630538463592529
    4. 'min' → logprob: -11.880537986755371
    5. '=max' → logprob: -12.630537986755371
    6. '```' → logprob: -12.880537986755371
    7. 'w' → logprob: -13.880537986755371
    8. '   ' → logprob: -14.755537986755371
    9. '=w' → logprob: -14.880537986755371
    10. ')' → logprob: -15.130537986755371

Token 90: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00033558503491804004
    2. ' min' → logprob: -8.000335693359375
    3. '	min' → logprob: -15.875335693359375
    4. '   ' → logprob: -18.000335693359375
    5. 'max' → logprob: -18.250335693359375
    6. '[min' → logprob: -18.625335693359375
    7. ' ' → logprob: -19.250335693359375
    8. 'mini' → logprob: -19.375335693359375
    9. 'mi' → logprob: -19.375335693359375
    10. '=min' → logprob: -19.500335693359375

Token 91: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0015285481931641698
    2. '(' → logprob: -6.501528739929199
    3. 'dp' → logprob: -10.6265287399292
    4. '(
' → logprob: -14.6265287399292
    5. ' dp' → logprob: -14.6265287399292
    6. '	dp' → logprob: -14.6265287399292
    7. ' (' → logprob: -14.8765287399292
    8. '_dp' → logprob: -16.376527786254883
    9. '(

' → logprob: -17.251527786254883
    10. '(d' → logprob: -17.376527786254883

Token 92: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. 'j' → logprob: -16.625
    4. '   ' → logprob: -17.875
    5. ' [' → logprob: -18.125
    6. '	j' → logprob: -19.625
    7. ',j' → logprob: -19.75
    8. '```' → logprob: -19.75
    9. '[i' → logprob: -19.875
    10. '	' → logprob: -19.875

Token 93: '-v' (ID: 9827)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0015829472104087472
    2. '[j' → logprob: -7.251583099365234
    3. ',' → logprob: -7.751583099365234
    4. ' ],' → logprob: -8.876583099365234
    5. ']' → logprob: -9.376583099365234
    6. '-' → logprob: -9.501583099365234
    7. ' -' → logprob: -9.626583099365234
    8. '],
' → logprob: -10.876583099365234
    9. '   ' → logprob: -11.251583099365234
    10. '-w' → logprob: -11.501583099365234

Token 94: ']' (ID: 60)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.09900932759046555
    2. ']' → logprob: -2.4740092754364014
    3. ',' → logprob: -4.9740095138549805
    4. ' ],' → logprob: -6.4740095138549805
    5. ']+' → logprob: -6.5990095138549805
    6. ' ,' → logprob: -10.22400951385498
    7. '),' → logprob: -10.22400951385498
    8. 'w' → logprob: -10.47400951385498
    9. ' ]' → logprob: -10.47400951385498
    10. '+' → logprob: -10.72400951385498

Token 95: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.025069180876016617
    2. '+' → logprob: -4.275069236755371
    3. '+w' → logprob: -4.525069236755371
    4. 'w' → logprob: -12.650069236755371
    5. ' ' → logprob: -12.900069236755371
    6. '<w' → logprob: -13.650069236755371
    7. ',' → logprob: -13.900069236755371
    8. ' w' → logprob: -14.150069236755371
    9. ')+' → logprob: -14.400069236755371
    10. '[w' → logprob: -14.525069236755371

Token 96: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.47409090399742126
    2. ' w' → logprob: -0.9740909337997437
    3. ' ' → logprob: -11.974090576171875
    4. '1' → logprob: -13.224090576171875
    5. ')' → logprob: -13.349090576171875
    6. '	w' → logprob: -13.599090576171875
    7. '    ' → logprob: -14.349090576171875
    8. '   ' → logprob: -14.349090576171875
    9. ' ' → logprob: -15.099090576171875
    10. '  ' → logprob: -15.474090576171875

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00943505484610796
    2. ')' → logprob: -4.759435176849365
    3. ' ,' → logprob: -7.134435176849365
    4. ' )' → logprob: -11.134434700012207
    5. ',j' → logprob: -13.009434700012207
    6. '),' → logprob: -13.134434700012207
    7. '   ' → logprob: -13.259434700012207
    8. ')
' → logprob: -14.384434700012207
    9. ',)' → logprob: -14.634434700012207
    10. ' ' → logprob: -15.134434700012207

Token 98: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5759546160697937
    2. 'dp' → logprob: -0.8259546160697937
    3. '	dp' → logprob: -11.20095443725586
    4. '(dp' → logprob: -14.70095443725586
    5. '_dp' → logprob: -15.07595443725586
    6. '   ' → logprob: -15.20095443725586
    7. ' ' → logprob: -15.45095443725586
    8. ')' → logprob: -16.07595443725586
    9. '.dp' → logprob: -16.45095443725586
    10. '           ' → logprob: -17.07595443725586

Token 99: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. 'j' → logprob: -15.125
    3. '[' → logprob: -19.0
    4. ' [' → logprob: -21.5
    5. '	j' → logprob: -21.875
    6. '   ' → logprob: -21.875
    7. '```' → logprob: -22.0
    8. '[i' → logprob: -22.125
    9. ',j' → logprob: -22.25
    10. '[
' → logprob: -22.375

Token 100: '])
' (ID: 5169)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.253528356552124
    2. '])' → logprob: -1.503528356552124
    3. 'j' → logprob: -6.753528594970703
    4. ']' → logprob: -7.878528594970703
    5. '][' → logprob: -10.878528594970703
    6. ')' → logprob: -12.003528594970703
    7. '])
' → logprob: -12.128528594970703
    8. '[' → logprob: -12.253528594970703
    9. ' ])' → logprob: -12.503528594970703
    10. '   ' → logprob: -12.628528594970703

Token 101: '        
' (ID: 3564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1415393054485321
    2. '
' → logprob: -2.2665393352508545
    3. ' for' → logprob: -3.8915393352508545
    4. '```' → logprob: -6.141539096832275
    5. '\n' → logprob: -6.266539096832275
    6. 'print' → logprob: -6.516539096832275
    7. 'result' → logprob: -8.141539573669434
    8. 'n' → logprob: -8.266539573669434
    9. '

' → logprob: -8.266539573669434
    10. 'max' → logprob: -8.391539573669434

Token 102: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026628158520907164
    2. ' for' → logprob: -6.752662658691406
    3. 'print' → logprob: -6.752662658691406
    4. 'ans' → logprob: -8.627662658691406
    5. 'result' → logprob: -9.377662658691406
    6. 'res' → logprob: -11.002662658691406
    7. 'max' → logprob: -11.002662658691406
    8. '```' → logprob: -11.502662658691406
    9. 'answer' → logprob: -11.627662658691406
    10. 'j' → logprob: -13.252662658691406

Token 103: ' i' (ID: 575)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6473684906959534
    2. ' v' → logprob: -1.2723684310913086
    3. 'j' → logprob: -2.0223684310913086
    4. ' j' → logprob: -3.3973684310913086
    5. 'i' → logprob: -3.7723684310913086
    6. ' i' → logprob: -4.897368431091309
    7. ' ' → logprob: -9.772368431091309
    8. 'max' → logprob: -10.772368431091309
    9. ' max' → logprob: -11.272368431091309
    10. 'value' → logprob: -11.522368431091309

Token 104: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31330424547195435
    2. 'in' → logprob: -1.3133041858673096
    3. 'range' → logprob: -10.81330394744873
    4. ' ' → logprob: -11.68830394744873
    5. ' range' → logprob: -12.43830394744873
    6. ',' → logprob: -12.43830394744873
    7. 'n' → logprob: -13.06330394744873
    8. '	in' → logprob: -13.93830394744873
    9. '(range' → logprob: -14.18830394744873
    10. '  ' → logprob: -14.56330394744873

Token 105: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. 're' → logprob: -17.125045776367188
    4. '

' → logprob: -18.625045776367188
    5. '   ' → logprob: -18.750045776367188
    6. '(range' → logprob: -19.250045776367188
    7. '```' → logprob: -19.625045776367188
    8. '
' → logprob: -20.000045776367188
    9. 'r' → logprob: -20.250045776367188
    10. ' ' → logprob: -20.875045776367188

Token 106: '(MAX' (ID: 129209)
  Prédit: '(MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(MAX' → logprob: -0.002420606790110469
    2. '(' → logprob: -6.377420425415039
    3. '(len' → logprob: -7.377420425415039
    4. '(M' → logprob: -9.877420425415039
    5. 'MAX' → logprob: -10.252420425415039
    6. '(Max' → logprob: -12.877420425415039
    7. '(max' → logprob: -13.627420425415039
    8. 'len' → logprob: -14.377420425415039
    9. '((' → logprob: -14.377420425415039
    10. '1' → logprob: -14.752420425415039

Token 107: '_V' (ID: 4553)
  Prédit: '_V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_V' → logprob: -1.2113979209971149e-05
    2. 'V' → logprob: -11.500012397766113
    3. 'MAX' → logprob: -13.625012397766113
    4. '_MAX' → logprob: -15.375012397766113
    5. '_v' → logprob: -15.375012397766113
    6. '-V' → logprob: -16.875011444091797
    7. 'v' → logprob: -17.125011444091797
    8. '(V' → logprob: -17.250011444091797
    9. ' ' → logprob: -17.500011444091797
    10. ')' → logprob: -18.500011444091797

Token 108: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16146419942378998
    2. ' +' → logprob: -2.536464214324951
    3. ',' → logprob: -2.661464214324951
    4. ' ,' → logprob: -9.661463737487793
    5. '-' → logprob: -10.536463737487793
    6. '   ' → logprob: -11.786463737487793
    7. ' -' → logprob: -12.661463737487793
    8. ',-' → logprob: -12.911463737487793
    9. '+,' → logprob: -12.911463737487793
    10. ',+' → logprob: -13.411463737487793

Token 109: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00319375516846776
    2. ' -' → logprob: -5.7531938552856445
    3. '-W' → logprob: -11.628193855285645
    4. '-max' → logprob: -12.378193855285645
    5. '0' → logprob: -13.503193855285645
    6. '-w' → logprob: -15.003193855285645
    7. '-M' → logprob: -15.628193855285645
    8. '-rest' → logprob: -15.878193855285645
    9. '-V' → logprob: -16.378192901611328
    10. '-t' → logprob: -16.503192901611328

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.125017166137695
    3. '(' → logprob: -14.125017166137695
    4. '-' → logprob: -15.250017166137695
    5. '   ' → logprob: -15.250017166137695
    6. '=' → logprob: -15.500017166137695
    7. ',' → logprob: -15.500017166137695
    8. '```' → logprob: -15.625017166137695
    9. '2' → logprob: -15.875017166137695
    10. '
' → logprob: -15.937517166137695

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03395088016986847
    2. '-' → logprob: -3.4089508056640625
    3. ',-' → logprob: -8.283950805664062
    4. ' ,' → logprob: -11.033950805664062
    5. ' -' → logprob: -11.158950805664062
    6. '1' → logprob: -11.283950805664062
    7. '-,' → logprob: -11.783950805664062
    8. ',
' → logprob: -14.033950805664062
    9. '```' → logprob: -14.783950805664062
    10. ' ,-' → logprob: -14.908950805664062

Token 112: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.02324722334742546
    2. ' -' → logprob: -3.773247241973877
    3. ' ' → logprob: -14.273246765136719
    4. ')' → logprob: -14.898246765136719
    5. '   ' → logprob: -15.273246765136719
    6. '1' → logprob: -16.14824676513672
    7. '):
' → logprob: -16.27324676513672
    8. '```' → logprob: -16.64824676513672
    9. '-)' → logprob: -16.64824676513672
    10. '-i' → logprob: -16.77324676513672

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.2500057220459
    4. '2' → logprob: -17.1250057220459
    5. '):
' → logprob: -17.2500057220459
    6. '```' → logprob: -17.2500057220459
    7. '-' → logprob: -17.7500057220459
    8. ',' → logprob: -17.7500057220459
    9. '
' → logprob: -17.8750057220459
    10. '  ' → logprob: -18.5000057220459

Token 114: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2770709693431854
    2. '):' → logprob: -1.6520709991455078
    3. '-' → logprob: -3.027070999145508
    4. '):
' → logprob: -6.777070999145508
    5. ':' → logprob: -7.777070999145508
    6. ')' → logprob: -9.277070999145508
    7. ' -' → logprob: -9.402070999145508
    8. '):-' → logprob: -10.402070999145508
    9. ':
' → logprob: -10.527070999145508
    10. ',' → logprob: -10.527070999145508

Token 115: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016563531011343002
    2. ' if' → logprob: -4.141563415527344
    3. '<|end|>' → logprob: -8.141563415527344
    4. ' ' → logprob: -9.016563415527344
    5. 'if' → logprob: -9.891563415527344
    6. '	if' → logprob: -10.641563415527344
    7. '```' → logprob: -11.766563415527344
    8. '       ' → logprob: -11.891563415527344
    9. '  ' → logprob: -11.891563415527344
    10. '    
' → logprob: -12.016563415527344

Token 116: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30234214663505554
    2. ' if' → logprob: -1.677342176437378
    3. ' ' → logprob: -2.802342176437378
    4. '<|end|>' → logprob: -4.677341938018799
    5. 'if' → logprob: -5.802341938018799
    6. '	if' → logprob: -8.052342414855957
    7. '  ' → logprob: -8.302342414855957
    8. '<|end|>' → logprob: -8.802342414855957
    9. ',' → logprob: -9.927342414855957
    10. 'If' → logprob: -10.052342414855957

Token 117: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07889353483915329
    2. ' dp' → logprob: -2.5788934230804443
    3. ' ' → logprob: -12.953893661499023
    4. '	dp' → logprob: -13.953893661499023
    5. '(dp' → logprob: -14.828893661499023
    6. '_dp' → logprob: -15.953893661499023
    7. '.dp' → logprob: -18.703893661499023
    8. '  ' → logprob: -18.953893661499023
    9. 'd' → logprob: -19.328893661499023
    10. ' ' → logprob: -19.703893661499023

Token 118: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.250001907348633
    3. ' [' → logprob: -16.625001907348633
    4. '[
' → logprob: -16.625001907348633
    5. '[I' → logprob: -17.000001907348633
    6. '[j' → logprob: -17.375001907348633
    7. 'i' → logprob: -17.875001907348633
    8. ' ' → logprob: -18.750001907348633
    9. '```' → logprob: -19.000001907348633
    10. '
' → logprob: -19.375001907348633

Token 119: ']' (ID: 60)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07038796693086624
    2. '<=' → logprob: -2.695388078689575
    3. ']<=' → logprob: -8.320387840270996
    4. ')<=' → logprob: -8.695387840270996
    5. ')' → logprob: -10.320387840270996
    6. ' ' → logprob: -12.320387840270996
    7. ']' → logprob: -13.070387840270996
    8. 'le' → logprob: -15.070387840270996
    9. ' <=",' → logprob: -15.195387840270996
    10. '```' → logprob: -15.320387840270996

Token 120: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759507417678833
    2. ' <=' → logprob: -0.8259507417678833
    3. ']<=' → logprob: -12.200950622558594
    4. ')<=' → logprob: -12.450950622558594
    5. ' ' → logprob: -13.325950622558594
    6. '```' → logprob: -15.075950622558594
    7. ' <=",' → logprob: -16.200950622558594
    8. 'le' → logprob: -16.450950622558594
    9. '≤' → logprob: -16.950950622558594
    10. '0' → logprob: -16.950950622558594

Token 121: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0024773201439529657
    2. ' W' → logprob: -6.002477169036865
    3. ' ' → logprob: -13.752477645874023
    4. '	W' → logprob: -14.877477645874023
    5. '   ' → logprob: -15.502477645874023
    6. '  ' → logprob: -17.127477645874023
    7. '=W' → logprob: -17.877477645874023
    8. '<W' → logprob: -17.877477645874023
    9. '```' → logprob: -18.752477645874023
    10. '    ' → logprob: -18.877477645874023

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02056208811700344
    2. ':
' → logprob: -3.895562171936035
    3. '):
' → logprob: -11.645562171936035
    4. '):' → logprob: -12.270562171936035
    5. ')' → logprob: -13.020562171936035
    6. ' ' → logprob: -13.895562171936035
    7. ':return' → logprob: -13.895562171936035
    8. 'print' → logprob: -14.145562171936035
    9. ':
' → logprob: -14.395562171936035
    10. ':

' → logprob: -14.395562171936035

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026186732575297356
    2. ' print' → logprob: -4.026186943054199
    3. 'print' → logprob: -4.901186943054199
    4. ' ' → logprob: -7.776186943054199
    5. '       ' → logprob: -8.9011869430542
    6. '
' → logprob: -12.2761869430542
    7. '	print' → logprob: -13.1511869430542
    8. '     ' → logprob: -13.6511869430542
    9. '  ' → logprob: -14.0261869430542
    10. '```' → logprob: -14.4011869430542

Token 124: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.012029916048049927
    2. ' print' → logprob: -4.512030124664307
    3. '   ' → logprob: -7.012030124664307
    4. ' ' → logprob: -9.762029647827148
    5. '
' → logprob: -10.762029647827148
    6. '  
' → logprob: -14.262029647827148
    7. '	print' → logprob: -14.887029647827148
    8. '```' → logprob: -15.137029647827148
    9. '  ' → logprob: -15.262029647827148
    10. '    
' → logprob: -15.762029647827148

Token 125: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.7372048862162046e-05
    2. 'i' → logprob: -10.625027656555176
    3. '(' → logprob: -13.125027656555176
    4. ' i' → logprob: -13.875027656555176
    5. ' ' → logprob: -16.25002670288086
    6. ' (' → logprob: -18.87502670288086
    7. '(
' → logprob: -19.25002670288086
    8. '[i' → logprob: -20.12502670288086
    9. ')i' → logprob: -21.12502670288086
    10. '	i' → logprob: -21.25002670288086

Token 126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031790214125066996
    2. ')
' → logprob: -5.75317907333374
    3. ' )' → logprob: -14.128178596496582
    4. ')
' → logprob: -15.128178596496582
    5. ')return' → logprob: -15.253178596496582
    6. ')`' → logprob: -16.8781795501709
    7. ' ' → logprob: -17.2531795501709
    8. '))' → logprob: -17.3781795501709
    9. '),' → logprob: -17.5031795501709
    10. ' )
' → logprob: -18.0031795501709

Token 127: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' break' (ID: 2338)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4799504280090332
    2. 'break' (adapté à ' break') → logprob: -0.9799504280090332
    3. ' break' → logprob: -5.229950428009033
    4. '	break' → logprob: -8.354949951171875
    5. ' ' → logprob: -8.604949951171875
    6. '       ' → logprob: -9.729949951171875
    7. '  ' → logprob: -11.479949951171875
    8. '```' → logprob: -12.354949951171875
    9. '     ' → logprob: -12.604949951171875
    10. '    ' → logprob: -13.229949951171875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 126
Tokens correctement prédits (1ère position, stricte): 57
Tokens correctement prédits (1ère position, avec adaptation): 59
Tokens correctement prédits (top 10): 111
Précision stricte (1ère position): 45.24%
Précision adaptée (1ère position): 46.83%
Précision (top 10): 88.10%
================================================================================
