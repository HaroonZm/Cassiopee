================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

def dfs(G, C, id, color):
    S = deque()
    S.append(id)
    C[id] = color

    while S:
        u = S.pop()
        #S = S[:-1]  # pop
        for i in range(len(G[u])):
            v = G[u][i]
            if C[v] == -1:
                C[v] = color
                S.append(v)

if __name__ == '__main__':
    # ??????????????\???
    num_of_users, num_of_links = [int(x) for x in input().split(' ')]
    links = []
    for _ in range(num_of_links):
        links.append(list(map(int, input().split(' '))))
    num_of_queries = int(input())
    queries = []
    for _ in range(num_of_queries):
        queries.append(list(map(int, input().split(' '))))

    # ???????????????
    G = [[] for _ in range(100000)]
    C = [-1] * 100000
    for f, t in links:
        G[f].append(t)
        G[t].append(f)

    color = 1
    for id in range(num_of_users):
        if C[id] == -1:
            dfs(G, C, id, color)
        color += 1

    # ???????????????
    for x, y in queries:
        if C[x] == C[y]:
            print('yes')
        else:
            print('no')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.5559979677200317
    2. 'deque' → logprob: -1.3059979677200317
    3. 'default' → logprob: -2.305997848510742
    4. ' defaultdict' → logprob: -3.680997848510742
    5. 'Counter' → logprob: -4.180997848510742
    6. ' abc' → logprob: -4.805997848510742
    7. 'named' → logprob: -5.680997848510742
    8. ' deque' → logprob: -6.555997848510742
    9. ' Counter' → logprob: -7.180997848510742
    10. '```' → logprob: -7.305997848510742

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014316747896373272
    2. '.' → logprob: -5.014316558837891
    3. '\(' → logprob: -5.764316558837891
    4. '```' → logprob: -6.889316558837891
    5. '\' → logprob: -7.014316558837891
    6. '\n' → logprob: -7.264316558837891
    7. '[' → logprob: -8.01431655883789
    8. '(
' → logprob: -8.26431655883789
    9. 'import' → logprob: -8.38931655883789
    10. 'newline' → logprob: -8.38931655883789

Token 5: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2134522646665573
    2. '(' → logprob: -2.3384523391723633
    3. 'a' → logprob: -2.9634523391723633
    4. ' ' → logprob: -4.838452339172363
    5. '[' → logprob: -5.338452339172363
    6. 'q' → logprob: -5.338452339172363
    7. 'b' → logprob: -5.588452339172363
    8. '`' → logprob: -5.588452339172363
    9. '.' → logprob: -6.088452339172363
    10. ',' → logprob: -6.338452339172363

Token 6: ' dfs' (ID: 51252)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0019524219678714871
    2. ' bfs' → logprob: -6.876952648162842
    3. ' ' → logprob: -8.751952171325684
    4. ' deque' → logprob: -8.876952171325684
    5. ' ```' → logprob: -9.376952171325684
    6. ' space' → logprob: -9.626952171325684
    7. ' de' → logprob: -9.751952171325684
    8. ' a' → logprob: -10.001952171325684
    9. ' dfs' → logprob: -10.126952171325684
    10. ' queue' → logprob: -10.251952171325684

Token 7: '(G' (ID: 12449)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011386694386601448
    2. '_' → logprob: -7.001138687133789
    3. ' (' → logprob: -9.376138687133789
    4. '(node' → logprob: -10.126138687133789
    5. '_recursive' → logprob: -11.501138687133789
    6. '_tree' → logprob: -11.626138687133789
    7. '_(' → logprob: -11.751138687133789
    8. '(tree' → logprob: -11.876138687133789
    9. '```' → logprob: -12.501138687133789
    10. '(root' → logprob: -12.626138687133789

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019817621796391904
    2. '[' → logprob: -9.250198364257812
    3. '):' → logprob: -9.750198364257812
    4. ')' → logprob: -11.000198364257812
    5. ' ,' → logprob: -11.875198364257812
    6. ',
' → logprob: -12.250198364257812
    7. ',node' → logprob: -12.375198364257812
    8. '[node' → logprob: -13.125198364257812
    9. ',

' → logprob: -13.750198364257812
    10. ',G' → logprob: -14.000198364257812

Token 9: ' C' (ID: 363)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2877918481826782
    2. 'v' → logprob: -1.5377918481826782
    3. ' s' → logprob: -1.5377918481826782
    4. ' v' → logprob: -2.2877917289733887
    5. ' start' → logprob: -2.4127917289733887
    6. 'start' → logprob: -3.0377917289733887
    7. 'u' → logprob: -3.2877917289733887
    8. ' u' → logprob: -4.412791728973389
    9. 'visited' → logprob: -6.537791728973389
    10. ' node' → logprob: -6.662791728973389

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05652686581015587
    2. '):' → logprob: -2.9315268993377686
    3. 'urrent' → logprob: -7.8065266609191895
    4. ' ,' → logprob: -8.181527137756348
    5. ')' → logprob: -8.681527137756348
    6. 'v' → logprob: -9.056527137756348
    7. 'ount' → logprob: -9.181527137756348
    8. ',node' → logprob: -9.306527137756348
    9. ',u' → logprob: -9.681527137756348
    10. ',v' → logprob: -9.681527137756348

Token 11: ' id' (ID: 1211)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.48093512654304504
    2. 's' → logprob: -1.4809350967407227
    3. ' start' → logprob: -2.9809350967407227
    4. ' u' → logprob: -3.3559350967407227
    5. ' v' → logprob: -3.8559350967407227
    6. 'u' → logprob: -4.105935096740723
    7. 'v' → logprob: -4.730935096740723
    8. 'start' → logprob: -4.730935096740723
    9. ' S' → logprob: -5.605935096740723
    10. 'S' → logprob: -5.730935096740723

Token 12: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08874935656785965
    2. 'x' → logprob: -2.713749408721924
    3. ')' → logprob: -4.838749408721924
    4. '_' → logprob: -5.463749408721924
    5. ',' → logprob: -5.588749408721924
    6. 'ex' → logprob: -7.463749408721924
    7. 's' → logprob: -7.463749408721924
    8. '):
' → logprob: -8.088748931884766
    9. 'v' → logprob: -8.463748931884766
    10. 'ent' → logprob: -8.588748931884766

Token 13: ' color' (ID: 3089)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.5604538917541504
    2. ' start' → logprob: -1.6854538917541504
    3. ' visited' → logprob: -1.6854538917541504
    4. ' v' → logprob: -1.8104538917541504
    5. ' s' → logprob: -2.8104538917541504
    6. ' node' → logprob: -3.4354538917541504
    7. 'visited' → logprob: -3.6854538917541504
    8. 'u' → logprob: -4.06045389175415
    9. 'start' → logprob: -4.18545389175415
    10. ' stack' → logprob: -4.18545389175415

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005613049957901239
    2. ',' → logprob: -5.630612850189209
    3. ')' → logprob: -6.630612850189209
    4. 's' → logprob: -8.255613327026367
    5. '):
' → logprob: -8.630613327026367
    6. ' ):' → logprob: -9.505613327026367
    7. '_map' → logprob: -10.130613327026367
    8. '=' → logprob: -10.380613327026367
    9. ')):' → logprob: -10.630613327026367
    10. '):

' → logprob: -11.630613327026367

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18333688378334045
    2. '   ' → logprob: -2.0583369731903076
    3. '):' → logprob: -3.3083369731903076
    4. ',' → logprob: -6.6833367347717285
    5. ' :' → logprob: -6.8083367347717285
    6. '```' → logprob: -8.683337211608887
    7. '`:' → logprob: -8.683337211608887
    8. '():' → logprob: -9.308337211608887
    9. '':' → logprob: -9.308337211608887
    10. ' ' → logprob: -9.683337211608887

Token 16: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35599005222320557
    2. ':' → logprob: -1.4809900522232056
    3. ' stack' → logprob: -3.480989933013916
    4. ' if' → logprob: -4.230989933013916
    5. ' :' → logprob: -4.855989933013916
    6. 'stack' → logprob: -5.605989933013916
    7. 'if' → logprob: -5.730989933013916
    8. ' for' → logprob: -5.855989933013916
    9. '```' → logprob: -6.355989933013916
    10. ':
' → logprob: -6.855989933013916

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16170062124729156
    2. '=' → logprob: -1.9117006063461304
    3. '.' → logprob: -7.28670072555542
    4. ')' → logprob: -8.411700248718262
    5. '.append' → logprob: -8.661700248718262
    6. ',' → logprob: -9.036700248718262
    7. ' ' → logprob: -9.786700248718262
    8. '[' → logprob: -9.786700248718262
    9. '=[]' → logprob: -9.786700248718262
    10. '.push' → logprob: -10.036700248718262

Token 18: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.4288181960582733
    2. ' deque' → logprob: -1.0538182258605957
    3. ' [' → logprob: -10.178817749023438
    4. '[' → logprob: -10.178817749023438
    5. '[]' → logprob: -10.928817749023438
    6. 'Deque' → logprob: -11.553817749023438
    7. ' []' → logprob: -11.678817749023438
    8. 'de' → logprob: -13.303817749023438
    9. ' ' → logprob: -13.803817749023438
    10. '[(' → logprob: -14.303817749023438

Token 19: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09515929222106934
    2. '([' → logprob: -2.8451592922210693
    3. '(' → logprob: -3.5951592922210693
    4. '([(' → logprob: -5.595159530639648
    5. '([]' → logprob: -6.720159530639648
    6. '(G' → logprob: -8.595159530639648
    7. '(S' → logprob: -10.470159530639648
    8. '[(' → logprob: -11.345159530639648
    9. '((' → logprob: -11.595159530639648
    10. '()
' → logprob: -12.220159530639648

Token 20: '   ' (ID: 271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.28772690892219543
    2. '   ' → logprob: -1.537726879119873
    3. '(S' → logprob: -4.912726879119873
    4. '[' → logprob: -5.037726879119873
    5. ' S' → logprob: -5.287726879119873
    6. ')' → logprob: -5.287726879119873
    7. '.' → logprob: -5.537726879119873
    8. ' ' → logprob: -6.162726879119873
    9. '(' → logprob: -6.412726879119873
    10. '    
' → logprob: -7.412726879119873

Token 21: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.03130403906106949
    2. '   ' → logprob: -3.531304121017456
    3. ' S' → logprob: -6.531303882598877
    4. '(S' → logprob: -10.156304359436035
    5. '[' → logprob: -11.031304359436035
    6. '```' → logprob: -11.656304359436035
    7. '(' → logprob: -12.031304359436035
    8. '    
' → logprob: -12.156304359436035
    9. '    ' → logprob: -12.156304359436035
    10. 's' → logprob: -12.406304359436035

Token 22: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04861552268266678
    2. '.' → logprob: -3.0486154556274414
    3. '.extend' → logprob: -11.173615455627441
    4. '.push' → logprob: -12.048615455627441
    5. '.add' → logprob: -12.548615455627441
    6. '.pop' → logprob: -13.048615455627441
    7. '.clear' → logprob: -14.423615455627441
    8. '.setdefault' → logprob: -14.423615455627441
    9. '.enqueue' → logprob: -15.048615455627441
    10. '.put' → logprob: -15.548615455627441

Token 23: '(id' (ID: 6589)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2767137587070465
    2. '(id' → logprob: -1.6517137289047241
    3. '(' → logprob: -3.0267138481140137
    4. '(C' → logprob: -7.401713848114014
    5. '(G' → logprob: -7.901713848114014
    6. '(color' → logprob: -8.151713371276855
    7. '('' → logprob: -9.526713371276855
    8. 'left' → logprob: -10.151713371276855
    9. '(S' → logprob: -10.526713371276855
    10. '(i' → logprob: -10.526713371276855

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ' )' → logprob: -11.500020027160645
    3. '))' → logprob: -12.750020027160645
    4. ',' → logprob: -12.875020027160645
    5. '   ' → logprob: -12.875020027160645
    6. ')
' → logprob: -14.250020027160645
    7. '')' → logprob: -15.000020027160645
    8. '`)' → logprob: -15.375020027160645
    9. '),' → logprob: -15.625020027160645
    10. ' ' → logprob: -15.750020027160645

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9606677293777466
    2. '    
' → logprob: -1.5856677293777466
    3. '
' → logprob: -2.085667610168457
    4. ':' → logprob: -2.085667610168457
    5. '\n' → logprob: -3.210667610168457
    6. ' 
' → logprob: -3.710667610168457
    7. '  
' → logprob: -3.710667610168457
    8. '<|end|>' → logprob: -3.710667610168457
    9. '```' → logprob: -4.335667610168457
    10. ')' → logprob: -4.335667610168457

Token 26: ' C' (ID: 363)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13956880569458008
    2. '    
' → logprob: -2.76456880569458
    3. ' 
' → logprob: -3.76456880569458
    4. '  
' → logprob: -4.63956880569458
    5. '   ' → logprob: -4.76456880569458
    6. 'while' → logprob: -4.76456880569458
    7. ' while' → logprob: -4.88956880569458
    8. ':' → logprob: -5.76456880569458
    9. '   
' → logprob: -6.13956880569458
    10. '\n' → logprob: -6.51456880569458

Token 27: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -0.11776812374591827
    2. '[' → logprob: -2.3677680492401123
    3. '[color' → logprob: -4.867768287658691
    4. '[-' → logprob: -5.117768287658691
    5. '[S' → logprob: -6.992768287658691
    6. '[C' → logprob: -7.367768287658691
    7. '[len' → logprob: -7.867768287658691
    8. '.append' → logprob: -8.242768287658691
    9. '[c' → logprob: -8.992768287658691
    10. '[]' → logprob: -8.992768287658691

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019043663050979376
    2. ')' → logprob: -6.751904487609863
    3. ']=' → logprob: -7.626904487609863
    4. ' ]' → logprob: -8.626904487609863
    5. '])' → logprob: -10.751904487609863
    6. ']==' → logprob: -11.126904487609863
    7. '=' → logprob: -11.251904487609863
    8. '[' → logprob: -11.876904487609863
    9. '][' → logprob: -12.751904487609863
    10. ' )' → logprob: -13.376904487609863

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742542803287506
    2. ' =' → logprob: -0.9742542505264282
    3. '[' → logprob: -9.599254608154297
    4. ' |=' → logprob: -9.974254608154297
    5. ' +=' → logprob: -11.349254608154297
    6. ' ==' → logprob: -11.349254608154297
    7. '=color' → logprob: -11.599254608154297
    8. '+=' → logprob: -12.224254608154297
    9. '==' → logprob: -12.349254608154297
    10. '=True' → logprob: -12.474254608154297

Token 30: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.03956206142902374
    2. ' color' → logprob: -3.2895619869232178
    3. 'True' → logprob: -7.289562225341797
    4. '1' → logprob: -7.414562225341797
    5. ' True' → logprob: -8.539562225341797
    6. 'true' → logprob: -11.664562225341797
    7. ' ' → logprob: -11.789562225341797
    8. '	color' → logprob: -12.414562225341797
    9. '0' → logprob: -12.789562225341797
    10. '=color' → logprob: -12.914562225341797

Token 31: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18075403571128845
    2. '\n' → logprob: -2.1807539463043213
    3. '<|end|>' → logprob: -3.9307539463043213
    4. ' 
' → logprob: -4.3057541847229
    5. '    
' → logprob: -4.8057541847229
    6. '   ' → logprob: -5.6807541847229
    7. '  
' → logprob: -5.9307541847229
    8. '\' → logprob: -6.9307541847229
    9. '' → logprob: -7.3057541847229
    10. '```' → logprob: -7.6807541847229

Token 32: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9653881788253784
    2. '   ' → logprob: -1.5903881788253784
    3. 'while' → logprob: -1.7153881788253784
    4. '
' → logprob: -2.215388298034668
    5. '```' → logprob: -3.590388298034668
    6. '    
' → logprob: -3.715388298034668
    7. '\n' → logprob: -3.840388298034668
    8. ')' → logprob: -3.965388298034668
    9. '<|end|>' → logprob: -4.340388298034668
    10. '	while' → logprob: -5.090388298034668

Token 33: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.1009441390633583
    2. ' while' → logprob: -2.3509440422058105
    3. '   ' → logprob: -7.3509440422058105
    4. '```' → logprob: -10.225944519042969
    5. '	while' → logprob: -10.600944519042969
    6. '
' → logprob: -10.850944519042969
    7. '    
' → logprob: -11.600944519042969
    8. ' 
' → logprob: -13.100944519042969
    9. 'While' → logprob: -13.600944519042969
    10. '\n' → logprob: -14.850944519042969

Token 34: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.03170162811875343
    2. 'S' → logprob: -3.6567015647888184
    3. ' len' → logprob: -5.281701564788818
    4. 'len' → logprob: -8.281702041625977
    5. ' ' → logprob: -10.156702041625977
    6. '(len' → logprob: -12.531702041625977
    7. ' not' → logprob: -12.906702041625977
    8. '   ' → logprob: -13.406702041625977
    9. '	S' → logprob: -13.781702041625977
    10. '  ' → logprob: -14.156702041625977

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009904148755595088
    2. '):' → logprob: -7.000990390777588
    3. '>:' → logprob: -10.375990867614746
    4. '.pop' → logprob: -11.125990867614746
    5. ':**' → logprob: -11.250990867614746
    6. ':not' → logprob: -12.500990867614746
    7. ')' → logprob: -12.750990867614746
    8. '():' → logprob: -12.750990867614746
    9. '```' → logprob: -13.000990867614746
    10. '}:' → logprob: -13.625990867614746

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030397435184568167
    2. '   ' → logprob: -7.003039836883545
    3. '        
' → logprob: -8.003039360046387
    4. ':' → logprob: -8.378039360046387
    5. '
' → logprob: -8.503039360046387
    6. '    
' → logprob: -8.628039360046387
    7. ' 
' → logprob: -8.878039360046387
    8. ',' → logprob: -9.003039360046387
    9. 'n' → logprob: -9.128039360046387
    10. '    ' → logprob: -9.503039360046387

Token 37: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.3582408130168915
    2. 'u' (adapté à ' u') → logprob: -2.358240842819214
    3. ' id' → logprob: -2.358240842819214
    4. 'id' → logprob: -3.108240842819214
    5. ' v' → logprob: -3.233240842819214
    6. 'v' → logprob: -4.233240604400635
    7. ' node' → logprob: -5.108240604400635
    8. '   ' → logprob: -5.358240604400635
    9. 'node' → logprob: -6.608240604400635
    10. ' current' → logprob: -7.858240604400635

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038046542555093765
    2. '=' → logprob: -3.2880465984344482
    3. '   ' → logprob: -13.163046836853027
    4. ' ' → logprob: -13.413046836853027
    5. '    ' → logprob: -14.038046836853027
    6. ',' → logprob: -14.913046836853027
    7. ')' → logprob: -15.913046836853027
    8. '  ' → logprob: -16.53804588317871
    9. '.' → logprob: -16.66304588317871
    10. '	' → logprob: -16.66304588317871

Token 39: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.4287017285823822
    2. ' S' → logprob: -1.0537017583847046
    3. '<|end|>' → logprob: -15.178701400756836
    4. 's' → logprob: -15.678701400756836
    5. ')' → logprob: -15.928701400756836
    6. ' ' → logprob: -16.053701400756836
    7. ' ' → logprob: -16.428701400756836
    8. '	S' → logprob: -16.428701400756836
    9. '>S' → logprob: -16.553701400756836
    10. '_S' → logprob: -16.678701400756836

Token 40: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0012468972709029913
    2. '.p' → logprob: -6.751246929168701
    3. '.' → logprob: -9.501246452331543
    4. 'pop' → logprob: -13.626246452331543
    5. ' .' → logprob: -14.876246452331543
    6. '   ' → logprob: -15.501246452331543
    7. '[-' → logprob: -17.25124740600586
    8. '.Pop' → logprob: -17.62624740600586
    9. '.dequeue' → logprob: -18.75124740600586
    10. '.poll' → logprob: -19.00124740600586

Token 41: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010151672904612496
    2. '()
' → logprob: -9.375101089477539
    3. '(' → logprob: -11.500101089477539
    4. ')' → logprob: -12.375101089477539
    5. '())' → logprob: -13.625101089477539
    6. ' ()' → logprob: -15.375101089477539
    7. '()

' → logprob: -15.500101089477539
    8. '()
' → logprob: -15.750101089477539
    9. '()`' → logprob: -15.875101089477539
    10. '()]' → logprob: -16.37510108947754

Token 42: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17433498799800873
    2. '<|end|>' → logprob: -2.29933500289917
    3. '       ' → logprob: -3.54933500289917
    4. '        
' → logprob: -4.92433500289917
    5. ' for' → logprob: -5.17433500289917
    6. '  
' → logprob: -5.29933500289917
    7. ' 
' → logprob: -5.42433500289917
    8. '\n' → logprob: -6.04933500289917
    9. '    
' → logprob: -6.17433500289917
    10. '<|end|>' → logprob: -6.67433500289917

Token 43: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2522667646408081
    2. ' for' → logprob: -1.502266764640808
    3. '       ' → logprob: -8.377266883850098
    4. '   ' → logprob: -9.377266883850098
    5. '	for' → logprob: -11.377266883850098
    6. '```' → logprob: -11.877266883850098
    7. ' ' → logprob: -13.502266883850098
    8. '           ' → logprob: -14.377266883850098
    9. '        
' → logprob: -14.502266883850098
    10. '
' → logprob: -14.627266883850098

Token 44: 'S' (ID: 50)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03819594532251358
    2. 'for' → logprob: -3.288195848464966
    3. ' For' → logprob: -9.788195610046387
    4. 'For' → logprob: -10.413195610046387
    5. '    ' → logprob: -10.663195610046387
    6. ' if' → logprob: -11.288195610046387
    7. '        ' → logprob: -11.663195610046387
    8. '       ' → logprob: -11.788195610046387
    9. '   ' → logprob: -12.038195610046387
    10. 'if' → logprob: -13.163195610046387

Token 45: ' =' (ID: 314)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.06454991549253464
    2. '.append' → logprob: -2.8145499229431152
    3. '.' → logprob: -6.564549922943115
    4. 'extend' → logprob: -7.064549922943115
    5. '.clear' → logprob: -8.689549446105957
    6. ' extend' → logprob: -10.439549446105957
    7. '.update' → logprob: -10.689549446105957
    8. '[-' → logprob: -11.439549446105957
    9. 'append' → logprob: -11.439549446105957
    10. '.remove' → logprob: -11.439549446105957

Token 46: ' S' (ID: 336)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.4689573347568512
    2. ' [' → logprob: -2.4689574241638184
    3. ' deque' → logprob: -2.4689574241638184
    4. 'S' → logprob: -2.9689574241638184
    5. '[]' → logprob: -2.9689574241638184
    6. ' S' → logprob: -3.0939574241638184
    7. ' []' → logprob: -3.3439574241638184
    8. '[' → logprob: -4.968957424163818
    9. '[u' → logprob: -6.093957424163818
    10. ' ' → logprob: -6.218957424163818

Token 47: '[:-' (ID: 63556)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3135443925857544
    2. ' +' → logprob: -1.4385443925857544
    3. '.extend' → logprob: -4.188544273376465
    4. '<|end|>' → logprob: -5.063544273376465
    5. ' ' → logprob: -6.063544273376465
    6. '.' → logprob: -6.938544273376465
    7. '[::-' → logprob: -7.313544273376465
    8. '[:]' → logprob: -7.313544273376465
    9. '[' → logprob: -7.438544273376465
    10. '.append' → logprob: -7.438544273376465

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1080467781284824e-05
    2. ' ' → logprob: -10.750041007995605
    3. '-' → logprob: -11.875041007995605
    4. '(' → logprob: -12.375041007995605
    5. ']' → logprob: -12.625041007995605
    6. '   ' → logprob: -13.125041007995605
    7. ' -' → logprob: -14.250041007995605
    8. '[' → logprob: -15.062541007995605
    9. 'u' → logprob: -15.187541007995605
    10. '  ' → logprob: -15.312541007995605

Token 49: ']' (ID: 60)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8730545043945312
    2. '
' → logprob: -1.3730545043945312
    3. ' for' → logprob: -1.6230545043945312
    4. '<|end|>' → logprob: -2.7480545043945312
    5. 'for' → logprob: -2.8730545043945312
    6. '        
' → logprob: -5.498054504394531
    7. '<|end|>' → logprob: -5.748054504394531
    8. '   ' → logprob: -6.498054504394531
    9. ' ' → logprob: -7.498054504394531
    10. ' 
' → logprob: -7.998054504394531

Token 51: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27264222502708435
    2. '<|end|>' → logprob: -1.7726422548294067
    3. '
' → logprob: -3.147642135620117
    4. ' for' → logprob: -4.397642135620117
    5. '<|end|>' → logprob: -5.397642135620117
    6. 'for' → logprob: -5.897642135620117
    7. '        
' → logprob: -6.147642135620117
    8. '   ' → logprob: -6.397642135620117
    9. ' ' → logprob: -6.897642135620117
    10. ' 
' → logprob: -8.272642135620117

Token 52: ' pop' (ID: 2735)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7098196148872375
    2. '<|end|>' → logprob: -1.4598195552825928
    3. ' for' → logprob: -1.8348195552825928
    4. '
' → logprob: -2.5848195552825928
    5. 'for' → logprob: -3.8348195552825928
    6. '        
' → logprob: -5.459819793701172
    7. '<|end|>' → logprob: -5.709819793701172
    8. '   ' → logprob: -5.959819793701172
    9. ' ' → logprob: -5.959819793701172
    10. '#' → logprob: -6.709819793701172

Token 53: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14453263580799103
    2. '
' → logprob: -3.2695326805114746
    3. ' for' → logprob: -3.2695326805114746
    4. 'for' → logprob: -3.7695326805114746
    5. '        
' → logprob: -4.144532680511475
    6. '<|end|>' → logprob: -4.394532680511475
    7. ' 
' → logprob: -6.019532680511475
    8. '<|end|>' → logprob: -6.894532680511475
    9. ' ' → logprob: -7.144532680511475
    10. '  
' → logprob: -7.394532680511475

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08447659015655518
    2. ' for' → logprob: -3.5844764709472656
    3. '<|end|>' → logprob: -3.8344764709472656
    4. '
' → logprob: -4.084476470947266
    5. 'for' → logprob: -5.209476470947266
    6. '        
' → logprob: -5.459476470947266
    7. '<|end|>' → logprob: -6.084476470947266
    8. ' 
' → logprob: -7.584476470947266
    9. '   ' → logprob: -7.959476470947266
    10. ' ' → logprob: -8.209476470947266

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6369611024856567
    2. 'for' (adapté à ' for') → logprob: -0.7619611024856567
    3. '       ' → logprob: -5.636960983276367
    4. '   ' → logprob: -7.261960983276367
    5. '	for' → logprob: -10.511960983276367
    6. '
' → logprob: -11.011960983276367
    7. ' ' → logprob: -11.386960983276367
    8. '<|end|>' → logprob: -11.636960983276367
    9. '        
' → logprob: -12.261960983276367
    10. 'if' → logprob: -12.261960983276367

Token 56: ' i' (ID: 575)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0713983029127121
    2. 'v' → logprob: -2.6963982582092285
    3. ' w' → logprob: -6.8213982582092285
    4. 'w' → logprob: -8.821398735046387
    5. 'neighbor' → logprob: -9.446398735046387
    6. ' neighbor' → logprob: -10.321398735046387
    7. '	v' → logprob: -10.696398735046387
    8. ' ' → logprob: -10.946398735046387
    9. '   ' → logprob: -11.196398735046387
    10. '    ' → logprob: -11.821398735046387

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2847196161746979
    2. 'in' → logprob: -1.4097195863723755
    3. ' ' → logprob: -6.284719467163086
    4. ',' → logprob: -7.534719467163086
    5. '   ' → logprob: -7.784719467163086
    6. '    ' → logprob: -8.534719467163086
    7. '  ' → logprob: -8.909719467163086
    8. '	in' → logprob: -8.909719467163086
    9. 'n' → logprob: -9.409719467163086
    10. 'u' → logprob: -10.284719467163086

Token 58: ' range' (ID: 3352)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.0915401503443718
    2. ' G' → logprob: -2.8415400981903076
    3. 'range' → logprob: -3.9665400981903076
    4. ' range' → logprob: -4.591540336608887
    5. ' ' → logprob: -10.966540336608887
    6. '   ' → logprob: -11.841540336608887
    7. ')' → logprob: -11.966540336608887
    8. ' xrange' → logprob: -12.091540336608887
    9. '	G' → logprob: -12.216540336608887
    10. 'list' → logprob: -12.591540336608887

Token 59: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00011880126112373546
    2. '(' → logprob: -9.75011920928955
    3. 'len' → logprob: -9.75011920928955
    4. '(G' → logprob: -13.87511920928955
    5. ' len' → logprob: -14.25011920928955
    6. '	len' → logprob: -15.75011920928955
    7. '   ' → logprob: -16.375118255615234
    8. '[len' → logprob: -17.000118255615234
    9. '(L' → logprob: -17.125118255615234
    10. '=len' → logprob: -17.375118255615234

Token 60: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.00040636269841343164
    2. '(' → logprob: -8.000406265258789
    3. 'G' → logprob: -10.000406265258789
    4. ')' → logprob: -12.250406265258789
    5. ' (' → logprob: -12.500406265258789
    6. '(S' → logprob: -12.625406265258789
    7. '(u' → logprob: -12.750406265258789
    8. '(C' → logprob: -12.875406265258789
    9. '((' → logprob: -13.625406265258789
    10. '(
' → logprob: -13.750406265258789

Token 61: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0001363168703392148
    2. '[' → logprob: -9.250136375427246
    3. ' [' → logprob: -11.125136375427246
    4. '[G' → logprob: -11.500136375427246
    5. '[S' → logprob: -12.500136375427246
    6. 'u' → logprob: -12.500136375427246
    7. ')' → logprob: -13.125136375427246
    8. '   ' → logprob: -13.625136375427246
    9. '(u' → logprob: -13.625136375427246
    10. '[
' → logprob: -14.375136375427246

Token 62: '])):
' (ID: 145266)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.03917284309864044
    2. '])):
' → logprob: -3.289172887802124
    3. ')):' → logprob: -7.539172649383545
    4. ']' → logprob: -8.664173126220703
    5. '']))' → logprob: -8.789173126220703
    6. '))' → logprob: -9.039173126220703
    7. ']):' → logprob: -9.164173126220703
    8. '])' → logprob: -10.664173126220703
    9. '[u' → logprob: -11.414173126220703
    10. '"]))' → logprob: -12.664173126220703

Token 63: '           ' (ID: 352)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43675127625465393
    2. '       ' → logprob: -1.5617512464523315
    3. ':' → logprob: -2.811751365661621
    4. '):
' → logprob: -2.936751365661621
    5. ' ):' → logprob: -4.311751365661621
    6. ' :' → logprob: -4.936751365661621
    7. '   ' → logprob: -5.186751365661621
    8. ' ):
' → logprob: -6.686751365661621
    9. ' if' → logprob: -6.811751365661621
    10. ')' → logprob: -7.686751365661621

Token 64: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.03528941050171852
    2. ' v' → logprob: -4.035289287567139
    3. 'if' → logprob: -4.535289287567139
    4. ' if' → logprob: -5.660289287567139
    5. '   ' → logprob: -6.035289287567139
    6. 'w' → logprob: -8.785289764404297
    7. ' ' → logprob: -9.410289764404297
    8. '	v' → logprob: -10.160289764404297
    9. '  ' → logprob: -10.285289764404297
    10. 'neighbor' → logprob: -10.910289764404297

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030263079330325127
    2. '=' → logprob: -3.5302631855010986
    3. ')' → logprob: -7.7802629470825195
    4. ' ' → logprob: -10.40526294708252
    5. ' )' → logprob: -10.40526294708252
    6. '            ' → logprob: -11.78026294708252
    7. ' =)' → logprob: -12.15526294708252
    8. ']' → logprob: -12.40526294708252
    9. '    ' → logprob: -12.78026294708252
    10. '<|end|>' → logprob: -13.15526294708252

Token 66: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.03365250304341316
    2. ' G' → logprob: -3.4086525440216064
    3. '   ' → logprob: -12.783652305603027
    4. '	G' → logprob: -13.533652305603027
    5. '    ' → logprob: -13.783652305603027
    6. ' ' → logprob: -14.408652305603027
    7. '           ' → logprob: -15.533652305603027
    8. ' ' → logprob: -16.033653259277344
    9. 'Ｇ' → logprob: -16.158653259277344
    10. '(G' → logprob: -16.533653259277344

Token 67: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -11.750008583068848
    3. ' [' → logprob: -15.375008583068848
    4. 'u' → logprob: -15.375008583068848
    5. '[v' → logprob: -16.125009536743164
    6. '```' → logprob: -16.250009536743164
    7. ' ' → logprob: -16.750009536743164
    8. '	u' → logprob: -16.750009536743164
    9. '   ' → logprob: -17.000009536743164
    10. '<u' → logprob: -17.375009536743164

Token 68: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.20237083733081818
    2. '[u' → logprob: -1.7023708820343018
    3. ']' → logprob: -7.827370643615723
    4. '[' → logprob: -8.202370643615723
    5. '])' → logprob: -9.327370643615723
    6. ' ][' → logprob: -9.952370643615723
    7. '[i' → logprob: -10.077370643615723
    8. ')][' → logprob: -11.077370643615723
    9. '   ' → logprob: -11.327370643615723
    10. '])[' → logprob: -11.327370643615723

Token 69: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.534558552724775e-05
    2. ' i' → logprob: -10.750025749206543
    3. ' ' → logprob: -13.500025749206543
    4. ')' → logprob: -13.875025749206543
    5. '   ' → logprob: -15.000025749206543
    6. ']' → logprob: -15.250025749206543
    7. '	i' → logprob: -15.375025749206543
    8. ')i' → logprob: -15.500025749206543
    9. '
' → logprob: -16.500024795532227
    10. '])' → logprob: -16.625024795532227

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7320680022239685
    2. ']' → logprob: -0.7320680022239685
    3. ')
' → logprob: -4.357068061828613
    4. ']
' → logprob: -4.482068061828613
    5. '])' → logprob: -4.857068061828613
    6. '       ' → logprob: -6.107068061828613
    7. '           ' → logprob: -6.482068061828613
    8. ')]' → logprob: -6.732068061828613
    9. ' )' → logprob: -7.607068061828613
    10. ' ]' → logprob: -8.232068061828613

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17214199900627136
    2. ' if' → logprob: -2.6721420288085938
    3. '<|end|>' → logprob: -3.2971420288085938
    4. 'if' → logprob: -4.547142028808594
    5. ' ' → logprob: -4.672142028808594
    6. '            
' → logprob: -4.797142028808594
    7. '       ' → logprob: -5.047142028808594
    8. '
' → logprob: -5.422142028808594
    9. ' 
' → logprob: -5.922142028808594
    10. '            ' → logprob: -6.297142028808594

Token 72: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2322181910276413
    2. 'if' (adapté à ' if') → logprob: -1.6072181463241577
    3. '           ' → logprob: -5.107218265533447
    4. '            ' → logprob: -8.107217788696289
    5. ' ' → logprob: -9.107217788696289
    6. '    ' → logprob: -9.357217788696289
    7. '   ' → logprob: -9.857217788696289
    8. '       ' → logprob: -10.107217788696289
    9. '            
' → logprob: -10.482217788696289
    10. ' not' → logprob: -10.857217788696289

Token 73: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.02448665164411068
    2. 'C' → logprob: -4.024486541748047
    3. ' not' → logprob: -5.649486541748047
    4. ' ' → logprob: -6.649486541748047
    5. ' v' → logprob: -6.774486541748047
    6. 'v' → logprob: -8.649486541748047
    7. '   ' → logprob: -10.336986541748047
    8. ' color' → logprob: -10.586986541748047
    9. '	C' → logprob: -10.899486541748047
    10. 'not' → logprob: -11.024486541748047

Token 74: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.0280383548888494e-06
    2. 'v' → logprob: -14.625000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[u' → logprob: -15.500000953674316
    5. '[i' → logprob: -19.625001907348633
    6. '[val' → logprob: -19.875001907348633
    7. '[V' → logprob: -20.125001907348633
    8. '```' → logprob: -20.250001907348633
    9. ' [' → logprob: -20.375001907348633
    10. ')v' → logprob: -20.750001907348633

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01629781536757946
    2. ']==' → logprob: -4.141297817230225
    3. '[' → logprob: -9.016297340393066
    4. 'is' → logprob: -10.141297340393066
    5. ' ]' → logprob: -10.266297340393066
    6. '==' → logprob: -10.391297340393066
    7. ')' → logprob: -11.141297340393066
    8. '==-' → logprob: -12.266297340393066
    9. ']<' → logprob: -12.641297340393066
    10. '```' → logprob: -13.016297340393066

Token 76: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6640653014183044
    2. ' ==' → logprob: -0.9140653014183044
    3. '==-' → logprob: -2.664065361022949
    4. ' is' → logprob: -4.664065361022949
    5. 'is' → logprob: -5.914065361022949
    6. ')' → logprob: -7.164065361022949
    7. '<' → logprob: -7.414065361022949
    8. '[' → logprob: -7.664065361022949
    9. ']==' → logprob: -8.41406536102295
    10. ')==' → logprob: -9.16406536102295

Token 77: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6612508893013
    2. '-' → logprob: -0.7862508893013
    3. ' -' → logprob: -4.161251068115234
    4. ' ' → logprob: -4.661251068115234
    5. 'None' → logprob: -5.911251068115234
    6. ' None' → logprob: -8.036251068115234
    7. 'False' → logprob: -10.161251068115234
    8. '.' → logprob: -10.848751068115234
    9. 'color' → logprob: -11.348751068115234
    10. '   ' → logprob: -11.348751068115234

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '2' → logprob: -14.750004768371582
    4. '   ' → logprob: -15.625004768371582
    5. '```' → logprob: -16.375003814697266
    6. '-' → logprob: -16.937503814697266
    7. '  ' → logprob: -17.250003814697266
    8. '۱' → logprob: -17.562503814697266
    9. 'color' → logprob: -18.062503814697266
    10. '१' → logprob: -18.250003814697266

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009249396622180939
    2. ':
' → logprob: -4.759249210357666
    3. ' and' → logprob: -7.759249210357666
    4. '):' → logprob: -9.009249687194824
    5. '):
' → logprob: -10.509249687194824
    6. ' :' → logprob: -11.134249687194824
    7. ')' → logprob: -11.384249687194824
    8. 'and' → logprob: -11.634249687194824
    9. ':

' → logprob: -12.134249687194824
    10. ' or' → logprob: -12.384249687194824

Token 80: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0691002905368805
    2. ':' → logprob: -2.8191003799438477
    3. '           ' → logprob: -5.819100379943848
    4. ':
' → logprob: -6.944100379943848
    5. '):' → logprob: -7.194100379943848
    6. ')' → logprob: -7.569100379943848
    7. '```' → logprob: -8.319100379943848
    8. '<|end|>' → logprob: -8.319100379943848
    9. '):
' → logprob: -8.444100379943848
    10. ' ' → logprob: -8.694100379943848

Token 81: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.8371077179908752
    2. ' C' → logprob: -0.8371077179908752
    3. '                   ' → logprob: -2.7121076583862305
    4. '               ' → logprob: -2.9621076583862305
    5. '                ' → logprob: -4.9621076583862305
    6. 'S' → logprob: -5.3371076583862305
    7. '           ' → logprob: -6.9621076583862305
    8. ' ' → logprob: -7.3371076583862305
    9. ' S' → logprob: -8.08710765838623
    10. '<|end|>' → logprob: -8.21210765838623

Token 82: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.3080716346157715e-05
    2. '[' → logprob: -11.125022888183594
    3. 'v' → logprob: -12.250022888183594
    4. '	v' → logprob: -14.375022888183594
    5. ' [' → logprob: -14.625022888183594
    6. '[u' → logprob: -14.750022888183594
    7. '```' → logprob: -14.875022888183594
    8. '][' → logprob: -15.500022888183594
    9. '[V' → logprob: -15.750022888183594
    10. '[val' → logprob: -15.875022888183594

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004126011393964291
    2. ')' → logprob: -5.504126071929932
    3. ']=' → logprob: -10.379125595092773
    4. ' ]' → logprob: -11.504125595092773
    5. '=' → logprob: -12.629125595092773
    6. ' =' → logprob: -14.004125595092773
    7. '   ' → logprob: -14.754125595092773
    8. '])' → logprob: -15.004125595092773
    9. ' )' → logprob: -15.254125595092773
    10. '）' → logprob: -15.379125595092773

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602584570646286
    2. '=' → logprob: -1.910258412361145
    3. ')' → logprob: -10.410258293151855
    4. ']' → logprob: -13.910258293151855
    5. ' ' → logprob: -13.910258293151855
    6. ',' → logprob: -14.410258293151855
    7. ')=' → logprob: -14.910258293151855
    8. '=color' → logprob: -15.410258293151855
    9. '<|end|>' → logprob: -15.660258293151855
    10. '.' → logprob: -15.785258293151855

Token 85: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.6327279210090637
    2. 'color' → logprob: -0.7577279210090637
    3. '1' → logprob: -10.63272762298584
    4. '	color' → logprob: -10.63272762298584
    5. ' ' → logprob: -10.75772762298584
    6. '=color' → logprob: -11.38272762298584
    7. 'C' → logprob: -11.50772762298584
    8. 'olor' → logprob: -11.63272762298584
    9. ' C' → logprob: -11.75772762298584
    10. 'c' → logprob: -12.75772762298584

Token 86: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004835107363760471
    2. '<|end|>' → logprob: -6.12983512878418
    3. '
' → logprob: -6.50483512878418
    4. 'S' → logprob: -8.25483512878418
    5. ')' → logprob: -8.37983512878418
    6. '       ' → logprob: -9.50483512878418
    7. '           ' → logprob: -9.50483512878418
    8. '                
' → logprob: -9.62983512878418
    9. '<|end|>' → logprob: -9.62983512878418
    10. '              ' → logprob: -9.75483512878418

Token 87: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045420706272125244
    2. '<|end|>' → logprob: -4.1704206466674805
    3. '
' → logprob: -4.2954206466674805
    4. 'S' → logprob: -4.6704206466674805
    5. ')' → logprob: -6.4204206466674805
    6. '           ' → logprob: -6.5454206466674805
    7. '       ' → logprob: -6.9204206466674805
    8. ' S' → logprob: -7.7954206466674805
    9. '                   ' → logprob: -8.29542064666748
    10. ')
' → logprob: -8.42042064666748

Token 88: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -2.5776860184123507e-06
    2. ' S' → logprob: -13.62500286102295
    3. '   ' → logprob: -13.75000286102295
    4. '           ' → logprob: -16.250001907348633
    5. '       ' → logprob: -16.500001907348633
    6. '               ' → logprob: -17.125001907348633
    7. '  ' → logprob: -18.125001907348633
    8. ' ' → logprob: -19.000001907348633
    9. '                   ' → logprob: -19.125001907348633
    10. '    ' → logprob: -20.000001907348633

Token 89: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026300468016415834
    2. '.' → logprob: -8.250263214111328
    3. '.app' → logprob: -13.875263214111328
    4. ' .' → logprob: -14.875263214111328
    5. 'append' → logprob: -15.625263214111328
    6. '.ap' → logprob: -16.125263214111328
    7. '.Append' → logprob: -16.500263214111328
    8. '.extend' → logprob: -16.500263214111328
    9. '.push' → logprob: -17.250263214111328
    10. '   ' → logprob: -18.750263214111328

Token 90: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.038045283406972885
    2. '(' → logprob: -3.2880451679229736
    3. '(
' → logprob: -12.663044929504395
    4. '(

' → logprob: -15.288044929504395
    5. ')' → logprob: -16.03804588317871
    6. '((' → logprob: -16.41304588317871
    7. '()' → logprob: -16.78804588317871
    8. ' (' → logprob: -17.16304588317871
    9. 'v' → logprob: -17.53804588317871
    10. ')(' → logprob: -17.66304588317871

Token 91: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5213274309644476e-05
    2. ')
' → logprob: -11.125015258789062
    3. '<|end|>' → logprob: -15.625015258789062
    4. ' )' → logprob: -16.000015258789062
    5. ')return' → logprob: -16.500015258789062
    6. ')

' → logprob: -17.375015258789062
    7. '),' → logprob: -17.875015258789062
    8. ')}}' → logprob: -17.875015258789062
    9. '```' → logprob: -17.875015258789062
    10. '))' → logprob: -18.250015258789062

Token 92: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.018162699416279793
    2. '__' → logprob: -4.018162727355957
    3. '_' → logprob: -11.893162727355957
    4. ' ' → logprob: -12.893162727355957
    5. ' ' → logprob: -12.893162727355957
    6. '___' → logprob: -15.268162727355957
    7. ' _' → logprob: -15.393162727355957
    8. '_name' → logprob: -16.39316177368164
    9. '/__' → logprob: -16.64316177368164
    10. 'name' → logprob: -16.76816177368164

Token 94: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009106291108764708
    2. ' __' → logprob: -8.000910758972168
    3. ' ==' → logprob: -8.125910758972168
    4. '_' → logprob: -8.625910758972168
    5. '==' → logprob: -9.875910758972168
    6. '___' → logprob: -10.500910758972168
    7. '__.__' → logprob: -11.875910758972168
    8. '.__' → logprob: -12.875910758972168
    9. '__.' → logprob: -13.000910758972168
    10. '____' → logprob: -13.500910758972168

Token 95: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001358400477329269
    2. '==' → logprob: -9.25013542175293
    3. '__.__' → logprob: -11.25013542175293
    4. '___' → logprob: -11.62513542175293
    5. '=="' → logprob: -12.12513542175293
    6. ' ==' → logprob: -12.75013542175293
    7. '____' → logprob: -12.75013542175293
    8. '_' → logprob: -14.00013542175293
    9. '__.' → logprob: -14.12513542175293
    10. '__["' → logprob: -14.25013542175293

Token 96: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.022020487114787102
    2. ' ==' → logprob: -4.27202033996582
    3. '==' → logprob: -4.89702033996582
    4. '_' → logprob: -8.77202033996582
    5. '=="' → logprob: -9.52202033996582
    6. '___' → logprob: -10.52202033996582
    7. '__":
' → logprob: -10.64702033996582
    8. '____' → logprob: -11.52202033996582
    9. '__.__' → logprob: -11.52202033996582
    10. '__["' → logprob: -11.64702033996582

Token 97: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023319896310567856
    2. ''' → logprob: -3.773319959640503
    3. ' "__' → logprob: -9.648320198059082
    4. '"user' → logprob: -12.648320198059082
    5. '__' → logprob: -12.773320198059082
    6. '"name' → logprob: -13.773320198059082
    7. ' '__' → logprob: -14.148320198059082
    8. '"class' → logprob: -15.398320198059082
    9. '"context' → logprob: -15.523320198059082
    10. ' "' → logprob: -15.648320198059082

Token 98: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07515949010848999
    2. '__' → logprob: -2.7001595497131348
    3. 'name' → logprob: -5.325159549713135
    4. '_main' → logprob: -8.825159072875977
    5. 'py' → logprob: -9.200159072875977
    6. '```' → logprob: -10.325159072875977
    7. '__':
' → logprob: -11.075159072875977
    8. '__
' → logprob: -11.575159072875977
    9. '7' → logprob: -11.950159072875977
    10. '2' → logprob: -12.450159072875977

Token 99: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21863067150115967
    2. '__:' → logprob: -1.7186306715011597
    3. '__':
' → logprob: -4.093630790710449
    4. '_' → logprob: -8.71863079071045
    5. ':' → logprob: -9.21863079071045
    6. '__":
' → logprob: -9.84363079071045
    7. '':' → logprob: -9.96863079071045
    8. '():' → logprob: -11.34363079071045
    9. '__('' → logprob: -12.34363079071045
    10. '__((' → logprob: -12.96863079071045

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024775110185146332
    2. '    
' → logprob: -4.52477502822876
    3. '<|end|>' → logprob: -4.77477502822876
    4. '```' → logprob: -6.39977502822876
    5. '[' → logprob: -7.14977502822876
    6. ' 
' → logprob: -7.64977502822876
    7. '
' → logprob: -8.149775505065918
    8. '<|end|>' → logprob: -8.274775505065918
    9. '(' → logprob: -8.399775505065918
    10. ':' → logprob: -8.399775505065918

Token 101: ' #' (ID: 1069)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.9939690828323364
    2. 'n' → logprob: -0.9939690828323364
    3. ' G' → logprob: -1.8689690828323364
    4. ' n' → logprob: -2.368968963623047
    5. '   ' → logprob: -5.243968963623047
    6. 'import' → logprob: -5.868968963623047
    7. ' import' → logprob: -6.118968963623047
    8. '#' (adapté à ' #') → logprob: -7.243968963623047
    9. ' #' → logprob: -8.618968963623047
    10. 'N' → logprob: -9.118968963623047

Token 102: ' ?' (ID: 1423)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.7668123841285706
    2. ' G' → logprob: -1.0168123245239258
    3. ' graph' → logprob: -2.516812324523926
    4. ' n' → logprob: -3.766812324523926
    5. 'graph' → logprob: -3.766812324523926
    6. '#' → logprob: -4.516812324523926
    7. 'n' → logprob: -4.641812324523926
    8. ' input' → logprob: -5.141812324523926
    9. ' #' → logprob: -5.141812324523926
    10. ' import' → logprob: -5.641812324523926

Token 103: '????????' (ID: 85218)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3882615268230438
    2. 'n' → logprob: -1.7632615566253662
    3. '   ' → logprob: -2.138261556625366
    4. ' G' → logprob: -4.138261318206787
    5. '#' → logprob: -5.013261318206787
    6. ' n' → logprob: -5.513261318206787
    7. 'import' → logprob: -6.013261318206787
    8. '```' → logprob: -7.388261318206787
    9. 'graph' → logprob: -7.513261318206787
    10. ' #' → logprob: -7.638261318206787

Token 104: '????' (ID: 25883)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4668229818344116
    2. 'G' → logprob: -1.5918229818344116
    3. 'n' → logprob: -2.466823101043701
    4. ' G' → logprob: -3.466823101043701
    5. '#' → logprob: -3.591823101043701
    6. ' n' → logprob: -4.966823101043701
    7. ' #' → logprob: -5.591823101043701
    8. '<|end|>' → logprob: -5.591823101043701
    9. 'import' → logprob: -5.716823101043701
    10. '```' → logprob: -6.091823101043701

Token 105: '?\' (ID: 70237)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.7155542373657227
    2. '   ' → logprob: -1.3405542373657227
    3. 'n' → logprob: -1.7155542373657227
    4. ' G' → logprob: -3.0905542373657227
    5. ' n' → logprob: -4.840554237365723
    6. '#' → logprob: -4.965554237365723
    7. 'import' → logprob: -5.715554237365723
    8. ' #' → logprob: -6.590554237365723
    9. '```' → logprob: -6.715554237365723
    10. 'graph' → logprob: -7.965554237365723

Token 106: '???
' (ID: 136325)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.934512734413147
    2. '   ' → logprob: -1.559512734413147
    3. 'n' → logprob: -1.684512734413147
    4. ' G' → logprob: -2.1845126152038574
    5. '#' → logprob: -3.8095126152038574
    6. 'G' → logprob: -3.9345126152038574
    7. ' #' → logprob: -4.059512615203857
    8. '    ' → logprob: -4.184512615203857
    9. 'import' → logprob: -5.309512615203857
    10. ' graph' → logprob: -5.434512615203857

Token 107: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5602769255638123
    2. 'G' → logprob: -2.060276985168457
    3. '   ' → logprob: -2.185276985168457
    4. ' n' → logprob: -2.310276985168457
    5. ' G' → logprob: -2.685276985168457
    6. '#' → logprob: -5.185276985168457
    7. 'import' → logprob: -5.310276985168457
    8. 'N' → logprob: -5.810276985168457
    9. ' #' → logprob: -6.060276985168457
    10. '    ' → logprob: -7.185276985168457

Token 108: ' num' (ID: 2269)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.3666854202747345
    2. 'n' → logprob: -1.241685390472412
    3. '#' → logprob: -4.616685390472412
    4. '   ' → logprob: -5.741685390472412
    5. ' G' → logprob: -6.616685390472412
    6. 'import' → logprob: -6.616685390472412
    7. 'N' → logprob: -6.866685390472412
    8. ' n' → logprob: -7.116685390472412
    9. 'graph' → logprob: -9.11668586730957
    10. 'pass' → logprob: -9.61668586730957

Token 109: '_of' (ID: 8023)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.37665727734565735
    2. '_' → logprob: -1.751657247543335
    3. '_vertices' → logprob: -2.001657247543335
    4. ' =' → logprob: -5.751657485961914
    5. '_n' → logprob: -6.876657485961914
    6. '=' → logprob: -7.876657485961914
    7. 's' → logprob: -8.001657485961914
    8. '=_' → logprob: -9.626657485961914
    9. '_=' → logprob: -10.001657485961914
    10. '_of' → logprob: -10.376657485961914

Token 110: '_users' (ID: 38445)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.09618856757879257
    2. '_vertices' → logprob: -2.471188545227051
    3. 'nodes' → logprob: -5.596188545227051
    4. 'vertices' → logprob: -6.096188545227051
    5. '_colors' → logprob: -8.09618854522705
    6. ' nodes' → logprob: -8.22118854522705
    7. '_' → logprob: -8.34618854522705
    8. ' vertices' → logprob: -8.97118854522705
    9. '_vertex' → logprob: -9.47118854522705
    10. 's' → logprob: -10.09618854522705

Token 111: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.022241802886128426
    2. '=' → logprob: -3.8972418308258057
    3. ',' → logprob: -6.397241592407227
    4. ' ,' → logprob: -11.022241592407227
    5. '=int' → logprob: -11.397241592407227
    6. ')' → logprob: -14.022241592407227
    7. '=input' → logprob: -14.397241592407227
    8. ' ' → logprob: -14.522241592407227
    9. ',num' → logprob: -14.772241592407227
    10. 's' → logprob: -14.897241592407227

Token 112: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06254320591688156
    2. ' num' → logprob: -2.8125431537628174
    3. ' ' → logprob: -9.562542915344238
    4. 'input' → logprob: -9.687542915344238
    5. 'number' → logprob: -10.125042915344238
    6. 'max' → logprob: -10.250042915344238
    7. ' =' → logprob: -10.500042915344238
    8. '_' → logprob: -10.750042915344238
    9. ' friendships' → logprob: -10.937542915344238
    10. '=' → logprob: -11.062542915344238

Token 113: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.4014957845211029
    2. '_' → logprob: -1.1514958143234253
    3. '_users' → logprob: -4.651495933532715
    4. '_=' → logprob: -6.526495933532715
    5. '=' → logprob: -6.776495933532715
    6. ' =' → logprob: -7.776495933532715
    7. '_people' → logprob: -8.776495933532715
    8. '_s' → logprob: -9.026495933532715
    9. '_items' → logprob: -9.026495933532715
    10. '=_' → logprob: -9.401495933532715

Token 114: '_links' (ID: 62775)
  Prédit: 'friends'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'friends' → logprob: -0.9985668659210205
    2. 'edges' → logprob: -1.8735668659210205
    3. 'friend' → logprob: -2.2485668659210205
    4. 'connections' → logprob: -2.6235668659210205
    5. 'relations' → logprob: -2.6235668659210205
    6. 'items' → logprob: -2.9985668659210205
    7. 'f' → logprob: -3.2485668659210205
    8. 'posts' → logprob: -3.9985668659210205
    9. 'requests' → logprob: -4.123566627502441
    10. '_edges' → logprob: -5.123566627502441

Token 115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4750353693962097
    2. ' =' → logprob: -0.9750353693962097
    3. ',' → logprob: -6.975035190582275
    4. '=input' → logprob: -11.225035667419434
    5. ')' → logprob: -12.600035667419434
    6. '=int' → logprob: -12.850035667419434
    7. ' ,' → logprob: -13.975035667419434
    8. '=

' → logprob: -14.475035667419434
    9. ' ' → logprob: -14.725035667419434
    10. '[' → logprob: -15.100035667419434

Token 116: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0031881670001894236
    2. 'map' → logprob: -5.753188133239746
    3. ' list' → logprob: -12.378188133239746
    4. ' ' → logprob: -12.753188133239746
    5. ' input' → logprob: -13.878188133239746
    6. '	map' → logprob: -13.878188133239746
    7. ' [' → logprob: -14.378188133239746
    8. '[' → logprob: -15.378188133239746
    9. '   ' → logprob: -15.753188133239746
    10. 'input' → logprob: -16.253189086914062

Token 117: 'int' (ID: 491)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.05681544914841652
    2. 'int' → logprob: -3.0568153858184814
    3. ' map' → logprob: -4.8068156242370605
    4. '*' → logprob: -11.056815147399902
    5. ' int' → logprob: -12.806815147399902
    6. ']' → logprob: -14.681815147399902
    7. 'list' → logprob: -14.931815147399902
    8. '	map' → logprob: -15.431815147399902
    9. ']int' → logprob: -15.556815147399902
    10. '[int' → logprob: -15.681815147399902

Token 118: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.1163206696510315
    2. '(input' → logprob: -2.6163206100463867
    3. '()]' → logprob: -4.366320610046387
    4. '(i' → logprob: -4.491320610046387
    5. '(' → logprob: -4.866320610046387
    6. ']' → logprob: -6.116320610046387
    7. '(s' → logprob: -6.491320610046387
    8. ']()' → logprob: -7.741320610046387
    9. '(_)' → logprob: -8.116320610046387
    10. '](' → logprob: -8.241320610046387

Token 119: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9726428389549255
    2. ')' → logprob: -1.2226428985595703
    3. '(s' → logprob: -1.7226428985595703
    4. '()' → logprob: -2.5976428985595703
    5. '(i' → logprob: -2.8476428985595703
    6. '()]' → logprob: -5.84764289855957
    7. '(' → logprob: -6.34764289855957
    8. 'for' → logprob: -6.47264289855957
    9. '(item' → logprob: -6.72264289855957
    10. '(input' → logprob: -6.72264289855957

Token 120: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6145521402359009
    2. ' for' → logprob: -1.3645521402359009
    3. '(input' → logprob: -2.2395520210266113
    4. '(x' → logprob: -2.8645520210266113
    5. '()' → logprob: -3.6145520210266113
    6. 'input' → logprob: -4.989552021026611
    7. ')' → logprob: -5.739552021026611
    8. '()]' → logprob: -6.864552021026611
    9. ']' → logprob: -6.989552021026611
    10. '(' → logprob: -7.114552021026611

Token 121: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.04859123006463051
    2. 'input' → logprob: -3.048591136932373
    3. '=input' → logprob: -13.298591613769531
    4. '(input' → logprob: -13.673591613769531
    5. ' in' → logprob: -14.548591613769531
    6. '_input' → logprob: -15.673591613769531
    7. '	input' → logprob: -16.17359161376953
    8. ',input' → logprob: -16.54859161376953
    9. 'in' → logprob: -17.79859161376953
    10. ' ' → logprob: -17.92359161376953

Token 122: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8526946902275085
    2. ' in' → logprob: -1.1026947498321533
    3. ' input' → logprob: -1.7276947498321533
    4. '(input' → logprob: -3.2276947498321533
    5. '=input' → logprob: -4.352694511413574
    6. 'in' → logprob: -4.477694511413574
    7. ' ' → logprob: -10.602694511413574
    8. 'import' → logprob: -10.602694511413574
    9. '(' → logprob: -10.727694511413574
    10. ' =' → logprob: -10.977694511413574

Token 123: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804183006286621
    2. ' input' → logprob: -3.288041830062866
    3. '(input' → logprob: -15.413042068481445
    4. '=input' → logprob: -16.538042068481445
    5. ' ' → logprob: -16.788042068481445
    6. '	input' → logprob: -17.413042068481445
    7. '<input' → logprob: -17.788042068481445
    8. '   ' → logprob: -17.913042068481445
    9. 'import' → logprob: -18.038042068481445
    10. '```' → logprob: -18.288042068481445

Token 124: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01192708220332861
    2. '()]' → logprob: -5.011927127838135
    3. '()' → logprob: -5.261927127838135
    4. '()].' → logprob: -11.886926651000977
    5. '(' → logprob: -12.636926651000977
    6. '())' → logprob: -14.261926651000977
    7. '('' → logprob: -15.136926651000977
    8. '()][' → logprob: -15.386926651000977
    9. '()>' → logprob: -15.511926651000977
    10. ' ().' → logprob: -15.636926651000977

Token 125: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018185647204518318
    2. 'strip' → logprob: -4.018185615539551
    3. 'rstrip' → logprob: -10.26818561553955
    4. '(split' → logprob: -14.39318561553955
    5. ' split' → logprob: -14.89318561553955
    6. ' strip' → logprob: -17.518186569213867
    7. 'spl' → logprob: -17.643186569213867
    8. '().' → logprob: -18.143186569213867
    9. 'read' → logprob: -18.268186569213867
    10. '_split' → logprob: -18.768186569213867

Token 126: '('' (ID: 706)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.003234394360333681
    2. '()' → logprob: -5.753234386444092
    3. '('' → logprob: -10.75323486328125
    4. '(' → logprob: -10.87823486328125
    5. '())' → logprob: -11.12823486328125
    6. ']' → logprob: -14.12823486328125
    7. '()]
' → logprob: -15.00323486328125
    8. '()],' → logprob: -15.25323486328125
    9. '()][' → logprob: -16.25323486328125
    10. '("' → logprob: -16.62823486328125

Token 127: ' '' (ID: 461)
  Prédit: '')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.13410694897174835
    2. ')]' → logprob: -2.2591068744659424
    3. '()' → logprob: -4.6341071128845215
    4. ')' → logprob: -5.3841071128845215
    5. ' '' → logprob: -5.5091071128845215
    6. '')' → logprob: -6.7591071128845215
    7. '('' → logprob: -7.3841071128845215
    8. ' ')' → logprob: -8.259106636047363
    9. ']' → logprob: -8.509106636047363
    10. '()]' → logprob: -8.759106636047363

Token 128: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00103995599783957
    2. ')' → logprob: -6.876039981842041
    3. ']' → logprob: -13.001039505004883
    4. '')]' → logprob: -13.001039505004883
    5. ')]
' → logprob: -14.251039505004883
    6. ' )' → logprob: -14.751039505004883
    7. '))' → logprob: -15.251039505004883
    8. '())' → logprob: -15.251039505004883
    9. ')])' → logprob: -15.501039505004883
    10. ')],' → logprob: -15.501039505004883

Token 129: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2753736078739166
    2. '
' → logprob: -1.5253735780715942
    3. '<|end|>' → logprob: -4.525373458862305
    4. '   ' → logprob: -6.025373458862305
    5. 'users' → logprob: -6.150373458862305
    6. 'G' → logprob: -6.400373458862305
    7. '#' → logprob: -6.650373458862305
    8. 'user' → logprob: -7.025373458862305
    9. '```' → logprob: -7.275373458862305
    10. 'num' → logprob: -7.275373458862305

Token 130: ' links' (ID: 9362)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.01591881550848484
    2. 'C' → logprob: -4.265918731689453
    3. 'graph' → logprob: -7.265918731689453
    4. '#' → logprob: -7.765918731689453
    5. 'users' → logprob: -8.765918731689453
    6. 'user' → logprob: -9.015918731689453
    7. '   ' → logprob: -9.640918731689453
    8. 'color' → logprob: -9.640918731689453
    9. 'colors' → logprob: -9.640918731689453
    10. '
' → logprob: -10.515918731689453

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234361886978149
    2. '=' → logprob: -0.8984361886978149
    3. '=[]' → logprob: -8.148436546325684
    4. '[]' → logprob: -12.523436546325684
    5. '_' → logprob: -12.523436546325684
    6. '.' → logprob: -12.773436546325684
    7. ')' → logprob: -12.773436546325684
    8. '＝' → logprob: -12.898436546325684
    9. '.append' → logprob: -13.898436546325684
    10. '   ' → logprob: -13.898436546325684

Token 132: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.07897945493459702
    2. '[' → logprob: -2.5789794921875
    3. '[][]' → logprob: -10.5789794921875
    4. '[int' → logprob: -10.7039794921875
    5. '[list' → logprob: -11.4539794921875
    6. '[]
' → logprob: -11.9539794921875
    7. '[][' → logprob: -12.4539794921875
    8. '[input' → logprob: -12.7039794921875
    9. '[[' → logprob: -12.7039794921875
    10. ' []' → logprob: -13.2039794921875

Token 133: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00769428675994277
    2. ' for' → logprob: -4.882694244384766
    3. '<|end|>' → logprob: -10.007694244384766
    4. '
' → logprob: -10.257694244384766
    5. '   ' → logprob: -12.007694244384766
    6. '	for' → logprob: -14.507694244384766
    7. ')' → logprob: -14.632694244384766
    8. '    
' → logprob: -15.757694244384766
    9. '<|end|>' → logprob: -16.007694244384766
    10. 'edges' → logprob: -16.382694244384766

Token 134: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009117019944824278
    2. ' for' → logprob: -7.000911712646484
    3. '[' → logprob: -16.375911712646484
    4. '	for' → logprob: -16.875911712646484
    5. '   ' → logprob: -17.125911712646484
    6. 'G' → logprob: -18.125911712646484
    7. 'graph' → logprob: -18.875911712646484
    8. '
' → logprob: -19.000911712646484
    9. '<|end|>' → logprob: -19.000911712646484
    10. '[]' → logprob: -19.375911712646484

Token 135: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00026205103495158255
    2. ' _' → logprob: -8.250262260437012
    3. '_i' → logprob: -14.250262260437012
    4. ' i' → logprob: -17.000261306762695
    5. 'i' → logprob: -17.250261306762695
    6. ' ' → logprob: -18.375261306762695
    7. ' ' → logprob: -19.000261306762695
    8. '_=' → logprob: -19.375261306762695
    9. '   ' → logprob: -19.875261306762695
    10. '__' → logprob: -20.375261306762695

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026307035237550735
    2. 'in' → logprob: -3.9013071060180664
    3. 'range' → logprob: -5.276307106018066
    4. ' range' → logprob: -7.526307106018066
    5. ' ' → logprob: -9.276307106018066
    6. '  ' → logprob: -12.651307106018066
    7. '_' → logprob: -15.026307106018066
    8. ' _' → logprob: -15.026307106018066
    9. 'i' → logprob: -15.151307106018066
    10. '	range' → logprob: -15.526307106018066

Token 137: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.1637164789135568e-05
    2. ' range' → logprob: -11.375011444091797
    3. '(range' → logprob: -16.375011444091797
    4. 'input' → logprob: -18.250011444091797
    5. '	range' → logprob: -18.750011444091797
    6. 'rang' → logprob: -18.875011444091797
    7. 'ange' → logprob: -19.375011444091797
    8. 'num' → logprob: -20.125011444091797
    9. '0' → logprob: -21.500011444091797
    10. '_range' → logprob: -21.500011444091797

Token 138: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.005682875867933035
    2. 'num' → logprob: -5.505682945251465
    3. ' num' → logprob: -7.130682945251465
    4. '(' → logprob: -7.255682945251465
    5. ' (' → logprob: -9.255682945251465
    6. '	num' → logprob: -14.755682945251465
    7. '(int' → logprob: -15.005682945251465
    8. ',num' → logprob: -15.505682945251465
    9. '<num' → logprob: -16.00568199157715
    10. '(
' → logprob: -16.75568199157715

Token 139: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.981667537620524e-06
    2. '_links' → logprob: -14.500001907348633
    3. '_for' → logprob: -14.750001907348633
    4. '_users' → logprob: -14.875001907348633
    5. 'of' → logprob: -14.875001907348633
    6. '_lines' → logprob: -15.625001907348633
    7. ' of' → logprob: -16.875001907348633
    8. '_' → logprob: -17.500001907348633
    9. '__' → logprob: -17.500001907348633
    10. '_OF' → logprob: -17.750001907348633

Token 140: '_links' (ID: 62775)
  Prédit: '_links'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_links' → logprob: -0.0714968591928482
    2. 'links' → logprob: -2.6964969635009766
    3. '_users' → logprob: -6.821496963500977
    4. 'users' → logprob: -7.946496963500977
    5. 'num' → logprob: -10.071496963500977
    6. 'Links' → logprob: -10.946496963500977
    7. 'range' → logprob: -11.446496963500977
    8. ' links' → logprob: -11.446496963500977
    9. 'user' → logprob: -11.696496963500977
    10. 'inks' → logprob: -12.196496963500977

Token 141: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006481115240603685
    2. '):
' → logprob: -5.256481170654297
    3. ':' → logprob: -6.881481170654297
    4. ')' → logprob: -8.631481170654297
    5. ' ):' → logprob: -10.756481170654297
    6. '():' → logprob: -11.506481170654297
    7. '):
' → logprob: -13.256481170654297
    8. ']:' → logprob: -13.381481170654297
    9. '():
' → logprob: -13.506481170654297
    10. ':
' → logprob: -13.506481170654297

Token 142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010325654409825802
    2. '       ' → logprob: -5.1353254318237305
    3. '<|end|>' → logprob: -6.6353254318237305
    4. ' links' → logprob: -6.7603254318237305
    5. 'links' → logprob: -7.1353254318237305
    6. '    
' → logprob: -8.26032543182373
    7. ',' → logprob: -8.51032543182373
    8. '  ' → logprob: -9.51032543182373
    9. '_links' → logprob: -9.51032543182373
    10. '```' → logprob: -9.63532543182373

Token 143: ' links' (ID: 9362)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6133519411087036
    2. 'a' → logprob: -0.8633519411087036
    3. ' u' → logprob: -3.613351821899414
    4. ' a' → logprob: -4.863351821899414
    5. 'x' → logprob: -7.113351821899414
    6. '   ' → logprob: -8.113351821899414
    7. 'links' (adapté à ' links') → logprob: -8.238351821899414
    8. 'from' → logprob: -8.738351821899414
    9. ' links' → logprob: -8.863351821899414
    10. 'l' → logprob: -9.113351821899414

Token 144: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00630522333085537
    2. '.' → logprob: -5.13130521774292
    3. '=' → logprob: -8.256305694580078
    4. '.=' → logprob: -10.131305694580078
    5. '.extend' → logprob: -10.381305694580078
    6. ' .' → logprob: -10.881305694580078
    7. ' =' → logprob: -11.506305694580078
    8. '+=' → logprob: -11.881305694580078
    9. ' +=' → logprob: -12.881305694580078
    10. 'append' → logprob: -13.381305694580078

Token 145: '(list' (ID: 13116)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0022199610248208046
    2. '(tuple' → logprob: -6.252220153808594
    3. '(list' → logprob: -8.252220153808594
    4. '(' → logprob: -10.627220153808594
    5. '[' → logprob: -12.877220153808594
    6. '(int' → logprob: -12.877220153808594
    7. '[int' → logprob: -15.002220153808594
    8. 'tuple' → logprob: -15.002220153808594
    9. '[list' → logprob: -15.377220153808594
    10. ' ([' → logprob: -16.002220153808594

Token 146: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0009196776081807911
    2. '(int' → logprob: -7.000919818878174
    3. '(' → logprob: -12.125919342041016
    4. 'map' → logprob: -13.125919342041016
    5. '([' → logprob: -15.000919342041016
    6. '[int' → logprob: -15.375919342041016
    7. '(input' → logprob: -15.750919342041016
    8. ' map' → logprob: -16.750919342041016
    9. '	map' → logprob: -17.875919342041016
    10. '.map' → logprob: -18.000919342041016

Token 147: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.008620604872703552
    2. 'int' → logprob: -4.758620738983154
    3. '[int' → logprob: -13.633620262145996
    4. '(lambda' → logprob: -13.758620262145996
    5. '(' → logprob: -14.008620262145996
    6. '```' → logprob: -14.008620262145996
    7. '<int' → logprob: -14.508620262145996
    8. ' int' → logprob: -14.758620262145996
    9. '   ' → logprob: -14.758620262145996
    10. '=int' → logprob: -14.883620262145996

Token 148: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.049729879945516586
    2. ',' → logprob: -3.049729824066162
    3. '(input' → logprob: -7.174729824066162
    4. 'input' → logprob: -7.924729824066162
    5. ' ,' → logprob: -11.67473030090332
    6. ' input' → logprob: -13.29973030090332
    7. '(' → logprob: -13.42473030090332
    8. '(),' → logprob: -13.92473030090332
    9. '	input' → logprob: -15.29973030090332
    10. ',int' → logprob: -15.42473030090332

Token 149: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00671584764495492
    2. ' input' → logprob: -5.006715774536133
    3. '(input' → logprob: -15.381715774536133
    4. ',input' → logprob: -16.381715774536133
    5. 'lambda' → logprob: -16.506715774536133
    6. '	input' → logprob: -16.881715774536133
    7. '   ' → logprob: -17.881715774536133
    8. ' ' → logprob: -17.881715774536133
    9. '=input' → logprob: -18.131715774536133
    10. '_input' → logprob: -18.631715774536133

Token 150: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '.' → logprob: -14.500001907348633
    3. '()' → logprob: -14.875001907348633
    4. ' ().' → logprob: -15.250001907348633
    5. ' .' → logprob: -15.500001907348633
    6. '.split' → logprob: -17.000001907348633
    7. '.readline' → logprob: -17.625001907348633
    8. '(' → logprob: -17.875001907348633
    9. '('').' → logprob: -18.125001907348633
    10. ')' → logprob: -18.500001907348633

Token 151: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007108822464942932
    2. 'strip' → logprob: -7.250710964202881
    3. 'rstrip' → logprob: -14.125710487365723
    4. ' split' → logprob: -15.625710487365723
    5. 'spl' → logprob: -17.37571144104004
    6. '(split' → logprob: -17.75071144104004
    7. '.split' → logprob: -19.62571144104004
    8. ')' → logprob: -20.37571144104004
    9. ' strip' → logprob: -20.50071144104004
    10. 'read' → logprob: -20.62571144104004

Token 152: '('' (ID: 706)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.616477370262146
    2. '('' → logprob: -0.991477370262146
    3. '())))' → logprob: -2.6164774894714355
    4. '()' → logprob: -4.2414774894714355
    5. '(' → logprob: -7.2414774894714355
    6. '())' → logprob: -7.6164774894714355
    7. '())))
' → logprob: -8.991477012634277
    8. ')))' → logprob: -9.241477012634277
    9. '()))
' → logprob: -9.366477012634277
    10. '()));' → logprob: -9.866477012634277

Token 153: ' '' (ID: 461)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.8233597278594971
    2. ')))' → logprob: -0.9483597278594971
    3. '')))' → logprob: -2.573359727859497
    4. '()' → logprob: -2.823359727859497
    5. ''' → logprob: -4.448359489440918
    6. '('' → logprob: -4.698359489440918
    7. '(' → logprob: -5.323359489440918
    8. '())))
' → logprob: -5.698359489440918
    9. '()))' → logprob: -5.823359489440918
    10. ' ' → logprob: -5.823359489440918

Token 154: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.001864976016804576
    2. '))))' → logprob: -6.876864910125732
    3. ')' → logprob: -7.251864910125732
    4. '))' → logprob: -9.25186538696289
    5. '')))' → logprob: -11.12686538696289
    6. ')))
' → logprob: -11.75186538696289
    7. ')));' → logprob: -13.50186538696289
    8. '())))' → logprob: -13.62686538696289
    9. ' ' → logprob: -14.50186538696289
    10. '   ' → logprob: -15.12686538696289

Token 155: '   ' (ID: 271)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.00791795551776886
    2. 'graph' → logprob: -5.632917881011963
    3. '   ' → logprob: -5.757917881011963
    4. ')' → logprob: -7.632917881011963
    5. '#' → logprob: -8.132918357849121
    6. '
' → logprob: -8.882918357849121
    7. '    
' → logprob: -9.757918357849121
    8. 'C' → logprob: -10.257918357849121
    9. ')
' → logprob: -10.882918357849121
    10. 'adj' → logprob: -10.882918357849121

Token 156: ' num' (ID: 2269)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.005488333757966757
    2. 'graph' → logprob: -5.505488395690918
    3. '#' → logprob: -7.130488395690918
    4. '   ' → logprob: -8.755488395690918
    5. 'adj' → logprob: -9.130488395690918
    6. 'colors' → logprob: -9.505488395690918
    7. 'C' → logprob: -9.880488395690918
    8. 'color' → logprob: -10.380488395690918
    9. 'nodes' → logprob: -10.630488395690918
    10. 'neighbors' → logprob: -10.755488395690918

Token 157: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0012386832386255264
    2. '_' → logprob: -7.001238822937012
    3. '_users' → logprob: -8.501238822937012
    4. 'of' → logprob: -10.251238822937012
    5. '_colors' → logprob: -10.501238822937012
    6. '_o' → logprob: -11.251238822937012
    7. 's' → logprob: -11.376238822937012
    8. '_nodes' → logprob: -11.626238822937012
    9. '_s' → logprob: -12.751238822937012
    10. ' of' → logprob: -13.001238822937012

Token 158: '_queries' (ID: 172558)
  Prédit: 'users'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'users' → logprob: -0.15371009707450867
    2. 'colors' → logprob: -2.653710126876831
    3. '_users' → logprob: -3.153710126876831
    4. '_colors' → logprob: -5.028709888458252
    5. 'groups' → logprob: -5.278709888458252
    6. 'components' → logprob: -5.278709888458252
    7. 'nodes' → logprob: -5.903709888458252
    8. 'color' → logprob: -6.153709888458252
    9. 'clusters' → logprob: -6.278709888458252
    10. 'commun' → logprob: -7.028709888458252

Token 159: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7873347997665405
    2. ' =' → logprob: -0.7873347997665405
    3. '=' → logprob: -2.41233491897583
    4. ' ,' → logprob: -9.412334442138672
    5. '=int' → logprob: -9.412334442138672
    6. ')' → logprob: -9.662334442138672
    7. '   ' → logprob: -11.662334442138672
    8. ' ' → logprob: -11.787334442138672
    9. '=input' → logprob: -11.912334442138672
    10. ',num' → logprob: -12.162334442138672

Token 160: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759401917457581
    2. ' int' → logprob: -0.8259401917457581
    3. '=int' → logprob: -14.950940132141113
    4. '[int' → logprob: -15.575940132141113
    5. '(int' → logprob: -16.20094108581543
    6. ' ' → logprob: -16.70094108581543
    7. '<int' → logprob: -16.70094108581543
    8. '   ' → logprob: -17.70094108581543
    9. '	int' → logprob: -17.82594108581543
    10. ':int' → logprob: -19.20094108581543

Token 161: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -9.13388703338569e-06
    2. 'input' → logprob: -11.750009536743164
    3. '(' → logprob: -13.625009536743164
    4. '=input' → logprob: -19.250009536743164
    5. ' input' → logprob: -19.875009536743164
    6. ' (' → logprob: -20.250009536743164
    7. '	input' → logprob: -21.250009536743164
    8. ',input' → logprob: -21.250009536743164
    9. '<input' → logprob: -22.125009536743164
    10. '/input' → logprob: -23.000009536743164

Token 162: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.31328994035720825
    2. '()' → logprob: -1.3132898807525635
    3. ')' → logprob: -11.313289642333984
    4. '()
' → logprob: -12.563289642333984
    5. '(' → logprob: -12.688289642333984
    6. '().' → logprob: -12.813289642333984
    7. ' ())' → logprob: -13.063289642333984
    8. '();)' → logprob: -13.563289642333984
    9. '())
' → logprob: -13.688289642333984
    10. '()>' → logprob: -14.313289642333984

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33131805062294006
    2. 'graph' → logprob: -1.7063180208206177
    3. 'G' → logprob: -2.5813181400299072
    4. '    
' → logprob: -5.456317901611328
    5. ' graph' → logprob: -5.456317901611328
    6. '
' → logprob: -5.581317901611328
    7. 'colors' → logprob: -6.081317901611328
    8. 'user' → logprob: -7.081317901611328
    9. 'graphs' → logprob: -7.081317901611328
    10. 'answers' → logprob: -7.331317901611328

Token 164: ' queries' (ID: 32122)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.1847776621580124
    2. 'graph' → logprob: -2.4347777366638184
    3. 'queries' (adapté à ' queries') → logprob: -3.4347777366638184
    4. 'for' → logprob: -4.059777736663818
    5. 'colors' → logprob: -4.684777736663818
    6. 'answers' → logprob: -5.309777736663818
    7. '#' → logprob: -5.684777736663818
    8. 'graphs' → logprob: -6.184777736663818
    9. 'user' → logprob: -6.309777736663818
    10. 'query' → logprob: -6.309777736663818

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14275090396404266
    2. '=' → logprob: -2.0177509784698486
    3. '=[]' → logprob: -9.64275074005127
    4. ' ' → logprob: -12.64275074005127
    5. ',' → logprob: -13.39275074005127
    6. ' =[' → logprob: -13.89275074005127
    7. '   ' → logprob: -14.01775074005127
    8. ')' → logprob: -14.14275074005127
    9. '＝' → logprob: -14.51775074005127
    10. '[:]' → logprob: -14.64275074005127

Token 166: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.21292133629322052
    2. ' []' → logprob: -1.712921380996704
    3. '[' → logprob: -4.962921142578125
    4. ' [' → logprob: -5.462921142578125
    5. '[list' → logprob: -9.462921142578125
    6. '[]
' → logprob: -9.712921142578125
    7. '[int' → logprob: -10.337921142578125
    8. '[input' → logprob: -10.962921142578125
    9. ' []
' → logprob: -12.837921142578125
    10. '[line' → logprob: -13.087921142578125

Token 167: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06773921102285385
    2. '   ' → logprob: -3.067739248275757
    3. ' for' → logprob: -4.067739009857178
    4. '<|end|>' → logprob: -6.317739009857178
    5. '	for' → logprob: -10.692739486694336
    6. '
' → logprob: -11.442739486694336
    7. '<|end|>' → logprob: -12.317739486694336
    8. ' ' → logprob: -12.942739486694336
    9. ')' → logprob: -13.192739486694336
    10. '    
' → logprob: -13.317739486694336

Token 168: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.176947600673884e-05
    2. ' for' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.125021934509277
    4. '	for' → logprob: -19.12502098083496
    5. '[' → logprob: -21.00002098083496
    6. '
' → logprob: -21.12502098083496
    7. '[
' → logprob: -22.75002098083496
    8. '    
' → logprob: -22.87502098083496
    9. '```' → logprob: -23.62502098083496
    10. '[]' → logprob: -23.87502098083496

Token 169: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001170460251159966
    2. ' _' → logprob: -6.751170635223389
    3. ' ' → logprob: -16.376171112060547
    4. '__' → logprob: -17.376171112060547
    5. ' ' → logprob: -17.751171112060547
    6. ' in' → logprob: -17.876171112060547
    7. '   ' → logprob: -18.501171112060547
    8. '	' → logprob: -18.876171112060547
    9. '_range' → logprob: -19.126171112060547
    10. '_i' → logprob: -19.251171112060547

Token 170: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08570469170808792
    2. 'in' → logprob: -2.835704803466797
    3. ' in' → logprob: -3.960704803466797
    4. 'range' → logprob: -5.460704803466797
    5. ' range' → logprob: -9.085704803466797
    6. ' _' → logprob: -10.210704803466797
    7. ' ' → logprob: -12.960704803466797
    8. '_in' → logprob: -13.210704803466797
    9. '_range' → logprob: -13.710704803466797
    10. '...' → logprob: -14.835704803466797

Token 171: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009115827269852161
    2. ' range' → logprob: -7.000911712646484
    3. 'ran' → logprob: -17.250911712646484
    4. 'in' → logprob: -17.375911712646484
    5. ' ' → logprob: -17.500911712646484
    6. '	range' → logprob: -17.625911712646484
    7. '_range' → logprob: -17.625911712646484
    8. 'rang' → logprob: -18.000911712646484
    9. '(range' → logprob: -18.125911712646484
    10. 'r' → logprob: -19.000911712646484

Token 172: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.03498798981308937
    2. 'num' → logprob: -3.4099879264831543
    3. ' num' → logprob: -6.909987926483154
    4. '(' → logprob: -8.409988403320312
    5. ' (' → logprob: -9.159988403320312
    6. 'range' → logprob: -12.409988403320312
    7. '(int' → logprob: -12.659988403320312
    8. '	num' → logprob: -12.784988403320312
    9. ',num' → logprob: -13.159988403320312
    10. '<num' → logprob: -13.659988403320312

Token 173: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.00014168102643452585
    2. '_queries' → logprob: -8.875142097473145
    3. 'of' → logprob: -14.000142097473145
    4. '_' → logprob: -14.625142097473145
    5. '__' → logprob: -15.375142097473145
    6. '_questions' → logprob: -16.250141143798828
    7. '_for' → logprob: -16.875141143798828
    8. 'queries' → logprob: -17.000141143798828
    9. '_OF' → logprob: -17.125141143798828
    10. ' of' → logprob: -17.875141143798828

Token 174: '_queries' (ID: 172558)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0005846070707775652
    2. ' num' → logprob: -7.500584602355957
    3. '(num' → logprob: -10.875584602355957
    4. 'queries' → logprob: -11.625584602355957
    5. 'range' → logprob: -12.875584602355957
    6. 'int' → logprob: -15.000584602355957
    7. '_num' → logprob: -15.375584602355957
    8. '[num' → logprob: -15.875584602355957
    9. ',num' → logprob: -16.000585556030273
    10. '<num' → logprob: -16.250585556030273

Token 175: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1836756318807602
    2. '):' → logprob: -2.183675527572632
    3. '):
' → logprob: -3.558675527572632
    4. ':
' → logprob: -3.808675527572632
    5. '():' → logprob: -5.808675765991211
    6. '():
' → logprob: -6.808675765991211
    7. '   ' → logprob: -8.558675765991211
    8. ')' → logprob: -8.683675765991211
    9. ',' → logprob: -10.933675765991211
    10. 'input' → logprob: -12.683675765991211

Token 176: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018625955563038588
    2. 'queries' → logprob: -7.001862525939941
    3. '       ' → logprob: -7.126862525939941
    4. ' queries' → logprob: -9.626862525939941
    5. '<|end|>' → logprob: -10.126862525939941
    6. '    
' → logprob: -11.126862525939941
    7. '
' → logprob: -12.001862525939941
    8. '    ' → logprob: -12.251862525939941
    9. '_queries' → logprob: -12.251862525939941
    10. '  ' → logprob: -13.001862525939941

Token 177: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' (adapté à ' queries') → logprob: -0.150855153799057
    2. '   ' → logprob: -2.52585506439209
    3. ' queries' → logprob: -3.15085506439209
    4. 'x' → logprob: -5.15085506439209
    5. 'a' → logprob: -5.27585506439209
    6. 'query' → logprob: -6.27585506439209
    7. 'u' → logprob: -6.40085506439209
    8. 'q' → logprob: -6.90085506439209
    9. ' u' → logprob: -7.40085506439209
    10. '       ' → logprob: -8.90085506439209

Token 178: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008058178937062621
    2. '.' → logprob: -7.125805854797363
    3. 'append' → logprob: -14.375805854797363
    4. ' .' → logprob: -15.125805854797363
    5. '.extend' → logprob: -15.625805854797363
    6. '=' → logprob: -16.250804901123047
    7. '().' → logprob: -16.375804901123047
    8. '.app' → logprob: -16.875804901123047
    9. ').' → logprob: -17.000804901123047
    10. '.push' → logprob: -17.750804901123047

Token 179: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.018274372443556786
    2. '(tuple' → logprob: -4.018274307250977
    3. '(' → logprob: -9.643274307250977
    4. '(int' → logprob: -10.393274307250977
    5. 'list' → logprob: -11.018274307250977
    6. '([' → logprob: -11.893274307250977
    7. 'tuple' → logprob: -12.393274307250977
    8. '(map' → logprob: -14.768274307250977
    9. '(input' → logprob: -15.268274307250977
    10. '((' → logprob: -15.768274307250977

Token 180: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.003215738106518984
    2. '(int' → logprob: -5.753215789794922
    3. '(' → logprob: -10.753215789794922
    4. 'map' → logprob: -11.253215789794922
    5. '(input' → logprob: -13.003215789794922
    6. ' map' → logprob: -14.378215789794922
    7. '(tuple' → logprob: -14.628215789794922
    8. '	map' → logprob: -16.253215789794922
    9. ' (' → logprob: -16.378215789794922
    10. '.map' → logprob: -16.878215789794922

Token 181: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.133198283147067e-05
    2. 'int' → logprob: -10.000051498413086
    3. '(' → logprob: -12.125051498413086
    4. '=int' → logprob: -15.875051498413086
    5. '<int' → logprob: -16.250051498413086
    6. '```' → logprob: -16.500051498413086
    7. '[int' → logprob: -16.500051498413086
    8. ',int' → logprob: -17.000051498413086
    9. ' int' → logprob: -17.000051498413086
    10. '(str' → logprob: -17.250051498413086

Token 182: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3708820044994354
    2. '(' → logprob: -1.8708820343017578
    3. ',' → logprob: -2.495882034301758
    4. 'input' → logprob: -3.245882034301758
    5. ',input' → logprob: -3.370882034301758
    6. ' input' → logprob: -10.620882034301758
    7. ' (' → logprob: -10.620882034301758
    8. '```' → logprob: -10.620882034301758
    9. '('' → logprob: -10.870882034301758
    10. ' ,' → logprob: -10.870882034301758

Token 183: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024762547109276056
    2. ' input' → logprob: -6.002476215362549
    3. '(input' → logprob: -14.627476692199707
    4. 'str' → logprob: -15.877476692199707
    5. ',input' → logprob: -18.62747573852539
    6. '=input' → logprob: -18.75247573852539
    7. ' ' → logprob: -18.87747573852539
    8. '	input' → logprob: -20.00247573852539
    9. 'int' → logprob: -20.25247573852539
    10. 'x' → logprob: -20.50247573852539

Token 184: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00023512568441219628
    2. '('' → logprob: -9.375235557556152
    3. '()' → logprob: -9.500235557556152
    4. '(' → logprob: -9.625235557556152
    5. '('.' → logprob: -12.000235557556152
    6. ' ().' → logprob: -14.000235557556152
    7. '('').' → logprob: -14.125235557556152
    8. '   ' → logprob: -14.750235557556152
    9. '.' → logprob: -15.500235557556152
    10. '.split' → logprob: -15.500235557556152

Token 185: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.392202976712724e-06
    2. 'strip' → logprob: -12.000006675720215
    3. ' split' → logprob: -15.750006675720215
    4. '(split' → logprob: -17.1250057220459
    5. 'spl' → logprob: -18.7500057220459
    6. 'rstrip' → logprob: -19.8750057220459
    7. '.split' → logprob: -21.0000057220459
    8. 'read' → logprob: -21.8750057220459
    9. '```' → logprob: -22.2500057220459
    10. ' ' → logprob: -22.5000057220459

Token 186: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.433829159708694e-05
    2. '()))' → logprob: -10.25007438659668
    3. '()' → logprob: -10.62507438659668
    4. '(' → logprob: -11.50007438659668
    5. '())' → logprob: -12.75007438659668
    6. ''' → logprob: -14.75007438659668
    7. '(',' → logprob: -15.12507438659668
    8. '())))' → logprob: -15.25007438659668
    9. '('(' → logprob: -16.12507438659668
    10. '(','' → logprob: -16.25007438659668

Token 187: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0033570127561688423
    2. '')))' → logprob: -6.00335693359375
    3. ')))' → logprob: -7.87835693359375
    4. ''))' → logprob: -8.37835693359375
    5. '('' → logprob: -8.37835693359375
    6. ' '' → logprob: -11.00335693359375
    7. '(' → logprob: -11.62835693359375
    8. '')))
' → logprob: -12.75335693359375
    9. '''' → logprob: -13.25335693359375
    10. '())))' → logprob: -13.25335693359375

Token 188: '))))

' (ID: 161772)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.007650403305888176
    2. '))))' → logprob: -5.257650375366211
    3. ')' → logprob: -6.132650375366211
    4. '))' → logprob: -8.382650375366211
    5. '')))' → logprob: -11.757650375366211
    6. ')));' → logprob: -13.007650375366211
    7. '())))' → logprob: -13.882650375366211
    8. ')))
' → logprob: -14.132650375366211
    9. ' ' → logprob: -14.382650375366211
    10. '()' → logprob: -15.132650375366211

Token 189: '   ' (ID: 271)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.05741994455456734
    2. '   ' → logprob: -3.557420015335083
    3. 'graph' → logprob: -3.807420015335083
    4. '#' → logprob: -5.557419776916504
    5. 'adj' → logprob: -8.057419776916504
    6. '
' → logprob: -8.182419776916504
    7. '    
' → logprob: -9.057419776916504
    8. 'n' → logprob: -9.182419776916504
    9. ' graph' → logprob: -9.182419776916504
    10. '```' → logprob: -9.307419776916504

Token 190: ' #' (ID: 1069)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.006663027685135603
    2. 'graph' → logprob: -5.381662845611572
    3. '#' (adapté à ' #') → logprob: -6.381662845611572
    4. 'adj' → logprob: -8.25666332244873
    5. '   ' → logprob: -10.25666332244873
    6. 'neighbors' → logprob: -11.38166332244873
    7. 'from' → logprob: -12.00666332244873
    8. '```' → logprob: -12.00666332244873
    9. ' G' → logprob: -12.25666332244873
    10. 'Graph' → logprob: -12.75666332244873

Token 191: ' ?' (ID: 1423)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.03301868960261345
    2. 'graph' → logprob: -3.7830185890197754
    3. ' G' → logprob: -5.533018589019775
    4. '#' → logprob: -6.158018589019775
    5. ' graph' → logprob: -6.658018589019775
    6. 'adj' → logprob: -6.908018589019775
    7. '   ' → logprob: -7.158018589019775
    8. 'from' → logprob: -9.283019065856934
    9. 'neighbors' → logprob: -9.658019065856934
    10. 'g' → logprob: -9.658019065856934

Token 192: '????????' (ID: 85218)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.06835140287876129
    2. '#' → logprob: -3.6933515071868896
    3. '   ' → logprob: -4.0683512687683105
    4. 'graph' → logprob: -4.3183512687683105
    5. ' G' → logprob: -6.0683512687683105
    6. ' graph' → logprob: -6.5683512687683105
    7. 'raph' → logprob: -7.0683512687683105
    8. ' =' → logprob: -7.6933512687683105
    9. '=' → logprob: -7.8183512687683105
    10. '
' → logprob: -7.9433512687683105

Token 193: '????' (ID: 25883)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.02644566260278225
    2. '#' → logprob: -4.5264458656311035
    3. 'graph' → logprob: -5.0264458656311035
    4. '   ' → logprob: -5.1514458656311035
    5. ' graph' → logprob: -7.7764458656311035
    6. ' G' → logprob: -7.7764458656311035
    7. ':' → logprob: -7.7764458656311035
    8. '
' → logprob: -8.151445388793945
    9. '=' → logprob: -8.401445388793945
    10. 'adj' → logprob: -8.526445388793945

Token 194: '??
' (ID: 108055)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.07312142103910446
    2. '   ' → logprob: -3.6981213092803955
    3. '#' → logprob: -3.8231213092803955
    4. 'graph' → logprob: -4.198121547698975
    5. 'n' → logprob: -6.073121547698975
    6. 'adj' → logprob: -6.573121547698975
    7. '
' → logprob: -6.948121547698975
    8. ' G' → logprob: -6.948121547698975
    9. ' graph' → logprob: -7.573121547698975
    10. '=' → logprob: -7.823121547698975

Token 195: '   ' (ID: 271)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.015253471210598946
    2. 'graph' → logprob: -4.64025354385376
    3. '   ' → logprob: -5.64025354385376
    4. 'adj' → logprob: -7.01525354385376
    5. '#' → logprob: -7.51525354385376
    6. 'n' → logprob: -8.765253067016602
    7. 'neighbors' → logprob: -9.640253067016602
    8. ' G' → logprob: -10.015253067016602
    9. 'N' → logprob: -10.140253067016602
    10. 'Graph' → logprob: -11.015253067016602

Token 196: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.15409328043460846
    2. 'graph' → logprob: -2.0290932655334473
    3. 'adj' → logprob: -4.904093265533447
    4. '   ' → logprob: -6.279093265533447
    5. 'neighbors' → logprob: -7.279093265533447
    6. '#' → logprob: -7.779093265533447
    7. 'Graph' → logprob: -9.029093742370605
    8. 'friends' → logprob: -9.279093742370605
    9. 'users' → logprob: -9.529093742370605
    10. 'from' → logprob: -9.529093742370605

Token 197: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014162540435791
    2. ' =' → logprob: -1.701416254043579
    3. '=[]' → logprob: -13.701416015625
    4. '＝' → logprob: -14.076416015625
    5. '=[' → logprob: -15.076416015625
    6. ',' → logprob: -15.576416015625
    7. '[' → logprob: -15.701416015625
    8. ')' → logprob: -16.076416015625
    9. ' ' → logprob: -16.326416015625
    10. '=
' → logprob: -16.826416015625

Token 198: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015153385465964675
    2. ' [[]' → logprob: -6.5015153884887695
    3. '{' → logprob: -11.37651538848877
    4. '[[' → logprob: -13.87651538848877
    5. '[]' → logprob: -15.62651538848877
    6. '{}' → logprob: -15.75151538848877
    7. ' [' → logprob: -16.126514434814453
    8. '   ' → logprob: -16.126514434814453
    9. 'collections' → logprob: -17.501514434814453
    10. '[
' → logprob: -18.376514434814453

Token 199: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.474142462015152
    2. 'for' → logprob: -0.9741424322128296
    3. ',' → logprob: -9.849142074584961
    4. 'num' → logprob: -12.099142074584961
    5. '   ' → logprob: -12.974142074584961
    6. ',num' → logprob: -13.599142074584961
    7. ')' → logprob: -13.849142074584961
    8. '	for' → logprob: -14.099142074584961
    9. ']' → logprob: -14.474142074584961
    10. ' ' → logprob: -14.724142074584961

Token 200: ' _' (ID: 1175)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.571137011051178
    2. '_' → logprob: -1.0711369514465332
    3. 'range' → logprob: -2.696136951446533
    4. ' in' → logprob: -3.946136951446533
    5. 'i' → logprob: -5.946136951446533
    6. ' range' → logprob: -5.946136951446533
    7. ' _' → logprob: -8.196137428283691
    8. ' i' → logprob: -8.946137428283691
    9. '(range' → logprob: -10.446137428283691
    10. 'x' → logprob: -11.571137428283691

Token 201: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1646977961063385
    2. ' in' → logprob: -1.9146977663040161
    3. 'range' → logprob: -5.414697647094727
    4. ' range' → logprob: -11.789697647094727
    5. ' ' → logprob: -12.914697647094727
    6. 'i' → logprob: -13.789697647094727
    7. '(range' → logprob: -14.789697647094727
    8. 'ange' → logprob: -15.414697647094727
    9. '  ' → logprob: -15.414697647094727
    10. '(' → logprob: -15.414697647094727

Token 202: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. '(range' → logprob: -15.87692928314209
    4. ' ' → logprob: -16.376928329467773
    5. 'ran' → logprob: -17.126928329467773
    6. '   ' → logprob: -17.126928329467773
    7. 'rang' → logprob: -17.876928329467773
    8. '	range' → logprob: -18.251928329467773
    9. '  ' → logprob: -18.376928329467773
    10. 'r' → logprob: -19.876928329467773

Token 203: '(' (ID: 7)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -5.955703818472102e-05
    2. 'num' → logprob: -10.375059127807617
    3. '(' → logprob: -10.625059127807617
    4. ' (' → logprob: -12.875059127807617
    5. '((' → logprob: -14.625059127807617
    6. ' num' → logprob: -14.875059127807617
    7. '(n' → logprob: -15.000059127807617
    8. '(range' → logprob: -15.875059127807617
    9. ',num' → logprob: -16.125059127807617
    10. '<num' → logprob: -17.125059127807617

Token 204: '100' (ID: 1353)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -8.876193169271573e-05
    2. '(num' → logprob: -9.375088691711426
    3. ' num' → logprob: -12.625088691711426
    4. '(' → logprob: -15.250088691711426
    5. 'range' → logprob: -15.250088691711426
    6. 'n' → logprob: -17.250089645385742
    7. '[num' → logprob: -17.625089645385742
    8. '	num' → logprob: -18.375089645385742
    9. ',num' → logprob: -18.500089645385742
    10. '   ' → logprob: -18.625089645385742

Token 205: '000' (ID: 1302)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7716201543807983
    2. '1' → logprob: -1.6466201543807983
    3. '000' → logprob: -1.7716201543807983
    4. '001' → logprob: -2.521620273590088
    5. '0' → logprob: -2.771620273590088
    6. '+' → logprob: -3.771620273590088
    7. ')' → logprob: -5.896620273590088
    8. '01' → logprob: -6.521620273590088
    9. '005' → logprob: -6.646620273590088
    10. '_' → logprob: -7.021620273590088

Token 206: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006234417669475079
    2. '+' → logprob: -7.8756232261657715
    3. ')' → logprob: -8.37562370300293
    4. ']' → logprob: -11.50062370300293
    5. ' )' → logprob: -14.00062370300293
    6. '1' → logprob: -14.62562370300293
    7. '0' → logprob: -14.75062370300293
    8. ' +' → logprob: -14.87562370300293
    9. ')],' → logprob: -15.50062370300293
    10. ')]
' → logprob: -16.12562370300293

Token 207: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017423896118998528
    2. ' for' → logprob: -4.1424241065979
    3. '<|end|>' → logprob: -6.8924241065979
    4. '
' → logprob: -8.142423629760742
    5. '#' → logprob: -11.017423629760742
    6. 'num' → logprob: -11.142423629760742
    7. ' 
' → logprob: -11.267423629760742
    8. '  
' → logprob: -11.517423629760742
    9. ')' → logprob: -11.767423629760742
    10. '   ' → logprob: -12.392423629760742

Token 208: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009139667963609099
    2. ' for' → logprob: -7.000914096832275
    3. '<|end|>' → logprob: -13.500913619995117
    4. '#' → logprob: -14.750913619995117
    5. '   ' → logprob: -15.125913619995117
    6. '	for' → logprob: -15.375913619995117
    7. ')' → logprob: -16.375913619995117
    8. '```' → logprob: -17.250913619995117
    9. 'num' → logprob: -17.750913619995117
    10. '<|end|>' → logprob: -18.125913619995117

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759422183036804
    2. ' =' → logprob: -0.8259422183036804
    3. '＝' → logprob: -13.575942039489746
    4. '=[' → logprob: -14.450942039489746
    5. '=[]' → logprob: -14.950942039489746
    6. ' ' → logprob: -15.575942039489746
    7. ' =[' → logprob: -16.325942993164062
    8. '[' → logprob: -16.825942993164062
    9. ')' → logprob: -17.200942993164062
    10. ' ' → logprob: -17.325942993164062

Token 210: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -7.505351095460355e-05
    2. ' [-' → logprob: -9.500075340270996
    3. '[' → logprob: -16.87507438659668
    4. '   ' → logprob: -17.00007438659668
    5. ' ' → logprob: -17.87507438659668
    6. '-' → logprob: -18.62507438659668
    7. '[]' → logprob: -19.00007438659668
    8. '([-' → logprob: -19.62507438659668
    9. '[:-' → logprob: -20.50007438659668
    10. '[:]' → logprob: -20.75007438659668

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '-' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.312501907348633
    4. '2' → logprob: -16.500001907348633
    5. '１' → logprob: -17.000001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '```' → logprob: -17.125001907348633
    8. ' -' → logprob: -17.687501907348633
    9. '۱' → logprob: -17.687501907348633
    10. '

' → logprob: -18.187501907348633

Token 212: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24056127667427063
    2. ' for' → logprob: -1.7405612468719482
    3. 'for' → logprob: -3.7405612468719482
    4. ']*' → logprob: -4.240561485290527
    5. ' ]' → logprob: -8.740561485290527
    6. ']*(' → logprob: -10.115561485290527
    7. ')' → logprob: -10.240561485290527
    8. '*' → logprob: -11.990561485290527
    9. '	for' → logprob: -12.865561485290527
    10. '   ' → logprob: -13.615561485290527

Token 213: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21757592260837555
    2. ' for' → logprob: -1.7175759077072144
    3. '(num' → logprob: -5.092576026916504
    4. '(' → logprob: -5.717576026916504
    5. '[num' → logprob: -6.217576026916504
    6. '[' → logprob: -6.967576026916504
    7. '*' → logprob: -7.092576026916504
    8. ']' → logprob: -7.217576026916504
    9. '*num' → logprob: -7.342576026916504
    10. 'num' → logprob: -8.217576026916504

Token 214: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0932253822684288
    2. '(' → logprob: -3.2182254791259766
    3. 'num' → logprob: -3.2182254791259766
    4. '(num' → logprob: -4.718225479125977
    5. '(max' → logprob: -11.468225479125977
    6. '(n' → logprob: -12.343225479125977
    7. ' (' → logprob: -12.843225479125977
    8. ' num' → logprob: -12.968225479125977
    9. ' ' → logprob: -13.343225479125977
    10. 'max' → logprob: -13.343225479125977

Token 215: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.05615727975964546
    2. 'num' → logprob: -3.306157350540161
    3. '(' → logprob: -4.181157112121582
    4. '(num' → logprob: -5.931157112121582
    5. '(max' → logprob: -12.306157112121582
    6. '(n' → logprob: -13.181157112121582
    7. 'len' → logprob: -13.181157112121582
    8. 'max' → logprob: -13.306157112121582
    9. '(G' → logprob: -13.431157112121582
    10. '(len' → logprob: -13.806157112121582

Token 216: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.0014271405525505543
    2. '006' → logprob: -7.376427173614502
    3. '005' → logprob: -7.626427173614502
    4. '003' → logprob: -9.126426696777344
    5. '5' → logprob: -9.751426696777344
    6. '6' → logprob: -10.501426696777344
    7. ' ' → logprob: -10.751426696777344
    8. '007' → logprob: -10.751426696777344
    9. '   ' → logprob: -11.126426696777344
    10. '004' → logprob: -11.376426696777344

Token 217: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025907160714268684
    2. ' for' → logprob: -3.775907278060913
    3. '   ' → logprob: -6.525907039642334
    4. '<|end|>' → logprob: -6.775907039642334
    5. '#' → logprob: -10.900907516479492
    6. '    
' → logprob: -11.400907516479492
    7. '
' → logprob: -12.025907516479492
    8. '	for' → logprob: -12.025907516479492
    9. '<|end|>' → logprob: -12.525907516479492
    10. '  
' → logprob: -12.775907516479492

Token 218: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012684219516813755
    2. ' for' → logprob: -4.387684345245361
    3. '   ' → logprob: -9.137683868408203
    4. '<|end|>' → logprob: -9.762683868408203
    5. '	for' → logprob: -13.137683868408203
    6. '#' → logprob: -13.387683868408203
    7. '```' → logprob: -13.512683868408203
    8. ')' → logprob: -13.637683868408203
    9. '    
' → logprob: -13.637683868408203
    10. '
' → logprob: -14.262683868408203

Token 219: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.6166903151315637e-05
    2. '   ' → logprob: -11.750016212463379
    3. ' for' → logprob: -11.750016212463379
    4. '#' → logprob: -15.875016212463379
    5. '    
' → logprob: -16.125015258789062
    6. '	for' → logprob: -17.250015258789062
    7. '<|end|>' → logprob: -17.875015258789062
    8. '
' → logprob: -19.000015258789062
    9. '  
' → logprob: -19.000015258789062
    10. 'from' → logprob: -19.875015258789062

Token 220: ' f' (ID: 285)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6903563141822815
    2. 'a' → logprob: -0.8153563141822815
    3. 'link' → logprob: -4.190356254577637
    4. ' u' → logprob: -4.815356254577637
    5. 'i' → logprob: -4.940356254577637
    6. 'l' → logprob: -4.940356254577637
    7. '(u' → logprob: -5.190356254577637
    8. 'x' → logprob: -5.440356254577637
    9. ' a' → logprob: -5.940356254577637
    10. ' link' → logprob: -6.065356254577637

Token 221: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6396855711936951
    2. ',' → logprob: -1.2646856307983398
    3. 'rom' → logprob: -2.51468563079834
    4. 'irst' → logprob: -2.63968563079834
    5. 'or' → logprob: -4.01468563079834
    6. ' ,' → logprob: -5.38968563079834
    7. '_,' → logprob: -5.63968563079834
    8. 'riend' → logprob: -6.01468563079834
    9. 'i' → logprob: -6.01468563079834
    10. 'e' → logprob: -6.63968563079834

Token 222: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.1080467781284824e-05
    2. ' t' → logprob: -10.125041007995605
    3. 'to' → logprob: -14.375041007995605
    4. '`t' → logprob: -15.250041007995605
    5. '	t' → logprob: -16.000041961669922
    6. 's' → logprob: -17.500041961669922
    7. '```' → logprob: -20.125041961669922
    8. 'tt' → logprob: -20.125041961669922
    9. ' to' → logprob: -21.125041961669922
    10. 'e' → logprob: -21.500041961669922

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027160925790667534
    2. 'in' → logprob: -3.652160882949829
    3. ',' → logprob: -7.152161121368408
    4. ' ,' → logprob: -10.40216064453125
    5. '   ' → logprob: -10.77716064453125
    6. ',in' → logprob: -11.90216064453125
    7. ' ' → logprob: -12.15216064453125
    8. '	in' → logprob: -12.27716064453125
    9. '_in' → logprob: -12.65216064453125
    10. '    ' → logprob: -13.77716064453125

Token 224: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.018154622986912727
    2. ' links' → logprob: -4.018154621124268
    3. '   ' → logprob: -13.268155097961426
    4. 'link' → logprob: -13.393155097961426
    5. '.links' → logprob: -14.643155097961426
    6. ' ' → logprob: -14.893155097961426
    7. 'lines' → logprob: -15.643155097961426
    8. '_links' → logprob: -16.14315414428711
    9. 'inks' → logprob: -16.14315414428711
    10. '[' → logprob: -16.64315414428711

Token 225: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00150390958879143
    2. ':
' → logprob: -6.501503944396973
    3. ' :' → logprob: -14.501503944396973
    4. '   ' → logprob: -15.126503944396973
    5. '):' → logprob: -15.126503944396973
    6. ':
' → logprob: -15.626503944396973
    7. '：' → logprob: -16.251502990722656
    8. ':G' → logprob: -16.251502990722656
    9. ':f' → logprob: -16.376502990722656
    10. ':**' → logprob: -16.626502990722656

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012982117477804422
    2. '   ' → logprob: -7.126298427581787
    3. ' G' → logprob: -8.251297950744629
    4. 'G' → logprob: -9.001297950744629
    5. '<|end|>' → logprob: -9.751297950744629
    6. '):
' → logprob: -11.751297950744629
    7. '        
' → logprob: -11.751297950744629
    8. ':' → logprob: -11.876297950744629
    9. ',' → logprob: -12.001297950744629
    10. '	G' → logprob: -12.501297950744629

Token 227: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.022791840136051178
    2. ' G' → logprob: -4.147791862487793
    3. '   ' → logprob: -5.022791862487793
    4. '       ' → logprob: -8.897791862487793
    5. '	G' → logprob: -11.522791862487793
    6. ' ' → logprob: -13.897791862487793
    7. '  ' → logprob: -14.522791862487793
    8. '    ' → logprob: -15.022791862487793
    9. '_G' → logprob: -16.897790908813477
    10. '           ' → logprob: -17.022790908813477

Token 228: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -1.1875571544806007e-05
    2. 'f' → logprob: -11.375011444091797
    3. '[' → logprob: -15.500011444091797
    4. '[t' → logprob: -16.750011444091797
    5. '[F' → logprob: -17.750011444091797
    6. ' [' → logprob: -18.125011444091797
    7. '[u' → logprob: -19.500011444091797
    8. '[int' → logprob: -19.625011444091797
    9. ' f' → logprob: -19.750011444091797
    10. '[G' → logprob: -19.750011444091797

Token 229: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06322740018367767
    2. '[f' → logprob: -2.813227415084839
    3. '[t' → logprob: -6.93822717666626
    4. '][' → logprob: -8.563227653503418
    5. ' ].' → logprob: -10.188227653503418
    6. '[' → logprob: -10.438227653503418
    7. ']' → logprob: -11.063227653503418
    8. '.append' → logprob: -12.063227653503418
    9. '.' → logprob: -12.438227653503418
    10. 'f' → logprob: -12.563227653503418

Token 230: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.0
    3. 'appen' → logprob: -17.5
    4. '.append' → logprob: -18.125
    5. '	append' → logprob: -21.125
    6. 'add' → logprob: -21.75
    7. ' ' → logprob: -21.875
    8. '   ' → logprob: -22.125
    9. 'push' → logprob: -22.25
    10. 'app' → logprob: -22.5

Token 231: '(t' (ID: 2025)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -8.101369894575328e-05
    2. ' t' → logprob: -9.500081062316895
    3. '(t' → logprob: -12.000081062316895
    4. '	t' → logprob: -17.250080108642578
    5. '   ' → logprob: -19.125080108642578
    6. '(' → logprob: -21.500080108642578
    7. '`t' → logprob: -21.500080108642578
    8. ' ' → logprob: -23.375080108642578
    9. '(
' → logprob: -23.875080108642578
    10. '_t' → logprob: -24.000080108642578

Token 232: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010407903464511037
    2. ')
' → logprob: -6.876040935516357
    3. '<|end|>' → logprob: -12.3760404586792
    4. '       ' → logprob: -13.3760404586792
    5. ' )' → logprob: -13.6260404586792
    6. '   ' → logprob: -14.8760404586792
    7. '),' → logprob: -15.2510404586792
    8. '[' → logprob: -15.6260404586792
    9. ')

' → logprob: -16.376041412353516
    10. ')
' → logprob: -17.251041412353516

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005158595158718526
    2. '<|end|>' → logprob: -7.750515937805176
    3. 'G' → logprob: -10.125515937805176
    4. '   ' → logprob: -10.500515937805176
    5. ' G' → logprob: -11.375515937805176
    6. ',' → logprob: -13.750515937805176
    7. '```' → logprob: -13.875515937805176
    8. ' and' → logprob: -13.875515937805176
    9. '<|end|>' → logprob: -14.000515937805176
    10. '	G' → logprob: -14.375515937805176

Token 234: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.004658206831663847
    2. ' G' → logprob: -5.379658222198486
    3. '       ' → logprob: -10.254657745361328
    4. '   ' → logprob: -13.504657745361328
    5. '        ' → logprob: -14.754657745361328
    6. '	G' → logprob: -14.754657745361328
    7. 'g' → logprob: -15.379657745361328
    8. '    ' → logprob: -15.629657745361328
    9. '#' → logprob: -17.004657745361328
    10. 'f' → logprob: -17.004657745361328

Token 235: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.020593509078025818
    2. '[f' → logprob: -3.8955934047698975
    3. 't' → logprob: -10.520593643188477
    4. '[' → logprob: -11.145593643188477
    5. 'f' → logprob: -11.895593643188477
    6. '[u' → logprob: -14.145593643188477
    7. '```' → logprob: -14.270593643188477
    8. '[s' → logprob: -14.520593643188477
    9. '[to' → logprob: -15.145593643188477
    10. '[T' → logprob: -15.770593643188477

Token 236: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0031771177891641855
    2. ').' → logprob: -6.003177165985107
    3. '.append' → logprob: -7.378177165985107
    4. ']' → logprob: -10.12817668914795
    5. '.' → logprob: -10.87817668914795
    6. ')' → logprob: -11.87817668914795
    7. ' ].' → logprob: -11.87817668914795
    8. '}.' → logprob: -13.12817668914795
    9. ''].' → logprob: -15.25317668914795
    10. ' .' → logprob: -15.25317668914795

Token 237: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.75
    3. '.append' → logprob: -17.875
    4. 'f' → logprob: -18.25
    5. 'appen' → logprob: -18.5
    6. '	append' → logprob: -18.875
    7. 'app' → logprob: -19.125
    8. 'add' → logprob: -21.0
    9. '_append' → logprob: -21.625
    10. 'prepend' → logprob: -21.625

Token 238: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.008681820705533028
    2. 'f' → logprob: -4.758681774139404
    3. '(' → logprob: -9.633682250976562
    4. ' f' → logprob: -13.508682250976562
    5. ' (' → logprob: -15.758682250976562
    6. '(
' → logprob: -15.883682250976562
    7. '	f' → logprob: -16.383682250976562
    8. '(s' → logprob: -18.133682250976562
    9. ')' → logprob: -18.258682250976562
    10. '   ' → logprob: -18.758682250976562

Token 239: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.37500286102295
    3. '<|end|>' → logprob: -14.00000286102295
    4. ' )' → logprob: -15.25000286102295
    5. '   ' → logprob: -17.250001907348633
    6. ')#' → logprob: -17.500001907348633
    7. '),' → logprob: -17.625001907348633
    8. '```' → logprob: -18.000001907348633
    9. '))' → logprob: -18.250001907348633
    10. ')}' → logprob: -18.250001907348633

Token 240: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006258784793317318
    2. ' for' → logprob: -5.631258964538574
    3. '   ' → logprob: -6.006258964538574
    4. 'color' → logprob: -8.631258964538574
    5. '```' → logprob: -12.256258964538574
    6. '    
' → logprob: -12.631258964538574
    7. '<|end|>' → logprob: -13.506258964538574
    8. '  ' → logprob: -13.881258964538574
    9. 'colors' → logprob: -13.881258964538574
    10. ')' → logprob: -14.381258964538574

Token 241: ' color' (ID: 3089)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7007109522819519
    2. 'color' (adapté à ' color') → logprob: -0.7007109522819519
    3. 'current' → logprob: -5.075710773468018
    4. 'component' → logprob: -8.325711250305176
    5. 'curr' → logprob: -8.575711250305176
    6. 'next' → logprob: -8.575711250305176
    7. 'cur' → logprob: -8.950711250305176
    8. '   ' → logprob: -9.075711250305176
    9. 'colors' → logprob: -9.575711250305176
    10. 'id' → logprob: -9.950711250305176

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030511818826198578
    2. '=' → logprob: -3.6555118560791016
    3. '_count' → logprob: -6.655511856079102
    4. '_id' → logprob: -7.155511856079102
    5. ' ' → logprob: -7.655511856079102
    6. '_idx' → logprob: -8.030511856079102
    7. 's' → logprob: -8.280511856079102
    8. '[' → logprob: -8.405511856079102
    9. '   ' → logprob: -8.655511856079102
    10. '_' → logprob: -8.905511856079102

Token 243: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001005630983854644
    2. ' ' → logprob: -9.750100135803223
    3. '1' → logprob: -10.375100135803223
    4. '-' → logprob: -11.500100135803223
    5. '   ' → logprob: -15.812600135803223
    6. 'color' → logprob: -16.25010108947754
    7. '[' → logprob: -16.56260108947754
    8. '０' → logprob: -16.81260108947754
    9. 'num' → logprob: -17.06260108947754
    10. '=' → logprob: -17.12510108947754

Token 244: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001999642699956894
    2. '1' → logprob: -9.125200271606445
    3. '-' → logprob: -9.750200271606445
    4. ' ' → logprob: -10.375200271606445
    5. '   ' → logprob: -15.187700271606445
    6. 'color' → logprob: -15.625200271606445
    7. ' -' → logprob: -16.000200271606445
    8. '2' → logprob: -16.062700271606445
    9. '
' → logprob: -16.625200271606445
    10. '０' → logprob: -16.812700271606445

Token 245: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.749588131904602
    2. 'for' → logprob: -0.999588131904602
    3. '   ' → logprob: -2.7495880126953125
    4. '<|end|>' → logprob: -2.9995880126953125
    5. ' for' → logprob: -3.1245880126953125
    6. '    
' → logprob: -6.8745880126953125
    7. '<|end|>' → logprob: -8.249588012695312
    8. ')' → logprob: -9.499588012695312
    9. '  
' → logprob: -9.624588012695312
    10. ' 
' → logprob: -9.624588012695312

Token 246: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023461278527975082
    2. ' for' → logprob: -4.39846134185791
    3. '   ' → logprob: -4.64846134185791
    4. 'dfs' → logprob: -7.14846134185791
    5. '
' → logprob: -7.64846134185791
    6. '<|end|>' → logprob: -11.02346134185791
    7. '    
' → logprob: -11.27346134185791
    8. 'while' → logprob: -12.14846134185791
    9. '```' → logprob: -12.77346134185791
    10. ' dfs' → logprob: -13.02346134185791

Token 247: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.4736459888808895e-05
    2. ' for' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.375014305114746
    4. 'while' → logprob: -16.125015258789062
    5. '
' → logprob: -18.375015258789062
    6. '	for' → logprob: -18.750015258789062
    7. '    
' → logprob: -18.750015258789062
    8. 'visited' → logprob: -19.250015258789062
    9. 'i' → logprob: -19.375015258789062
    10. '#' → logprob: -19.375015258789062

Token 248: ' id' (ID: 1211)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6122007369995117
    2. 'u' → logprob: -1.3622007369995117
    3. ' i' → logprob: -1.7372007369995117
    4. ' u' → logprob: -3.7372007369995117
    5. 'node' → logprob: -7.237200736999512
    6. 'id' → logprob: -7.862200736999512
    7. 'v' → logprob: -8.237200736999512
    8. 'user' → logprob: -8.362200736999512
    9. ' node' → logprob: -8.487200736999512
    10. ' user' → logprob: -9.862200736999512

Token 249: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006725079845637083
    2. 'in' → logprob: -5.006725311279297
    3. ' ' → logprob: -12.256725311279297
    4. ',' → logprob: -13.381725311279297
    5. 'range' → logprob: -14.131725311279297
    6. '	in' → logprob: -14.381725311279297
    7. '   ' → logprob: -14.756725311279297
    8. '0' → logprob: -14.756725311279297
    9. 'n' → logprob: -15.881725311279297
    10. 's' → logprob: -16.006725311279297

Token 250: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141547918319702
    2. 'range' → logprob: -1.7014155387878418
    3. ' ' → logprob: -13.701415061950684
    4. '(range' → logprob: -14.701415061950684
    5. '   ' → logprob: -14.951415061950684
    6. '	range' → logprob: -15.326415061950684
    7. '  ' → logprob: -17.076416015625
    8. '    ' → logprob: -18.076416015625
    9. 'Range' → logprob: -18.201416015625
    10. ' xrange' → logprob: -18.326416015625

Token 251: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.007275429554283619
    2. '(' → logprob: -5.007275581359863
    3. 'num' → logprob: -7.507275581359863
    4. '1' → logprob: -11.757275581359863
    5. '   ' → logprob: -13.882275581359863
    6. ' num' → logprob: -14.007275581359863
    7. '(len' → logprob: -14.257275581359863
    8. '(n' → logprob: -15.507275581359863
    9. ' (' → logprob: -16.132274627685547
    10. '0' → logprob: -16.507274627685547

Token 252: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -3.128163257315464e-07
    2. '_users' → logprob: -16.125
    3. 'of' → logprob: -16.875
    4. '_for' → logprob: -17.0
    5. ' of' → logprob: -17.75
    6. '_' → logprob: -17.875
    7. '_OF' → logprob: -18.125
    8. '   ' → logprob: -18.5
    9. '(num' → logprob: -19.875
    10. '_nodes' → logprob: -19.875

Token 253: '_users' (ID: 38445)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2147887498140335
    2. 'users' → logprob: -1.714788794517517
    3. '_users' → logprob: -4.339788913726807
    4. 'Users' → logprob: -9.714788436889648
    5. '(num' → logprob: -9.839788436889648
    6. '1' → logprob: -10.089788436889648
    7. 'user' → logprob: -10.464788436889648
    8. '0' → logprob: -10.714788436889648
    9. '   ' → logprob: -11.089788436889648
    10. ' num' → logprob: -11.464788436889648

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014370457269251347
    2. '):
' → logprob: -4.264370441436768
    3. '   ' → logprob: -8.764370918273926
    4. ':' → logprob: -10.514370918273926
    5. ')' → logprob: -11.264370918273926
    6. ' ):' → logprob: -12.264370918273926
    7. '):
' → logprob: -12.889370918273926
    8. '+' → logprob: -13.764370918273926
    9. ',' → logprob: -13.889370918273926
    10. '}:' → logprob: -15.014370918273926

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1749558448791504
    2. '   ' → logprob: -2.1749558448791504
    3. ' if' → logprob: -3.4249558448791504
    4. '<|end|>' → logprob: -4.42495584487915
    5. 'if' → logprob: -7.29995584487915
    6. '        
' → logprob: -7.92495584487915
    7. '    
' → logprob: -8.174955368041992
    8. '
' → logprob: -8.799955368041992
    9. ' ' → logprob: -8.924955368041992
    10. '    ' → logprob: -9.049955368041992

Token 256: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01937754638493061
    2. ' if' → logprob: -4.019377708435059
    3. '       ' → logprob: -7.019377708435059
    4. '   ' → logprob: -8.019377708435059
    5. '	if' → logprob: -13.269377708435059
    6. 'If' → logprob: -14.394377708435059
    7. '
' → logprob: -14.394377708435059
    8. '```' → logprob: -15.269377708435059
    9. ' ' → logprob: -15.769377708435059
    10. '        
' → logprob: -16.394376754760742

Token 257: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.5761088132858276
    2. 'C' → logprob: -0.8261088132858276
    3. '   ' → logprob: -8.701108932495117
    4. ' ' → logprob: -13.201108932495117
    5. '    ' → logprob: -14.451108932495117
    6. '	C' → logprob: -14.951108932495117
    7. '  ' → logprob: -15.951108932495117
    8. ' not' → logprob: -16.576108932495117
    9. '0' → logprob: -17.076108932495117
    10. ' ' → logprob: -17.326108932495117

Token 258: '[id' (ID: 29109)
  Prédit: '[id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[id' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.750000953674316
    3. 'id' → logprob: -14.750000953674316
    4. ' [' → logprob: -17.625
    5. '[i' → logprob: -19.625
    6. '[
' → logprob: -20.125
    7. '```' → logprob: -20.375
    8. '[C' → logprob: -20.5
    9. '[user' → logprob: -20.625
    10. '[u' → logprob: -20.875

Token 259: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6436105966567993
    2. ' ==' → logprob: -1.1436105966567993
    3. '==-' → logprob: -2.2686104774475098
    4. ']' → logprob: -3.7686104774475098
    5. ']==' → logprob: -3.7686104774475098
    6. ')' → logprob: -5.14361047744751
    7. ')==' → logprob: -8.018610954284668
    8. '[' → logprob: -9.893610954284668
    9. ' ]' → logprob: -10.643610954284668
    10. ' ' → logprob: -10.643610954284668

Token 260: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.41631361842155457
    2. ' ==' → logprob: -1.166313648223877
    3. '==-' → logprob: -3.541313648223877
    4. ']==' → logprob: -11.416313171386719
    5. ')==' → logprob: -11.541313171386719
    6. '=' → logprob: -12.041313171386719
    7. '==
' → logprob: -12.041313171386719
    8. ' ' → logprob: -13.166313171386719
    9. ')' → logprob: -13.666313171386719
    10. '===' → logprob: -13.916313171386719

Token 261: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3132631182670593
    2. ' -' → logprob: -1.313263177871704
    3. '   ' → logprob: -14.313262939453125
    4. ' ' → logprob: -14.438262939453125
    5. '	' → logprob: -15.688262939453125
    6. '  ' → logprob: -16.938262939453125
    7. '−' → logprob: -17.563262939453125
    8. '    ' → logprob: -18.438262939453125
    9. '```' → logprob: -18.688262939453125
    10. '(-' → logprob: -19.188262939453125

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '-' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '```' → logprob: -15.250001907348633
    5. '   ' → logprob: -16.812501907348633
    6. ' -' → logprob: -17.687501907348633
    7. '１' → logprob: -18.062501907348633
    8. '  ' → logprob: -18.500001907348633
    9. '2' → logprob: -18.812501907348633
    10. '<' → logprob: -18.937501907348633

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47539299726486206
    2. ':
' → logprob: -0.9753929972648621
    3. '):
' → logprob: -6.850392818450928
    4. '):' → logprob: -8.850393295288086
    5. '       ' → logprob: -9.725393295288086
    6. '           ' → logprob: -10.850393295288086
    7. '():
' → logprob: -11.225393295288086
    8. ')' → logprob: -11.600393295288086
    9. ':
' → logprob: -12.600393295288086
    10. '   ' → logprob: -12.725393295288086

Token 264: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0284154415130615
    2. '           ' → logprob: -1.5284154415130615
    3. '       ' → logprob: -1.6534154415130615
    4. ' dfs' → logprob: -1.9034154415130615
    5. ':' → logprob: -3.1534154415130615
    6. 'dfs' → logprob: -3.5284154415130615
    7. '   ' → logprob: -4.653415679931641
    8. '):
' → logprob: -6.528415679931641
    9. ' :
' → logprob: -7.903415679931641
    10. ' DFS' → logprob: -8.15341567993164

Token 265: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.0441073514521122
    2. ' dfs' → logprob: -3.169107437133789
    3. '       ' → logprob: -7.294107437133789
    4. '   ' → logprob: -8.169107437133789
    5. '           ' → logprob: -9.044107437133789
    6. 'df' → logprob: -11.044107437133789
    7. '               ' → logprob: -12.669107437133789
    8. '
' → logprob: -13.169107437133789
    9. '```' → logprob: -13.169107437133789
    10. ' ' → logprob: -14.044107437133789

Token 266: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -1.0564331205387134e-05
    2. '(' → logprob: -11.50001049041748
    3. '(
' → logprob: -15.12501049041748
    4. '```' → logprob: -16.750011444091797
    5. ' (' → logprob: -17.000011444091797
    6. '(Graph' → logprob: -18.250011444091797
    7. '(C' → logprob: -18.750011444091797
    8. ',G' → logprob: -19.625011444091797
    9. '(

' → logprob: -19.625011444091797
    10. '(GPIO' → logprob: -20.000011444091797

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.983476436696947e-05
    2. ',C' → logprob: -9.375089645385742
    3. ' ,' → logprob: -12.375089645385742
    4. 'C' → logprob: -14.875089645385742
    5. '```' → logprob: -16.000089645385742
    6. ',
' → logprob: -16.125089645385742
    7. ',G' → logprob: -16.750089645385742
    8. '   ' → logprob: -17.750089645385742
    9. '，' → logprob: -17.875089645385742
    10. ' C' → logprob: -18.250089645385742

Token 268: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04858827963471413
    2. ' C' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.173588752746582
    4. ' ' → logprob: -16.298587799072266
    5. ')' → logprob: -16.548587799072266
    6. '	C' → logprob: -17.673587799072266
    7. '    ' → logprob: -17.673587799072266
    8. '           ' → logprob: -17.798587799072266
    9. '  ' → logprob: -18.423587799072266
    10. '<|end|>' → logprob: -18.423587799072266

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6537622034084052e-05
    2. ',id' → logprob: -11.50002670288086
    3. ' ,' → logprob: -11.62502670288086
    4. 'id' → logprob: -12.00002670288086
    5. '[id' → logprob: -14.25002670288086
    6. '(id' → logprob: -15.25002670288086
    7. '   ' → logprob: -16.00002670288086
    8. '```' → logprob: -16.25002670288086
    9. ' id' → logprob: -16.50002670288086
    10. '=id' → logprob: -17.50002670288086

Token 270: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0004306692280806601
    2. ' id' → logprob: -7.750430583953857
    3. '   ' → logprob: -17.000431060791016
    4. ' ' → logprob: -19.500431060791016
    5. '	id' → logprob: -20.000431060791016
    6. '           ' → logprob: -21.500431060791016
    7. '(id' → logprob: -21.625431060791016
    8. ')' → logprob: -22.125431060791016
    9. '    ' → logprob: -22.250431060791016
    10. 'color' → logprob: -22.375431060791016

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024001303245313466
    2. ',color' → logprob: -9.250240325927734
    3. 'color' → logprob: -9.250240325927734
    4. ' ,' → logprob: -10.000240325927734
    5. ' color' → logprob: -13.250240325927734
    6. '   ' → logprob: -14.875240325927734
    7. ',
' → logprob: -16.750240325927734
    8. '(color' → logprob: -17.000240325927734
    9. '=color' → logprob: -17.875240325927734
    10. '[color' → logprob: -17.875240325927734

Token 272: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.0002614550176076591
    2. ' color' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.375261306762695
    4. '	color' → logprob: -18.000261306762695
    5. '           ' → logprob: -18.125261306762695
    6. ')' → logprob: -19.500261306762695
    7. ' ' → logprob: -20.000261306762695
    8. '               ' → logprob: -20.500261306762695
    9. '=color' → logprob: -20.500261306762695
    10. '       ' → logprob: -20.625261306762695

Token 273: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47483357787132263
    2. ')' → logprob: -0.974833607673645
    3. '           ' → logprob: -7.2248334884643555
    4. '   ' → logprob: -11.349833488464355
    5. '       ' → logprob: -11.974833488464355
    6. ')
' → logprob: -11.974833488464355
    7. '),' → logprob: -13.724833488464355
    8. ')

' → logprob: -14.474833488464355
    9. '
' → logprob: -14.724833488464355
    10. ')\
' → logprob: -15.224833488464355

Token 274: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044258590787649155
    2. '   ' → logprob: -8.125442504882812
    3. ' color' → logprob: -9.625442504882812
    4. 'color' → logprob: -9.750442504882812
    5. '       ' → logprob: -11.000442504882812
    6. '<|end|>' → logprob: -13.375442504882812
    7. '```' → logprob: -13.625442504882812
    8. '[color' → logprob: -14.000442504882812
    9. ',color' → logprob: -14.875442504882812
    10. '=color' → logprob: -15.375442504882812

Token 275: ' color' (ID: 3089)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04551068693399429
    2. '   ' → logprob: -3.295510768890381
    3. 'color' (adapté à ' color') → logprob: -5.045510768890381
    4. ' color' → logprob: -7.045510768890381
    5. '	color' → logprob: -9.170510292053223
    6. '           ' → logprob: -10.795510292053223
    7. ',color' → logprob: -13.670510292053223
    8. '=color' → logprob: -13.795510292053223
    9. ' ' → logprob: -14.170510292053223
    10. '	   ' → logprob: -14.295510292053223

Token 276: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0033933715894818306
    2. ' +=' → logprob: -6.003393173217773
    3. '+' → logprob: -7.628393173217773
    4. '=' → logprob: -7.753393173217773
    5. ']+=' → logprob: -14.128393173217773
    6. '+='' → logprob: -15.003393173217773
    7. '+="' → logprob: -15.378393173217773
    8. '   ' → logprob: -16.628393173217773
    9. '```' → logprob: -17.128393173217773
    10. ' ' → logprob: -17.253393173217773

Token 277: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '１' → logprob: -20.250001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '```' → logprob: -20.875001907348633
    6. '0' → logprob: -21.875001907348633
    7. '۱' → logprob: -22.250001907348633
    8. '  ' → logprob: -22.312501907348633
    9. '
' → logprob: -23.375001907348633
    10. '`' → logprob: -23.625001907348633

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -19.000003814697266
    4. '   ' → logprob: -19.500003814697266
    5. '１' → logprob: -20.125003814697266
    6. '-' → logprob: -20.375003814697266
    7. '  ' → logprob: -20.750003814697266
    8. '0' → logprob: -21.125003814697266
    9. '
' → logprob: -21.562503814697266
    10. 'int' → logprob: -21.625003814697266

Token 279: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9617738723754883
    2. '<|end|>' → logprob: -0.9617738723754883
    3. 'for' → logprob: -1.7117738723754883
    4. ' for' → logprob: -2.9617738723754883
    5. '
' → logprob: -6.336773872375488
    6. ' ' → logprob: -8.086773872375488
    7. '<|end|>' → logprob: -8.086773872375488
    8. '    
' → logprob: -8.336773872375488
    9. '```' → logprob: -8.461773872375488
    10. '#' → logprob: -9.086773872375488

Token 280: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004207802005112171
    2. ' for' → logprob: -5.629207611083984
    3. '   ' → logprob: -7.629207611083984
    4. '
' → logprob: -9.504207611083984
    5. '```' → logprob: -10.504207611083984
    6. '    
' → logprob: -11.879207611083984
    7. 'color' → logprob: -12.629207611083984
    8. 'answer' → logprob: -13.004207611083984
    9. 'answers' → logprob: -13.254207611083984
    10. 'result' → logprob: -13.754207611083984

Token 281: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.511406809295295e-06
    2. ' for' → logprob: -12.375006675720215
    3. '   ' → logprob: -13.875006675720215
    4. 'results' → logprob: -14.500006675720215
    5. 'answers' → logprob: -14.625006675720215
    6. 'result' → logprob: -15.625006675720215
    7. 'answer' → logprob: -15.875006675720215
    8. 'output' → logprob: -17.3750057220459
    9. 'color' → logprob: -17.8750057220459
    10. '    
' → logprob: -19.3750057220459

Token 282: ' ?' (ID: 1423)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005294715519994497
    2. ' for' → logprob: -5.8802947998046875
    3. '   ' → logprob: -6.0052947998046875
    4. 'result' → logprob: -12.005294799804688
    5. 'answer' → logprob: -12.255294799804688
    6. 'results' → logprob: -12.755294799804688
    7. 'answers' → logprob: -12.755294799804688
    8. 'output' → logprob: -13.130294799804688
    9. 'color' → logprob: -14.005294799804688
    10. 'res' → logprob: -15.255294799804688

Token 283: '????????' (ID: 85218)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.045291297137737274
    2. ' for' → logprob: -3.7952911853790283
    3. '   ' → logprob: -4.045291423797607
    4. 'or' → logprob: -6.920291423797607
    5. ' ' → logprob: -7.420291423797607
    6. '       ' → logprob: -7.545291423797607
    7. 'n' → logprob: -7.545291423797607
    8. '  ' → logprob: -8.17029094696045
    9. 'f' → logprob: -8.42029094696045
    10. ' =' → logprob: -8.92029094696045

Token 284: '????' (ID: 25883)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013031631708145142
    2. ' for' → logprob: -4.638031482696533
    3. '   ' → logprob: -6.138031482696533
    4. '
' → logprob: -7.263031482696533
    5. '(' → logprob: -8.638031959533691
    6. '()
' → logprob: -9.638031959533691
    7. '(
' → logprob: -10.138031959533691
    8. '    
' → logprob: -10.638031959533691
    9. '()' → logprob: -11.388031959533691
    10. '_queries' → logprob: -11.388031959533691

Token 285: '??
' (ID: 108055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003802680876106024
    2. '
' → logprob: -8.500380516052246
    3. ' for' → logprob: -8.750380516052246
    4. '   ' → logprob: -11.000380516052246
    5. '```' → logprob: -14.000380516052246
    6. '    
' → logprob: -14.500380516052246
    7. '	for' → logprob: -16.62537956237793
    8. 'color' → logprob: -17.12537956237793
    9. 'output' → logprob: -17.25037956237793
    10. ' 
' → logprob: -17.50037956237793

Token 286: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.704273118884885e-07
    2. ' for' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.625000953674316
    4. 'output' → logprob: -17.375
    5. 'result' → logprob: -17.375
    6. 'results' → logprob: -18.375
    7. 'answer' → logprob: -18.5
    8. 'answers' → logprob: -19.0
    9. '```' → logprob: -20.75
    10. '	for' → logprob: -20.875

Token 287: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -6.630610641877865e-06
    2. ' for' → logprob: -12.375006675720215
    3. 'result' → logprob: -14.000006675720215
    4. 'results' → logprob: -14.375006675720215
    5. 'output' → logprob: -15.000006675720215
    6. 'answer' → logprob: -15.500006675720215
    7. 'answers' → logprob: -15.750006675720215
    8. '   ' → logprob: -15.875006675720215
    9. 'res' → logprob: -16.1250057220459
    10. 'ans' → logprob: -18.3750057220459

Token 288: ' x' (ID: 1215)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9013575911521912
    2. 'a' → logprob: -1.651357650756836
    3. 'u' → logprob: -1.651357650756836
    4. 'x' → logprob: -2.651357650756836
    5. 'query' → logprob: -2.901357650756836
    6. 's' → logprob: -3.526357650756836
    7. 'f' → logprob: -3.776357650756836
    8. 'p' → logprob: -4.276357650756836
    9. 'start' → logprob: -5.651357650756836
    10. 'i' → logprob: -6.151357650756836

Token 289: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5571239590644836
    2. ',' → logprob: -1.4321238994598389
    3. 'in' → logprob: -1.6821238994598389
    4. ' ,' → logprob: -6.682124137878418
    5. ',y' → logprob: -7.682124137878418
    6. '1' → logprob: -8.932124137878418
    7. '[' → logprob: -9.057124137878418
    8. '0' → logprob: -9.807124137878418
    9. '   ' → logprob: -9.932124137878418
    10. ',in' → logprob: -9.932124137878418

Token 290: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006556084263138473
    2. ' y' → logprob: -7.375655651092529
    3. 'k' → logprob: -10.625655174255371
    4. ' ' → logprob: -13.750655174255371
    5. '   ' → logprob: -13.875655174255371
    6. 'z' → logprob: -14.250655174255371
    7. 'c' → logprob: -14.750655174255371
    8. 'x' → logprob: -14.875655174255371
    9. 'p' → logprob: -15.500655174255371
    10. 'color' → logprob: -15.500655174255371

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22548027336597443
    2. 'in' → logprob: -1.600480318069458
    3. ',' → logprob: -10.225480079650879
    4. '   ' → logprob: -11.100480079650879
    5. '  ' → logprob: -12.100480079650879
    6. ':' → logprob: -12.725480079650879
    7. ' ' → logprob: -13.100480079650879
    8. '	in' → logprob: -13.225480079650879
    9. ')' → logprob: -13.850480079650879
    10. '    ' → logprob: -14.350480079650879

Token 292: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.029751529917120934
    2. ' queries' → logprob: -3.5297515392303467
    3. 'query' → logprob: -15.029751777648926
    4. 'requests' → logprob: -15.154751777648926
    5. 'questions' → logprob: -15.654751777648926
    6. 'quer' → logprob: -16.02975082397461
    7. '   ' → logprob: -16.77975082397461
    8. '_queries' → logprob: -17.27975082397461
    9. 'Queries' → logprob: -18.02975082397461
    10. 'quests' → logprob: -18.90475082397461

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10068709403276443
    2. ':
' → logprob: -2.350687026977539
    3. '   ' → logprob: -7.850687026977539
    4. '):
' → logprob: -10.350687026977539
    5. '():
' → logprob: -10.975687026977539
    6. ',' → logprob: -11.225687026977539
    7. '       ' → logprob: -11.725687026977539
    8. '):' → logprob: -12.100687026977539
    9. '<|end|>' → logprob: -12.475687026977539
    10. ':

' → logprob: -12.725687026977539

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3208138048648834
    2. '   ' → logprob: -1.320813775062561
    3. '<|end|>' → logprob: -4.9458136558532715
    4. '    
' → logprob: -9.19581413269043
    5. ' if' → logprob: -9.44581413269043
    6. '
' → logprob: -10.07081413269043
    7. '        
' → logprob: -10.32081413269043
    8. '<|end|>' → logprob: -10.57081413269043
    9. '    ' → logprob: -10.69581413269043
    10. ' ' → logprob: -11.07081413269043

Token 295: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029025278985500336
    2. '       ' → logprob: -4.029025077819824
    3. 'if' (adapté à ' if') → logprob: -5.279025077819824
    4. '   ' → logprob: -5.279025077819824
    5. ' print' → logprob: -7.529025077819824
    6. ' if' → logprob: -9.404025077819824
    7. '	print' → logprob: -13.654025077819824
    8. ' ' → logprob: -15.529025077819824
    9. '    ' → logprob: -15.904025077819824
    10. '           ' → logprob: -16.15402603149414

Token 296: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.11286522448062897
    2. ' C' → logprob: -2.2378652095794678
    3. '   ' → logprob: -10.237865447998047
    4. ' ' → logprob: -12.112865447998047
    5. '    ' → logprob: -14.737865447998047
    6. '	C' → logprob: -14.862865447998047
    7. '  ' → logprob: -15.112865447998047
    8. '       ' → logprob: -15.862865447998047
    9. '(C' → logprob: -15.987865447998047
    10. ' ' → logprob: -16.362865447998047

Token 297: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.511406809295295e-06
    2. '[' → logprob: -12.250006675720215
    3. 'x' → logprob: -13.375006675720215
    4. ' [' → logprob: -17.1250057220459
    5. ' x' → logprob: -18.3750057220459
    6. '(x' → logprob: -19.6250057220459
    7. '[
' → logprob: -20.1250057220459
    8. '[C' → logprob: -20.1250057220459
    9. '[y' → logprob: -20.3750057220459
    10. '```' → logprob: -20.5000057220459

Token 298: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0028166472911834717
    2. ']==' → logprob: -5.877816677093506
    3. '==' → logprob: -11.877816200256348
    4. ' ]' → logprob: -12.502816200256348
    5. '[' → logprob: -14.002816200256348
    6. ' ==' → logprob: -16.377817153930664
    7. '   ' → logprob: -16.377817153930664
    8. ']!=' → logprob: -16.877817153930664
    9. '']' → logprob: -17.127817153930664
    10. '```' → logprob: -17.377817153930664

Token 299: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009792686440050602
    2. ' ==' → logprob: -4.634792804718018
    3. '=' → logprob: -10.75979232788086
    4. ']==' → logprob: -11.63479232788086
    5. '!=' → logprob: -12.63479232788086
    6. '===' → logprob: -13.13479232788086
    7. '==
' → logprob: -14.50979232788086
    8. ')==' → logprob: -15.63479232788086
    9. '```' → logprob: -15.75979232788086
    10. '[' → logprob: -16.13479232788086

Token 300: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0005735247395932674
    2. ' C' → logprob: -7.500573635101318
    3. '-' → logprob: -11.25057315826416
    4. '   ' → logprob: -12.25057315826416
    5. ' ' → logprob: -13.12557315826416
    6. ' -' → logprob: -15.00057315826416
    7. '  ' → logprob: -15.37557315826416
    8. '     ' → logprob: -16.250574111938477
    9. '    ' → logprob: -16.250574111938477
    10. '       ' → logprob: -16.875574111938477

Token 301: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.011073057539761066
    2. 'y' → logprob: -4.511073112487793
    3. ' y' → logprob: -11.636073112487793
    4. '   ' → logprob: -12.136073112487793
    5. '[x' → logprob: -12.886073112487793
    6. '[' → logprob: -13.011073112487793
    7. '```' → logprob: -13.386073112487793
    8. ' [' → logprob: -14.261073112487793
    9. '       ' → logprob: -14.511073112487793
    10. ''y' → logprob: -14.636073112487793

Token 302: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.019200056791305542
    2. ']' → logprob: -4.019199848175049
    3. ':' → logprob: -7.269199848175049
    4. ']==' → logprob: -8.269200325012207
    5. ']:
' → logprob: -9.769200325012207
    6. '):' → logprob: -11.144200325012207
    7. ' ]' → logprob: -11.644200325012207
    8. '}:' → logprob: -12.894200325012207
    9. ']>' → logprob: -13.144200325012207
    10. '']:' → logprob: -13.269200325012207

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034235394559800625
    2. 'print' → logprob: -6.003423690795898
    3. ' print' → logprob: -7.128423690795898
    4. '       ' → logprob: -8.878423690795898
    5. '               ' → logprob: -13.003423690795898
    6. '   ' → logprob: -13.628423690795898
    7. '         ' → logprob: -14.378423690795898
    8. '          ' → logprob: -14.878423690795898
    9. '	       ' → logprob: -14.878423690795898
    10. '		' → logprob: -15.128423690795898

Token 304: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0037791705690324306
    2. '           ' → logprob: -5.75377893447876
    3. '       ' → logprob: -7.50377893447876
    4. ' print' → logprob: -10.003779411315918
    5. '   ' → logprob: -12.378779411315918
    6. '	print' → logprob: -14.878779411315918
    7. '               ' → logprob: -15.503779411315918
    8. '
' → logprob: -15.503779411315918
    9. 'printf' → logprob: -17.3787784576416
    10. '
' → logprob: -17.5037784576416

Token 305: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07115163654088974
    2. '('' → logprob: -2.8211517333984375
    3. '(' → logprob: -4.6961517333984375
    4. '"' → logprob: -12.696151733398438
    5. '1' → logprob: -12.821151733398438
    6. 'Yes' → logprob: -13.071151733398438
    7. '(True' → logprob: -13.071151733398438
    8. ''' → logprob: -14.446151733398438
    9. '()' → logprob: -15.446151733398438
    10. ' ("' → logprob: -15.821151733398438

Token 306: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.04391617327928543
    2. 'Yes' → logprob: -3.7939162254333496
    3. '1' → logprob: -4.04391622543335
    4. 'YES' → logprob: -6.16891622543335
    5. ' yes' → logprob: -8.418915748596191
    6. ''' → logprob: -8.793915748596191
    7. 'YO' → logprob: -8.918915748596191
    8. 'はい' → logprob: -10.168915748596191
    9. 's' → logprob: -10.293915748596191
    10. '0' → logprob: -10.418915748596191

Token 307: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.3869336247444153
    2. '')' → logprob: -1.1369335651397705
    3. '')
' → logprob: -10.136933326721191
    4. ')
' → logprob: -11.386933326721191
    5. ')' → logprob: -11.636933326721191
    6. '")
' → logprob: -13.261933326721191
    7. '")' → logprob: -14.636933326721191
    8. ''' → logprob: -14.886933326721191
    9. '')

' → logprob: -15.261933326721191
    10. ' ')
' → logprob: -17.386934280395508

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005582233425229788
    2. 'else' → logprob: -5.505582332611084
    3. ' else' → logprob: -6.505582332611084
    4. '	' → logprob: -12.505581855773926
    5. '	else' → logprob: -13.005581855773926
    6. '<|end|>' → logprob: -13.880581855773926
    7. '   ' → logprob: -16.005582809448242
    8. '           ' → logprob: -16.005582809448242
    9. '<|end|>' → logprob: -16.505582809448242
    10. 'elif' → logprob: -16.505582809448242

Token 309: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10346683114767075
    2. 'else' (adapté à ' else') → logprob: -2.353466749191284
    3. ' else' → logprob: -5.728466987609863
    4. '	else' → logprob: -13.103466987609863
    5. '   ' → logprob: -14.853466987609863
    6. '	' → logprob: -14.853466987609863
    7. 'elif' → logprob: -15.728466987609863
    8. '           ' → logprob: -16.853466033935547
    9. '      ' → logprob: -17.978466033935547
    10. '```' → logprob: -18.353466033935547

Token 310: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1349404752254486
    2. ':' → logprob: -2.1349403858184814
    3. ':
' → logprob: -5.0099406242370605
    4. ' print' → logprob: -7.3849406242370605
    5. 'print' → logprob: -7.3849406242370605
    6. '       ' → logprob: -10.884940147399902
    7. ' :' → logprob: -11.259940147399902
    8. '          ' → logprob: -11.384940147399902
    9. '   ' → logprob: -12.009940147399902
    10. '         ' → logprob: -12.384940147399902

Token 311: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6099350452423096
    2. '           ' → logprob: -1.3599350452423096
    3. ' print' → logprob: -1.6099350452423096
    4. '       ' → logprob: -10.98493480682373
    5. '   ' → logprob: -11.48493480682373
    6. '	print' → logprob: -13.10993480682373
    7. '               ' → logprob: -13.23493480682373
    8. '            ' → logprob: -13.73493480682373
    9. '         ' → logprob: -13.98493480682373
    10. '          ' → logprob: -14.60993480682373

Token 312: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014271507039666176
    2. ' print' → logprob: -4.2642717361450195
    3. '           ' → logprob: -9.13927173614502
    4. '       ' → logprob: -14.63927173614502
    5. '	print' → logprob: -16.389270782470703
    6. '   ' → logprob: -16.889270782470703
    7. '        ' → logprob: -18.264270782470703
    8. '               ' → logprob: -18.514270782470703
    9. '            ' → logprob: -18.764270782470703
    10. 'printf' → logprob: -19.014270782470703

Token 313: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011708177626132965
    2. '(' → logprob: -6.751170635223389
    3. ' ('' → logprob: -14.876171112060547
    4. '("' → logprob: -15.876171112060547
    5. ''' → logprob: -16.251171112060547
    6. '(
' → logprob: -18.126171112060547
    7. ' (' → logprob: -18.501171112060547
    8. '()' → logprob: -19.376171112060547
    9. '('(' → logprob: -19.876171112060547
    10. ' ' → logprob: -20.251171112060547

Token 314: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.4021237802808173e-05
    2. ''' → logprob: -11.250014305114746
    3. ' no' → logprob: -14.000014305114746
    4. 'No' → logprob: -17.12501335144043
    5. '	no' → logprob: -18.12501335144043
    6. '   ' → logprob: -19.50001335144043
    7. ''n' → logprob: -20.37501335144043
    8. 'not' → logprob: -20.62501335144043
    9. 'NO' → logprob: -21.00001335144043
    10. 'n' → logprob: -22.12501335144043

Token 315: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.12693104147911072
    2. ')' → logprob: -2.1269309520721436
    3. '")' → logprob: -13.126931190490723
    4. '')
' → logprob: -14.126931190490723
    5. ''' → logprob: -15.876931190490723
    6. ')'' → logprob: -17.126930236816406
    7. '```' → logprob: -17.626930236816406
    8. '’)' → logprob: -17.751930236816406
    9. '`)' → logprob: -17.751930236816406
    10. ')
' → logprob: -17.876930236816406


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 313
Tokens correctement prédits (1ère position, stricte): 111
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 258
Précision stricte (1ère position): 35.46%
Précision adaptée (1ère position): 41.21%
Précision (top 10): 82.43%
================================================================================
