================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
e=input
a=[]
for _ in[0]*int(e()):
 X,z=e(),[]
 for y in e():
  s=i=0
  for k in z:
   t=X.find(y,s)+1
   if t<1:break
   if t<k:z[i]=t
   s=k;i+=1
  else:
   t=X.find(y,s)+1
   if t:z+=[t]
 a+=[z]
print(*map(len,a),sep='\n')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'e' (ID: 68)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006422612932510674
    2. '.' → logprob: -8.625641822814941
    3. '('' → logprob: -8.750641822814941
    4. '(
' → logprob: -9.000641822814941
    5. ' (' → logprob: -9.500641822814941
    6. '("("' → logprob: -10.625641822814941
    7. ',' → logprob: -11.625641822814941
    8. '=' → logprob: -11.625641822814941
    9. '()' → logprob: -11.750641822814941
    10. '"' → logprob: -11.750641822814941

Token 4: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2091841995716095
    2. '(' → logprob: -1.959184169769287
    3. ' =' → logprob: -3.709184169769287
    4. '[' → logprob: -4.709184169769287
    5. ',' → logprob: -5.584184169769287
    6. '.' → logprob: -5.709184169769287
    7. 'a' → logprob: -6.209184169769287
    8. '+' → logprob: -6.834184169769287
    9. 'r' → logprob: -7.084184169769287
    10. 's' → logprob: -7.209184169769287

Token 5: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06799662113189697
    2. '=' → logprob: -2.8179965019226074
    3. 'for' → logprob: -5.817996501922607
    4. '.' → logprob: -7.567996501922607
    5. '(
' → logprob: -7.817996501922607
    6. ' for' → logprob: -8.067996978759766
    7. ' =' → logprob: -8.442996978759766
    8. 'r' → logprob: -8.567996978759766
    9. '[' → logprob: -8.567996978759766
    10. 'f' → logprob: -8.567996978759766

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0015897235134616494
    2. ' i' → logprob: -6.626589775085449
    3. 'i' → logprob: -8.50158977508545
    4. '  ' → logprob: -10.37658977508545
    5. ' _' → logprob: -11.62658977508545
    6. ' ‌' → logprob: -12.37658977508545
    7. '_' → logprob: -12.50158977508545
    8. ' e' → logprob: -12.75158977508545
    9. 'e' → logprob: -13.00158977508545
    10. ' )' → logprob: -13.25158977508545

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03186490759253502
    2. ' ' → logprob: -4.156865119934082
    3. 'in' → logprob: -4.156865119934082
    4. 'range' → logprob: -11.031865119934082
    5. '  ' → logprob: -11.281865119934082
    6. 'import' → logprob: -12.156865119934082
    7. ' _' → logprob: -12.781865119934082
    8. ' range' → logprob: -12.781865119934082
    9. ' i' → logprob: -13.156865119934082
    10. ',' → logprob: -13.906865119934082

Token 8: '[' (ID: 58)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20264099538326263
    2. ' range' → logprob: -1.7026410102844238
    3. 'e' → logprob: -6.952641010284424
    4. ' e' → logprob: -8.452640533447266
    5. 'a' → logprob: -10.077640533447266
    6. ' a' → logprob: -11.702640533447266
    7. 'r' → logprob: -12.827640533447266
    8. ' ' → logprob: -14.077640533447266
    9. 'ran' → logprob: -14.327640533447266
    10. 'in' → logprob: -14.702640533447266

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.044810306280851364
    2. 'range' → logprob: -3.6698102951049805
    3. 'e' → logprob: -4.6698102951049805
    4. '1' → logprob: -5.6698102951049805
    5. ' range' → logprob: -6.0448102951049805
    6. 'None' → logprob: -6.9198102951049805
    7. ' ' → logprob: -6.9198102951049805
    8. '10' → logprob: -8.41981029510498
    9. ']' → logprob: -9.16981029510498
    10. ' e' → logprob: -9.16981029510498

Token 10: ']*' (ID: 18579)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0347583144903183
    2. ']' → logprob: -3.5347583293914795
    3. ']*' → logprob: -6.2847580909729
    4. ' ' → logprob: -7.1597580909729
    5. '..' → logprob: -7.2847580909729
    6. ' ,' → logprob: -8.034758567810059
    7. ',
' → logprob: -8.659758567810059
    8. ':]' → logprob: -8.909758567810059
    9. ',,' → logprob: -9.284758567810059
    10. ':' → logprob: -9.409758567810059

Token 11: 'int' (ID: 491)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4914502203464508
    2. '3' → logprob: -1.7414501905441284
    3. '10' → logprob: -2.491450309753418
    4. '4' → logprob: -2.991450309753418
    5. '6' → logprob: -3.241450309753418
    6. '9' → logprob: -3.616450309753418
    7. '7' → logprob: -5.366450309753418
    8. '1' → logprob: -5.991450309753418
    9. 'int' → logprob: -6.241450309753418
    10. '100' → logprob: -6.241450309753418

Token 12: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0004480692732613534
    2. '(' → logprob: -8.000448226928711
    3. 'e' → logprob: -9.125448226928711
    4. '(a' → logprob: -12.875448226928711
    5. ' (' → logprob: -15.250448226928711
    6. '(i' → logprob: -15.375448226928711
    7. '((' → logprob: -15.500448226928711
    8. '(s' → logprob: -15.750448226928711
    9. ' e' → logprob: -16.37544822692871
    10. '(input' → logprob: -16.37544822692871

Token 13: '()):
' (ID: 83536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3443550765514374
    2. '())' → logprob: -2.0943551063537598
    3. ')' → logprob: -2.2193551063537598
    4. '()' → logprob: -3.9693551063537598
    5. '(e' → logprob: -4.46935510635376
    6. '(input' → logprob: -4.71935510635376
    7. '('' → logprob: -4.96935510635376
    8. '(a' → logprob: -4.96935510635376
    9. '(""))' → logprob: -6.46935510635376
    10. '("' → logprob: -6.96935510635376

Token 14: ' X' (ID: 2127)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.34806153178215027
    2. 'a' → logprob: -1.5980615615844727
    3. '   ' → logprob: -3.5980615615844727
    4. '    ' → logprob: -3.8480615615844727
    5. ' ' → logprob: -3.9730615615844727
    6. ''' → logprob: -5.098061561584473
    7. '"' → logprob: -5.473061561584473
    8. ' (' → logprob: -5.973061561584473
    9. 'e' → logprob: -6.098061561584473
    10. ' [' → logprob: -6.973061561584473

Token 15: ',z' (ID: 54920)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.19529582560062408
    2. '.' → logprob: -1.820295810699463
    3. 'append' → logprob: -4.945295810699463
    4. '.a' → logprob: -5.570295810699463
    5. ' a' → logprob: -6.195295810699463
    6. ' .' → logprob: -7.320295810699463
    7. '.extend' → logprob: -7.445295810699463
    8. 'a' → logprob: -7.695295810699463
    9. ' append' → logprob: -8.570296287536621
    10. '.app' → logprob: -9.195296287536621

Token 16: '=e' (ID: 88454)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00941273383796215
    2. ' =' → logprob: -5.25941276550293
    3. '=input' → logprob: -5.50941276550293
    4. '=X' → logprob: -10.00941276550293
    5. '=z' → logprob: -10.00941276550293
    6. '=e' → logprob: -11.38441276550293
    7. '=x' → logprob: -12.13441276550293
    8. '=a' → logprob: -12.88441276550293
    9. ',' → logprob: -13.00941276550293
    10. '=int' → logprob: -13.50941276550293

Token 17: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03011537715792656
    2. '().' → logprob: -3.5301153659820557
    3. '(' → logprob: -9.530115127563477
    4. '(),' → logprob: -9.905115127563477
    5. ')' → logprob: -10.155115127563477
    6. ' ()' → logprob: -10.280115127563477
    7. '())' → logprob: -10.655115127563477
    8. '()]' → logprob: -10.655115127563477
    9. '`()' → logprob: -10.655115127563477
    10. '();' → logprob: -11.030115127563477

Token 18: '[]
' (ID: 41761)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0396171808242798
    2. ' e' → logprob: -1.1646171808242798
    3. ' map' → logprob: -2.1646170616149902
    4. 'map' → logprob: -2.4146170616149902
    5. ' ' → logprob: -3.4146170616149902
    6. 'input' → logprob: -3.7896170616149902
    7. 'int' → logprob: -3.7896170616149902
    8. ' z' → logprob: -4.53961706161499
    9. 'z' → logprob: -4.66461706161499
    10. ' input' → logprob: -4.91461706161499

Token 19: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28583019971847534
    2. 'for' → logprob: -1.7858302593231201
    3. ' ' → logprob: -2.53583025932312
    4. ' 
' → logprob: -7.785830020904541
    5. '<|end|>' → logprob: -8.2858304977417
    6. ')' → logprob: -8.4108304977417
    7. ',' → logprob: -9.1608304977417
    8. ''' → logprob: -9.4108304977417
    9. '=' → logprob: -9.4108304977417
    10. '[' → logprob: -9.6608304977417

Token 20: ' y' (ID: 342)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9739246368408203
    2. ' _' → logprob: -1.0989246368408203
    3. '_' → logprob: -2.2239246368408203
    4. ' j' → logprob: -2.7239246368408203
    5. ' x' → logprob: -3.2239246368408203
    6. ' y' → logprob: -3.2239246368408203
    7. ' ' → logprob: -4.72392463684082
    8. ' X' → logprob: -4.84892463684082
    9. 'i' → logprob: -4.97392463684082
    10. 'x' → logprob: -5.72392463684082

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2521187365055084
    2. 'in' → logprob: -1.502118706703186
    3. ' ' → logprob: -9.002119064331055
    4. '	in' → logprob: -10.502119064331055
    5. ' y' → logprob: -11.377119064331055
    6. 'import' → logprob: -12.252119064331055
    7. '  ' → logprob: -12.877119064331055
    8. 'y' → logprob: -13.314619064331055
    9. ' i' → logprob: -13.502119064331055
    10. ' "' → logprob: -13.564619064331055

Token 22: ' e' (ID: 319)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.49651849269866943
    2. 'e' → logprob: -1.3715184926986694
    3. ' range' → logprob: -2.621518611907959
    4. 'input' → logprob: -3.496518611907959
    5. ' e' → logprob: -3.746518611907959
    6. '[' → logprob: -5.746518611907959
    7. 'x' → logprob: -6.121518611907959
    8. 'X' → logprob: -6.371518611907959
    9. 'z' → logprob: -6.496518611907959
    10. ' input' → logprob: -7.246518611907959

Token 23: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3144693970680237
    2. '()' → logprob: -1.439469337463379
    3. '().' → logprob: -3.439469337463379
    4. '(' → logprob: -8.064469337463379
    5. '()[' → logprob: -9.564469337463379
    6. '()(' → logprob: -9.814469337463379
    7. '()>' → logprob: -10.439469337463379
    8. '():
' → logprob: -10.689469337463379
    9. '())' → logprob: -10.689469337463379
    10. '('' → logprob: -10.814469337463379

Token 24: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6370389461517334
    2. ' z' → logprob: -1.5120389461517334
    3. ' ' → logprob: -2.0120389461517334
    4. 'z' → logprob: -2.5120389461517334
    5. 'if' → logprob: -4.3870391845703125
    6. ' a' → logprob: -5.6370391845703125
    7. ' X' → logprob: -5.6370391845703125
    8. '    ' → logprob: -6.0120391845703125
    9. ' Z' → logprob: -6.0120391845703125
    10. ' y' → logprob: -6.1370391845703125

Token 25: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6320456862449646
    2. 'z' → logprob: -1.3820457458496094
    3. 'if' → logprob: -1.8820457458496094
    4. ' z' → logprob: -3.1320457458496094
    5. ' ' → logprob: -4.757045745849609
    6. 'x' → logprob: -5.882045745849609
    7. 'Z' → logprob: -5.882045745849609
    8. 'X' → logprob: -6.257045745849609
    9. ' Z' → logprob: -6.632045745849609
    10. ' X' → logprob: -6.882045745849609

Token 26: '=i' (ID: 48141)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5188934803009033
    2. 'z' → logprob: -1.8938934803009033
    3. '=' → logprob: -2.3938934803009033
    4. '+=' → logprob: -3.0188934803009033
    5. '=z' → logprob: -3.7688934803009033
    6. 't' → logprob: -4.393893241882324
    7. 'um' → logprob: -4.518893241882324
    8. 'y' → logprob: -4.768893241882324
    9. 'e' → logprob: -5.268893241882324
    10. '.' → logprob: -5.268893241882324

Token 27: '=' (ID: 28)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.0009814819786697626
    2. 'n' → logprob: -7.375981330871582
    3. 'f' → logprob: -8.125981330871582
    4. 'ntl' → logprob: -11.625981330871582
    5. 'nf' → logprob: -11.625981330871582
    6. 'nz' → logprob: -12.125981330871582
    7. 'nte' → logprob: -12.875981330871582
    8. '```' → logprob: -13.000981330871582
    9. 'nv' → logprob: -13.375981330871582
    10. 'nd' → logprob: -13.375981330871582

Token 28: '0' (ID: 15)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.011703127063810825
    2. '0' → logprob: -4.636703014373779
    3. 'n' → logprob: -6.511703014373779
    4. ' ' → logprob: -8.261703491210938
    5. '1' → logprob: -9.886703491210938
    6. 'int' → logprob: -10.261703491210938
    7. 't' → logprob: -10.886703491210938
    8. 'y' → logprob: -11.011703491210938
    9. '-' → logprob: -11.511703491210938
    10. 'z' → logprob: -11.636703491210938

Token 29: '
' (ID: 198)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7640731930732727
    2. 'for' → logprob: -2.389073133468628
    3. 'if' → logprob: -2.389073133468628
    4. ' y' → logprob: -2.514073133468628
    5. ' if' → logprob: -2.639073133468628
    6. 'len' → logprob: -2.889073133468628
    7. ' ' → logprob: -3.264073133468628
    8. '<len' → logprob: -4.139073371887207
    9. ' for' → logprob: -4.264073371887207
    10. ' len' → logprob: -4.514073371887207

Token 30: ' ' (ID: 220)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.6399352550506592
    2. 'if' → logprob: -1.8899352550506592
    3. 'for' → logprob: -1.8899352550506592
    4. ' ' → logprob: -2.014935255050659
    5. 'f' → logprob: -2.264935255050659
    6. ' y' → logprob: -2.389935255050659
    7. 'n' → logprob: -3.139935255050659
    8. ' for' → logprob: -3.389935255050659
    9. 'len' → logprob: -3.639935255050659
    10. 'z' → logprob: -4.639935493469238

Token 31: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5965806245803833
    2. ' for' → logprob: -1.7215806245803833
    3. ' if' → logprob: -2.3465805053710938
    4. 'if' → logprob: -2.7215805053710938
    5. 'f' → logprob: -3.5965805053710938
    6. ' ' → logprob: -3.8465805053710938
    7. ' while' → logprob: -3.9715805053710938
    8. ' y' → logprob: -4.096580505371094
    9. 'while' → logprob: -4.971580505371094
    10. 'z' → logprob: -5.721580505371094

Token 32: ' k' (ID: 372)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10297646373510361
    2. 'y' → logprob: -2.8529765605926514
    3. ' x' → logprob: -4.352976322174072
    4. ' z' → logprob: -4.477976322174072
    5. 'x' → logprob: -5.352976322174072
    6. ' range' → logprob: -5.727976322174072
    7. ' c' → logprob: -6.477976322174072
    8. ' ' → logprob: -6.477976322174072
    9. 'z' → logprob: -6.852976322174072
    10. 'range' → logprob: -7.102976322174072

Token 33: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5795746445655823
    2. ' in' → logprob: -0.8295746445655823
    3. 'n' → logprob: -6.5795745849609375
    4. ' ' → logprob: -7.2045745849609375
    5. ' y' → logprob: -7.3295745849609375
    6. 'y' → logprob: -8.079574584960938
    7. ',y' → logprob: -8.454574584960938
    8. ' n' → logprob: -9.829574584960938
    9. 'range' → logprob: -10.079574584960938
    10. ',' → logprob: -10.079574584960938

Token 34: ' z' (ID: 579)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.40328916907310486
    2. 'y' → logprob: -1.7782891988754272
    3. ' range' → logprob: -2.1532890796661377
    4. 'range' → logprob: -3.6532890796661377
    5. ' z' → logprob: -4.403289318084717
    6. 'z' → logprob: -5.028289318084717
    7. ' ' → logprob: -7.653289318084717
    8. '[' → logprob: -7.778289318084717
    9. ' a' → logprob: -8.028288841247559
    10. ' e' → logprob: -8.528288841247559

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006543654948472977
    2. ' :' → logprob: -5.1315436363220215
    3. '+' → logprob: -8.25654411315918
    4. '+:' → logprob: -9.13154411315918
    5. ':
' → logprob: -10.38154411315918
    6. '[' → logprob: -10.63154411315918
    7. ':k' → logprob: -10.63154411315918
    8. ' ' → logprob: -10.88154411315918
    9. '[::-' → logprob: -11.13154411315918
    10. ':s' → logprob: -11.25654411315918

Token 36: '  ' (ID: 256)
  Prédit: '  '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.9377509355545044
    2. ' if' → logprob: -1.0627509355545044
    3. ' ' → logprob: -1.5627509355545044
    4. 'if' → logprob: -3.562750816345215
    5. ' s' → logprob: -5.062750816345215
    6. '+' → logprob: -5.187750816345215
    7. '   ' → logprob: -5.312750816345215
    8. 's' → logprob: -6.437750816345215
    9. '[' → logprob: -6.937750816345215
    10. ' k' → logprob: -6.937750816345215

Token 37: ' t' (ID: 260)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1174764633178711
    2. ' ' → logprob: -3.117476463317871
    3. 'if' → logprob: -3.242476463317871
    4. ' s' → logprob: -4.492476463317871
    5. '  ' → logprob: -5.367476463317871
    6. 's' → logprob: -5.492476463317871
    7. '+' → logprob: -6.117476463317871
    8. '   ' → logprob: -7.242476463317871
    9. ' +' → logprob: -7.242476463317871
    10. ' abs' → logprob: -7.492476463317871

Token 38: '=X' (ID: 143117)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20177409052848816
    2. ' +=' → logprob: -2.3267741203308105
    3. '+' → logprob: -3.2017741203308105
    4. '==' → logprob: -4.4517741203308105
    5. '=' → logprob: -5.2017741203308105
    6. '+k' → logprob: -5.5767741203308105
    7. '=k' → logprob: -5.5767741203308105
    8. ' +' → logprob: -6.2017741203308105
    9. ' ' → logprob: -6.4517741203308105
    10. ' if' → logprob: -6.4517741203308105

Token 39: '.find' (ID: 4231)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.3062076568603516
    2. '==' → logprob: -1.4312076568603516
    3. '[k' → logprob: -1.6812076568603516
    4. '[' → logprob: -3.0562076568603516
    5. '[i' → logprob: -3.0562076568603516
    6. '+' → logprob: -3.5562076568603516
    7. '.' → logprob: -3.8062076568603516
    8. ' ==' → logprob: -4.181207656860352
    9. ' if' → logprob: -4.431207656860352
    10. '[s' → logprob: -4.681207656860352

Token 40: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.33789438009262085
    2. '(k' → logprob: -1.3378944396972656
    3. '(' → logprob: -3.8378944396972656
    4. '(s' → logprob: -6.587894439697266
    5. '(x' → logprob: -7.337894439697266
    6. '(i' → logprob: -8.587894439697266
    7. '(X' → logprob: -8.587894439697266
    8. '(z' → logprob: -8.712894439697266
    9. '('' → logprob: -9.337894439697266
    10. 'k' → logprob: -10.712894439697266

Token 41: ',s' (ID: 20379)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.141359344124794
    2. ',' → logprob: -3.016359329223633
    3. ')' → logprob: -3.641359329223633
    4. ',i' → logprob: -3.766359329223633
    5. ',s' → logprob: -3.891359329223633
    6. ' ,' → logprob: -5.516359329223633
    7. ')+' → logprob: -6.016359329223633
    8. '+k' → logprob: -6.391359329223633
    9. ',t' → logprob: -6.766359329223633
    10. ' )' → logprob: -7.766359329223633

Token 42: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5458557605743408
    2. ')+' → logprob: -0.9208557605743408
    3. '+' → logprob: -4.045855522155762
    4. ' )' → logprob: -5.670855522155762
    5. ')t' → logprob: -7.420855522155762
    6. ')s' → logprob: -8.920855522155762
    7. ')>' → logprob: -9.170855522155762
    8. '+s' → logprob: -9.420855522155762
    9. '+t' → logprob: -9.545855522155762
    10. ')+(' → logprob: -9.920855522155762

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025203691329807043
    2. ' ' → logprob: -6.002520561218262
    3. '+' → logprob: -11.252520561218262
    4. 'k' → logprob: -11.627520561218262
    5. 'len' → logprob: -11.752520561218262
    6. ' k' → logprob: -12.377520561218262
    7. 'i' → logprob: -13.252520561218262
    8. ' i' → logprob: -13.377520561218262
    9. 's' → logprob: -13.627520561218262
    10. ' t' → logprob: -13.752520561218262

Token 44: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.7529645562171936
    2. 'k' → logprob: -1.5029644966125488
    3. ' k' → logprob: -1.6279644966125488
    4. 't' → logprob: -2.627964496612549
    5. ' s' → logprob: -4.127964496612549
    6. ' not' → logprob: -4.627964496612549
    7. 's' → logprob: -5.502964496612549
    8. ' z' → logprob: -5.627964496612549
    9. 'z' → logprob: -6.252964496612549
    10. ' y' → logprob: -7.377964496612549

Token 48: '<' (ID: 27)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3827769458293915
    2. ' ==' → logprob: -2.257776975631714
    3. '<=' → logprob: -2.632776975631714
    4. ' <=' → logprob: -3.632776975631714
    5. ' ' → logprob: -4.007776737213135
    6. '<|end|>' → logprob: -4.007776737213135
    7. '>' → logprob: -4.132776737213135
    8. ' s' → logprob: -4.507776737213135
    9. '<' → logprob: -4.632776737213135
    10. '0' → logprob: -4.632776737213135

Token 49: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1300365924835205
    2. 's' → logprob: -1.3800365924835205
    3. 'i' → logprob: -1.6300365924835205
    4. '1' → logprob: -2.6300365924835205
    5. 'k' → logprob: -3.0050365924835205
    6. 'len' → logprob: -3.2550365924835205
    7. 'z' → logprob: -3.5050365924835205
    8. ' ' → logprob: -4.380036354064941
    9. ' s' → logprob: -4.755036354064941
    10. ' i' → logprob: -5.255036354064941

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23318423330783844
    2. ':s' → logprob: -1.8581842184066772
    3. ' :' → logprob: -4.483184337615967
    4. ':return' → logprob: -4.608184337615967
    5. '<|end|>' → logprob: -4.983184337615967
    6. ' ' → logprob: -5.108184337615967
    7. ':
' → logprob: -5.483184337615967
    8. '  ' → logprob: -5.858184337615967
    9. ' and' → logprob: -6.358184337615967
    10. ' s' → logprob: -6.483184337615967

Token 51: 'break' (ID: 15354)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5295171141624451
    2. '  ' → logprob: -1.7795171737670898
    3. '   ' → logprob: -2.02951717376709
    4. ' ' → logprob: -3.40451717376709
    5. 'break' → logprob: -3.77951717376709
    6. ' s' → logprob: -3.90451717376709
    7. '<|end|>' → logprob: -4.52951717376709
    8. 's' → logprob: -4.52951717376709
    9. '    ' → logprob: -5.52951717376709
    10. 'z' → logprob: -6.02951717376709

Token 52: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3896433115005493
    2. ' s' → logprob: -2.2646431922912598
    3. '  ' → logprob: -2.2646431922912598
    4. 's' → logprob: -2.5146431922912598
    5. '<|end|>' → logprob: -3.7646431922912598
    6. '   ' → logprob: -4.76464319229126
    7. '  
' → logprob: -7.26464319229126
    8. '>s' → logprob: -8.139643669128418
    9. ' t' → logprob: -8.889643669128418
    10. '<|end|>' → logprob: -8.889643669128418

Token 53: '  ' (ID: 256)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.916068971157074
    2. 's' → logprob: -1.5410690307617188
    3. ' ' → logprob: -1.5410690307617188
    4. '<|end|>' → logprob: -1.7910690307617188
    5. '  ' → logprob: -5.916069030761719
    6. ' t' → logprob: -6.666069030761719
    7. '<|end|>' → logprob: -8.041069030761719
    8. '   ' → logprob: -9.541069030761719
    9. ',s' → logprob: -9.791069030761719
    10. '	s' → logprob: -10.041069030761719

Token 54: ' if' (ID: 538)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5803390741348267
    2. 's' → logprob: -0.8303390741348267
    3. ' t' → logprob: -6.455338954925537
    4. ' ' → logprob: -6.830338954925537
    5. 't' → logprob: -7.580338954925537
    6. 'k' → logprob: -8.080339431762695
    7. '  ' → logprob: -8.455339431762695
    8. ' y' → logprob: -8.830339431762695
    9. ' i' → logprob: -8.955339431762695
    10. ' k' → logprob: -9.080339431762695

Token 55: ' t' (ID: 260)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.34178096055984497
    2. 'k' → logprob: -2.0917809009552
    3. ' z' → logprob: -2.5917809009552
    4. ' X' → logprob: -3.2167809009552
    5. ' t' → logprob: -3.9667809009552
    6. ' y' → logprob: -4.341781139373779
    7. 'X' → logprob: -4.966781139373779
    8. 'z' → logprob: -5.091781139373779
    9. ' ' → logprob: -6.091781139373779
    10. 't' → logprob: -6.716781139373779

Token 56: '<' (ID: 27)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.661226511001587
    2. '>=' → logprob: -1.786226511001587
    3. '<=' → logprob: -1.786226511001587
    4. '==' → logprob: -1.911226511001587
    5. '>s' → logprob: -2.411226511001587
    6. ' s' → logprob: -3.286226511001587
    7. 's' → logprob: -3.411226511001587
    8. '<s' → logprob: -3.786226511001587
    9. ' >' → logprob: -3.911226511001587
    10. '<' → logprob: -3.911226511001587

Token 57: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3999931514263153
    2. 'i' → logprob: -1.3999931812286377
    3. 'z' → logprob: -3.7749931812286377
    4. ' k' → logprob: -3.8999931812286377
    5. ' i' → logprob: -4.024992942810059
    6. 's' → logprob: -4.774992942810059
    7. '=' → logprob: -5.649992942810059
    8. 'len' → logprob: -5.899992942810059
    9. ' z' → logprob: -6.024992942810059
    10. '=k' → logprob: -6.524992942810059

Token 58: ':z' (ID: 196439)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040600698441267014
    2. ' :' → logprob: -3.5406007766723633
    3. ':k' → logprob: -6.040600776672363
    4. ':
' → logprob: -6.040600776672363
    5. ':s' → logprob: -6.790600776672363
    6. ' ' → logprob: -6.790600776672363
    7. ':z' → logprob: -7.290600776672363
    8. ' and' → logprob: -7.415600776672363
    9. ':return' → logprob: -7.415600776672363
    10. ':t' → logprob: -7.540600776672363

Token 59: '[i' (ID: 1768)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1647297441959381
    2. '=' → logprob: -2.0397298336029053
    3. 'append' → logprob: -4.539729595184326
    4. '=k' → logprob: -5.539729595184326
    5. '=z' → logprob: -6.039729595184326
    6. '.remove' → logprob: -6.289729595184326
    7. '.pop' → logprob: -7.789729595184326
    8. '.extend' → logprob: -8.039730072021484
    9. '+=' → logprob: -8.164730072021484
    10. '.' → logprob: -8.289730072021484

Token 60: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1444806307554245
    2. ']=' → logprob: -3.1444807052612305
    3. '>=' → logprob: -3.3944807052612305
    4. '>' → logprob: -4.3944807052612305
    5. '=k' → logprob: -4.3944807052612305
    6. '=i' → logprob: -5.2694807052612305
    7. '=>' → logprob: -5.6444807052612305
    8. ']' → logprob: -5.7694807052612305
    9. '=s' → logprob: -6.0194807052612305
    10. ' =' → logprob: -6.1444807052612305

Token 61: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001953967846930027
    2. 'k' → logprob: -6.626954078674316
    3. '0' → logprob: -8.376954078674316
    4. ' t' → logprob: -8.876954078674316
    5. '-' → logprob: -9.376954078674316
    6. 's' → logprob: -10.126954078674316
    7. '-t' → logprob: -10.251954078674316
    8. '1' → logprob: -10.626954078674316
    9. 'z' → logprob: -11.376954078674316
    10. 'len' → logprob: -11.501954078674316

Token 62: '
' (ID: 198)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -1.09056556224823
    2. '   ' → logprob: -1.09056556224823
    3. ' ' → logprob: -1.34056556224823
    4. ' else' → logprob: -3.3405656814575195
    5. '     ' → logprob: -4.4655656814575195
    6. 'else' → logprob: -4.9655656814575195
    7. '    ' → logprob: -5.0905656814575195
    8. '      ' → logprob: -5.8405656814575195
    9. '       ' → logprob: -7.4655656814575195
    10. ' elif' → logprob: -7.7155656814575195

Token 63: '  ' (ID: 256)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4530488848686218
    2. '  ' → logprob: -1.2030489444732666
    3. '   ' → logprob: -2.9530489444732666
    4. ' else' → logprob: -5.4530487060546875
    5. 'else' → logprob: -6.0780487060546875
    6. ' i' → logprob: -6.3280487060546875
    7. '     ' → logprob: -6.9530487060546875
    8. '    ' → logprob: -7.3280487060546875
    9. ' elif' → logprob: -8.078048706054688
    10. 'i' → logprob: -8.203048706054688

Token 64: ' s' (ID: 265)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.8183964490890503
    2. ' ' → logprob: -0.9433964490890503
    3. '   ' → logprob: -1.8183964490890503
    4. ' i' → logprob: -5.56839656829834
    5. 'i' → logprob: -6.44339656829834
    6. '     ' → logprob: -7.44339656829834
    7. '    ' → logprob: -8.06839656829834
    8. '      ' → logprob: -8.31839656829834
    9. 's' (adapté à ' s') → logprob: -9.19339656829834
    10. 'k' → logprob: -9.44339656829834

Token 65: '=k' (ID: 105633)
  Prédit: '=t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=t' → logprob: -0.17611995339393616
    2. '=k' → logprob: -1.9261199235916138
    3. '=' → logprob: -4.176119804382324
    4. ' =' → logprob: -8.676119804382324
    5. '+=' → logprob: -9.176119804382324
    6. '=s' → logprob: -9.426119804382324
    7. '=z' → logprob: -10.926119804382324
    8. '=i' → logprob: -12.051119804382324
    9. '=tk' → logprob: -12.301119804382324
    10. '<t' → logprob: -12.551119804382324

Token 66: ';i' (ID: 9372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06264398247003555
    2. '  ' → logprob: -2.9376440048217773
    3. '   ' → logprob: -5.062644004821777
    4. '<|end|>' → logprob: -7.562644004821777
    5. ' i' → logprob: -8.562644004821777
    6. '0' → logprob: -8.937644004821777
    7. 'i' → logprob: -9.812644004821777
    8. '6' → logprob: -10.187644004821777
    9. '++' → logprob: -10.312644004821777
    10. '     ' → logprob: -10.562644004821777

Token 67: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03959517925977707
    2. '+' → logprob: -4.039595127105713
    3. '=' → logprob: -4.539595127105713
    4. '=i' → logprob: -5.039595127105713
    5. ' +=' → logprob: -5.664595127105713
    6. '<|end|>' → logprob: -8.414595603942871
    7. '++' → logprob: -8.914595603942871
    8. 'i' → logprob: -9.289595603942871
    9. '+i' → logprob: -9.914595603942871
    10. ']+=' → logprob: -10.914595603942871

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.829823102336377e-05
    2. ' ' → logprob: -9.25009822845459
    3. '+' → logprob: -13.37509822845459
    4. '0' → logprob: -15.93759822845459
    5. 'i' → logprob: -16.562599182128906
    6. '```' → logprob: -16.625099182128906
    7. '１' → logprob: -17.562599182128906
    8. '>' → logprob: -17.750099182128906
    9. '۱' → logprob: -17.812599182128906
    10. '2' → logprob: -18.250099182128906

Token 69: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8803896307945251
    2. '  ' → logprob: -1.63038969039917
    3. ' else' → logprob: -1.63038969039917
    4. 'else' → logprob: -1.75538969039917
    5. '<|end|>' → logprob: -4.00538969039917
    6. '   ' → logprob: -7.38038969039917
    7. '[' → logprob: -7.50538969039917
    8. '```' → logprob: -8.755389213562012
    9. ' elif' → logprob: -9.005389213562012
    10. '[]' → logprob: -9.130389213562012

Token 70: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19338102638721466
    2. ' else' → logprob: -2.5683810710906982
    3. 'else' → logprob: -2.9433810710906982
    4. '  ' → logprob: -3.3183810710906982
    5. 'z' → logprob: -4.943380832672119
    6. ' z' → logprob: -6.318380832672119
    7. '   ' → logprob: -8.068381309509277
    8. '```' → logprob: -8.568381309509277
    9. '...' → logprob: -9.068381309509277
    10. '[' → logprob: -9.318381309509277

Token 71: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.11946248263120651
    2. 'else' → logprob: -2.744462490081787
    3. ' ' → logprob: -3.494462490081787
    4. ' z' → logprob: -4.619462490081787
    5. 'z' → logprob: -5.119462490081787
    6. '  ' → logprob: -6.994462490081787
    7. ' if' → logprob: -7.494462490081787
    8. '...' → logprob: -8.744462013244629
    9. '[z' → logprob: -9.119462013244629
    10. '```' → logprob: -9.744462013244629

Token 72: ':
' (ID: 734)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.09838992357254028
    2. '  ' → logprob: -2.4733898639678955
    3. 'z' → logprob: -4.973390102386475
    4. ' ' → logprob: -6.223390102386475
    5. ' if' → logprob: -8.723389625549316
    6. '   ' → logprob: -9.598389625549316
    7. ':' → logprob: -10.098389625549316
    8. ' x' → logprob: -10.223389625549316
    9. ',z' → logprob: -10.473389625549316
    10. '	z' → logprob: -10.598389625549316

Token 73: '  ' (ID: 256)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.06755883246660233
    2. 'z' → logprob: -2.817558765411377
    3. '  ' → logprob: -5.317558765411377
    4. ' ' → logprob: -7.817558765411377
    5. '	z' → logprob: -9.442559242248535
    6. '   ' → logprob: -9.942559242248535
    7. '```' → logprob: -9.942559242248535
    8. ' if' → logprob: -10.317559242248535
    9. 'Z' → logprob: -12.255059242248535
    10. '    ' → logprob: -12.317559242248535

Token 74: ' t' (ID: 260)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2836470603942871
    2. 'z' → logprob: -1.408647060394287
    3. '  ' → logprob: -6.158647060394287
    4. ' ' → logprob: -8.408647537231445
    5. '	z' → logprob: -10.533647537231445
    6. '```' → logprob: -10.908647537231445
    7. ' if' → logprob: -11.033647537231445
    8. '   ' → logprob: -11.158647537231445
    9. 't' (adapté à ' t') → logprob: -11.471147537231445
    10. 'Z' → logprob: -11.846147537231445

Token 75: '=X' (ID: 143117)
  Prédit: '=z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=z' → logprob: -0.6066104769706726
    2. '=X' → logprob: -1.3566105365753174
    3. '=' → logprob: -1.8566105365753174
    4. ' =' → logprob: -3.4816105365753174
    5. '=x' → logprob: -5.481610298156738
    6. '=len' → logprob: -5.731610298156738
    7. '=s' → logprob: -6.481610298156738
    8. '=k' → logprob: -7.981610298156738
    9. '=e' → logprob: -8.356610298156738
    10. '=j' → logprob: -8.981610298156738

Token 76: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0003820524725597352
    2. 'find' → logprob: -8.500382423400879
    3. '.' → logprob: -9.625382423400879
    4. ' .' → logprob: -9.625382423400879
    5. '.append' → logprob: -11.375382423400879
    6. '.r' → logprob: -11.375382423400879
    7. '=find' → logprob: -11.500382423400879
    8. '.findall' → logprob: -12.250382423400879
    9. '.index' → logprob: -14.125382423400879
    10. ' find' → logprob: -14.125382423400879

Token 77: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0041463072411715984
    2. '(' → logprob: -5.504146099090576
    3. ' (' → logprob: -10.629146575927734
    4. '<|end|>' → logprob: -11.254146575927734
    5. '(
' → logprob: -11.629146575927734
    6. '(x' → logprob: -11.754146575927734
    7. 'y' → logprob: -12.129146575927734
    8. '(user' → logprob: -12.754146575927734
    9. '('' → logprob: -13.004146575927734
    10. ' y' → logprob: -13.254146575927734

Token 78: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.36135005950927734
    2. 's' → logprob: -1.3613500595092773
    3. ' s' → logprob: -3.7363500595092773
    4. '(s' → logprob: -3.9863500595092773
    5. ',' → logprob: -6.236350059509277
    6. ',t' → logprob: -7.361350059509277
    7. ' ,' → logprob: -7.736350059509277
    8. ' ' → logprob: -8.361350059509277
    9. 't' → logprob: -8.486350059509277
    10. 'a' → logprob: -9.111350059509277

Token 79: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009027653140947223
    2. ' )' → logprob: -7.6259026527404785
    3. ')
' → logprob: -9.000903129577637
    4. ')>' → logprob: -9.250903129577637
    5. ')+' → logprob: -10.125903129577637
    6. ' ' → logprob: -10.250903129577637
    7. ',' → logprob: -10.375903129577637
    8. ')<' → logprob: -11.625903129577637
    9. '())' → logprob: -12.000903129577637
    10. ')return' → logprob: -12.000903129577637

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030606575310230255
    2. 'len' → logprob: -6.128060817718506
    3. '100' → logprob: -7.503060817718506
    4. ' ' → logprob: -8.628060340881348
    5. '999' → logprob: -10.378060340881348
    6. '-' → logprob: -10.878060340881348
    7. ' len' → logprob: -11.003060340881348
    8. '0' → logprob: -11.628060340881348
    9. '10' → logprob: -11.690560340881348
    10. 's' → logprob: -12.003060340881348

Token 81: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7091251611709595
    2. 'z' → logprob: -0.8341251611709595
    3. '  ' → logprob: -3.20912504196167
    4. ' z' → logprob: -3.45912504196167
    5. ',z' → logprob: -7.45912504196167
    6. '<|end|>' → logprob: -7.45912504196167
    7. '...' → logprob: -8.709125518798828
    8. '[z' → logprob: -8.709125518798828
    9. '	z' → logprob: -9.084125518798828
    10. '(z' → logprob: -9.709125518798828

Token 82: '  ' (ID: 256)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.021592779085040092
    2. ' z' → logprob: -4.021592617034912
    3. '  ' → logprob: -6.271592617034912
    4. ' ' → logprob: -6.521592617034912
    5. 'Z' → logprob: -10.52159309387207
    6. '<|end|>' → logprob: -11.52159309387207
    7. '[z' → logprob: -11.77159309387207
    8. ',z' → logprob: -12.02159309387207
    9. '	z' → logprob: -12.02159309387207
    10. '
' → logprob: -12.64659309387207

Token 83: ' if' (ID: 538)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03865205869078636
    2. ' z' → logprob: -3.288651943206787
    3. 'if' (adapté à ' if') → logprob: -7.788651943206787
    4. ' if' → logprob: -9.038652420043945
    5. '  ' → logprob: -10.038652420043945
    6. 't' → logprob: -11.288652420043945
    7. ' ' → logprob: -11.288652420043945
    8. 'Z' → logprob: -13.163652420043945
    9. ' t' → logprob: -13.288652420043945
    10. 'k' → logprob: -14.663652420043945

Token 84: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.13403719663619995
    2. ' t' → logprob: -2.1340372562408447
    3. ' not' → logprob: -5.134037017822266
    4. 'z' → logprob: -7.259037017822266
    5. 'not' → logprob: -8.009037017822266
    6. ' z' → logprob: -9.259037017822266
    7. '`t' → logprob: -10.884037017822266
    8. ' ' → logprob: -11.509037017822266
    9. 'len' → logprob: -11.509037017822266
    10. ' len' → logprob: -12.009037017822266

Token 85: ':z' (ID: 196439)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.23656025528907776
    2. '==' → logprob: -2.361560344696045
    3. '<' → logprob: -3.236560344696045
    4. '0' → logprob: -3.486560344696045
    5. ':' → logprob: -4.361560344696045
    6. ' >' → logprob: -4.611560344696045
    7. '>=' → logprob: -5.361560344696045
    8. ' ' → logprob: -5.361560344696045
    9. ' ==' → logprob: -6.111560344696045
    10. '>x' → logprob: -6.361560344696045

Token 86: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.11286671459674835
    2. 'z' → logprob: -2.4878666400909424
    3. 'append' → logprob: -4.7378668785095215
    4. ',z' → logprob: -5.4878668785095215
    5. '=z' → logprob: -5.8628668785095215
    6. ' z' → logprob: -6.4878668785095215
    7. '  ' → logprob: -6.7378668785095215
    8. '   ' → logprob: -6.9878668785095215
    9. '=' → logprob: -7.1128668785095215
    10. '+=' → logprob: -7.2378668785095215

Token 87: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.04913591220974922
    2. '=' → logprob: -3.04913592338562
    3. '[' → logprob: -8.1741361618042
    4. '=z' → logprob: -8.4241361618042
    5. '=t' → logprob: -11.5491361618042
    6. '=[]' → logprob: -11.7991361618042
    7. '=k' → logprob: -12.6741361618042
    8. '=[[' → logprob: -12.7991361618042
    9. '=x' → logprob: -12.9241361618042
    10. '[z' → logprob: -12.9241361618042

Token 88: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016822855919599533
    2. ' t' → logprob: -4.266822814941406
    3. '[t' → logprob: -6.016822814941406
    4. ' [' → logprob: -8.766822814941406
    5. '[' → logprob: -10.641822814941406
    6. '`t' → logprob: -10.641822814941406
    7. ' ' → logprob: -12.391822814941406
    8. '1' → logprob: -13.141822814941406
    9. '(t' → logprob: -13.266822814941406
    10. '`' → logprob: -13.766822814941406

Token 89: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08057206124067307
    2. ' ]' → logprob: -2.5805721282958984
    3. ']
' → logprob: -6.955572128295898
    4. ' ' → logprob: -8.580572128295898
    5. '<|end|>' → logprob: -8.580572128295898
    6. '
' → logprob: -8.955572128295898
    7. ' ]
' → logprob: -9.080572128295898
    8. ']>' → logprob: -10.830572128295898
    9. '`]' → logprob: -11.455572128295898
    10. ']

' → logprob: -11.580572128295898

Token 90: ' a' (ID: 261)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9768794178962708
    2. ' ' → logprob: -1.476879358291626
    3. 'print' → logprob: -2.351879358291626
    4. ' if' → logprob: -2.476879358291626
    5. ' print' → logprob: -3.101879358291626
    6. 'a' → logprob: -3.226879358291626
    7. 'else' → logprob: -3.476879358291626
    8. ' a' → logprob: -3.601879358291626
    9. '[]' → logprob: -4.351879596710205
    10. '[' → logprob: -4.476879596710205

Token 91: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1628791242837906
    2. '.' → logprob: -1.9128791093826294
    3. '+' → logprob: -6.53787899017334
    4. '[' → logprob: -7.66287899017334
    5. '<|end|>' → logprob: -8.53787899017334
    6. '.setdefault' → logprob: -9.28787899017334
    7. '.pop' → logprob: -9.41287899017334
    8. '+=' → logprob: -9.78787899017334
    9. '+.' → logprob: -10.41287899017334
    10. '.sort' → logprob: -10.53787899017334

Token 92: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.12293414771556854
    2. '[' → logprob: -2.997934103012085
    3. '[z' → logprob: -3.372934103012085
    4. '=' → logprob: -3.997934103012085
    5. '=z' → logprob: -4.497934341430664
    6. '[a' → logprob: -7.747934341430664
    7. '=[]' → logprob: -7.872934341430664
    8. '=[[' → logprob: -8.747934341430664
    9. '[len' → logprob: -8.872934341430664
    10. 'z' → logprob: -9.497934341430664

Token 93: 'z' (ID: 89)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.722170352935791
    2. '1' → logprob: -1.097170352935791
    3. 'z' → logprob: -2.097170352935791
    4. ' len' → logprob: -4.722170352935791
    5. 'X' → logprob: -5.222170352935791
    6. ''z' → logprob: -5.347170352935791
    7. ' ' → logprob: -5.597170352935791
    8. ' z' → logprob: -5.597170352935791
    9. ''' → logprob: -5.597170352935791
    10. '[' → logprob: -5.847170352935791

Token 94: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00279323011636734
    2. ' ]' → logprob: -6.627793312072754
    3. ')]' → logprob: -7.502793312072754
    4. ']
' → logprob: -7.627793312072754
    5. ')' → logprob: -9.252793312072754
    6. '])' → logprob: -9.377793312072754
    7. ']

' → logprob: -9.502793312072754
    8. '']' → logprob: -10.127793312072754
    9. '[' → logprob: -11.002793312072754
    10. ' ' → logprob: -11.252793312072754

Token 95: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1468055695295334
    2. '[' → logprob: -4.021805763244629
    3. '```' → logprob: -4.146805763244629
    4. ' 
' → logprob: -4.396805763244629
    5. ']' → logprob: -4.521805763244629
    6. '<|end|>' → logprob: -4.646805763244629
    7. '
' → logprob: -4.896805763244629
    8. ' ' → logprob: -4.896805763244629
    9. 'p' → logprob: -5.146805763244629
    10. ' print' → logprob: -5.271805763244629

Token 96: '(*' (ID: 9000)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3288283348083496
    2. '(len' → logprob: -2.0788283348083496
    3. '(' → logprob: -2.2038283348083496
    4. '(max' → logprob: -4.32882833480835
    5. '(*' → logprob: -4.45382833480835
    6. '(sum' → logprob: -4.95382833480835
    7. 'a' → logprob: -5.45382833480835
    8. '(min' → logprob: -5.57882833480835
    9. '('' → logprob: -5.95382833480835
    10. '(sorted' → logprob: -7.07882833480835

Token 97: 'map' (ID: 3726)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0469000339508057
    2. 'max' → logprob: -1.4219000339508057
    3. 'map' → logprob: -1.6719000339508057
    4. 'sorted' → logprob: -1.7969000339508057
    5. 'min' → logprob: -3.5469000339508057
    6. '[max' → logprob: -5.296899795532227
    7. ' max' → logprob: -5.421899795532227
    8. ' a' → logprob: -5.671899795532227
    9. '[a' → logprob: -5.671899795532227
    10. ' map' → logprob: -5.671899795532227

Token 98: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00018089536752086133
    2. 'len' → logprob: -9.375181198120117
    3. '(' → logprob: -10.375181198120117
    4. '(lambda' → logprob: -10.375181198120117
    5. ' len' → logprob: -11.125181198120117
    6. '(sum' → logprob: -11.875181198120117
    7. '(
' → logprob: -13.375181198120117
    8. '(min' → logprob: -13.375181198120117
    9. ',len' → logprob: -13.500181198120117
    10. '[len' → logprob: -13.625181198120117

Token 99: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.5280647873878479
    2. '(a' → logprob: -0.9030647873878479
    3. 'a' → logprob: -6.278064727783203
    4. ',' → logprob: -6.403064727783203
    5. ' ,' → logprob: -7.028064727783203
    6. ' a' → logprob: -7.903064727783203
    7. ' (' → logprob: -9.528064727783203
    8. ',(' → logprob: -10.278064727783203
    9. '(' → logprob: -10.653064727783203
    10. ')a' → logprob: -13.028064727783203

Token 100: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002549623604863882
    2. '))' → logprob: -6.002549648284912
    3. ' )' → logprob: -9.627549171447754
    4. ')`' → logprob: -12.752549171447754
    5. ')
' → logprob: -13.627549171447754
    6. '`)' → logprob: -14.127549171447754
    7. '())' → logprob: -14.252549171447754
    8. ')))' → logprob: -14.502549171447754
    9. ')a' → logprob: -15.127549171447754
    10. ')#' → logprob: -15.252549171447754

Token 101: 'sep' (ID: 46643)
  Prédit: 'sep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.10376636683940887
    2. 'max' → logprob: -2.853766441345215
    3. ')' → logprob: -3.353766441345215
    4. ' sep' → logprob: -5.603766441345215
    5. 'key' → logprob: -6.853766441345215
    6. 'end' → logprob: -7.603766441345215
    7. 'min' → logprob: -8.228766441345215
    8. '*' → logprob: -9.103766441345215
    9. ' max' → logprob: -9.478766441345215
    10. 'se' → logprob: -9.603766441345215

Token 102: '='\' (ID: 106410)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.39006307721138
    2. '=' → logprob: -1.3900630474090576
    3. '="' → logprob: -3.2650630474090576
    4. '='\' → logprob: -3.7650630474090576
    5. '="\' → logprob: -5.265063285827637
    6. '"' → logprob: -5.515063285827637
    7. ''' → logprob: -7.015063285827637
    8. '=\' → logprob: -7.265063285827637
    9. '=',' → logprob: -7.890063285827637
    10. '("="' → logprob: -8.390063285827637

Token 103: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6312432289123535
    2. 'n' → logprob: -1.0062432289123535
    3. '
' → logprob: -2.5062432289123535
    4. ' ' → logprob: -5.0062432289123535
    5. ' 
' → logprob: -5.3812432289123535
    6. '  
' → logprob: -6.6312432289123535
    7. ''' → logprob: -6.6312432289123535
    8. '\' → logprob: -6.7562432289123535
    9. '' → logprob: -7.1312432289123535
    10. ')' → logprob: -7.3812432289123535

Token 104: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023350412026047707
    2. '')' → logprob: -3.773350477218628
    3. ' )' → logprob: -10.148350715637207
    4. '")' → logprob: -10.148350715637207
    5. '))' → logprob: -11.648350715637207
    6. '`)' → logprob: -12.148350715637207
    7. ')")' → logprob: -12.398350715637207
    8. ')`' → logprob: -12.898350715637207
    9. ')
' → logprob: -13.523350715637207
    10. ')'' → logprob: -13.773350715637207


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 26.47%
Précision adaptée (1ère position): 26.47%
Précision (top 10): 71.57%
================================================================================
