================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def lcs(X,Y):
  L = []
  for yk in Y:
    prev_idx = -1
    for l_idx, l in enumerate(L):
      x_idx = X.find(yk, prev_idx + 1)
      if x_idx < 0:
        break
      L[l_idx] = min(l, x_idx) 
      prev_idx = l
    else:
      x_idx = X.find(yk, prev_idx + 1)
      if x_idx >= 0:
        L.append(x_idx)

  return len(L)

def main():
  q = int(input())
  for _ in range(q):
    X = input()
    Y = input()
    print(lcs(X,Y))

if __name__ == "__main__":
  import sys, io
  main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' l' (ID: 305)
  → Token d'amorce (pas de prédiction)

Token 2: 'cs' (ID: 8102)
  → Token d'amorce (pas de prédiction)

Token 3: '(X' (ID: 17061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13099457323551178
    2. '(' → logprob: -2.1309945583343506
    3. '```' → logprob: -6.25599479675293
    4. '(_' → logprob: -7.75599479675293
    5. ' (' → logprob: -8.38099479675293
    6. '_(' → logprob: -8.50599479675293
    7. '__' → logprob: -8.63099479675293
    8. '(_:' → logprob: -8.75599479675293
    9. '(a' → logprob: -8.88099479675293
    10. 'def' → logprob: -9.00599479675293

Token 4: ',Y' (ID: 71464)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03199906647205353
    2. ')' → logprob: -3.906999111175537
    3. '```' → logprob: -5.781999111175537
    4. ',' → logprob: -5.906999111175537
    5. '<|end|>' → logprob: -6.281999111175537
    6. '):' → logprob: -7.531999111175537
    7. '[i' → logprob: -8.031998634338379
    8. '[
' → logprob: -8.031998634338379
    9. '[n' → logprob: -8.531998634338379
    10. '.' → logprob: -8.531998634338379

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012689759023487568
    2. ')' → logprob: -5.137689590454102
    3. '[' → logprob: -5.762689590454102
    4. ':' → logprob: -6.512689590454102
    5. ',' → logprob: -6.887689590454102
    6. '[]):' → logprob: -7.887689590454102
    7. '):
' → logprob: -8.512689590454102
    8. '```' → logprob: -9.012689590454102
    9. ''):' → logprob: -9.512689590454102
    10. ']:' → logprob: -9.637689590454102

Token 6: ' ' (ID: 220)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21271100640296936
    2. '   ' → logprob: -1.962710976600647
    3. '():' → logprob: -3.2127110958099365
    4. '(' → logprob: -5.712710857391357
    5. '    
' → logprob: -6.837710857391357
    6. '"""' → logprob: -7.337710857391357
    7. '(n' → logprob: -7.462710857391357
    8. '_' → logprob: -7.462710857391357
    9. '```' → logprob: -7.462710857391357
    10. ':
' → logprob: -7.587710857391357

Token 7: ' L' (ID: 451)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6252954602241516
    2. ':' → logprob: -1.2502954006195068
    3. ' ' → logprob: -2.000295400619507
    4. '_' → logprob: -4.125295639038086
    5. ' :' → logprob: -5.125295639038086
    6. '```' → logprob: -5.250295639038086
    7. '"' → logprob: -6.000295639038086
    8. '  ' → logprob: -6.125295639038086
    9. ''' → logprob: -6.375295639038086
    10. '"""' → logprob: -7.000295639038086

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.012133438140153885
    2. ' ' → logprob: -5.637133598327637
    3. '[i' → logprob: -5.637133598327637
    4. '   ' → logprob: -6.887133598327637
    5. '[][]' → logprob: -6.887133598327637
    6. '[]' → logprob: -7.262133598327637
    7. '[len' → logprob: -7.762133598327637
    8. '[:]' → logprob: -7.887133598327637
    9. '['' → logprob: -8.762133598327637
    10. ']' → logprob: -8.887133598327637

Token 9: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.47409698367118835
    2. ' [[' → logprob: -0.9740970134735107
    3. '[' → logprob: -11.84909725189209
    4. ' [[[' → logprob: -12.34909725189209
    5. '[]' → logprob: -12.84909725189209
    6. ' [' → logprob: -13.47409725189209
    7. 'len' → logprob: -13.59909725189209
    8. '[len' → logprob: -13.97409725189209
    9. ' []' → logprob: -14.09909725189209
    10. '[['' → logprob: -14.47409725189209

Token 10: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7238547205924988
    2. ' ' → logprob: -0.7238547205924988
    3. 'for' → logprob: -4.8488545417785645
    4. '(' → logprob: -4.9738545417785645
    5. ' for' → logprob: -5.8488545417785645
    6. '_' → logprob: -6.0988545417785645
    7. '   ' → logprob: -6.3488545417785645
    8. '  ' → logprob: -6.3488545417785645
    9. '\' → logprob: -6.5988545417785645
    10. '\n' → logprob: -7.3488545417785645

Token 11: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0722646713256836
    2. ' ' → logprob: -2.8222646713256836
    3. ' [' → logprob: -6.322264671325684
    4. '[
' → logprob: -6.447264671325684
    5. '\' → logprob: -6.697264671325684
    6. '0' → logprob: -7.197264671325684
    7. ',' → logprob: -7.447264671325684
    8. '\n' → logprob: -7.947264671325684
    9. '[n' → logprob: -8.072264671325684
    10. '[]' → logprob: -8.072264671325684

Token 12: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18401286005973816
    2. ' i' → logprob: -1.8090128898620605
    3. 'i' → logprob: -6.0590128898620605
    4. '  ' → logprob: -6.4340128898620605
    5. ' j' → logprob: -9.059012413024902
    6. '_' → logprob: -10.309012413024902
    7. ' _' → logprob: -10.559012413024902
    8. ' ```' → logprob: -10.934012413024902
    9. ' in' → logprob: -11.184012413024902
    10. ' ' → logprob: -11.309012413024902

Token 13: 'k' (ID: 74)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03051968663930893
    2. 'n' → logprob: -4.155519485473633
    3. 'in' → logprob: -4.905519485473633
    4. ' ' → logprob: -5.655519485473633
    5. '  ' → logprob: -7.155519485473633
    6. ' n' → logprob: -7.280519485473633
    7. ',' → logprob: -7.530519485473633
    8. '   ' → logprob: -7.655519485473633
    9. '[' → logprob: -7.780519485473633
    10. '[n' → logprob: -9.030519485473633

Token 14: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019088374450802803
    2. ' ' → logprob: -4.644088268280029
    3. 'in' → logprob: -5.144088268280029
    4. 'n' → logprob: -5.894088268280029
    5. ',' → logprob: -8.269088745117188
    6. '  ' → logprob: -8.769088745117188
    7. 'y' → logprob: -9.269088745117188
    8. ' n' → logprob: -10.144088745117188
    9. '   ' → logprob: -10.269088745117188
    10. ' i' → logprob: -10.269088745117188

Token 15: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.5819252729415894
    2. 'Y' → logprob: -0.8319252729415894
    3. ' range' → logprob: -5.581925392150879
    4. 'range' → logprob: -6.331925392150879
    5. ' ' → logprob: -8.206925392150879
    6. 'X' → logprob: -9.331925392150879
    7. ' X' → logprob: -10.706925392150879
    8. ' xrange' → logprob: -11.831925392150879
    9. '	Y' → logprob: -11.956925392150879
    10. '  ' → logprob: -12.331925392150879

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005308704450726509
    2. ' ' → logprob: -5.880308628082275
    3. ' :' → logprob: -6.380308628082275
    4. '   ' → logprob: -8.380309104919434
    5. '  ' → logprob: -8.755309104919434
    6. '=' → logprob: -9.005309104919434
    7. '    ' → logprob: -9.755309104919434
    8. '[' → logprob: -9.755309104919434
    9. ' =' → logprob: -10.130309104919434
    10. ':
' → logprob: -10.380309104919434

Token 17: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3572160601615906
    2. '   ' → logprob: -1.8572161197662354
    3. '  ' → logprob: -2.3572161197662354
    4. '[' → logprob: -3.7322161197662354
    5. '    ' → logprob: -4.232215881347656
    6. ' [' → logprob: -5.107215881347656
    7. '     ' → logprob: -6.857215881347656
    8. '  ' → logprob: -7.232215881347656
    9. ' []' → logprob: -7.857215881347656
    10. ' L' → logprob: -7.857215881347656

Token 18: ' prev' (ID: 10258)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.9170750975608826
    2. ' ' → logprob: -1.4170751571655273
    3. '[' → logprob: -2.2920751571655273
    4. 'L' → logprob: -2.2920751571655273
    5. '   ' → logprob: -2.4170751571655273
    6. ' [' → logprob: -3.2920751571655273
    7. '  ' → logprob: -4.792075157165527
    8. '    ' → logprob: -4.792075157165527
    9. ' []' → logprob: -5.792075157165527
    10. '[]' → logprob: -5.917075157165527

Token 19: '_idx' (ID: 15257)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.41981780529022217
    2. '_row' → logprob: -1.4198178052902222
    3. ' =' → logprob: -3.1698179244995117
    4. '_val' → logprob: -4.044817924499512
    5. '_line' → logprob: -4.044817924499512
    6. '=' → logprob: -4.544817924499512
    7. ' ' → logprob: -5.669817924499512
    8. '_value' → logprob: -6.419817924499512
    9. '_i' → logprob: -6.669817924499512
    10. '_l' → logprob: -6.919817924499512

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17377175390720367
    2. '_' → logprob: -2.423771858215332
    3. ' ' → logprob: -3.173771858215332
    4. '=' → logprob: -3.798771858215332
    5. ',' → logprob: -5.923771858215332
    6. 's' → logprob: -6.798771858215332
    7. ' _' → logprob: -7.048771858215332
    8. '+' → logprob: -7.423771858215332
    9. ' +=' → logprob: -8.173771858215332
    10. '  ' → logprob: -8.673771858215332

Token 21: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8135977983474731
    2. '0' → logprob: -1.1885977983474731
    3. ' -' → logprob: -1.8135977983474731
    4. ' ' → logprob: -2.4385976791381836
    5. ' None' → logprob: -7.438597679138184
    6. ' len' → logprob: -7.813597679138184
    7. 'None' → logprob: -8.063597679138184
    8. 'len' → logprob: -8.813597679138184
    9. '[]' → logprob: -9.438597679138184
    10. ' []' → logprob: -10.313597679138184

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -12.500008583068848
    3. '2' → logprob: -12.625008583068848
    4. 'len' → logprob: -15.500008583068848
    5. '-' → logprob: -15.812508583068848
    6. '100' → logprob: -16.43750762939453
    7. '+' → logprob: -16.68750762939453
    8. '999' → logprob: -16.93750762939453
    9. '```' → logprob: -17.00000762939453
    10. '  ' → logprob: -17.25000762939453

Token 23: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7150185704231262
    2. '   ' → logprob: -1.3400185108184814
    3. ' for' → logprob: -2.0900185108184814
    4. 'for' (adapté à ' for') → logprob: -2.3400185108184814
    5. '    ' → logprob: -4.2150187492370605
    6. '  ' → logprob: -5.3400187492370605
    7. '<|end|>' → logprob: -5.7150187492370605
    8. '     ' → logprob: -5.9650187492370605
    9. '       ' → logprob: -6.9650187492370605
    10. ',' → logprob: -8.340018272399902

Token 26: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11676085740327835
    2. 'x' → logprob: -2.2417609691619873
    3. '	x' → logprob: -6.741760730743408
    4. ' xik' → logprob: -7.491760730743408
    5. ' xi' → logprob: -8.116761207580566
    6. '```' → logprob: -8.116761207580566
    7. '$x' → logprob: -8.366761207580566
    8. ')x' → logprob: -8.491761207580566
    9. '_x' → logprob: -8.741761207580566
    10. '`' → logprob: -8.991761207580566

Token 27: '_idx' (ID: 15257)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3834201395511627
    2. 'x' → logprob: -1.6334201097488403
    3. '_idx' → logprob: -3.13342022895813
    4. 'i' → logprob: -3.38342022895813
    5. ' in' → logprob: -3.88342022895813
    6. '_i' → logprob: -5.008419990539551
    7. 'j' → logprob: -5.133419990539551
    8. '_k' → logprob: -5.758419990539551
    9. '_x' → logprob: -6.258419990539551
    10. 'c' → logprob: -6.508419990539551

Token 28: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05166884511709213
    2. ',' → logprob: -3.176668882369995
    3. 'in' → logprob: -5.051668643951416
    4. ' ' → logprob: -6.676668643951416
    5. ' ,' → logprob: -7.051668643951416
    6. '  ' → logprob: -11.051669120788574
    7. '```' → logprob: -11.051669120788574
    8. ',k' → logprob: -11.926669120788574
    9. ',in' → logprob: -11.926669120788574
    10. 'n' → logprob: -12.176669120788574

Token 29: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6347978711128235
    2. 'x' → logprob: -0.7597978711128235
    3. ' ' → logprob: -7.509798049926758
    4. 'xl' → logprob: -7.634798049926758
    5. ' xl' → logprob: -8.134798049926758
    6. '	x' → logprob: -8.384798049926758
    7. '   ' → logprob: -9.259798049926758
    8. '_x' → logprob: -9.447298049926758
    9. '```' → logprob: -9.759798049926758
    10. ' xik' → logprob: -9.947298049926758

Token 30: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27842310070991516
    2. 'ine' → logprob: -2.5284230709075928
    3. 'c' → logprob: -3.2784230709075928
    4. 'et' → logprob: -3.5284230709075928
    5. 'etter' → logprob: -3.7784230709075928
    6. 'cs' → logprob: -4.028423309326172
    7. 's' → logprob: -4.653423309326172
    8. 'in' → logprob: -4.903423309326172
    9. 'ist' → logprob: -5.278423309326172
    10. 'en' → logprob: -5.403423309326172

Token 31: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.0013269031187519431
    2. 'enumer' → logprob: -6.626327037811279
    3. ' en' → logprob: -14.876326560974121
    4. '(en' → logprob: -15.376326560974121
    5. 'en' → logprob: -15.876326560974121
    6. ' enumer' → logprob: -16.126327514648438
    7. '.enumer' → logprob: -16.626327514648438
    8. '```' → logprob: -17.251327514648438
    9. 'Enumer' → logprob: -17.376327514648438
    10. 's' → logprob: -17.751327514648438

Token 32: '(L' (ID: 11075)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.4513266682624817
    2. 'L' → logprob: -1.451326608657837
    3. '(L' → logprob: -2.576326608657837
    4. '(X' → logprob: -3.951326608657837
    5. '(' → logprob: -4.201326847076416
    6. 'X' → logprob: -4.576326847076416
    7. ' X' → logprob: -5.201326847076416
    8. ')' → logprob: -7.201326847076416
    9. ' (' → logprob: -7.201326847076416
    10. ' ' → logprob: -7.576326847076416

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002412873087450862
    2. '):
' → logprob: -6.127412796020508
    3. ':' → logprob: -9.002412796020508
    4. ' ):' → logprob: -9.877412796020508
    5. '       ' → logprob: -11.252412796020508
    6. ' ' → logprob: -11.752412796020508
    7. ')' → logprob: -11.752412796020508
    8. '):
' → logprob: -12.127412796020508
    9. '[]):' → logprob: -12.252412796020508
    10. '   ' → logprob: -12.627412796020508

Token 34: '     ' (ID: 530)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3848486840724945
    2. '       ' → logprob: -1.384848713874817
    3. '     ' → logprob: -3.8848485946655273
    4. ':
' → logprob: -4.259848594665527
    5. '      ' → logprob: -5.009848594665527
    6. ' ' → logprob: -5.009848594665527
    7. ' :' → logprob: -5.759848594665527
    8. '[' → logprob: -6.134848594665527
    9. '<|end|>' → logprob: -6.134848594665527
    10. '   ' → logprob: -6.259848594665527

Token 35: ' x' (ID: 1215)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '_idx' (ID: 15257)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9907587170600891
    2. '.find' → logprob: -2.1157586574554443
    3. ' =' → logprob: -2.1157586574554443
    4. ' in' → logprob: -2.2407586574554443
    5. '.startswith' → logprob: -3.2407586574554443
    6. '_idx' → logprob: -3.4907586574554443
    7. '.append' → logprob: -3.6157586574554443
    8. '[' → logprob: -3.7407586574554443
    9. '_k' → logprob: -4.115758895874023
    10. '=' → logprob: -4.115758895874023

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.044555068016052246
    2. '=' → logprob: -3.169555187225342
    3. ',' → logprob: -6.794555187225342
    4. ' ' → logprob: -8.669554710388184
    5. ')' → logprob: -9.169554710388184
    6. '<|end|>' → logprob: -9.919554710388184
    7. 's' → logprob: -10.544554710388184
    8. '+' → logprob: -10.919554710388184
    9. '<|end|>' → logprob: -11.169554710388184
    10. '  ' → logprob: -12.169554710388184

Token 38: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8262780904769897
    2. ' X' → logprob: -1.0762780904769897
    3. ' l' → logprob: -2.0762782096862793
    4. 'l' → logprob: -2.5762782096862793
    5. 'x' → logprob: -4.701278209686279
    6. ' x' → logprob: -5.951278209686279
    7. ' Y' → logprob: -6.451278209686279
    8. 'Y' → logprob: -6.451278209686279
    9. ' ' → logprob: -6.451278209686279
    10. 'len' → logprob: -7.201278209686279

Token 39: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.4402921497821808
    2. '.index' → logprob: -1.3152921199798584
    3. '.' → logprob: -2.4402921199798584
    4. 'index' → logprob: -8.190292358398438
    5. ' .' → logprob: -8.315292358398438
    6. 'find' → logprob: -10.565292358398438
    7. '[' → logprob: -11.065292358398438
    8. ' index' → logprob: -11.565292358398438
    9. '.Index' → logprob: -11.690292358398438
    10. '.r' → logprob: -12.065292358398438

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08207910507917404
    2. '(l' → logprob: -2.5820791721343994
    3. '(y' → logprob: -6.45707893371582
    4. '('' → logprob: -7.33207893371582
    5. '(Y' → logprob: -7.83207893371582
    6. '((' → logprob: -8.20707893371582
    7. '(X' → logprob: -9.20707893371582
    8. '(x' → logprob: -9.33207893371582
    9. '(L' → logprob: -10.58207893371582
    10. ' (' → logprob: -11.33207893371582

Token 41: 'yk' (ID: 11430)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20199473202228546
    2. 'yk' → logprob: -1.701994776725769
    3. ' y' → logprob: -8.076994895935059
    4. ' (' → logprob: -9.576994895935059
    5. ')' → logprob: -10.076994895935059
    6. '(x' → logprob: -10.201994895935059
    7. '(y' → logprob: -10.701994895935059
    8. 'x' → logprob: -11.326994895935059
    9. 'l' → logprob: -11.576994895935059
    10. 'ykl' → logprob: -11.826994895935059

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010095203295350075
    2. ',l' → logprob: -5.510095119476318
    3. ' ,' → logprob: -5.760095119476318
    4. ')' → logprob: -6.385095119476318
    5. ',x' → logprob: -7.135095119476318
    6. ',y' → logprob: -9.385095596313477
    7. ',k' → logprob: -10.135095596313477
    8. ' )' → logprob: -10.260095596313477
    9. ',index' → logprob: -10.635095596313477
    10. ' ' → logprob: -10.885095596313477

Token 43: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.20205101370811462
    2. ' prev' → logprob: -1.702051043510437
    3. '(prev' → logprob: -8.202051162719727
    4. ' ' → logprob: -9.202051162719727
    5. 'l' → logprob: -9.327051162719727
    6. ' l' → logprob: -9.452051162719727
    7. '	prev' → logprob: -9.702051162719727
    8. '_prev' → logprob: -11.577051162719727
    9. '.prev' → logprob: -12.452051162719727
    10. 'x' → logprob: -12.702051162719727

Token 44: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.259079363080673e-05
    2. 'idx' → logprob: -12.125012397766113
    3. '+' → logprob: -12.500012397766113
    4. '_' → logprob: -13.625012397766113
    5. 'x' → logprob: -15.125012397766113
    6. '_index' → logprob: -15.125012397766113
    7. '_IDX' → logprob: -15.250012397766113
    8. ' +' → logprob: -15.250012397766113
    9. '_ix' → logprob: -15.375012397766113
    10. '_x' → logprob: -15.500012397766113

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006796844303607941
    2. ' +' → logprob: -5.006796836853027
    3. '+)' → logprob: -9.631796836853027
    4. ')+' → logprob: -11.881796836853027
    5. ')' → logprob: -12.006796836853027
    6. '1' → logprob: -13.381796836853027
    7. '+x' → logprob: -15.131796836853027
    8. ' )' → logprob: -15.506796836853027
    9. '+s' → logprob: -15.756796836853027
    10. ' ' → logprob: -16.131797790527344

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000170882252859883
    2. ' ' → logprob: -8.750170707702637
    3. '2' → logprob: -12.125170707702637
    4. '+' → logprob: -12.500170707702637
    5. ')' → logprob: -13.875170707702637
    6. '<|end|>' → logprob: -14.062670707702637
    7. '```' → logprob: -15.687670707702637
    8. ' +' → logprob: -16.375171661376953
    9. '<|end|>' → logprob: -16.437671661376953
    10. '۱' → logprob: -16.500171661376953

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.913265239447355e-05
    2. ' ' → logprob: -9.250099182128906
    3. '2' → logprob: -13.875099182128906
    4. '<|end|>' → logprob: -14.500099182128906
    5. ')' → logprob: -14.875099182128906
    6. '+' → logprob: -14.937599182128906
    7. '```' → logprob: -16.437599182128906
    8. '0' → logprob: -16.437599182128906
    9. '7' → logprob: -16.812599182128906
    10. '<|end|>' → logprob: -17.250099182128906

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012108299415558577
    2. ' )' → logprob: -7.001210689544678
    3. ')
' → logprob: -8.376211166381836
    4. '+' → logprob: -9.876211166381836
    5. ' +' → logprob: -12.876211166381836
    6. ' ' → logprob: -12.876211166381836
    7. '     ' → logprob: -13.251211166381836
    8. ')+' → logprob: -13.376211166381836
    9. '<|end|>' → logprob: -13.751211166381836
    10. ' )
' → logprob: -13.876211166381836

Token 49: '     ' (ID: 530)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28626105189323425
    2. '<|end|>' → logprob: -1.5362610816955566
    3. '     ' → logprob: -3.7862610816955566
    4. '<|end|>' → logprob: -5.536261081695557
    5. ' )' → logprob: -5.661261081695557
    6. ' ' → logprob: -6.536261081695557
    7. '      ' → logprob: -8.286260604858398
    8. ':' → logprob: -8.411260604858398
    9. '   ' → logprob: -8.661260604858398
    10. '):' → logprob: -8.911260604858398

Token 50: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02242937684059143
    2. 'x' → logprob: -3.8974294662475586
    3. ' ' → logprob: -6.397429466247559
    4. ' y' → logprob: -9.522429466247559
    5. ' l' → logprob: -9.772429466247559
    6. '  ' → logprob: -10.772429466247559
    7. ' not' → logprob: -11.522429466247559
    8. '   ' → logprob: -11.647429466247559
    9. '(x' → logprob: -11.897429466247559
    10. ' len' → logprob: -11.897429466247559

Token 52: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -7.004696090007201e-05
    2. 'x' → logprob: -10.125069618225098
    3. 'idx' → logprob: -10.625069618225098
    4. '[idx' → logprob: -13.625069618225098
    5. '_idxs' → logprob: -13.875069618225098
    6. '	idx' → logprob: -14.250069618225098
    7. '_' → logprob: -14.375069618225098
    8. 'Idx' → logprob: -14.500069618225098
    9. '>' → logprob: -15.000069618225098
    10. 'dx' → logprob: -15.375069618225098

Token 53: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.22684714198112488
    2. '==' → logprob: -2.3518471717834473
    3. '>' → logprob: -2.8518471717834473
    4. '==-' → logprob: -3.9768471717834473
    5. ' >' → logprob: -4.226847171783447
    6. ' !=' → logprob: -5.601847171783447
    7. '<' → logprob: -5.851847171783447
    8. ' <' → logprob: -5.851847171783447
    9. '>=' → logprob: -5.976847171783447
    10. ' <=' → logprob: -7.101847171783447

Token 54: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.049095623195171356
    2. ' ' → logprob: -3.049095630645752
    3. '=' → logprob: -7.924095630645752
    4. '1' → logprob: -9.549095153808594
    5. 'prev' → logprob: -10.424095153808594
    6. 'l' → logprob: -11.174095153808594
    7. ' l' → logprob: -11.924095153808594
    8. '>' → logprob: -12.174095153808594
    9. '   ' → logprob: -12.424095153808594
    10. '  ' → logprob: -12.424095153808594

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009890546090900898
    2. ' ' → logprob: -4.759890556335449
    3. 'prev' → logprob: -7.009890556335449
    4. 'l' → logprob: -8.63489055633545
    5. '1' → logprob: -9.63489055633545
    6. '=' → logprob: -9.75989055633545
    7. ' prev' → logprob: -10.38489055633545
    8. ' l' → logprob: -11.25989055633545
    9. 'x' → logprob: -11.63489055633545
    10. 'y' → logprob: -12.38489055633545

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03479238599538803
    2. '       ' → logprob: -3.659792423248291
    3. ':
' → logprob: -5.034792423248291
    4. ' or' → logprob: -6.784792423248291
    5. '     ' → logprob: -8.659791946411133
    6. '):' → logprob: -8.784791946411133
    7. '<|end|>' → logprob: -9.409791946411133
    8. ' and' → logprob: -9.409791946411133
    9. ',' → logprob: -9.534791946411133
    10. ' :' → logprob: -9.659791946411133

Token 57: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007598382653668523
    2. ' break' → logprob: -8.250760078430176
    3. ' ' → logprob: -8.500760078430176
    4. '     ' → logprob: -9.125760078430176
    5. '   ' → logprob: -10.500760078430176
    6. '         ' → logprob: -10.625760078430176
    7. '```' → logprob: -10.750760078430176
    8. 'break' → logprob: -10.875760078430176
    9. '<|end|>' → logprob: -11.125760078430176
    10. '        
' → logprob: -11.375760078430176

Token 58: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41017821431159973
    2. '         ' → logprob: -1.7851781845092773
    3. ' break' → logprob: -2.4101781845092773
    4. ' ' → logprob: -3.0351781845092773
    5. 'break' (adapté à ' break') → logprob: -4.035178184509277
    6. '     ' → logprob: -5.660178184509277
    7. ' return' → logprob: -5.910178184509277
    8. 'return' → logprob: -6.035178184509277
    9. '```' → logprob: -6.535178184509277
    10. '	break' → logprob: -6.910178184509277

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4880685806274414
    2. '     ' → logprob: -1.1130685806274414
    3. '<|end|>' → logprob: -3.3630685806274414
    4. '      
' → logprob: -4.738068580627441
    5. '  
' → logprob: -5.113068580627441
    6. ' 
' → logprob: -6.488068580627441
    7. '\n' → logprob: -6.488068580627441
    8. ' ' → logprob: -6.863068580627441
    9. '    
' → logprob: -7.363068580627441
    10. '   ' → logprob: -7.613068580627441

Token 60: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.015704795718193054
    2. '
' → logprob: -5.39070463180542
    3. '      
' → logprob: -5.51570463180542
    4. '<|end|>' → logprob: -6.01570463180542
    5. '  
' → logprob: -6.76570463180542
    6. '   ' → logprob: -7.39070463180542
    7. '     
' → logprob: -7.51570463180542
    8. '    
' → logprob: -7.64070463180542
    9. ' 
' → logprob: -7.64070463180542
    10. ' ' → logprob: -8.640705108642578

Token 61: ' L' (ID: 451)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.023550361394882202
    2. ' ' → logprob: -4.898550510406494
    3. '   ' → logprob: -5.648550510406494
    4. 'else' → logprob: -5.898550510406494
    5. '      ' → logprob: -6.398550510406494
    6. '<|end|>' → logprob: -6.398550510406494
    7. '      
' → logprob: -6.773550510406494
    8. 'elif' → logprob: -6.898550510406494
    9. '    ' → logprob: -7.148550510406494
    10. ' else' → logprob: -7.148550510406494

Token 62: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.010140403173863888
    2. '.append' → logprob: -4.635140419006348
    3. '[' → logprob: -8.135140419006348
    4. '[:]' → logprob: -11.260140419006348
    5. ' ' → logprob: -11.385140419006348
    6. '.insert' → logprob: -11.635140419006348
    7. '=l' → logprob: -11.885140419006348
    8. '[-' → logprob: -11.885140419006348
    9. '.extend' → logprob: -12.385140419006348
    10. '[L' → logprob: -12.885140419006348

Token 63: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.07697030156850815
    2. ']' → logprob: -2.951970338821411
    3. '][' → logprob: -4.576970100402832
    4. '].' → logprob: -4.951970100402832
    5. 'idx' → logprob: -5.951970100402832
    6. ']_' → logprob: -8.576970100402832
    7. '_idxs' → logprob: -8.701970100402832
    8. ']+=' → logprob: -8.701970100402832
    9. ']._' → logprob: -8.826970100402832
    10. '][_' → logprob: -9.076970100402832

Token 64: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2246282696723938
    2. '=' → logprob: -2.099628210067749
    3. ']' → logprob: -2.849628210067749
    4. ' +=' → logprob: -4.599628448486328
    5. ' ' → logprob: -5.724628448486328
    6. ']=' → logprob: -6.224628448486328
    7. ')' → logprob: -6.349628448486328
    8. ' ]' → logprob: -7.099628448486328
    9. '>' → logprob: -7.224628448486328
    10. '+=' → logprob: -7.224628448486328

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06542348861694336
    2. '=' → logprob: -2.8154234886169434
    3. ' +=' → logprob: -5.815423488616943
    4. ' ' → logprob: -8.940423965454102
    5. '.append' → logprob: -9.315423965454102
    6. '+=' → logprob: -9.440423965454102
    7. '<|end|>' → logprob: -10.690423965454102
    8. '[' → logprob: -10.815423965454102
    9. ' |=' → logprob: -11.065423965454102
    10. 's' → logprob: -11.065423965454102

Token 66: ' min' (ID: 1349)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33113428950309753
    2. 'yk' → logprob: -1.58113431930542
    3. ' x' → logprob: -3.45613431930542
    4. '(' → logprob: -4.33113431930542
    5. 'min' → logprob: -4.45613431930542
    6. ' (' → logprob: -5.08113431930542
    7. 'max' → logprob: -5.45613431930542
    8. '(x' → logprob: -5.70613431930542
    9. ' min' → logprob: -6.33113431930542
    10. 'y' → logprob: -6.70613431930542

Token 67: '(l' (ID: 4179)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.593916118144989
    2. '(x' → logprob: -1.5939161777496338
    3. '(l' → logprob: -1.5939161777496338
    4. '(' → logprob: -3.343916177749634
    5. '(len' → logprob: -6.093915939331055
    6. '((' → logprob: -6.718915939331055
    7. '([' → logprob: -6.718915939331055
    8. 'l' → logprob: -7.593915939331055
    9. '(X' → logprob: -7.843915939331055
    10. 'x' → logprob: -8.718915939331055

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18490856885910034
    2. ',x' → logprob: -1.8099086284637451
    3. ' ,' → logprob: -5.309908390045166
    4. 'x' → logprob: -9.559908866882324
    5. ' ' → logprob: -10.434908866882324
    6. ',len' → logprob: -11.309908866882324
    7. '(x' → logprob: -11.434908866882324
    8. ',y' → logprob: -11.559908866882324
    9. '[x' → logprob: -11.684908866882324
    10. '[' → logprob: -12.059908866882324

Token 69: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.007750605698674917
    2. 'x' → logprob: -4.882750511169434
    3. ' ' → logprob: -8.882750511169434
    4. '  ' → logprob: -13.632750511169434
    5. ')' → logprob: -14.007750511169434
    6. ')x' → logprob: -14.257750511169434
    7. '	x' → logprob: -14.507750511169434
    8. '   ' → logprob: -15.007750511169434
    9. '    ' → logprob: -15.132750511169434
    10. '(x' → logprob: -15.382750511169434

Token 70: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00021915239631198347
    2. 'x' → logprob: -8.500219345092773
    3. 'idx' → logprob: -11.625219345092773
    4. 'Idx' → logprob: -12.875219345092773
    5. '_IDX' → logprob: -14.125219345092773
    6. '	idx' → logprob: -14.500219345092773
    7. '_' → logprob: -14.625219345092773
    8. '_idxs' → logprob: -14.875219345092773
    9. '_index' → logprob: -15.000219345092773
    10. 'dx' → logprob: -15.000219345092773

Token 71: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024428140372037888
    2. ' )' → logprob: -3.899428129196167
    3. '     ' → logprob: -6.149428367614746
    4. ')
' → logprob: -6.649428367614746
    5. ' ' → logprob: -8.399428367614746
    6. '<|end|>' → logprob: -9.649428367614746
    7. ' )
' → logprob: -9.649428367614746
    8. '   ' → logprob: -10.649428367614746
    9. '    ' → logprob: -11.274428367614746
    10. '      ' → logprob: -11.774428367614746

Token 72: ' 
' (ID: 793)
  Prédit: '     '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.23699967563152313
    2. '      
' → logprob: -2.861999750137329
    3. 'else' → logprob: -3.236999750137329
    4. '
' → logprob: -3.236999750137329
    5. '<|end|>' → logprob: -3.361999750137329
    6. ' else' → logprob: -3.986999750137329
    7. '  
' → logprob: -4.23699951171875
    8. '    
' → logprob: -5.98699951171875
    9. ' ' → logprob: -6.86199951171875
    10. '     
' → logprob: -7.11199951171875

Token 73: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.08871686458587646
    2. '      
' → logprob: -3.088716983795166
    3. '  
' → logprob: -4.213716983795166
    4. '
' → logprob: -4.838716983795166
    5. '<|end|>' → logprob: -5.088716983795166
    6. 'else' → logprob: -5.713716983795166
    7. '     
' → logprob: -6.213716983795166
    8. '    
' → logprob: -6.463716983795166
    9. 'prev' → logprob: -7.338716983795166
    10. ' 
' → logprob: -7.713716983795166

Token 74: ' prev' (ID: 10258)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5298795700073242
    2. '     ' → logprob: -0.9048795700073242
    3. ' else' → logprob: -5.779879570007324
    4. '   ' → logprob: -6.154879570007324
    5. ' ' → logprob: -7.404879570007324
    6. 'prev' (adapté à ' prev') → logprob: -8.529879570007324
    7. 'elif' → logprob: -8.529879570007324
    8. '    ' → logprob: -8.779879570007324
    9. '```' → logprob: -9.404879570007324
    10. '<|end|>' → logprob: -9.904879570007324

Token 75: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -3.7385154428193346e-05
    2. '_' → logprob: -11.37503719329834
    3. '_idxs' → logprob: -11.75003719329834
    4. '<|end|>' → logprob: -12.12503719329834
    5. '_index' → logprob: -12.25003719329834
    6. '_id' → logprob: -13.12503719329834
    7. '_IDX' → logprob: -13.62503719329834
    8. '_ix' → logprob: -14.25003719329834
    9. 'idx' → logprob: -14.37503719329834
    10. ' _' → logprob: -14.62503719329834

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.017156867310404778
    2. '=' → logprob: -4.517157077789307
    3. ' +=' → logprob: -5.142157077789307
    4. ' +' → logprob: -9.017156600952148
    5. ' ' → logprob: -9.642156600952148
    6. '+' → logprob: -10.392156600952148
    7. '+=' → logprob: -10.892156600952148
    8. '<|end|>' → logprob: -11.767156600952148
    9. '  ' → logprob: -15.017156600952148
    10. ')' → logprob: -15.392156600952148

Token 77: ' l' (ID: 305)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0011711753904819489
    2. ' x' → logprob: -6.751171112060547
    3. ' ' → logprob: -14.876171112060547
    4. '<|end|>' → logprob: -14.876171112060547
    5. 'L' → logprob: -16.501171112060547
    6. '	x' → logprob: -17.001171112060547
    7. ')x' → logprob: -17.251171112060547
    8. '(x' → logprob: -17.876171112060547
    9. '>x' → logprob: -17.876171112060547
    10. '$x' → logprob: -18.126171112060547

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019569173455238342
    2. '     ' → logprob: -4.269569396972656
    3. ':
' → logprob: -5.644569396972656
    4. ' ' → logprob: -7.269569396972656
    5. '<|end|>' → logprob: -8.019569396972656
    6. '   ' → logprob: -8.394569396972656
    7. '    ' → logprob: -8.769569396972656
    8. '       ' → logprob: -8.894569396972656
    9. ' :' → logprob: -9.019569396972656
    10. '```' → logprob: -10.394569396972656

Token 82: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.1085953414440155
    2. ' L' → logprob: -2.983595371246338
    3. 'L' → logprob: -3.233595371246338
    4. ' ' → logprob: -4.858595371246338
    5. '   ' → logprob: -5.358595371246338
    6. '    ' → logprob: -8.60859489440918
    7. '       ' → logprob: -8.73359489440918
    8. '  ' → logprob: -11.10859489440918
    9. '      ' → logprob: -11.10859489440918
    10. '      
' → logprob: -11.35859489440918

Token 83: ' x' (ID: 1215)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.031529296189546585
    2. ' L' → logprob: -3.531529188156128
    3. '   ' → logprob: -7.406529426574707
    4. ' ' → logprob: -7.406529426574707
    5. '     ' → logprob: -7.656529426574707
    6. '       ' → logprob: -9.906529426574707
    7. '  ' → logprob: -11.031529426574707
    8. '    ' → logprob: -11.781529426574707
    9. 'prev' → logprob: -12.781529426574707
    10. '      ' → logprob: -12.906529426574707

Token 84: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0003449984942562878
    2. '_' → logprob: -8.375345230102539
    3. '_index' → logprob: -9.875345230102539
    4. 'idx' → logprob: -10.500345230102539
    5. '_idxs' → logprob: -11.750345230102539
    6. '_i' → logprob: -11.875345230102539
    7. 'x' → logprob: -12.500345230102539
    8. ' =' → logprob: -13.250345230102539
    9. 'Idx' → logprob: -13.375345230102539
    10. '_indices' → logprob: -13.375345230102539

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16059443354606628
    2. '=' → logprob: -1.9105944633483887
    3. ' ' → logprob: -8.03559398651123
    4. '>' → logprob: -10.91059398651123
    5. '<|end|>' → logprob: -11.41059398651123
    6. '     ' → logprob: -12.28559398651123
    7. ' >' → logprob: -12.53559398651123
    8. '  ' → logprob: -12.91059398651123
    9. '	' → logprob: -13.41059398651123
    10. '<|end|>' → logprob: -14.16059398651123

Token 86: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07039995491504669
    2. ' X' → logprob: -2.6953999996185303
    3. ' ' → logprob: -7.695399761199951
    4. '  ' → logprob: -12.69540023803711
    5. '   ' → logprob: -12.94540023803711
    6. '     ' → logprob: -13.32040023803711
    7. 'x' → logprob: -14.57040023803711
    8. '	X' → logprob: -15.19540023803711
    9. 'Y' → logprob: -15.32040023803711
    10. '0' → logprob: -15.82040023803711

Token 87: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.00013738969573751092
    2. '.' → logprob: -9.500137329101562
    3. 'find' → logprob: -9.875137329101562
    4. ' .' → logprob: -11.625137329101562
    5. '.findall' → logprob: -13.750137329101562
    6. '.index' → logprob: -15.000137329101562
    7. ' ' → logprob: -15.000137329101562
    8. ' find' → logprob: -15.500137329101562
    9. '<|end|>' → logprob: -16.500137329101562
    10. '=find' → logprob: -17.125137329101562

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. ' (' → logprob: -13.62500286102295
    3. '(y' → logprob: -14.12500286102295
    4. '(
' → logprob: -15.75000286102295
    5. '('' → logprob: -15.75000286102295
    6. '((' → logprob: -16.500001907348633
    7. '(Y' → logprob: -16.500001907348633
    8. '<|end|>' → logprob: -16.500001907348633
    9. 'y' → logprob: -16.625001907348633
    10. '('(' → logprob: -17.750001907348633

Token 89: 'yk' (ID: 11430)
  Prédit: 'yk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yk' → logprob: -1.843177233240567e-05
    2. 'ykl' → logprob: -11.250018119812012
    3. ' ' → logprob: -13.000018119812012
    4. '   ' → logprob: -14.250018119812012
    5. '<|end|>' → logprob: -14.375018119812012
    6. '(' → logprob: -14.875018119812012
    7. ' y' → logprob: -15.250018119812012
    8. ')' → logprob: -15.250018119812012
    9. 'YK' → logprob: -15.500018119812012
    10. 'y' → logprob: -15.875018119812012

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009661303483881056
    2. ')' → logprob: -7.7509660720825195
    3. ' ,' → logprob: -8.25096607208252
    4. ' ' → logprob: -9.50096607208252
    5. 'prev' → logprob: -9.75096607208252
    6. ',
' → logprob: -10.25096607208252
    7. '(prev' → logprob: -10.37596607208252
    8. ' prev' → logprob: -11.00096607208252
    9. '     ' → logprob: -11.12596607208252
    10. '',' → logprob: -11.50096607208252

Token 91: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.1016889214515686
    2. ' prev' → logprob: -2.351688861846924
    3. '0' → logprob: -7.476688861846924
    4. '(prev' → logprob: -7.976688861846924
    5. ' ' → logprob: -8.476689338684082
    6. ' L' → logprob: -8.726689338684082
    7. 'L' → logprob: -8.976689338684082
    8. '	prev' → logprob: -10.476689338684082
    9. 'Prev' → logprob: -11.851689338684082
    10. ' (' → logprob: -12.476689338684082

Token 92: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -6.051066520740278e-05
    2. 'idx' → logprob: -9.750060081481934
    3. 'Idx' → logprob: -14.000060081481934
    4. '_IDX' → logprob: -14.625060081481934
    5. '+' → logprob: -15.250060081481934
    6. ' idx' → logprob: -15.500060081481934
    7. '	idx' → logprob: -15.875060081481934
    8. '   ' → logprob: -17.12506103515625
    9. '_index' → logprob: -17.12506103515625
    10. '_idxs' → logprob: -17.25006103515625

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47411924600601196
    2. ' +' → logprob: -0.974119246006012
    3. ' ' → logprob: -10.599119186401367
    4. ' plus' → logprob: -12.724119186401367
    5. '<|end|>' → logprob: -12.724119186401367
    6. '1' → logprob: -12.849119186401367
    7. ')' → logprob: -12.849119186401367
    8. '+
' → logprob: -13.474119186401367
    9. ' +
' → logprob: -13.599119186401367
    10. '+)' → logprob: -13.849119186401367

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008634188212454319
    2. ' ' → logprob: -4.758634090423584
    3. '+' → logprob: -11.133634567260742
    4. '```' → logprob: -13.008634567260742
    5. ' +' → logprob: -13.946134567260742
    6. ')' → logprob: -14.571134567260742
    7. '0' → logprob: -14.883634567260742
    8. '`' → logprob: -15.758634567260742
    9. '<|end|>' → logprob: -16.133634567260742
    10. '   ' → logprob: -16.196134567260742

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016218038217630237
    2. ' ' → logprob: -8.750162124633789
    3. '0' → logprob: -12.875162124633789
    4. '+' → logprob: -14.375162124633789
    5. '-' → logprob: -15.000162124633789
    6. '```' → logprob: -16.12516212463379
    7. ')' → logprob: -16.62516212463379
    8. '2' → logprob: -16.81266212463379
    9. '   ' → logprob: -18.00016212463379
    10. '１' → logprob: -18.06266212463379

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21184775233268738
    2. ')
' → logprob: -1.8368477821350098
    3. '     ' → logprob: -3.4618477821350098
    4. ')
' → logprob: -9.086847305297852
    5. '   ' → logprob: -10.336847305297852
    6. ' ' → logprob: -10.336847305297852
    7. ' )' → logprob: -11.211847305297852
    8. ' )
' → logprob: -11.211847305297852
    9. ')

' → logprob: -12.711847305297852
    10. '    ' → logprob: -12.961847305297852

Token 97: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.00029720881138928235
    2. ' ' → logprob: -8.375297546386719
    3. 'if' → logprob: -10.375297546386719
    4. '   ' → logprob: -10.625297546386719
    5. '<|end|>' → logprob: -12.375297546386719
    6. ' if' → logprob: -12.625297546386719
    7. '```' → logprob: -13.250297546386719
    8. '    ' → logprob: -14.375297546386719
    9. '      
' → logprob: -14.875297546386719
    10. '	 ' → logprob: -15.375297546386719

Token 98: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5502160787582397
    2. 'L' → logprob: -1.0502160787582397
    3. '     ' → logprob: -2.6752161979675293
    4. ' if' → logprob: -6.050216197967529
    5. ' ' → logprob: -6.550216197967529
    6. '   ' → logprob: -7.800216197967529
    7. ' L' → logprob: -8.550215721130371
    8. 'If' → logprob: -11.300215721130371
    9. '    ' → logprob: -12.050215721130371
    10. '  ' → logprob: -13.175215721130371

Token 99: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22562135756015778
    2. 'x' → logprob: -1.6006213426589966
    3. ' ' → logprob: -8.600621223449707
    4. '  ' → logprob: -11.475621223449707
    5. '(x' → logprob: -12.225621223449707
    6. '     ' → logprob: -12.350621223449707
    7. '   ' → logprob: -12.975621223449707
    8. '0' → logprob: -13.975621223449707
    9. '	x' → logprob: -14.475621223449707
    10. '    ' → logprob: -14.975621223449707

Token 100: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.9623810658231378e-05
    2. '_' → logprob: -11.500020027160645
    3. 'idx' → logprob: -11.625020027160645
    4. 'x' → logprob: -16.000019073486328
    5. 'Idx' → logprob: -16.250019073486328
    6. '_ix' → logprob: -16.625019073486328
    7. '_idxs' → logprob: -17.000019073486328
    8. '_index' → logprob: -17.000019073486328
    9. '_IDX' → logprob: -17.250019073486328
    10. '	idx' → logprob: -17.250019073486328

Token 101: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.12160645425319672
    2. ' >' → logprob: -2.9966063499450684
    3. '>=' → logprob: -2.9966063499450684
    4. '>' → logprob: -4.496606349945068
    5. ' <' → logprob: -5.746606349945068
    6. '<' → logprob: -8.871606826782227
    7. ' ' → logprob: -10.246606826782227
    8. ' ==' → logprob: -10.621606826782227
    9. ')' → logprob: -11.121606826782227
    10. '==' → logprob: -11.746606826782227

Token 102: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.061967797577381134
    2. ' ' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.561967849731445
    4. '<|end|>' → logprob: -16.936967849731445
    5. '```' → logprob: -17.686967849731445
    6. '  ' → logprob: -17.686967849731445
    7. '1' → logprob: -18.561967849731445
    8. '۰' → logprob: -18.561967849731445
    9. '     ' → logprob: -18.686967849731445
    10. ' ' → logprob: -18.686967849731445

Token 103: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. 'prev' → logprob: -17.376171112060547
    4. '1' → logprob: -17.501171112060547
    5. '۰' → logprob: -18.251171112060547
    6. '00' → logprob: -18.876171112060547
    7. '<|end|>' → logprob: -19.126171112060547
    8. '[' → logprob: -19.563671112060547
    9. ' ' → logprob: -19.563671112060547
    10. '   ' → logprob: -19.626171112060547

Token 104: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0226000547409058
    2. '       ' → logprob: -1.0226000547409058
    3. ':
' → logprob: -1.2726000547409058
    4. '):
' → logprob: -8.522600173950195
    5. ' :
' → logprob: -9.022600173950195
    6. 'L' → logprob: -9.897600173950195
    7. ',' → logprob: -10.272600173950195
    8. '):' → logprob: -10.522600173950195
    9. ':

' → logprob: -10.522600173950195
    10. ' L' → logprob: -10.647600173950195

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046361956745386124
    2. ' L' → logprob: -3.4213619232177734
    3. 'L' → logprob: -4.421361923217773
    4. ' ' → logprob: -8.296361923217773
    5. '      ' → logprob: -8.921361923217773
    6. '     ' → logprob: -9.046361923217773
    7. '   ' → logprob: -9.296361923217773
    8. '         ' → logprob: -11.796361923217773
    9. '  ' → logprob: -12.421361923217773
    10. '    ' → logprob: -12.546361923217773

Token 106: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' (adapté à ' L') → logprob: -0.10026490688323975
    2. ' L' → logprob: -2.3502650260925293
    3. '       ' → logprob: -9.975264549255371
    4. ' ' → logprob: -11.725264549255371
    5. '   ' → logprob: -12.975264549255371
    6. '     ' → logprob: -14.600264549255371
    7. '	L' → logprob: -14.850264549255371
    8. '```' → logprob: -15.350264549255371
    9. '         ' → logprob: -16.475265502929688
    10. '    ' → logprob: -16.725265502929688

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017037445213645697
    2. '.' → logprob: -6.37670373916626
    3. '.app' → logprob: -14.376704216003418
    4. 'append' → logprob: -14.626704216003418
    5. '.Append' → logprob: -15.876704216003418
    6. '.setdefault' → logprob: -16.0017032623291
    7. ' .' → logprob: -16.3767032623291
    8. '.push' → logprob: -16.6267032623291
    9. '.extend' → logprob: -16.7517032623291
    10. '.ap' → logprob: -17.2517032623291

Token 108: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005588700296357274
    2. '(' → logprob: -7.500558853149414
    3. 'x' → logprob: -12.125558853149414
    4. ' (' → logprob: -14.875558853149414
    5. '(
' → logprob: -16.000558853149414
    6. ' x' → logprob: -17.750558853149414
    7. '(int' → logprob: -19.500558853149414
    8. '((' → logprob: -20.125558853149414
    9. '	x' → logprob: -20.875558853149414
    10. '(xs' → logprob: -21.125558853149414

Token 109: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -9.829823102336377e-05
    2. 'idx' → logprob: -9.25009822845459
    3. 'd' → logprob: -14.25009822845459
    4. 'dx' → logprob: -14.25009822845459
    5. '_index' → logprob: -14.75009822845459
    6. 'x' → logprob: -16.000099182128906
    7. 'Idx' → logprob: -16.500099182128906
    8. 'nd' → logprob: -16.625099182128906
    9. '_' → logprob: -17.375099182128906
    10. '	idx' → logprob: -17.500099182128906

Token 110: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027111053350381553
    2. ')
' → logprob: -8.62527084350586
    3. ' )' → logprob: -10.12527084350586
    4. ')return' → logprob: -10.62527084350586
    5. '<|end|>' → logprob: -11.87527084350586
    6. '   ' → logprob: -12.50027084350586
    7. ' ' → logprob: -12.50027084350586
    8. '       ' → logprob: -12.62527084350586
    9. '     ' → logprob: -12.62527084350586
    10. '<|end|>' → logprob: -13.62527084350586

Token 111: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034454766660928726
    2. 'return' → logprob: -4.034454822540283
    3. '  
' → logprob: -4.534454822540283
    4. '   ' → logprob: -6.159454822540283
    5. ' return' → logprob: -6.284454822540283
    6. '	return' → logprob: -7.784454822540283
    7. '<|end|>' → logprob: -7.909454822540283
    8. '    
' → logprob: -9.034454345703125
    9. ':return' → logprob: -9.534454345703125
    10. ')' → logprob: -9.659454345703125

Token 112: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.71281498670578
    2. ' ' → logprob: -0.83781498670578
    3. ' return' → logprob: -3.587815046310425
    4. '
' → logprob: -3.837815046310425
    5. '  
' → logprob: -3.962815046310425
    6. '	return' → logprob: -5.712814807891846
    7. '   ' → logprob: -6.087814807891846
    8. ':return' → logprob: -6.337814807891846
    9. '<|end|>' → logprob: -7.587814807891846
    10. '\n' → logprob: -8.212815284729004

Token 113: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1390891671180725
    2. ' len' → logprob: -2.7640891075134277
    3. 'L' → logprob: -3.2640891075134277
    4. ' L' → logprob: -3.6390891075134277
    5. 'max' → logprob: -6.639089107513428
    6. ' max' → logprob: -7.764089107513428
    7. '[len' → logprob: -8.764089584350586
    8. ' ' → logprob: -9.014089584350586
    9. '"' → logprob: -10.139089584350586
    10. '[L' → logprob: -10.139089584350586

Token 114: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.023249205201864243
    2. '(' → logprob: -3.7732491493225098
    3. '(
' → logprob: -13.148249626159668
    4. '(X' → logprob: -14.148249626159668
    5. 'L' → logprob: -14.898249626159668
    6. '(S' → logprob: -15.148249626159668
    7. ' (' → logprob: -15.648249626159668
    8. '(A' → logprob: -16.64824867248535
    9. ' ' → logprob: -16.89824867248535
    10. 's' → logprob: -17.02324867248535

Token 115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -14.00000286102295
    4. ' ' → logprob: -16.250003814697266
    5. '))' → logprob: -16.250003814697266
    6. '()' → logprob: -17.125003814697266
    7. ')return' → logprob: -17.375003814697266
    8. '())' → logprob: -17.500003814697266
    9. ')#' → logprob: -17.625003814697266
    10. ')`' → logprob: -17.625003814697266

Token 116: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: ' main' (ID: 2758)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6537257432937622
    2. ' longest' → logprob: -1.9037257432937622
    3. ' main' → logprob: -1.9037257432937622
    4. ' is' → logprob: -3.5287256240844727
    5. ' reverse' → logprob: -3.6537256240844727
    6. ' binary' → logprob: -4.153725624084473
    7. ' ' → logprob: -4.403725624084473
    8. 'l' → logprob: -4.528725624084473
    9. ' m' → logprob: -5.028725624084473
    10. ' levens' → logprob: -5.028725624084473

Token 118: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00019603055261541158
    2. '(' → logprob: -9.25019645690918
    3. ' ():' → logprob: -10.00019645690918
    4. '()' → logprob: -10.00019645690918
    5. '():
' → logprob: -12.00019645690918
    6. '()>' → logprob: -13.37519645690918
    7. ':' → logprob: -14.12519645690918
    8. '():
' → logprob: -15.87519645690918
    9. '()">' → logprob: -16.00019645690918
    10. '(":' → logprob: -16.50019645690918

Token 119: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.360397070646286
    2. '   ' → logprob: -1.4853971004486084
    3. ' X' → logprob: -2.7353971004486084
    4. ' import' → logprob: -5.485396862030029
    5. 'X' → logprob: -6.485396862030029
    6. ' n' → logprob: -6.735396862030029
    7. ' for' → logprob: -6.735396862030029
    8. ' print' → logprob: -7.235396862030029
    9. ' pass' → logprob: -7.985396862030029
    10. '  ' → logprob: -8.360397338867188

Token 120: ' q' (ID: 2335)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.2063654363155365
    2. ' ' → logprob: -1.8313654661178589
    3. ' X' → logprob: -3.7063653469085693
    4. '   ' → logprob: -7.831365585327148
    5. 'XY' → logprob: -8.081365585327148
    6. 'import' → logprob: -8.331365585327148
    7. 'print' → logprob: -8.456365585327148
    8. ' XY' → logprob: -8.581365585327148
    9. 's' → logprob: -8.831365585327148
    10. ' print' → logprob: -10.206365585327148

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34163400530815125
    2. 'u' → logprob: -1.4666340351104736
    3. 'uer' → logprob: -3.2166340351104736
    4. '=' → logprob: -4.4666337966918945
    5. ' ' → logprob: -6.7166337966918945
    6. 'uries' → logprob: -6.8416337966918945
    7. 'ue' → logprob: -7.0916337966918945
    8. 'ual' → logprob: -7.2166337966918945
    9. '1' → logprob: -7.8416337966918945
    10. 'uers' → logprob: -7.9666337966918945

Token 122: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.37659552693367004
    2. ' input' → logprob: -1.2515954971313477
    3. 'int' → logprob: -4.376595497131348
    4. '"' → logprob: -5.126595497131348
    5. ' int' → logprob: -5.501595497131348
    6. ' "' → logprob: -5.751595497131348
    7. ' ' → logprob: -8.001595497131348
    8. ''' → logprob: -8.001595497131348
    9. '[int' → logprob: -8.501595497131348
    10. '[input' → logprob: -8.501595497131348

Token 123: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12703141570091248
    2. '(' → logprob: -2.1270313262939453
    3. 'input' → logprob: -9.377031326293945
    4. '('' → logprob: -11.627031326293945
    5. '("' → logprob: -12.252031326293945
    6. ' (' → logprob: -13.252031326293945
    7. '(
' → logprob: -13.627031326293945
    8. ' ' → logprob: -14.002031326293945
    9. ' input' → logprob: -14.502031326293945
    10. '()' → logprob: -15.377031326293945

Token 124: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38757890462875366
    2. '()' → logprob: -1.1375789642333984
    3. '(' → logprob: -7.637578964233398
    4. '("' → logprob: -9.762578964233398
    5. '())
' → logprob: -9.762578964233398
    6. '()
' → logprob: -10.262578964233398
    7. '().' → logprob: -10.762578964233398
    8. '()>' → logprob: -11.262578964233398
    9. ')' → logprob: -11.762578964233398
    10. '();)' → logprob: -11.762578964233398

Token 125: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01491482462733984
    2. 'for' → logprob: -4.7649149894714355
    3. ' for' → logprob: -5.3899149894714355
    4. '<|end|>' → logprob: -6.5149149894714355
    5. '  
' → logprob: -9.139914512634277
    6. '
' → logprob: -9.639914512634277
    7. '  ' → logprob: -10.514914512634277
    8. ' 
' → logprob: -11.639914512634277
    9. '	for' → logprob: -12.014914512634277
    10. '<|end|>' → logprob: -12.139914512634277

Token 126: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42961639165878296
    2. ' for' → logprob: -1.1796164512634277
    3. ' ' → logprob: -3.1796164512634277
    4. '<|end|>' → logprob: -8.67961597442627
    5. '
' → logprob: -10.42961597442627
    6. '	for' → logprob: -10.80461597442627
    7. 'q' → logprob: -12.05461597442627
    8. '  
' → logprob: -12.67961597442627
    9. 'results' → logprob: -12.92961597442627
    10. '  ' → logprob: -12.92961597442627

Token 127: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5811819434165955
    2. '_' → logprob: -0.8311819434165955
    3. ' ' → logprob: -5.45618200302124
    4. ' i' → logprob: -6.95618200302124
    5. ' ' → logprob: -12.956181526184082
    6. ' ‌' → logprob: -13.331181526184082
    7. '_i' → logprob: -14.331181526184082
    8. ' ​' → logprob: -14.581181526184082
    9. ' ▁' → logprob: -14.581181526184082
    10. '  ' → logprob: -15.581181526184082

Token 128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2547681927680969
    2. 'in' → logprob: -1.5047681331634521
    3. 'range' → logprob: -6.379768371582031
    4. ' ' → logprob: -6.879768371582031
    5. 'q' → logprob: -9.629768371582031
    6. '  ' → logprob: -11.379768371582031
    7. '
' → logprob: -12.379768371582031
    8. 'import' → logprob: -12.629768371582031
    9. '```' → logprob: -12.629768371582031
    10. '	in' → logprob: -12.879768371582031

Token 129: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001593195047462359
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -14.50015926361084
    4. 'q' → logprob: -15.25015926361084
    5. 'input' → logprob: -16.375160217285156
    6. ' ' → logprob: -17.375160217285156
    7. '	range' → logprob: -18.000160217285156
    8. 'ange' → logprob: -18.375160217285156
    9. 'rang' → logprob: -18.875160217285156
    10. 'query' → logprob: -19.000160217285156

Token 130: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.18484653532505035
    2. '(' → logprob: -1.8098465204238892
    3. ' (' → logprob: -5.5598464012146
    4. ' ' → logprob: -7.0598464012146
    5. ' q' → logprob: -8.934846878051758
    6. 'q' → logprob: -8.934846878051758
    7. '(range' → logprob: -9.559846878051758
    8. '(
' → logprob: -11.559846878051758
    9. '(n' → logprob: -11.684846878051758
    10. ')' → logprob: -11.934846878051758

Token 131: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007690866477787495
    2. ':' → logprob: -5.882690906524658
    3. '):
' → logprob: -5.882690906524658
    4. ')' → logprob: -6.507690906524658
    5. ' ' → logprob: -8.0076904296875
    6. ' ):' → logprob: -8.3826904296875
    7. ',' → logprob: -11.7576904296875
    8. '+' → logprob: -12.2576904296875
    9. ' )' → logprob: -12.3826904296875
    10. ':
' → logprob: -12.5076904296875

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04657725244760513
    2. ' ' → logprob: -3.421577215194702
    3. '<|end|>' → logprob: -5.046577453613281
    4. '  ' → logprob: -6.421577453613281
    5. '     ' → logprob: -6.796577453613281
    6. '       ' → logprob: -7.171577453613281
    7. '  
' → logprob: -7.796577453613281
    8. 'input' → logprob: -8.046577453613281
    9. 'query' → logprob: -8.421577453613281
    10. '```' → logprob: -8.921577453613281

Token 133: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.2353866845369339
    2. 'X' (adapté à ' X') → logprob: -1.6103867292404175
    3. 'x' → logprob: -5.110386848449707
    4. ' x' → logprob: -6.110386848449707
    5. ' ' → logprob: -7.485386848449707
    6. ' s' → logprob: -7.860386848449707
    7. 's' → logprob: -8.360386848449707
    8. '    ' → logprob: -8.860386848449707
    9. ' xs' → logprob: -9.485386848449707
    10. 'Xs' → logprob: -9.610386848449707

Token 134: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06402608007192612
    2. '=' → logprob: -3.064026117324829
    3. ' =' → logprob: -4.43902587890625
    4. ',Y' → logprob: -5.68902587890625
    5. ' ,' → logprob: -9.56402587890625
    6. ' ' → logprob: -10.56402587890625
    7. '=input' → logprob: -12.06402587890625
    8. ',X' → logprob: -12.18902587890625
    9. ' Y' → logprob: -12.31402587890625
    10. 'Y' → logprob: -12.56402587890625

Token 135: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602383404970169
    2. ' input' → logprob: -1.9102383852005005
    3. ' ' → logprob: -12.035238265991211
    4. '(input' → logprob: -12.535238265991211
    5. 'str' → logprob: -13.410238265991211
    6. '=input' → logprob: -13.410238265991211
    7. '	input' → logprob: -14.535238265991211
    8. '<input' → logprob: -14.660238265991211
    9. ',input' → logprob: -15.660238265991211
    10. '[input' → logprob: -15.660238265991211

Token 136: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.29340603761375e-05
    2. '()
' → logprob: -10.000092506408691
    3. '())' → logprob: -10.875092506408691
    4. '().' → logprob: -11.000092506408691
    5. '()>' → logprob: -12.000092506408691
    6. '()`' → logprob: -13.750092506408691
    7. '()

' → logprob: -13.875092506408691
    8. '()]' → logprob: -13.875092506408691
    9. '(' → logprob: -14.250092506408691
    10. '()">' → logprob: -14.750092506408691

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003022153687197715
    2. 'Y' → logprob: -8.7503023147583
    3. ' Y' → logprob: -8.8753023147583
    4. ' ' → logprob: -13.1253023147583
    5. '	Y' → logprob: -15.0003023147583
    6. '  ' → logprob: -15.2503023147583
    7. '    
' → logprob: -15.3753023147583
    8. '
' → logprob: -15.3753023147583
    9. '   ' → logprob: -15.6253023147583
    10. '<|end|>' → logprob: -15.7503023147583

Token 138: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -0.04354327172040939
    2. ' Y' → logprob: -3.1685433387756348
    3. '   ' → logprob: -7.543543338775635
    4. ' ' → logprob: -11.668542861938477
    5. '	Y' → logprob: -12.418542861938477
    6. '  ' → logprob: -14.043542861938477
    7. '
' → logprob: -15.168542861938477
    8. '    ' → logprob: -15.418542861938477
    9. 'y' → logprob: -16.356042861938477
    10. ',Y' → logprob: -16.418542861938477

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029780110344290733
    2. '=' → logprob: -3.529780149459839
    3. ' ' → logprob: -10.779780387878418
    4. ')' → logprob: -12.529780387878418
    5. '=input' → logprob: -12.904780387878418
    6. '.' → logprob: -14.279780387878418
    7. '  ' → logprob: -14.904780387878418
    8. ' =
' → logprob: -14.904780387878418
    9. ',' → logprob: -15.029780387878418
    10. '_' → logprob: -15.529780387878418

Token 140: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.05490146577358246
    2. 'input' → logprob: -2.929901361465454
    3. '(input' → logprob: -11.929901123046875
    4. '=input' → logprob: -12.054901123046875
    5. ' ' → logprob: -12.179901123046875
    6. '	input' → logprob: -14.679901123046875
    7. ',input' → logprob: -15.554901123046875
    8. ' X' → logprob: -15.554901123046875
    9. '<input' → logprob: -15.804901123046875
    10. ' ' → logprob: -15.929901123046875

Token 141: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001410850090906024
    2. '(' → logprob: -9.250141143798828
    3. '()
' → logprob: -10.750141143798828
    4. '())' → logprob: -11.000141143798828
    5. '()`' → logprob: -13.500141143798828
    6. ')' → logprob: -13.625141143798828
    7. '()>' → logprob: -14.250141143798828
    8. '().' → logprob: -14.375141143798828
    9. '()]' → logprob: -14.750141143798828
    10. '();' → logprob: -15.125141143798828

Token 142: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3248981535434723
    2. 'print' → logprob: -1.32489812374115
    3. ' print' → logprob: -4.5748982429504395
    4. ' ' → logprob: -7.1998982429504395
    5. 'result' → logprob: -8.199897766113281
    6. '<|end|>' → logprob: -8.949897766113281
    7. '```' → logprob: -10.824897766113281
    8. '  
' → logprob: -10.949897766113281
    9. ' result' → logprob: -11.074897766113281
    10. '	print' → logprob: -11.574897766113281

Token 143: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019828793592751026
    2. ' print' → logprob: -6.251982688903809
    3. '   ' → logprob: -10.501982688903809
    4. ' ' → logprob: -10.876982688903809
    5. 'result' → logprob: -12.251982688903809
    6. 'res' → logprob: -13.626982688903809
    7. '```' → logprob: -14.251982688903809
    8. '  
' → logprob: -15.376982688903809
    9. 'answer' → logprob: -15.501982688903809
    10. 'length' → logprob: -16.001983642578125

Token 144: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0005545823951251805
    2. '(' → logprob: -7.50055456161499
    3. '(f' → logprob: -14.625555038452148
    4. '(len' → logprob: -15.375555038452148
    5. ' (' → logprob: -15.500555038452148
    6. 'l' → logprob: -15.500555038452148
    7. ' l' → logprob: -15.875555038452148
    8. '(
' → logprob: -15.875555038452148
    9. '(L' → logprob: -16.12555503845215
    10. '('' → logprob: -16.37555503845215

Token 145: 'cs' (ID: 8102)
  Prédit: 'cs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cs' → logprob: -0.00017827287956606597
    2. 'c' → logprob: -8.750178337097168
    3. 's' → logprob: -10.875178337097168
    4. '(X' → logprob: -15.125178337097168
    5. 'с' → logprob: -15.250178337097168
    6. 'CS' → logprob: -16.00017738342285
    7. '(Y' → logprob: -16.37517738342285
    8. '(cs' → logprob: -17.12517738342285
    9. '(' → logprob: -17.25017738342285
    10. 'cos' → logprob: -18.00017738342285

Token 146: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.001981687266379595
    2. '(' → logprob: -6.251981735229492
    3. '(Y' → logprob: -9.876981735229492
    4. '(
' → logprob: -14.001981735229492
    5. ')' → logprob: -14.376981735229492
    6. ' (' → logprob: -15.376981735229492
    7. '(

' → logprob: -17.251981735229492
    8. '((' → logprob: -17.876981735229492
    9. ')(' → logprob: -18.126981735229492
    10. '(x' → logprob: -18.501981735229492

Token 147: ',Y' (ID: 71464)
  Prédit: ',Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',Y' → logprob: -0.5762321352958679
    2. ',' → logprob: -0.8262321352958679
    3. ',y' → logprob: -9.076231956481934
    4. ',
' → logprob: -9.576231956481934
    5. '(' → logprob: -10.201231956481934
    6. '(Y' → logprob: -10.326231956481934
    7. ' ,' → logprob: -10.576231956481934
    8. ' ' → logprob: -12.451231956481934
    9. '","' → logprob: -13.451231956481934
    10. ',",' → logprob: -13.951231956481934

Token 148: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07889188081026077
    2. ')' → logprob: -2.5788919925689697
    3. ')))' → logprob: -13.95389175415039
    4. '))
' → logprob: -14.20389175415039
    5. '()' → logprob: -15.82889175415039
    6. ')
' → logprob: -15.95389175415039
    7. '()))' → logprob: -16.20389175415039
    8. '())' → logprob: -16.20389175415039
    9. ' ' → logprob: -16.70389175415039
    10. ' ))' → logprob: -17.07889175415039

Token 149: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004045156296342611
    2. '<|end|>' → logprob: -6.129045009613037
    3. '
' → logprob: -7.004045009613037
    4. ' if' → logprob: -8.129045486450195
    5. '```' → logprob: -8.379045486450195
    6. 'main' → logprob: -9.129045486450195
    7. 'print' → logprob: -9.129045486450195
    8. '\n' → logprob: -10.254045486450195
    9. '__' → logprob: -10.254045486450195
    10. '#' → logprob: -10.379045486450195

Token 150: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4291255474090576
    2. '__' → logprob: -1.0541255474090576
    3. ' ' → logprob: -8.054125785827637
    4. ' ' → logprob: -10.179125785827637
    5. '_' → logprob: -10.304125785827637
    6. 'name' → logprob: -10.929125785827637
    7. '_name' → logprob: -11.429125785827637
    8. '20' → logprob: -14.054125785827637
    9. ' True' → logprob: -14.054125785827637
    10. '___' → logprob: -14.304125785827637

Token 151: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009404589422047138
    2. ' ==' → logprob: -5.25940465927124
    3. ' __' → logprob: -5.75940465927124
    4. '==' → logprob: -7.00940465927124
    5. '__.__' → logprob: -10.384404182434082
    6. '.__' → logprob: -10.509404182434082
    7. '__.' → logprob: -11.259404182434082
    8. '=="' → logprob: -11.509404182434082
    9. '__["' → logprob: -13.009404182434082
    10. '_' → logprob: -13.009404182434082

Token 152: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.729906196298543e-06
    2. '__.__' → logprob: -11.750009536743164
    3. '==' → logprob: -14.000009536743164
    4. '__('' → logprob: -15.250009536743164
    5. ' ==' → logprob: -15.625009536743164
    6. '__.' → logprob: -15.750009536743164
    7. '"' → logprob: -16.500009536743164
    8. '____' → logprob: -16.625009536743164
    9. '__("' → logprob: -16.875009536743164
    10. '___' → logprob: -16.875009536743164

Token 153: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.29978349804878235
    2. ' ==' → logprob: -2.04978346824646
    3. '==' → logprob: -2.04978346824646
    4. '=="' → logprob: -6.674783706665039
    5. '=='' → logprob: -9.049783706665039
    6. '_' → logprob: -10.049783706665039
    7. '___' → logprob: -10.799783706665039
    8. '===' → logprob: -11.299783706665039
    9. '=' → logprob: -11.674783706665039
    10. ' __' → logprob: -11.924783706665039

Token 154: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1002441942691803
    2. ''' → logprob: -2.3502442836761475
    3. ' "__' → logprob: -10.600244522094727
    4. '__' → logprob: -11.475244522094727
    5. ' '__' → logprob: -13.850244522094727
    6. ''"' → logprob: -14.600244522094727
    7. '"user' → logprob: -15.225244522094727
    8. '"name' → logprob: -15.725244522094727
    9. '"'' → logprob: -15.850244522094727
    10. ' "' → logprob: -16.850244522094727

Token 155: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00015681622608099133
    2. '__' → logprob: -9.25015640258789
    3. 'name' → logprob: -9.75015640258789
    4. '"' → logprob: -13.75015640258789
    5. '_main' → logprob: -14.12515640258789
    6. ' main' → logprob: -14.87515640258789
    7. 'built' → logprob: -15.87515640258789
    8. '```' → logprob: -17.00015640258789
    9. '__":
' → logprob: -17.25015640258789
    10. '-main' → logprob: -17.50015640258789

Token 156: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.20271585881710052
    2. '__' → logprob: -1.7027158737182617
    3. '__.' → logprob: -6.952715873718262
    4. '__.__' → logprob: -8.327715873718262
    5. '__':
' → logprob: -9.452715873718262
    6. '__["' → logprob: -10.827715873718262
    7. '__
' → logprob: -13.952715873718262
    8. '_' → logprob: -14.077715873718262
    9. '__",' → logprob: -14.077715873718262
    10. '__:' → logprob: -14.202715873718262

Token 157: ' ' (ID: 220)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.240939661860466
    2. 'main' → logprob: -1.7409396171569824
    3. '"' → logprob: -3.3659396171569824
    4. ' ' → logprob: -5.865939617156982
    5. '__' → logprob: -7.365939617156982
    6. ' __' → logprob: -8.24094009399414
    7. '	main' → logprob: -8.99094009399414
    8. '   ' → logprob: -9.24094009399414
    9. ' "' → logprob: -9.36594009399414
    10. '_main' → logprob: -9.61594009399414

Token 158: ' import' (ID: 1588)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.941850526549388e-06
    2. ' main' → logprob: -11.750007629394531
    3. ' ' → logprob: -18.00000762939453
    4. '	main' → logprob: -18.50000762939453
    5. 'import' → logprob: -21.50000762939453
    6. '(main' → logprob: -22.87500762939453
    7. '  ' → logprob: -23.12500762939453
    8. '   ' → logprob: -23.25000762939453
    9. '.main' → logprob: -23.25000762939453
    10. '_main' → logprob: -23.50000762939453

Token 159: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16022920608520508
    2. 'sys' → logprob: -1.910229206085205
    3. '=sys' → logprob: -12.410228729248047
    4. '	sys' → logprob: -14.410228729248047
    5. '__' → logprob: -15.160228729248047
    6. '_sys' → logprob: -17.285228729248047
    7. '(sys' → logprob: -17.410228729248047
    8. ' __' → logprob: -17.410228729248047
    9. ' os' → logprob: -18.285228729248047
    10. 'os' → logprob: -18.410228729248047

Token 160: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06416148692369461
    2. '  
' → logprob: -3.564161539077759
    3. '
' → logprob: -3.939161539077759
    4. 'sys' → logprob: -4.43916130065918
    5. ' sys' → logprob: -6.68916130065918
    6. 'import' → logprob: -8.06416130065918
    7. '(sys' → logprob: -8.43916130065918
    8. ';' → logprob: -8.93916130065918
    9. '=sys' → logprob: -8.93916130065918
    10. '<|end|>' → logprob: -9.31416130065918

Token 161: ' io' (ID: 9818)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.08496201038360596
    2. 'io' → logprob: -2.8349618911743164
    3. 'thread' → logprob: -4.209961891174316
    4. 'collections' → logprob: -5.834961891174316
    5. 'bis' → logprob: -5.959961891174316
    6. 'math' → logprob: -6.834961891174316
    7. 'it' → logprob: -8.209961891174316
    8. 'built' → logprob: -8.334961891174316
    9. 'typing' → logprob: -8.584961891174316
    10. ' itertools' → logprob: -9.084961891174316

Token 162: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002862177789211273
    2. '  
' → logprob: -6.127861976623535
    3. '
' → logprob: -8.252861976623535
    4. 'sys' → logprob: -8.377861976623535
    5. '

' → logprob: -9.502861976623535
    6. ' ' → logprob: -9.877861976623535
    7. '' → logprob: -10.752861976623535
    8. 'import' → logprob: -11.377861976623535
    9. '\n' → logprob: -11.752861976623535
    10. ' sys' → logprob: -12.377861976623535

Token 163: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1317748725414276
    2. 'sys' → logprob: -2.75677490234375
    3. '
' → logprob: -3.63177490234375
    4. '  
' → logprob: -3.75677490234375
    5. 'input' → logprob: -5.00677490234375
    6. 'if' → logprob: -6.88177490234375
    7. ' sys' → logprob: -6.88177490234375
    8. 'io' → logprob: -8.25677490234375
    9. ' 
' → logprob: -8.50677490234375
    10. ';' → logprob: -8.88177490234375

Token 164: ' main' (ID: 2758)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5749843716621399
    2. 'sys' → logprob: -0.9499843716621399
    3. ' ' → logprob: -3.074984312057495
    4. 'data' → logprob: -6.699984550476074
    5. 'if' → logprob: -6.824984550476074
    6. '_input' → logprob: -7.199984550476074
    7. 'stdin' → logprob: -7.574984550476074
    8. ' sys' → logprob: -8.449984550476074
    9. 'for' → logprob: -8.574984550476074
    10. '_' → logprob: -9.074984550476074

Token 165: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005160979344509542
    2. '()
' → logprob: -7.625515937805176
    3. '(' → logprob: -10.875515937805176
    4. '()

' → logprob: -12.875515937805176
    5. '();' → logprob: -13.625515937805176
    6. ' ()' → logprob: -14.000515937805176
    7. '()<' → logprob: -14.000515937805176
    8. '()\' → logprob: -14.125515937805176
    9. '<|end|>' → logprob: -14.125515937805176
    10. '()`' → logprob: -14.500515937805176


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 74
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 129
Précision stricte (1ère position): 45.40%
Précision adaptée (1ère position): 47.85%
Précision (top 10): 79.14%
================================================================================
