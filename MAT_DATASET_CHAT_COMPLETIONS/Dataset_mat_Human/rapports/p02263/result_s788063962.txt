================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calc(E,A):
  if len(A) >= 2:
    a2 = int(A.pop())
    a1 = int(A.pop())
    if E == '*' :
      a3 = a1 * a2
    elif E == '+':
      a3 = a1 + a2
    elif E == '-':
      a3 = a1 - a2
    A.append(a3)
    

E = list(input().split())
a = []
for e in E:
  if (e == '+' or e == '-' or e == '*') :
    calc(e,a)
  else:
    a.append(e)

print(a[0])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calc' (ID: 25691)
  → Token d'amorce (pas de prédiction)

Token 2: '(E' (ID: 20882)
  → Token d'amorce (pas de prédiction)

Token 3: ',A' (ID: 59196)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4291732609272003
    2. ',' → logprob: -1.929173231124878
    3. ')' → logprob: -2.054173231124878
    4. 'x' → logprob: -2.804173231124878
    5. '_' → logprob: -6.054173469543457
    6. 'q' → logprob: -6.554173469543457
    7. '[' → logprob: -6.804173469543457
    8. '=' → logprob: -6.804173469543457
    9. 'nergy' → logprob: -7.179173469543457
    10. 'n' → logprob: -7.304173469543457

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2442047894001007
    2. ')' → logprob: -2.1192047595977783
    3. ',' → logprob: -2.3692047595977783
    4. '[' → logprob: -6.619204998016357
    5. '*' → logprob: -7.869204998016357
    6. ':' → logprob: -8.1192045211792
    7. ',b' → logprob: -9.3692045211792
    8. '_' → logprob: -9.3692045211792
    9. ' ,' → logprob: -9.8692045211792
    10. '```' → logprob: -10.1192045211792

Token 5: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2504568099975586
    2. ':' → logprob: -1.7504568099975586
    3. ' ' → logprob: -3.7504568099975586
    4. '(' → logprob: -5.250456809997559
    5. ' :' → logprob: -5.625456809997559
    6. ' return' → logprob: -5.750456809997559
    7. '```' → logprob: -6.000456809997559
    8. ''' → logprob: -6.250456809997559
    9. '    ' → logprob: -6.750456809997559
    10. '[' → logprob: -6.875456809997559

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7404240965843201
    2. ' ' → logprob: -0.8654240965843201
    3. ':' → logprob: -3.115424156188965
    4. ' return' → logprob: -3.990424156188965
    5. ''' → logprob: -4.740424156188965
    6. '  ' → logprob: -5.240424156188965
    7. '    ' → logprob: -5.615424156188965
    8. 'return' → logprob: -5.740424156188965
    9. ' :' → logprob: -5.990424156188965
    10. '```' → logprob: -6.115424156188965

Token 7: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48670798540115356
    2. ' E' → logprob: -0.9867079854011536
    3. ' A' → logprob: -4.736708164215088
    4. '  ' → logprob: -6.611708164215088
    5. ' not' → logprob: -6.861708164215088
    6. 'E' → logprob: -6.861708164215088
    7. ' )' → logprob: -9.36170768737793
    8. ' (' → logprob: -9.48670768737793
    9. 'A' → logprob: -9.98670768737793
    10. ' a' → logprob: -10.11170768737793

Token 8: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2609524726867676
    2. '(E' → logprob: -1.5109524726867676
    3. '(A' → logprob: -4.760952472686768
    4. ' (' → logprob: -7.885952472686768
    5. ' ' → logprob: -11.13595199584961
    6. '(
' → logprob: -11.88595199584961
    7. '(s' → logprob: -12.26095199584961
    8. ')' → logprob: -12.88595199584961
    9. 'A' → logprob: -12.88595199584961
    10. '((' → logprob: -13.13595199584961

Token 9: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003629408311098814
    2. ')>' → logprob: -6.378629207611084
    3. ')==' → logprob: -6.753629207611084
    4. '[' → logprob: -8.253629684448242
    5. ' )' → logprob: -8.253629684448242
    6. ')>=' → logprob: -9.253629684448242
    7. ')<' → logprob: -10.003629684448242
    8. '>' → logprob: -10.128629684448242
    9. ')<=' → logprob: -10.628629684448242
    10. ' ' → logprob: -11.128629684448242

Token 10: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7710491418838501
    2. ' >' → logprob: -1.27104914188385
    3. '[' → logprob: -2.3960490226745605
    4. ' ==' → logprob: -2.6460490226745605
    5. '==' → logprob: -3.1460490226745605
    6. ' <' → logprob: -4.0210490226745605
    7. ' ' → logprob: -4.0210490226745605
    8. '<' → logprob: -4.5210490226745605
    9. ')' → logprob: -6.3960490226745605
    10. ' >=' → logprob: -7.2710490226745605

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06949449330568314
    2. '1' → logprob: -3.0694944858551025
    3. '2' → logprob: -3.9444944858551025
    4. '3' → logprob: -6.694494724273682
    5. '4' → logprob: -10.319494247436523
    6. '0' → logprob: -10.694494247436523
    7. '5' → logprob: -11.069494247436523
    8. ' E' → logprob: -12.319494247436523
    9. 'E' → logprob: -12.444494247436523
    10. '10' → logprob: -12.694494247436523

Token 12: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7127602100372314
    2. '1' → logprob: -0.8377602100372314
    3. '3' → logprob: -3.0877602100372314
    4. ' ' → logprob: -3.5877602100372314
    5. '4' → logprob: -6.462759971618652
    6. '0' → logprob: -6.587759971618652
    7. '5' → logprob: -7.712759971618652
    8. '10' → logprob: -8.587759971618652
    9. '6' → logprob: -10.087759971618652
    10. 'E' → logprob: -10.337759971618652

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016099588247016072
    2. ':
' → logprob: -6.876609802246094
    3. ' :' → logprob: -7.751609802246094
    4. ' and' → logprob: -9.251609802246094
    5. ':return' → logprob: -11.001609802246094
    6. '):' → logprob: -11.751609802246094
    7. ' :
' → logprob: -12.001609802246094
    8. '   ' → logprob: -12.251609802246094
    9. ' ' → logprob: -13.001609802246094
    10. ':
' → logprob: -13.126609802246094

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6845929622650146
    2. '\n' → logprob: -1.9345929622650146
    3. '  
' → logprob: -2.4345929622650146
    4. '    
' → logprob: -3.1845929622650146
    5. '
' → logprob: -3.1845929622650146
    6. '\' → logprob: -3.3095929622650146
    7. ' ' → logprob: -3.6845929622650146
    8. ' 
' → logprob: -3.8095929622650146
    9. '    ' → logprob: -3.9345929622650146
    10. '     ' → logprob: -4.309593200683594

Token 15: ' a' (ID: 261)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.164031982421875
    2. '     ' → logprob: -1.664031982421875
    3. ' ' → logprob: -2.039031982421875
    4. ' return' → logprob: -2.039031982421875
    5. '   ' → logprob: -2.789031982421875
    6. '    ' → logprob: -3.039031982421875
    7. '\n' → logprob: -3.289031982421875
    8. '       ' → logprob: -3.914031982421875
    9. '\' → logprob: -4.289031982421875
    10. 'r' → logprob: -4.414031982421875

Token 16: '2' (ID: 17)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8503337502479553
    2. '[' → logprob: -1.7253336906433105
    3. ' =' → logprob: -1.9753336906433105
    4. '=' → logprob: -2.1003336906433105
    5. '+' → logprob: -2.9753336906433105
    6. '+=' → logprob: -3.8503336906433105
    7. '   ' → logprob: -4.4753336906433105
    8. ' +=' → logprob: -5.1003336906433105
    9. '[i' → logprob: -5.2253336906433105
    10. ',' → logprob: -5.6003336906433105

Token 17: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.819312334060669
    2. '+' → logprob: -1.819312334060669
    3. ' =' → logprob: -1.819312334060669
    4. '=' → logprob: -2.444312334060669
    5. 'nd' → logprob: -3.444312334060669
    6. ' ' → logprob: -3.694312334060669
    7. ' +' → logprob: -4.31931209564209
    8. ']' → logprob: -4.69431209564209
    9. ' +=' → logprob: -4.69431209564209
    10. 'm' → logprob: -5.06931209564209

Token 18: ' int' (ID: 677)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.03135984390974045
    2. 'A' → logprob: -3.531359910964966
    3. ' ' → logprob: -7.031359672546387
    4. ' E' → logprob: -8.031359672546387
    5. ' (' → logprob: -9.781359672546387
    6. 'E' → logprob: -10.031359672546387
    7. ' len' → logprob: -10.531359672546387
    8. ' a' → logprob: -10.656359672546387
    9. 'a' → logprob: -10.656359672546387
    10. ' sum' → logprob: -10.656359672546387

Token 19: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.08950991183519363
    2. '(' → logprob: -2.464509963989258
    3. ' (' → logprob: -8.339509963989258
    4. ' ' → logprob: -9.339509963989258
    5. 'A' → logprob: -9.464509963989258
    6. '(E' → logprob: -9.714509963989258
    7. '(a' → logprob: -9.839509963989258
    8. ' A' → logprob: -11.214509963989258
    9. '(
' → logprob: -11.464509963989258
    10. '((' → logprob: -11.964509963989258

Token 20: '.pop' (ID: 15746)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -5.3358446166384965e-05
    2. ' [' → logprob: -10.250053405761719
    3. '[-' → logprob: -11.875053405761719
    4. '\[' → logprob: -12.500053405761719
    5. '1' → logprob: -13.250053405761719
    6. ')' → logprob: -13.250053405761719
    7. ' ' → logprob: -14.125053405761719
    8. '[len' → logprob: -14.500053405761719
    9. '```' → logprob: -14.500053405761719
    10. '[i' → logprob: -14.500053405761719

Token 21: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006995689473114908
    2. '()' → logprob: -8.000699996948242
    3. '(-' → logprob: -8.500699996948242
    4. '())' → logprob: -8.750699996948242
    5. ' (' → logprob: -14.500699996948242
    6. '()))' → logprob: -14.875699996948242
    7. ' ' → logprob: -15.250699996948242
    8. '(
' → logprob: -15.500699996948242
    9. '(

' → logprob: -15.750699996948242
    10. '  ' → logprob: -16.125699996948242

Token 22: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8722766041755676
    2. ' ' → logprob: -1.4972765445709229
    3. '+' → logprob: -1.6222765445709229
    4. '   ' → logprob: -3.497276544570923
    5. '(' → logprob: -3.747276544570923
    6. '*' → logprob: -3.872276544570923
    7. ' +' → logprob: -4.372276782989502
    8. '\' → logprob: -4.997276782989502
    9. '    ' → logprob: -4.997276782989502
    10. '
' → logprob: -4.997276782989502

Token 23: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6921775341033936
    2. 'a' (adapté à ' a') → logprob: -1.9421775341033936
    3. '  
' → logprob: -2.1921775341033936
    4. '+' → logprob: -3.0671775341033936
    5. ' 
' → logprob: -3.1921775341033936
    6. '*' → logprob: -3.9421775341033936
    7. '+
' → logprob: -3.9421775341033936
    8. ')' → logprob: -4.067177772521973
    9. '\n' → logprob: -4.067177772521973
    10. '
' → logprob: -4.192177772521973

Token 24: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48083826899528503
    2. '2' → logprob: -0.9808382987976074
    3. ' ' → logprob: -5.730838298797607
    4. '[' → logprob: -6.730838298797607
    5. '0' → logprob: -6.730838298797607
    6. ' =' → logprob: -7.480838298797607
    7. '(' → logprob: -8.98083782196045
    8. '   ' → logprob: -9.60583782196045
    9. '  ' → logprob: -9.98083782196045
    10. '3' → logprob: -9.98083782196045

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021441932767629623
    2. '=' → logprob: -6.2521443367004395
    3. ' ' → logprob: -8.502143859863281
    4. ' +=' → logprob: -12.877143859863281
    5. ' ==' → logprob: -12.877143859863281
    6. ')' → logprob: -13.252143859863281
    7. '_' → logprob: -13.502143859863281
    8. '[' → logprob: -14.127143859863281
    9. '  ' → logprob: -14.502143859863281
    10. ' =)' → logprob: -15.002143859863281

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05489424243569374
    2. 'int' → logprob: -2.929894208908081
    3. '=int' → logprob: -12.42989444732666
    4. '(int' → logprob: -12.55489444732666
    5. '<int' → logprob: -13.42989444732666
    6. ' ' → logprob: -13.67989444732666
    7. '[int' → logprob: -13.80489444732666
    8. '	int' → logprob: -14.67989444732666
    9. ' in' → logprob: -15.67989444732666
    10. ':int' → logprob: -16.054893493652344

Token 27: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.018159886822104454
    2. '(' → logprob: -4.018159866333008
    3. '(E' → logprob: -11.643159866333008
    4. '('' → logprob: -14.643159866333008
    5. '(a' → logprob: -15.143159866333008
    6. '(S' → logprob: -16.268159866333008
    7. '(
' → logprob: -16.393159866333008
    8. ' (' → logprob: -16.518159866333008
    9. '()' → logprob: -16.893159866333008
    10. '("("' → logprob: -17.393159866333008

Token 28: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0002116462419508025
    2. '.' → logprob: -8.500211715698242
    3. ' .' → logprob: -12.500211715698242
    4. 'pop' → logprob: -12.750211715698242
    5. '().' → logprob: -14.500211715698242
    6. '.p' → logprob: -15.125211715698242
    7. ').' → logprob: -15.375211715698242
    8. '(pop' → logprob: -15.375211715698242
    9. ')' → logprob: -15.875211715698242
    10. '	pop' → logprob: -16.500211715698242

Token 29: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1274271458387375
    2. '()' → logprob: -2.127427101135254
    3. ')' → logprob: -7.752427101135254
    4. '()))' → logprob: -10.877427101135254
    5. '(' → logprob: -11.252427101135254
    6. '();)' → logprob: -11.502427101135254
    7. '()
' → logprob: -11.752427101135254
    8. ' ())' → logprob: -11.877427101135254
    9. '())
' → logprob: -12.127427101135254
    10. '()]' → logprob: -13.002427101135254

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8003686666488647
    2. '+' → logprob: -1.5503686666488647
    3. '    
' → logprob: -2.5503687858581543
    4. ')' → logprob: -3.0503687858581543
    5. ' ' → logprob: -3.4253687858581543
    6. '
' → logprob: -3.5503687858581543
    7. '    ' → logprob: -3.6753687858581543
    8. '+
' → logprob: -3.8003687858581543
    9. '     
' → logprob: -3.9253687858581543
    10. '  
' → logprob: -4.050368785858154

Token 31: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4830605983734131
    2. ' ' → logprob: -1.608060598373413
    3. '+
' → logprob: -2.983060598373413
    4. '*' → logprob: -3.108060598373413
    5. ')' → logprob: -3.858060598373413
    6. '   ' → logprob: -4.483060836791992
    7. ' 
' → logprob: -4.733060836791992
    8. '  
' → logprob: -4.858060836791992
    9. ' +' → logprob: -4.983060836791992
    10. '\n' → logprob: -5.483060836791992

Token 32: ' E' (ID: 457)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.092180997133255
    2. ' E' → logprob: -3.0921809673309326
    3. ' ' → logprob: -3.4671809673309326
    4. 'a' → logprob: -4.842181205749512
    5. ' (' → logprob: -6.342181205749512
    6. 'E' → logprob: -6.967181205749512
    7. ' A' → logprob: -7.842181205749512
    8. '  ' → logprob: -8.717181205749512
    9. ' len' → logprob: -9.467181205749512
    10. '(' → logprob: -9.592181205749512

Token 33: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5276042222976685
    2. ' ==' → logprob: -1.0276042222976685
    3. ' ' → logprob: -3.152604103088379
    4. '==' → logprob: -5.277604103088379
    5. ' [' → logprob: -6.777604103088379
    6. '  ' → logprob: -7.277604103088379
    7. ' in' → logprob: -7.402604103088379
    8. '.' → logprob: -8.027604103088379
    9. ' >' → logprob: -8.027604103088379
    10. '=' → logprob: -9.027604103088379

Token 34: ' '*'' (ID: 89603)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8974475264549255
    2. ' '+'' → logprob: -1.1474475860595703
    3. ' '' → logprob: -2.0224475860595703
    4. ' "' → logprob: -3.3974475860595703
    5. '"' → logprob: -3.5224475860595703
    6. ' "+"' → logprob: -3.7724475860595703
    7. ''+' → logprob: -4.02244758605957
    8. '"+"' → logprob: -4.27244758605957
    9. ' ' → logprob: -4.64744758605957
    10. ' '+' → logprob: -4.77244758605957

Token 35: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018312999745830894
    2. ' and' → logprob: -7.501831531524658
    3. ' :' → logprob: -7.751831531524658
    4. ' ' → logprob: -8.5018310546875
    5. '<|end|>' → logprob: -9.2518310546875
    6. '*' → logprob: -9.3768310546875
    7. ':
' → logprob: -9.5018310546875
    8. '):' → logprob: -9.8768310546875
    9. ' *' → logprob: -10.0018310546875
    10. ' or' → logprob: -10.0018310546875

Token 36: '     ' (ID: 530)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.185781717300415
    2. ''' → logprob: -1.935781717300415
    3. '   ' → logprob: -2.060781717300415
    4. '    ' → logprob: -2.435781717300415
    5. 'return' → logprob: -2.560781717300415
    6. 'a' → logprob: -2.685781717300415
    7. ' return' → logprob: -3.060781717300415
    8. ' a' → logprob: -3.185781717300415
    9. '*' → logprob: -3.685781717300415
    10. '     ' → logprob: -4.435781478881836

Token 37: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.43604037165641785
    2. 'return' → logprob: -1.8110404014587402
    3. ' ' → logprob: -2.4360404014587402
    4. 'A' → logprob: -3.0610404014587402
    5. ' return' → logprob: -3.6860404014587402
    6. ' a' → logprob: -4.43604040145874
    7. 'r' → logprob: -5.18604040145874
    8. '*' → logprob: -6.18604040145874
    9. '   ' → logprob: -6.31104040145874
    10. 'E' → logprob: -6.43604040145874

Token 38: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002889990573748946
    2. '2' → logprob: -5.877890110015869
    3. ' ' → logprob: -9.877889633178711
    4. ' *' → logprob: -11.502889633178711
    5. '*' → logprob: -12.252889633178711
    6. 'a' → logprob: -12.627889633178711
    7. 's' → logprob: -12.752889633178711
    8. ' a' → logprob: -12.752889633178711
    9. '*a' → logprob: -13.377889633178711
    10. '_' → logprob: -13.690389633178711

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269732564687729
    2. '=' → logprob: -2.1269731521606445
    3. '=a' → logprob: -10.251973152160645
    4. ' ' → logprob: -12.001973152160645
    5. ' *=' → logprob: -13.501973152160645
    6. 'a' → logprob: -13.626973152160645
    7. '.' → logprob: -15.251973152160645
    8. '*=' → logprob: -15.376973152160645
    9. '=int' → logprob: -15.626973152160645
    10. ' a' → logprob: -16.00197410583496

Token 40: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3504883348941803
    2. 'a' → logprob: -1.225488305091858
    3. ' ' → logprob: -6.225488185882568
    4. '  ' → logprob: -10.600488662719727
    5. '	a' → logprob: -11.225488662719727
    6. '   ' → logprob: -12.350488662719727
    7. ' (' → logprob: -12.475488662719727
    8. '(a' → logprob: -12.600488662719727
    9. 'str' → logprob: -12.725488662719727
    10. ' str' → logprob: -12.725488662719727

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.277553620748222e-05
    2. '2' → logprob: -10.375062942504883
    3. ' ' → logprob: -11.250062942504883
    4. '*' → logprob: -11.625062942504883
    5. ' *' → logprob: -12.125062942504883
    6. '_' → logprob: -13.812562942504883
    7. '3' → logprob: -14.125062942504883
    8. 'a' → logprob: -15.187562942504883
    9. '[' → logprob: -15.437562942504883
    10. 'r' → logprob: -15.437562942504883

Token 42: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5768773555755615
    2. ' *' → logprob: -0.8268773555755615
    3. '*a' → logprob: -7.076877593994141
    4. ' ' → logprob: -9.70187759399414
    5. '**' → logprob: -10.82687759399414
    6. ' **' → logprob: -12.45187759399414
    7. '*b' → logprob: -13.95187759399414
    8. '*u' → logprob: -13.95187759399414
    9. '*object' → logprob: -14.20187759399414
    10. '*>' → logprob: -14.45187759399414

Token 43: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.029769469052553177
    2. ' a' → logprob: -3.5297694206237793
    3. ' ' → logprob: -11.154769897460938
    4. '<|end|>' → logprob: -12.404769897460938
    5. '_a' → logprob: -15.529769897460938
    6. '	a' → logprob: -15.529769897460938
    7. ' ' → logprob: -16.654769897460938
    8. '  ' → logprob: -17.654769897460938
    9. '*a' → logprob: -17.654769897460938
    10. '#a' → logprob: -18.654769897460938

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.6895233531831764e-05
    2. ' ' → logprob: -11.12502670288086
    3. '3' → logprob: -13.31252670288086
    4. 's' → logprob: -13.37502670288086
    5. '۲' → logprob: -13.75002670288086
    6. '_' → logprob: -13.87502670288086
    7. '*' → logprob: -14.00002670288086
    8. '   ' → logprob: -14.18752670288086
    9. '₂' → logprob: -14.43752670288086
    10. '  ' → logprob: -14.43752670288086

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6940487623214722
    2. '<|end|>' → logprob: -1.3190487623214722
    3. '\n' → logprob: -1.5690487623214722
    4. '  
' → logprob: -4.944048881530762
    5. '   ' → logprob: -5.319048881530762
    6. '<|end|>' → logprob: -6.194048881530762
    7. ' ' → logprob: -6.319048881530762
    8. ' 
' → logprob: -6.444048881530762
    9. '\r' → logprob: -6.944048881530762
    10. 'return' → logprob: -6.944048881530762

Token 47: ' elif' (ID: 9497)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0190569162368774
    2. '
' → logprob: -1.3940569162368774
    3. '<|end|>' → logprob: -1.6440569162368774
    4. '   ' → logprob: -2.519056797027588
    5. 'elif' (adapté à ' elif') → logprob: -2.894056797027588
    6. ' ' → logprob: -3.894056797027588
    7. '  
' → logprob: -4.894056797027588
    8. 'else' → logprob: -4.894056797027588
    9. '     ' → logprob: -5.519056797027588
    10. '<|end|>' → logprob: -5.519056797027588

Token 48: ' E' (ID: 457)
  Prédit: ' E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' E' → logprob: -0.36191603541374207
    2. ' ' → logprob: -1.2369160652160645
    3. ''' → logprob: -4.9869160652160645
    4. 'E' → logprob: -5.9869160652160645
    5. '<|end|>' → logprob: -6.3619160652160645
    6. '  ' → logprob: -6.8619160652160645
    7. ' '' → logprob: -8.111915588378906
    8. '"' → logprob: -8.236915588378906
    9. ''E' → logprob: -8.611915588378906
    10. ' ' → logprob: -8.611915588378906

Token 49: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.056830994784832
    2. '==' → logprob: -2.931830883026123
    3. ' ' → logprob: -7.306830883026123
    4. ' =='' → logprob: -7.556830883026123
    5. '=='' → logprob: -7.931830883026123
    6. ''' → logprob: -8.431831359863281
    7. ' =' → logprob: -9.681831359863281
    8. ' '' → logprob: -10.806831359863281
    9. ' ' → logprob: -11.056831359863281
    10. '=' → logprob: -11.181831359863281

Token 50: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0010899738408625126
    2. ' '' → logprob: -7.501090049743652
    3. '"' → logprob: -8.001090049743652
    4. ' '+'' → logprob: -9.376090049743652
    5. ' ' → logprob: -10.626090049743652
    6. ''s' → logprob: -11.126090049743652
    7. ''-' → logprob: -11.126090049743652
    8. ''/' → logprob: -11.251090049743652
    9. ''+' → logprob: -11.376090049743652
    10. ' '/'' → logprob: -11.626090049743652

Token 51: '':
' (ID: 7669)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.11276789009571075
    2. ':' → logprob: -2.4877679347991943
    3. ''' → logprob: -4.612767696380615
    4. ' '' → logprob: -5.112767696380615
    5. ' ':' → logprob: -5.612767696380615
    6. '':' → logprob: -5.987767696380615
    7. ' ' → logprob: -6.737767696380615
    8. ' :
' → logprob: -9.237768173217773
    9. '':'' → logprob: -10.612768173217773
    10. ' ':'' → logprob: -10.737768173217773

Token 52: '     ' (ID: 530)
  Prédit: '     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '     ' → logprob: -0.15754517912864685
    2. ' a' → logprob: -2.4075450897216797
    3. ' ' → logprob: -3.0325450897216797
    4. 'a' → logprob: -6.03254508972168
    5. '<|end|>' → logprob: -6.15754508972168
    6. '    ' → logprob: -6.65754508972168
    7. '      ' → logprob: -6.78254508972168
    8. '      
' → logprob: -8.53254508972168
    9. '  ' → logprob: -9.15754508972168
    10. '   ' → logprob: -9.15754508972168

Token 53: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.28179672360420227
    2. 'a' (adapté à ' a') → logprob: -1.4067966938018799
    3. ' ' → logprob: -7.406796932220459
    4. '     ' → logprob: -11.0317964553833
    5. '    ' → logprob: -11.4067964553833
    6. '  ' → logprob: -12.4067964553833
    7. '	a' → logprob: -13.7817964553833
    8. '   ' → logprob: -13.9067964553833
    9. '      ' → logprob: -14.0317964553833
    10. ' (' → logprob: -14.4067964553833

Token 54: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4290820062160492
    2. '3' → logprob: -1.0540820360183716
    3. ' ' → logprob: -8.054081916809082
    4. ' a' → logprob: -10.429081916809082
    5. '2' → logprob: -10.679081916809082
    6. '+' → logprob: -12.804081916809082
    7. '  ' → logprob: -12.929081916809082
    8. 'a' → logprob: -13.179081916809082
    9. '   ' → logprob: -14.054081916809082
    10. 'd' → logprob: -14.679081916809082

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012567223981022835
    2. '=' → logprob: -4.387567043304443
    3. ' ' → logprob: -9.887567520141602
    4. ' +=' → logprob: -12.012567520141602
    5. ' +' → logprob: -15.012567520141602
    6. ' a' → logprob: -16.2625675201416
    7. '+' → logprob: -16.3875675201416
    8. '  ' → logprob: -16.5125675201416
    9. '+=' → logprob: -16.7625675201416
    10. ' =)' → logprob: -17.0125675201416

Token 56: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14269302785396576
    2. 'a' → logprob: -2.017693042755127
    3. ' ' → logprob: -11.017692565917969
    4. '  ' → logprob: -14.767692565917969
    5. ' ' → logprob: -14.767692565917969
    6. ' (' → logprob: -15.517692565917969
    7. '	a' → logprob: -15.642692565917969
    8. '(a' → logprob: -15.892692565917969
    9. '_a' → logprob: -17.14269256591797
    10. '    ' → logprob: -17.26769256591797

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.9054008084349334e-05
    2. '+' → logprob: -10.750039100646973
    3. '2' → logprob: -11.500039100646973
    4. 'a' → logprob: -12.750039100646973
    5. ' ' → logprob: -13.000039100646973
    6. '_' → logprob: -13.375039100646973
    7. '3' → logprob: -15.500039100646973
    8. 'n' → logprob: -15.750039100646973
    9. ' +' → logprob: -15.750039100646973
    10. 'd' → logprob: -17.125038146972656

Token 58: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1269332468509674
    2. '+' → logprob: -2.1269333362579346
    3. ' ' → logprob: -12.501933097839355
    4. '+a' → logprob: -13.876933097839355
    5. ' plus' → logprob: -15.501933097839355
    6. ' ' → logprob: -15.751933097839355
    7. '＋' → logprob: -16.376934051513672
    8. '+b' → logprob: -17.501934051513672
    9. '<|end|>' → logprob: -17.501934051513672
    10. '[' → logprob: -17.626934051513672

Token 59: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048587825149297714
    2. ' a' → logprob: -3.0485877990722656
    3. ' ' → logprob: -14.673587799072266
    4. '	a' → logprob: -17.673587799072266
    5. '_a' → logprob: -20.173587799072266
    6. '  ' → logprob: -20.173587799072266
    7. '>a' → logprob: -20.673587799072266
    8. '    ' → logprob: -20.923587799072266
    9. '   ' → logprob: -21.048587799072266
    10. ' ' → logprob: -21.548587799072266

Token 60: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -14.000001907348633
    3. '1' → logprob: -14.500001907348633
    4. '3' → logprob: -16.000001907348633
    5. '۲' → logprob: -17.062501907348633
    6. '₂' → logprob: -18.312501907348633
    7. '２' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.937501907348633
    9. '_' → logprob: -19.125001907348633
    10. '٢' → logprob: -19.187501907348633

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017551211640238762
    2. '    
' → logprob: -4.767551422119141
    3. '<|end|>' → logprob: -5.767551422119141
    4. '  
' → logprob: -6.142551422119141
    5. '
' → logprob: -6.142551422119141
    6. '\n' → logprob: -7.642551422119141
    7. 'elif' → logprob: -8.14255142211914
    8. 'else' → logprob: -8.39255142211914
    9. 'return' → logprob: -9.01755142211914
    10. '   
' → logprob: -9.64255142211914

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012235627509653568
    2. '    
' → logprob: -7.126223564147949
    3. '  
' → logprob: -9.50122356414795
    4. '```' → logprob: -9.75122356414795
    5. 'else' → logprob: -9.87622356414795
    6. '\n' → logprob: -9.87622356414795
    7. 'elif' → logprob: -9.87622356414795
    8. 'return' → logprob: -9.87622356414795
    9. ' ' → logprob: -10.37622356414795
    10. '\' → logprob: -10.62622356414795

Token 63: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011063501238822937
    2. 'else' → logprob: -5.386063575744629
    3. 'elif' (adapté à ' elif') → logprob: -5.636063575744629
    4. ' ' → logprob: -6.761063575744629
    5. ' else' → logprob: -6.886063575744629
    6. '  ' → logprob: -9.011063575744629
    7. '  
' → logprob: -9.136063575744629
    8. '    
' → logprob: -9.386063575744629
    9. ' elif' → logprob: -9.511063575744629
    10. 'return' → logprob: -9.761063575744629

Token 64: ' E' (ID: 457)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.6060163378715515
    2. ''' → logprob: -1.1060163974761963
    3. ' '-'' → logprob: -2.3560163974761963
    4. ' '' → logprob: -3.9810163974761963
    5. ' E' → logprob: -5.731016159057617
    6. ' ' → logprob: -5.856016159057617
    7. ''E' → logprob: -6.106016159057617
    8. ' '-' → logprob: -7.106016159057617
    9. 'E' → logprob: -7.606016159057617
    10. '-' → logprob: -8.481016159057617

Token 65: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04933927580714226
    2. '==' → logprob: -3.0493392944335938
    3. '=='' → logprob: -7.549339294433594
    4. '-' → logprob: -9.924339294433594
    5. ' =='' → logprob: -10.174339294433594
    6. ' ' → logprob: -10.299339294433594
    7. ''' → logprob: -10.799339294433594
    8. ' '' → logprob: -11.174339294433594
    9. ' =' → logprob: -11.549339294433594
    10. '=' → logprob: -11.549339294433594

Token 66: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.009334908798336983
    2. ''' → logprob: -5.134335041046143
    3. ' '-'' → logprob: -5.759335041046143
    4. ''/' → logprob: -9.009334564208984
    5. '-' → logprob: -10.259334564208984
    6. ' '-' → logprob: -10.384334564208984
    7. ''>' → logprob: -10.884334564208984
    8. '"-' → logprob: -11.634334564208984
    9. ' '' → logprob: -12.009334564208984
    10. ' ' → logprob: -12.134334564208984

Token 67: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4822947382926941
    2. ' :' → logprob: -0.9822947382926941
    3. ' :
' → logprob: -5.85729455947876
    4. ' a' → logprob: -5.85729455947876
    5. ' ' → logprob: -7.23229455947876
    6. '':' → logprob: -7.23229455947876
    7. ':
' → logprob: -7.48229455947876
    8. '':'' → logprob: -9.107295036315918
    9. ''' → logprob: -9.857295036315918
    10. ' :
' → logprob: -10.357295036315918

Token 68: '     ' (ID: 530)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2260422259569168
    2. 'a' → logprob: -1.6010422706604004
    3. ' ' → logprob: -7.4760422706604
    4. '    ' → logprob: -10.976041793823242
    5. '     ' → logprob: -10.976041793823242
    6. '<|end|>' → logprob: -11.726041793823242
    7. '	a' → logprob: -11.851041793823242
    8. '  ' → logprob: -12.476041793823242
    9. '   ' → logprob: -12.601041793823242
    10. ' 
' → logprob: -12.726041793823242

Token 69: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.252076119184494
    2. 'a' (adapté à ' a') → logprob: -1.5020761489868164
    3. ' ' → logprob: -8.877076148986816
    4. '  ' → logprob: -13.002076148986816
    5. '	a' → logprob: -13.752076148986816
    6. '    ' → logprob: -14.127076148986816
    7. ' (' → logprob: -14.752076148986816
    8. '(' → logprob: -15.127076148986816
    9. '<|end|>' → logprob: -15.127076148986816
    10. ''a' → logprob: -15.502076148986816

Token 70: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004559830762445927
    2. '3' → logprob: -5.8795599937438965
    3. ' ' → logprob: -6.6295599937438965
    4. '2' → logprob: -7.8795599937438965
    5. ' a' → logprob: -10.254559516906738
    6. '  ' → logprob: -11.754559516906738
    7. 'a' → logprob: -12.504559516906738
    8. '_' → logprob: -12.754559516906738
    9. '   ' → logprob: -12.879559516906738
    10. 's' → logprob: -14.754559516906738

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062077928334474564
    2. '=' → logprob: -2.8120779991149902
    3. ' ' → logprob: -9.187077522277832
    4. ' -' → logprob: -12.562077522277832
    5. ' a' → logprob: -13.437077522277832
    6. ' -=' → logprob: -13.937077522277832
    7. '<|end|>' → logprob: -14.437077522277832
    8. '  ' → logprob: -15.062077522277832
    9. ')' → logprob: -15.187077522277832
    10. '-' → logprob: -15.312077522277832

Token 72: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2519562244415283
    2. 'a' → logprob: -1.5019562244415283
    3. ' ' → logprob: -10.62695598602295
    4. '	a' → logprob: -13.75195598602295
    5. '  ' → logprob: -14.25195598602295
    6. ' ' → logprob: -14.87695598602295
    7. '(a' → logprob: -15.75195598602295
    8. '1' → logprob: -16.376956939697266
    9. ' (' → logprob: -16.501956939697266
    10. '   ' → logprob: -16.626956939697266

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044401636114344
    2. ' ' → logprob: -8.375444412231445
    3. '2' → logprob: -9.125444412231445
    4. '3' → logprob: -9.250444412231445
    5. ' -' → logprob: -13.125444412231445
    6. '-' → logprob: -13.375444412231445
    7. '   ' → logprob: -13.500444412231445
    8. '  ' → logprob: -13.750444412231445
    9. '_' → logprob: -15.312944412231445
    10. '[' → logprob: -15.562944412231445

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0032007659319788218
    2. '-' → logprob: -5.753200531005859
    3. ' ' → logprob: -10.75320053100586
    4. ' ' → logprob: -13.75320053100586
    5. ' -
' → logprob: -15.12820053100586
    6. '<|end|>' → logprob: -15.25320053100586
    7. ' -

' → logprob: -17.50320053100586
    8. ' −' → logprob: -17.75320053100586
    9. '_' → logprob: -17.87820053100586
    10. '  ' → logprob: -18.12820053100586

Token 75: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014163628220558167
    2. ' a' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.139163970947266
    4. '	a' → logprob: -18.389163970947266
    5. '_a' → logprob: -20.264163970947266
    6. '  ' → logprob: -21.139163970947266
    7. ''a' → logprob: -21.639163970947266
    8. '>a' → logprob: -21.639163970947266
    9. '   ' → logprob: -21.889163970947266
    10. 'а' → logprob: -22.014163970947266

Token 76: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.125045776367188
    3. ' a' → logprob: -12.250045776367188
    4. 'a' → logprob: -14.125045776367188
    5. '₂' → logprob: -16.125045776367188
    6. '۲' → logprob: -16.250045776367188
    7. '  ' → logprob: -17.125045776367188
    8. '２' → logprob: -17.375045776367188
    9. '   ' → logprob: -17.500045776367188
    10. '_' → logprob: -17.750045776367188

Token 77: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012063369154930115
    2. '    
' → logprob: -4.762063503265381
    3. '  
' → logprob: -6.137063503265381
    4. '
' → logprob: -7.762063503265381
    5. '   
' → logprob: -8.512063026428223
    6. 'return' → logprob: -9.012063026428223
    7. 'a' → logprob: -9.137063026428223
    8. ' ' → logprob: -9.262063026428223
    9. 'elif' → logprob: -9.387063026428223
    10. 'else' → logprob: -9.637063026428223

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013570987619459629
    2. '    
' → logprob: -4.763570785522461
    3. '  
' → logprob: -5.888570785522461
    4. 'else' → logprob: -7.638570785522461
    5. 'return' → logprob: -8.013570785522461
    6. ' ' → logprob: -8.013570785522461
    7. '```' → logprob: -8.013570785522461
    8. '   
' → logprob: -8.638570785522461
    9. '
' → logprob: -9.013570785522461
    10. 'elif' → logprob: -9.388570785522461

Token 79: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02590867318212986
    2. ' ' → logprob: -4.400908470153809
    3. 'else' → logprob: -5.400908470153809
    4. '  
' → logprob: -6.150908470153809
    5. ' else' → logprob: -6.525908470153809
    6. '    
' → logprob: -6.525908470153809
    7. 'elif' → logprob: -6.650908470153809
    8. 'return' → logprob: -7.025908470153809
    9. '  ' → logprob: -7.400908470153809
    10. '   
' → logprob: -8.150908470153809

Token 80: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002390279434621334
    2. '.' → logprob: -6.127390384674072
    3. 'append' → logprob: -8.627389907836914
    4. ' .' → logprob: -11.127389907836914
    5. '.push' → logprob: -12.252389907836914
    6. '.app' → logprob: -12.877389907836914
    7. '.Append' → logprob: -13.502389907836914
    8. '.ap' → logprob: -14.127389907836914
    9. 'Append' → logprob: -14.502389907836914
    10. ' append' → logprob: -14.627389907836914

Token 81: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01253932062536478
    2. '(str' → logprob: -4.512539386749268
    3. '(' → logprob: -6.512539386749268
    4. '('' → logprob: -12.26253890991211
    5. 'str' → logprob: -15.13753890991211
    6. 'a' → logprob: -15.51253890991211
    7. '("("' → logprob: -16.26253890991211
    8. '((' → logprob: -16.38753890991211
    9. '(`' → logprob: -16.51253890991211
    10. '(f' → logprob: -16.51253890991211

Token 82: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.875
    3. '٣' → logprob: -17.0
    4. '۳' → logprob: -17.25
    5. '３' → logprob: -17.875
    6. '३' → logprob: -18.5
    7. ')' → logprob: -18.75
    8. '৩' → logprob: -18.8125
    9. '2' → logprob: -19.125
    10. '   ' → logprob: -19.25

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.170270353322849e-05
    2. ')
' → logprob: -9.750061988830566
    3. ' )' → logprob: -13.375061988830566
    4. ')return' → logprob: -13.375061988830566
    5. ')

' → logprob: -17.00006103515625
    6. ' ' → logprob: -17.25006103515625
    7. '')' → logprob: -17.37506103515625
    8. '   ' → logprob: -17.75006103515625
    9. ')#' → logprob: -17.87506103515625
    10. ')a' → logprob: -18.62506103515625

Token 84: '    

' (ID: 24372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12213325500488281
    2. '<|end|>' → logprob: -3.122133255004883
    3. '   ' → logprob: -3.497133255004883
    4. '  
' → logprob: -3.872133255004883
    5. '\n' → logprob: -4.622133255004883
    6. ' 
' → logprob: -6.122133255004883
    7. '    
' → logprob: -6.747133255004883
    8. '\' → logprob: -6.997133255004883
    9. '  ' → logprob: -6.997133255004883
    10. 'return' → logprob: -6.997133255004883

Token 85: 'E' (ID: 36)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48399844765663147
    2. '<|end|>' → logprob: -1.733998417854309
    3. '\n' → logprob: -2.2339985370635986
    4. '   ' → logprob: -3.6089985370635986
    5. 'r' → logprob: -3.9839985370635986
    6. '  
' → logprob: -4.2339982986450195
    7. ' 
' → logprob: -4.9839982986450195
    8. '  ' → logprob: -5.4839982986450195
    9. ')' → logprob: -5.4839982986450195
    10. '\' → logprob: -5.6089982986450195

Token 86: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' list' (ID: 1562)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.10358335077762604
    2. ''' → logprob: -2.978583335876465
    3. 'input' → logprob: -3.478583335876465
    4. '''' → logprob: -5.103583335876465
    5. '"' → logprob: -5.228583335876465
    6. ' '*'' → logprob: -6.103583335876465
    7. '"*' → logprob: -6.978583335876465
    8. '""' → logprob: -7.228583335876465
    9. ''+' → logprob: -8.103583335876465
    10. ' input' → logprob: -8.103583335876465

Token 88: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016860088799148798
    2. '('' → logprob: -7.001686096191406
    3. '()' → logprob: -8.251686096191406
    4. '(
' → logprob: -9.626686096191406
    5. '(input' → logprob: -9.626686096191406
    6. '<|end|>' → logprob: -9.751686096191406
    7. '("("' → logprob: -9.751686096191406
    8. '(E' → logprob: -10.001686096191406
    9. '(eval' → logprob: -10.001686096191406
    10. ' (' → logprob: -10.626686096191406

Token 89: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10517376661300659
    2. '()' → logprob: -2.3551738262176514
    3. '(' → logprob: -5.855173587799072
    4. '('' → logprob: -6.855173587799072
    5. ')' → logprob: -7.730173587799072
    6. '("' → logprob: -7.855173587799072
    7. '("("' → logprob: -9.35517406463623
    8. '(""))' → logprob: -11.10517406463623
    9. '().' → logprob: -11.23017406463623
    10. ' ())' → logprob: -11.48017406463623

Token 90: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014340492896735668
    2. 'strip' → logprob: -4.264340400695801
    3. 'replace' → logprob: -8.7643404006958
    4. 'rstrip' → logprob: -11.3893404006958
    5. 'pop' → logprob: -11.6393404006958
    6. ' split' → logprob: -15.0143404006958
    7. 'spl' → logprob: -16.139341354370117
    8. '(split' → logprob: -16.514341354370117
    9. 'append' → logprob: -18.139341354370117
    10. '.split' → logprob: -18.764341354370117

Token 91: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05636642500758171
    2. '()' → logprob: -3.431366443634033
    3. '('' → logprob: -4.181366443634033
    4. '(' → logprob: -5.431366443634033
    5. ')' → logprob: -6.181366443634033
    6. '()))' → logprob: -7.681366443634033
    7. '("' → logprob: -8.806365966796875
    8. ' ())' → logprob: -10.431365966796875
    9. '())
' → logprob: -10.931365966796875
    10. '(
' → logprob: -11.181365966796875

Token 92: 'a' (ID: 64)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.20246265828609467
    2. 'for' → logprob: -1.9524626731872559
    3. 'A' → logprob: -3.577462673187256
    4. 'result' → logprob: -5.077462673187256
    5. ' while' → logprob: -6.327462673187256
    6. 'res' → logprob: -6.702462673187256
    7. 'stack' → logprob: -7.827462673187256
    8. 'r' → logprob: -7.827462673187256
    9. '[]' → logprob: -7.952462673187256
    10. 'a' → logprob: -7.952462673187256

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9580775499343872
    2. '=[]' → logprob: -1.0830775499343872
    3. ' =' → logprob: -1.3330775499343872
    4. '=[]
' → logprob: -5.458077430725098
    5. '=A' → logprob: -5.833077430725098
    6. 's' → logprob: -6.208077430725098
    7. ' ' → logprob: -6.833077430725098
    8. 'l' → logprob: -7.083077430725098
    9. 'A' → logprob: -7.083077430725098
    10. '2' → logprob: -7.708077430725098

Token 94: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003025729674845934
    2. 'E' → logprob: -8.6253023147583
    3. '[]
' → logprob: -10.5003023147583
    4. '[]}' → logprob: -10.5003023147583
    5. ' []' → logprob: -10.6253023147583
    6. '0' → logprob: -10.8753023147583
    7. '[' → logprob: -11.5003023147583
    8. 'A' → logprob: -12.2503023147583
    9. 'int' → logprob: -12.7503023147583
    10. '[E' → logprob: -13.3753023147583

Token 95: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014121392741799355
    2. 'while' → logprob: -7.2514119148254395
    3. ' for' → logprob: -7.3764119148254395
    4. '<|end|>' → logprob: -9.626412391662598
    5. 'i' → logprob: -12.626412391662598
    6. ' ' → logprob: -13.501412391662598
    7. 'a' → logprob: -13.626412391662598
    8. ' while' → logprob: -14.126412391662598
    9. '<|end|>' → logprob: -14.501412391662598
    10. ')' → logprob: -14.501412391662598

Token 96: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.8340216875076294
    2. ' i' → logprob: -1.2090216875076294
    3. 'e' → logprob: -2.08402156829834
    4. 'i' → logprob: -2.45902156829834
    5. ' x' → logprob: -4.45902156829834
    6. 'x' → logprob: -4.95902156829834
    7. ' c' → logprob: -5.08402156829834
    8. ' token' → logprob: -5.33402156829834
    9. ' t' → logprob: -5.45902156829834
    10. ' w' → logprob: -5.70902156829834

Token 97: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009805086068809032
    2. 'in' → logprob: -4.634805202484131
    3. ' ' → logprob: -10.009804725646973
    4. '	in' → logprob: -13.634804725646973
    5. 'e' → logprob: -14.009804725646973
    6. ' i' → logprob: -14.134804725646973
    7. '  ' → logprob: -14.884804725646973
    8. 'n' → logprob: -15.634804725646973
    9. 'In' → logprob: -15.759804725646973
    10. 's' → logprob: -16.13480567932129

Token 98: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1602274775505066
    2. ' E' → logprob: -1.9102275371551514
    3. ' ' → logprob: -12.78522777557373
    4. '(E' → logprob: -15.66022777557373
    5. '	E' → logprob: -16.160226821899414
    6. '<E' → logprob: -16.160226821899414
    7. '>E' → logprob: -16.535226821899414
    8. '[E' → logprob: -17.660226821899414
    9. '  ' → logprob: -17.785226821899414
    10. ':E' → logprob: -18.035226821899414

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10036852210760117
    2. ' :' → logprob: -2.3503684997558594
    3. ':
' → logprob: -9.22536849975586
    4. ' :
' → logprob: -10.47536849975586
    5. ' in' → logprob: -10.97536849975586
    6. '):' → logprob: -11.60036849975586
    7. '：' → logprob: -12.60036849975586
    8. ' ' → logprob: -14.10036849975586
    9. '():' → logprob: -14.10036849975586
    10. ':**' → logprob: -14.60036849975586

Token 100: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4773462414741516
    2. ' ' → logprob: -1.3523461818695068
    3. 'calc' → logprob: -2.227346181869507
    4. ' calc' → logprob: -4.477346420288086
    5. 'if' → logprob: -7.102346420288086
    6. ' if' → logprob: -7.477346420288086
    7. '(calc' → logprob: -8.727346420288086
    8. '  ' → logprob: -9.852346420288086
    9. '  
' → logprob: -10.102346420288086
    10. '```' → logprob: -10.352346420288086

Token 101: ' if' (ID: 538)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.054001037031412125
    2. 'if' → logprob: -3.5540010929107666
    3. ' ' → logprob: -3.8040010929107666
    4. '   ' → logprob: -7.1790008544921875
    5. ' calc' → logprob: -7.5540008544921875
    6. ' if' → logprob: -8.679000854492188
    7. '  ' → logprob: -9.179000854492188
    8. 'cal' → logprob: -9.804000854492188
    9. '(calc' → logprob: -10.804000854492188
    10. '  
' → logprob: -11.054000854492188

Token 102: ' (' (ID: 350)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.0713903084397316
    2. 'e' → logprob: -2.696390390396118
    3. ' ' → logprob: -6.571390151977539
    4. ' '' → logprob: -11.696390151977539
    5. ''e' → logprob: -11.696390151977539
    6. ' not' → logprob: -11.821390151977539
    7. '  ' → logprob: -12.071390151977539
    8. ' (' → logprob: -12.196390151977539
    9. '(e' → logprob: -12.321390151977539
    10. ''' → logprob: -12.321390151977539

Token 103: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.023476533591747284
    2. ' e' → logprob: -3.7734766006469727
    3. ' ' → logprob: -8.648476600646973
    4. ''e' → logprob: -11.023476600646973
    5. 'not' → logprob: -11.648476600646973
    6. ''' → logprob: -11.898476600646973
    7. '(e' → logprob: -12.273476600646973
    8. ' not' → logprob: -12.523476600646973
    9. '  ' → logprob: -13.023476600646973
    10. ')e' → logprob: -13.148476600646973

Token 104: ' ==' (ID: 951)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.633235514163971
    2. '.is' → logprob: -0.883235514163971
    3. ' not' → logprob: -3.133235454559326
    4. ' ==' → logprob: -5.508235454559326
    5. '==' → logprob: -6.008235454559326
    6. 'isdigit' → logprob: -6.633235454559326
    7. ' ' → logprob: -6.758235454559326
    8. '.' → logprob: -7.133235454559326
    9. 'in' → logprob: -7.633235454559326
    10. 'is' → logprob: -7.883235454559326

Token 105: ' '+'' (ID: 137356)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.17296698689460754
    2. ''+' → logprob: -2.672966957092285
    3. ''' → logprob: -2.797966957092285
    4. ' '+'' → logprob: -3.922966957092285
    5. ' '*'' → logprob: -5.047966957092285
    6. '"+"' → logprob: -6.547966957092285
    7. '"+' → logprob: -8.172966957092285
    8. ' '+' → logprob: -8.422966957092285
    9. '"*' → logprob: -8.672966957092285
    10. '"' → logprob: -9.172966957092285

Token 106: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04320357367396355
    2. ')' → logprob: -3.543203592300415
    3. 'or' → logprob: -4.918203353881836
    4. ''or' → logprob: -5.418203353881836
    5. ' ' → logprob: -6.668203353881836
    6. ' )' → logprob: -8.793203353881836
    7. '')' → logprob: -9.418203353881836
    8. ''' → logprob: -10.168203353881836
    9. '  ' → logprob: -10.668203353881836
    10. ' '' → logprob: -11.043203353881836

Token 107: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03552022576332092
    2. ' e' → logprob: -3.535520315170288
    3. ''*' → logprob: -5.785520076751709
    4. ''-' → logprob: -6.160520076751709
    5. ' '*'' → logprob: -8.660520553588867
    6. ' '-'' → logprob: -8.785520553588867
    7. ' ' → logprob: -8.910520553588867
    8. ''e' → logprob: -9.535520553588867
    9. '	e' → logprob: -11.660520553588867
    10. '  ' → logprob: -11.910520553588867

Token 108: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.24774813652038574
    2. ' ==' → logprob: -1.7477481365203857
    3. '=='' → logprob: -3.1227481365203857
    4. ' ' → logprob: -7.247748374938965
    5. '  ' → logprob: -8.747748374938965
    6. ''*' → logprob: -9.622748374938965
    7. '=' → logprob: -9.747748374938965
    8. ' '' → logprob: -9.997748374938965
    9. ')' → logprob: -9.997748374938965
    10. 'isdigit' → logprob: -10.497748374938965

Token 109: ' '-'' (ID: 59558)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.5263699293136597
    2. ''-' → logprob: -0.9013699293136597
    3. ' '-'' → logprob: -6.401370048522949
    4. ' '*'' → logprob: -7.276370048522949
    5. ' '*' → logprob: -8.02637004852295
    6. ' '-')' → logprob: -8.15137004852295
    7. ''' → logprob: -8.77637004852295
    8. ' ' → logprob: -9.90137004852295
    9. '"-' → logprob: -10.65137004852295
    10. '"*' → logprob: -10.90137004852295

Token 110: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.005722809582948685
    2. 'or' → logprob: -5.380722999572754
    3. ' ' → logprob: -6.880722999572754
    4. ')' → logprob: -9.755722999572754
    5. '	or' → logprob: -11.755722999572754
    6. ''or' → logprob: -12.380722999572754
    7. ' )' → logprob: -13.005722999572754
    8. '  ' → logprob: -13.505722999572754
    9. '*' → logprob: -15.505722999572754
    10. '<|end|>' → logprob: -15.630722999572754

Token 111: ' e' (ID: 319)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.017970586195588112
    2. 'e' → logprob: -4.142970561981201
    3. ' '*' → logprob: -6.767970561981201
    4. ' '*'' → logprob: -7.517970561981201
    5. ' e' → logprob: -9.01797103881836
    6. ' ' → logprob: -9.89297103881836
    7. ''e' → logprob: -10.14297103881836
    8. '"*' → logprob: -10.89297103881836
    9. '*' → logprob: -12.64297103881836
    10. '('*' → logprob: -12.76797103881836

Token 112: ' ==' (ID: 951)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.5480719804763794
    2. ' or' → logprob: -1.6730719804763794
    3. '==' → logprob: -1.7980719804763794
    4. ' ==' → logprob: -2.04807186126709
    5. '=='' → logprob: -2.17307186126709
    6. ' '*'' → logprob: -2.54807186126709
    7. ' ' → logprob: -2.92307186126709
    8. 'or' → logprob: -3.92307186126709
    9. ' '' → logprob: -3.92307186126709
    10. ' '*' → logprob: -5.17307186126709

Token 113: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.0008697715820744634
    2. ' '*' → logprob: -7.1258697509765625
    3. ' '*'' → logprob: -10.000869750976562
    4. '"*' → logprob: -11.125869750976562
    5. ' ' → logprob: -12.500869750976562
    6. ''' → logprob: -13.875869750976562
    7. '('*' → logprob: -15.250869750976562
    8. '  ' → logprob: -16.000869750976562
    9. ''s' → logprob: -16.625869750976562
    10. '   ' → logprob: -17.625869750976562

Token 114: '')' (ID: 1542)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.40235042572021484
    2. ')' → logprob: -1.1523504257202148
    3. ' ):' → logprob: -4.402350425720215
    4. ' )' → logprob: -6.152350425720215
    5. ''):' → logprob: -8.027350425720215
    6. ' ' → logprob: -8.277350425720215
    7. '):
' → logprob: -8.277350425720215
    8. ' or' → logprob: -9.652350425720215
    9. '):

' → logprob: -11.277350425720215
    10. '')' → logprob: -11.277350425720215

Token 115: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006136276293545961
    2. ':
' → logprob: -5.131136417388916
    3. ' :' → logprob: -9.006135940551758
    4. ' ' → logprob: -10.381135940551758
    5. '):' → logprob: -10.756135940551758
    6. ' :
' → logprob: -10.881135940551758
    7. '):
' → logprob: -12.006135940551758
    8. '   ' → logprob: -13.006135940551758
    9. '  ' → logprob: -13.381135940551758
    10. ':

' → logprob: -13.881135940551758

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21645903587341309
    2. 'calc' → logprob: -2.341459035873413
    3. ' calc' → logprob: -2.341459035873413
    4. '  ' → logprob: -6.591459274291992
    5. ' ' → logprob: -7.591459274291992
    6. '(calc' → logprob: -8.716459274291992
    7. '    
' → logprob: -9.716459274291992
    8. '.calc' → logprob: -10.091459274291992
    9. '    ' → logprob: -10.341459274291992
    10. '  
' → logprob: -11.341459274291992

Token 117: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.4651811420917511
    2. 'calc' (adapté à ' calc') → logprob: -1.0901811122894287
    3. ' ' → logprob: -3.5901811122894287
    4. '   ' → logprob: -4.840181350708008
    5. '  ' → logprob: -8.215181350708008
    6. '(calc' → logprob: -10.840181350708008
    7. '
' → logprob: -11.715181350708008
    8. '.calc' → logprob: -11.840181350708008
    9. 'cal' → logprob: -12.340181350708008
    10. '    ' → logprob: -12.965181350708008

Token 118: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.0060797687619924545
    2. '(' → logprob: -5.13107967376709
    3. '('' → logprob: -9.38107967376709
    4. '(E' → logprob: -10.00607967376709
    5. '("("' → logprob: -11.63107967376709
    6. ' (' → logprob: -12.50607967376709
    7. '((' → logprob: -12.63107967376709
    8. '(
' → logprob: -12.88107967376709
    9. '('(' → logprob: -13.88107967376709
    10. '(`' → logprob: -15.00607967376709

Token 119: ',a' (ID: 26776)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0015646155225113034
    2. '(' → logprob: -6.7515645027160645
    3. ',a' → logprob: -8.251564979553223
    4. ',' → logprob: -9.251564979553223
    5. ' (' → logprob: -11.001564979553223
    6. 'a' → logprob: -11.501564979553223
    7. '(
' → logprob: -12.126564979553223
    8. ')' → logprob: -12.751564979553223
    9. ' a' → logprob: -13.751564979553223
    10. ' ,' → logprob: -14.251564979553223

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011088847182691097
    2. ')
' → logprob: -4.511088848114014
    3. ')
' → logprob: -10.886088371276855
    4. ')

' → logprob: -11.136088371276855
    5. ' )' → logprob: -12.386088371276855
    6. ' ' → logprob: -12.886088371276855
    7. ')a' → logprob: -14.886088371276855
    8. ' )
' → logprob: -15.136088371276855
    9. '   ' → logprob: -16.636089324951172
    10. 'else' → logprob: -16.886089324951172

Token 121: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.00792777631431818
    2. ' else' → logprob: -5.132927894592285
    3. 'else' → logprob: -6.382927894592285
    4. '<|end|>' → logprob: -8.132927894592285
    5. '	else' → logprob: -12.757927894592285
    6. '  ' → logprob: -12.882927894592285
    7. '   ' → logprob: -13.007927894592285
    8. '```' → logprob: -13.632927894592285
    9. '<|end|>' → logprob: -13.632927894592285
    10. ')' → logprob: -14.007927894592285

Token 122: ' else' (ID: 1203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2116612195968628
    2. 'else' → logprob: -1.7116612195968628
    3. ' else' → logprob: -4.586661338806152
    4. 'elif' → logprob: -12.336661338806152
    5. '  
' → logprob: -12.586661338806152
    6. '	else' → logprob: -14.961661338806152
    7. '  ' → logprob: -15.836661338806152
    8. ' elif' → logprob: -16.211660385131836
    9. '<|end|>' → logprob: -16.336660385131836
    10. ' 
' → logprob: -16.586660385131836

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032487702555954456
    2. ' :' → logprob: -6.003248691558838
    3. ':
' → logprob: -7.753248691558838
    4. '<|end|>' → logprob: -9.128249168395996
    5. ' ' → logprob: -9.503249168395996
    6. '  ' → logprob: -9.753249168395996
    7. ' :
' → logprob: -10.253249168395996
    8. ',' → logprob: -11.628249168395996
    9. '):' → logprob: -12.065749168395996
    10. '  
' → logprob: -12.253249168395996

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23076237738132477
    2. 'a' → logprob: -1.8557623624801636
    3. ' a' → logprob: -3.355762481689453
    4. ' ' → logprob: -4.230762481689453
    5. '   ' → logprob: -9.105762481689453
    6. '  ' → logprob: -9.355762481689453
    7. ' ' → logprob: -9.855762481689453
    8. '	a' → logprob: -10.605762481689453
    9. '  ' → logprob: -11.480762481689453
    10. '     ' → logprob: -11.730762481689453

Token 125: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.48583054542541504
    2. 'a' (adapté à ' a') → logprob: -0.985830545425415
    3. ' ' → logprob: -4.485830307006836
    4. '   ' → logprob: -7.985830307006836
    5. '	a' → logprob: -9.860830307006836
    6. '  ' → logprob: -10.860830307006836
    7. ' ' → logprob: -12.485830307006836
    8. '    ' → logprob: -13.485830307006836
    9. '  
' → logprob: -16.235830307006836
    10. '     ' → logprob: -16.610830307006836

Token 126: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001519026467576623
    2. '.' → logprob: -6.501519203186035
    3. '.app' → logprob: -11.126519203186035
    4. '.push' → logprob: -14.626519203186035
    5. '.extend' → logprob: -14.626519203186035
    6. '.ap' → logprob: -15.001519203186035
    7. ' .' → logprob: -15.501519203186035
    8. '.Append' → logprob: -15.751519203186035
    9. 'append' → logprob: -15.751519203186035
    10. '.py' → logprob: -17.12651824951172

Token 127: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.39100542664527893
    2. '(int' → logprob: -1.1410053968429565
    3. '(' → logprob: -5.516005516052246
    4. 'int' → logprob: -9.266005516052246
    5. ' (' → logprob: -12.891005516052246
    6. '((' → logprob: -12.891005516052246
    7. '(eval' → logprob: -13.766005516052246
    8. 'e' → logprob: -14.141005516052246
    9. '(i' → logprob: -14.766005516052246
    10. '(ele' → logprob: -15.016005516052246

Token 128: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1054253011243418e-05
    2. ' )' → logprob: -11.250020980834961
    3. ')
' → logprob: -11.750020980834961
    4. '))' → logprob: -17.00002098083496
    5. ')

' → logprob: -17.12502098083496
    6. '')' → logprob: -17.87502098083496
    7. ' ' → logprob: -18.00002098083496
    8. ')`' → logprob: -18.25002098083496
    9. '<|end|>' → logprob: -18.37502098083496
    10. ')return' → logprob: -18.75002098083496

Token 129: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00386623153463006
    2. '
' → logprob: -6.128866195678711
    3. ')
' → logprob: -7.003866195678711
    4. ')' → logprob: -7.753866195678711
    5. ' print' → logprob: -8.253866195678711
    6. '  
' → logprob: -9.628866195678711
    7. ' ' → logprob: -13.003866195678711
    8. '
' → logprob: -13.003866195678711
    9. '0' → logprob: -13.128866195678711
    10. '    
' → logprob: -13.378866195678711

Token 130: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10028495639562607
    2. '(' → logprob: -2.350285053253174
    3. '('' → logprob: -9.600284576416016
    4. '("("' → logprob: -11.975284576416016
    5. '("' → logprob: -13.725284576416016
    6. '(A' → logprob: -14.225284576416016
    7. '()' → logprob: -14.350284576416016
    8. '((' → logprob: -14.475284576416016
    9. '(
' → logprob: -14.725284576416016
    10. '(max' → logprob: -15.225284576416016

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04877709969878197
    2. ')' → logprob: -3.0487771034240723
    3. '[-' → logprob: -8.923776626586914
    4. '.pop' → logprob: -9.798776626586914
    5. '0' → logprob: -15.173776626586914
    6. '[])' → logprob: -15.923776626586914
    7. '))' → logprob: -16.173776626586914
    8. ']' → logprob: -16.173776626586914
    9. '])' → logprob: -16.173776626586914
    10. ')`' → logprob: -16.548776626586914

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8312570318812504e-05
    2. '-' → logprob: -11.000018119812012
    3. ' ' → logprob: -13.375018119812012
    4. ' -' → logprob: -18.500019073486328
    5. '
' → logprob: -19.875019073486328
    6. '1' → logprob: -20.500019073486328
    7. '```' → logprob: -20.625019073486328
    8. '   ' → logprob: -20.875019073486328
    9. '۰' → logprob: -20.875019073486328
    10. '00' → logprob: -21.000019073486328

Token 133: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -16.500001907348633
    4. '])' → logprob: -17.375001907348633
    5. '})' → logprob: -17.500001907348633
    6. ')`' → logprob: -17.500001907348633
    7. '）' → logprob: -18.250001907348633
    8. '`)' → logprob: -18.750001907348633
    9. ')
' → logprob: -19.250001907348633
    10. ')}' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 131
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 108
Précision stricte (1ère position): 41.98%
Précision adaptée (1ère position): 42.75%
Précision (top 10): 82.44%
================================================================================
