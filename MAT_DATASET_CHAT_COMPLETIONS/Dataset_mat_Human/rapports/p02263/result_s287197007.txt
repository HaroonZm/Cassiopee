================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
cal = {
       "+": lambda a, b: b+a,
       "-": lambda a, b: b-a,
       "*": lambda a, b: b*a
       }

stack = []

for i in input().split():
    if i in cal:
        stack.append(cal[i](stack.pop(), stack.pop()))
    else:
        stack.append(int(i))

print(stack[-1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'cal' (ID: 5842)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' {
' (ID: 405)
  → Token d'amorce (pas de prédiction)

Token 3: '      ' (ID: 1699)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04595660790801048
    2. '}' → logprob: -4.045956611633301
    3. ''s' → logprob: -5.295956611633301
    4. ' ' → logprob: -5.545956611633301
    5. ''t' → logprob: -5.670956611633301
    6. ''a' → logprob: -5.920956611633301
    7. '   ' → logprob: -6.170956611633301
    8. '"' → logprob: -6.170956611633301
    9. ''b' → logprob: -6.420956611633301
    10. '```' → logprob: -6.670956611633301

Token 4: ' "+' (ID: 10953)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06937314569950104
    2. ''a' → logprob: -3.44437313079834
    3. ''s' → logprob: -4.44437313079834
    4. ''t' → logprob: -5.06937313079834
    5. ''b' → logprob: -5.69437313079834
    6. '"' → logprob: -6.19437313079834
    7. '}' → logprob: -6.56937313079834
    8. ''f' → logprob: -6.69437313079834
    9. ''e' → logprob: -6.81937313079834
    10. ''}' → logprob: -6.94437313079834

Token 5: '":' (ID: 1243)
  Prédit: '":'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.46277615427970886
    2. '"' → logprob: -1.2127761840820312
    3. '1' → logprob: -2.8377761840820312
    4. '2' → logprob: -5.962776184082031
    5. ' ' → logprob: -6.462776184082031
    6. '5' → logprob: -6.462776184082031
    7. '3' → logprob: -6.712776184082031
    8. ':' → logprob: -7.212776184082031
    9. ' ":' → logprob: -7.212776184082031
    10. '10' → logprob: -7.462776184082031

Token 6: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.24309153854846954
    2. 'lambda' → logprob: -1.6180915832519531
    3. '(lambda' → logprob: -4.118091583251953
    4. ' (' → logprob: -7.743091583251953
    5. ' ' → logprob: -7.868091583251953
    6. '1' → logprob: -8.993091583251953
    7. '0' → logprob: -9.118091583251953
    8. '(' → logprob: -11.118091583251953
    9. '  ' → logprob: -11.118091583251953
    10. '=lambda' → logprob: -11.430591583251953

Token 7: ' a' (ID: 261)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1781766265630722
    2. ' a' → logprob: -2.0531766414642334
    3. ' ' → logprob: -4.303176403045654
    4. 'x' → logprob: -4.303176403045654
    5. 'a' → logprob: -5.178176403045654
    6. ' cal' → logprob: -7.678176403045654
    7. ' lambda' → logprob: -7.803176403045654
    8. ' s' → logprob: -7.928176403045654
    9. ' n' → logprob: -8.428176879882812
    10. '  ' → logprob: -9.303176879882812

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012837117537856102
    2. ' ,' → logprob: -4.512836933135986
    3. ',b' → logprob: -6.637836933135986
    4. ' ' → logprob: -8.387837409973145
    5. ' b' → logprob: -8.637837409973145
    6. ' a' → logprob: -10.262837409973145
    7. ' x' → logprob: -11.137837409973145
    8. ',a' → logprob: -11.387837409973145
    9. 'b' → logprob: -13.387837409973145
    10. 'a' → logprob: -13.512837409973145

Token 9: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.16026516258716583
    2. 'b' → logprob: -1.9102652072906494
    3. ' ' → logprob: -10.16026496887207
    4. ' ' → logprob: -14.66026496887207
    5. ',' → logprob: -14.78526496887207
    6. 'a' → logprob: -14.91026496887207
    7. '  ' → logprob: -15.16026496887207
    8. ',b' → logprob: -15.53526496887207
    9. '   ' → logprob: -15.66026496887207
    10. '	b' → logprob: -15.91026496887207

Token 10: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023446490988135338
    2. ' :' → logprob: -3.773446559906006
    3. ',' → logprob: -8.773446083068848
    4. 'a' → logprob: -10.898446083068848
    5. ' a' → logprob: -11.523446083068848
    6. ':a' → logprob: -11.523446083068848
    7. ' ' → logprob: -13.023446083068848
    8. '   ' → logprob: -13.273446083068848
    9. '  ' → logprob: -14.023446083068848
    10. ' ,' → logprob: -14.398446083068848

Token 11: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.17974741756916046
    2. ' a' → logprob: -1.804747462272644
    3. '	a' → logprob: -13.929747581481934
    4. ' ' → logprob: -14.179747581481934
    5. '   ' → logprob: -14.679747581481934
    6. '    ' → logprob: -15.179747581481934
    7. '  ' → logprob: -15.554747581481934
    8. '(a' → logprob: -16.179746627807617
    9. ')a' → logprob: -17.054746627807617
    10. '>a' → logprob: -17.304746627807617

Token 12: '+a' (ID: 142749)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3154105842113495
    2. ' +' → logprob: -1.4404106140136719
    3. '-' → logprob: -4.565410614013672
    4. ' -' → logprob: -4.690410614013672
    5. '[' → logprob: -5.440410614013672
    6. ')' → logprob: -6.065410614013672
    7. ',' → logprob: -6.565410614013672
    8. ' ' → logprob: -6.815410614013672
    9. '<|end|>' → logprob: -7.065410614013672
    10. '*' → logprob: -7.315410614013672

Token 13: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10245067626237869
    2. '}' → logprob: -2.7274506092071533
    3. ',
' → logprob: -3.4774506092071533
    4. ' }' → logprob: -7.852450847625732
    5. ' ,' → logprob: -8.477450370788574
    6. '+' → logprob: -9.352450370788574
    7. '   ' → logprob: -9.477450370788574
    8. '      ' → logprob: -9.602450370788574
    9. ',
' → logprob: -9.852450370788574
    10. '  ' → logprob: -10.102450370788574

Token 14: '      ' (ID: 1699)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06806501001119614
    2. '      ' → logprob: -3.8180649280548096
    3. '}' → logprob: -4.318065166473389
    4. ' "' → logprob: -5.068065166473389
    5. '   ' → logprob: -5.068065166473389
    6. '    ' → logprob: -5.818065166473389
    7. ' }' → logprob: -5.818065166473389
    8. ' ' → logprob: -6.068065166473389
    9. '  ' → logprob: -6.443065166473389
    10. '"a' → logprob: -6.568065166473389

Token 15: ' "-' (ID: 12746)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0316750593483448
    2. ' "' → logprob: -4.406674861907959
    3. ' ' → logprob: -5.781674861907959
    4. '+' → logprob: -5.906674861907959
    5. 'a' → logprob: -5.906674861907959
    6. '"a' → logprob: -6.156674861907959
    7. '      ' → logprob: -6.281674861907959
    8. ' a' → logprob: -6.281674861907959
    9. '  ' → logprob: -7.031674861907959
    10. ' b' → logprob: -7.281674861907959

Token 16: '":' (ID: 1243)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07327663898468018
    2. ' :' → logprob: -3.1982765197753906
    3. '":' → logprob: -3.5732765197753906
    4. ' ":' → logprob: -7.323276519775391
    5. ',' → logprob: -8.07327651977539
    6. '"' → logprob: -8.69827651977539
    7. ' a' → logprob: -8.94827651977539
    8. '':' → logprob: -10.07327651977539
    9. '">' → logprob: -10.19827651977539
    10. ' ,' → logprob: -10.32327651977539

Token 17: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.020975429564714432
    2. 'lambda' → logprob: -3.895975351333618
    3. ' a' → logprob: -8.145975112915039
    4. 'a' → logprob: -9.270975112915039
    5. ' b' → logprob: -11.270975112915039
    6. '(lambda' → logprob: -11.270975112915039
    7. ' lamb' → logprob: -11.520975112915039
    8. '=lambda' → logprob: -11.895975112915039
    9. ' ' → logprob: -12.645975112915039
    10. ' λ' → logprob: -14.020975112915039

Token 18: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.02857496216893196
    2. ' ' → logprob: -3.6535749435424805
    3. 'a' → logprob: -6.1535749435424805
    4. '<|end|>' → logprob: -9.52857494354248
    5. ' ' → logprob: -10.27857494354248
    6. ' lambda' → logprob: -11.15357494354248
    7. ')' → logprob: -12.02857494354248
    8. '  ' → logprob: -12.52857494354248
    9. ',' → logprob: -12.77857494354248
    10. ' ,' → logprob: -12.90357494354248

Token 19: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -0.3012373745441437
    2. ',' → logprob: -1.4262373447418213
    3. ' ' → logprob: -4.0512375831604
    4. ' a' → logprob: -6.4262375831604
    5. ' b' → logprob: -8.426237106323242
    6. ',a' → logprob: -8.551237106323242
    7. ',b' → logprob: -8.801237106323242
    8. ' -' → logprob: -9.301237106323242
    9. 'a' → logprob: -9.426237106323242
    10. ' ' → logprob: -9.801237106323242

Token 20: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.02769329398870468
    2. 'b' → logprob: -3.652693271636963
    3. ' a' → logprob: -7.027693271636963
    4. ' ' → logprob: -8.152693748474121
    5. 'a' → logprob: -8.527693748474121
    6. ' ' → logprob: -11.527693748474121
    7. '>b' → logprob: -13.277693748474121
    8. ',b' → logprob: -13.652693748474121
    9. '	b' → logprob: -14.027693748474121
    10. ')' → logprob: -14.152693748474121

Token 21: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03400687128305435
    2. ' :' → logprob: -3.4090068340301514
    3. ' -' → logprob: -8.53400707244873
    4. '-' → logprob: -9.53400707244873
    5. ',' → logprob: -10.53400707244873
    6. '+:' → logprob: -10.90900707244873
    7. ' ' → logprob: -11.78400707244873
    8. '+' → logprob: -11.90900707244873
    9. ' ,' → logprob: -12.15900707244873
    10. ' +' → logprob: -12.53400707244873

Token 22: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.34058845043182373
    2. 'a' → logprob: -1.4655884504318237
    3. ' b' → logprob: -2.9655885696411133
    4. 'b' → logprob: -5.090588569641113
    5. ' ' → logprob: -11.340588569641113
    6. ' ' → logprob: -13.778088569641113
    7. '-a' → logprob: -13.840588569641113
    8. '(a' → logprob: -14.153088569641113
    9. '	a' → logprob: -14.153088569641113
    10. ''a' → logprob: -14.278088569641113

Token 23: '-a' (ID: 8575)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5237069129943848
    2. '-' → logprob: -0.8987069129943848
    3. '+' → logprob: -8.523706436157227
    4. ' ' → logprob: -9.523706436157227
    5. '[' → logprob: -9.648706436157227
    6. ' +' → logprob: -9.773706436157227
    7. '-a' → logprob: -10.148706436157227
    8. '<|end|>' → logprob: -10.273706436157227
    9. '-b' → logprob: -10.648706436157227
    10. '"' → logprob: -10.648706436157227

Token 24: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05298561230301857
    2. '}' → logprob: -3.052985668182373
    3. ',
' → logprob: -5.677985668182373
    4. '},' → logprob: -7.302985668182373
    5. ' ,' → logprob: -9.302985191345215
    6. ' }' → logprob: -9.552985191345215
    7. '  ' → logprob: -9.802985191345215
    8. '   ' → logprob: -10.802985191345215
    9. '      ' → logprob: -11.177985191345215
    10. '<|end|>' → logprob: -11.552985191345215

Token 25: '      ' (ID: 1699)
  Prédit: '"*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"*' → logprob: -1.1619518995285034
    2. '      ' → logprob: -1.2869518995285034
    3. '"' → logprob: -1.6619518995285034
    4. '}' → logprob: -1.9119518995285034
    5. ' "*' → logprob: -4.161952018737793
    6. '"}' → logprob: -4.286952018737793
    7. '  ' → logprob: -4.911952018737793
    8. '"+' → logprob: -5.036952018737793
    9. ' ' → logprob: -5.036952018737793
    10. '   ' → logprob: -5.661952018737793

Token 26: ' "*' (ID: 32458)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22778716683387756
    2. '}' → logprob: -2.6027872562408447
    3. ' ' → logprob: -3.2277872562408447
    4. '+' → logprob: -3.9777872562408447
    5. '"*' (adapté à ' "*') → logprob: -4.102787017822266
    6. ' "' → logprob: -4.602787017822266
    7. ' }' → logprob: -4.852787017822266
    8. '*' → logprob: -5.227787017822266
    9. '  ' → logprob: -5.227787017822266
    10. '"+"' → logprob: -5.477787017822266

Token 27: '":' (ID: 1243)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.008141353726387024
    2. 'a' → logprob: -5.50814151763916
    3. '":' → logprob: -6.63314151763916
    4. ' lambda' → logprob: -7.13314151763916
    5. ':' → logprob: -7.25814151763916
    6. '<|end|>' → logprob: -8.00814151763916
    7. ' ' → logprob: -8.38314151763916
    8. 'lambda' → logprob: -8.38314151763916
    9. '```' → logprob: -9.38314151763916
    10. ' :' → logprob: -9.88314151763916

Token 28: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.004636368714272976
    2. 'lambda' → logprob: -5.379636287689209
    3. ' lamb' → logprob: -11.629636764526367
    4. '(lambda' → logprob: -13.004636764526367
    5. '=lambda' → logprob: -13.129636764526367
    6. ' b' → logprob: -13.254636764526367
    7. ' a' → logprob: -14.379636764526367
    8. 'a' → logprob: -15.504636764526367
    9. ' ' → logprob: -15.629636764526367
    10. ' λ' → logprob: -16.004636764526367

Token 29: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07039052248001099
    2. 'a' → logprob: -2.695390462875366
    3. ' b' → logprob: -8.820390701293945
    4. ' lambda' → logprob: -8.945390701293945
    5. ' ' → logprob: -9.070390701293945
    6. 'b' → logprob: -10.445390701293945
    7. 'lambda' → logprob: -10.945390701293945
    8. ' ' → logprob: -12.070390701293945
    9. '(a' → logprob: -13.070390701293945
    10. ')' → logprob: -13.445390701293945

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.057693641632795334
    2. ' ,' → logprob: -3.0576937198638916
    3. ' a' → logprob: -4.9326934814453125
    4. ' b' → logprob: -6.5576934814453125
    5. 'a' → logprob: -8.432693481445312
    6. ',b' → logprob: -9.057693481445312
    7. ',a' → logprob: -9.557693481445312
    8. ' ' → logprob: -11.057693481445312
    9. 'b' → logprob: -11.682693481445312
    10. '*,' → logprob: -13.432693481445312

Token 31: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.170772910118103
    2. ' b' → logprob: -1.170772910118103
    3. 'a' → logprob: -1.295772910118103
    4. ' a' → logprob: -2.2957730293273926
    5. ' lambda' → logprob: -5.545773029327393
    6. 'lambda' → logprob: -6.545773029327393
    7. ' ' → logprob: -10.545772552490234
    8. ')' → logprob: -13.920772552490234
    9. '  ' → logprob: -14.295772552490234
    10. '<|end|>' → logprob: -14.295772552490234

Token 32: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001242772996192798
    2. ' :' → logprob: -9.250123977661133
    3. ':b' → logprob: -10.750123977661133
    4. '*:' → logprob: -13.125123977661133
    5. ',:' → logprob: -13.500123977661133
    6. '**' → logprob: -14.375123977661133
    7. ':a' → logprob: -14.500123977661133
    8. '+:' → logprob: -15.000123977661133
    9. ',' → logprob: -15.375123977661133
    10. '_:' → logprob: -15.625123977661133

Token 33: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.023589013144373894
    2. 'b' → logprob: -3.8985888957977295
    3. ' a' → logprob: -6.023589134216309
    4. 'a' → logprob: -7.523589134216309
    5. ' lambda' → logprob: -9.898589134216309
    6. ' ' → logprob: -10.898589134216309
    7. 'lambda' → logprob: -11.773589134216309
    8. ' (' → logprob: -13.898589134216309
    9. ' ' → logprob: -13.961089134216309
    10. ' б' → logprob: -15.336089134216309

Token 34: '*a' (ID: 78448)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0038148066960275173
    2. ' *' → logprob: -6.003814697265625
    3. '*b' → logprob: -6.628814697265625
    4. '*a' → logprob: -11.878814697265625
    5. ' ' → logprob: -12.878814697265625
    6. '*v' → logprob: -14.128814697265625
    7. '*u' → logprob: -14.128814697265625
    8. '**' → logprob: -14.378814697265625
    9. '*f' → logprob: -14.378814697265625
    10. '%' → logprob: -14.503814697265625

Token 35: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000743995129596442
    2. '}' → logprob: -7.875743865966797
    3. ',
' → logprob: -8.000743865966797
    4. '      ' → logprob: -11.500743865966797
    5. '  ' → logprob: -11.875743865966797
    6. ' ,' → logprob: -12.500743865966797
    7. ',

' → logprob: -13.000743865966797
    8. '},' → logprob: -13.375743865966797
    9. '   ' → logprob: -14.000743865966797
    10. ' }' → logprob: -14.750743865966797

Token 36: '      ' (ID: 1699)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039617739617824554
    2. '}' → logprob: -3.2896177768707275
    3. ',
' → logprob: -6.539617538452148
    4. '   ' → logprob: -10.414617538452148
    5. '  ' → logprob: -10.914617538452148
    6. '      ' → logprob: -11.039617538452148
    7. ',

' → logprob: -11.164617538452148
    8. ' }' → logprob: -11.414617538452148
    9. ' ,' → logprob: -11.539617538452148
    10. ',
' → logprob: -12.539617538452148

Token 37: ' }

' (ID: 758)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018644535914063454
    2. '}' → logprob: -4.018644332885742
    3. ',
' → logprob: -7.643644332885742
    4. ' }' → logprob: -12.268644332885742
    5. ',

' → logprob: -13.268644332885742
    6. '   ' → logprob: -13.393644332885742
    7. ' ,' → logprob: -13.393644332885742
    8. ',
' → logprob: -13.768644332885742
    9. '},' → logprob: -14.143644332885742
    10. '  ' → logprob: -14.268644332885742

Token 38: 'stack' (ID: 15145)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016773181268945336
    2. ',
' → logprob: -6.876677513122559
    3. '}' → logprob: -7.376677513122559
    4. '+' → logprob: -11.501677513122559
    5. ',

' → logprob: -12.376677513122559
    6. '*' → logprob: -14.251677513122559
    7. ',
' → logprob: -14.501677513122559
    8. '},' → logprob: -14.751677513122559
    9. ',\' → logprob: -14.876677513122559
    10. '<|end|>' → logprob: -15.001677513122559

Token 39: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28435295820236206
    2. '.append' → logprob: -1.4093530178070068
    3. '[-' → logprob: -6.659352779388428
    4. '.pop' → logprob: -7.034352779388428
    5. '[' → logprob: -7.284352779388428
    6. '.setdefault' → logprob: -8.909353256225586
    7. '[]' → logprob: -9.784353256225586
    8. '=' → logprob: -10.284353256225586
    9. '.push' → logprob: -10.659353256225586
    10. ' =' → logprob: -11.159353256225586

Token 40: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.011120330542325974
    2. '[]' → logprob: -4.511120319366455
    3. ' [' → logprob: -9.761120796203613
    4. '[' → logprob: -11.511120796203613
    5. ' ' → logprob: -12.636120796203613
    6. '[]}' → logprob: -14.386120796203613
    7. ' [];' → logprob: -14.636120796203613
    8. ' []
' → logprob: -15.636120796203613
    9. ' [],' → logprob: -15.636120796203613
    10. '[]>' → logprob: -16.511119842529297

Token 41: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5700737833976746
    2. '[' → logprob: -1.5700738430023193
    3. 'def' → logprob: -2.6950738430023193
    4. '+' → logprob: -2.9450738430023193
    5. '[]' → logprob: -3.5700738430023193
    6. 'input' → logprob: -4.32007360458374
    7. ')' → logprob: -4.82007360458374
    8. ' for' → logprob: -5.07007360458374
    9. ']' → logprob: -5.32007360458374
    10. '(' → logprob: -5.32007360458374

Token 42: ' i' (ID: 575)
  Prédit: ' token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' token' → logprob: -0.1553066074848175
    2. ' ' → logprob: -2.030306577682495
    3. ' item' → logprob: -5.405306816101074
    4. 'token' → logprob: -5.655306816101074
    5. ' i' → logprob: -6.405306816101074
    6. '  ' → logprob: -6.530306816101074
    7. ' t' → logprob: -7.780306816101074
    8. ' c' → logprob: -8.530306816101074
    9. ' element' → logprob: -8.905306816101074
    10. ' s' → logprob: -9.655306816101074

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035740990191698074
    2. 'in' → logprob: -3.410741090774536
    3. 'n' → logprob: -6.410740852355957
    4. ' ' → logprob: -8.410740852355957
    5. '  ' → logprob: -9.035740852355957
    6. 's' → logprob: -10.535740852355957
    7. '   ' → logprob: -10.785740852355957
    8. '	in' → logprob: -10.785740852355957
    9. ' n' → logprob: -11.285740852355957
    10. ' i' → logprob: -12.660740852355957

Token 44: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4325244724750519
    2. 'input' → logprob: -1.4325244426727295
    3. ' range' → logprob: -2.9325244426727295
    4. 'range' → logprob: -3.9325244426727295
    5. '["' → logprob: -4.807524681091309
    6. ' ["' → logprob: -5.182524681091309
    7. ' ['' → logprob: -5.682524681091309
    8. '[]' → logprob: -5.682524681091309
    9. ' []' → logprob: -6.057524681091309
    10. '['' → logprob: -6.182524681091309

Token 45: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23914501070976257
    2. '()' → logprob: -1.739145040512085
    3. '("' → logprob: -4.489144802093506
    4. '('' → logprob: -4.489144802093506
    5. ' ()' → logprob: -4.864144802093506
    6. '().' → logprob: -5.364144802093506
    7. ' (' → logprob: -7.614144802093506
    8. 'split' → logprob: -8.364145278930664
    9. 's' → logprob: -8.739145278930664
    10. '.split' → logprob: -8.989145278930664

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.133198283147067e-05
    2. 'strip' → logprob: -10.000051498413086
    3. ' split' → logprob: -12.125051498413086
    4. 'spl' → logprob: -15.875051498413086
    5. 'replace' → logprob: -16.625051498413086
    6. '(split' → logprob: -16.875051498413086
    7. 'rstrip' → logprob: -18.250051498413086
    8. '.split' → logprob: -18.625051498413086
    9. '```' → logprob: -18.625051498413086
    10. 'sp' → logprob: -19.375051498413086

Token 47: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5038173198699951
    2. '(' → logprob: -1.3788173198699951
    3. '('' → logprob: -2.003817319869995
    4. '("("' → logprob: -4.753817558288574
    5. '("' → logprob: -8.128817558288574
    6. '()]' → logprob: -10.128817558288574
    7. '(',' → logprob: -10.753817558288574
    8. '())' → logprob: -10.878817558288574
    9. '()?>' → logprob: -11.378817558288574
    10. '(`' → logprob: -12.003817558288574

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011978565715253353
    2. ' if' → logprob: -5.136978626251221
    3. ':' → logprob: -6.261978626251221
    4. '<|end|>' → logprob: -6.261978626251221
    5. '```' → logprob: -7.011978626251221
    6. ' ' → logprob: -7.761978626251221
    7. '    
' → logprob: -7.761978626251221
    8. '<|end|>' → logprob: -9.261978149414062
    9. ',' → logprob: -9.386978149414062
    10. '    ' → logprob: -9.636978149414062

Token 49: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03140847384929657
    2. ' if' → logprob: -3.6564085483551025
    3. 'stack' → logprob: -5.531408309936523
    4. '   ' → logprob: -6.906408309936523
    5. '```' → logprob: -10.156408309936523
    6. 'cal' → logprob: -10.281408309936523
    7. '<|end|>' → logprob: -11.156408309936523
    8. ' stack' → logprob: -11.156408309936523
    9. '(stack' → logprob: -12.156408309936523
    10. '    ' → logprob: -12.281408309936523

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.039483796805143356
    2. 'i' → logprob: -3.2894837856292725
    3. ' ' → logprob: -6.914484024047852
    4. '  ' → logprob: -7.789484024047852
    5. '   ' → logprob: -11.414484024047852
    6. '	i' → logprob: -11.664484024047852
    7. ' not' → logprob: -12.289484024047852
    8. '(i' → logprob: -12.664484024047852
    9. 'isdigit' → logprob: -13.289484024047852
    10. '    ' → logprob: -13.414484024047852

Token 51: ' in' (ID: 306)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.09129612147808075
    2. ' in' → logprob: -2.7162961959838867
    3. 'isdigit' → logprob: -3.9662961959838867
    4. ' not' → logprob: -6.466296195983887
    5. 'in' → logprob: -8.091296195983887
    6. '[' → logprob: -9.341296195983887
    7. '.' → logprob: -9.591296195983887
    8. 'is' → logprob: -9.591296195983887
    9. 'not' → logprob: -9.716296195983887
    10. '==' → logprob: -11.841296195983887

Token 52: ' cal' (ID: 2005)
  Prédit: 'cal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cal' → logprob: -0.252000629901886
    2. ' cal' → logprob: -1.5020005702972412
    3. '	cal' → logprob: -10.12700080871582
    4. '"' → logprob: -11.50200080871582
    5. '(cal' → logprob: -11.87700080871582
    6. ' ' → logprob: -12.37700080871582
    7. 'stack' → logprob: -13.12700080871582
    8. '.cal' → logprob: -13.75200080871582
    9. '["' → logprob: -13.87700080871582
    10. '   ' → logprob: -13.87700080871582

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002470186213031411
    2. ' :' → logprob: -6.127470016479492
    3. ':
' → logprob: -9.002470016479492
    4. '):' → logprob: -9.252470016479492
    5. ']:' → logprob: -10.752470016479492
    6. '():' → logprob: -11.502470016479492
    7. '[' → logprob: -12.002470016479492
    8. '.stack' → logprob: -12.002470016479492
    9. 'stack' → logprob: -12.877470016479492
    10. '  ' → logprob: -13.002470016479492

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031198322772979736
    2. 'stack' → logprob: -4.281198501586914
    3. ' stack' → logprob: -4.281198501586914
    4. '(stack' → logprob: -7.156198501586914
    5. '	stack' → logprob: -7.281198501586914
    6. '   ' → logprob: -8.156198501586914
    7. '```' → logprob: -8.281198501586914
    8. '        
' → logprob: -8.531198501586914
    9. '<|end|>' → logprob: -8.781198501586914
    10. '    ' → logprob: -9.031198501586914

Token 55: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.05118873342871666
    2. 'stack' (adapté à ' stack') → logprob: -3.0511887073516846
    3. ' b' → logprob: -7.051188945770264
    4. ' a' → logprob: -7.176188945770264
    5. ' val' → logprob: -8.676188468933105
    6. '    ' → logprob: -9.051188468933105
    7. 'a' → logprob: -9.301188468933105
    8. ' v' → logprob: -9.301188468933105
    9. '	stack' → logprob: -9.426188468933105
    10. 'b' → logprob: -9.551188468933105

Token 56: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.20203670859336853
    2. '[-' → logprob: -1.702036738395691
    3. '.' → logprob: -7.8270368576049805
    4. '.pop' → logprob: -8.70203685760498
    5. '.extend' → logprob: -10.82703685760498
    6. '.app' → logprob: -11.57703685760498
    7. 'append' → logprob: -11.95203685760498
    8. '.insert' → logprob: -12.32703685760498
    9. '2' → logprob: -12.82703685760498
    10. '[' → logprob: -13.20203685760498

Token 57: '(cal' (ID: 92785)
  Prédit: '(cal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cal' → logprob: -0.0012124951463192701
    2. '(' → logprob: -7.1262125968933105
    3. '(stack' → logprob: -7.8762125968933105
    4. '((' → logprob: -11.126212120056152
    5. '(calc' → logprob: -12.501212120056152
    6. '(str' → logprob: -12.751212120056152
    7. '(c' → logprob: -12.876212120056152
    8. 'cal' → logprob: -13.376212120056152
    9. '(
' → logprob: -14.001212120056152
    10. '(call' → logprob: -14.376212120056152

Token 58: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013202552509028465
    2. '[' → logprob: -9.125131607055664
    3. '][' → logprob: -11.875131607055664
    4. '}[' → logprob: -13.125131607055664
    5. '[token' → logprob: -13.125131607055664
    6. ')[' → logprob: -13.500131607055664
    7. '[in' → logprob: -13.750131607055664
    8. '[I' → logprob: -13.750131607055664
    9. '[current' → logprob: -13.875131607055664
    10. 'i' → logprob: -14.000131607055664

Token 59: '](' (ID: 20614)
  Prédit: ']('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '](' → logprob: -0.009662828408181667
    2. ']' → logprob: -4.759662628173828
    3. '(stack' → logprob: -7.009662628173828
    4. '(' → logprob: -9.384662628173828
    5. ' ]' → logprob: -11.384662628173828
    6. ']()' → logprob: -11.884662628173828
    7. 'stack' → logprob: -12.134662628173828
    8. '   ' → logprob: -12.259662628173828
    9. '"](' → logprob: -12.384662628173828
    10. ')(' → logprob: -12.384662628173828

Token 60: 'stack' (ID: 15145)
  Prédit: 'stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0019895401783287525
    2. ' stack' → logprob: -6.251989364624023
    3. '   ' → logprob: -10.501989364624023
    4. '(stack' → logprob: -11.376989364624023
    5. '	stack' → logprob: -12.126989364624023
    6. '  ' → logprob: -12.376989364624023
    7. ' ' → logprob: -12.376989364624023
    8. '    ' → logprob: -12.626989364624023
    9. '.stack' → logprob: -14.126989364624023
    10. '      ' → logprob: -14.501989364624023

Token 61: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.009263334795832634
    2. '-pop' → logprob: -4.759263515472412
    3. 'pop' → logprob: -8.009263038635254
    4. '[-' → logprob: -8.384263038635254
    5. '-' → logprob: -9.634263038635254
    6. '_pop' → logprob: -11.259263038635254
    7. 'Pop' → logprob: -13.509263038635254
    8. '.' → logprob: -13.509263038635254
    9. '(-' → logprob: -13.634263038635254
    10. ' pop' → logprob: -14.009263038635254

Token 62: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0037401027511805296
    2. '()' → logprob: -5.628740310668945
    3. '(),
' → logprob: -9.503740310668945
    4. '(),"' → logprob: -10.503740310668945
    5. '(),

' → logprob: -10.753740310668945
    6. '(),'' → logprob: -11.753740310668945
    7. ',' → logprob: -13.128740310668945
    8. '()
' → logprob: -13.628740310668945
    9. '(' → logprob: -13.753740310668945
    10. '(),
' → logprob: -13.878740310668945

Token 63: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.00133595522493124
    2. ' stack' → logprob: -6.626336097717285
    3. '(stack' → logprob: -12.626336097717285
    4. '	stack' → logprob: -12.626336097717285
    5. '  ' → logprob: -13.626336097717285
    6. ' ' → logprob: -14.001336097717285
    7. '.stack' → logprob: -14.501336097717285
    8. 'int' → logprob: -14.876336097717285
    9. '   ' → logprob: -15.001336097717285
    10. ')' → logprob: -16.75133514404297

Token 64: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -1.0445127372804563e-05
    2. 'pop' → logprob: -11.50001049041748
    3. '.p' → logprob: -15.75001049041748
    4. '.' → logprob: -17.750009536743164
    5. ' pop' → logprob: -17.750009536743164
    6. '	pop' → logprob: -19.250009536743164
    7. '-pop' → logprob: -19.250009536743164
    8. '[-' → logprob: -19.500009536743164
    9. '_pop' → logprob: -19.625009536743164
    10. '.Pop' → logprob: -20.375009536743164

Token 65: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07848606258630753
    2. '())' → logprob: -2.8284859657287598
    3. '))' → logprob: -4.32848596572876
    4. ')' → logprob: -6.45348596572876
    5. '()' → logprob: -6.70348596572876
    6. '()))
' → logprob: -7.95348596572876
    7. '()))

' → logprob: -11.078486442565918
    8. '())
' → logprob: -11.203486442565918
    9. '()));' → logprob: -12.578486442565918
    10. '()),' → logprob: -13.078486442565918

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05143662542104721
    2. 'else' → logprob: -3.17643666267395
    3. ' else' → logprob: -4.801436424255371
    4. 'elif' → logprob: -9.301436424255371
    5. '```' → logprob: -9.676436424255371
    6. '  ' → logprob: -11.426436424255371
    7. ' elif' → logprob: -12.051436424255371
    8. '    
' → logprob: -12.426436424255371
    9. '``' → logprob: -13.551436424255371
    10. '	else' → logprob: -13.676436424255371

Token 67: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.04973815381526947
    2. ' else' → logprob: -3.0497381687164307
    3. '   ' → logprob: -6.799737930297852
    4. 'elif' → logprob: -10.299737930297852
    5. '	else' → logprob: -13.799737930297852
    6. ' elif' → logprob: -14.674737930297852
    7. '  ' → logprob: -14.799737930297852
    8. 'e' → logprob: -15.549737930297852
    9. ' ' → logprob: -16.04973793029785
    10. '_else' → logprob: -16.54973793029785

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004232139326632023
    2. ':
' → logprob: -5.504231929779053
    3. '       ' → logprob: -9.504232406616211
    4. '   ' → logprob: -10.504232406616211
    5. ' :' → logprob: -11.004232406616211
    6. '(stack' → logprob: -11.379232406616211
    7. '):' → logprob: -12.004232406616211
    8. ':

' → logprob: -12.129232406616211
    9. ' :
' → logprob: -12.504232406616211
    10. 'stack' → logprob: -13.629232406616211

Token 69: '       ' (ID: 309)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.14473368227481842
    2. 'stack' → logprob: -2.0197336673736572
    3. '   ' → logprob: -6.769733905792236
    4. '	stack' → logprob: -7.894733905792236
    5. '    ' → logprob: -8.394733428955078
    6. '       ' → logprob: -8.644733428955078
    7. '.stack' → logprob: -10.269733428955078
    8. '(stack' → logprob: -10.269733428955078
    9. '```' → logprob: -10.269733428955078
    10. '        ' → logprob: -11.769733428955078

Token 70: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.16024108231067657
    2. ' stack' → logprob: -1.9102411270141602
    3. '	stack' → logprob: -11.66024112701416
    4. '.stack' → logprob: -12.16024112701416
    5. '   ' → logprob: -13.78524112701416
    6. '(stack' → logprob: -14.28524112701416
    7. 'Stack' → logprob: -15.16024112701416
    8. ' ' → logprob: -15.16024112701416
    9. '_stack' → logprob: -15.28524112701416
    10. 'stackoverflow' → logprob: -15.41024112701416

Token 71: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003503626212477684
    2. '.' → logprob: -8.000349998474121
    3. '.setdefault' → logprob: -12.125349998474121
    4. '.app' → logprob: -12.375349998474121
    5. '.extend' → logprob: -13.250349998474121
    6. '.push' → logprob: -13.625349998474121
    7. ' .' → logprob: -14.625349998474121
    8. ').' → logprob: -14.875349998474121
    9. '.py' → logprob: -15.250349998474121
    10. 'append' → logprob: -15.500349998474121

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003643058007583022
    2. '(' → logprob: -8.000364303588867
    3. '(float' → logprob: -10.500364303588867
    4. 'int' → logprob: -13.625364303588867
    5. '(i' → logprob: -16.250364303588867
    6. '(eval' → logprob: -18.000364303588867
    7. '(
' → logprob: -18.250364303588867
    8. ' (' → logprob: -18.625364303588867
    9. '((' → logprob: -18.625364303588867
    10. ' int' → logprob: -19.125364303588867

Token 73: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.5597102396423e-05
    2. '(' → logprob: -10.250035285949707
    3. ')' → logprob: -16.875036239624023
    4. ' (' → logprob: -17.000036239624023
    5. '(
' → logprob: -17.750036239624023
    6. ')(' → logprob: -18.125036239624023
    7. '(ii' → logprob: -18.250036239624023
    8. ')i' → logprob: -18.750036239624023
    9. '(I' → logprob: -18.875036239624023
    10. '(x' → logprob: -20.000036239624023

Token 74: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006727214436978102
    2. ')' → logprob: -5.00672721862793
    3. '))
' → logprob: -11.50672721862793
    4. ')))' → logprob: -13.88172721862793
    5. ' ))' → logprob: -14.13172721862793
    6. ')
' → logprob: -15.88172721862793
    7. ' )' → logprob: -17.25672721862793
    8. '()))' → logprob: -17.38172721862793
    9. '))

' → logprob: -17.88172721862793
    10. ''))' → logprob: -18.38172721862793

Token 75: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0030971430242061615
    2. ' print' → logprob: -6.628097057342529
    3. ')' → logprob: -7.128097057342529
    4. '
' → logprob: -7.253097057342529
    5. '.print' → logprob: -10.128097534179688
    6. ')
' → logprob: -10.378097534179688
    7. '(print' → logprob: -10.503097534179688
    8. '```' → logprob: -10.503097534179688
    9. '  
' → logprob: -10.628097534179688
    10. '[' → logprob: -11.003097534179688

Token 76: '(stack' (ID: 52691)
  Prédit: '(stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.31345221400260925
    2. '(' → logprob: -1.3134522438049316
    3. '("("' → logprob: -8.813451766967773
    4. '(Stack' → logprob: -11.438451766967773
    5. '('' → logprob: -11.563451766967773
    6. '()' → logprob: -12.063451766967773
    7. 'stack' → logprob: -12.063451766967773
    8. '(`' → logprob: -13.563451766967773
    9. '((' → logprob: -13.563451766967773
    10. '(
' → logprob: -14.063451766967773

Token 77: '[-' (ID: 17503)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.4299347698688507
    2. '[' → logprob: -1.1799347400665283
    3. '[-' → logprob: -3.1799347400665283
    4. ')' → logprob: -7.554934978485107
    5. 'pop' → logprob: -10.30493450164795
    6. 'Pop' → logprob: -13.42993450164795
    7. '.' → logprob: -13.92993450164795
    8. '.Pop' → logprob: -14.67993450164795
    9. '-pop' → logprob: -15.30493450164795
    10. '[]' → logprob: -15.55493450164795

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '])' → logprob: -18.0
    3. ' ' → logprob: -18.25
    4. '0' → logprob: -19.375
    5. '```' → logprob: -19.75
    6. '   ' → logprob: -19.875
    7. '-' → logprob: -20.0
    8. '１' → logprob: -20.125
    9. ')' → logprob: -20.25
    10. '  ' → logprob: -20.375

Token 79: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015920029545668513
    2. '))' → logprob: -8.75015926361084
    3. ' )' → logprob: -14.87515926361084
    4. '])' → logprob: -15.75015926361084
    5. '})' → logprob: -16.625158309936523
    6. ')
' → logprob: -16.875158309936523
    7. ')}' → logprob: -17.000158309936523
    8. '）' → logprob: -17.625158309936523
    9. ')))' → logprob: -17.750158309936523
    10. ')`' → logprob: -18.375158309936523


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 67
Précision stricte (1ère position): 48.05%
Précision adaptée (1ère position): 51.95%
Précision (top 10): 87.01%
================================================================================
