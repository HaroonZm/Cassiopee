================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
COM = [list(input().split()) for _ in range(n)]

class Node:
    def __init__(self,data):
        self.data = data #int
        self.left = None #Node
        self.right = None #Node
        self.parent = None #Node

    def inorder(self,List):
        if self.data != None:
            if self.left != None:
                self.left.inorder(List)
            List.append(self.data)
            if self.right != None:
                self.right.inorder(List)
        return List

    def preorder(self,List):
        if self.data != None:
            List.append(self.data)
            if self.left != None:
                self.left.preorder(List)
            if self.right != None:
                self.right.preorder(List)
        return List

class BTree:
    def __init__(self):
        self.root = None

    def insert(self,z):
        y = None
        x = self.root
        while x != None:
            y = x
            if z.data < x.data:
                x = x.left
            else:
                x = x.right
        z.parent = y
        if y == None:
            self.root = z
        elif z.data < y.data:
            y.left = z
        else:
            y.right = z

    def find(self,data):
        pt = self.root
        flag = 0
        while pt != None:
            if pt.data == data:
                flag = 1
                print("yes")
                break
            elif pt.data > data:
                pt = pt.left
            else:
                pt = pt.right
        if flag == 0:
            print("no")

    def print(self):
        print(""," ".join(map(str,self.root.inorder([])))) #なぜかjoinを使ったら速くなった
        print(""," ".join(map(str,self.root.preorder([]))))

btree = BTree()
cnt = 0
for i in range(n):
    if COM[i][0] == "insert":
        node = Node(int(COM[i][1]))
        btree.insert(node)
        cnt += 1
    elif COM[i][0] == "find":
        btree.find(int(COM[i][1]))
    else:
        btree.print()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'COM' (ID: 13775)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: 'MIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MIT' → logprob: -0.8942016363143921
    2. 'MAND' → logprob: -1.019201636314392
    3. 'PUT' → logprob: -2.2692017555236816
    4. 'MON' → logprob: -3.0192017555236816
    5. 'P' → logprob: -3.7692017555236816
    6. 'M' → logprob: -4.144201755523682
    7. 'MAN' → logprob: -4.644201755523682
    8. 'ENT' → logprob: -5.394201755523682
    9. 'PLE' → logprob: -5.644201755523682
    10. '```' → logprob: -5.769201755523682

Token 7: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9964650869369507
    2. ' []' → logprob: -1.6214650869369507
    3. ' input' → logprob: -2.3714652061462402
    4. '"' → logprob: -2.4964652061462402
    5. ' ' → logprob: -2.6214652061462402
    6. ''' → logprob: -2.8714652061462402
    7. '[]' → logprob: -2.9964652061462402
    8. ' n' → logprob: -4.87146520614624
    9. '[' → logprob: -4.99646520614624
    10. '[input' → logprob: -4.99646520614624

Token 8: 'list' (ID: 2641)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6517246961593628
    2. 'list' → logprob: -1.4017246961593628
    3. '[]' → logprob: -2.4017248153686523
    4. ']' → logprob: -2.5267248153686523
    5. 'int' → logprob: -3.1517248153686523
    6. 'input' → logprob: -5.026724815368652
    7. '[int' → logprob: -6.151724815368652
    8. '()]' → logprob: -6.276724815368652
    9. 'False' → logprob: -6.401724815368652
    10. '   ' → logprob: -6.401724815368652

Token 9: '(input' (ID: 10054)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002601937623694539
    2. '(' → logprob: -6.1276021003723145
    3. '(input' → logprob: -7.8776021003723145
    4. '(int' → logprob: -10.752601623535156
    5. '()' → logprob: -11.877601623535156
    6. '(range' → logprob: -12.377601623535156
    7. 'map' → logprob: -13.502601623535156
    8. '(
' → logprob: -13.877601623535156
    9. '()]' → logprob: -14.252601623535156
    10. ' map' → logprob: -14.627601623535156

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002059023128822446
    2. '()' → logprob: -6.502058982849121
    3. '().' → logprob: -8.002058982849121
    4. '()]' → logprob: -8.627058982849121
    5. '()))' → logprob: -10.502058982849121
    6. '());' → logprob: -12.002058982849121
    7. ' ())' → logprob: -13.002058982849121
    8. '()),' → logprob: -13.752058982849121
    9. '())
' → logprob: -13.752058982849121
    10. '(' → logprob: -14.127058982849121

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0794217512011528
    2. 'strip' → logprob: -2.5794217586517334
    3. 'rstrip' → logprob: -7.579421520233154
    4. ')' → logprob: -11.079421997070312
    5. ' split' → logprob: -12.829421997070312
    6. 'replace' → logprob: -13.454421997070312
    7. '(split' → logprob: -13.954421997070312
    8. ' strip' → logprob: -15.079421997070312
    9. '.split' → logprob: -16.829421997070312
    10. '))' → logprob: -17.329421997070312

Token 12: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002521084388718009
    2. '('' → logprob: -7.00252103805542
    3. '()]' → logprob: -7.25252103805542
    4. '()' → logprob: -7.50252103805542
    5. '()))' → logprob: -8.252521514892578
    6. '(' → logprob: -10.252521514892578
    7. '()),' → logprob: -11.002521514892578
    8. '(','' → logprob: -11.502521514892578
    9. '("' → logprob: -12.377521514892578
    10. ')' → logprob: -12.502521514892578

Token 13: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5056833028793335
    2. ')]' → logprob: -1.2556833028793335
    3. ')' → logprob: -2.255683422088623
    4. '()]' → logprob: -5.255683422088623
    5. 'for' → logprob: -7.130683422088623
    6. '])' → logprob: -8.005682945251465
    7. ' for' → logprob: -8.380682945251465
    8. '[' → logprob: -8.505682945251465
    9. '()' → logprob: -9.005682945251465
    10. '`]' → logprob: -9.880682945251465

Token 14: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18482650816440582
    2. ' range' → logprob: -2.059826612472534
    3. ' _' → logprob: -3.309826612472534
    4. ' i' → logprob: -5.559826374053955
    5. '_range' → logprob: -7.559826374053955
    6. ' ' → logprob: -8.559826850891113
    7. 'range' → logprob: -9.059826850891113
    8. '(range' → logprob: -10.309826850891113
    9. '_i' → logprob: -12.059826850891113
    10. '	range' → logprob: -12.309826850891113

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011204618960618973
    2. 'in' → logprob: -4.511204719543457
    3. 'range' → logprob: -9.261204719543457
    4. ' ' → logprob: -10.636204719543457
    5. '<|end|>' → logprob: -12.136204719543457
    6. '_' → logprob: -12.386204719543457
    7. 'n' → logprob: -12.386204719543457
    8. '	in' → logprob: -13.511204719543457
    9. ' range' → logprob: -13.511204719543457
    10. 'for' → logprob: -13.636204719543457

Token 16: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018152287229895592
    2. ' range' → logprob: -4.018152236938477
    3. '(range' → logprob: -14.268152236938477
    4. '	range' → logprob: -14.268152236938477
    5. ' ' → logprob: -14.393152236938477
    6. 'r' → logprob: -16.268152236938477
    7. 'rang' → logprob: -16.643152236938477
    8. '   ' → logprob: -16.643152236938477
    9. 'ran' → logprob: -16.768152236938477
    10. '  ' → logprob: -17.143152236938477

Token 17: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011057726107537746
    2. '(' → logprob: -4.5110578536987305
    3. ' (' → logprob: -12.38605785369873
    4. '(len' → logprob: -12.88605785369873
    5. 'n' → logprob: -13.13605785369873
    6. ' n' → logprob: -14.88605785369873
    7. '(
' → logprob: -15.13605785369873
    8. ')n' → logprob: -15.88605785369873
    9. '(N' → logprob: -16.261056900024414
    10. '(range' → logprob: -16.886056900024414

Token 18: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.000241085872403346
    2. ')' → logprob: -8.37524127960205
    3. ']' → logprob: -12.50024127960205
    4. ')])' → logprob: -12.87524127960205
    5. ' )' → logprob: -13.50024127960205
    6. '))' → logprob: -14.12524127960205
    7. '])]' → logprob: -14.62524127960205
    8. '')]' → logprob: -14.62524127960205
    9. ')],' → logprob: -15.12524127960205
    10. '])' → logprob: -15.62524127960205

Token 19: 'class' (ID: 1444)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3924413025379181
    2. ')' → logprob: -2.2674412727355957
    3. ']' → logprob: -2.5174412727355957
    4. '[' → logprob: -2.6424412727355957
    5. '#' → logprob: -3.1424412727355957
    6. '(' → logprob: -5.517441272735596
    7. '=' → logprob: -5.767441272735596
    8. 's' → logprob: -6.142441272735596
    9. 'f' → logprob: -6.142441272735596
    10. ' for' → logprob: -6.392441272735596

Token 20: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7074079513549805
    2. ' C' → logprob: -2.3324079513549805
    3. ' Pet' → logprob: -2.7074079513549805
    4. ' Calculator' → logprob: -3.2074079513549805
    5. ' COM' → logprob: -3.4574079513549805
    6. ' My' → logprob: -3.5824079513549805
    7. ' Connected' → logprob: -4.0824079513549805
    8. ' Counter' → logprob: -4.0824079513549805
    9. ' Computer' → logprob: -4.3324079513549805
    10. ' `' → logprob: -4.4574079513549805

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011804660316556692
    2. ' :' → logprob: -7.251180648803711
    3. '(' → logprob: -8.126180648803711
    4. '():' → logprob: -8.751180648803711
    5. '(object' → logprob: -12.376180648803711
    6. '<|end|>' → logprob: -12.876180648803711
    7. ':
' → logprob: -13.001180648803711
    8. ':**' → logprob: -13.751180648803711
    9. '(:' → logprob: -14.001180648803711
    10. '):' → logprob: -14.126180648803711

Token 22: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22502918541431427
    2. '   ' → logprob: -1.8500292301177979
    3. ' :' → logprob: -4.350028991699219
    4. ' def' → logprob: -4.475028991699219
    5. '<|end|>' → logprob: -5.350028991699219
    6. ' ' → logprob: -5.475028991699219
    7. 'def' → logprob: -5.600028991699219
    8. '    ' → logprob: -5.975028991699219
    9. '(object' → logprob: -6.475028991699219
    10. '(' → logprob: -6.725028991699219

Token 23: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.027639957144856453
    2. 'def' (adapté à ' def') → logprob: -3.652639865875244
    3. '   ' → logprob: -7.027639865875244
    4. ' pass' → logprob: -7.777639865875244
    5. ' None' → logprob: -12.027640342712402
    6. ' ' → logprob: -12.027640342712402
    7. 'pass' → logprob: -12.152640342712402
    8. '    ' → logprob: -12.277640342712402
    9. 'class' → logprob: -12.402640342712402
    10. '	def' → logprob: -13.027640342712402

Token 24: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.019113274291157722
    2. '__' → logprob: -4.394113063812256
    3. 'init' → logprob: -5.269113063812256
    4. ' init' → logprob: -6.894113063812256
    5. '   ' → logprob: -8.019113540649414
    6. ' ' → logprob: -10.769113540649414
    7. 'it' → logprob: -11.019113540649414
    8. '  ' → logprob: -11.519113540649414
    9. ' def' → logprob: -11.769113540649414
    10. '```' → logprob: -11.769113540649414

Token 25: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.625
    3. ' init' → logprob: -17.125
    4. 'int' → logprob: -19.875
    5. '_init' → logprob: -19.875
    6. 'inite' → logprob: -20.0
    7. 'innit' → logprob: -20.625
    8. 'in' → logprob: -20.875
    9. '	init' → logprob: -21.375
    10. 'inti' → logprob: -21.75

Token 26: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.016268141567707062
    2. '__' → logprob: -4.141268253326416
    3. '(self' → logprob: -9.391267776489258
    4. '__(
' → logprob: -9.391267776489258
    5. '__((' → logprob: -10.641267776489258
    6. '(' → logprob: -10.641267776489258
    7. '__(*' → logprob: -12.141267776489258
    8. '__('' → logprob: -12.266267776489258
    9. ' (' → logprob: -12.891267776489258
    10. '_(' → logprob: -13.516267776489258

Token 27: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007613374851644039
    2. ' self' → logprob: -4.882613182067871
    3. ')' → logprob: -12.382613182067871
    4. 'name' → logprob: -13.882613182067871
    5. ' ' → logprob: -14.507613182067871
    6. 'data' → logprob: -15.007613182067871
    7. '   ' → logprob: -15.132613182067871
    8. 'value' → logprob: -15.632613182067871
    9. 'parent' → logprob: -15.882613182067871
    10. '0' → logprob: -16.007614135742188

Token 28: ',data' (ID: 57278)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09101895242929459
    2. ' ,' → logprob: -2.5910189151763916
    3. 'self' → logprob: -4.716019153594971
    4. ' self' → logprob: -6.091019153594971
    5. ',self' → logprob: -7.341019153594971
    6. ' ' → logprob: -10.091018676757812
    7. ',node' → logprob: -10.091018676757812
    8. ',name' → logprob: -10.591018676757812
    9. ' )' → logprob: -10.841018676757812
    10. ')' → logprob: -11.091018676757812

Token 29: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16394516825675964
    2. '):' → logprob: -1.913945198059082
    3. ' ,' → logprob: -6.038945198059082
    4. ' ):' → logprob: -7.038945198059082
    5. ')' → logprob: -8.413945198059082
    6. ',data' → logprob: -8.913945198059082
    7. '   ' → logprob: -10.788945198059082
    8. '):
' → logprob: -11.663945198059082
    9. ':' → logprob: -11.913945198059082
    10. ',self' → logprob: -12.038945198059082

Token 30: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6695127487182617
    2. '       ' → logprob: -0.7945127487182617
    3. ' ,' → logprob: -3.7945127487182617
    4. '):' → logprob: -5.294512748718262
    5. ',data' → logprob: -6.294512748718262
    6. ')' → logprob: -6.419512748718262
    7. ' self' → logprob: -6.919512748718262
    8. '   ' → logprob: -7.044512748718262
    9. '        ' → logprob: -7.669512748718262
    10. '    ' → logprob: -7.669512748718262

Token 31: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06203020364046097
    2. 'self' (adapté à ' self') → logprob: -2.81203031539917
    3. ' data' → logprob: -10.812029838562012
    4. ' ' → logprob: -11.187029838562012
    5. '       ' → logprob: -11.437029838562012
    6. 'data' → logprob: -12.062029838562012
    7. '   ' → logprob: -12.187029838562012
    8. '	self' → logprob: -12.812029838562012
    9. ' None' → logprob: -13.187029838562012
    10. '    ' → logprob: -14.312029838562012

Token 32: '.data' (ID: 3885)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17034679651260376
    2. ' =' → logprob: -2.545346736907959
    3. '.data' → logprob: -3.295346736907959
    4. 'data' → logprob: -3.545346736907959
    5. '=' → logprob: -5.045346736907959
    6. '_data' → logprob: -6.170346736907959
    7. '=data' → logprob: -6.420346736907959
    8. ' data' → logprob: -6.670346736907959
    9. ' ' → logprob: -7.670346736907959
    10. ' .' → logprob: -9.170347213745117

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761201977729797
    2. '=' → logprob: -0.8261201977729797
    3. '=data' → logprob: -8.701120376586914
    4. '<|end|>' → logprob: -12.201120376586914
    5. ',' → logprob: -12.326120376586914
    6. ')' → logprob: -13.451120376586914
    7. ' ' → logprob: -13.826120376586914
    8. '<|end|>' → logprob: -14.576120376586914
    9. 'data' → logprob: -14.826120376586914
    10. '=node' → logprob: -15.701120376586914

Token 34: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.4740782678127289
    2. 'data' → logprob: -0.9740782976150513
    3. ' ' → logprob: -14.599078178405762
    4. '	data' → logprob: -14.724078178405762
    5. '$data' → logprob: -16.724079132080078
    6. ')data' → logprob: -16.849079132080078
    7. '<data' → logprob: -16.974079132080078
    8. '(data' → logprob: -17.099079132080078
    9. '_data' → logprob: -17.099079132080078
    10. '.data' → logprob: -17.599079132080078

Token 35: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19224488735198975
    2. '
' → logprob: -2.4422450065612793
    3. '<|end|>' → logprob: -2.4422450065612793
    4. '<|end|>' → logprob: -8.317244529724121
    5. '        
' → logprob: -8.567244529724121
    6. ')' → logprob: -9.317244529724121
    7. '        ' → logprob: -9.317244529724121
    8. 'self' → logprob: -9.567244529724121
    9. '\n' → logprob: -9.817244529724121
    10. '  
' → logprob: -10.442244529724121

Token 36: 'int' (ID: 491)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.9372778534889221
    2. ' None' → logprob: -1.1872777938842773
    3. ' ' → logprob: -1.6872777938842773
    4. 'data' → logprob: -2.1872777938842773
    5. 'None' → logprob: -5.687277793884277
    6. ' self' → logprob: -7.062277793884277
    7. 'self' → logprob: -8.312277793884277
    8. ' '' → logprob: -8.437277793884277
    9. ' "' → logprob: -8.562277793884277
    10. ' node' → logprob: -8.812277793884277

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031566880643367767
    2. 'self' → logprob: -5.878156661987305
    3. ' self' → logprob: -8.128156661987305
    4. '<|end|>' → logprob: -9.878156661987305
    5. ',' → logprob: -13.878156661987305
    6. '   ' → logprob: -14.003156661987305
    7. '<|end|>' → logprob: -14.003156661987305
    8. '	self' → logprob: -14.628156661987305
    9. '      ' → logprob: -14.628156661987305
    10. '.' → logprob: -15.128156661987305

Token 39: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.513303816318512
    2. '       ' → logprob: -1.1383037567138672
    3. ' self' → logprob: -2.513303756713867
    4. '   ' → logprob: -10.138303756713867
    5. '<|end|>' → logprob: -10.888303756713867
    6. ' ' → logprob: -11.263303756713867
    7. ',' → logprob: -11.263303756713867
    8. '	self' → logprob: -11.388303756713867
    9. ',self' → logprob: -12.638303756713867
    10. '(self' → logprob: -12.638303756713867

Token 40: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.45850804448127747
    2. '.next' → logprob: -1.333508014678955
    3. '.' → logprob: -2.458508014678955
    4. '.parent' → logprob: -4.833508014678955
    5. '.children' → logprob: -5.083508014678955
    6. '.right' → logprob: -6.208508014678955
    7. '.prev' → logprob: -7.208508014678955
    8. 'left' → logprob: -8.083508491516113
    9. 'next' → logprob: -8.333508491516113
    10. ' .' → logprob: -8.583508491516113

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4767955541610718
    2. '=' → logprob: -0.9767955541610718
    3. '=None' → logprob: -6.101795673370361
    4. ',' → logprob: -8.601795196533203
    5. '<|end|>' → logprob: -8.851795196533203
    6. ' ' → logprob: -9.101795196533203
    7. '<|end|>' → logprob: -11.226795196533203
    8. ')' → logprob: -12.101795196533203
    9. ' ,' → logprob: -12.476795196533203
    10. ':' → logprob: -13.351795196533203

Token 42: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.1602255403995514
    2. 'None' → logprob: -1.910225510597229
    3. ' ' → logprob: -14.285225868225098
    4. '=None' → logprob: -15.785225868225098
    5. '(None' → logprob: -15.785225868225098
    6. ',None' → logprob: -15.785225868225098
    7. '_None' → logprob: -15.910225868225098
    8. ' none' → logprob: -16.16022491455078
    9. 'none' → logprob: -16.91022491455078
    10. 'self' → logprob: -16.91022491455078

Token 43: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22701796889305115
    2. '<|end|>' → logprob: -1.8520179986953735
    3. '   ' → logprob: -3.977017879486084
    4. ' ' → logprob: -4.227017879486084
    5. '    ' → logprob: -5.727017879486084
    6. '<|end|>' → logprob: -5.852017879486084
    7. '    
' → logprob: -6.227017879486084
    8. '  ' → logprob: -6.477017879486084
    9. '        
' → logprob: -7.102017879486084
    10. '        ' → logprob: -7.227017879486084

Token 44: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.20300638675689697
    2. ' Node' → logprob: -1.703006386756897
    3. ' '' → logprob: -7.328006267547607
    4. ' None' → logprob: -7.953006267547607
    5. 'None' → logprob: -8.328006744384766
    6. ''' → logprob: -8.828006744384766
    7. '<Node' → logprob: -9.953006744384766
    8. '.Node' → logprob: -10.328006744384766
    9. '	Node' → logprob: -10.453006744384766
    10. '_Node' → logprob: -10.578006744384766

Token 45: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06090628728270531
    2. '   ' → logprob: -3.435906171798706
    3. '<|end|>' → logprob: -4.185906410217285
    4. '    
' → logprob: -5.185906410217285
    5. '        
' → logprob: -6.060906410217285
    6. ' ' → logprob: -7.060906410217285
    7. '<|end|>' → logprob: -7.060906410217285
    8. '  ' → logprob: -7.685906410217285
    9. '  
' → logprob: -7.935906410217285
    10. '   
' → logprob: -8.310906410217285

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001727656926959753
    2. 'self' → logprob: -7.00172758102417
    3. '   ' → logprob: -7.25172758102417
    4. '<|end|>' → logprob: -10.626728057861328
    5. ' self' → logprob: -10.876728057861328
    6. '      ' → logprob: -11.626728057861328
    7. ',' → logprob: -11.876728057861328
    8. '        
' → logprob: -12.001728057861328
    9. '    
' → logprob: -12.251728057861328
    10. '\' → logprob: -12.251728057861328

Token 47: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11443807184696198
    2. 'self' (adapté à ' self') → logprob: -2.239438056945801
    3. ' self' → logprob: -6.614438056945801
    4. '   ' → logprob: -8.3644380569458
    5. ' ' → logprob: -11.6144380569458
    6. '	self' → logprob: -11.6144380569458
    7. '      ' → logprob: -12.1144380569458
    8. '     ' → logprob: -12.4894380569458
    9. '    ' → logprob: -13.1144380569458
    10. '<|end|>' → logprob: -13.2394380569458

Token 48: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0006006922340020537
    2. '.' → logprob: -7.625600814819336
    3. 'right' → logprob: -9.500600814819336
    4. '.left' → logprob: -10.250600814819336
    5. ' .' → logprob: -14.375600814819336
    6. '.next' → logprob: -14.875600814819336
    7. '.parent' → logprob: -15.000600814819336
    8. '.r' → logprob: -15.375600814819336
    9. '	right' → logprob: -15.625600814819336
    10. '.middle' → logprob: -16.125600814819336

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603066772222519
    2. '=' → logprob: -1.910306692123413
    3. '=None' → logprob: -9.535306930541992
    4. '<|end|>' → logprob: -11.785306930541992
    5. '<|end|>' → logprob: -13.535306930541992
    6. ' ' → logprob: -14.035306930541992
    7. '＝' → logprob: -16.160306930541992
    8. ',' → logprob: -16.160306930541992
    9. ')' → logprob: -16.285306930541992
    10. ' =
' → logprob: -16.535306930541992

Token 50: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12693126499652863
    2. ' None' → logprob: -2.1269311904907227
    3. '(None' → logprob: -13.751931190490723
    4. 'Node' → logprob: -14.626931190490723
    5. '_None' → logprob: -14.626931190490723
    6. ' ' → logprob: -14.876931190490723
    7. ',None' → logprob: -15.001931190490723
    8. '=None' → logprob: -15.251931190490723
    9. '.None' → logprob: -15.501931190490723
    10. '   ' → logprob: -16.50193214416504

Token 51: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.9164441823959351
    2. 'None' → logprob: -1.041444182395935
    3. ' None' → logprob: -1.541444182395935
    4. ' Node' → logprob: -3.4164443016052246
    5. '.Node' → logprob: -10.041443824768066
    6. '	Node' → logprob: -10.416443824768066
    7. '<Node' → logprob: -10.541443824768066
    8. ' node' → logprob: -10.666443824768066
    9. '(None' → logprob: -10.916443824768066
    10. '_Node' → logprob: -11.291443824768066

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4275411069393158
    2. '<|end|>' → logprob: -1.4275411367416382
    3. '
' → logprob: -3.0525410175323486
    4. 'def' → logprob: -3.3025410175323486
    5. '    
' → logprob: -5.177541255950928
    6. ' ' → logprob: -5.177541255950928
    7. 'class' → logprob: -5.927541255950928
    8. '<|end|>' → logprob: -6.052541255950928
    9. ')' → logprob: -6.427541255950928
    10. ' def' → logprob: -7.052541255950928

Token 55: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4398789703845978
    2. 'def' → logprob: -1.1898789405822754
    3. 'class' → logprob: -3.6898789405822754
    4. '
' → logprob: -4.064878940582275
    5. ' def' → logprob: -5.939878940582275
    6. '    
' → logprob: -6.314878940582275
    7. '       ' → logprob: -6.814878940582275
    8. ' ' → logprob: -7.189878940582275
    9. '```' → logprob: -7.439878940582275
    10. '<|end|>' → logprob: -7.439878940582275

Token 56: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.19719168543815613
    2. '.' → logprob: -3.3221917152404785
    3. '.size' → logprob: -3.5721917152404785
    4. '.depth' → logprob: -3.6971917152404785
    5. '.count' → logprob: -3.8221917152404785
    6. '.left' → logprob: -4.1971917152404785
    7. '.next' → logprob: -4.6971917152404785
    8. '.is' → logprob: -5.0721917152404785
    9. '.height' → logprob: -5.1971917152404785
    10. 'def' → logprob: -5.4471917152404785

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327956914901733
    2. '=' → logprob: -1.313279628753662
    3. '=None' → logprob: -11.188279151916504
    4. ' ' → logprob: -12.563279151916504
    5. '<|end|>' → logprob: -15.438279151916504
    6. '＝' → logprob: -16.81328010559082
    7. ' =
' → logprob: -17.18828010559082
    8. '  ' → logprob: -17.31328010559082
    9. ' None' → logprob: -17.56328010559082
    10. '   ' → logprob: -17.81328010559082

Token 58: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01815076172351837
    2. ' None' → logprob: -4.018150806427002
    3. 'self' → logprob: -14.143150329589844
    4. '   ' → logprob: -16.518150329589844
    5. '_None' → logprob: -17.518150329589844
    6. ' ' → logprob: -17.643150329589844
    7. '(None' → logprob: -18.268150329589844
    8. '=None' → logprob: -18.518150329589844
    9. 'none' → logprob: -18.893150329589844
    10. '0' → logprob: -19.143150329589844

Token 59: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4928344488143921
    2. '
' → logprob: -1.867834448814392
    3. 'def' → logprob: -1.867834448814392
    4. 'class' → logprob: -3.3678345680236816
    5. 'n' → logprob: -4.367834568023682
    6. '    
' → logprob: -4.367834568023682
    7. '<|end|>' → logprob: -4.617834568023682
    8. '```' → logprob: -6.367834568023682
    9. ')' → logprob: -6.617834568023682
    10. '<|end|>' → logprob: -7.242834568023682

Token 60: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.032573405653238297
    2. 'None' → logprob: -3.9075734615325928
    3. ' Node' → logprob: -4.657573223114014
    4. ' None' → logprob: -6.032573223114014
    5. '<Node' → logprob: -10.407573699951172
    6. '<|end|>' → logprob: -11.407573699951172
    7. '.Node' → logprob: -11.657573699951172
    8. ' node' → logprob: -12.282573699951172
    9. '	Node' → logprob: -12.407573699951172
    10. 'node' → logprob: -12.657573699951172

Token 61: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5839515328407288
    2. '
' → logprob: -1.583951473236084
    3. 'def' → logprob: -1.833951473236084
    4. 'n' → logprob: -3.833951473236084
    5. 'class' → logprob: -4.083951473236084
    6. '    
' → logprob: -4.333951473236084
    7. '<|end|>' → logprob: -4.458951473236084
    8. ')' → logprob: -5.833951473236084
    9. ' ' → logprob: -6.583951473236084
    10. '' → logprob: -6.958951473236084

Token 62: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17039626836776733
    2. '
' → logprob: -2.670396327972412
    3. 'class' → logprob: -3.420396327972412
    4. 'for' → logprob: -3.920396327972412
    5. 'n' → logprob: -4.045396327972412
    6. '   ' → logprob: -5.295396327972412
    7. ' for' → logprob: -6.545396327972412
    8. '.' → logprob: -6.795396327972412
    9. 'd' → logprob: -6.795396327972412
    10. '

' → logprob: -7.045396327972412

Token 63: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014587696641683578
    2. '   ' → logprob: -4.389587879180908
    3. ' def' → logprob: -6.389587879180908
    4. '
' → logprob: -8.01458740234375
    5. '    
' → logprob: -10.51458740234375
    6. '	def' → logprob: -10.63958740234375
    7. 'class' → logprob: -12.88958740234375
    8. '        
' → logprob: -13.01458740234375
    9. '

' → logprob: -13.38958740234375
    10. '```' → logprob: -13.63958740234375

Token 64: ' inorder' (ID: 139692)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.9790351390838623
    2. ' set' → logprob: -1.1040351390838623
    3. 'insert' → logprob: -2.2290351390838623
    4. 'set' → logprob: -2.7290351390838623
    5. ' __' → logprob: -2.9790351390838623
    6. '__' → logprob: -3.3540351390838623
    7. '_insert' → logprob: -4.604035377502441
    8. '_set' → logprob: -5.479035377502441
    9. ' def' → logprob: -5.854035377502441
    10. ' add' → logprob: -5.854035377502441

Token 65: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01498459093272686
    2. '(' → logprob: -4.264984607696533
    3. '_' → logprob: -7.389984607696533
    4. '_tr' → logprob: -9.889984130859375
    5. '_(' → logprob: -10.264984130859375
    6. '_print' → logprob: -11.014984130859375
    7. 'Traversal' → logprob: -11.014984130859375
    8. ' (' → logprob: -11.139984130859375
    9. ' traversal' → logprob: -11.264984130859375
    10. '(root' → logprob: -11.764984130859375

Token 66: ',List' (ID: 166273)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7766834497451782
    2. '):' → logprob: -1.0266834497451782
    3. '(self' → logprob: -1.9016834497451782
    4. 'self' → logprob: -3.7766833305358887
    5. '(' → logprob: -6.151683330535889
    6. ' )' → logprob: -6.151683330535889
    7. ' ):' → logprob: -7.026683330535889
    8. '_' → logprob: -7.151683330535889
    9. '):
' → logprob: -7.276683330535889
    10. ',' → logprob: -7.776683330535889

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7685944437980652
    2. '(self' → logprob: -1.01859450340271
    3. ')' → logprob: -1.89359450340271
    4. 'self' → logprob: -4.643594264984131
    5. ',' → logprob: -4.768594264984131
    6. '   ' → logprob: -6.393594264984131
    7. '):
' → logprob: -6.518594264984131
    8. ',self' → logprob: -6.518594264984131
    9. '(' → logprob: -7.518594264984131
    10. '_' → logprob: -8.018594741821289

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008220217190682888
    2. '    ' → logprob: -6.008220195770264
    3. '   ' → logprob: -6.508220195770264
    4. ' ' → logprob: -6.633220195770264
    5. '	' → logprob: -7.508220195770264
    6. '<|end|>' → logprob: -7.633220195770264
    7. '[' → logprob: -7.883220195770264
    8. '        ' → logprob: -8.258220672607422
    9. ')' → logprob: -8.633220672607422
    10. '(' → logprob: -9.008220672607422

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1444547325372696
    2. 'if' (adapté à ' if') → logprob: -2.0194547176361084
    3. '       ' → logprob: -6.5194549560546875
    4. '   ' → logprob: -8.769454956054688
    5. '    ' → logprob: -9.519454956054688
    6. ' self' → logprob: -10.894454956054688
    7. ' for' → logprob: -11.019454956054688
    8. 'self' → logprob: -11.019454956054688
    9. '        ' → logprob: -12.144454956054688
    10. 'for' → logprob: -12.269454956054688

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10022036731243134
    2. ' self' → logprob: -2.3502204418182373
    3. '(self' → logprob: -11.225220680236816
    4. '	self' → logprob: -15.225220680236816
    5. ' ' → logprob: -16.7252197265625
    6. '   ' → logprob: -17.3502197265625
    7. ' ' → logprob: -17.4752197265625
    8. '$self' → logprob: -18.4752197265625
    9. '[self' → logprob: -18.8502197265625
    10. ':self' → logprob: -18.9752197265625

Token 71: '.data' (ID: 3885)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.6656825866666622e-05
    2. '.' → logprob: -11.12502670288086
    3. '.right' → logprob: -11.50002670288086
    4. '.Left' → logprob: -14.37502670288086
    5. '.data' → logprob: -14.87502670288086
    6. 'left' → logprob: -14.87502670288086
    7. ' .' → logprob: -15.25002670288086
    8. '.has' → logprob: -16.50002670288086
    9. '.parent' → logprob: -17.75002670288086
    10. '.le' → logprob: -17.87502670288086

Token 72: ' !=' (ID: 1666)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8651326298713684
    2. ' and' → logprob: -1.6151325702667236
    3. ':' → logprob: -1.9901325702667236
    4. '>' → logprob: -2.1151325702667236
    5. '!=' → logprob: -2.6151325702667236
    6. ' is' → logprob: -3.7401325702667236
    7. 'is' → logprob: -4.365132808685303
    8. '==' → logprob: -6.115132808685303
    9. 'in' → logprob: -6.115132808685303
    10. ' !=' → logprob: -6.240132808685303

Token 73: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0038201489951461554
    2. ' None' → logprob: -6.253819942474365
    3. '-' → logprob: -7.003819942474365
    4. '0' → logprob: -7.753819942474365
    5. '"' → logprob: -8.628820419311523
    6. '"."' → logprob: -9.378820419311523
    7. '".' → logprob: -9.628820419311523
    8. '   ' → logprob: -9.753820419311523
    9. ''' → logprob: -10.753820419311523
    10. '"#' → logprob: -11.003820419311523

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004936766345053911
    2. ' and' → logprob: -5.379936695098877
    3. ' :' → logprob: -9.129937171936035
    4. '):' → logprob: -9.504937171936035
    5. 'and' → logprob: -9.629937171936035
    6. ':
' → logprob: -9.879937171936035
    7. '   ' → logprob: -12.629937171936035
    8. '<|end|>' → logprob: -12.629937171936035
    9. ':**' → logprob: -13.129937171936035
    10. '.' → logprob: -13.129937171936035

Token 75: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5933098793029785
    2. '<|end|>' → logprob: -1.7183098793029785
    3. '           ' → logprob: -2.2183098793029785
    4. ' ' → logprob: -3.2183098793029785
    5. ')' → logprob: -3.7183098793029785
    6. '   ' → logprob: -3.8433098793029785
    7. '        ' → logprob: -4.3433098793029785
    8. ':' → logprob: -4.3433098793029785
    9. '               ' → logprob: -4.8433098793029785
    10. '    ' → logprob: -5.5933098793029785

Token 76: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6010880470275879
    2. ' self' → logprob: -1.726088047027588
    3. 'self' → logprob: -1.976088047027588
    4. 'if' (adapté à ' if') → logprob: -2.351088047027588
    5. 'List' → logprob: -3.601088047027588
    6. ' List' → logprob: -5.226088047027588
    7. '    ' → logprob: -6.101088047027588
    8. '       ' → logprob: -6.476088047027588
    9. '   ' → logprob: -6.726088047027588
    10. '           ' → logprob: -6.976088047027588

Token 77: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07002335041761398
    2. 'self' → logprob: -2.69502329826355
    3. ' ' → logprob: -9.570023536682129
    4. '   ' → logprob: -11.945023536682129
    5. '(self' → logprob: -12.445023536682129
    6. '	self' → logprob: -13.320023536682129
    7. '    ' → logprob: -13.570023536682129
    8. ' ' → logprob: -13.820023536682129
    9. '  ' → logprob: -14.320023536682129
    10. ' not' → logprob: -14.570023536682129

Token 78: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.786196975852363e-05
    2. '.right' → logprob: -10.375038146972656
    3. '.' → logprob: -12.375038146972656
    4. 'left' → logprob: -13.875038146972656
    5. ' .' → logprob: -14.250038146972656
    6. '.Left' → logprob: -14.750038146972656
    7. '.le' → logprob: -15.750038146972656
    8. '.has' → logprob: -16.625038146972656
    9. '.parent' → logprob: -16.750038146972656
    10. '.self' → logprob: -17.750038146972656

Token 79: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22531232237815857
    2. ':' → logprob: -1.725312352180481
    3. ' !=' → logprob: -4.475312232971191
    4. '<|end|>' → logprob: -5.225312232971191
    5. '!=' → logprob: -5.850312232971191
    6. 'is' → logprob: -6.475312232971191
    7. '<|end|>' → logprob: -7.225312232971191
    8. ' ' → logprob: -7.350312232971191
    9. ' :' → logprob: -8.100312232971191
    10. ' and' → logprob: -8.225312232971191

Token 80: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4740808606147766
    2. ' None' → logprob: -0.9740808606147766
    3. ' ' → logprob: -13.099081039428711
    4. '_None' → logprob: -13.974081039428711
    5. '(None' → logprob: -15.349081039428711
    6. '   ' → logprob: -15.474081039428711
    7. '  ' → logprob: -15.974081039428711
    8. '=None' → logprob: -16.22408103942871
    9. 'No' → logprob: -16.22408103942871
    10. ',None' → logprob: -16.34908103942871

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00047750159865245223
    2. ':
' → logprob: -8.87547779083252
    3. '<|end|>' → logprob: -8.87547779083252
    4. '):' → logprob: -9.25047779083252
    5. ' :' → logprob: -10.62547779083252
    6. ' and' → logprob: -10.62547779083252
    7. '<|end|>' → logprob: -11.12547779083252
    8. '.' → logprob: -11.25047779083252
    9. ')' → logprob: -11.87547779083252
    10. ':**' → logprob: -12.37547779083252

Token 82: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008277319371700287
    2. '       ' → logprob: -6.508277416229248
    3. '           ' → logprob: -6.633277416229248
    4. '                
' → logprob: -7.133277416229248
    5. ' 
' → logprob: -7.258277416229248
    6. '            ' → logprob: -7.383277416229248
    7. '<|end|>' → logprob: -7.758277416229248
    8. 'self' → logprob: -7.758277416229248
    9. '              ' → logprob: -8.00827693939209
    10. '   ' → logprob: -8.38327693939209

Token 83: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.173156276345253
    2. 'self' (adapté à ' self') → logprob: -2.173156261444092
    3. '               ' → logprob: -3.173156261444092
    4. '           ' → logprob: -5.798156261444092
    5. ' ' → logprob: -8.92315673828125
    6. '   ' → logprob: -9.67315673828125
    7. ' ' → logprob: -10.92315673828125
    8. '       ' → logprob: -11.17315673828125
    9. '	self' → logprob: -11.29815673828125
    10. '                
' → logprob: -12.42315673828125

Token 84: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00526447594165802
    2. '.' → logprob: -5.2552642822265625
    3. '.right' → logprob: -10.630264282226562
    4. '.in' → logprob: -12.130264282226562
    5. '.Left' → logprob: -14.880264282226562
    6. ' .' → logprob: -15.380264282226562
    7. 'left' → logprob: -15.630264282226562
    8. '.le' → logprob: -15.755264282226562
    9. '.parent' → logprob: -17.380264282226562
    10. '.space' → logprob: -17.755264282226562

Token 85: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -14.875036239624023
    4. 'in' → logprob: -15.500036239624023
    5. ').' → logprob: -16.375036239624023
    6. '   ' → logprob: -18.250036239624023
    7. '..' → logprob: -18.250036239624023
    8. '	in' → logprob: -18.500036239624023
    9. ' inorder' → logprob: -18.500036239624023
    10. '.
' → logprob: -18.625036239624023

Token 86: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0002614550176076591
    2. 'in' → logprob: -8.500261306762695
    3. 'o' → logprob: -10.125261306762695
    4. 'orde' → logprob: -12.375261306762695
    5. '```' → logprob: -12.500261306762695
    6. 'or' → logprob: -13.250261306762695
    7. ' inorder' → logprob: -13.500261306762695
    8. 'ord' → logprob: -13.750261306762695
    9. '   ' → logprob: -13.750261306762695
    10. 'oder' → logprob: -14.125261306762695

Token 87: '(List' (ID: 16200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12699046730995178
    2. '(List' → logprob: -2.126990556716919
    3. '()' → logprob: -10.00199031829834
    4. '(
' → logprob: -11.62699031829834
    5. '(

' → logprob: -12.87699031829834
    6. ' (' → logprob: -13.87699031829834
    7. '('' → logprob: -14.12699031829834
    8. ')' → logprob: -14.50199031829834
    9. '(Tree' → logprob: -14.62699031829834
    10. '((' → logprob: -14.75199031829834

Token 88: ')
' (ID: 446)
  Prédit: '(List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(List' → logprob: -0.05507749319076538
    2. '(' → logprob: -3.30507755279541
    3. ')' → logprob: -4.43007755279541
    4. '()' → logprob: -5.55507755279541
    5. '())' → logprob: -6.93007755279541
    6. '(
' → logprob: -10.55507755279541
    7. '(list' → logprob: -10.68007755279541
    8. ',List' → logprob: -10.68007755279541
    9. '(True' → logprob: -11.30507755279541
    10. '   ' → logprob: -11.68007755279541

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3206847310066223
    2. '       ' → logprob: -1.6956846714019775
    3. '            
' → logprob: -3.4456846714019775
    4. '        
' → logprob: -3.9456846714019775
    5. ' 
' → logprob: -4.445684909820557
    6. '
' → logprob: -4.945684909820557
    7. '<|end|>' → logprob: -5.195684909820557
    8. '    
' → logprob: -5.320684909820557
    9. '   
' → logprob: -6.070684909820557
    10. '  
' → logprob: -6.070684909820557

Token 90: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' (adapté à ' List') → logprob: -0.01015539187937975
    2. '       ' → logprob: -4.760155200958252
    3. ' List' → logprob: -6.885155200958252
    4. '           ' → logprob: -8.26015567779541
    5. '   ' → logprob: -8.38515567779541
    6. '	List' → logprob: -11.13515567779541
    7. ' ' → logprob: -12.63515567779541
    8. '_list' → logprob: -13.13515567779541
    9. '               ' → logprob: -13.26015567779541
    10. '    ' → logprob: -13.38515567779541

Token 91: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024827925954014063
    2. '.' → logprob: -6.002482891082764
    3. 'append' → logprob: -12.752482414245605
    4. '.app' → logprob: -12.877482414245605
    5. '.ap' → logprob: -13.877482414245605
    6. ' .' → logprob: -15.502482414245605
    7. '.extend' → logprob: -15.752482414245605
    8. '.add' → logprob: -15.877482414245605
    9. '.Append' → logprob: -16.127483367919922
    10. ').' → logprob: -16.377483367919922

Token 92: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014174322597682476
    2. '(' → logprob: -4.264174461364746
    3. '(
' → logprob: -11.514174461364746
    4. '(s' → logprob: -15.014174461364746
    5. '((' → logprob: -16.13917350769043
    6. '(sel' → logprob: -16.13917350769043
    7. '(this' → logprob: -16.26417350769043
    8. '(str' → logprob: -17.01417350769043
    9. '(

' → logprob: -17.01417350769043
    10. ' (' → logprob: -17.26417350769043

Token 93: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -3.1186566047836095e-05
    2. '.' → logprob: -10.500031471252441
    3. ').' → logprob: -12.750031471252441
    4. '.datas' → logprob: -15.125031471252441
    5. '.dat' → logprob: -16.000030517578125
    6. ' .' → logprob: -16.375030517578125
    7. ')' → logprob: -16.750030517578125
    8. '.Data' → logprob: -17.625030517578125
    9. 'data' → logprob: -17.750030517578125
    10. '.
' → logprob: -17.875030517578125

Token 94: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004927450208924711
    2. ')
' → logprob: -7.625492572784424
    3. ' )' → logprob: -13.125493049621582
    4. '   ' → logprob: -14.375493049621582
    5. ')

' → logprob: -15.000493049621582
    6. '),' → logprob: -15.125493049621582
    7. '           ' → logprob: -15.250493049621582
    8. '       ' → logprob: -15.250493049621582
    9. ')return' → logprob: -15.500493049621582
    10. ')
' → logprob: -15.750493049621582

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10039116442203522
    2. '       ' → logprob: -3.725391149520874
    3. ' ' → logprob: -4.225391387939453
    4. ' 
' → logprob: -4.225391387939453
    5. '            
' → logprob: -4.475391387939453
    6. '<|end|>' → logprob: -4.725391387939453
    7. '
' → logprob: -5.100391387939453
    8. '        
' → logprob: -5.725391387939453
    9. '    
' → logprob: -5.725391387939453
    10. '   ' → logprob: -6.100391387939453

Token 96: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.29507240653038025
    2. ' if' → logprob: -1.7950724363327026
    3. '           ' → logprob: -2.545072317123413
    4. '       ' → logprob: -4.545072555541992
    5. '   ' → logprob: -8.420072555541992
    6. '    ' → logprob: -10.170072555541992
    7. ' ' → logprob: -11.170072555541992
    8. '        ' → logprob: -11.545072555541992
    9. '```' → logprob: -11.920072555541992
    10. '	if' → logprob: -12.045072555541992

Token 97: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.026305407285690308
    2. 'self' → logprob: -3.6513054370880127
    3. '(self' → logprob: -13.151305198669434
    4. ' ' → logprob: -13.901305198669434
    5. '   ' → logprob: -14.401305198669434
    6. '	self' → logprob: -15.026305198669434
    7. '[self' → logprob: -15.151305198669434
    8. '           ' → logprob: -15.401305198669434
    9. '    ' → logprob: -15.401305198669434
    10. ' ' → logprob: -16.15130615234375

Token 98: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -4.8232690460281447e-05
    2. '.' → logprob: -10.500048637390137
    3. '.left' → logprob: -11.000048637390137
    4. 'right' → logprob: -13.125048637390137
    5. ' .' → logprob: -13.250048637390137
    6. '.r' → logprob: -17.12504768371582
    7. '[right' → logprob: -17.25004768371582
    8. '.
' → logprob: -17.50004768371582
    9. '	right' → logprob: -17.50004768371582
    10. '.Right' → logprob: -18.25004768371582

Token 99: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.10568034648895264
    2. '!=' → logprob: -2.355680465698242
    3. ' is' → logprob: -5.230680465698242
    4. '()!=' → logprob: -10.480680465698242
    5. ' ' → logprob: -10.605680465698242
    6. 'is' → logprob: -11.230680465698242
    7. ')!=' → logprob: -11.355680465698242
    8. ' not' → logprob: -11.730680465698242
    9. '<|end|>' → logprob: -11.855680465698242
    10. ' ' → logprob: -12.105680465698242

Token 100: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10021928697824478
    2. ' None' → logprob: -2.350219249725342
    3. ' ' → logprob: -12.3502197265625
    4. '(None' → logprob: -13.1002197265625
    5. '_None' → logprob: -13.3502197265625
    6. '  ' → logprob: -13.7252197265625
    7. '   ' → logprob: -13.8502197265625
    8. '=None' → logprob: -14.3502197265625
    9. 'Not' → logprob: -15.2252197265625
    10. ',None' → logprob: -15.3502197265625

Token 101: ':
' (ID: 734)
  Prédit: '.in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.20414209365844727
    2. '               ' → logprob: -1.8291420936584473
    3. '.' → logprob: -3.8291420936584473
    4. ':
' → logprob: -6.954142093658447
    5. ':' → logprob: -7.579142093658447
    6. '           ' → logprob: -8.454141616821289
    7. '<|end|>' → logprob: -8.829141616821289
    8. '.perform' → logprob: -9.579141616821289
    9. ')' → logprob: -9.954141616821289
    10. ' .' → logprob: -10.204141616821289

Token 102: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008947860915213823
    2. 'self' → logprob: -7.875895023345947
    3. ' self' → logprob: -8.000894546508789
    4. '           ' → logprob: -8.750894546508789
    5. '(self' → logprob: -12.500894546508789
    6. '	self' → logprob: -12.875894546508789
    7. '   ' → logprob: -13.000894546508789
    8. ',self' → logprob: -13.375894546508789
    9. '<|end|>' → logprob: -13.625894546508789
    10. ' ' → logprob: -13.750894546508789

Token 103: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005420277360826731
    2. ' self' → logprob: -5.255420207977295
    3. '               ' → logprob: -8.630420684814453
    4. '           ' → logprob: -12.630420684814453
    5. '	self' → logprob: -13.505420684814453
    6. '[self' → logprob: -13.755420684814453
    7. '(self' → logprob: -14.255420684814453
    8. '                   ' → logprob: -14.380420684814453
    9. '.self' → logprob: -15.630420684814453
    10. 'Self' → logprob: -16.505420684814453

Token 104: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -4.723352049040841e-06
    2. '.' → logprob: -12.625004768371582
    3. 'right' → logprob: -13.750004768371582
    4. '.left' → logprob: -16.250003814697266
    5. '.r' → logprob: -16.750003814697266
    6. ' .' → logprob: -18.125003814697266
    7. '	right' → logprob: -18.875003814697266
    8. '.Right' → logprob: -19.000003814697266
    9. '.
' → logprob: -19.500003814697266
    10. '[right' → logprob: -19.750003814697266

Token 105: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -9.13388703338569e-06
    2. '.' → logprob: -11.625009536743164
    3. ' .' → logprob: -16.625009536743164
    4. 'in' → logprob: -16.875009536743164
    5. '..' → logprob: -17.750009536743164
    6. 'In' → logprob: -19.000009536743164
    7. '`.' → logprob: -19.125009536743164
    8. ').' → logprob: -19.375009536743164
    9. '.for' → logprob: -19.375009536743164
    10. '.left' → logprob: -19.375009536743164

Token 106: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.1756367712223437e-05
    2. 'oder' → logprob: -12.375011444091797
    3. '   ' → logprob: -13.125011444091797
    4. 'or' → logprob: -13.750011444091797
    5. '
' → logprob: -14.125011444091797
    6. 'o' → logprob: -14.250011444091797
    7. '```' → logprob: -14.625011444091797
    8. '

' → logprob: -14.625011444091797
    9. ' ' → logprob: -15.250011444091797
    10. '       ' → logprob: -15.250011444091797

Token 107: '(List' (ID: 16200)
  Prédit: '(List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(List' → logprob: -1.4378848391061183e-05
    2. '(' → logprob: -11.250014305114746
    3. ' (' → logprob: -13.625014305114746
    4. ',List' → logprob: -16.000015258789062
    5. '(
' → logprob: -18.125015258789062
    6. '()' → logprob: -18.500015258789062
    7. ' List' → logprob: -18.625015258789062
    8. '(None' → logprob: -18.875015258789062
    9. '[List' → logprob: -18.875015258789062
    10. 'List' → logprob: -19.125015258789062

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019410114036872983
    2. '(List' → logprob: -6.376941204071045
    3. ',List' → logprob: -8.876940727233887
    4. 'List' → logprob: -9.501940727233887
    5. ' )' → logprob: -11.501940727233887
    6. ')
' → logprob: -12.001940727233887
    7. ')(' → logprob: -13.251940727233887
    8. '[List' → logprob: -13.376940727233887
    9. '   ' → logprob: -13.626940727233887
    10. '	List' → logprob: -13.876940727233887

Token 109: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.7292012572288513
    2. ' List' → logprob: -1.354201316833496
    3. '<|end|>' → logprob: -1.479201316833496
    4. ' None' → logprob: -3.729201316833496
    5. 'None' → logprob: -5.604201316833496
    6. '[List' → logprob: -6.729201316833496
    7. ' ' → logprob: -7.604201316833496
    8. '_list' → logprob: -7.729201316833496
    9. '<|end|>' → logprob: -7.729201316833496
    10. ' ' → logprob: -8.104201316833496

Token 112: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0593295097351074
    2. '    
' → logprob: -1.6843295097351074
    3. '<|end|>' → logprob: -2.0593295097351074
    4. 'def' → logprob: -2.1843295097351074
    5. ' 
' → logprob: -2.5593295097351074
    6. '
' → logprob: -2.5593295097351074
    7. 'n' → logprob: -3.3093295097351074
    8. '  
' → logprob: -5.059329509735107
    9. '#' → logprob: -5.434329509735107
    10. ')' → logprob: -5.559329509735107

Token 114: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.028003424406051636
    2. '   ' → logprob: -4.653003215789795
    3. 'root' → logprob: -5.028003215789795
    4. 'class' → logprob: -5.153003215789795
    5. 'n' → logprob: -5.403003215789795
    6. '    
' → logprob: -7.403003215789795
    7. ' def' → logprob: -8.903003692626953
    8. '#' → logprob: -9.028003692626953
    9. '        
' → logprob: -9.403003692626953
    10. 'tree' → logprob: -9.653003692626953

Token 115: ' preorder' (ID: 152292)
  Prédit: ' preorder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preorder' → logprob: -1.013737678527832
    2. 'post' → logprob: -1.513737678527832
    3. 'pre' → logprob: -1.638737678527832
    4. ' post' → logprob: -2.263737678527832
    5. ' insert' → logprob: -2.763737678527832
    6. 'insert' → logprob: -3.013737678527832
    7. ' pre' → logprob: -6.013737678527832
    8. 'search' → logprob: -7.263737678527832
    9. '_post' → logprob: -7.388737678527832
    10. ' search' → logprob: -7.513737678527832

Token 116: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011248346709180623
    2. '(' → logprob: -9.250112533569336
    3. '(s' → logprob: -11.250112533569336
    4. 'self' → logprob: -13.375112533569336
    5. ' (' → logprob: -14.000112533569336
    6. '(sel' → logprob: -15.250112533569336
    7. ' ' → logprob: -15.625112533569336
    8. '(se' → logprob: -16.250112533569336
    9. '(Self' → logprob: -16.250112533569336
    10. '(
' → logprob: -16.875112533569336

Token 117: ',List' (ID: 166273)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009538597078062594
    2. 'self' → logprob: -7.125953674316406
    3. '(' → logprob: -9.750953674316406
    4. ')' → logprob: -10.250953674316406
    5. '(List' → logprob: -10.875953674316406
    6. '(s' → logprob: -11.250953674316406
    7. 'List' → logprob: -11.375953674316406
    8. ')(' → logprob: -12.500953674316406
    9. ' (' → logprob: -13.250953674316406
    10. ' self' → logprob: -13.375953674316406

Token 118: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.29288914799690247
    2. '):' → logprob: -1.79288911819458
    3. '):
' → logprob: -2.54288911819458
    4. ',self' → logprob: -5.54288911819458
    5. 'self' → logprob: -6.41788911819458
    6. ')' → logprob: -7.16788911819458
    7. ',List' → logprob: -7.29288911819458
    8. ',' → logprob: -7.66788911819458
    9. '):

' → logprob: -8.167889595031738
    10. ')(' → logprob: -8.167889595031738

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.491498531133402e-06
    2. ' if' → logprob: -11.875009536743164
    3. 'if' → logprob: -13.750009536743164
    4. '   ' → logprob: -14.750009536743164
    5. '        
' → logprob: -15.000009536743164
    6. ' ' → logprob: -15.375009536743164
    7. '      ' → logprob: -15.625009536743164
    8. '	' → logprob: -15.750009536743164
    9. '     ' → logprob: -16.875009536743164
    10. '    ' → logprob: -17.000009536743164

Token 120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.30058133602142334
    2. 'if' (adapté à ' if') → logprob: -1.5505813360214233
    3. '       ' → logprob: -3.050581455230713
    4. 'List' → logprob: -9.425580978393555
    5. ' List' → logprob: -9.925580978393555
    6. '   ' → logprob: -11.175580978393555
    7. '
' → logprob: -12.300580978393555
    8. '        ' → logprob: -13.425580978393555
    9. '    ' → logprob: -13.425580978393555
    10. '        
' → logprob: -13.675580978393555

Token 121: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.014165272004902363
    2. 'self' → logprob: -4.26416540145874
    3. '(self' → logprob: -13.889164924621582
    4. ' ' → logprob: -15.139164924621582
    5. ' ' → logprob: -15.139164924621582
    6. '   ' → logprob: -15.764164924621582
    7. '	self' → logprob: -16.1391658782959
    8. '    ' → logprob: -17.6391658782959
    9. 'Self' → logprob: -18.1391658782959
    10. ' len' → logprob: -18.3891658782959

Token 122: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00019221604452468455
    2. 'data' → logprob: -9.000192642211914
    3. '.' → logprob: -9.625192642211914
    4. ' data' → logprob: -13.500192642211914
    5. ' .' → logprob: -14.125192642211914
    6. '<data' → logprob: -15.250192642211914
    7. '.dat' → logprob: -15.375192642211914
    8. '	data' → logprob: -16.250192642211914
    9. '_data' → logprob: -17.375192642211914
    10. '.Data' → logprob: -17.375192642211914

Token 123: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2050568014383316
    2. ' is' → logprob: -2.08005690574646
    3. '!=' → logprob: -2.83005690574646
    4. 'is' → logprob: -6.580056667327881
    5. ' ' → logprob: -9.705057144165039
    6. ' ' → logprob: -12.080057144165039
    7. ':' → logprob: -12.330057144165039
    8. '!=(' → logprob: -13.705057144165039
    9. ' not' → logprob: -13.955057144165039
    10. ' isn't' → logprob: -14.080057144165039

Token 124: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011057492345571518
    2. ' None' → logprob: -4.511057376861572
    3. 'not' → logprob: -12.51105785369873
    4. '(None' → logprob: -13.63605785369873
    5. 'Not' → logprob: -13.76105785369873
    6. ' ' → logprob: -13.88605785369873
    7. '   ' → logprob: -14.26105785369873
    8. ' not' → logprob: -14.63605785369873
    9. '_None' → logprob: -14.88605785369873
    10. '=None' → logprob: -15.38605785369873

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026610635221004486
    2. ':
' → logprob: -3.6516106128692627
    3. '           ' → logprob: -8.651610374450684
    4. '       ' → logprob: -9.151610374450684
    5. ' :' → logprob: -11.401610374450684
    6. '   ' → logprob: -12.526610374450684
    7. ',' → logprob: -13.151610374450684
    8. ' :
' → logprob: -13.151610374450684
    9. 'List' → logprob: -13.151610374450684
    10. ':
' → logprob: -13.526610374450684

Token 126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47932860255241394
    2. '       ' → logprob: -0.9793286323547363
    3. ' List' → logprob: -5.854328632354736
    4. '   ' → logprob: -6.729328632354736
    5. 'List' → logprob: -7.604328632354736
    6. '
' → logprob: -8.604328155517578
    7. '	       ' → logprob: -9.729328155517578
    8. '        
' → logprob: -9.854328155517578
    9. '        ' → logprob: -9.854328155517578
    10. '	   ' → logprob: -9.979328155517578

Token 127: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' (adapté à ' List') → logprob: -0.015004785731434822
    2. '       ' → logprob: -4.640004634857178
    3. '   ' → logprob: -5.515004634857178
    4. ' List' → logprob: -7.265004634857178
    5. 'if' → logprob: -7.765004634857178
    6. ' if' → logprob: -10.265005111694336
    7. '	List' → logprob: -10.890005111694336
    8. ' ' → logprob: -11.765005111694336
    9. '           ' → logprob: -11.765005111694336
    10. '    ' → logprob: -12.015005111694336

Token 128: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009151478880085051
    2. '.' → logprob: -7.000915050506592
    3. '.app' → logprob: -12.87591552734375
    4. 'append' → logprob: -15.00091552734375
    5. '.extend' → logprob: -15.25091552734375
    6. '.ap' → logprob: -15.25091552734375
    7. '.Append' → logprob: -16.00091552734375
    8. '.add' → logprob: -16.75091552734375
    9. ' .' → logprob: -17.25091552734375
    10. '.push' → logprob: -18.00091552734375

Token 129: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005235529970377684
    2. '(' → logprob: -5.25523567199707
    3. ' (' → logprob: -13.75523567199707
    4. '(
' → logprob: -14.75523567199707
    5. '('' → logprob: -16.00523567199707
    6. '(sel' → logprob: -16.50523567199707
    7. 'self' → logprob: -16.63023567199707
    8. '(s' → logprob: -16.88023567199707
    9. '(this' → logprob: -17.38023567199707
    10. '(

' → logprob: -18.50523567199707

Token 130: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00023250321100931615
    2. '.' → logprob: -8.375232696533203
    3. 'data' → logprob: -13.500232696533203
    4. ' .' → logprob: -15.875232696533203
    5. '.dat' → logprob: -15.875232696533203
    6. '.datas' → logprob: -16.375232696533203
    7. ').' → logprob: -16.750232696533203
    8. '(data' → logprob: -17.250232696533203
    9. ' data' → logprob: -17.375232696533203
    10. '.DATA' → logprob: -17.625232696533203

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.474141925573349
    2. ')
' → logprob: -0.9741419553756714
    3. '       ' → logprob: -9.849142074584961
    4. '           ' → logprob: -12.349142074584961
    5. ')
' → logprob: -12.599142074584961
    6. ')

' → logprob: -13.849142074584961
    7. ' )' → logprob: -14.099142074584961
    8. ' )
' → logprob: -14.224142074584961
    9. '   ' → logprob: -14.849142074584961
    10. ')#' → logprob: -15.474142074584961

Token 132: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39420515298843384
    2. '           ' → logprob: -1.144205093383789
    3. ' if' → logprob: -5.519205093383789
    4. '   ' → logprob: -6.269205093383789
    5. 'if' → logprob: -6.894205093383789
    6. '
' → logprob: -8.769205093383789
    7. '    ' → logprob: -10.019205093383789
    8. '     ' → logprob: -10.144205093383789
    9. '      ' → logprob: -10.394205093383789
    10. '        ' → logprob: -10.519205093383789

Token 133: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006719640456140041
    2. ' if' → logprob: -5.006719589233398
    3. '       ' → logprob: -12.506719589233398
    4. '           ' → logprob: -15.006719589233398
    5. '   ' → logprob: -15.506719589233398
    6. '
' → logprob: -17.7567195892334
    7. '	if' → logprob: -19.1317195892334
    8. ' ' → logprob: -19.5067195892334
    9. '    ' → logprob: -19.7567195892334
    10. '        ' → logprob: -20.3817195892334

Token 134: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519320547580719
    2. 'self' → logprob: -1.5019320249557495
    3. '(self' → logprob: -13.001932144165039
    4. ' ' → logprob: -15.376932144165039
    5. '   ' → logprob: -15.626932144165039
    6. '	self' → logprob: -15.876932144165039
    7. '       ' → logprob: -17.25193214416504
    8. '
' → logprob: -17.25193214416504
    9. '[self' → logprob: -17.25193214416504
    10. '    ' → logprob: -18.00193214416504

Token 135: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0024826733861118555
    2. 'left' → logprob: -6.002482891082764
    3. '.' → logprob: -12.252482414245605
    4. '.right' → logprob: -13.752482414245605
    5. ' .' → logprob: -14.627482414245605
    6. 'self' → logprob: -15.252482414245605
    7. ' left' → logprob: -15.502482414245605
    8. '	left' → logprob: -16.752483367919922
    9. '   ' → logprob: -17.252483367919922
    10. '
' → logprob: -17.377483367919922

Token 136: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11461316049098969
    2. '!=' → logprob: -2.2396130561828613
    3. ' is' → logprob: -6.364613056182861
    4. '()!=' → logprob: -10.61461353302002
    5. 'is' → logprob: -11.61461353302002
    6. ' ' → logprob: -11.86461353302002
    7. ' ' → logprob: -11.86461353302002
    8. '<|end|>' → logprob: -12.11461353302002
    9. ')!=' → logprob: -12.48961353302002
    10. ' not' → logprob: -13.11461353302002

Token 137: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.31326285004615784
    2. ' None' → logprob: -1.3132628202438354
    3. '(None' → logprob: -14.313262939453125
    4. '_None' → logprob: -15.563262939453125
    5. '=None' → logprob: -15.688262939453125
    6. 'none' → logprob: -16.938262939453125
    7. ' ' → logprob: -17.063262939453125
    8. '.None' → logprob: -17.438262939453125
    9. ',None' → logprob: -17.688262939453125
    10. ' none' → logprob: -17.813262939453125

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004243534989655018
    2. ':
' → logprob: -6.00424337387085
    3. '               ' → logprob: -6.37924337387085
    4. '):' → logprob: -10.129243850708008
    5. '.' → logprob: -11.879243850708008
    6. '           ' → logprob: -12.004243850708008
    7. ')' → logprob: -12.379243850708008
    8. ' :' → logprob: -12.754243850708008
    9. '):
' → logprob: -13.129243850708008
    10. ',' → logprob: -13.629243850708008

Token 139: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005541055579669774
    2. ' self' → logprob: -8.250554084777832
    3. 'self' → logprob: -8.375554084777832
    4. '           ' → logprob: -11.375554084777832
    5. '              ' → logprob: -11.625554084777832
    6. '			' → logprob: -11.750554084777832
    7. ' ' → logprob: -12.250554084777832
    8. '<|end|>' → logprob: -12.250554084777832
    9. '
' → logprob: -12.750554084777832
    10. '                
' → logprob: -12.875554084777832

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.102680633077398e-05
    2. '               ' → logprob: -10.000090599060059
    3. ' self' → logprob: -10.000090599060059
    4. '           ' → logprob: -16.750091552734375
    5. '(self' → logprob: -17.125091552734375
    6. '	self' → logprob: -17.750091552734375
    7. '[self' → logprob: -17.875091552734375
    8. '                   ' → logprob: -18.000091552734375
    9. '              ' → logprob: -19.625091552734375
    10. '
' → logprob: -19.625091552734375

Token 141: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.5597102396423e-05
    2. 'left' → logprob: -10.250035285949707
    3. '.' → logprob: -16.375036239624023
    4. '.right' → logprob: -17.000036239624023
    5. '	left' → logprob: -18.125036239624023
    6. ' .' → logprob: -18.250036239624023
    7. '[left' → logprob: -18.875036239624023
    8. ' left' → logprob: -19.250036239624023
    9. '.le' → logprob: -19.500036239624023
    10. '.Left' → logprob: -19.625036239624023

Token 142: '.pre' (ID: 10008)
  Prédit: '.pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pre' → logprob: -6.034592388459714e-06
    2. '.p' → logprob: -12.375005722045898
    3. 'pre' → logprob: -13.750005722045898
    4. ' .' → logprob: -15.125005722045898
    5. '.' → logprob: -16.0000057220459
    6. ').' → logprob: -17.0000057220459
    7. '.pr' → logprob: -17.2500057220459
    8. '	pre' → logprob: -17.2500057220459
    9. ' preorder' → logprob: -17.3750057220459
    10. '.preprocessing' → logprob: -18.3750057220459

Token 143: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -3.128163257315464e-07
    2. 'or' → logprob: -16.125
    3. 'ord' → logprob: -16.375
    4. 'oder' → logprob: -17.25
    5. '
' → logprob: -17.5
    6. 'orde' → logprob: -18.375
    7. 'Order' → logprob: -18.5
    8. 'o' → logprob: -18.625
    9. 'ore' → logprob: -18.875
    10. 'ordered' → logprob: -19.25

Token 144: '(List' (ID: 16200)
  Prédit: '(List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(List' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. ' (' → logprob: -15.125036239624023
    4. ',List' → logprob: -15.875036239624023
    5. '(
' → logprob: -18.625036239624023
    6. '(

' → logprob: -18.875036239624023
    7. ')' → logprob: -18.875036239624023
    8. '(Line' → logprob: -19.375036239624023
    9. '[List' → logprob: -19.500036239624023
    10. '(list' → logprob: -19.625036239624023

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8590300139039755e-05
    2. ')
' → logprob: -10.500048637390137
    3. '(List' → logprob: -10.875048637390137
    4. ',List' → logprob: -14.000048637390137
    5. 'List' → logprob: -14.500048637390137
    6. '       ' → logprob: -15.375048637390137
    7. ' )' → logprob: -15.375048637390137
    8. '           ' → logprob: -16.25004768371582
    9. '   ' → logprob: -16.75004768371582
    10. ')
' → logprob: -16.75004768371582

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0062814136035740376
    2. '()' → logprob: -5.38128137588501
    3. '(' → logprob: -7.13128137588501
    4. '       ' → logprob: -8.131281852722168
    5. '(List' → logprob: -8.381281852722168
    6. '()
' → logprob: -8.881281852722168
    7. '          ' → logprob: -9.506281852722168
    8. '   ' → logprob: -10.506281852722168
    9. ')' → logprob: -10.756281852722168
    10. '            
' → logprob: -11.131281852722168

Token 147: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.594203770160675
    2. 'if' (adapté à ' if') → logprob: -0.844203770160675
    3. '           ' → logprob: -4.094203948974609
    4. '       ' → logprob: -6.594203948974609
    5. '   ' → logprob: -9.84420394897461
    6. ' ' → logprob: -13.21920394897461
    7. '	if' → logprob: -13.46920394897461
    8. '    ' → logprob: -13.59420394897461
    9. ' ' → logprob: -13.96920394897461
    10. '        ' → logprob: -14.21920394897461

Token 148: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07890840619802475
    2. 'self' → logprob: -2.5789084434509277
    3. '(self' → logprob: -11.07890796661377
    4. ' ' → logprob: -12.95390796661377
    5. '[self' → logprob: -15.32890796661377
    6. '	self' → logprob: -15.57890796661377
    7. ' (' → logprob: -16.453908920288086
    8. ' ' → logprob: -16.828908920288086
    9. '   ' → logprob: -17.078908920288086
    10. '  ' → logprob: -17.453908920288086

Token 149: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -7.24310302757658e-05
    2. '.' → logprob: -9.875072479248047
    3. ' .' → logprob: -11.250072479248047
    4. 'right' → logprob: -12.250072479248047
    5. '.left' → logprob: -13.000072479248047
    6. '.
' → logprob: -15.500072479248047
    7. '   ' → logprob: -16.000072479248047
    8. '
' → logprob: -16.000072479248047
    9. '	right' → logprob: -16.000072479248047
    10. ' ' → logprob: -16.375072479248047

Token 150: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.062422145158052444
    2. '!=' → logprob: -2.812422037124634
    3. ' is' → logprob: -7.812422275543213
    4. '()!=' → logprob: -10.937421798706055
    5. ' ' → logprob: -11.812421798706055
    6. ')!=' → logprob: -12.312421798706055
    7. 'is' → logprob: -12.437421798706055
    8. ' ' → logprob: -12.437421798706055
    9. '<|end|>' → logprob: -12.437421798706055
    10. '!=(' → logprob: -13.437421798706055

Token 151: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.38689324259757996
    2. ' None' → logprob: -1.1368932723999023
    3. '(None' → logprob: -11.011893272399902
    4. '_None' → logprob: -13.261893272399902
    5. '=None' → logprob: -13.761893272399902
    6. ' ' → logprob: -14.261893272399902
    7. ',None' → logprob: -14.261893272399902
    8. '.None' → logprob: -14.886893272399902
    9. 'self' → logprob: -15.136893272399902
    10. 'Not' → logprob: -15.261893272399902

Token 152: ':
' (ID: 734)
  Prédit: '(List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(List' → logprob: -0.0002205828350270167
    2. ':' → logprob: -9.12522029876709
    3. ')' → logprob: -10.25022029876709
    4. '[List' → logprob: -10.25022029876709
    5. ',List' → logprob: -11.00022029876709
    6. '(self' → logprob: -11.75022029876709
    7. '(None' → logprob: -11.87522029876709
    8. 'List' → logprob: -12.75022029876709
    9. '(' → logprob: -13.75022029876709
    10. ' (' → logprob: -14.00022029876709

Token 153: '               ' (ID: 506)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10721289366483688
    2. 'List' → logprob: -2.357212781906128
    3. ' None' → logprob: -5.232213020324707
    4. '(List' → logprob: -7.482213020324707
    5. 'self' → logprob: -8.232213020324707
    6. '(None' → logprob: -8.232213020324707
    7. ' List' → logprob: -8.607213020324707
    8. '[List' → logprob: -9.232213020324707
    9. '               ' → logprob: -9.482213020324707
    10. '       ' → logprob: -9.607213020324707

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0067182136699557304
    2. ' self' → logprob: -5.006718158721924
    3. '               ' → logprob: -13.006718635559082
    4. '           ' → logprob: -15.756718635559082
    5. '	self' → logprob: -16.131717681884766
    6. '(self' → logprob: -16.256717681884766
    7. '                   ' → logprob: -16.506717681884766
    8. ' ' → logprob: -17.256717681884766
    9. '[self' → logprob: -17.256717681884766
    10. 's' → logprob: -17.506717681884766

Token 155: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -8.180258191714529e-06
    2. 'right' → logprob: -11.875008583068848
    3. '.left' → logprob: -14.625008583068848
    4. '.' → logprob: -14.750008583068848
    5. ' .' → logprob: -15.625008583068848
    6. '.r' → logprob: -15.750008583068848
    7. '	right' → logprob: -18.00000762939453
    8. '
' → logprob: -20.00000762939453
    9. 'r' → logprob: -20.00000762939453
    10. '[right' → logprob: -20.37500762939453

Token 156: '.pre' (ID: 10008)
  Prédit: '.pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pre' → logprob: -3.7697225252486533e-06
    2. 'pre' → logprob: -12.625003814697266
    3. '.' → logprob: -14.875003814697266
    4. ' preorder' → logprob: -16.750003814697266
    5. ' .' → logprob: -17.250003814697266
    6. '	pre' → logprob: -18.250003814697266
    7. '(pre' → logprob: -18.625003814697266
    8. '.p' → logprob: -18.750003814697266
    9. '.pr' → logprob: -19.000003814697266
    10. '```' → logprob: -21.000003814697266

Token 157: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.981667537620524e-06
    2. 'o' → logprob: -14.375001907348633
    3. 'oder' → logprob: -14.500001907348633
    4. 'or' → logprob: -15.000001907348633
    5. 'ord' → logprob: -15.250001907348633
    6. 'user' → logprob: -16.375001907348633
    7. 'orde' → logprob: -16.625001907348633
    8. 'pre' → logprob: -17.125001907348633
    9. '```' → logprob: -17.750001907348633
    10. '(order' → logprob: -17.750001907348633

Token 158: '(List' (ID: 16200)
  Prédit: '(List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(List' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.375001907348633
    3. ',List' → logprob: -15.500001907348633
    4. ' (' → logprob: -16.500001907348633
    5. '[List' → logprob: -18.000001907348633
    6. '<List' → logprob: -18.500001907348633
    7. 'List' → logprob: -19.000001907348633
    8. '(
' → logprob: -19.500001907348633
    9. '(View' → logprob: -19.625001907348633
    10. ')' → logprob: -20.000001907348633

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12882834672927856
    2. '(List' → logprob: -2.128828287124634
    3. ',List' → logprob: -6.378828525543213
    4. 'List' → logprob: -9.003828048706055
    5. ')(' → logprob: -9.628828048706055
    6. '[List' → logprob: -11.628828048706055
    7. ',' → logprob: -14.128828048706055
    8. ' List' → logprob: -14.253828048706055
    9. '	List' → logprob: -14.503828048706055
    10. ')
' → logprob: -14.628828048706055

Token 160: '       ' (ID: 309)
  Prédit: '(List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(List' → logprob: -0.00158056674990803
    2. '       ' → logprob: -6.876580715179443
    3. 'return' → logprob: -7.626580715179443
    4. 'List' → logprob: -10.626580238342285
    5. ',List' → logprob: -11.126580238342285
    6. ' return' → logprob: -11.626580238342285
    7. '(return' → logprob: -12.376580238342285
    8. '(' → logprob: -13.251580238342285
    9. '[List' → logprob: -13.501580238342285
    10. ')' → logprob: -14.001580238342285

Token 161: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.015704795718193054
    2. ' return' → logprob: -4.89070463180542
    3. '(List' → logprob: -5.26570463180542
    4. ')' → logprob: -6.76570463180542
    5. '       ' → logprob: -7.14070463180542
    6. 'List' → logprob: -7.76570463180542
    7. '(return' → logprob: -8.015705108642578
    8. ')return' → logprob: -10.265705108642578
    9. '
' → logprob: -10.390705108642578
    10. ':return' → logprob: -10.890705108642578

Token 162: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.02324768900871277
    2. ' List' → logprob: -3.773247718811035
    3. '(List' → logprob: -13.398247718811035
    4. '[List' → logprob: -14.773247718811035
    5. 'Lis' → logprob: -17.02324676513672
    6. '_List' → logprob: -17.02324676513672
    7. ',List' → logprob: -17.27324676513672
    8. '	List' → logprob: -17.52324676513672
    9. ' ' → logprob: -18.27324676513672
    10. 'self' → logprob: -18.39824676513672

Token 163: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04808623343706131
    2. '<|end|>' → logprob: -3.298086166381836
    3. 'def' → logprob: -5.798086166381836
    4. '    
' → logprob: -5.798086166381836
    5. '
' → logprob: -5.923086166381836
    6. ' 
' → logprob: -7.673086166381836
    7. '   
' → logprob: -8.798086166381836
    8. ' def' → logprob: -9.048086166381836
    9. '  
' → logprob: -9.298086166381836
    10. '<|end|>' → logprob: -9.423086166381836

Token 164: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050669971853494644
    2. 'def' → logprob: -3.0506699085235596
    3. ' def' → logprob: -6.925670146942139
    4. '<|end|>' → logprob: -7.175670146942139
    5. '    
' → logprob: -8.92566967010498
    6. ')' → logprob: -9.80066967010498
    7. '	def' → logprob: -10.17566967010498
    8. '<|end|>' → logprob: -10.80066967010498
    9. '  ' → logprob: -10.92566967010498
    10. '```' → logprob: -11.42566967010498

Token 165: ' B' (ID: 418)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.5215073823928833
    2. 'Binary' → logprob: -1.5215073823928833
    3. ' Tree' → logprob: -2.0215072631835938
    4. ' Binary' → logprob: -3.2715072631835938
    5. 'BST' → logprob: -5.146507263183594
    6. 'Node' → logprob: -5.396507263183594
    7. 'Solution' → logprob: -5.396507263183594
    8. ' BST' → logprob: -7.146507263183594
    9. ' Solution' → logprob: -7.271507263183594
    10. 'BT' → logprob: -8.146507263183594

Token 166: 'Tree' (ID: 8062)
  Prédit: 'inary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inary' → logprob: -0.010188077576458454
    2. 'ST' → logprob: -5.135188102722168
    3. 'in' → logprob: -6.010188102722168
    4. 'Tree' → logprob: -6.510188102722168
    5. 'tree' → logprob: -9.010188102722168
    6. 'T' → logprob: -9.260188102722168
    7. 'inar' → logprob: -10.260188102722168
    8. 'inery' → logprob: -12.010188102722168
    9. 'Binary' → logprob: -12.135188102722168
    10. 'i' → logprob: -12.135188102722168

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4021237802808173e-05
    2. '():' → logprob: -11.500014305114746
    3. ':
' → logprob: -13.375014305114746
    4. ':def' → logprob: -14.250014305114746
    5. ' :' → logprob: -14.375014305114746
    6. ':**' → logprob: -14.625014305114746
    7. '(object' → logprob: -15.250014305114746
    8. '):' → logprob: -16.25001335144043
    9. '：' → logprob: -16.50001335144043
    10. '>:' → logprob: -16.75001335144043

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3031389117240906
    2. ':' → logprob: -1.8031389713287354
    3. ' def' → logprob: -2.8031389713287354
    4. 'def' → logprob: -4.053138732910156
    5. '	def' → logprob: -4.928138732910156
    6. ':def' → logprob: -5.178138732910156
    7. ':
' → logprob: -6.178138732910156
    8. '<|end|>' → logprob: -6.428138732910156
    9. '    
' → logprob: -7.428138732910156
    10. '<|end|>' → logprob: -8.178138732910156

Token 169: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20142436027526855
    2. ' def' → logprob: -1.7014243602752686
    3. '   ' → logprob: -11.451424598693848
    4. 'class' → logprob: -15.326424598693848
    5. '	def' → logprob: -16.20142364501953
    6. '__' → logprob: -16.32642364501953
    7. ' ' → logprob: -16.95142364501953
    8. ':def' → logprob: -18.20142364501953
    9. ' __' → logprob: -18.95142364501953
    10. '_def' → logprob: -19.57642364501953

Token 170: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.28561046719551086
    2. '__' → logprob: -1.7856104373931885
    3. ' __' → logprob: -2.5356104373931885
    4. ' init' → logprob: -6.660610675811768
    5. '_init' → logprob: -8.41061019897461
    6. 'def' → logprob: -11.28561019897461
    7. '_' → logprob: -11.53561019897461
    8. ' _' → logprob: -12.53561019897461
    9. 'class' → logprob: -13.03561019897461
    10. '___' → logprob: -13.41061019897461

Token 171: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.60414821645827e-06
    2. 'class' → logprob: -12.625004768371582
    3. 'def' → logprob: -14.250004768371582
    4. 'ini' → logprob: -15.750004768371582
    5. 'int' → logprob: -16.250003814697266
    6. '__' → logprob: -16.375003814697266
    7. '_init' → logprob: -16.875003814697266
    8. '(init' → logprob: -16.875003814697266
    9. 'in' → logprob: -17.250003814697266
    10. ' init' → logprob: -17.625003814697266

Token 172: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00019495772721711546
    2. '__' → logprob: -8.625194549560547
    3. '(self' → logprob: -11.500194549560547
    4. '_(' → logprob: -12.625194549560547
    5. '__(
' → logprob: -13.625194549560547
    6. '___' → logprob: -15.375194549560547
    7. '(' → logprob: -15.750194549560547
    8. '__((' → logprob: -16.125194549560547
    9. '__('' → logprob: -16.625194549560547
    10. ')(' → logprob: -17.000194549560547

Token 173: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.080963092041202e-06
    2. ' self' → logprob: -12.500004768371582
    3. '
' → logprob: -13.875004768371582
    4. ')' → logprob: -15.500004768371582
    5. '):
' → logprob: -16.6250057220459
    6. '   ' → logprob: -18.2500057220459
    7. '  ' → logprob: -19.7500057220459
    8. '(self' → logprob: -19.7500057220459
    9. '```' → logprob: -20.0000057220459
    10. ' ' → logprob: -20.0000057220459

Token 174: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3585188090801239
    2. '):' → logprob: -1.8585188388824463
    3. ',' → logprob: -2.3585188388824463
    4. ',self' → logprob: -3.3585188388824463
    5. ')' → logprob: -4.983518600463867
    6. '):
' → logprob: -5.733518600463867
    7. ' ,' → logprob: -5.983518600463867
    8. '(self' → logprob: -7.108518600463867
    9. ' self' → logprob: -7.358518600463867
    10. ',n' → logprob: -7.483518600463867

Token 175: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00048417699872516096
    2. '       ' → logprob: -7.875483989715576
    3. ' self' → logprob: -9.875484466552734
    4. '   ' → logprob: -10.250484466552734
    5. 'None' → logprob: -12.000484466552734
    6. 'root' → logprob: -12.500484466552734
    7. '
' → logprob: -12.625484466552734
    8. ')' → logprob: -14.000484466552734
    9. '):
' → logprob: -14.250484466552734
    10. '0' → logprob: -14.250484466552734

Token 176: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001044243574142456
    2. ' self' → logprob: -6.876044273376465
    3. '       ' → logprob: -11.751044273376465
    4. '   ' → logprob: -12.626044273376465
    5. 's' → logprob: -16.37604331970215
    6. 'root' → logprob: -16.75104331970215
    7. ' ' → logprob: -17.00104331970215
    8. '  ' → logprob: -17.37604331970215
    9. 'None' → logprob: -17.37604331970215
    10. '	self' → logprob: -17.50104331970215

Token 177: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0004493805463425815
    2. '.head' → logprob: -8.125449180603027
    3. 'root' → logprob: -9.125449180603027
    4. '.data' → logprob: -11.125449180603027
    5. '.ro' → logprob: -12.500449180603027
    6. '=root' → logprob: -12.750449180603027
    7. '.nodes' → logprob: -13.000449180603027
    8. '   ' → logprob: -13.125449180603027
    9. '.tree' → logprob: -13.125449180603027
    10. '_root' → logprob: -13.125449180603027

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16030699014663696
    2. ' =' → logprob: -1.9103069305419922
    3. '=None' → logprob: -9.410306930541992
    4. ' None' → logprob: -14.785306930541992
    5. ' ' → logprob: -15.410306930541992
    6. 'None' → logprob: -15.410306930541992
    7. '<|end|>' → logprob: -15.910306930541992
    8. ' is' → logprob: -17.660306930541992
    9. '(None' → logprob: -17.910306930541992
    10. '=null' → logprob: -18.035306930541992

Token 179: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0024758970830589533
    2. ' None' → logprob: -6.002475738525391
    3. '0' → logprob: -15.75247573852539
    4. 'Node' → logprob: -17.00247573852539
    5. '  ' → logprob: -17.37747573852539
    6. ' ' → logprob: -17.50247573852539
    7. '(None' → logprob: -17.75247573852539
    8. '   ' → logprob: -18.00247573852539
    9. '_None' → logprob: -18.00247573852539
    10. '=None' → logprob: -18.62747573852539

Token 180: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06545697897672653
    2. 'def' → logprob: -2.9404568672180176
    3. '    
' → logprob: -5.440456867218018
    4. ' def' → logprob: -5.815456867218018
    5. '<|end|>' → logprob: -5.940456867218018
    6. '	def' → logprob: -8.690457344055176
    7. '
' → logprob: -8.940457344055176
    8. '<|end|>' → logprob: -8.940457344055176
    9. '  
' → logprob: -10.440457344055176
    10. ' 
' → logprob: -10.565457344055176

Token 182: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001171652227640152
    2. ' def' → logprob: -6.751171588897705
    3. 'd' → logprob: -14.001172065734863
    4. '   ' → logprob: -14.501172065734863
    5. 'de' → logprob: -16.126171112060547
    6. ' ' → logprob: -17.376171112060547
    7. ')' → logprob: -18.251171112060547
    8. '	def' → logprob: -18.626171112060547
    9. '
' → logprob: -18.751171112060547
    10. 'data' → logprob: -19.001171112060547

Token 183: ' insert' (ID: 10898)
  Prédit: ' insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.1547505259513855
    2. 'insert' → logprob: -2.2797505855560303
    3. ' build' → logprob: -3.6547505855560303
    4. ' add' → logprob: -4.779750347137451
    5. 'build' → logprob: -6.404750347137451
    6. ' create' → logprob: -6.904750347137451
    7. 'add' → logprob: -7.029750347137451
    8. ' make' → logprob: -7.029750347137451
    9. ' find' → logprob: -7.904750347137451
    10. ' set' → logprob: -8.02975082397461

Token 184: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0018047726480290294
    2. ' (' → logprob: -6.376804828643799
    3. '(' → logprob: -9.25180435180664
    4. '(root' → logprob: -13.25180435180664
    5. '(data' → logprob: -13.25180435180664
    6. '(node' → logprob: -14.37680435180664
    7. 'root' → logprob: -14.62680435180664
    8. 'self' → logprob: -14.75180435180664
    9. '_root' → logprob: -15.00180435180664
    10. '_node' → logprob: -15.37680435180664

Token 185: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02039998583495617
    2. ',data' → logprob: -4.145400047302246
    3. ' ,' → logprob: -5.895400047302246
    4. ',node' → logprob: -6.520400047302246
    5. ',self' → logprob: -9.395400047302246
    6. ',value' → logprob: -11.270400047302246
    7. ',parent' → logprob: -11.645400047302246
    8. ',new' → logprob: -12.145400047302246
    9. ',n' → logprob: -12.145400047302246
    10. ',val' → logprob: -12.270400047302246

Token 186: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07229571789503098
    2. ',' → logprob: -3.072295665740967
    3. ',data' → logprob: -4.322295665740967
    4. ',node' → logprob: -5.072295665740967
    5. ' ):' → logprob: -5.947295665740967
    6. ',value' → logprob: -7.947295665740967
    7. ' ,' → logprob: -8.197296142578125
    8. '):
' → logprob: -8.322296142578125
    9. ')' → logprob: -8.947296142578125
    10. ',new' → logprob: -10.072296142578125

Token 187: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6716299057006836
    2. ' 
' → logprob: -1.9216299057006836
    3. '       ' → logprob: -2.4216299057006836
    4. '
' → logprob: -3.2966299057006836
    5. '        ' → logprob: -3.4216299057006836
    6. ' if' → logprob: -3.5466299057006836
    7. '        
' → logprob: -3.6716299057006836
    8. '<|end|>' → logprob: -3.9216299057006836
    9. ' node' → logprob: -4.296629905700684
    10. '    ' → logprob: -4.421629905700684

Token 188: ' y' (ID: 342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4580662250518799
    2. 'node' → logprob: -1.8330662250518799
    3. 'z' → logprob: -2.58306622505188
    4. 'y' (adapté à ' y') → logprob: -3.08306622505188
    5. 'parent' → logprob: -3.08306622505188
    6. 'current' → logprob: -3.83306622505188
    7. 'new' → logprob: -4.958065986633301
    8. ' if' → logprob: -5.458065986633301
    9. 'p' → logprob: -5.958065986633301
    10. 'x' → logprob: -5.958065986633301

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519548535346985
    2. '=' → logprob: -1.5019547939300537
    3. '=None' → logprob: -10.626955032348633
    4. ' ' → logprob: -14.001955032348633
    5. ',' → logprob: -14.626955032348633
    6. ' =
' → logprob: -16.751955032348633
    7. '=
' → logprob: -17.126955032348633
    8. ' None' → logprob: -17.126955032348633
    9. 'None' → logprob: -17.501955032348633
    10. '   ' → logprob: -17.626955032348633

Token 190: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -6.511406809295295e-06
    2. ' None' → logprob: -12.000006675720215
    3. 'self' → logprob: -15.000006675720215
    4. '   ' → logprob: -19.3750057220459
    5. 'N' → logprob: -19.5000057220459
    6. 'none' → logprob: -19.6250057220459
    7. 'Node' → logprob: -19.8750057220459
    8. 'null' → logprob: -20.0000057220459
    9. '_None' → logprob: -20.7500057220459
    10. 'NULL' → logprob: -21.5000057220459

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48714616894721985
    2. ' 
' → logprob: -1.2371461391448975
    3. '<|end|>' → logprob: -3.2371461391448975
    4. '  
' → logprob: -3.8621461391448975
    5. ' x' → logprob: -4.487146377563477
    6. 'x' → logprob: -4.737146377563477
    7. ' ' → logprob: -4.987146377563477
    8. '    
' → logprob: -6.362146377563477
    9. '<|end|>' → logprob: -7.237146377563477
    10. '       ' → logprob: -7.237146377563477

Token 192: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.29925069212913513
    2. '
' → logprob: -2.174250602722168
    3. 'x' → logprob: -2.299250602722168
    4. ' 
' → logprob: -3.799250602722168
    5. ',x' → logprob: -5.174250602722168
    6. '    ' → logprob: -5.799250602722168
    7. '	x' → logprob: -5.924250602722168
    8. '  
' → logprob: -6.424250602722168
    9. '   ' → logprob: -6.424250602722168
    10. '       ' → logprob: -6.424250602722168

Token 193: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.009781945496797562
    2. ' x' → logprob: -4.634781837463379
    3. 'temp' → logprob: -11.509781837463379
    4. 'current' → logprob: -11.884781837463379
    5. 'node' → logprob: -12.634781837463379
    6. '   ' → logprob: -13.134781837463379
    7. 'r' → logprob: -13.759781837463379
    8. '	x' → logprob: -13.884781837463379
    9. 'tmp' → logprob: -14.884781837463379
    10. ' current' → logprob: -14.884781837463379

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. '=self' → logprob: -13.951415061950684
    4. ' ' → logprob: -14.826415061950684
    5. 's' → logprob: -16.451414108276367
    6. ',' → logprob: -17.326414108276367
    7. ' =
' → logprob: -17.951414108276367
    8. ')' → logprob: -18.576414108276367
    9. '<|end|>' → logprob: -18.951414108276367
    10. '=None' → logprob: -19.326414108276367

Token 195: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009114635176956654
    2. ' self' → logprob: -7.000911235809326
    3. '
' → logprob: -17.750911712646484
    4. '	self' → logprob: -18.875911712646484
    5. ' ' → logprob: -19.000911712646484
    6. '(self' → logprob: -19.375911712646484
    7. '=self' → logprob: -19.500911712646484
    8. 'this' → logprob: -19.625911712646484
    9. '[self' → logprob: -19.625911712646484
    10. 's' → logprob: -20.250911712646484

Token 196: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.008625566959381104
    2. 'root' → logprob: -4.758625507354736
    3. '.' → logprob: -11.883625984191895
    4. ' root' → logprob: -12.633625984191895
    5. '[root' → logprob: -15.008625984191895
    6. '_root' → logprob: -16.133625030517578
    7. '.ro' → logprob: -16.133625030517578
    8. '=root' → logprob: -16.258625030517578
    9. '	root' → logprob: -16.508625030517578
    10. ' .' → logprob: -17.008625030517578

Token 197: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.517006516456604
    2. ' 
' → logprob: -1.017006516456604
    3. ' while' → logprob: -4.1420063972473145
    4. '  
' → logprob: -4.7670063972473145
    5. 'while' → logprob: -5.0170063972473145
    6. '<|end|>' → logprob: -5.0170063972473145
    7. '        
' → logprob: -5.8920063972473145
    8. '    
' → logprob: -7.2670063972473145
    9. '       ' → logprob: -8.017006874084473
    10. '   
' → logprob: -8.642006874084473

Token 198: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7022393941879272
    2. ' while' → logprob: -1.3272393941879272
    3. ' 
' → logprob: -1.9522393941879272
    4. '<|end|>' → logprob: -2.702239513397217
    5. 'while' → logprob: -4.077239513397217
    6. '       ' → logprob: -5.452239513397217
    7. '  
' → logprob: -5.452239513397217
    8. '        
' → logprob: -6.077239513397217
    9. '	while' → logprob: -7.327239513397217
    10. ' ' → logprob: -7.327239513397217

Token 199: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.07890091091394424
    2. ' while' → logprob: -2.5789008140563965
    3. '       ' → logprob: -11.703901290893555
    4. '	while' → logprob: -13.828901290893555
    5. '
' → logprob: -13.953901290893555
    6. 'z' → logprob: -15.203901290893555
    7. 'While' → logprob: -15.453901290893555
    8. 'w' → logprob: -15.703901290893555
    9. '   ' → logprob: -15.828901290893555
    10. ' 
' → logprob: -17.453901290893555

Token 200: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1002068892121315
    2. ' x' → logprob: -2.3502068519592285
    3. '(x' → logprob: -15.350207328796387
    4. '	x' → logprob: -17.35020637512207
    5. ' ' → logprob: -17.97520637512207
    6. '$x' → logprob: -19.35020637512207
    7. '_x' → logprob: -20.22520637512207
    8. ')x' → logprob: -20.47520637512207
    9. '{x' → logprob: -20.85020637512207
    10. '[x' → logprob: -20.97520637512207

Token 201: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.21672147512435913
    2. ' !=' → logprob: -2.091721534729004
    3. 'is' → logprob: -3.216721534729004
    4. '!=' → logprob: -3.466721534729004
    5. ' and' → logprob: -10.966721534729004
    6. 'and' → logprob: -11.091721534729004
    7. ' isn't' → logprob: -11.466721534729004
    8. ')!=' → logprob: -12.091721534729004
    9. ' ' → logprob: -12.841721534729004
    10. ')' → logprob: -12.966721534729004

Token 202: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007100477814674377
    2. ' None' → logprob: -7.2507100105285645
    3. '_None' → logprob: -18.250709533691406
    4. '   ' → logprob: -18.500709533691406
    5. '(None' → logprob: -18.750709533691406
    6. 'none' → logprob: -18.750709533691406
    7. 'N' → logprob: -18.875709533691406
    8. '=None' → logprob: -19.000709533691406
    9. '
' → logprob: -19.125709533691406
    10. ' ' → logprob: -19.375709533691406

Token 203: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07151294499635696
    2. ':
' → logprob: -2.6965129375457764
    3. ' and' → logprob: -7.1965131759643555
    4. ' :' → logprob: -7.6965131759643555
    5. ' :
' → logprob: -8.321513175964355
    6. 'and' → logprob: -9.071513175964355
    7. ':

' → logprob: -11.946513175964355
    8. ':
' → logprob: -12.571513175964355
    9. '):
' → logprob: -14.321513175964355
    10. '<|end|>' → logprob: -14.446513175964355

Token 204: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8604578971862793
    2. ' if' → logprob: -0.8604578971862793
    3. '        ' → logprob: -3.4854578971862793
    4. 'if' → logprob: -3.8604578971862793
    5. '<|end|>' → logprob: -3.9854578971862793
    6. ' y' → logprob: -4.110457897186279
    7. '    ' → logprob: -4.110457897186279
    8. 'y' → logprob: -4.110457897186279
    9. '           ' → logprob: -4.235457897186279
    10. '   ' → logprob: -4.485457897186279

Token 205: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.10026415437459946
    2. ' y' → logprob: -2.350264072418213
    3. '           ' → logprob: -10.725264549255371
    4. ' if' → logprob: -10.975264549255371
    5. '    ' → logprob: -12.100264549255371
    6. '   ' → logprob: -12.600264549255371
    7. 'if' → logprob: -12.725264549255371
    8. ' ' → logprob: -13.225264549255371
    9. '       ' → logprob: -13.600264549255371
    10. '  ' → logprob: -14.100264549255371

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38699135184288025
    2. ' =' → logprob: -1.1369913816452026
    3. '=x' → logprob: -10.011991500854492
    4. ' ' → logprob: -10.136991500854492
    5. 'x' → logprob: -11.136991500854492
    6. ' x' → logprob: -12.636991500854492
    7. ',' → logprob: -12.636991500854492
    8. '=z' → logprob: -12.886991500854492
    9. '=data' → logprob: -13.386991500854492
    10. '=None' → logprob: -13.511991500854492

Token 207: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00029601677670143545
    2. ' x' → logprob: -8.125295639038086
    3. ' ' → logprob: -19.125295639038086
    4. '
' → logprob: -20.250295639038086
    5. '	x' → logprob: -20.750295639038086
    6. '<|end|>' → logprob: -20.875295639038086
    7. ')x' → logprob: -21.250295639038086
    8. ' 
' → logprob: -22.750295639038086
    9. '(x' → logprob: -22.875295639038086
    10. '   ' → logprob: -22.875295639038086

Token 208: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5842799544334412
    2. '
' → logprob: -1.709280014038086
    3. 'if' → logprob: -2.084280014038086
    4. '           ' → logprob: -2.459280014038086
    5. ' 
' → logprob: -3.959280014038086
    6. '            
' → logprob: -3.959280014038086
    7. '       ' → logprob: -5.959280014038086
    8. '  
' → logprob: -6.084280014038086
    9. '    
' → logprob: -6.584280014038086
    10. '	if' → logprob: -7.209280014038086

Token 209: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4327196478843689
    2. ' if' → logprob: -1.5577197074890137
    3. '           ' → logprob: -2.4327197074890137
    4. 'if' → logprob: -4.057719707489014
    5. '       ' → logprob: -4.182719707489014
    6. ' 
' → logprob: -4.432719707489014
    7. '    
' → logprob: -6.557719707489014
    8. '        
' → logprob: -6.557719707489014
    9. '  
' → logprob: -6.807719707489014
    10. '            
' → logprob: -7.057719707489014

Token 210: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0013211923651397228
    2. 'x' → logprob: -7.626321315765381
    3. ' if' → logprob: -7.876321315765381
    4. 'z' → logprob: -7.876321315765381
    5. 'int' → logprob: -9.626320838928223
    6. '
' → logprob: -13.251320838928223
    7. '           ' → logprob: -13.376320838928223
    8. '            
' → logprob: -13.501320838928223
    9. 'data' → logprob: -14.126320838928223
    10. 'elif' → logprob: -14.376320838928223

Token 211: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.07957182079553604
    2. 'int' → logprob: -2.5795717239379883
    3. 'x' → logprob: -7.579571723937988
    4. ' z' → logprob: -9.204571723937988
    5. ' int' → logprob: -10.704571723937988
    6. '(int' → logprob: -11.329571723937988
    7. '	z' → logprob: -11.954571723937988
    8. 'data' → logprob: -12.079571723937988
    9. '<int' → logprob: -12.329571723937988
    10. '   ' → logprob: -12.329571723937988

Token 212: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.14410090446472168
    2. ' <' → logprob: -2.3941009044647217
    3. '<data' → logprob: -3.5191009044647217
    4. '<' → logprob: -5.019101142883301
    5. '.' → logprob: -5.394101142883301
    6. 'data' → logprob: -7.144101142883301
    7. ' .' → logprob: -7.269101142883301
    8. '[' → logprob: -7.769101142883301
    9. ' data' → logprob: -9.8941011428833
    10. ' ' → logprob: -10.1441011428833

Token 213: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6633338928222656
    2. ' <' → logprob: -0.9133338928222656
    3. '.data' → logprob: -2.7883338928222656
    4. '<data' → logprob: -3.9133338928222656
    5. '.' → logprob: -6.288333892822266
    6. ' ' → logprob: -9.788333892822266
    7. '<n' → logprob: -9.788333892822266
    8. '[' → logprob: -9.788333892822266
    9. 'data' → logprob: -10.538333892822266
    10. ' .' → logprob: -10.663333892822266

Token 214: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2014141082763672
    2. ' x' → logprob: -1.7014141082763672
    3. '	x' → logprob: -15.076414108276367
    4. '(x' → logprob: -16.326414108276367
    5. ')x' → logprob: -16.576414108276367
    6. '<x' → logprob: -16.576414108276367
    7. '>x' → logprob: -16.701414108276367
    8. 'z' → logprob: -16.826414108276367
    9. '=x' → logprob: -16.951414108276367
    10. ' ' → logprob: -17.076414108276367

Token 215: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0004929834394715726
    2. '.' → logprob: -7.625493049621582
    3. ' .' → logprob: -12.625493049621582
    4. 'data' → logprob: -13.750493049621582
    5. '.dat' → logprob: -16.375492095947266
    6. ').' → logprob: -16.750492095947266
    7. '```' → logprob: -16.875492095947266
    8. '   ' → logprob: -17.125492095947266
    9. '<data' → logprob: -17.125492095947266
    10. '.datas' → logprob: -17.375492095947266

Token 216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05544396862387657
    2. ':
' → logprob: -2.9304440021514893
    3. ' :' → logprob: -7.68044376373291
    4. ' :
' → logprob: -10.43044376373291
    5. '.data' → logprob: -10.80544376373291
    6. ':data' → logprob: -11.30544376373291
    7. '           ' → logprob: -11.43044376373291
    8. ':return' → logprob: -12.05544376373291
    9. '               ' → logprob: -12.30544376373291
    10. '):
' → logprob: -12.68044376373291

Token 217: '               ' (ID: 506)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6767305731773376
    2. '
' → logprob: -1.1767306327819824
    3. ' x' → logprob: -2.6767306327819824
    4. '            
' → logprob: -3.6767306327819824
    5. '               ' → logprob: -3.8017306327819824
    6. '           ' → logprob: -3.9267306327819824
    7. ' ' → logprob: -4.926730632781982
    8. '                
' → logprob: -4.926730632781982
    9. ':
' → logprob: -5.301730632781982
    10. 'x' → logprob: -5.301730632781982

Token 218: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.011459089815616608
    2. 'x' (adapté à ' x') → logprob: -4.511458873748779
    3. ' 
' → logprob: -7.886458873748779
    4. ' ' → logprob: -11.136459350585938
    5. '
' → logprob: -12.261459350585938
    6. ' ' → logprob: -12.511459350585938
    7. '                
' → logprob: -12.886459350585938
    8. '               ' → logprob: -13.261459350585938
    9. '                ' → logprob: -13.386459350585938
    10. '            ' → logprob: -13.511459350585938

Token 219: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193047523498535
    2. '=' → logprob: -1.5019304752349854
    3. '=x' → logprob: -13.626930236816406
    4. '.' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.501930236816406
    6. 'x' → logprob: -17.501930236816406
    7. '＝' → logprob: -17.876930236816406
    8. ' x' → logprob: -17.876930236816406
    9. '.=' → logprob: -18.251930236816406
    10. '.left' → logprob: -18.251930236816406

Token 220: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011047935113310814
    2. ' x' → logprob: -4.511047840118408
    3. '	x' → logprob: -16.63604736328125
    4. '   ' → logprob: -19.76104736328125
    5. '(x' → logprob: -19.76104736328125
    6. ' ' → logprob: -19.88604736328125
    7. '<x' → logprob: -20.51104736328125
    8. ')x' → logprob: -21.13604736328125
    9. 'left' → logprob: -21.13604736328125
    10. '$x' → logprob: -21.26104736328125

Token 221: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.967624019831419e-05
    2. '.' → logprob: -9.750060081481934
    3. '.right' → logprob: -14.125060081481934
    4. ' .' → logprob: -14.500060081481934
    5. '.le' → logprob: -17.000059127807617
    6. '.Left' → logprob: -17.500059127807617
    7. 'left' → logprob: -17.625059127807617
    8. '.data' → logprob: -19.750059127807617
    9. '.l' → logprob: -21.375059127807617
    10. '	left' → logprob: -21.375059127807617

Token 222: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07164089381694794
    2. 'else' → logprob: -2.821640968322754
    3. ' else' → logprob: -4.696640968322754
    4. '
' → logprob: -7.821640968322754
    5. 'elif' → logprob: -9.571640968322754
    6. '            
' → logprob: -11.821640968322754
    7. '       ' → logprob: -12.071640968322754
    8. '```' → logprob: -12.821640968322754
    9. '	else' → logprob: -13.071640968322754
    10. '    
' → logprob: -13.196640968322754

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05635257065296173
    2. ' else' → logprob: -3.4313526153564453
    3. 'else' → logprob: -3.8063526153564453
    4. '
' → logprob: -8.681352615356445
    5. '            
' → logprob: -11.056352615356445
    6. 'elif' → logprob: -11.556352615356445
    7. '```' → logprob: -12.431352615356445
    8. '       ' → logprob: -12.431352615356445
    9. '               ' → logprob: -12.556352615356445
    10. '	else' → logprob: -12.556352615356445

Token 224: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.38694748282432556
    2. 'else' (adapté à ' else') → logprob: -1.136947512626648
    3. '           ' → logprob: -10.261947631835938
    4. '	else' → logprob: -10.386947631835938
    5. '       ' → logprob: -12.011947631835938
    6. '
' → logprob: -13.011947631835938
    7. '               ' → logprob: -14.136947631835938
    8. 'elif' → logprob: -14.261947631835938
    9. '_else' → logprob: -15.261947631835938
    10. ' elif' → logprob: -15.886947631835938

Token 225: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41262099146842957
    2. ':' → logprob: -1.287621021270752
    3. '               ' → logprob: -2.787621021270752
    4. '           ' → logprob: -7.537621021270752
    5. ':
' → logprob: -11.287620544433594
    6. '                   ' → logprob: -11.412620544433594
    7. ' :
' → logprob: -11.537620544433594
    8. ':

' → logprob: -11.662620544433594
    9. ' x' → logprob: -12.912620544433594
    10. '                ' → logprob: -12.912620544433594

Token 226: '               ' (ID: 506)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31365588307380676
    2. '               ' → logprob: -1.3136558532714844
    3. '           ' → logprob: -8.688655853271484
    4. 'x' → logprob: -8.813655853271484
    5. ' ' → logprob: -10.313655853271484
    6. '                ' → logprob: -11.313655853271484
    7. '                   ' → logprob: -11.563655853271484
    8. ' ' → logprob: -11.813655853271484
    9. '              ' → logprob: -11.938655853271484
    10. '            ' → logprob: -13.188655853271484

Token 227: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.6932077407836914
    2. ' x' → logprob: -0.6932077407836914
    3. '               ' → logprob: -9.818207740783691
    4. '           ' → logprob: -12.443207740783691
    5. '                   ' → logprob: -13.443207740783691
    6. '                ' → logprob: -14.693207740783691
    7. '
' → logprob: -16.318206787109375
    8. '   ' → logprob: -16.568206787109375
    9. ' ' → logprob: -16.943206787109375
    10. '	x' → logprob: -17.068206787109375

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861456897109747
    2. '=' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.258615493774414
    4. 'data' → logprob: -18.008615493774414
    5. '=data' → logprob: -18.383615493774414
    6. '=x' → logprob: -18.508615493774414
    7. ')' → logprob: -18.758615493774414
    8. ' =
' → logprob: -18.883615493774414
    9. '.' → logprob: -18.883615493774414
    10. '   ' → logprob: -19.008615493774414

Token 229: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931473612785339
    2. ' x' → logprob: -0.6931473612785339
    3. '	x' → logprob: -16.568147659301758
    4. ' ' → logprob: -17.568147659301758
    5. '(x' → logprob: -18.318147659301758
    6. ' ' → logprob: -18.318147659301758
    7. ')x' → logprob: -19.068147659301758
    8. 's' → logprob: -19.818147659301758
    9. 'None' → logprob: -20.068147659301758
    10. '>x' → logprob: -20.318147659301758

Token 230: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.927930654550437e-05
    2. '.' → logprob: -10.500029563903809
    3. 'right' → logprob: -14.375029563903809
    4. '.left' → logprob: -14.625029563903809
    5. '.data' → logprob: -14.875029563903809
    6. ' .' → logprob: -15.500029563903809
    7. '.r' → logprob: -17.125028610229492
    8. '.Right' → logprob: -17.500028610229492
    9. '```' → logprob: -18.375028610229492
    10. '	right' → logprob: -18.875028610229492

Token 231: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11568812280893326
    2. '
' → logprob: -2.2406880855560303
    3. '        
' → logprob: -6.365688323974609
    4. '  
' → logprob: -8.61568832397461
    5. '    
' → logprob: -8.74068832397461
    6. '   ' → logprob: -9.24068832397461
    7. 'n' → logprob: -9.24068832397461
    8. ',' → logprob: -9.36568832397461
    9. 'else' → logprob: -9.61568832397461
    10. ' 
' → logprob: -10.11568832397461

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027308131102472544
    2. '
' → logprob: -6.127730846405029
    3. '        
' → logprob: -7.877730846405029
    4. '   ' → logprob: -10.002730369567871
    5. 'y' → logprob: -11.002730369567871
    6. 'if' → logprob: -11.127730369567871
    7. 'z' → logprob: -11.252730369567871
    8. '      ' → logprob: -11.502730369567871
    9. '  
' → logprob: -11.502730369567871
    10. '    ' → logprob: -11.752730369567871

Token 233: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.1658669412136078
    2. '       ' → logprob: -2.5408668518066406
    3. 'if' → logprob: -3.4158668518066406
    4. '   ' → logprob: -3.9158668518066406
    5. ' z' → logprob: -4.915866851806641
    6. 'new' → logprob: -4.915866851806641
    7. 'node' → logprob: -5.415866851806641
    8. ' if' → logprob: -6.665866851806641
    9. ' new' → logprob: -7.915866851806641
    10. '
' → logprob: -8.79086685180664

Token 234: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00012213163427077234
    2. '.' → logprob: -9.1251220703125
    3. ' .' → logprob: -12.1251220703125
    4. '.data' → logprob: -12.2501220703125
    5. '.left' → logprob: -14.0001220703125
    6. 'parent' → logprob: -14.3751220703125
    7. '.p' → logprob: -14.7501220703125
    8. '.prev' → logprob: -15.5001220703125
    9. '}.' → logprob: -15.8751220703125
    10. ').' → logprob: -15.8751220703125

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931498050689697
    2. ' =' → logprob: -0.6931498050689697
    3. '=z' → logprob: -13.44314956665039
    4. '=y' → logprob: -14.19314956665039
    5. ' ' → logprob: -15.31814956665039
    6. '=s' → logprob: -16.81814956665039
    7. '＝' → logprob: -17.19314956665039
    8. '=x' → logprob: -17.44314956665039
    9. '=
' → logprob: -17.44314956665039
    10. ' =
' → logprob: -17.56814956665039

Token 236: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03804149478673935
    2. ' y' → logprob: -3.288041591644287
    3. '	y' → logprob: -17.163042068481445
    4. ' ' → logprob: -17.663042068481445
    5. ')y' → logprob: -18.663042068481445
    6. ' ' → logprob: -18.913042068481445
    7. ''y' → logprob: -19.288042068481445
    8. 'x' → logprob: -19.288042068481445
    9. '[y' → logprob: -19.663042068481445
    10. '​' → logprob: -20.038042068481445

Token 237: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42167842388153076
    2. ' if' → logprob: -1.4216784238815308
    3. 'if' → logprob: -2.2966785430908203
    4. '<|end|>' → logprob: -6.42167854309082
    5. '
' → logprob: -9.04667854309082
    6. '   ' → logprob: -9.54667854309082
    7. ';if' → logprob: -9.67167854309082
    8. ' 
' → logprob: -9.79667854309082
    9. ' ' → logprob: -9.92167854309082
    10. '        
' → logprob: -10.04667854309082

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5184140205383301
    2. ' if' → logprob: -1.01841402053833
    3. 'if' → logprob: -3.14341402053833
    4. '<|end|>' → logprob: -8.893413543701172
    5. '   ' → logprob: -10.018413543701172
    6. '
' → logprob: -11.518413543701172
    7. '```' → logprob: -11.768413543701172
    8. '	if' → logprob: -11.893413543701172
    9. '        
' → logprob: -12.018413543701172
    10. ' ' → logprob: -12.393413543701172

Token 239: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.9743012671824545e-05
    2. ' if' → logprob: -11.000020027160645
    3. '       ' → logprob: -12.750020027160645
    4. '```' → logprob: -16.750019073486328
    5. '
' → logprob: -16.875019073486328
    6. '   ' → logprob: -18.125019073486328
    7. 'If' → logprob: -18.125019073486328
    8. '	if' → logprob: -19.625019073486328
    9. '           ' → logprob: -19.625019073486328
    10. ';if' → logprob: -19.875019073486328

Token 240: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47407761216163635
    2. ' y' → logprob: -0.974077582359314
    3. 'self' → logprob: -14.599077224731445
    4. ' self' → logprob: -15.849077224731445
    5. '	y' → logprob: -17.349077224731445
    6. ' ' → logprob: -18.349077224731445
    7. 'x' → logprob: -19.099077224731445
    8. '   ' → logprob: -19.224077224731445
    9. ' ' → logprob: -19.724077224731445
    10. '(y' → logprob: -19.849077224731445

Token 241: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03864895924925804
    2. ' ==' → logprob: -3.663648843765259
    3. ' is' → logprob: -4.413649082183838
    4. 'is' → logprob: -9.16364860534668
    5. '=' → logprob: -10.16364860534668
    6. '=None' → logprob: -12.03864860534668
    7. 'None' → logprob: -12.53864860534668
    8. 'data' → logprob: -12.66364860534668
    9. '===' → logprob: -13.53864860534668
    10. ' =' → logprob: -14.28864860534668

Token 242: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.615255839889869e-05
    2. ' None' → logprob: -9.250096321105957
    3. 'null' → logprob: -20.87509536743164
    4. '   ' → logprob: -21.00009536743164
    5. '=None' → logprob: -21.37509536743164
    6. 'none' → logprob: -21.87509536743164
    7. '_None' → logprob: -22.12509536743164
    8. 'No' → logprob: -22.62509536743164
    9. 'N' → logprob: -23.00009536743164
    10. '(None' → logprob: -23.12509536743164

Token 243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28118202090263367
    2. ':
' → logprob: -1.406182050704956
    3. ':

' → logprob: -11.656182289123535
    4. '           ' → logprob: -12.031182289123535
    5. '):
' → logprob: -12.031182289123535
    6. ':self' → logprob: -12.531182289123535
    7. ':
' → logprob: -13.281182289123535
    8. '():
' → logprob: -13.656182289123535
    9. ' :' → logprob: -13.781182289123535
    10. ' :
' → logprob: -14.031182289123535

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8830273747444153
    2. 'self' → logprob: -1.0080273151397705
    3. ' self' → logprob: -1.5080273151397705
    4. '   ' → logprob: -9.508027076721191
    5. ' ' → logprob: -10.383027076721191
    6. '  ' → logprob: -10.633027076721191
    7. '               ' → logprob: -10.633027076721191
    8. '	self' → logprob: -12.008027076721191
    9. ' ' → logprob: -12.258027076721191
    10. '       ' → logprob: -12.508027076721191

Token 245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00672211404889822
    2. ' self' → logprob: -5.0067219734191895
    3. 'z' → logprob: -12.381722450256348
    4. '           ' → logprob: -13.381722450256348
    5. ' z' → logprob: -14.506722450256348
    6. '	self' → logprob: -15.631722450256348
    7. '       ' → logprob: -16.25672149658203
    8. '(self' → logprob: -16.25672149658203
    9. '   ' → logprob: -16.50672149658203
    10. ' ' → logprob: -17.50672149658203

Token 246: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.008193138986825943
    2. '.' → logprob: -4.883193016052246
    3. 'root' → logprob: -7.633193016052246
    4. ' .' → logprob: -9.758193016052246
    5. '[root' → logprob: -10.883193016052246
    6. '.ro' → logprob: -11.508193016052246
    7. '.py' → logprob: -13.133193016052246
    8. '.tree' → logprob: -13.633193016052246
    9. '=root' → logprob: -13.758193016052246
    10. '	root' → logprob: -13.758193016052246

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134307563304901
    2. ' =' → logprob: -1.3134307861328125
    3. '=z' → logprob: -8.688430786132812
    4. ' ' → logprob: -16.188430786132812
    5. '=None' → logprob: -16.563430786132812
    6. '=data' → logprob: -16.813430786132812
    7. '=y' → logprob: -17.063430786132812
    8. '=v' → logprob: -17.563430786132812
    9. '=s' → logprob: -17.688430786132812
    10. '<|end|>' → logprob: -17.938430786132812

Token 248: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0788901224732399
    2. ' z' → logprob: -2.578890085220337
    3. '	z' → logprob: -15.078889846801758
    4. ' ' → logprob: -17.703889846801758
    5. '_z' → logprob: -17.703889846801758
    6. ''z' → logprob: -17.953889846801758
    7. '[z' → logprob: -17.953889846801758
    8. ' ' → logprob: -18.453889846801758
    9. '(z' → logprob: -18.578889846801758
    10. '.z' → logprob: -18.578889846801758

Token 249: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001995250815525651
    2. 'elif' → logprob: -6.501995086669922
    3. 'else' → logprob: -8.251995086669922
    4. ' elif' → logprob: -8.876995086669922
    5. ' else' → logprob: -9.501995086669922
    6. '   ' → logprob: -12.251995086669922
    7. 'return' → logprob: -13.001995086669922
    8. '           ' → logprob: -13.001995086669922
    9. '```' → logprob: -13.376995086669922
    10. '	elif' → logprob: -13.626995086669922

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03174908086657524
    2. 'elif' → logprob: -3.9067490100860596
    3. ' elif' → logprob: -4.531749248504639
    4. ' else' → logprob: -8.53174877166748
    5. 'else' → logprob: -8.90674877166748
    6. '	elif' → logprob: -10.78174877166748
    7. '   ' → logprob: -11.28174877166748
    8. '<|end|>' → logprob: -11.53174877166748
    9. '```' → logprob: -13.53174877166748
    10. ',' → logprob: -14.03174877166748

Token 251: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0030021851416677237
    2. ' elif' → logprob: -6.378002166748047
    3. '       ' → logprob: -6.878002166748047
    4. 'else' → logprob: -8.253002166748047
    5. 'el' → logprob: -12.503002166748047
    6. '   ' → logprob: -12.628002166748047
    7. ' else' → logprob: -14.003002166748047
    8. '	elif' → logprob: -14.878002166748047
    9. 'elseif' → logprob: -16.253002166748047
    10. 'if' → logprob: -16.378002166748047

Token 252: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.31328514218330383
    2. ' z' → logprob: -1.3132851123809814
    3. ' y' → logprob: -11.438284873962402
    4. 'y' → logprob: -11.563284873962402
    5. '	z' → logprob: -14.063284873962402
    6. '   ' → logprob: -14.688284873962402
    7. ' ' → logprob: -14.813284873962402
    8. ' ' → logprob: -14.813284873962402
    9. 'int' → logprob: -15.438284873962402
    10. '    ' → logprob: -15.438284873962402

Token 253: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00018697108316700906
    2. '.' → logprob: -8.625186920166016
    3. ' .' → logprob: -11.875186920166016
    4. 'data' → logprob: -15.750186920166016
    5. '<data' → logprob: -16.000186920166016
    6. '​.' → logprob: -16.625186920166016
    7. '.dat' → logprob: -17.125186920166016
    8. ').' → logprob: -18.125186920166016
    9. '.parent' → logprob: -18.125186920166016
    10. ' data' → logprob: -18.375186920166016

Token 254: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048799920827150345
    2. '<' → logprob: -3.048799991607666
    3. '<data' → logprob: -8.798799514770508
    4. '.data' → logprob: -10.423799514770508
    5. ' ' → logprob: -10.798799514770508
    6. 'data' → logprob: -13.048799514770508
    7. '[' → logprob: -13.798799514770508
    8. '.' → logprob: -13.923799514770508
    9. '<int' → logprob: -14.048799514770508
    10. '<Data' → logprob: -14.173799514770508

Token 255: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.16022422909736633
    2. 'y' → logprob: -1.910224199295044
    3. '	y' → logprob: -17.53522491455078
    4. ' ' → logprob: -18.03522491455078
    5. ' ' → logprob: -18.53522491455078
    6. 'z' → logprob: -19.41022491455078
    7. ')y' → logprob: -19.66022491455078
    8. 'x' → logprob: -19.78522491455078
    9. '   ' → logprob: -19.91022491455078
    10. '(y' → logprob: -19.91022491455078

Token 256: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.00038419815246015787
    2. '.' → logprob: -7.875384330749512
    3. ' .' → logprob: -12.625384330749512
    4. 'data' → logprob: -14.250384330749512
    5. ' data' → logprob: -17.500383377075195
    6. '.dat' → logprob: -17.625383377075195
    7. '<data' → logprob: -18.125383377075195
    8. '.Data' → logprob: -18.375383377075195
    9. '```' → logprob: -18.500383377075195
    10. ').' → logprob: -18.625383377075195

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004249231424182653
    2. ':
' → logprob: -5.504249095916748
    3. ' :' → logprob: -8.879249572753906
    4. '):' → logprob: -10.754249572753906
    5. '):
' → logprob: -12.629249572753906
    6. ' :
' → logprob: -13.004249572753906
    7. '<|end|>' → logprob: -13.379249572753906
    8. '       ' → logprob: -14.129249572753906
    9. ':

' → logprob: -14.379249572753906
    10. ')' → logprob: -14.504249572753906

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5324736833572388
    2. ':' → logprob: -1.6574736833572388
    3. ' y' → logprob: -2.157473564147949
    4. ':
' → logprob: -2.907473564147949
    5. ' :' → logprob: -3.532473564147949
    6. ' :
' → logprob: -4.157473564147949
    7. '       ' → logprob: -5.532473564147949
    8. ' x' → logprob: -7.157473564147949
    9. ' ' → logprob: -7.282473564147949
    10. '):
' → logprob: -8.15747356414795

Token 259: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.47410863637924194
    2. ' y' → logprob: -0.9741086363792419
    3. '           ' → logprob: -10.849108695983887
    4. '       ' → logprob: -11.724108695983887
    5. '	y' → logprob: -13.224108695983887
    6. '
' → logprob: -13.849108695983887
    7. '   ' → logprob: -13.974108695983887
    8. '               ' → logprob: -16.22410774230957
    9. ' 
' → logprob: -16.72410774230957
    10. ' ' → logprob: -16.84910774230957

Token 260: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -12.625003814697266
    3. '.right' → logprob: -15.625003814697266
    4. ' .' → logprob: -16.500003814697266
    5. '.le' → logprob: -16.875003814697266
    6. '.Left' → logprob: -17.250003814697266
    7. 'left' → logprob: -19.875003814697266
    8. '.next' → logprob: -20.375003814697266
    9. '.parent' → logprob: -21.375003814697266
    10. '.l' → logprob: -21.375003814697266

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132758140563965
    2. '=' → logprob: -1.3132758140563965
    3. '=z' → logprob: -11.188276290893555
    4. ' ' → logprob: -16.313276290893555
    5. ' z' → logprob: -17.313276290893555
    6. ' =
' → logprob: -17.688276290893555
    7. '＝' → logprob: -17.688276290893555
    8. '=None' → logprob: -18.438276290893555
    9. ')' → logprob: -18.563276290893555
    10. 'z' → logprob: -18.688276290893555

Token 262: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.12692883610725403
    2. ' z' → logprob: -2.1269288063049316
    3. '	z' → logprob: -14.12692928314209
    4. ' ' → logprob: -17.376928329467773
    5. '_z' → logprob: -18.001928329467773
    6. '
' → logprob: -18.001928329467773
    7. '(z' → logprob: -18.626928329467773
    8. ' ' → logprob: -18.751928329467773
    9. '[z' → logprob: -18.751928329467773
    10. ''z' → logprob: -18.876928329467773

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.062116023153066635
    2. 'else' → logprob: -3.0621159076690674
    3. ' else' → logprob: -4.3121161460876465
    4. '<|end|>' → logprob: -11.312115669250488
    5. '	else' → logprob: -11.937115669250488
    6. '
' → logprob: -12.312115669250488
    7. 'elif' → logprob: -12.812115669250488
    8. '   ' → logprob: -14.062115669250488
    9. '```' → logprob: -14.187115669250488
    10. '.' → logprob: -14.312115669250488

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07980474084615707
    2. 'else' → logprob: -2.9548046588897705
    3. ' else' → logprob: -3.7048046588897705
    4. '	else' → logprob: -12.204804420471191
    5. '	' → logprob: -13.704804420471191
    6. 'elif' → logprob: -14.079804420471191
    7. '
' → logprob: -14.454804420471191
    8. '   ' → logprob: -14.454804420471191
    9. '      ' → logprob: -15.329804420471191
    10. '```' → logprob: -15.454804420471191

Token 265: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.862018346786499
    2. 'else' (adapté à ' else') → logprob: -0.862018346786499
    3. '       ' → logprob: -1.862018346786499
    4. 'y' → logprob: -11.487018585205078
    5. ' y' → logprob: -11.987018585205078
    6. '	else' → logprob: -12.862018585205078
    7. '   ' → logprob: -13.612018585205078
    8. 'z' → logprob: -14.487018585205078
    9. ' ' → logprob: -14.487018585205078
    10. 'elif' → logprob: -14.612018585205078

Token 266: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18951350450515747
    2. ':' → logprob: -1.8145134449005127
    3. ' y' → logprob: -5.189513683319092
    4. ':
' → logprob: -5.689513683319092
    5. ' :' → logprob: -7.689513683319092
    6. ' z' → logprob: -9.189513206481934
    7. ' x' → logprob: -10.314513206481934
    8. '               ' → logprob: -10.314513206481934
    9. ' ' → logprob: -10.564513206481934
    10. ' :
' → logprob: -10.564513206481934

Token 267: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0010921158827841282
    2. '           ' → logprob: -7.251091957092285
    3. 'y' → logprob: -7.876091957092285
    4. '       ' → logprob: -14.251091957092285
    5. '	y' → logprob: -14.751091957092285
    6. '               ' → logprob: -15.001091957092285
    7. '   ' → logprob: -15.001091957092285
    8. '          ' → logprob: -15.751091957092285
    9. '        ' → logprob: -15.876091957092285
    10. '            ' → logprob: -16.2510929107666

Token 268: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.20141470432281494
    2. ' y' → logprob: -1.701414704322815
    3. '           ' → logprob: -13.576415061950684
    4. '       ' → logprob: -16.451414108276367
    5. '	y' → logprob: -16.826414108276367
    6. '   ' → logprob: -17.326414108276367
    7. ''y' → logprob: -18.076414108276367
    8. '               ' → logprob: -18.201414108276367
    9. '    ' → logprob: -18.701414108276367
    10. 'y's' → logprob: -18.701414108276367

Token 269: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.004080897197127342
    2. '.' → logprob: -5.504080772399902
    3. ' .' → logprob: -13.004080772399902
    4. '.left' → logprob: -15.754080772399902
    5. '.Right' → logprob: -16.75408172607422
    6. 'right' → logprob: -16.87908172607422
    7. '.data' → logprob: -18.75408172607422
    8. '[right' → logprob: -19.50408172607422
    9. '>.' → logprob: -19.62908172607422
    10. '	right' → logprob: -19.87908172607422

Token 270: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141343772411346
    2. ' =' → logprob: -1.7014133930206299
    3. '=z' → logprob: -15.82641315460205
    4. '[' → logprob: -19.326414108276367
    5. 'z' → logprob: -19.701414108276367
    6. '＝' → logprob: -19.826414108276367
    7. '.=' → logprob: -20.076414108276367
    8. ' ' → logprob: -20.201414108276367
    9. '   ' → logprob: -20.576414108276367
    10. '=
' → logprob: -21.201414108276367

Token 271: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03804229199886322
    2. ' z' → logprob: -3.2880423069000244
    3. '	z' → logprob: -14.413042068481445
    4. 'y' → logprob: -16.163042068481445
    5. ' ' → logprob: -16.663042068481445
    6. 'x' → logprob: -17.538042068481445
    7. '   ' → logprob: -17.663042068481445
    8. ' y' → logprob: -17.913042068481445
    9. '(z' → logprob: -18.413042068481445
    10. '=z' → logprob: -18.413042068481445

Token 272: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3008926212787628
    2. 'def' → logprob: -2.3008925914764404
    3. 'bt' → logprob: -3.3008925914764404
    4. 'tree' → logprob: -3.5508925914764404
    5. 'b' → logprob: -3.6758925914764404
    6. 't' → logprob: -3.9258925914764404
    7. 'root' → logprob: -3.9258925914764404
    8. '   ' → logprob: -4.6758928298950195
    9. ' for' → logprob: -4.9258928298950195
    10. '    
' → logprob: -5.5508928298950195

Token 274: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007036932278424501
    2. 'bt' → logprob: -5.757037162780762
    3. 'tree' → logprob: -6.507037162780762
    4. 'for' → logprob: -7.007037162780762
    5. 'b' → logprob: -7.382037162780762
    6. '   ' → logprob: -8.257037162780762
    7. 'n' → logprob: -8.382037162780762
    8. 'nodes' → logprob: -9.507037162780762
    9. 'root' → logprob: -9.757037162780762
    10. ' def' → logprob: -9.757037162780762

Token 275: ' find' (ID: 1646)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.3679128587245941
    2. ' search' → logprob: -1.6179128885269165
    3. ' find' → logprob: -2.867912769317627
    4. 'find' → logprob: -2.992912769317627
    5. ' inorder' → logprob: -7.117912769317627
    6. 'in' → logprob: -8.242913246154785
    7. 'print' → logprob: -8.242913246154785
    8. '_search' → logprob: -8.742913246154785
    9. 'insert' → logprob: -8.867913246154785
    10. 'get' → logprob: -9.242913246154785

Token 276: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.6656825866666622e-05
    2. '(' → logprob: -10.75002670288086
    3. 'self' → logprob: -12.50002670288086
    4. 'def' → logprob: -15.25002670288086
    5. ' (' → logprob: -15.25002670288086
    6. '_node' → logprob: -15.87502670288086
    7. 'root' → logprob: -15.87502670288086
    8. '(node' → logprob: -16.12502670288086
    9. '   ' → logprob: -16.50002670288086
    10. '(root' → logprob: -16.75002670288086

Token 277: ',data' (ID: 57278)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.7146746763028204e-05
    2. 'self' → logprob: -11.12503719329834
    3. '(' → logprob: -11.37503719329834
    4. ')(' → logprob: -12.25003719329834
    5. ' (' → logprob: -13.62503719329834
    6. ')' → logprob: -13.62503719329834
    7. '(node' → logprob: -14.00003719329834
    8. ',self' → logprob: -14.25003719329834
    9. ',' → logprob: -14.75003719329834
    10. 'root' → logprob: -15.00003719329834

Token 278: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2876347005367279
    2. ',self' → logprob: -2.0376346111297607
    3. '):' → logprob: -2.6626346111297607
    4. '):
' → logprob: -3.4126346111297607
    5. ',node' → logprob: -4.78763484954834
    6. 'self' → logprob: -5.16263484954834
    7. ' ,' → logprob: -6.16263484954834
    8. '(self' → logprob: -8.53763484954834
    9. '   ' → logprob: -9.03763484954834
    10. '       ' → logprob: -9.03763484954834

Token 279: '       ' (ID: 309)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47789567708969116
    2. '       ' → logprob: -0.9778956770896912
    3. '   ' → logprob: -6.227895736694336
    4. ' node' → logprob: -7.102895736694336
    5. 'x' → logprob: -7.352895736694336
    6. ' current' → logprob: -8.352895736694336
    7. ' def' → logprob: -9.727895736694336
    8. 'node' → logprob: -10.477895736694336
    9. '    ' → logprob: -11.102895736694336
    10. 'def' → logprob: -12.227895736694336

Token 280: ' pt' (ID: 18961)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.027975833043456078
    2. ' x' → logprob: -4.277976036071777
    3. 'def' → logprob: -4.777976036071777
    4. 'if' → logprob: -5.527976036071777
    5. 'node' → logprob: -7.277976036071777
    6. ' def' → logprob: -8.027976036071777
    7. 'current' → logprob: -8.652976036071777
    8. ' if' → logprob: -9.152976036071777
    9. ' node' → logprob: -11.152976036071777
    10. ' current' → logprob: -11.402976036071777

Token 281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3885522186756134
    2. '=' → logprob: -1.138552188873291
    3. 'r' → logprob: -7.513552188873291
    4. 'x' → logprob: -7.888552188873291
    5. '   ' → logprob: -8.63855266571045
    6. '=x' → logprob: -9.01355266571045
    7. 'node' → logprob: -9.26355266571045
    8. '       ' → logprob: -9.38855266571045
    9. 'emp' → logprob: -10.01355266571045
    10. ' ' → logprob: -10.01355266571045

Token 282: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001234428636962548
    2. ' self' → logprob: -9.000123023986816
    3. '	self' → logprob: -20.625123977661133
    4. '(self' → logprob: -21.000123977661133
    5. 'this' → logprob: -21.125123977661133
    6. ' ' → logprob: -21.375123977661133
    7. '   ' → logprob: -21.500123977661133
    8. '[self' → logprob: -21.750123977661133
    9. '=self' → logprob: -22.125123977661133
    10. '
' → logprob: -22.250123977661133

Token 283: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00889203604310751
    2. 'root' → logprob: -4.758892059326172
    3. '.' → logprob: -8.258892059326172
    4. ' root' → logprob: -11.508892059326172
    5. ' .' → logprob: -13.008892059326172
    6. '.ro' → logprob: -13.008892059326172
    7. '_root' → logprob: -14.383892059326172
    8. '[root' → logprob: -14.383892059326172
    9. '=root' → logprob: -15.008892059326172
    10. '	root' → logprob: -15.008892059326172

Token 284: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4305809736251831
    2. '
' → logprob: -1.055580973625183
    3. 'while' → logprob: -6.680581092834473
    4. '        
' → logprob: -8.180581092834473
    5. '
' → logprob: -9.180581092834473
    6. 'if' → logprob: -9.430581092834473
    7. ' while' → logprob: -10.180581092834473
    8. ' if' → logprob: -10.305581092834473
    9. '<|end|>' → logprob: -10.805581092834473
    10. ')
' → logprob: -11.555581092834473

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003033447777852416
    2. '
' → logprob: -6.378033638000488
    3. '<|end|>' → logprob: -6.878033638000488
    4. '	' → logprob: -9.503033638000488
    5. ' while' → logprob: -9.753033638000488
    6. 'while' → logprob: -9.878033638000488
    7. '<|end|>' → logprob: -10.128033638000488
    8. '        
' → logprob: -10.503033638000488
    9. '   ' → logprob: -11.128033638000488
    10. '      ' → logprob: -12.378033638000488

Token 286: ' flag' (ID: 9641)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -9.849109119386412e-06
    2. '       ' → logprob: -12.250009536743164
    3. ' while' → logprob: -12.250009536743164
    4. '   ' → logprob: -17.000009536743164
    5. '	while' → logprob: -17.000009536743164
    6. '
' → logprob: -17.000009536743164
    7. 'if' → logprob: -19.125009536743164
    8. 'While' → logprob: -20.250009536743164
    9. '        
' → logprob: -20.875009536743164
    10. '```' → logprob: -21.375009536743164

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328386068344116
    2. '=' → logprob: -1.313283920288086
    3. ' ' → logprob: -12.313283920288086
    4. '=None' → logprob: -12.313283920288086
    5. '=False' → logprob: -12.813283920288086
    6. '   ' → logprob: -13.063283920288086
    7. 'if' → logprob: -13.313283920288086
    8. ',' → logprob: -13.438283920288086
    9. '=True' → logprob: -13.563283920288086
    10. ' if' → logprob: -14.188283920288086

Token 288: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06541399657726288
    2. ' False' → logprob: -2.8154139518737793
    3. 'True' → logprob: -5.815413951873779
    4. ' True' → logprob: -7.690413951873779
    5. '0' → logprob: -13.815414428710938
    6. 'None' → logprob: -14.815414428710938
    7. '(False' → logprob: -15.065414428710938
    8. 'F' → logprob: -16.190414428710938
    9. '=False' → logprob: -16.815414428710938
    10. ' None' → logprob: -16.815414428710938

Token 289: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10051009058952332
    2. 'True' → logprob: -2.3505101203918457
    3. ' False' → logprob: -8.475509643554688
    4. '0' → logprob: -9.600509643554688
    5. ' True' → logprob: -10.850509643554688
    6. 'pt' → logprob: -12.850509643554688
    7. '1' → logprob: -12.850509643554688
    8. 'None' → logprob: -14.225509643554688
    9. '(False' → logprob: -14.475509643554688
    10. 'data' → logprob: -14.725509643554688

Token 290: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44972145557403564
    2. '
' → logprob: -1.0747214555740356
    3. ' while' → logprob: -5.574721336364746
    4. '	' → logprob: -5.699721336364746
    5. '	while' → logprob: -5.699721336364746
    6. '<|end|>' → logprob: -5.824721336364746
    7. '        
' → logprob: -6.074721336364746
    8. 'while' → logprob: -6.449721336364746
    9. '		
' → logprob: -6.699721336364746
    10. '  
' → logprob: -7.324721336364746

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46105679869651794
    2. '
' → logprob: -1.0860568284988403
    3. '<|end|>' → logprob: -3.961056709289551
    4. ' while' → logprob: -5.586056709289551
    5. '        
' → logprob: -5.836056709289551
    6. '	while' → logprob: -6.211056709289551
    7. '		
' → logprob: -7.211056709289551
    8. '<|end|>' → logprob: -7.211056709289551
    9. 'while' → logprob: -7.336056709289551
    10. ' 
' → logprob: -7.461056709289551

Token 292: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8670123219490051
    2. '       ' → logprob: -1.2420122623443604
    3. 'while' (adapté à ' while') → logprob: -1.2420122623443604
    4. '	while' → logprob: -6.6170125007629395
    5. '   ' → logprob: -7.2420125007629395
    6. '
' → logprob: -9.742012023925781
    7. '	' → logprob: -10.492012023925781
    8. ' 
' → logprob: -10.867012023925781
    9. '        
' → logprob: -11.242012023925781
    10. 'While' → logprob: -12.492012023925781

Token 293: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.07901140302419662
    2. ' pt' → logprob: -2.5790114402770996
    3. 'flag' → logprob: -9.454010963439941
    4. '(pt' → logprob: -10.079010963439941
    5. '	pt' → logprob: -14.204010963439941
    6. ' flag' → logprob: -14.454010963439941
    7. 'ptr' → logprob: -17.329011917114258
    8. 'not' → logprob: -17.579011917114258
    9. '(' → logprob: -17.829011917114258
    10. 'True' → logprob: -17.954011917114258

Token 294: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5717812180519104
    2. ' !=' → logprob: -0.9467812180519104
    3. ' is' → logprob: -3.0717811584472656
    4. 'is' → logprob: -7.196781158447266
    5. 'data' → logprob: -8.696781158447266
    6. ' and' → logprob: -8.821781158447266
    7. 'and' → logprob: -9.821781158447266
    8. '!' → logprob: -11.071781158447266
    9. ' ' → logprob: -12.571781158447266
    10. '.data' → logprob: -12.946781158447266

Token 295: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002475777640938759
    2. ' None' → logprob: -6.002475738525391
    3. '0' → logprob: -17.25247573852539
    4. '(None' → logprob: -17.37747573852539
    5. 'data' → logprob: -18.12747573852539
    6. 'none' → logprob: -18.25247573852539
    7. '_None' → logprob: -18.50247573852539
    8. '=None' → logprob: -18.50247573852539
    9. ' ' → logprob: -20.12747573852539
    10. ',None' → logprob: -20.37747573852539

Token 296: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11713796854019165
    2. ':
' → logprob: -2.492137908935547
    3. ':' → logprob: -3.867137908935547
    4. 'and' → logprob: -5.117137908935547
    5. '           ' → logprob: -7.242137908935547
    6. '       ' → logprob: -9.117137908935547
    7. '   ' → logprob: -10.992137908935547
    8. '<|end|>' → logprob: -11.617137908935547
    9. ':

' → logprob: -11.742137908935547
    10. ' :
' → logprob: -11.867137908935547

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027843154966831207
    2. '       ' → logprob: -6.627784252166748
    3. ' if' → logprob: -6.752784252166748
    4. 'if' → logprob: -9.377784729003906
    5. '<|end|>' → logprob: -9.627784729003906
    6. ' and' → logprob: -10.627784729003906
    7. '   ' → logprob: -10.627784729003906
    8. '```' → logprob: -10.752784729003906
    9. '
' → logprob: -11.377784729003906
    10. '            
' → logprob: -11.502784729003906

Token 298: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06407281756401062
    2. 'if' (adapté à ' if') → logprob: -3.064072847366333
    3. '           ' → logprob: -4.189072608947754
    4. ' ' → logprob: -9.689072608947754
    5. '   ' → logprob: -9.939072608947754
    6. '       ' → logprob: -10.189072608947754
    7. '               ' → logprob: -11.064072608947754
    8. ' ' → logprob: -11.314072608947754
    9. '	if' → logprob: -11.814072608947754
    10. '	       ' → logprob: -12.439072608947754

Token 299: ' pt' (ID: 18961)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5739722847938538
    2. 'pt' → logprob: -1.448972225189209
    3. ' data' → logprob: -1.948972225189209
    4. ' pt' → logprob: -2.823972225189209
    5. '   ' → logprob: -10.073972702026367
    6. ' ' → logprob: -11.073972702026367
    7. '	pt' → logprob: -11.198972702026367
    8. '(pt' → logprob: -11.448972702026367
    9. '	data' → logprob: -12.198972702026367
    10. 'ptr' → logprob: -13.011472702026367

Token 300: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -9.996708104154095e-05
    2. 'data' → logprob: -9.750100135803223
    3. '.' → logprob: -10.125100135803223
    4. '<data' → logprob: -14.375100135803223
    5. ' data' → logprob: -15.000100135803223
    6. ' .' → logprob: -15.250100135803223
    7. '	data' → logprob: -16.750099182128906
    8. '.dat' → logprob: -17.125099182128906
    9. ' ' → logprob: -17.375099182128906
    10. '==' → logprob: -17.500099182128906

Token 301: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759450793266296
    2. '==' → logprob: -0.8259450793266296
    3. '=' → logprob: -13.200944900512695
    4. '>' → logprob: -13.825944900512695
    5. ')==' → logprob: -14.200944900512695
    6. '()==' → logprob: -14.575944900512695
    7. ' >' → logprob: -14.700944900512695
    8. '===' → logprob: -14.950944900512695
    9. '==
' → logprob: -15.075944900512695
    10. ' =' → logprob: -15.700944900512695

Token 302: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.20141372084617615
    2. 'data' → logprob: -1.7014137506484985
    3. ' ' → logprob: -15.951414108276367
    4. '	data' → logprob: -16.076414108276367
    5. '<data' → logprob: -17.451414108276367
    6. ')data' → logprob: -17.576414108276367
    7. 'Data' → logprob: -17.951414108276367
    8. '
' → logprob: -18.076414108276367
    9. '(data' → logprob: -18.076414108276367
    10. '[data' → logprob: -18.576414108276367

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6953015923500061
    2. ':
' → logprob: -0.6953015923500061
    3. '               ' → logprob: -6.445301532745361
    4. ':return' → logprob: -7.570301532745361
    5. '           ' → logprob: -10.69530200958252
    6. '):
' → logprob: -11.82030200958252
    7. ' :
' → logprob: -12.44530200958252
    8. ':

' → logprob: -12.44530200958252
    9. ' :' → logprob: -12.82030200958252
    10. ':
' → logprob: -13.07030200958252

Token 304: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009808859322220087
    2. ' return' → logprob: -7.250980854034424
    3. '           ' → logprob: -8.500981330871582
    4. '                
' → logprob: -11.500981330871582
    5. '                ' → logprob: -11.625981330871582
    6. 'return' → logprob: -11.750981330871582
    7. '              ' → logprob: -11.750981330871582
    8. ':
' → logprob: -12.125981330871582
    9. '                   ' → logprob: -12.250981330871582
    10. ':' → logprob: -12.250981330871582

Token 305: ' flag' (ID: 9641)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2463187277317047
    2. '               ' → logprob: -1.9963186979293823
    3. 'return' → logprob: -2.496318817138672
    4. ' flag' → logprob: -10.246318817138672
    5. 'flag' (adapté à ' flag') → logprob: -10.496318817138672
    6. ' break' → logprob: -10.871318817138672
    7. 'break' → logprob: -11.871318817138672
    8. ':return' → logprob: -12.246318817138672
    9. '                ' → logprob: -13.121318817138672
    10. '	return' → logprob: -13.371318817138672

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759623050689697
    2. '=' → logprob: -0.8259623050689697
    3. ' +=' → logprob: -11.45096206665039
    4. '=True' → logprob: -12.32596206665039
    5. ' ==' → logprob: -12.45096206665039
    6. '==' → logprob: -13.57596206665039
    7. '+=' → logprob: -13.70096206665039
    8. ' =
' → logprob: -14.57596206665039
    9. ' ' → logprob: -14.70096206665039
    10. '               ' → logprob: -15.57596206665039

Token 307: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011809427523985505
    2. ' ' → logprob: -6.751181125640869
    3. 'True' → logprob: -12.001180648803711
    4. ' True' → logprob: -12.376180648803711
    5. '           ' → logprob: -15.501180648803711
    6. '               ' → logprob: -16.12618064880371
    7. '   ' → logprob: -17.37618064880371
    8. '                   ' → logprob: -17.62618064880371
    9. 'true' → logprob: -18.12618064880371
    10. '=True' → logprob: -19.37618064880371

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.000000953674316
    3. 'True' → logprob: -15.000000953674316
    4. '   ' → logprob: -18.125001907348633
    5. '0' → logprob: -19.750001907348633
    6. ' True' → logprob: -20.375001907348633
    7. '
' → logprob: -20.500001907348633
    8. '2' → logprob: -20.875001907348633
    9. 'data' → logprob: -21.625001907348633
    10. '  ' → logprob: -22.125001907348633

Token 309: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.787507714354433e-05
    2. '           ' → logprob: -11.25004768371582
    3. '                ' → logprob: -11.62504768371582
    4. '              ' → logprob: -11.62504768371582
    5. '<|end|>' → logprob: -12.25004768371582
    6. '                
' → logprob: -12.37504768371582
    7. '                   ' → logprob: -12.87504768371582
    8. '             ' → logprob: -14.12504768371582
    9. '            ' → logprob: -14.12504768371582
    10. ',' → logprob: -14.37504768371582

Token 310: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011152983643114567
    2. '<|end|>' → logprob: -9.75011157989502
    3. '           ' → logprob: -10.75011157989502
    4. '                ' → logprob: -11.50011157989502
    5. '              ' → logprob: -11.87511157989502
    6. '                
' → logprob: -12.62511157989502
    7. ',' → logprob: -12.75011157989502
    8. '                   ' → logprob: -13.25011157989502
    9. '             ' → logprob: -13.62511157989502
    10. ' and' → logprob: -13.62511157989502

Token 311: ' print' (ID: 2123)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.6908779740333557
    2. ' break' → logprob: -0.9408779740333557
    3. '               ' → logprob: -2.440877914428711
    4. 'return' → logprob: -4.190877914428711
    5. ' return' → logprob: -5.065877914428711
    6. '           ' → logprob: -10.440877914428711
    7. '	break' → logprob: -10.815877914428711
    8. '                   ' → logprob: -13.940877914428711
    9. ' ' → logprob: -14.690877914428711
    10. 'print' (adapté à ' print') → logprob: -14.815877914428711

Token 312: '("' (ID: 568)
  Prédit: '(pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pt' → logprob: -0.02177160419523716
    2. '(' → logprob: -4.146771430969238
    3. '("' → logprob: -5.396771430969238
    4. '(data' → logprob: -7.771771430969238
    5. '('' → logprob: -7.896771430969238
    6. '("("' → logprob: -8.396771430969238
    7. '(True' → logprob: -9.646771430969238
    8. 'pt' → logprob: -10.521771430969238
    9. '(f' → logprob: -10.646771430969238
    10. '("(' → logprob: -10.896771430969238

Token 313: 'yes' (ID: 6763)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.2807921171188354
    2. 'found' → logprob: -2.030792236328125
    3. 'YES' → logprob: -2.280792236328125
    4. ' yes' → logprob: -2.530792236328125
    5. 'yes' → logprob: -2.530792236328125
    6. ' found' → logprob: -2.655792236328125
    7. ' Yes' → logprob: -3.280792236328125
    8. 'pt' → logprob: -3.280792236328125
    9. 'True' → logprob: -3.405792236328125
    10. 'Found' → logprob: -3.405792236328125

Token 314: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12707991898059845
    2. '")
' → logprob: -2.127079963684082
    3. ' ")' → logprob: -9.627079963684082
    4. '")
' → logprob: -10.252079963684082
    5. ' ")
' → logprob: -10.502079963684082
    6. ')' → logprob: -11.627079963684082
    7. '"' → logprob: -11.877079963684082
    8. '");' → logprob: -13.252079963684082
    9. '\n' → logprob: -13.502079963684082
    10. '")

' → logprob: -14.127079963684082

Token 315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.0219828002154827e-05
    2. '           ' → logprob: -11.125020027160645
    3. '              ' → logprob: -13.500020027160645
    4. '                
' → logprob: -13.875020027160645
    5. '                ' → logprob: -14.125020027160645
    6. '<|end|>' → logprob: -14.125020027160645
    7. '                   ' → logprob: -14.625020027160645
    8. '       ' → logprob: -15.125020027160645
    9. '             ' → logprob: -16.00002098083496
    10. ',' → logprob: -16.37502098083496

Token 316: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.036422405391931534
    2. 'return' → logprob: -3.4114224910736084
    3. ' return' → logprob: -5.911422252655029
    4. 'break' (adapté à ' break') → logprob: -9.911422729492188
    5. ' break' → logprob: -12.036422729492188
    6. '			' → logprob: -12.411422729492188
    7. '                
' → logprob: -13.786422729492188
    8. '           ' → logprob: -14.036422729492188
    9. '	return' → logprob: -14.161422729492188
    10. '              ' → logprob: -14.661422729492188

Token 317: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018470091745257378
    2. 'elif' → logprob: -6.501846790313721
    3. ' elif' → logprob: -8.001847267150879
    4. '            
' → logprob: -13.126847267150879
    5. '
' → logprob: -13.251847267150879
    6. '       ' → logprob: -13.376847267150879
    7. ' else' → logprob: -14.126847267150879
    8. '   ' → logprob: -14.126847267150879
    9. 'else' → logprob: -14.251847267150879
    10. '	elif' → logprob: -14.626847267150879

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021521867893170565
    2. 'elif' → logprob: -8.500215530395508
    3. ' elif' → logprob: -11.500215530395508
    4. '       ' → logprob: -14.875215530395508
    5. '		' → logprob: -14.875215530395508
    6. '            
' → logprob: -14.875215530395508
    7. 'else' → logprob: -15.750215530395508
    8. '
' → logprob: -16.625215530395508
    9. '               ' → logprob: -16.625215530395508
    10. '          ' → logprob: -17.125215530395508

Token 319: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.6828047037124634
    2. 'elif' (adapté à ' elif') → logprob: -1.1828047037124634
    3. '           ' → logprob: -1.6828047037124634
    4. ' if' → logprob: -6.807804584503174
    5. '       ' → logprob: -7.057804584503174
    6. 'else' → logprob: -8.557805061340332
    7. ' else' → logprob: -8.682805061340332
    8. 'if' → logprob: -9.432805061340332
    9. '   ' → logprob: -9.932805061340332
    10. '    ' → logprob: -10.807805061340332

Token 320: ' pt' (ID: 18961)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.6221074461936951
    2. 'data' → logprob: -1.2471075057983398
    3. ' pt' → logprob: -2.37210750579834
    4. 'pt' → logprob: -2.49710750579834
    5. ' ' → logprob: -9.24710750579834
    6. '   ' → logprob: -9.62210750579834
    7. '    ' → logprob: -11.12210750579834
    8. '  ' → logprob: -11.18460750579834
    9. '	pt' → logprob: -11.30960750579834
    10. '	data' → logprob: -11.62210750579834

Token 321: '.data' (ID: 3885)
  Prédit: '.data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.0003457136917859316
    2. 'data' → logprob: -9.000346183776855
    3. ' data' → logprob: -9.375346183776855
    4. '<data' → logprob: -9.625346183776855
    5. '.' → logprob: -10.000346183776855
    6. '<|end|>' → logprob: -11.625346183776855
    7. '	data' → logprob: -12.250346183776855
    8. '[data' → logprob: -12.500346183776855
    9. '(data' → logprob: -13.250346183776855
    10. ' ' → logprob: -13.250346183776855

Token 322: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.28712698817253113
    2. ' <' → logprob: -1.5371270179748535
    3. '>' → logprob: -3.5371270179748535
    4. '<' → logprob: -5.2871270179748535
    5. ' ' → logprob: -8.162126541137695
    6. '<data' → logprob: -8.912126541137695
    7. '   ' → logprob: -12.412126541137695
    8. ' >
' → logprob: -13.412126541137695
    9. ' is' → logprob: -14.162126541137695
    10. '    ' → logprob: -14.162126541137695

Token 323: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.31326186656951904
    2. ' data' → logprob: -1.313261866569519
    3. '	data' → logprob: -16.063261032104492
    4. '<data' → logprob: -16.563261032104492
    5. ')data' → logprob: -18.063261032104492
    6. '=data' → logprob: -18.063261032104492
    7. '(data' → logprob: -18.188261032104492
    8. ' ' → logprob: -18.313261032104492
    9. 'd' → logprob: -18.438261032104492
    10. 'Data' → logprob: -18.563261032104492

Token 324: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18239884078502655
    2. ':' → logprob: -1.807398796081543
    3. '               ' → logprob: -6.057398796081543
    4. '           ' → logprob: -8.807398796081543
    5. '):
' → logprob: -9.182398796081543
    6. ',' → logprob: -10.932398796081543
    7. ' :
' → logprob: -10.932398796081543
    8. ':

' → logprob: -12.307398796081543
    9. ' :' → logprob: -12.932398796081543
    10. '       ' → logprob: -12.932398796081543

Token 325: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010865535587072372
    2. '           ' → logprob: -5.510865688323975
    3. ' x' → logprob: -5.510865688323975
    4. ' pt' → logprob: -6.760865688323975
    5. '
' → logprob: -7.010865688323975
    6. ':
' → logprob: -8.385865211486816
    7. '                
' → logprob: -8.885865211486816
    8. ' 
' → logprob: -9.635865211486816
    9. 'pt' → logprob: -9.885865211486816
    10. '            
' → logprob: -10.010865211486816

Token 326: ' pt' (ID: 18961)
  Prédit: ' pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.002333782147616148
    2. 'pt' (adapté à ' pt') → logprob: -6.627333641052246
    3. '               ' → logprob: -7.502333641052246
    4. ' x' → logprob: -8.127333641052246
    5. '           ' → logprob: -9.252333641052246
    6. '	pt' → logprob: -10.252333641052246
    7. '
' → logprob: -11.752333641052246
    8. ' PT' → logprob: -12.252333641052246
    9. ' ' → logprob: -12.627333641052246
    10. ' 
' → logprob: -13.002333641052246

Token 327: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750484973192215
    2. '=' → logprob: -3.5297505855560303
    3. '.' → logprob: -17.90475082397461
    4. ' ' → logprob: -18.27975082397461
    5. '=data' → logprob: -18.65475082397461
    6. '＝' → logprob: -18.77975082397461
    7. '.left' → logprob: -19.52975082397461
    8. 'data' → logprob: -19.65475082397461
    9. '<|end|>' → logprob: -19.65475082397461
    10. ' =
' → logprob: -19.65475082397461

Token 328: ' pt' (ID: 18961)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.5759433507919312
    2. ' pt' → logprob: -0.8259433507919312
    3. '	pt' → logprob: -12.575942993164062
    4. '.pt' → logprob: -15.450942993164062
    5. '(pt' → logprob: -15.950942993164062
    6. 'p' → logprob: -17.075942993164062
    7. 'ptr' → logprob: -17.200942993164062
    8. '_pt' → logprob: -17.325942993164062
    9. 'pth' → logprob: -17.450942993164062
    10. 'prt' → logprob: -18.450942993164062

Token 329: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.511406809295295e-06
    2. '.right' → logprob: -12.500006675720215
    3. '.' → logprob: -12.875006675720215
    4. ' .' → logprob: -16.2500057220459
    5. '.Left' → logprob: -16.6250057220459
    6. 'left' → logprob: -17.8750057220459
    7. '	left' → logprob: -19.0000057220459
    8. '.le' → logprob: -19.8750057220459
    9. '[left' → logprob: -20.6250057220459
    10. '.LEFT' → logprob: -20.8750057220459

Token 330: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022410124074667692
    2. 'else' → logprob: -6.502241134643555
    3. ' else' → logprob: -7.252241134643555
    4. '
' → logprob: -11.127241134643555
    5. 'elif' → logprob: -11.627241134643555
    6. '            
' → logprob: -12.752241134643555
    7. ' elif' → logprob: -14.002241134643555
    8. '    
' → logprob: -14.252241134643555
    9. '\
' → logprob: -15.377241134643555
    10. '		' → logprob: -15.377241134643555

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016109124990180135
    2. 'else' → logprob: -7.12661075592041
    3. ' else' → logprob: -7.12661075592041
    4. 'elif' → logprob: -14.00161075592041
    5. '
' → logprob: -14.25161075592041
    6. '            
' → logprob: -15.00161075592041
    7. '		' → logprob: -15.75161075592041
    8. ' elif' → logprob: -16.001611709594727
    9. '       ' → logprob: -16.001611709594727
    10. '               ' → logprob: -16.251611709594727

Token 332: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4985505938529968
    2. 'else' (adapté à ' else') → logprob: -1.2485506534576416
    3. ' else' → logprob: -2.2485506534576416
    4. 'elif' → logprob: -9.748550415039062
    5. '
' → logprob: -10.373550415039062
    6. '	else' → logprob: -11.623550415039062
    7. '       ' → logprob: -11.998550415039062
    8. ' elif' → logprob: -12.123550415039062
    9. '   ' → logprob: -13.623550415039062
    10. ' 
' → logprob: -13.873550415039062

Token 333: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.758964478969574
    2. ':
' → logprob: -0.883964478969574
    3. ':' → logprob: -2.1339645385742188
    4. '           ' → logprob: -8.133964538574219
    5. '                   ' → logprob: -10.508964538574219
    6. ':
' → logprob: -12.633964538574219
    7. '              ' → logprob: -13.008964538574219
    8. ' :
' → logprob: -13.133964538574219
    9. '                ' → logprob: -13.383964538574219
    10. '       ' → logprob: -13.758964538574219

Token 334: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023253406397998333
    2. ' pt' → logprob: -6.377325534820557
    3. 'pt' → logprob: -7.502325534820557
    4. '           ' → logprob: -9.752325057983398
    5. '       ' → logprob: -12.377325057983398
    6. '	pt' → logprob: -12.752325057983398
    7. '              ' → logprob: -13.502325057983398
    8. '                   ' → logprob: -13.502325057983398
    9. '                ' → logprob: -14.252325057983398
    10. '   ' → logprob: -14.502325057983398

Token 335: ' pt' (ID: 18961)
  Prédit: ' pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.07893242686986923
    2. 'pt' (adapté à ' pt') → logprob: -2.578932523727417
    3. '               ' → logprob: -10.578932762145996
    4. '           ' → logprob: -11.328932762145996
    5. '	pt' → logprob: -12.453932762145996
    6. '(pt' → logprob: -14.703932762145996
    7. ' pts' → logprob: -15.328932762145996
    8. '                   ' → logprob: -15.703932762145996
    9. '.pt' → logprob: -16.07893180847168
    10. '_pt' → logprob: -16.45393180847168

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08191414177417755
    2. '=' → logprob: -2.581914186477661
    3. '.right' → logprob: -5.831913948059082
    4. '.data' → logprob: -9.706913948059082
    5. 'data' → logprob: -11.081913948059082
    6. 'right' → logprob: -12.206913948059082
    7. '=data' → logprob: -12.831913948059082
    8. '.pt' → logprob: -13.581913948059082
    9. 'pt' → logprob: -14.706913948059082
    10. '.left' → logprob: -14.831913948059082

Token 337: ' pt' (ID: 18961)
  Prédit: ' pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pt' → logprob: -0.2519303858280182
    2. 'pt' → logprob: -1.5019303560256958
    3. '	pt' → logprob: -13.626930236816406
    4. '(pt' → logprob: -17.001930236816406
    5. '.pt' → logprob: -18.251930236816406
    6. 'p' → logprob: -18.251930236816406
    7. '               ' → logprob: -18.626930236816406
    8. 'ptr' → logprob: -18.626930236816406
    9. ' ' → logprob: -18.876930236816406
    10. 'x' → logprob: -19.001930236816406

Token 338: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.580929347255733e-05
    2. 'right' → logprob: -11.125016212463379
    3. '.' → logprob: -14.125016212463379
    4. ' .' → logprob: -15.500016212463379
    5. '.r' → logprob: -16.625015258789062
    6. '.left' → logprob: -16.875015258789062
    7. '.data' → logprob: -18.125015258789062
    8. '	right' → logprob: -18.250015258789062
    9. '.Right' → logprob: -19.125015258789062
    10. '[right' → logprob: -19.125015258789062

Token 339: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00038705902989022434
    2. '       ' → logprob: -8.875387191772461
    3. 'else' → logprob: -9.250387191772461
    4. ' else' → logprob: -9.875387191772461
    5. '               ' → logprob: -10.000387191772461
    6. '            
' → logprob: -11.000387191772461
    7. '		' → logprob: -12.375387191772461
    8. '<|end|>' → logprob: -12.375387191772461
    9. '```' → logprob: -12.750387191772461
    10. '    
' → logprob: -12.750387191772461

Token 340: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002691936446353793
    2. '       ' → logprob: -6.252691745758057
    3. 'else' → logprob: -7.502691745758057
    4. ' else' → logprob: -8.877692222595215
    5. '               ' → logprob: -10.002692222595215
    6. 'return' → logprob: -11.752692222595215
    7. '   ' → logprob: -12.877692222595215
    8. '          ' → logprob: -13.127692222595215
    9. '```' → logprob: -13.252692222595215
    10. '​' → logprob: -13.502692222595215

Token 341: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11953133344650269
    2. 'if' (adapté à ' if') → logprob: -2.2445313930511475
    3. ' if' → logprob: -5.494531154632568
    4. 'else' → logprob: -5.994531154632568
    5. ' else' → logprob: -10.369531631469727
    6. '   ' → logprob: -10.619531631469727
    7. 'print' → logprob: -10.994531631469727
    8. '           ' → logprob: -12.494531631469727
    9. 'def' → logprob: -12.619531631469727
    10. '```' → logprob: -13.619531631469727

Token 342: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.38963136076927185
    2. 'flag' → logprob: -1.1396313905715942
    3. ' not' → logprob: -6.014631271362305
    4. 'not' → logprob: -8.139631271362305
    5. '(flag' → logprob: -11.014631271362305
    6. '	flag' → logprob: -12.514631271362305
    7. '   ' → logprob: -14.139631271362305
    8. ' ' → logprob: -15.014631271362305
    9. 'Flag' → logprob: -15.639631271362305
    10. '_flag' → logprob: -15.764631271362305

Token 343: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519332468509674
    2. ' ==' → logprob: -1.501933217048645
    3. '==
' → logprob: -13.251933097839355
    4. ')==' → logprob: -13.751933097839355
    5. '=' → logprob: -15.001933097839355
    6. '()==' → logprob: -15.126933097839355
    7. ']==' → logprob: -15.376933097839355
    8. '===' → logprob: -15.876933097839355
    9. '=="' → logprob: -16.126934051513672
    10. '==-' → logprob: -16.376934051513672

Token 344: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. '   ' → logprob: -14.633615493774414
    4. '  ' → logprob: -17.633615493774414
    5. '۰' → logprob: -18.633615493774414
    6. '
' → logprob: -18.696115493774414
    7. '０' → logprob: -18.696115493774414
    8. '```' → logprob: -18.696115493774414
    9. '=' → logprob: -18.883615493774414
    10. '    ' → logprob: -18.946115493774414

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.62510871887207
    4. '=' → logprob: -17.81260871887207
    5. '۰' → logprob: -18.00010871887207
    6. '1' → logprob: -18.12510871887207
    7. '
' → logprob: -18.31260871887207
    8. '０' → logprob: -18.43760871887207
    9. ' ' → logprob: -19.06260871887207
    10. '```' → logprob: -19.12510871887207

Token 346: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6271010637283325
    2. ':' → logprob: -0.8771010637283325
    3. '           ' → logprob: -3.002100944519043
    4. 'print' → logprob: -9.502100944519043
    5. '               ' → logprob: -10.002100944519043
    6. '       ' → logprob: -10.752100944519043
    7. ' print' → logprob: -11.127100944519043
    8. ' :
' → logprob: -11.252100944519043
    9. ' :' → logprob: -12.002100944519043
    10. ':

' → logprob: -12.127100944519043

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4887291193008423
    2. 'print' → logprob: -0.9887291193008423
    3. ' print' → logprob: -4.238729000091553
    4. '       ' → logprob: -9.363729476928711
    5. '               ' → logprob: -10.738729476928711
    6. '   ' → logprob: -11.863729476928711
    7. '	print' → logprob: -12.488729476928711
    8. '         ' → logprob: -14.863729476928711
    9. '	       ' → logprob: -15.613729476928711
    10. ' ' → logprob: -15.863729476928711

Token 348: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005243002902716398
    2. ' print' → logprob: -5.255242824554443
    3. '           ' → logprob: -12.380243301391602
    4. '       ' → logprob: -12.505243301391602
    5. '	print' → logprob: -13.880243301391602
    6. '   ' → logprob: -15.130243301391602
    7. '               ' → logprob: -16.6302433013916
    8. ' ' → logprob: -18.2552433013916
    9. '.print' → logprob: -18.7552433013916
    10. '(print' → logprob: -19.7552433013916

Token 349: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005248106550425291
    2. '(' → logprob: -5.255248069763184
    3. '('' → logprob: -11.255248069763184
    4. '("("' → logprob: -14.380248069763184
    5. ' ("' → logprob: -14.630248069763184
    6. '("(' → logprob: -15.505248069763184
    7. '"' → logprob: -16.5052490234375
    8. '(
' → logprob: -16.6302490234375
    9. '(""' → logprob: -16.7552490234375
    10. '("")' → logprob: -17.8802490234375

Token 350: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.00011343709047650918
    2. ' no' → logprob: -9.125113487243652
    3. '"' → logprob: -13.125113487243652
    4. 'No' → logprob: -14.125113487243652
    5. 'not' → logprob: -14.875113487243652
    6. 'none' → logprob: -15.250113487243652
    7. '	no' → logprob: -15.250113487243652
    8. '(no' → logprob: -15.375113487243652
    9. ' ' → logprob: -15.375113487243652
    10. ',no' → logprob: -15.500113487243652

Token 351: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -8.77627644513268e-06
    2. '")
' → logprob: -12.000008583068848
    3. ')' → logprob: -13.250008583068848
    4. ')")' → logprob: -14.125008583068848
    5. '")
' → logprob: -17.625009536743164
    6. '')' → logprob: -18.000009536743164
    7. '}")' → logprob: -18.250009536743164
    8. '”)' → logprob: -18.500009536743164
    9. '"' → logprob: -18.625009536743164
    10. ' ")' → logprob: -19.000009536743164

Token 352: '   ' (ID: 271)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.4130500555038452
    2. 'b' → logprob: -1.4130500555038452
    3. 'def' → logprob: -3.2880501747131348
    4. '   ' → logprob: -3.7880501747131348
    5. 'tree' → logprob: -4.538050174713135
    6. 'n' → logprob: -4.663050174713135
    7. 't' → logprob: -5.163050174713135
    8. 'for' → logprob: -5.663050174713135
    9. 'm' → logprob: -6.663050174713135
    10. 'data' → logprob: -7.163050174713135

Token 353: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.243846133351326
    2. 'def' (adapté à ' def') → logprob: -1.8688461780548096
    3. '<|end|>' → logprob: -3.4938461780548096
    4. 'n' → logprob: -4.7438459396362305
    5. '<|end|>' → logprob: -4.9938459396362305
    6. '
' → logprob: -4.9938459396362305
    7. 'bt' → logprob: -6.2438459396362305
    8. '    
' → logprob: -6.6188459396362305
    9. 'tree' → logprob: -6.7438459396362305
    10. '#' → logprob: -6.8688459396362305

Token 354: ' print' (ID: 2123)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.10651946812868118
    2. 'print' → logprob: -2.7315194606781006
    3. 'in' → logprob: -3.9815194606781006
    4. ' delete' → logprob: -4.98151969909668
    5. 'depth' → logprob: -5.73151969909668
    6. ' inorder' → logprob: -6.60651969909668
    7. 'height' → logprob: -6.98151969909668
    8. 'remove' → logprob: -7.23151969909668
    9. 'insert' → logprob: -7.35651969909668
    10. 'get' → logprob: -7.60651969909668

Token 355: '(self' (ID: 2402)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.9754096865653992
    2. 'In' → logprob: -1.475409746170044
    3. '_' → logprob: -1.975409746170044
    4. '()' → logprob: -2.600409746170044
    5. '_tree' → logprob: -2.850409746170044
    6. 'tree' → logprob: -3.225409746170044
    7. 'Tree' → logprob: -3.225409746170044
    8. 'order' → logprob: -5.100409507751465
    9. 'in' → logprob: -5.100409507751465
    10. '_pre' → logprob: -5.475409507751465

Token 356: '):
' (ID: 1883)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.960674524307251
    2. 'In' → logprob: -1.835674524307251
    3. '():' → logprob: -2.210674524307251
    4. 'order' → logprob: -2.835674524307251
    5. 'tree' → logprob: -3.085674524307251
    6. 'in' → logprob: -3.085674524307251
    7. '_in' → logprob: -3.335674524307251
    8. 'Tree' → logprob: -3.585674524307251
    9. '())' → logprob: -3.710674524307251
    10. ')' → logprob: -3.835674524307251

Token 357: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3519032001495361
    2. '("' → logprob: -1.4769032001495361
    3. ' self' → logprob: -1.7269032001495361
    4. '       ' → logprob: -1.8519032001495361
    5. 'self' → logprob: -2.476903200149536
    6. '(self' → logprob: -2.976903200149536
    7. '('' → logprob: -4.601902961730957
    8. '()' → logprob: -4.726902961730957
    9. ' ("' → logprob: -5.226902961730957
    10. ' inorder' → logprob: -5.601902961730957

Token 358: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9780352115631104
    2. 'in' → logprob: -1.3530352115631104
    3. '       ' → logprob: -1.7280352115631104
    4. ' if' → logprob: -2.3530352115631104
    5. ' inorder' → logprob: -3.2280352115631104
    6. 'self' → logprob: -4.228034973144531
    7. ' in' → logprob: -4.853034973144531
    8. 'pre' → logprob: -5.228034973144531
    9. 'lst' → logprob: -5.353034973144531
    10. ' self' → logprob: -5.728034973144531

Token 359: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0313234329223633
    2. '(self' → logprob: -1.0313234329223633
    3. '("' → logprob: -1.4063234329223633
    4. '('' → logprob: -3.5313234329223633
    5. '()' → logprob: -4.906323432922363
    6. ' (' → logprob: -6.281323432922363
    7. '([' → logprob: -6.656323432922363
    8. '("("' → logprob: -7.656323432922363
    9. ' ("' → logprob: -8.031323432922363
    10. '("[' → logprob: -8.406323432922363

Token 360: '","' (ID: 4294)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.03432587534189224
    2. '"in' → logprob: -4.159326076507568
    3. 'In' → logprob: -4.534326076507568
    4. '"' → logprob: -6.659326076507568
    5. ' inorder' → logprob: -6.784326076507568
    6. 'pre' → logprob: -6.784326076507568
    7. '"In' → logprob: -6.909326076507568
    8. 'IN' → logprob: -7.034326076507568
    9. '",' → logprob: -7.534326076507568
    10. ' in' → logprob: -7.659326076507568

Token 361: ' ".' (ID: 11730)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.34716033935546875
    2. ' ".' → logprob: -1.7221603393554688
    3. '".' → logprob: -3.2221603393554688
    4. 'In' → logprob: -3.4721603393554688
    5. '"in' → logprob: -3.9721603393554688
    6. 'IN' → logprob: -5.097160339355469
    7. '"' → logprob: -5.472160339355469
    8. '"In' → logprob: -5.847160339355469
    9. 'pre' → logprob: -6.222160339355469
    10. ' inorder' → logprob: -6.222160339355469

Token 362: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.200166469876422e-06
    2. 'print' → logprob: -12.250004768371582
    3. ' join' → logprob: -15.125004768371582
    4. '(join' → logprob: -16.3750057220459
    5. '.join' → logprob: -17.7500057220459
    6. 'jo' → logprob: -18.0000057220459
    7. 'sep' → logprob: -18.7500057220459
    8. 'split' → logprob: -19.0000057220459
    9. 'write' → logprob: -19.7500057220459
    10. 'strip' → logprob: -19.7500057220459

Token 363: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.016688747331500053
    2. '(str' → logprob: -4.266688823699951
    3. '(list' → logprob: -6.141688823699951
    4. '([' → logprob: -8.641688346862793
    5. '(self' → logprob: -9.391688346862793
    6. 'map' → logprob: -9.391688346862793
    7. '(' → logprob: -10.641688346862793
    8. ')' → logprob: -13.641688346862793
    9. 'list' → logprob: -14.141688346862793
    10. 'str' → logprob: -14.141688346862793

Token 364: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0001097417771234177
    2. 'str' → logprob: -9.125109672546387
    3. '[str' → logprob: -15.125109672546387
    4. '=str' → logprob: -15.375109672546387
    5. '```' → logprob: -16.000110626220703
    6. '   ' → logprob: -16.625110626220703
    7. '
' → logprob: -16.750110626220703
    8. ')' → logprob: -16.750110626220703
    9. '	str' → logprob: -17.125110626220703
    10. '(' → logprob: -17.500110626220703

Token 365: ',self' (ID: 54040)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08001802861690521
    2. ',self' → logprob: -2.5800180435180664
    3. ',' → logprob: -7.205018043518066
    4. 'self' → logprob: -8.080018043518066
    5. '(' → logprob: -10.705018043518066
    6. ')' → logprob: -10.955018043518066
    7. ',(' → logprob: -11.705018043518066
    8. '(
' → logprob: -11.830018043518066
    9. '[self' → logprob: -12.455018043518066
    10. ' (' → logprob: -12.580018043518066

Token 366: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.03331437334418297
    2. '.pre' → logprob: -3.6583144664764404
    3. '.in' → logprob: -5.033314228057861
    4. 'root' → logprob: -7.783314228057861
    5. '.' → logprob: -10.78331470489502
    6. ' .' → logprob: -11.28331470489502
    7. '   ' → logprob: -12.28331470489502
    8. ').' → logprob: -12.78331470489502
    9. '..' → logprob: -12.90831470489502
    10. 'In' → logprob: -13.28331470489502

Token 367: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.004080420359969139
    2. '.pre' → logprob: -5.504080295562744
    3. ').' → logprob: -13.879080772399902
    4. '.' → logprob: -14.879080772399902
    5. ' .' → logprob: -14.879080772399902
    6. '.left' → logprob: -16.629079818725586
    7. ' inorder' → logprob: -17.254079818725586
    8. '   ' → logprob: -17.379079818725586
    9. ')' → logprob: -17.754079818725586
    10. '.post' → logprob: -17.879079818725586

Token 368: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -3.583550642360933e-05
    2. 'in' → logprob: -10.250036239624023
    3. 'or' → logprob: -15.000036239624023
    4. 'oder' → logprob: -17.750036239624023
    5. '
' → logprob: -18.125036239624023
    6. '```' → logprob: -18.125036239624023
    7. '   ' → logprob: -18.250036239624023
    8. 'pre' → logprob: -19.125036239624023
    9. ' inorder' → logprob: -19.500036239624023
    10. '`' → logprob: -19.500036239624023

Token 369: '([]' (ID: 18742)
  Prédit: '([]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.004958123899996281
    2. '([' → logprob: -5.504958152770996
    3. '(' → logprob: -7.254958152770996
    4. '()))' → logprob: -10.379958152770996
    5. '([],' → logprob: -10.629958152770996
    6. '([])
' → logprob: -10.754958152770996
    7. '()' → logprob: -10.879958152770996
    8. '(List' → logprob: -10.879958152770996
    9. '(["' → logprob: -11.379958152770996
    10. '[]' → logprob: -11.504958152770996

Token 370: '))))' (ID: 57459)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8171936273574829
    2. '())))
' → logprob: -1.317193627357483
    3. '())))' → logprob: -1.817193627357483
    4. ')))' → logprob: -2.4421935081481934
    5. '()' → logprob: -3.5671935081481934
    6. ')))
' → logprob: -5.192193508148193
    7. '))),' → logprob: -6.317193508148193
    8. '))' → logprob: -6.442193508148193
    9. '())),
' → logprob: -7.192193508148193
    10. '))),
' → logprob: -7.317193508148193

Token 371: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31837111711502075
    2. '   ' → logprob: -1.693371057510376
    3. '<|end|>' → logprob: -2.568371057510376
    4. '    
' → logprob: -5.443371295928955
    5. '<|end|>' → logprob: -5.693371295928955
    6. '  
' → logprob: -6.943371295928955
    7. ')' → logprob: -7.318371295928955
    8. '       ' → logprob: -7.568371295928955
    9. 'def' → logprob: -7.693371295928955
    10. '

' → logprob: -7.818371295928955

Token 372: 'な' (ID: 5784)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5774169564247131
    2. 'print' → logprob: -1.8274168968200684
    3. '()
' → logprob: -2.0774168968200684
    4. ')' → logprob: -2.9524168968200684
    5. '       ' → logprob: -3.2024168968200684
    6. 'def' → logprob: -3.3274168968200684
    7. '
' → logprob: -4.952416896820068
    8. '   ' → logprob: -5.202416896820068
    9. '\n' → logprob: -5.452416896820068
    10. '()' → logprob: -5.952416896820068

Token 373: 'ぜ' (ID: 85774)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14168623089790344
    2. '       ' → logprob: -2.891686201095581
    3. '   ' → logprob: -3.641686201095581
    4. 't' → logprob: -4.01668643951416
    5. 'print' → logprob: -5.39168643951416
    6. 'ん' → logprob: -5.64168643951416
    7. '     ' → logprob: -5.89168643951416
    8. 'm' → logprob: -6.26668643951416
    9. ' def' → logprob: -6.26668643951416
    10. '    ' → logprob: -6.39168643951416

Token 374: 'か' (ID: 7128)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37161022424697876
    2. '()' → logprob: -1.496610164642334
    3. '<|end|>' → logprob: -3.871610164642334
    4. 'def' → logprob: -4.121610164642334
    5. 'の' → logprob: -5.246610164642334
    6. '<|end|>' → logprob: -5.496610164642334
    7. ' ' → logprob: -5.746610164642334
    8. '　' → logprob: -5.871610164642334
    9. '？' → logprob: -5.996610164642334
    10. '())' → logprob: -6.121610164642334

Token 375: 'join' (ID: 10891)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.694050669670105
    2. '<|end|>' → logprob: -1.944050669670105
    3. '()' → logprob: -2.0690507888793945
    4. '
' → logprob: -2.4440507888793945
    5. ')' → logprob: -2.8190507888793945
    6. '<|end|>' → logprob: -3.9440507888793945
    7. '       ' → logprob: -4.0690507888793945
    8. '()
' → logprob: -4.0690507888793945
    9. ' ' → logprob: -4.1940507888793945
    10. 'def' → logprob: -6.1940507888793945

Token 376: 'を' (ID: 7277)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1278415024280548
    2. '()
' → logprob: -2.2528414726257324
    3. '   ' → logprob: -5.377841472625732
    4. '       ' → logprob: -5.627841472625732
    5. '())' → logprob: -6.502841472625732
    6. '(self' → logprob: -6.877841472625732
    7. 'def' → logprob: -7.127841472625732
    8. ')' → logprob: -7.127841472625732
    9. '(' → logprob: -7.252841472625732
    10. '()\' → logprob: -7.377841472625732

Token 377: '使' (ID: 15159)
  Prédit: '使'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '使' → logprob: -0.09327229112386703
    2. '()' → logprob: -3.4682722091674805
    3. 'print' → logprob: -4.3432722091674805
    4. '使用' → logprob: -4.9682722091674805
    5. 'replace' → logprob: -5.0932722091674805
    6. ')' → logprob: -5.2182722091674805
    7. 'でき' → logprob: -5.4682722091674805
    8. '```' → logprob: -5.8432722091674805
    9. '続' → logprob: -6.2182722091674805
    10. '(print' → logprob: -6.3432722091674805

Token 378: 'った' (ID: 42917)
  Prédit: '用'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '用' → logprob: -0.10723099112510681
    2. 'う' → logprob: -3.1072309017181396
    3. 'って' → logprob: -3.8572309017181396
    4. 'え' → logprob: -4.107231140136719
    5. 'て' → logprob: -4.982231140136719
    6. 'print' → logprob: -5.107231140136719
    7. '```' → logprob: -6.232231140136719
    8. 'い' → logprob: -6.482231140136719
    9. 'def' → logprob: -7.482231140136719
    10. '   ' → logprob: -7.482231140136719

Token 379: 'ら' (ID: 8870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5351865887641907
    2. '
' → logprob: -1.785186529159546
    3. '<|end|>' → logprob: -1.910186529159546
    4. ')' → logprob: -3.535186529159546
    5. '<|end|>' → logprob: -4.035186767578125
    6. '()' → logprob: -4.285186767578125
    7. '()
' → logprob: -4.285186767578125
    8. 'def' → logprob: -4.660186767578125
    9. ')
' → logprob: -5.535186767578125
    10. '    
' → logprob: -5.910186767578125

Token 380: '速' (ID: 14293)
  Prédit: 'Syntax'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Syntax' → logprob: -0.5794519186019897
    2. ' Syntax' → logprob: -1.4544519186019897
    3. 'エ' → logprob: -2.0794520378112793
    4. 'Type' → logprob: -4.079452037811279
    5. 'print' → logprob: -4.454452037811279
    6. 'syntax' → logprob: -5.079452037811279
    7. ' print' → logprob: -5.454452037811279
    8. '   ' → logprob: -5.454452037811279
    9. ' syntax' → logprob: -5.579452037811279
    10. ')' → logprob: -5.704452037811279

Token 381: 'く' (ID: 10459)
  Prédit: 'た'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'た' → logprob: -1.5049058198928833
    2. 'て' → logprob: -1.5049058198928833
    3. 'り' → logprob: -2.6299057006835938
    4. '       ' → logprob: -3.0049057006835938
    5. '   ' → logprob: -3.1299057006835938
    6. 'す' → logprob: -3.3799057006835938
    7. 'る' → logprob: -3.3799057006835938
    8. 'ん' → logprob: -3.5049057006835938
    9. 'コード' → logprob: -3.5049057006835938
    10. 'く' → logprob: -3.6299057006835938

Token 382: 'な' (ID: 5784)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8481577038764954
    2. 'print' → logprob: -1.0981576442718506
    3. 'な' → logprob: -1.7231576442718506
    4. 'なる' → logprob: -3.8481576442718506
    5. '   ' → logprob: -4.22315788269043
    6. '```' → logprob: -5.47315788269043
    7. '()' → logprob: -6.22315788269043
    8. '#print' → logprob: -6.59815788269043
    9. '<|end|>' → logprob: -6.84815788269043
    10. ' print' → logprob: -6.84815788269043

Token 383: 'った' (ID: 42917)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.1427479088306427
    2. 'った' → logprob: -2.2677478790283203
    3. 'りました' → logprob: -3.7677478790283203
    4. 'り' → logprob: -5.76774787902832
    5. 'ります' → logprob: -6.39274787902832
    6. 'っ' → logprob: -6.76774787902832
    7. 'かった' → logprob: -9.26774787902832
    8. 'た' → logprob: -9.51774787902832
    9. 'って' → logprob: -9.89274787902832
    10. 'て' → logprob: -9.89274787902832

Token 384: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1121985986828804
    2. '
' → logprob: -2.8621985912323
    3. '<|end|>' → logprob: -3.4871985912323
    4. '<|end|>' → logprob: -4.487198829650879
    5. ')' → logprob: -6.237198829650879
    6. 'def' → logprob: -6.362198829650879
    7. '       ' → logprob: -7.487198829650879
    8. '    
' → logprob: -7.612198829650879
    9. '()' → logprob: -7.862198829650879
    10. ' def' → logprob: -7.987198829650879

Token 385: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2999127209186554
    2. '<|end|>' → logprob: -1.924912691116333
    3. '
' → logprob: -2.299912691116333
    4. '<|end|>' → logprob: -4.799912929534912
    5. 'def' → logprob: -6.424912929534912
    6. '    
' → logprob: -6.549912929534912
    7. ' def' → logprob: -7.924912929534912
    8. '```' → logprob: -8.049912452697754
    9. ' ' → logprob: -8.424912452697754
    10. '

' → logprob: -9.049912452697754

Token 386: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044192440807819366
    2. '   ' → logprob: -3.1691925525665283
    3. 'def' → logprob: -7.044192314147949
    4. 'print' (adapté à ' print') → logprob: -9.16919231414795
    5. '
' → logprob: -9.66919231414795
    6. ' def' → logprob: -10.16919231414795
    7. ' ' → logprob: -10.54419231414795
    8. 'b' → logprob: -11.29419231414795
    9. '           ' → logprob: -11.29419231414795
    10. '      ' → logprob: -11.54419231414795

Token 387: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.014091572724282742
    2. '(' → logprob: -4.389091491699219
    3. '(""' → logprob: -7.014091491699219
    4. '()' → logprob: -7.764091491699219
    5. '("")' → logprob: -8.514091491699219
    6. '("",' → logprob: -11.264091491699219
    7. '(("' → logprob: -11.639091491699219
    8. '(self' → logprob: -11.764091491699219
    9. '(
' → logprob: -11.889091491699219
    10. '("("' → logprob: -11.889091491699219

Token 388: '","' (ID: 4294)
  Prédit: '","'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '","' → logprob: -0.0024200105108320713
    2. ' ","' → logprob: -6.377419948577881
    3. '",' → logprob: -8.127420425415039
    4. '""' → logprob: -8.377420425415039
    5. '"' → logprob: -8.752420425415039
    6. '","","' → logprob: -11.377420425415039
    7. ' ""' → logprob: -11.377420425415039
    8. ' "' → logprob: -12.877420425415039
    9. 'pre' → logprob: -13.752420425415039
    10. ' ' → logprob: -14.127420425415039

Token 389: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0225151777267456
    2. '".' → logprob: -1.0225151777267456
    3. ' ".' → logprob: -1.2725151777267456
    4. '.join' → logprob: -8.272515296936035
    5. '.' → logprob: -9.272515296936035
    6. ' "' → logprob: -10.147515296936035
    7. '"."' → logprob: -10.147515296936035
    8. 'join' → logprob: -10.397515296936035
    9. ' "".' → logprob: -11.522515296936035
    10. '",".' → logprob: -11.772515296936035

Token 390: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -9.088346359931165e-07
    2. '(join' → logprob: -14.625000953674316
    3. '.join' → logprob: -14.750000953674316
    4. ' join' → logprob: -17.625
    5. 'print' → logprob: -18.25
    6. 'jo' → logprob: -18.75
    7. '.' → logprob: -19.125
    8. '"' → logprob: -19.125
    9. 'str' → logprob: -20.125
    10. '(' → logprob: -20.125

Token 391: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.1472419600977446e-06
    2. 'map' → logprob: -14.000000953674316
    3. '(list' → logprob: -15.250000953674316
    4. '(str' → logprob: -17.250001907348633
    5. '(' → logprob: -17.375001907348633
    6. ',map' → logprob: -18.750001907348633
    7. '(m' → logprob: -19.500001907348633
    8. ' (' → logprob: -20.000001907348633
    9. ' map' → logprob: -20.625001907348633
    10. '	map' → logprob: -21.000001907348633

Token 392: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0002060436672763899
    2. 'str' → logprob: -8.625205993652344
    3. '=str' → logprob: -11.250205993652344
    4. '(' → logprob: -11.625205993652344
    5. '[str' → logprob: -12.625205993652344
    6. '	str' → logprob: -14.500205993652344
    7. ' str' → logprob: -14.750205993652344
    8. ')' → logprob: -16.375205993652344
    9. ',str' → logprob: -16.375205993652344
    10. '.str' → logprob: -17.000205993652344

Token 393: ',self' (ID: 54040)
  Prédit: ',self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',self' → logprob: -0.014303239993751049
    2. '(self' → logprob: -4.264303207397461
    3. 'self' → logprob: -9.014303207397461
    4. ',' → logprob: -11.014303207397461
    5. '[self' → logprob: -13.889303207397461
    6. '(' → logprob: -15.139303207397461
    7. ',(' → logprob: -15.889303207397461
    8. ' self' → logprob: -16.51430320739746
    9. '	self' → logprob: -16.63930320739746
    10. ' ,' → logprob: -16.63930320739746

Token 394: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0028093906585127115
    2. 'root' → logprob: -5.877809524536133
    3. 'self' → logprob: -12.627809524536133
    4. ' root' → logprob: -14.752809524536133
    5. '.' → logprob: -15.002809524536133
    6. '[root' → logprob: -15.877809524536133
    7. '	root' → logprob: -16.127809524536133
    8. ' .' → logprob: -16.377809524536133
    9. '=root' → logprob: -16.377809524536133
    10. '(root' → logprob: -17.002809524536133

Token 395: '.pre' (ID: 10008)
  Prédit: '.pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pre' → logprob: -1.9361264946837764e-07
    2. 'pre' → logprob: -16.125
    3. ' .' → logprob: -18.5
    4. '.p' → logprob: -18.875
    5. '	pre' → logprob: -20.25
    6. 'Pre' → logprob: -20.625
    7. ' preorder' → logprob: -21.0
    8. '.Pre' → logprob: -21.25
    9. '.' → logprob: -21.5
    10. '.preprocessing' → logprob: -21.625

Token 396: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: 0.0
    2. 'pre' → logprob: -18.25
    3. 'oder' → logprob: -18.375
    4. 'or' → logprob: -19.625
    5. ' order' → logprob: -19.625
    6. 'root' → logprob: -19.875
    7. 'o' → logprob: -20.375
    8. '(order' → logprob: -20.375
    9. '_order' → logprob: -20.625
    10. 'ordre' → logprob: -20.75

Token 397: '([]' (ID: 18742)
  Prédit: '([]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -2.816093228830141e-06
    2. '([],' → logprob: -14.12500286102295
    3. '([' → logprob: -14.37500286102295
    4. '([])
' → logprob: -14.62500286102295
    5. '[]' → logprob: -14.62500286102295
    6. '(' → logprob: -15.12500286102295
    7. ' ([]' → logprob: -15.50000286102295
    8. '([]);
' → logprob: -17.000001907348633
    9. '=[]' → logprob: -17.250001907348633
    10. '([]);

' → logprob: -17.625001907348633

Token 398: '))))

' (ID: 161772)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.005489283241331577
    2. '())))' → logprob: -5.380489349365234
    3. '))))' → logprob: -7.255489349365234
    4. '))' → logprob: -9.380489349365234
    5. '()' → logprob: -10.630489349365234
    6. ')' → logprob: -10.755489349365234
    7. '()))' → logprob: -11.005489349365234
    8. ' ' → logprob: -11.630489349365234
    9. ')))
' → logprob: -12.630489349365234
    10. '   ' → logprob: -14.005489349365234

Token 399: 'bt' (ID: 16051)
  Prédit: 'bt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.2665479779243469
    2. 'b' → logprob: -2.016547918319702
    3. 'tree' → logprob: -2.891547918319702
    4. 't' → logprob: -4.141548156738281
    5. 'T' → logprob: -4.391548156738281
    6. 'for' → logprob: -5.016548156738281
    7. 'def' → logprob: -5.141548156738281
    8. 'if' → logprob: -7.016548156738281
    9. 'B' → logprob: -7.516548156738281
    10. 'BT' → logprob: -7.641548156738281

Token 400: 'ree' (ID: 908)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3918081223964691
    2. '.insert' → logprob: -1.7668081521987915
    3. '=' → logprob: -2.266808032989502
    4. '.' → logprob: -3.266808032989502
    5. 'ree' → logprob: -4.516808032989502
    6. '.=' → logprob: -8.01680850982666
    7. '   ' → logprob: -9.39180850982666
    8. '.append' → logprob: -10.01680850982666
    9. 'insert' → logprob: -10.76680850982666
    10. ' ' → logprob: -11.26680850982666

Token 401: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17816683650016785
    2. '.insert' → logprob: -1.9281668663024902
    3. '=' → logprob: -4.55316686630249
    4. ' =' → logprob: -5.05316686630249
    5. '.=' → logprob: -8.053166389465332
    6. ' .' → logprob: -9.178166389465332
    7. '().' → logprob: -9.303166389465332
    8. ')' → logprob: -9.678166389465332
    9. ').' → logprob: -10.178166389465332
    10. ' ' → logprob: -10.178166389465332

Token 402: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0007099286303855479
    2. ' B' → logprob: -7.2507100105285645
    3. ' ' → logprob: -19.875709533691406
    4. '	B' → logprob: -20.500709533691406
    5. 'BT' → logprob: -22.000709533691406
    6. 'b' → logprob: -22.500709533691406
    7. '   ' → logprob: -22.500709533691406
    8. '_B' → logprob: -22.625709533691406
    9. '  ' → logprob: -22.875709533691406
    10. 'Ｂ' → logprob: -23.125709533691406

Token 403: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.008635961450636387
    2. 'tree' → logprob: -4.758635997772217
    3. 'T' → logprob: -11.383635520935059
    4. 'ree' → logprob: -11.633635520935059
    5. 't' → logprob: -13.883635520935059
    6. 'Node' → logprob: -16.258636474609375
    7. '(Tree' → logprob: -16.758636474609375
    8. 'TREE' → logprob: -17.633636474609375
    9. 'r' → logprob: -18.008636474609375
    10. ' Tree' → logprob: -18.133636474609375

Token 404: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11149889975786209
    2. '
' → logprob: -2.7364988327026367
    3. '<|end|>' → logprob: -3.2364988327026367
    4. ' for' → logprob: -7.111498832702637
    5. '<|end|>' → logprob: -7.611498832702637
    6. '

' → logprob: -10.611498832702637
    7. '()' → logprob: -10.861498832702637
    8. '()
' → logprob: -11.236498832702637
    9. 'n' → logprob: -11.361498832702637
    10. '0' → logprob: -12.361498832702637

Token 405: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.107425062713446e-06
    2. ' for' → logprob: -12.000006675720215
    3. 'data' → logprob: -14.375006675720215
    4. '<|end|>' → logprob: -15.000006675720215
    5. 'node' → logprob: -17.12500762939453
    6. 'nodes' → logprob: -17.50000762939453
    7. 'idx' → logprob: -18.62500762939453
    8. '	for' → logprob: -18.75000762939453
    9. 'index' → logprob: -18.75000762939453
    10. 'token' → logprob: -18.87500762939453

Token 406: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47488680481910706
    2. '=' → logprob: -0.9748867750167847
    3. 'inue' → logprob: -8.099886894226074
    4. 'for' → logprob: -8.974886894226074
    5. ' ' → logprob: -9.099886894226074
    6. 'r' → logprob: -9.849886894226074
    7. '＝' → logprob: -9.849886894226074
    8. '1' → logprob: -10.849886894226074
    9. '_' → logprob: -11.224886894226074
    10. '0' → logprob: -11.349886894226074

Token 407: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006134323193691671
    2. ' ' → logprob: -8.12561321258545
    3. '1' → logprob: -8.37561321258545
    4. 'int' → logprob: -9.87561321258545
    5. '{}' → logprob: -10.62561321258545
    6. 'n' → logprob: -12.12561321258545
    7. 'len' → logprob: -13.00061321258545
    8. '{' → logprob: -13.75061321258545
    9. '[int' → logprob: -15.00061321258545
    10. '{}
' → logprob: -15.00061321258545

Token 408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007133854669518769
    2. '1' → logprob: -7.500713348388672
    3. 'int' → logprob: -9.375713348388672
    4. '{}' → logprob: -9.625713348388672
    5. 'n' → logprob: -12.375713348388672
    6. ' ' → logprob: -13.250713348388672
    7. 'len' → logprob: -14.125713348388672
    8. '{' → logprob: -14.250713348388672
    9. '{}
' → logprob: -14.500713348388672
    10. 'dict' → logprob: -14.625713348388672

Token 409: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03249713033437729
    2. 'while' → logprob: -3.6574971675872803
    3. ' for' → logprob: -5.282496929168701
    4. '<|end|>' → logprob: -8.28249740600586
    5. ' while' → logprob: -8.53249740600586
    6. ')' → logprob: -8.78249740600586
    7. 'data' → logprob: -8.90749740600586
    8. '
' → logprob: -9.53249740600586
    9. 'def' → logprob: -9.53249740600586
    10. 'if' → logprob: -9.78249740600586

Token 410: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027021344751119614
    2. 'while' → logprob: -3.6520214080810547
    3. 'nodes' → logprob: -7.527021408081055
    4. 'node' → logprob: -9.527021408081055
    5. 'data' → logprob: -9.777021408081055
    6. 'arr' → logprob: -11.652021408081055
    7. 'com' → logprob: -12.402021408081055
    8. 'num' → logprob: -12.402021408081055
    9. 'tree' → logprob: -12.527021408081055
    10. 'idx' → logprob: -12.652021408081055

Token 411: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7337468862533569
    2. 'com' → logprob: -2.1087470054626465
    3. 'data' → logprob: -2.3587470054626465
    4. 'c' → logprob: -3.1087470054626465
    5. '_com' → logprob: -3.3587470054626465
    6. 'COM' → logprob: -3.3587470054626465
    7. 'cmd' → logprob: -3.6087470054626465
    8. '_' → logprob: -3.7337470054626465
    9. '_data' → logprob: -3.9837470054626465
    10. ' i' → logprob: -4.1087470054626465

Token 412: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10025713592767715
    2. 'in' → logprob: -2.350257158279419
    3. 'range' → logprob: -10.85025691986084
    4. ',' → logprob: -11.22525691986084
    5. ' ' → logprob: -12.35025691986084
    6. '   ' → logprob: -12.97525691986084
    7. '	in' → logprob: -13.60025691986084
    8. ' ,' → logprob: -13.72525691986084
    9. ',in' → logprob: -13.85025691986084
    10. 'n' → logprob: -13.97525691986084

Token 413: ' range' (ID: 3352)
  Prédit: 'COM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.6007444858551025
    2. 'range' → logprob: -0.8507444858551025
    3. ' range' → logprob: -3.7257444858551025
    4. ' COM' → logprob: -7.850744247436523
    5. 'com' → logprob: -11.975744247436523
    6. '(COM' → logprob: -12.350744247436523
    7. '(range' → logprob: -13.475744247436523
    8. 'CO' → logprob: -14.600744247436523
    9. 'COMM' → logprob: -14.975744247436523
    10. 'Range' → logprob: -15.100744247436523

Token 414: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007561430102214217
    2. '(' → logprob: -8.12575626373291
    3. '(cnt' → logprob: -8.37575626373291
    4. '(len' → logprob: -9.00075626373291
    5. ' (' → logprob: -9.75075626373291
    6. '(range' → logprob: -10.12575626373291
    7. 'n' → logprob: -12.50075626373291
    8. ' n' → logprob: -13.00075626373291
    9. ' range' → logprob: -14.12575626373291
    10. 'range' → logprob: -14.62575626373291

Token 415: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31362417340278625
    2. '):
' → logprob: -1.3136241436004639
    3. ' ):' → logprob: -8.813624382019043
    4. '   ' → logprob: -9.813624382019043
    5. '):
' → logprob: -10.063624382019043
    6. ')' → logprob: -10.188624382019043
    7. ' ):
' → logprob: -10.313624382019043
    8. ':' → logprob: -10.438624382019043
    9. '+' → logprob: -12.063624382019043
    10. ',' → logprob: -12.688624382019043

Token 416: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1614280939102173
    2. ' if' → logprob: -1.7864280939102173
    3. 'node' → logprob: -1.7864280939102173
    4. '   ' → logprob: -2.0364279747009277
    5. 'data' → logprob: -2.2864279747009277
    6. ' node' → logprob: -3.0364279747009277
    7. 'x' → logprob: -3.6614279747009277
    8. ' data' → logprob: -4.286427974700928
    9. 'a' → logprob: -4.661427974700928
    10. ' x' → logprob: -5.411427974700928

Token 417: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9912798404693604
    2. 'node' → logprob: -1.4912798404693604
    3. 'data' → logprob: -1.7412798404693604
    4. 'z' → logprob: -1.8662798404693604
    5. 'cmd' → logprob: -3.7412798404693604
    6. 'x' → logprob: -3.9912798404693604
    7. 'a' → logprob: -5.116279602050781
    8. 'num' → logprob: -5.491279602050781
    9. 'com' → logprob: -5.616279602050781
    10. 'd' → logprob: -5.741279602050781

Token 418: ' COM' (ID: 10434)
  Prédit: 'COM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.0129034873098135
    2. ' COM' → logprob: -4.637903690338135
    3. 'int' → logprob: -6.137903690338135
    4. 'len' → logprob: -7.762903690338135
    5. ' int' → logprob: -8.387903213500977
    6. 'cnt' → logprob: -9.012903213500977
    7. '(COM' → logprob: -9.387903213500977
    8. ' len' → logprob: -10.262903213500977
    9. '   ' → logprob: -10.512903213500977
    10. 'i' → logprob: -11.137903213500977

Token 419: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010207541286945343
    2. '[cnt' → logprob: -4.635207653045654
    3. '[' → logprob: -7.760207653045654
    4. '[count' → logprob: -11.010207176208496
    5. 'cnt' → logprob: -12.510207176208496
    6. ' [' → logprob: -13.135207176208496
    7. '[I' → logprob: -14.010207176208496
    8. '[counter' → logprob: -14.635207176208496
    9. '[len' → logprob: -15.010207176208496
    10. '[c' → logprob: -15.135207176208496

Token 420: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.055361755192279816
    2. '[' → logprob: -2.930361747741699
    3. ' ][' → logprob: -8.3053617477417
    4. ']' → logprob: -9.3053617477417
    5. ']==' → logprob: -9.6803617477417
    6. '[i' → logprob: -10.1803617477417
    7. '==' → logprob: -12.0553617477417
    8. ']!=' → logprob: -12.5553617477417
    9. ']][' → logprob: -12.9303617477417
    10. ' [' → logprob: -12.9303617477417

Token 421: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005781737272627652
    2. '1' → logprob: -7.5005784034729
    3. ' ' → logprob: -11.375577926635742
    4. '2' → logprob: -12.625577926635742
    5. ']' → logprob: -13.063077926635742
    6. ''' → logprob: -13.313077926635742
    7. 'cnt' → logprob: -13.875577926635742
    8. ':' → logprob: -14.000577926635742
    9. '"' → logprob: -14.250577926635742
    10. '#' → logprob: -14.813077926635742

Token 422: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5497942566871643
    2. '==' → logprob: -1.2997941970825195
    3. ']==' → logprob: -2.4247941970825195
    4. ' ==' → logprob: -3.0497941970825195
    5. '[' → logprob: -4.7997941970825195
    6. ']=='' → logprob: -6.2997941970825195
    7. ' ]' → logprob: -6.7997941970825195
    8. ')' → logprob: -6.7997941970825195
    9. ']=="' → logprob: -7.5497941970825195
    10. '=="' → logprob: -7.5497941970825195

Token 423: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007945514284074306
    2. ' ==' → logprob: -5.507945537567139
    3. '=="' → logprob: -5.882945537567139
    4. '=='' → logprob: -7.257945537567139
    5. '=' → logprob: -8.50794506072998
    6. '[' → logprob: -9.38294506072998
    7. 'in' → logprob: -10.25794506072998
    8. '!=' → logprob: -10.63294506072998
    9. ' in' → logprob: -12.25794506072998
    10. '===' → logprob: -12.75794506072998

Token 424: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5990511775016785
    2. '"I' → logprob: -1.3490512371063232
    3. ''' → logprob: -1.9740512371063232
    4. ''I' → logprob: -2.9740512371063232
    5. ''i' → logprob: -8.224051475524902
    6. '"A' → logprob: -8.599051475524902
    7. 'I' → logprob: -8.724051475524902
    8. ''in' → logprob: -8.849051475524902
    9. ''A' → logprob: -8.849051475524902
    10. 'insert' → logprob: -10.099051475524902

Token 425: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.14469633996486664
    2. '"' → logprob: -2.5196962356567383
    3. 'i' → logprob: -3.0196962356567383
    4. '"in' → logprob: -6.394696235656738
    5. ''' → logprob: -6.519696235656738
    6. 'Insert' → logprob: -7.269696235656738
    7. '"I' → logprob: -7.394696235656738
    8. ''i' → logprob: -7.894696235656738
    9. ''in' → logprob: -8.019696235656738
    10. '"+"' → logprob: -10.144696235656738

Token 426: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.07590559870004654
    2. '":' → logprob: -2.7009055614471436
    3. '"' → logprob: -5.700905799865723
    4. '"):
' → logprob: -6.450905799865723
    5. '"]:
' → logprob: -7.825905799865723
    6. '):
' → logprob: -8.575905799865723
    7. ':
' → logprob: -8.825905799865723
    8. '":
' → logprob: -8.950905799865723
    9. '"):' → logprob: -10.450905799865723
    10. ':' → logprob: -10.575905799865723

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3720741271972656
    2. ':
' → logprob: -1.2470741271972656
    3. ':' → logprob: -3.8720741271972656
    4. ' :
' → logprob: -6.997074127197266
    5. ' cnt' → logprob: -8.122074127197266
    6. '):
' → logprob: -8.497074127197266
    7. '   ' → logprob: -8.747074127197266
    8. '
' → logprob: -9.122074127197266
    9. '	' → logprob: -9.122074127197266
    10. ',' → logprob: -9.622074127197266

Token 428: ' node' (ID: 4596)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.8788607120513916
    2. 'bt' → logprob: -1.6288607120513916
    3. 'x' → logprob: -1.8788607120513916
    4. 'node' (adapté à ' node') → logprob: -2.2538607120513916
    5. 'cnt' → logprob: -2.7538607120513916
    6. 'data' → logprob: -3.6288607120513916
    7. 'num' → logprob: -4.6288604736328125
    8. ' z' → logprob: -4.7538604736328125
    9. 'val' → logprob: -4.7538604736328125
    10. 'tmp' → logprob: -5.8788604736328125

Token 429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133339285850525
    2. '=' → logprob: -1.3133339881896973
    3. '=int' → logprob: -10.688333511352539
    4. 'data' → logprob: -11.313333511352539
    5. 'Node' → logprob: -12.188333511352539
    6. '=node' → logprob: -12.188333511352539
    7. ' ' → logprob: -12.563333511352539
    8. '=data' → logprob: -12.938333511352539
    9. '(Node' → logprob: -13.063333511352539
    10. 'bt' → logprob: -13.188333511352539

Token 430: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0019286326132714748
    2. ' Node' → logprob: -6.251928806304932
    3. '	Node' → logprob: -17.876928329467773
    4. 'int' → logprob: -19.126928329467773
    5. ' ' → logprob: -20.626928329467773
    6. '   ' → logprob: -21.126928329467773
    7. '_Node' → logprob: -22.501928329467773
    8. '  ' → logprob: -22.876928329467773
    9. '.Node' → logprob: -23.126928329467773
    10. 'node' → logprob: -23.376928329467773

Token 431: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760289430618286
    2. '(int' → logprob: -0.8260289430618286
    3. ' int' → logprob: -9.326028823852539
    4. '[int' → logprob: -15.826028823852539
    5. '=int' → logprob: -16.20102882385254
    6. ' (' → logprob: -16.82602882385254
    7. '	int' → logprob: -16.95102882385254
    8. '(' → logprob: -17.07602882385254
    9. ',int' → logprob: -17.57602882385254
    10. '   ' → logprob: -17.70102882385254

Token 432: '(COM' (ID: 161242)
  Prédit: '(COM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(COM' → logprob: -1.1756367712223437e-05
    2. 'COM' → logprob: -11.375011444091797
    3. '(C' → logprob: -16.875011444091797
    4. '(' → logprob: -17.250011444091797
    5. ')' → logprob: -17.750011444091797
    6. '(CON' → logprob: -18.000011444091797
    7. '(com' → logprob: -18.250011444091797
    8. ')(' → logprob: -18.750011444091797
    9. ' COM' → logprob: -18.750011444091797
    10. '.COM' → logprob: -19.500011444091797

Token 433: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'COM' → logprob: -15.5
    3. '[' → logprob: -17.25
    4. 'i' → logprob: -18.875
    5. '(i' → logprob: -19.125
    6. ' [' → logprob: -20.625
    7. '{i' → logprob: -21.0
    8. ')[' → logprob: -21.25
    9. '```' → logprob: -21.375
    10. '[I' → logprob: -21.375

Token 434: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38705554604530334
    2. '[i' → logprob: -1.137055516242981
    3. '][' → logprob: -8.637055397033691
    4. ' [' → logprob: -12.137055397033691
    5. ')[' → logprob: -14.262055397033691
    6. '   ' → logprob: -14.637055397033691
    7. '[][' → logprob: -16.262056350708008
    8. '[++' → logprob: -16.887056350708008
    9. '	' → logprob: -17.012056350708008
    10. ' ' → logprob: -17.137056350708008

Token 435: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019126241386402398
    2. '2' → logprob: -8.625191688537598
    3. ' ' → logprob: -12.000191688537598
    4. '[' → logprob: -12.750191688537598
    5. '   ' → logprob: -13.125191688537598
    6. '```' → logprob: -15.750191688537598
    7. '
' → logprob: -15.875191688537598
    8. '``' → logprob: -16.50019073486328
    9. '    
' → logprob: -17.00019073486328
    10. '3' → logprob: -17.25019073486328

Token 436: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20168571174144745
    2. '))
' → logprob: -1.7016856670379639
    3. ']))' → logprob: -8.826685905456543
    4. ')))' → logprob: -9.826685905456543
    5. ']))
' → logprob: -10.201685905456543
    6. ')' → logprob: -11.826685905456543
    7. ')))
' → logprob: -11.826685905456543
    8. '))
' → logprob: -11.951685905456543
    9. '[' → logprob: -12.701685905456543
    10. '])' → logprob: -13.201685905456543

Token 437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03234802186489105
    2. 'bt' → logprob: -3.5323479175567627
    3. ' b' → logprob: -6.532348155975342
    4. 'b' → logprob: -7.532348155975342
    5. ' bt' → logprob: -7.532348155975342
    6. '   ' → logprob: -10.282347679138184
    7. '	b' → logprob: -11.657347679138184
    8. '	bt' → logprob: -12.032347679138184
    9. '
' → logprob: -12.157347679138184
    10. ' ' → logprob: -12.532347679138184

Token 438: ' b' (ID: 287)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -1.8670179997570813e-05
    2. '       ' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.875019073486328
    4. ' bt' → logprob: -14.750019073486328
    5. 'b' (adapté à ' b') → logprob: -14.875019073486328
    6. 'bst' → logprob: -16.000019073486328
    7. 'cnt' → logprob: -16.750019073486328
    8. '        
' → logprob: -18.625019073486328
    9. '
' → logprob: -18.625019073486328
    10. ' b' → logprob: -19.250019073486328

Token 439: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -3.8889261304575484e-06
    2. 't' → logprob: -12.500003814697266
    3. 'tre' → logprob: -16.625003814697266
    4. 'node' → logprob: -18.375003814697266
    5. 'bt' → logprob: -18.875003814697266
    6. 'tee' → logprob: -18.875003814697266
    7. 'Tree' → logprob: -19.500003814697266
    8. 'tr' → logprob: -20.000003814697266
    9. 'try' → logprob: -20.500003814697266
    10. 'type' → logprob: -20.500003814697266

Token 440: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -1.0445127372804563e-05
    2. '.' → logprob: -11.50001049041748
    3. 'insert' → logprob: -16.375009536743164
    4. '.append' → logprob: -17.000009536743164
    5. '.put' → logprob: -17.875009536743164
    6. ' .' → logprob: -18.375009536743164
    7. '.Insert' → logprob: -18.625009536743164
    8. '.install' → logprob: -18.750009536743164
    9. '.in' → logprob: -19.125009536743164
    10. '.enqueue' → logprob: -19.875009536743164

Token 441: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -17.75
    4. 'node' → logprob: -19.375
    5. '(n' → logprob: -19.625
    6. '(
' → logprob: -20.125
    7. ',node' → logprob: -20.125
    8. '(Node' → logprob: -20.375
    9. '[node' → logprob: -21.25
    10. '(note' → logprob: -21.5

Token 442: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.429896944202483e-05
    2. ')
' → logprob: -10.500043869018555
    3. '<|end|>' → logprob: -11.750043869018555
    4. '   ' → logprob: -12.750043869018555
    5. '       ' → logprob: -13.250043869018555
    6. ' )' → logprob: -13.750043869018555
    7. '<|end|>' → logprob: -14.000043869018555
    8. ')return' → logprob: -14.125043869018555
    9. ')n' → logprob: -14.250043869018555
    10. '
' → logprob: -15.875043869018555

Token 443: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.721228368813172e-05
    2. 'for' → logprob: -10.625086784362793
    3. 'cnt' → logprob: -11.000086784362793
    4. ' for' → logprob: -11.375086784362793
    5. ' ' → logprob: -11.625086784362793
    6. '       ' → logprob: -11.875086784362793
    7. 'elif' → logprob: -12.000086784362793
    8. '<|end|>' → logprob: -12.500086784362793
    9. '
' → logprob: -13.375086784362793
    10. '  ' → logprob: -13.500086784362793

Token 444: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.00047928967978805304
    2. 'elif' → logprob: -7.750479221343994
    3. ' cnt' → logprob: -10.250479698181152
    4. 'count' → logprob: -12.375479698181152
    5. '   ' → logprob: -13.250479698181152
    6. 'bt' → logprob: -13.500479698181152
    7. '	cnt' → logprob: -13.625479698181152
    8. 'continue' → logprob: -13.750479698181152
    9. '       ' → logprob: -13.875479698181152
    10. 'ct' → logprob: -14.375479698181152

Token 445: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10044226795434952
    2. ' +=' → logprob: -2.3504421710968018
    3. '=' → logprob: -8.475441932678223
    4. '+' → logprob: -10.600441932678223
    5. ']+=' → logprob: -13.725441932678223
    6. ' =' → logprob: -14.350441932678223
    7. '+='' → logprob: -15.725441932678223
    8. '+="' → logprob: -16.22544288635254
    9. '+=(' → logprob: -16.97544288635254
    10. '++' → logprob: -17.10044288635254

Token 446: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. 'int' → logprob: -17.750009536743164
    4. '0' → logprob: -18.250009536743164
    5. '１' → logprob: -18.750009536743164
    6. '   ' → logprob: -19.000009536743164
    7. '+' → logprob: -20.375009536743164
    8. 'len' → logprob: -20.750009536743164
    9. '```' → logprob: -20.750009536743164
    10. '-' → logprob: -20.812509536743164

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. 'int' → logprob: -18.625
    4. '１' → logprob: -19.25
    5. '0' → logprob: -19.625
    6. 'len' → logprob: -20.6875
    7. '<|end|>' → logprob: -20.9375
    8. '```' → logprob: -21.3125
    9. '100' → logprob: -21.75
    10. '۱' → logprob: -21.8125

Token 448: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11280366778373718
    2. '<|end|>' → logprob: -2.3628036975860596
    3. 'elif' → logprob: -5.6128034591674805
    4. '<|end|>' → logprob: -5.7378034591674805
    5. ' elif' → logprob: -5.8628034591674805
    6. '	elif' → logprob: -6.7378034591674805
    7. '
' → logprob: -7.6128034591674805
    8. '    
' → logprob: -8.73780345916748
    9. ' ' → logprob: -8.86280345916748
    10. '.' → logprob: -9.11280345916748

Token 449: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016122236847877502
    2. 'elif' → logprob: -7.126612186431885
    3. 'else' → logprob: -7.501612186431885
    4. 'for' → logprob: -9.376612663269043
    5. ' elif' → logprob: -9.376612663269043
    6. ' else' → logprob: -9.626612663269043
    7. ' for' → logprob: -11.626612663269043
    8. '<|end|>' → logprob: -12.126612663269043
    9. '	elif' → logprob: -12.876612663269043
    10. '```' → logprob: -14.001612663269043

Token 450: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.697023332118988
    2. 'elif' (adapté à ' elif') → logprob: -0.697023332118988
    3. ' else' → logprob: -6.197023391723633
    4. ' elif' → logprob: -6.322023391723633
    5. '   ' → logprob: -10.572023391723633
    6. 'if' → logprob: -11.572023391723633
    7. '```' → logprob: -14.572023391723633
    8. ' ' → logprob: -14.947023391723633
    9. 'for' → logprob: -15.322023391723633
    10. '	elif' → logprob: -15.447023391723633

Token 451: ' COM' (ID: 10434)
  Prédit: 'COM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.008626160211861134
    2. ' COM' → logprob: -4.7586259841918945
    3. '(COM' → logprob: -11.508625984191895
    4. 'com' → logprob: -13.758625984191895
    5. '_COM' → logprob: -15.508625984191895
    6. '.COM' → logprob: -16.00862693786621
    7. '   ' → logprob: -16.63362693786621
    8. 'COMM' → logprob: -16.88362693786621
    9. ' ' → logprob: -17.00862693786621
    10. 'COMMAND' → logprob: -17.75862693786621

Token 452: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023247575387358665
    2. '[' → logprob: -3.773247480392456
    3. '[I' → logprob: -14.023247718811035
    4. ' [' → logprob: -14.773247718811035
    5. '==' → logprob: -15.648247718811035
    6. '[
' → logprob: -16.14824676513672
    7. '[int' → logprob: -16.27324676513672
    8. ' ' → logprob: -16.52324676513672
    9. '[index' → logprob: -17.14824676513672
    10. '=' → logprob: -17.14824676513672

Token 453: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.735893965815194e-05
    2. '==' → logprob: -11.750017166137695
    3. '][' → logprob: -11.750017166137695
    4. ' [' → logprob: -14.375017166137695
    5. '[i' → logprob: -15.375017166137695
    6. ' ==' → logprob: -16.000017166137695
    7. '=' → logprob: -16.000017166137695
    8. ')[' → logprob: -16.250017166137695
    9. '```' → logprob: -16.375017166137695
    10. 'elif' → logprob: -17.000017166137695

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004291965160518885
    2. '"' → logprob: -5.629292011260986
    3. '[' → logprob: -7.504292011260986
    4. '1' → logprob: -9.379291534423828
    5. ' ' → logprob: -10.129291534423828
    6. ''' → logprob: -11.629291534423828
    7. '[i' → logprob: -12.629291534423828
    8. '
' → logprob: -14.004291534423828
    9. '   ' → logprob: -14.129291534423828
    10. ' "' → logprob: -14.629291534423828

Token 455: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.474186509847641
    2. '==' → logprob: -0.9741865396499634
    3. '=="' → logprob: -10.099186897277832
    4. ']==' → logprob: -10.849186897277832
    5. '=' → logprob: -11.099186897277832
    6. ')==' → logprob: -11.474186897277832
    7. '===' → logprob: -12.099186897277832
    8. ' =="' → logprob: -12.099186897277832
    9. ')' → logprob: -12.349186897277832
    10. '=='' → logprob: -12.974186897277832

Token 456: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5768189430236816
    2. '==' → logprob: -0.8268189430236816
    3. '=="' → logprob: -7.076818943023682
    4. '=' → logprob: -10.701818466186523
    5. ' =="' → logprob: -11.701818466186523
    6. ' =' → logprob: -13.701818466186523
    7. '"' → logprob: -14.076818466186523
    8. '===' → logprob: -14.326818466186523
    9. '=='' → logprob: -14.326818466186523
    10. '[' → logprob: -15.201818466186523

Token 457: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0022456541191786528
    2. ' "' → logprob: -6.1272454261779785
    3. ''' → logprob: -10.377245903015137
    4. ' ' → logprob: -11.002245903015137
    5. '   ' → logprob: -12.252245903015137
    6. '"value' → logprob: -12.752245903015137
    7. '"in' → logprob: -14.502245903015137
    8. '  ' → logprob: -14.502245903015137
    9. '"go' → logprob: -14.752245903015137
    10. '"display' → logprob: -14.752245903015137

Token 458: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.10166598111391068
    2. 'print' → logprob: -2.35166597366333
    3. '"' → logprob: -6.85166597366333
    4. ' find' → logprob: -8.226666450500488
    5. 'search' → logprob: -9.226666450500488
    6. ' print' → logprob: -11.226666450500488
    7. 'delete' → logprob: -11.851666450500488
    8. ''' → logprob: -12.351666450500488
    9. 'extract' → logprob: -12.476666450500488
    10. 'pre' → logprob: -13.351666450500488

Token 459: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.08341500163078308
    2. '":' → logprob: -2.5834150314331055
    3. ':
' → logprob: -5.9584150314331055
    4. '":
' → logprob: -7.3334150314331055
    5. '"' → logprob: -7.4584150314331055
    6. ':' → logprob: -8.083415031433105
    7. '"):
' → logprob: -9.583415031433105
    8. '):
' → logprob: -9.583415031433105
    9. '__":
' → logprob: -9.833415031433105
    10. '       ' → logprob: -10.208415031433105

Token 460: '       ' (ID: 309)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -0.08196697384119034
    2. '       ' → logprob: -2.9569668769836426
    3. 'int' → logprob: -3.9569668769836426
    4. 'b' → logprob: -5.206966876983643
    5. ' b' → logprob: -6.581966876983643
    6. ' bt' → logprob: -8.0819673538208
    7. 'bst' → logprob: -8.3319673538208
    8. '	b' → logprob: -9.4569673538208
    9. 'node' → logprob: -10.5819673538208
    10. '
' → logprob: -11.3319673538208

Token 461: ' b' (ID: 287)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -2.0219828002154827e-05
    2. 'bst' → logprob: -11.000020027160645
    3. '       ' → logprob: -13.625020027160645
    4. 'b' (adapté à ' b') → logprob: -13.750020027160645
    5. 'node' → logprob: -14.750020027160645
    6. 'int' → logprob: -15.250020027160645
    7. 'print' → logprob: -15.375020027160645
    8. ' bt' → logprob: -15.750020027160645
    9. '   ' → logprob: -16.25002098083496
    10. 'bit' → logprob: -17.12502098083496

Token 462: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -3.4121114822482923e-06
    2. 't' → logprob: -12.750003814697266
    3. 'tre' → logprob: -15.000003814697266
    4. 'Tree' → logprob: -17.750003814697266
    5. 'try' → logprob: -18.000003814697266
    6. 'trees' → logprob: -18.000003814697266
    7. 'ree' → logprob: -18.375003814697266
    8. 'bt' → logprob: -18.500003814697266
    9. 'TREE' → logprob: -18.625003814697266
    10. '#' → logprob: -18.750003814697266

Token 463: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -3.650518920039758e-06
    2. '.' → logprob: -12.625003814697266
    3. 'find' → logprob: -15.375003814697266
    4. '.findall' → logprob: -17.625003814697266
    5. ' .' → logprob: -18.125003814697266
    6. '.print' → logprob: -18.375003814697266
    7. '.search' → logprob: -18.750003814697266
    8. '().' → logprob: -19.375003814697266
    9. '=find' → logprob: -19.750003814697266
    10. ').' → logprob: -20.000003814697266

Token 464: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014163628220558167
    2. 'int' → logprob: -4.264163494110107
    3. ' int' → logprob: -16.139163970947266
    4. '[int' → logprob: -17.514163970947266
    5. '=int' → logprob: -17.639163970947266
    6. '	int' → logprob: -18.514163970947266
    7. '(' → logprob: -18.639163970947266
    8. '<int' → logprob: -19.014163970947266
    9. '   ' → logprob: -20.514163970947266
    10. ':int' → logprob: -20.764163970947266

Token 465: '(COM' (ID: 161242)
  Prédit: '(COM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(COM' → logprob: -1.9361264946837764e-07
    2. 'COM' → logprob: -16.25
    3. '(CON' → logprob: -18.375
    4. '(C' → logprob: -19.375
    5. ' COM' → logprob: -21.625
    6. '.COM' → logprob: -21.75
    7. '(com' → logprob: -22.25
    8. '(' → logprob: -23.875
    9. '((' → logprob: -24.125
    10. '(CL' → logprob: -24.5

Token 466: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.980854959692806e-05
    2. 'COM' → logprob: -9.750069618225098
    3. '(i' → logprob: -12.000069618225098
    4. '[' → logprob: -12.250069618225098
    5. '(COM' → logprob: -15.250069618225098
    6. ')' → logprob: -16.250070571899414
    7. '.COM' → logprob: -16.375070571899414
    8. 'com' → logprob: -17.750070571899414
    9. '.com' → logprob: -18.000070571899414
    10. 'i' → logprob: -18.125070571899414

Token 467: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.478889215737581e-05
    2. '][' → logprob: -10.000054359436035
    3. '[i' → logprob: -11.625054359436035
    4. '   ' → logprob: -15.500054359436035
    5. ' [' → logprob: -16.12505531311035
    6. '```' → logprob: -17.25005531311035
    7. ']' → logprob: -17.25005531311035
    8. ')[' → logprob: -17.50005531311035
    9. '1' → logprob: -17.75005531311035
    10. '       ' → logprob: -18.87505531311035

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -15.75
    3. ' ' → logprob: -16.625
    4. '[i' → logprob: -17.375
    5. '   ' → logprob: -17.875
    6. '[' → logprob: -18.125
    7. '(i' → logprob: -18.625
    8. '2' → logprob: -18.875
    9. '
' → logprob: -19.5
    10. '0' → logprob: -19.75

Token 469: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011365237878635526
    2. '))
' → logprob: -6.876136302947998
    3. ')' → logprob: -9.251136779785156
    4. '()))' → logprob: -12.751136779785156
    5. ' ))' → logprob: -13.626136779785156
    6. '))

' → logprob: -14.001136779785156
    7. ')))' → logprob: -14.251136779785156
    8. '   ' → logprob: -14.376136779785156
    9. '       ' → logprob: -14.751136779785156
    10. '])' → logprob: -15.126136779785156

Token 470: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009677992202341557
    2. 'elif' → logprob: -7.250967979431152
    3. '<|end|>' → logprob: -9.375967979431152
    4. 'else' → logprob: -9.750967979431152
    5. ' ' → logprob: -9.875967979431152
    6. 'bt' → logprob: -10.625967979431152
    7. 'for' → logprob: -11.500967979431152
    8. 'if' → logprob: -11.875967979431152
    9. '```' → logprob: -12.375967979431152
    10. '  ' → logprob: -12.375967979431152

Token 471: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5738574266433716
    2. '   ' → logprob: -1.0738574266433716
    3. ' else' → logprob: -2.823857307434082
    4. 'elif' → logprob: -3.448857307434082
    5. ' elif' → logprob: -5.573857307434082
    6. '	elif' → logprob: -12.323857307434082
    7. '	else' → logprob: -12.823857307434082
    8. ' ' → logprob: -13.073857307434082
    9. 'elseif' → logprob: -16.5738582611084
    10. '  ' → logprob: -16.5738582611084

Token 472: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008041306398808956
    2. ':
' → logprob: -5.2580413818359375
    3. 'if' → logprob: -7.1330413818359375
    4. '       ' → logprob: -7.2580413818359375
    5. ' if' → logprob: -7.2580413818359375
    6. '   ' → logprob: -8.133041381835938
    7. ' :' → logprob: -9.758041381835938
    8. '=' → logprob: -9.883041381835938
    9. ' =' → logprob: -10.508041381835938
    10. ' ==' → logprob: -10.633041381835938

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.793258786201477
    2. '   ' → logprob: -0.918258786201477
    3. 'bt' → logprob: -2.4182586669921875
    4. ' b' → logprob: -3.5432586669921875
    5. ' if' → logprob: -4.4182586669921875
    6. 'if' → logprob: -4.5432586669921875
    7. ' bt' → logprob: -5.4182586669921875
    8. 'b' → logprob: -6.6682586669921875
    9. ' ' → logprob: -6.9182586669921875
    10. '	b' → logprob: -7.6682586669921875

Token 474: ' b' (ID: 287)
  Prédit: 'bt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bt' → logprob: -8.41866585687967e-06
    2. ' b' → logprob: -12.125008583068848
    3. 'b' (adapté à ' b') → logprob: -13.250008583068848
    4. '   ' → logprob: -14.250008583068848
    5. ' bt' → logprob: -15.000008583068848
    6. 'bst' → logprob: -16.37500762939453
    7. '       ' → logprob: -17.25000762939453
    8. ' ' → logprob: -18.00000762939453
    9. 'bc' → logprob: -18.25000762939453
    10. '  ' → logprob: -18.62500762939453

Token 475: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -4.596781946020201e-05
    2. 't' → logprob: -10.000045776367188
    3. 'tre' → logprob: -14.625045776367188
    4. 'try' → logprob: -18.125045776367188
    5. 'trees' → logprob: -18.375045776367188
    6. 'Tree' → logprob: -18.625045776367188
    7. 'tee' → logprob: -18.875045776367188
    8. 'tr' → logprob: -19.250045776367188
    9. '(tree' → logprob: -19.250045776367188
    10. 'type' → logprob: -19.500045776367188

Token 476: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -7.588793960167095e-05
    2. '.' → logprob: -9.500076293945312
    3. 'print' → logprob: -14.000076293945312
    4. '.println' → logprob: -16.500076293945312
    5. ' .' → logprob: -16.750076293945312
    6. '.pr' → logprob: -19.125076293945312
    7. '#print' → logprob: -19.250076293945312
    8. '.Print' → logprob: -19.625076293945312
    9. ').' → logprob: -19.750076293945312
    10. '.p' → logprob: -20.125076293945312

Token 477: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.107425062713446e-06
    2. '()
' → logprob: -12.875006675720215
    3. ' ()' → logprob: -13.750006675720215
    4. '()`' → logprob: -13.750006675720215
    5. '()

' → logprob: -14.500006675720215
    6. '()<' → logprob: -15.250006675720215
    7. '().' → logprob: -15.750006675720215
    8. '();' → logprob: -15.750006675720215
    9. '()">' → logprob: -15.875006675720215
    10. '())' → logprob: -16.00000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 475
Tokens correctement prédits (1ère position, stricte): 212
Tokens correctement prédits (1ère position, avec adaptation): 242
Tokens correctement prédits (top 10): 412
Précision stricte (1ère position): 44.63%
Précision adaptée (1ère position): 50.95%
Précision (top 10): 86.74%
================================================================================
