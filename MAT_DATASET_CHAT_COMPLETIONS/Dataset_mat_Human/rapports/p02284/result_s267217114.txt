================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Node:

    def __init__(self, key: int) -> None:
        self.key = key
        self.parent = None
        self.left = None
        self.right = None

def input_line() -> (str, int):
    line = input().split()
    if line[0] == 'insert':
        return line[0], int(line[1])
    elif line[0] == 'find':
        return line[0], int(line[1])
    else:
        return line[0], None

def preorder(tree: Node) -> None:
    """先行順巡回。"""
    print(f' {tree.key}', end='')
    if tree.left is not None:
        preorder(tree.left)
    if tree.right is not None:
        preorder(tree.right)

def inorder(tree: Node) -> None:
    """中間順巡回。"""
    if tree.left is not None:
        inorder(tree.left)
    print(f' {tree.key}', end='')
    if tree.right is not None:
        inorder(tree.right)

def insert(new_node: Node) -> None:
    """二分探索木に挿入する。"""

    # rootはglobalに共有する。
    global root

    # new_nodeを付け加える節(parent)の初期値をNoneに設定する。
    parent = None

    # tmpにrootを設定する。
    tmp = root

    # new_nodeを付け加える節(parent)を探索する。
    while tmp is not None:
        parent = tmp
        if new_node.key < tmp.key:
            tmp = tmp.left
        else:
            tmp = tmp.right

    # new_nodeの親を設定する。
    new_node.parent = parent

    # new_nodeの子供を設定する。
    if parent is None:
        # treeが空だった場合は、rootにnew_nodeを設定する。
        root = new_node
    elif new_node.key < parent.key:
        parent.left = new_node
    else:
        parent.right = new_node

def find(key)-> bool:

    global root

    # tmpにrootを設定する。
    tmp = root

    # new_nodeを付け加える節(parent)を探索する。
    while tmp is not None:
        if key == tmp.key:
            return True
        elif key < tmp.key:
            tmp = tmp.left
        else:
            tmp = tmp.right

    return False

root = None  # treeの根を表す。初期値はNone。
N = int(input())
for _i in range(N):
    order, val = input_line()
    if order == 'insert':
        node = Node(val)
        insert(node)
    elif order == 'print':
        inorder(root)
        print()
        preorder(root)
        print()
    elif order == 'find':
        if find(val):
            print('yes')
        else:
            print('no')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Node' (ID: 10882)
  → Token d'amorce (pas de prédiction)

Token 2: ':

' (ID: 1402)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0772143080830574
    2. '```' → logprob: -3.202214241027832
    3. '   ' → logprob: -4.327214241027832
    4. '(' → logprob: -4.827214241027832
    5. '():' → logprob: -5.327214241027832
    6. ':
' → logprob: -6.202214241027832
    7. '.' → logprob: -7.327214241027832
    8. ' :' → logprob: -7.577214241027832
    9. '(
' → logprob: -7.702214241027832
    10. '()' → logprob: -7.702214241027832

Token 4: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.033174384385347366
    2. ' def' → logprob: -4.033174514770508
    3. '   ' → logprob: -4.783174514770508
    4. '```' → logprob: -5.908174514770508
    5. '__' → logprob: -6.658174514770508
    6. '(' → logprob: -7.033174514770508
    7. ' ' → logprob: -7.783174514770508
    8. '`' → logprob: -7.908174514770508
    9. 'class' → logprob: -7.908174514770508
    10. '    ' → logprob: -9.033174514770508

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07226189970970154
    2. ' __' → logprob: -2.9472618103027344
    3. '__' → logprob: -4.447261810302734
    4. '    ' → logprob: -6.447261810302734
    5. ' def' → logprob: -7.322261810302734
    6. ' ```' → logprob: -7.322261810302734
    7. '  ' → logprob: -7.447261810302734
    8. '_' → logprob: -7.947261810302734
    9. '```' → logprob: -8.322261810302734
    10. ' ' → logprob: -8.322261810302734

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. ' init' → logprob: -13.500001907348633
    3. 'ini' → logprob: -16.500001907348633
    4. '_init' → logprob: -17.250001907348633
    5. '	init' → logprob: -18.375001907348633
    6. 'inite' → logprob: -19.875001907348633
    7. 'i' → logprob: -20.125001907348633
    8. 'in' → logprob: -20.375001907348633
    9. '```' → logprob: -20.375001907348633
    10. 'int' → logprob: -20.625001907348633

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.32950952649116516
    2. '__' → logprob: -1.3295094966888428
    3. '(' → logprob: -4.829509735107422
    4. '_' → logprob: -4.954509735107422
    5. '__(
' → logprob: -7.579509735107422
    6. '(self' → logprob: -8.079509735107422
    7. '_(' → logprob: -8.829509735107422
    8. '__((' → logprob: -10.454509735107422
    9. '```' → logprob: -10.954509735107422
    10. '___' → logprob: -10.954509735107422

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.921253225300461e-05
    2. ' self' → logprob: -9.625069618225098
    3. ')' → logprob: -12.875069618225098
    4. '(self' → logprob: -14.750069618225098
    5. 'sel' → logprob: -17.50006866455078
    6. ',self' → logprob: -17.62506866455078
    7. '       ' → logprob: -17.87506866455078
    8. ' ' → logprob: -17.87506866455078
    9. ' )' → logprob: -18.12506866455078
    10. '_self' → logprob: -18.12506866455078

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6277763843536377
    2. ')' → logprob: -1.3777763843536377
    3. 'self' → logprob: -2.2527763843536377
    4. '<|end|>' → logprob: -2.8777763843536377
    5. ' ,' → logprob: -4.127776145935059
    6. '):' → logprob: -4.502776145935059
    7. '(self' → logprob: -5.002776145935059
    8. ' )' → logprob: -5.127776145935059
    9. '(' → logprob: -5.752776145935059
    10. ' ' → logprob: -6.377776145935059

Token 10: ' key' (ID: 2140)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016468435525894165
    2. ' self' → logprob: -4.266468524932861
    3. 'data' → logprob: -6.266468524932861
    4. 'value' → logprob: -8.266468048095703
    5. ' data' → logprob: -9.141468048095703
    6. ' value' → logprob: -11.016468048095703
    7. 'val' → logprob: -11.266468048095703
    8. 'parent' → logprob: -12.141468048095703
    9. ')' → logprob: -13.766468048095703
    10. ' val' → logprob: -14.016468048095703

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22822561860084534
    2. ')' → logprob: -2.2282257080078125
    3. ',' → logprob: -2.3532257080078125
    4. ':' → logprob: -7.8532257080078125
    5. '):
' → logprob: -7.8532257080078125
    6. '<|end|>' → logprob: -8.603225708007812
    7. '=' → logprob: -9.228225708007812
    8. '   ' → logprob: -9.728225708007812
    9. ' ,' → logprob: -10.228225708007812
    10. ')=' → logprob: -11.478225708007812

Token 12: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7096537351608276
    2. 'int' → logprob: -1.3346537351608276
    3. ' )' → logprob: -1.8346537351608276
    4. ' ' → logprob: -3.709653854370117
    5. ' str' → logprob: -3.709653854370117
    6. '<|end|>' → logprob: -4.584653854370117
    7. ' int' → logprob: -4.709653854370117
    8. ''' → logprob: -5.709653854370117
    9. 'str' → logprob: -6.209653854370117
    10. '   ' → logprob: -6.209653854370117

Token 13: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4513612985610962
    2. ')' → logprob: -1.3263612985610962
    3. ',' → logprob: -2.3263611793518066
    4. '):
' → logprob: -10.076361656188965
    5. '),' → logprob: -10.826361656188965
    6. ')->' → logprob: -11.326361656188965
    7. ':' → logprob: -11.326361656188965
    8. '<|end|>' → logprob: -11.326361656188965
    9. '   ' → logprob: -11.701361656188965
    10. ')>' → logprob: -11.826361656188965

Token 14: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005486076232045889
    2. '):' → logprob: -5.255486011505127
    3. '():' → logprob: -8.880486488342285
    4. ':**' → logprob: -10.630486488342285
    5. ' :' → logprob: -10.880486488342285
    6. ')' → logprob: -11.005486488342285
    7. '       ' → logprob: -11.130486488342285
    8. ',' → logprob: -11.380486488342285
    9. ':return' → logprob: -12.380486488342285
    10. '`:' → logprob: -12.380486488342285

Token 15: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.011173378676176071
    2. 'None' → logprob: -4.511173248291016
    3. ' ' → logprob: -9.011173248291016
    4. ' Node' → logprob: -13.136173248291016
    5. ' int' → logprob: -14.136173248291016
    6. '_None' → logprob: -15.511173248291016
    7. ' none' → logprob: -15.511173248291016
    8. '  ' → logprob: -15.886173248291016
    9. 'Node' → logprob: -16.261173248291016
    10. '(None' → logprob: -17.261173248291016

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005538671393878758
    2. '):' → logprob: -8.125554084777832
    3. '       ' → logprob: -8.625554084777832
    4. '():' → logprob: -11.375554084777832
    5. ':
' → logprob: -11.375554084777832
    6. '<|end|>' → logprob: -11.375554084777832
    7. '   ' → logprob: -11.500554084777832
    8. ' :' → logprob: -12.125554084777832
    9. '```' → logprob: -12.125554084777832
    10. ',' → logprob: -12.375554084777832

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003701139474287629
    2. 'self' → logprob: -6.378701210021973
    3. '   ' → logprob: -7.003701210021973
    4. ' ' → logprob: -8.253701210021973
    5. '    ' → logprob: -8.628701210021973
    6. ':' → logprob: -8.753701210021973
    7. ' self' → logprob: -9.128701210021973
    8. '<|end|>' → logprob: -9.378701210021973
    9. '      ' → logprob: -9.628701210021973
    10. '        ' → logprob: -10.253701210021973

Token 18: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03964696452021599
    2. ' self' → logprob: -3.539646863937378
    3. '       ' → logprob: -4.914647102355957
    4. ' ' → logprob: -6.414647102355957
    5. 's' → logprob: -8.414647102355957
    6. ' ' → logprob: -8.664647102355957
    7. '   ' → logprob: -8.664647102355957
    8. '_' → logprob: -8.914647102355957
    9. ''s' → logprob: -10.039647102355957
    10. '        ' → logprob: -11.039647102355957

Token 19: '.key' (ID: 8839)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0047516957856714725
    2. '.key' → logprob: -5.379751682281494
    3. ' .' → logprob: -9.504752159118652
    4. '.value' → logprob: -10.754752159118652
    5. '.data' → logprob: -11.254752159118652
    6. '.Key' → logprob: -12.629752159118652
    7. ' ' → logprob: -13.004752159118652
    8. '.keys' → logprob: -13.254752159118652
    9. '.next' → logprob: -13.379752159118652
    10. '._' → logprob: -13.379752159118652

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763011574745178
    2. '=' → logprob: -0.8263011574745178
    3. ' ' → logprob: -8.201301574707031
    4. '<|end|>' → logprob: -9.576301574707031
    5. ')' → logprob: -13.076301574707031
    6. '_' → logprob: -13.201301574707031
    7. '.' → logprob: -13.451301574707031
    8. ' =
' → logprob: -13.451301574707031
    9. ',' → logprob: -13.701301574707031
    10. '    ' → logprob: -13.701301574707031

Token 21: ' key' (ID: 2140)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006756102200597525
    2. ' key' → logprob: -5.13175630569458
    3. ' None' → logprob: -7.50675630569458
    4. 'key' → logprob: -8.756755828857422
    5. '  ' → logprob: -10.131755828857422
    6. ' )' → logprob: -11.006755828857422
    7. '<|end|>' → logprob: -11.631755828857422
    8. ' "' → logprob: -11.881755828857422
    9. '_key' → logprob: -12.131755828857422
    10. 'None' → logprob: -12.381755828857422

Token 22: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3324402868747711
    2. '<|end|>' → logprob: -1.4574402570724487
    3. '\n' → logprob: -3.7074403762817383
    4. ')' → logprob: -5.332440376281738
    5. '.' → logprob: -5.457440376281738
    6. ',' → logprob: -5.707440376281738
    7. ':' → logprob: -5.707440376281738
    8. '' → logprob: -6.207440376281738
    9. 'newline' → logprob: -6.457440376281738
    10. '\' → logprob: -6.957440376281738

Token 24: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.249921977519989
    2. '<|end|>' → logprob: -1.7499220371246338
    3. '\n' → logprob: -3.624922037124634
    4. '       ' → logprob: -4.499921798706055
    5. ' ' → logprob: -6.374921798706055
    6. '\' → logprob: -6.874921798706055
    7. 'self' (adapté à ' self') → logprob: -6.874921798706055
    8. ')' → logprob: -6.999921798706055
    9. ' 
' → logprob: -7.374921798706055
    10. ',' → logprob: -7.499921798706055

Token 25: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5575761795043945
    2. '.next' → logprob: -1.4325761795043945
    3. '.left' → logprob: -1.8075761795043945
    4. '.children' → logprob: -4.3075761795043945
    5. ' .' → logprob: -4.8075761795043945
    6. '.right' → logprob: -6.3075761795043945
    7. '.value' → logprob: -8.057576179504395
    8. '.parent' → logprob: -8.432576179504395
    9. '.prev' → logprob: -9.182576179504395
    10. '._' → logprob: -9.307576179504395

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006980225909501314
    2. '=' → logprob: -5.3819804191589355
    3. '<|end|>' → logprob: -6.6319804191589355
    4. ' ' → logprob: -7.0069804191589355
    5. '_' → logprob: -9.506979942321777
    6. '.' → logprob: -11.131979942321777
    7. '<|end|>' → logprob: -11.381979942321777
    8. '=None' → logprob: -11.506979942321777
    9. ' is' → logprob: -12.256979942321777
    10. ' =
' → logprob: -12.506979942321777

Token 27: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.004078401252627373
    2. 'None' → logprob: -5.504078388214111
    3. ' ' → logprob: -17.629077911376953
    4. '_None' → logprob: -19.379077911376953
    5. ' ' → logprob: -19.629077911376953
    6. '=None' → logprob: -19.879077911376953
    7. '(None' → logprob: -19.879077911376953
    8. ' none' → logprob: -20.379077911376953
    9. ',None' → logprob: -20.879077911376953
    10. '.None' → logprob: -21.254077911376953

Token 28: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5164241790771484
    2. '<|end|>' → logprob: -1.0164241790771484
    3. '       ' → logprob: -3.3914241790771484
    4. ' 
' → logprob: -6.516424179077148
    5. '   ' → logprob: -6.891424179077148
    6. '    
' → logprob: -7.016424179077148
    7. '\n' → logprob: -7.141424179077148
    8. '<|end|>' → logprob: -7.391424179077148
    9. 'n' → logprob: -7.641424179077148
    10. 'newline' → logprob: -7.891424179077148

Token 29: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0296066999435425
    2. '<|end|>' → logprob: -1.5296066999435425
    3. '       ' → logprob: -1.7796066999435425
    4. '\' → logprob: -2.279606819152832
    5. '   ' → logprob: -3.279606819152832
    6. '\n' → logprob: -3.654606819152832
    7. '```' → logprob: -4.154606819152832
    8. ' 
' → logprob: -4.529606819152832
    9. ' ' → logprob: -4.529606819152832
    10. '    
' → logprob: -4.654606819152832

Token 30: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5747343897819519
    2. 'self' (adapté à ' self') → logprob: -1.4497344493865967
    3. '<|end|>' → logprob: -2.0747344493865967
    4. '
' → logprob: -2.8247344493865967
    5. '   ' → logprob: -5.074734210968018
    6. '\' → logprob: -5.949734210968018
    7. ' self' → logprob: -6.324734210968018
    8. '\n' → logprob: -6.449734210968018
    9. '```' → logprob: -6.824734210968018
    10. ' ' → logprob: -7.324734210968018

Token 31: '.left' (ID: 15388)
  Prédit: '.children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.4411557912826538
    2. '.' → logprob: -1.0661557912826538
    3. '.left' → logprob: -4.691155910491943
    4. '.child' → logprob: -6.566155910491943
    5. ' .' → logprob: -6.816155910491943
    6. '.next' → logprob: -8.191155433654785
    7. '.right' → logprob: -8.316155433654785
    8. 'children' → logprob: -9.941155433654785
    9. '.Children' → logprob: -10.566155433654785
    10. '._' → logprob: -10.816155433654785

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29711219668388367
    2. '=' → logprob: -1.797112226486206
    3. '<|end|>' → logprob: -2.422112226486206
    4. '=None' → logprob: -6.547111988067627
    5. '<|end|>' → logprob: -7.047111988067627
    6. ' ' → logprob: -8.922112464904785
    7. '_' → logprob: -10.422112464904785
    8. ')' → logprob: -10.672112464904785
    9. ' None' → logprob: -12.172112464904785
    10. ',' → logprob: -12.547112464904785

Token 33: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.01815052703022957
    2. 'None' → logprob: -4.018150329589844
    3. '_None' → logprob: -15.143150329589844
    4. '(None' → logprob: -15.393150329589844
    5. ' ' → logprob: -16.893150329589844
    6. ',None' → logprob: -17.018150329589844
    7. '=None' → logprob: -17.893150329589844
    8. '.None' → logprob: -18.018150329589844
    9. ' ' → logprob: -18.268150329589844
    10. '<|end|>' → logprob: -19.143150329589844

Token 34: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02667679265141487
    2. '       ' → logprob: -3.651676893234253
    3. '   ' → logprob: -8.901677131652832
    4. ' self' → logprob: -9.276677131652832
    5. 's' → logprob: -9.901677131652832
    6. '	self' → logprob: -10.526677131652832
    7. '```' → logprob: -11.026677131652832
    8. '        
' → logprob: -11.901677131652832
    9. ''s' → logprob: -12.151677131652832
    10. '
' → logprob: -12.276677131652832

Token 37: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.9083226919174194
    2. '.' → logprob: -1.1583226919174194
    3. '.left' → logprob: -1.2833226919174194
    4. '.parent' → logprob: -5.908322811126709
    5. '<|end|>' → logprob: -6.408322811126709
    6. '=' → logprob: -8.15832233428955
    7. '.children' → logprob: -8.28332233428955
    8. '.child' → logprob: -8.90832233428955
    9. 's' → logprob: -9.28332233428955
    10. 'left' → logprob: -9.28332233428955

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2920459508895874
    2. ' =' → logprob: -1.4170459508895874
    3. '<|end|>' → logprob: -4.667046070098877
    4. '=None' → logprob: -6.792046070098877
    5. '<|end|>' → logprob: -8.542045593261719
    6. ' ' → logprob: -10.292045593261719
    7. ')' → logprob: -10.542045593261719
    8. ' None' → logprob: -11.417045593261719
    9. '=True' → logprob: -11.417045593261719
    10. 'None' → logprob: -11.792045593261719

Token 39: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.20141586661338806
    2. 'None' → logprob: -1.7014158964157104
    3. '_None' → logprob: -14.201416015625
    4. ' ' → logprob: -14.326416015625
    5. '(None' → logprob: -14.826416015625
    6. ' ' → logprob: -15.326416015625
    7. ',None' → logprob: -15.701416015625
    8. '.None' → logprob: -15.951416015625
    9. '=None' → logprob: -16.076416015625
    10. ' N' → logprob: -16.451416015625

Token 40: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029749685898423195
    2. '<|end|>' → logprob: -4.029749870300293
    3. '

' → logprob: -5.279749870300293
    4. '\n' → logprob: -6.404749870300293
    5. ' ' → logprob: -7.029749870300293
    6. ' 
' → logprob: -7.279749870300293
    7. '   ' → logprob: -7.279749870300293
    8. '' → logprob: -7.279749870300293
    9. '    
' → logprob: -8.654749870300293
    10. 'n' → logprob: -8.654749870300293

Token 41: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09314154088497162
    2. ':' → logprob: -4.343141555786133
    3. 'class' → logprob: -4.343141555786133
    4. ' ' → logprob: -4.343141555786133
    5. '#' → logprob: -4.843141555786133
    6. '<|end|>' → logprob: -4.843141555786133
    7. '.' → logprob: -5.593141555786133
    8. 'def' → logprob: -5.593141555786133
    9. '' → logprob: -5.718141555786133
    10. ' 
' → logprob: -5.718141555786133

Token 42: ' input' (ID: 3422)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.36730146408081055
    2. ' space' → logprob: -2.4923014640808105
    3. ' ' → logprob: -3.1173014640808105
    4. ' tree' → logprob: -3.2423014640808105
    5. ' binary' → logprob: -3.4923014640808105
    6. ' create' → logprob: -3.9923014640808105
    7. ' Node' → logprob: -4.7423014640808105
    8. ' new' → logprob: -4.8673014640808105
    9. ' find' → logprob: -5.2423014640808105
    10. ' a' → logprob: -5.2423014640808105

Token 43: '_line' (ID: 14418)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004128503613173962
    2. '()' → logprob: -6.004128456115723
    3. '_' → logprob: -7.254128456115723
    4. ' (' → logprob: -8.379128456115723
    5. 's' → logprob: -8.754128456115723
    6. '_data' → logprob: -9.754128456115723
    7. '(
' → logprob: -9.754128456115723
    8. '("' → logprob: -9.879128456115723
    9. '_parent' → logprob: -9.879128456115723
    10. '("("' → logprob: -9.879128456115723

Token 44: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4754536747932434
    2. '()' → logprob: -1.4754536151885986
    3. '(' → logprob: -2.1004536151885986
    4. 's' → logprob: -3.7254536151885986
    5. '_' → logprob: -6.475453853607178
    6. ':' → logprob: -8.60045337677002
    7. ')' → logprob: -8.72545337677002
    8. '_parent' → logprob: -8.85045337677002
    9. '```' → logprob: -9.47545337677002
    10. ' ():' → logprob: -9.72545337677002

Token 45: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1049240231513977
    2. ':' → logprob: -2.479923963546753
    3. '(' → logprob: -4.229924201965332
    4. '()' → logprob: -6.979924201965332
    5. ' ():' → logprob: -9.104924201965332
    6. ' :' → logprob: -9.729924201965332
    7. '[:]' → logprob: -9.729924201965332
    8. '(:' → logprob: -9.979924201965332
    9. '):' → logprob: -10.479924201965332
    10. '():
' → logprob: -10.979924201965332

Token 46: ' (' (ID: 350)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.49988502264022827
    2. ' str' → logprob: -0.9998850226402283
    3. 'list' → logprob: -4.624885082244873
    4. ' list' → logprob: -5.249885082244873
    5. 'int' → logprob: -5.624885082244873
    6. 'None' → logprob: -5.749885082244873
    7. ' None' → logprob: -5.874885082244873
    8. ' int' → logprob: -7.499885082244873
    9. 'List' → logprob: -9.749884605407715
    10. ' ' → logprob: -9.874884605407715

Token 47: 'str' (ID: 689)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5218765735626221
    2. 'str' → logprob: -1.146876573562622
    3. 'list' → logprob: -2.521876573562622
    4. 'tuple' → logprob: -5.771876335144043
    5. ')' → logprob: -6.021876335144043
    6. 'List' → logprob: -6.646876335144043
    7. ' str' → logprob: -7.771876335144043
    8. '[int' → logprob: -8.146876335144043
    9. 'None' → logprob: -8.271876335144043
    10. '[str' → logprob: -8.521876335144043

Token 48: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17130868136882782
    2. ')' → logprob: -1.9213086366653442
    3. ',' → logprob: -4.546308517456055
    4. '):
' → logprob: -8.796308517456055
    5. ' ):' → logprob: -9.546308517456055
    6. '[' → logprob: -10.171308517456055
    7. '):

' → logprob: -10.671308517456055
    8. '[str' → logprob: -10.796308517456055
    9. ' )' → logprob: -10.796308517456055
    10. ':' → logprob: -10.921308517456055

Token 49: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8227784633636475
    2. ')' → logprob: -1.5727784633636475
    3. 'str' → logprob: -1.8227784633636475
    4. ' int' → logprob: -2.4477784633636475
    5. ' str' → logprob: -3.0727784633636475
    6. 'list' → logprob: -3.4477784633636475
    7. ' list' → logprob: -4.822778701782227
    8. ' )' → logprob: -4.947778701782227
    9. '[int' → logprob: -5.822778701782227
    10. '[str' → logprob: -6.322778701782227

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010114319622516632
    2. ')' → logprob: -4.6351141929626465
    3. ',' → logprob: -8.385114669799805
    4. '):
' → logprob: -9.635114669799805
    5. ':' → logprob: -10.385114669799805
    6. ' ):' → logprob: -10.635114669799805
    7. '):

' → logprob: -13.510114669799805
    8. '):
' → logprob: -13.635114669799805
    9. ''):' → logprob: -13.760114669799805
    10. '[' → logprob: -13.885114669799805

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044420283287763596
    2. ':' → logprob: -3.4194202423095703
    3. ')' → logprob: -6.04442024230957
    4. ' ' → logprob: -6.16942024230957
    5. 'return' → logprob: -6.41942024230957
    6. '  ' → logprob: -7.16942024230957
    7. '    
' → logprob: -7.29442024230957
    8. ':return' → logprob: -7.54442024230957
    9. '    ' → logprob: -7.66942024230957
    10. ' return' → logprob: -7.66942024230957

Token 52: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.6836362481117249
    2. 's' → logprob: -1.43363618850708
    3. 'l' → logprob: -2.68363618850708
    4. 'input' → logprob: -3.30863618850708
    5. 'data' → logprob: -3.30863618850708
    6. 'return' → logprob: -3.43363618850708
    7. ' line' → logprob: -3.93363618850708
    8. 'inp' → logprob: -4.68363618850708
    9. 'raw' → logprob: -4.93363618850708
    10. 'i' → logprob: -5.43363618850708

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18017497658729553
    2. '=' → logprob: -1.8051749467849731
    3. '_' → logprob: -8.055174827575684
    4. ' ' → logprob: -10.305174827575684
    5. '.' → logprob: -10.430174827575684
    6. 's' → logprob: -11.055174827575684
    7. '=line' → logprob: -11.930174827575684
    8. ')' → logprob: -12.180174827575684
    9. '   ' → logprob: -12.430174827575684
    10. '()' → logprob: -13.055174827575684

Token 54: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10020752996206284
    2. 'input' → logprob: -2.350207567214966
    3. ' ' → logprob: -15.100207328796387
    4. '=input' → logprob: -15.225207328796387
    5. '(input' → logprob: -15.725207328796387
    6. '	input' → logprob: -16.475208282470703
    7. 'str' → logprob: -17.100208282470703
    8. '<input' → logprob: -17.100208282470703
    9. '_input' → logprob: -17.600208282470703
    10. '.input' → logprob: -17.600208282470703

Token 55: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1637551188468933
    2. '()' → logprob: -1.913755178451538
    3. '().' → logprob: -6.413754940032959
    4. '('' → logprob: -7.163754940032959
    5. '("("' → logprob: -7.288754940032959
    6. ' ' → logprob: -9.413755416870117
    7. '(
' → logprob: -9.538755416870117
    8. '("")' → logprob: -9.788755416870117
    9. '```' → logprob: -10.788755416870117
    10. ')' → logprob: -10.788755416870117

Token 56: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.38693660497665405
    2. 'split' → logprob: -1.1369366645812988
    3. 'rstrip' → logprob: -9.63693618774414
    4. 'spl' → logprob: -15.88693618774414
    5. 'rs' → logprob: -16.88693618774414
    6. 'str' → logprob: -17.13693618774414
    7. 's' → logprob: -17.26193618774414
    8. ' split' → logprob: -18.13693618774414
    9. ' strip' → logprob: -18.26193618774414
    10. 'replace' → logprob: -19.01193618774414

Token 57: '()
' (ID: 1234)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6944518089294434
    2. '(' → logprob: -0.8194518089294434
    3. '()' → logprob: -3.0694518089294434
    4. '("("' → logprob: -4.319451808929443
    5. '("' → logprob: -8.694452285766602
    6. '(
' → logprob: -11.819452285766602
    7. '((' → logprob: -11.819452285766602
    8. '(`' → logprob: -11.944452285766602
    9. '(None' → logprob: -12.319452285766602
    10. '(',' → logprob: -12.694452285766602

Token 58: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3513121008872986
    2. '   ' → logprob: -2.1013121604919434
    3. '[' → logprob: -2.3513121604919434
    4. '(' → logprob: -3.3513121604919434
    5. '  ' → logprob: -4.976312160491943
    6. ' if' → logprob: -5.226312160491943
    7. '    ' → logprob: -5.226312160491943
    8. ''' → logprob: -5.476312160491943
    9. ' (' → logprob: -5.726312160491943
    10. ',' → logprob: -5.976312160491943

Token 59: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08005698770284653
    2. 'key' → logprob: -3.20505690574646
    3. 'if' (adapté à ' if') → logprob: -4.205057144165039
    4. 'ret' → logprob: -4.330057144165039
    5. '   ' → logprob: -5.455057144165039
    6. ' return' → logprob: -6.580057144165039
    7. '(' → logprob: -7.080057144165039
    8. 'type' → logprob: -8.080057144165039
    9. 'r' → logprob: -8.330057144165039
    10. ' if' → logprob: -8.455057144165039

Token 60: ' line' (ID: 2543)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.4128141403198242
    2. ' line' → logprob: -1.2878141403198242
    3. 'len' → logprob: -3.162814140319824
    4. 'line' → logprob: -4.412814140319824
    5. ' not' → logprob: -4.912814140319824
    6. ' ' → logprob: -7.912814140319824
    7. '(len' → logprob: -9.662814140319824
    8. '(line' → logprob: -10.162814140319824
    9. 'not' → logprob: -10.412814140319824
    10. '[line' → logprob: -11.287814140319824

Token 61: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003806376364082098
    2. ':' → logprob: -6.1288065910339355
    3. ' and' → logprob: -6.8788065910339355
    4. 'and' → logprob: -8.128806114196777
    5. '==' → logprob: -8.378806114196777
    6. '<|end|>' → logprob: -11.128806114196777
    7. ' ' → logprob: -11.253806114196777
    8. ' ==' → logprob: -11.503806114196777
    9. '[]' → logprob: -11.753806114196777
    10. '[:]' → logprob: -12.378806114196777

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005935909226536751
    2. ' ' → logprob: -5.130936145782471
    3. '1' → logprob: -12.130935668945312
    4. '[' → logprob: -14.380935668945312
    5. ']' → logprob: -15.130935668945312
    6. '-' → logprob: -15.255935668945312
    7. '  ' → logprob: -15.630935668945312
    8. ')' → logprob: -15.880935668945312
    9. '2' → logprob: -16.068435668945312
    10. '(' → logprob: -16.318435668945312

Token 63: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.344278484582901
    2. ' ==' → logprob: -1.5942784547805786
    3. ')' → logprob: -2.844278573989868
    4. ']' → logprob: -3.719278573989868
    5. ']==' → logprob: -5.969278335571289
    6. '=' → logprob: -6.594278335571289
    7. '=='' → logprob: -7.719278335571289
    8. ')==' → logprob: -8.094278335571289
    9. ' )' → logprob: -8.219278335571289
    10. '[' → logprob: -8.219278335571289

Token 64: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22744402289390564
    2. ' ==' → logprob: -1.602444052696228
    3. '=="' → logprob: -7.477444171905518
    4. '[' → logprob: -7.602444171905518
    5. '=='' → logprob: -7.727444171905518
    6. ' in' → logprob: -8.22744369506836
    7. '=' → logprob: -9.10244369506836
    8. 'in' → logprob: -10.22744369506836
    9. '==
' → logprob: -10.47744369506836
    10. ' ' → logprob: -10.72744369506836

Token 65: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4954073131084442
    2. '"' → logprob: -1.1204073429107666
    3. ''in' → logprob: -4.3704071044921875
    4. ' "' → logprob: -5.1204071044921875
    5. ''ins' → logprob: -5.3704071044921875
    6. ' '' → logprob: -5.6204071044921875
    7. '"I' → logprob: -5.7454071044921875
    8. ''I' → logprob: -5.7454071044921875
    9. '"in' → logprob: -5.9954071044921875
    10. ''s' → logprob: -5.9954071044921875

Token 66: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.24646176397800446
    2. 'i' → logprob: -2.371461868286133
    3. 'I' → logprob: -2.746461868286133
    4. 'Insert' → logprob: -4.121461868286133
    5. 'set' → logprob: -4.621461868286133
    6. 'a' → logprob: -5.371461868286133
    7. 'INSERT' → logprob: -5.621461868286133
    8. 'ins' → logprob: -5.621461868286133
    9. 'in' → logprob: -5.746461868286133
    10. 'add' → logprob: -5.746461868286133

Token 67: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3356929123401642
    2. '':' → logprob: -1.7106928825378418
    3. '',' → logprob: -2.335692882537842
    4. ''):' → logprob: -5.085692882537842
    5. '')' → logprob: -7.210692882537842
    6. '':
' → logprob: -8.210693359375
    7. ',' → logprob: -9.335693359375
    8. '','' → logprob: -9.335693359375
    9. ''):
' → logprob: -9.460693359375
    10. ''s' → logprob: -10.460693359375

Token 68: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9115380048751831
    2. ',' → logprob: -1.036538004875183
    3. ':' → logprob: -2.4115381240844727
    4. ' ,' → logprob: -2.5365381240844727
    5. '<|end|>' → logprob: -3.7865381240844727
    6. ' (' → logprob: -4.411538124084473
    7. '   ' → logprob: -4.536538124084473
    8. '    ' → logprob: -5.286538124084473
    9. '(' → logprob: -5.286538124084473
    10. ' return' → logprob: -5.661538124084473

Token 69: ' return' (ID: 622)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6865718364715576
    2. ',' → logprob: -1.0615718364715576
    3. ' ,' → logprob: -2.1865718364715576
    4. 'return' (adapté à ' return') → logprob: -4.311572074890137
    5. ' return' → logprob: -4.436572074890137
    6. '    ' → logprob: -5.811572074890137
    7. '        ' → logprob: -6.436572074890137
    8. '  ' → logprob: -6.436572074890137
    9. '   ' → logprob: -6.436572074890137
    10. ' (' → logprob: -7.061572074890137

Token 70: ' line' (ID: 2543)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.23051002621650696
    2. ' '' → logprob: -2.4805099964141846
    3. ' ('' → logprob: -3.1055099964141846
    4. '(' → logprob: -3.6055099964141846
    5. '('' → logprob: -3.7305099964141846
    6. ' (' → logprob: -4.605510234832764
    7. ''s' → logprob: -5.105510234832764
    8. '(line' → logprob: -5.355510234832764
    9. '"' → logprob: -6.355510234832764
    10. ' line' → logprob: -6.730510234832764

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06757821887731552
    2. '0' → logprob: -3.1925783157348633
    3. ',' → logprob: -3.9425783157348633
    4. ' ' → logprob: -5.692578315734863
    5. '[
' → logprob: -7.067578315734863
    6. '<|end|>' → logprob: -8.692578315734863
    7. ' ,' → logprob: -9.442578315734863
    8. ',[' → logprob: -9.692578315734863
    9. ' 
' → logprob: -10.067578315734863
    10. ',
' → logprob: -10.067578315734863

Token 72: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003215857082977891
    2. '0' → logprob: -5.753215789794922
    3. ' ' → logprob: -10.503215789794922
    4. '[' → logprob: -12.628215789794922
    5. '-' → logprob: -12.753215789794922
    6. '
' → logprob: -13.628215789794922
    7. ']' → logprob: -13.878215789794922
    8. '   ' → logprob: -14.503215789794922
    9. ''' → logprob: -15.003215789794922
    10. '  ' → logprob: -15.378215789794922

Token 73: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007912860601209104
    2. '',' → logprob: -8.250791549682617
    3. ' ,' → logprob: -8.375791549682617
    4. '),' → logprob: -8.750791549682617
    5. ',
' → logprob: -9.750791549682617
    6. ')' → logprob: -11.125791549682617
    7. '','' → logprob: -11.125791549682617
    8. ',),' → logprob: -11.250791549682617
    9. ''),' → logprob: -11.875791549682617
    10. '<|end|>' → logprob: -12.250791549682617

Token 74: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1269323080778122
    2. 'int' → logprob: -2.126932382583618
    3. '(int' → logprob: -13.001932144165039
    4. '[int' → logprob: -14.001932144165039
    5. '	int' → logprob: -15.126932144165039
    6. '<int' → logprob: -15.251932144165039
    7. '=int' → logprob: -15.251932144165039
    8. ' in' → logprob: -16.12693214416504
    9. ' ' → logprob: -16.25193214416504
    10. ' i' → logprob: -16.37693214416504

Token 75: '(line' (ID: 18178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4740891754627228
    2. '(line' → logprob: -0.9740891456604004
    3. '('' → logprob: -12.099089622497559
    4. '(
' → logprob: -12.349089622497559
    5. ' (' → logprob: -14.474089622497559
    6. ''' → logprob: -15.474089622497559
    7. '[line' → logprob: -15.474089622497559
    8. '#line' → logprob: -15.724089622497559
    9. '("("' → logprob: -15.974089622497559
    10. '(Line' → logprob: -16.099088668823242

Token 76: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. '[
' → logprob: -12.625005722045898
    3. ')' → logprob: -13.625005722045898
    4. ' [' → logprob: -15.125005722045898
    5. '```' → logprob: -15.125005722045898
    6. '[line' → logprob: -15.375005722045898
    7. '(' → logprob: -15.750005722045898
    8. ')[' → logprob: -16.6250057220459
    9. '1' → logprob: -17.1250057220459
    10. ']' → logprob: -17.3750057220459

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.0259150157216936e-05
    2. ' ' → logprob: -10.62505054473877
    3. '[' → logprob: -11.00005054473877
    4. ']' → logprob: -11.87505054473877
    5. '   ' → logprob: -14.62505054473877
    6. '
' → logprob: -14.75005054473877
    7. ' [' → logprob: -15.12505054473877
    8. '])' → logprob: -15.37505054473877
    9. '][' → logprob: -15.37505054473877
    10. '```' → logprob: -15.62505054473877

Token 78: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10033790022134781
    2. ')' → logprob: -2.3503379821777344
    3. ']' → logprob: -10.100337982177734
    4. ')])' → logprob: -10.350337982177734
    5. '))' → logprob: -11.100337982177734
    6. ')]' → logprob: -11.225337982177734
    7. ' ])' → logprob: -11.350337982177734
    8. ''])' → logprob: -11.725337982177734
    9. ' )' → logprob: -12.850337982177734
    10. '])
' → logprob: -13.350337982177734

Token 79: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.0658044815063477
    2. ' ' → logprob: -2.0658044815063477
    3. 'else' → logprob: -2.4408044815063477
    4. '   ' → logprob: -2.4408044815063477
    5. ' else' → logprob: -2.5658044815063477
    6. '
' → logprob: -2.6908044815063477
    7. ' 
' → logprob: -2.6908044815063477
    8. 'n' → logprob: -3.5658044815063477
    9. '' → logprob: -3.5658044815063477
    10. '    
' → logprob: -4.190804481506348

Token 80: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6293020844459534
    2. ' else' → logprob: -1.3793020248413086
    3. ' ' → logprob: -2.2543020248413086
    4. 'elif' (adapté à ' elif') → logprob: -3.0043020248413086
    5. 'return' → logprob: -4.004302024841309
    6. '   ' → logprob: -4.004302024841309
    7. 'e' → logprob: -4.629302024841309
    8. ' elif' → logprob: -5.504302024841309
    9. ' return' → logprob: -6.379302024841309
    10. 'r' → logprob: -6.629302024841309

Token 81: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04519309476017952
    2. 'line' → logprob: -3.1701931953430176
    3. ''' → logprob: -7.170193195343018
    4. ' '' → logprob: -7.295193195343018
    5. ' ' → logprob: -7.420193195343018
    6. '(line' → logprob: -10.54519271850586
    7. ''s' → logprob: -10.67019271850586
    8. '#line' → logprob: -10.79519271850586
    9. '[line' → logprob: -10.92019271850586
    10. '	line' → logprob: -11.42019271850586

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003546502848621458
    2. '==' → logprob: -8.375354766845703
    3. ' ==' → logprob: -9.125354766845703
    4. ' [' → logprob: -11.750354766845703
    5. '[
' → logprob: -12.125354766845703
    6. ' ' → logprob: -14.125354766845703
    7. '[]' → logprob: -15.125354766845703
    8. '0' → logprob: -15.375354766845703
    9. '```' → logprob: -15.375354766845703
    10. '=' → logprob: -16.250354766845703

Token 83: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7232770919799805
    2. '0' → logprob: -0.7232770919799805
    3. '[' → logprob: -3.5982770919799805
    4. ' '' → logprob: -6.9732770919799805
    5. ''s' → logprob: -7.4732770919799805
    6. ''[' → logprob: -8.34827709197998
    7. ' ' → logprob: -8.97327709197998
    8. '"' → logprob: -9.72327709197998
    9. ''o' → logprob: -10.22327709197998
    10. '
' → logprob: -10.22327709197998

Token 84: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3728789985179901
    2. ']' → logprob: -1.6228790283203125
    3. ' ==' → logprob: -2.4978790283203125
    4. ']==' → logprob: -3.4978790283203125
    5. '']' → logprob: -8.372879028320312
    6. '=='' → logprob: -8.372879028320312
    7. '==
' → logprob: -8.497879028320312
    8. ')' → logprob: -8.622879028320312
    9. ']=='' → logprob: -9.122879028320312
    10. '']==' → logprob: -9.247879028320312

Token 85: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3137996196746826
    2. '==' → logprob: -1.3137996196746826
    3. '=='' → logprob: -7.938799858093262
    4. '=' → logprob: -9.313799858093262
    5. ' =' → logprob: -10.438799858093262
    6. '[' → logprob: -10.438799858093262
    7. ' =='' → logprob: -11.313799858093262
    8. ' ' → logprob: -12.438799858093262
    9. ''' → logprob: -12.438799858093262
    10. '===' → logprob: -12.813799858093262

Token 86: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20580987632274628
    2. ' '' → logprob: -1.8308098316192627
    3. ''ex' → logprob: -4.080810070037842
    4. ''s' → logprob: -6.330810070037842
    5. ''post' → logprob: -6.455810070037842
    6. ''in' → logprob: -7.080810070037842
    7. ''ins' → logprob: -7.205810070037842
    8. ''end' → logprob: -7.455810070037842
    9. ''d' → logprob: -7.580810070037842
    10. ''user' → logprob: -8.080809593200684

Token 87: 'find' (ID: 6555)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -1.0986194610595703
    2. 'delete' → logprob: -1.2236194610595703
    3. 'find' → logprob: -1.2236194610595703
    4. ''' → logprob: -3.8486194610595703
    5. 's' → logprob: -4.22361946105957
    6. 'print' → logprob: -4.34861946105957
    7. ''s' → logprob: -4.47361946105957
    8. 'remove' → logprob: -5.72361946105957
    9. 'extract' → logprob: -5.97361946105957
    10. 'lookup' → logprob: -6.22361946105957

Token 88: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4345846474170685
    2. ''' → logprob: -1.059584617614746
    3. '',' → logprob: -5.559584617614746
    4. '':
' → logprob: -6.309584617614746
    5. '':

' → logprob: -10.434584617614746
    6. ''s' → logprob: -10.559584617614746
    7. ''):' → logprob: -10.684584617614746
    8. '':'' → logprob: -10.684584617614746
    9. '":' → logprob: -11.684584617614746
    10. ':' → logprob: -11.809584617614746

Token 89: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7732316255569458
    2. ',' → logprob: -0.8982316255569458
    3. ' ,' → logprob: -2.8982315063476562
    4. ' line' → logprob: -4.148231506347656
    5. ''' → logprob: -4.523231506347656
    6. '    ' → logprob: -4.523231506347656
    7. ',line' → logprob: -4.648231506347656
    8. '   ' → logprob: -5.023231506347656
    9. 'line' → logprob: -5.148231506347656
    10. ' return' → logprob: -5.273231506347656

Token 90: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.589526891708374
    2. ' return' → logprob: -0.964526891708374
    3. 'line' → logprob: -3.464526891708374
    4. ' ' → logprob: -4.214527130126953
    5. ' line' → logprob: -4.464527130126953
    6. 'int' → logprob: -5.464527130126953
    7. ' int' → logprob: -6.839527130126953
    8. '   ' → logprob: -7.214527130126953
    9. '    ' → logprob: -9.089527130126953
    10. '  ' → logprob: -9.589527130126953

Token 91: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.22639134526252747
    2. 'line' → logprob: -1.601391315460205
    3. '(line' → logprob: -7.226391315460205
    4. ' ' → logprob: -8.851391792297363
    5. '#line' → logprob: -10.601391792297363
    6. ''' → logprob: -10.851391792297363
    7. '	line' → logprob: -11.351391792297363
    8. ' (' → logprob: -11.476391792297363
    9. ' lin' → logprob: -12.101391792297363
    10. '(' → logprob: -12.226391792297363

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.268254896393046e-05
    2. '<|end|>' → logprob: -9.750082969665527
    3. ' ' → logprob: -11.750082969665527
    4. '[
' → logprob: -11.750082969665527
    5. '<|end|>' → logprob: -12.250082969665527
    6. '0' → logprob: -13.500082969665527
    7. ' [' → logprob: -13.500082969665527
    8. '```' → logprob: -15.312582969665527
    9. ' ' → logprob: -16.25008201599121
    10. '  ' → logprob: -16.37508201599121

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.065608562901616e-05
    2. ' ' → logprob: -9.750081062316895
    3. '[' → logprob: -11.125081062316895
    4. '1' → logprob: -12.000081062316895
    5. ''' → logprob: -14.875081062316895
    6. '<|end|>' → logprob: -15.750081062316895
    7. '  ' → logprob: -16.062580108642578
    8. '    ' → logprob: -16.062580108642578
    9. '۰' → logprob: -16.062580108642578
    10. '(' → logprob: -16.187580108642578

Token 94: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017175428802147508
    2. '',' → logprob: -6.626717567443848
    3. '),' → logprob: -8.251717567443848
    4. ' ,' → logprob: -10.251717567443848
    5. '','' → logprob: -10.501717567443848
    6. '<|end|>' → logprob: -10.751717567443848
    7. ''),' → logprob: -11.376717567443848
    8. ')' → logprob: -11.751717567443848
    9. '‌,' → logprob: -12.251717567443848
    10. ',
' → logprob: -12.376717567443848

Token 95: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.18027940392494202
    2. 'int' → logprob: -1.8052793741226196
    3. ' line' → logprob: -8.805279731750488
    4. ' ' → logprob: -9.180279731750488
    5. ' None' → logprob: -9.180279731750488
    6. '0' → logprob: -9.430279731750488
    7. 'line' → logprob: -9.805279731750488
    8. 'None' → logprob: -10.805279731750488
    9. '(int' → logprob: -11.930279731750488
    10. '<int' → logprob: -12.305279731750488

Token 96: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.5760029554367065
    2. '(' → logprob: -0.8260029554367065
    3. '(
' → logprob: -9.826003074645996
    4. '(

' → logprob: -12.701003074645996
    5. '("("' → logprob: -13.076003074645996
    6. '('' → logprob: -13.576003074645996
    7. ' (' → logprob: -13.951003074645996
    8. '[line' → logprob: -14.576003074645996
    9. '(Line' → logprob: -14.576003074645996
    10. '#line' → logprob: -14.826003074645996

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.274932143744081e-05
    2. '1' → logprob: -10.875042915344238
    3. ']' → logprob: -11.750042915344238
    4. '[
' → logprob: -12.000042915344238
    5. '][' → logprob: -12.375042915344238
    6. ' [' → logprob: -12.750042915344238
    7. ')' → logprob: -14.125042915344238
    8. '```' → logprob: -14.375042915344238
    9. '   ' → logprob: -15.000042915344238
    10. '
' → logprob: -15.500042915344238

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. ']' → logprob: -15.750004768371582
    4. '   ' → logprob: -16.5000057220459
    5. ')' → logprob: -16.8750057220459
    6. '```' → logprob: -17.3750057220459
    7. '[' → logprob: -17.6250057220459
    8. '' → logprob: -17.8750057220459
    9. '
' → logprob: -18.0000057220459
    10. '  ' → logprob: -18.1250057220459

Token 99: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.179569077678025e-05
    2. ')
' → logprob: -10.250041961669922
    3. ' )' → logprob: -12.125041961669922
    4. '))' → logprob: -15.375041961669922
    5. '   ' → logprob: -15.500041961669922
    6. ')return' → logprob: -16.500041961669922
    7. '）' → logprob: -16.750041961669922
    8. '')' → logprob: -16.750041961669922
    9. '])' → logprob: -16.750041961669922
    10. '       ' → logprob: -16.875041961669922

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023515896871685982
    2. 'else' → logprob: -5.023515701293945
    3. '    
' → logprob: -5.398515701293945
    4. ' else' → logprob: -5.398515701293945
    5. ' ' → logprob: -5.773515701293945
    6. '
' → logprob: -7.023515701293945
    7. ')' → logprob: -7.148515701293945
    8. '\n' → logprob: -7.648515701293945
    9. 'elif' → logprob: -7.648515701293945
    10. '    ' → logprob: -7.898515701293945

Token 101: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.40337544679641724
    2. 'elif' → logprob: -1.6533753871917725
    3. '   ' → logprob: -2.6533753871917725
    4. ' else' → logprob: -2.9033753871917725
    5. ' ' → logprob: -5.153375625610352
    6. 'return' → logprob: -6.153375625610352
    7. ' elif' → logprob: -6.153375625610352
    8. 'None' → logprob: -6.278375625610352
    9. ' None' → logprob: -6.778375625610352
    10. 'e' → logprob: -7.153375625610352

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041190940886735916
    2. ':
' → logprob: -3.4161908626556396
    3. '   ' → logprob: -5.416191101074219
    4. ',' → logprob: -6.666191101074219
    5. ' :' → logprob: -7.291191101074219
    6. ':return' → logprob: -7.666191101074219
    7. ''' → logprob: -9.166191101074219
    8. ' None' → logprob: -9.291191101074219
    9. ' :
' → logprob: -9.416191101074219
    10. 'return' → logprob: -9.416191101074219

Token 103: '       ' (ID: 309)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.0890146493911743
    2. 'line' → logprob: -1.4640146493911743
    3. ' line' → logprob: -1.7140146493911743
    4. 'None' → logprob: -1.9640146493911743
    5. '(line' → logprob: -2.8390145301818848
    6. '   ' → logprob: -3.8390145301818848
    7. '(None' → logprob: -4.214014530181885
    8. ' (' → logprob: -4.964014530181885
    9. '(' → logprob: -5.339014530181885
    10. '('' → logprob: -6.589014530181885

Token 104: ' return' (ID: 622)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.48276787996292114
    2. 'line' → logprob: -1.1077678203582764
    3. 'return' (adapté à ' return') → logprob: -4.2327680587768555
    4. ' (' → logprob: -4.6077680587768555
    5. '(None' → logprob: -4.6077680587768555
    6. 'None' → logprob: -4.9827680587768555
    7. ' line' → logprob: -5.2327680587768555
    8. '(' → logprob: -6.2327680587768555
    9. '()' → logprob: -6.3577680587768555
    10. ' None' → logprob: -7.4827680587768555

Token 105: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6007168889045715
    2. ' line' → logprob: -0.9757168889045715
    3. ' None' → logprob: -3.2257168292999268
    4. 'None' → logprob: -3.8507168292999268
    5. '(line' → logprob: -4.725717067718506
    6. '()' → logprob: -6.600717067718506
    7. ' (' → logprob: -6.975717067718506
    8. '(' → logprob: -7.225717067718506
    9. '(None' → logprob: -7.600717067718506
    10. ' ()' → logprob: -8.100716590881348

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06541645526885986
    2. '()' → logprob: -3.4404163360595703
    3. '[]' → logprob: -4.31541633605957
    4. '(' → logprob: -5.31541633605957
    5. '[
' → logprob: -5.56541633605957
    6. '\n' → logprob: -6.06541633605957
    7. '0' → logprob: -6.69041633605957
    8. ' ' → logprob: -6.94041633605957
    9. 's' → logprob: -7.31541633605957
    10. '#' → logprob: -7.31541633605957

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.376848902320489e-05
    2. ' ' → logprob: -9.625093460083008
    3. '[' → logprob: -11.375093460083008
    4. ']' → logprob: -11.625093460083008
    5. '])' → logprob: -12.250093460083008
    6. ')' → logprob: -14.125093460083008
    7. '-' → logprob: -15.000093460083008
    8. '(' → logprob: -15.625093460083008
    9. '   ' → logprob: -15.750093460083008
    10. '  ' → logprob: -16.000093460083008

Token 108: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03202401101589203
    2. ')' → logprob: -3.6570239067077637
    3. '<|end|>' → logprob: -5.782023906707764
    4. ',)' → logprob: -6.907023906707764
    5. ',None' → logprob: -7.282023906707764
    6. ',
' → logprob: -7.282023906707764
    7. '),' → logprob: -9.782024383544922
    8. ' ,' → logprob: -10.407024383544922
    9. '
' → logprob: -10.782024383544922
    10. ']' → logprob: -10.782024383544922

Token 109: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04753132164478302
    2. '0' → logprob: -3.4225313663482666
    3. ' None' → logprob: -4.2975311279296875
    4. ' ' → logprob: -8.922531127929688
    5. '   ' → logprob: -10.922531127929688
    6. '-' → logprob: -11.047531127929688
    7. '_None' → logprob: -12.422531127929688
    8. ')' → logprob: -12.547531127929688
    9. '  ' → logprob: -13.172531127929688
    10. '[]' → logprob: -13.297531127929688

Token 110: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38172224164009094
    2. '

' → logprob: -1.6317222118377686
    3. 'class' → logprob: -2.7567222118377686
    4. 'def' → logprob: -2.8817222118377686
    5. '\n' → logprob: -7.506722450256348
    6. '```' → logprob: -8.256722450256348
    7. '
' → logprob: -8.381722450256348
    8. '


' → logprob: -8.381722450256348
    9. ' class' → logprob: -9.256722450256348
    10. '    
' → logprob: -9.381722450256348

Token 111: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21085171401500702
    2. 'class' → logprob: -2.4608516693115234
    3. '

' → logprob: -2.5858516693115234
    4. 'def' → logprob: -3.8358516693115234
    5. '
' → logprob: -6.210851669311523
    6. '\n' → logprob: -6.460851669311523
    7. 'd' → logprob: -6.585851669311523
    8. 'c' → logprob: -7.210851669311523
    9. '' → logprob: -7.335851669311523
    10. 'n' → logprob: -7.585851669311523

Token 112: ' preorder' (ID: 152292)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.35830309987068176
    2. ' main' → logprob: -1.2333030700683594
    3. ' inorder' → logprob: -6.358303070068359
    4. ' build' → logprob: -6.608303070068359
    5. ' search' → logprob: -6.983303070068359
    6. '_' → logprob: -6.983303070068359
    7. ' insertion' → logprob: -7.108303070068359
    8. '_insert' → logprob: -7.108303070068359
    9. 'insert' → logprob: -7.983303070068359
    10. ' ' → logprob: -8.10830307006836

Token 113: '(tree' (ID: 44909)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.6562526822090149
    2. '_tr' → logprob: -1.1562526226043701
    3. '(node' → logprob: -2.28125262260437
    4. '(' → logprob: -3.28125262260437
    5. '(tree' → logprob: -4.031252861022949
    6. 'Traversal' → logprob: -5.531252861022949
    7. '(Node' → logprob: -6.156252861022949
    8. '_' → logprob: -7.031252861022949
    9. ' traversal' → logprob: -7.531252861022949
    10. '(self' → logprob: -7.656252861022949

Token 114: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05804094672203064
    2. '):' → logprob: -2.9330408573150635
    3. ')' → logprob: -6.183041095733643
    4. ':' → logprob: -7.183041095733643
    5. ',node' → logprob: -9.308040618896484
    6. ' ,' → logprob: -9.808040618896484
    7. '_root' → logprob: -9.933040618896484
    8. ' ):' → logprob: -10.058040618896484
    9. '_node' → logprob: -10.058040618896484
    10. '):
' → logprob: -11.183040618896484

Token 115: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.07885684818029404
    2. ' Node' → logprob: -2.703856945037842
    3. ')' → logprob: -5.453856945037842
    4. '   ' → logprob: -6.328856945037842
    5. 'None' → logprob: -6.828856945037842
    6. 'Optional' → logprob: -7.328856945037842
    7. '
' → logprob: -8.703856468200684
    8. ' None' → logprob: -8.828856468200684
    9. ' Optional' → logprob: -9.078856468200684
    10. 'node' → logprob: -9.328856468200684

Token 116: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20747265219688416
    2. ')' → logprob: -1.9574726819992065
    3. '):' → logprob: -3.332472562789917
    4. ':' → logprob: -4.582472801208496
    5. '   ' → logprob: -9.707472801208496
    6. '):
' → logprob: -9.832472801208496
    7. ' )' → logprob: -10.082472801208496
    8. ' ):' → logprob: -10.707472801208496
    9. ' ,' → logprob: -10.832472801208496
    10. ')->' → logprob: -12.957472801208496

Token 117: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005515245720744133
    2. ' ->' → logprob: -5.755515098571777
    3. '):' → logprob: -7.130515098571777
    4. '->' → logprob: -7.255515098571777
    5. ')' → logprob: -7.630515098571777
    6. ' :' → logprob: -8.255515098571777
    7. ')->' → logprob: -9.880515098571777
    8. ',' → logprob: -11.630515098571777
    9. '   ' → logprob: -11.880515098571777
    10. ':
' → logprob: -12.130515098571777

Token 118: ' None' (ID: 4662)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7672580480575562
    2. ' None' → logprob: -0.8922580480575562
    3. 'None' → logprob: -2.6422581672668457
    4. 'list' → logprob: -3.1422581672668457
    5. ' str' → logprob: -4.642258167266846
    6. 'str' → logprob: -7.017258167266846
    7. ' ' → logprob: -7.142258167266846
    8. ' []' → logprob: -9.767257690429688
    9. 'int' → logprob: -10.142257690429688
    10. '   ' → logprob: -10.142257690429688

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005756704485975206
    2. ':
' → logprob: -7.500575542449951
    3. '   ' → logprob: -10.87557601928711
    4. ':def' → logprob: -13.37557601928711
    5. '):' → logprob: -14.00057601928711
    6. ' :' → logprob: -14.25057601928711
    7. '():' → logprob: -15.87557601928711
    8. ',' → logprob: -15.87557601928711
    9. ':**' → logprob: -16.12557601928711
    10. ':void' → logprob: -16.37557601928711

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010935692116618156
    2. '
' → logprob: -5.3859357833862305
    3. ' if' → logprob: -5.6359357833862305
    4. '    
' → logprob: -6.0109357833862305
    5. '    ' → logprob: -9.26093578338623
    6. ' 
' → logprob: -9.38593578338623
    7. 'if' → logprob: -10.88593578338623
    8. ',' → logprob: -11.26093578338623
    9. '	if' → logprob: -11.76093578338623
    10. ')' → logprob: -11.88593578338623

Token 121: ' """' (ID: 9280)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39385712146759033
    2. ' if' → logprob: -1.1438571214675903
    3. '   ' → logprob: -5.643857002258301
    4. 'print' → logprob: -5.893857002258301
    5. '
' → logprob: -7.518857002258301
    6. ' print' → logprob: -9.1438570022583
    7. '```' → logprob: -11.8938570022583
    8. '    
' → logprob: -12.3938570022583
    9. '	if' → logprob: -13.2688570022583
    10. ' 
' → logprob: -13.3938570022583

Token 122: '先' (ID: 12231)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06310945004224777
    2. 'if' → logprob: -3.1881093978881836
    3. '   ' → logprob: -3.9381093978881836
    4. '
' → logprob: -8.188109397888184
    5. ' print' → logprob: -9.688109397888184
    6. 'print' → logprob: -10.563109397888184
    7. '    
' → logprob: -10.688109397888184
    8. ' 
' → logprob: -11.313109397888184
    9. '    ' → logprob: -11.563109397888184
    10. ' """' → logprob: -12.438109397888184

Token 123: '行' (ID: 6550)
  Prédit: '序'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '序' → logprob: -0.0013309523928910494
    2. '
' → logprob: -7.501330852508545
    3. '程' → logprob: -8.251331329345703
    4. '行' → logprob: -8.251331329345703
    5. '順' → logprob: -10.001331329345703
    6. 'order' → logprob: -10.126331329345703
    7. '頭' → logprob: -10.376331329345703
    8. '   ' → logprob: -10.876331329345703
    9. '```' → logprob: -11.001331329345703
    10. '

' → logprob: -11.251331329345703

Token 124: '順' (ID: 90778)
  Prédit: ' traversal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traversal' → logprob: -0.1858004331588745
    2. 'def' → logprob: -1.9358004331588745
    3. '遍' → logprob: -4.685800552368164
    4. ' def' → logprob: -4.685800552368164
    5. ' travers' → logprob: -6.560800552368164
    6. ' if' → logprob: -6.685800552368164
    7. 'Traversal' → logprob: -6.810800552368164
    8. 'print' → logprob: -7.310800552368164
    9. '   ' → logprob: -7.685800552368164
    10. ' ' → logprob: -7.810800552368164

Token 125: '巡' (ID: 84982)
  Prédit: ' traversal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' traversal' → logprob: -0.9339331984519958
    2. '   ' → logprob: -1.3089332580566406
    3. ' if' → logprob: -1.3089332580566406
    4. ' print' → logprob: -3.6839332580566406
    5. ' ' → logprob: -3.8089332580566406
    6. 'print' → logprob: -4.933933258056641
    7. ':' → logprob: -6.058933258056641
    8. ')' → logprob: -6.558933258056641
    9. '遍' → logprob: -6.683933258056641
    10. 'if' → logprob: -6.683933258056641

Token 126: '回' (ID: 10154)
  Prédit: '回'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '回' → logprob: -0.02884521521627903
    2. '訪' → logprob: -4.778845310211182
    3. 'り' → logprob: -5.278845310211182
    4. '```' → logprob: -5.903845310211182
    5. '
' → logprob: -6.028845310211182
    6. '序' → logprob: -6.403845310211182
    7. '法' → logprob: -6.528845310211182
    8. '   ' → logprob: -6.653845310211182
    9. '査' → logprob: -6.653845310211182
    10. '環' → logprob: -7.653845310211182

Token 127: '。' (ID: 788)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15144138038158417
    2. ' if' → logprob: -2.4014413356781006
    3. '
' → logprob: -3.1514413356781006
    4. 'if' → logprob: -5.40144157409668
    5. '<|end|>' → logprob: -7.40144157409668
    6. '	if' → logprob: -7.65144157409668
    7. ' ' → logprob: -7.90144157409668
    8. '<|end|>' → logprob: -8.02644157409668
    9. '    
' → logprob: -9.02644157409668
    10. ':' → logprob: -9.15144157409668

Token 128: '"""
' (ID: 15611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5920838117599487
    2. ' if' → logprob: -0.8420838117599487
    3. 'if' → logprob: -4.342083930969238
    4. '
' → logprob: -6.092083930969238
    5. ' print' → logprob: -7.842083930969238
    6. 'print' → logprob: -8.717083930969238
    7. '    
' → logprob: -9.592083930969238
    8. '    ' → logprob: -10.217083930969238
    9. '	if' → logprob: -10.842083930969238
    10. ' ' → logprob: -10.842083930969238

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12244856357574463
    2. ' if' → logprob: -2.747448444366455
    3. 'if' → logprob: -2.997448444366455
    4. 'print' → logprob: -6.872448444366455
    5. '
' → logprob: -9.372448921203613
    6. ' print' → logprob: -9.622448921203613
    7. '	if' → logprob: -10.497448921203613
    8. '    
' → logprob: -11.122448921203613
    9. '    ' → logprob: -11.622448921203613
    10. '	print' → logprob: -13.747448921203613

Token 130: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025033634155988693
    2. 'print' (adapté à ' print') → logprob: -6.002503395080566
    3. ' if' → logprob: -10.502503395080566
    4. '   ' → logprob: -16.00250244140625
    5. '
' → logprob: -16.12750244140625
    6. 'def' → logprob: -16.75250244140625
    7. '```' → logprob: -18.37750244140625
    8. '    
' → logprob: -18.50250244140625
    9. '	if' → logprob: -18.50250244140625
    10. ' print' → logprob: -19.37750244140625

Token 131: '(f' (ID: 1526)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.1647828221321106
    2. '(' → logprob: -1.9147827625274658
    3. '(f' → logprob: -5.414783000946045
    4. '('' → logprob: -10.164782524108887
    5. '("("' → logprob: -10.164782524108887
    6. '((' → logprob: -11.789782524108887
    7. '("' → logprob: -12.039782524108887
    8. '(
' → logprob: -12.664782524108887
    9. 'tree' → logprob: -13.539782524108887
    10. ' (' → logprob: -14.414782524108887

Token 132: ''' (ID: 6)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.28312838077545166
    2. '(tree' → logprob: -1.9081283807754517
    3. '("{' → logprob: -2.908128261566162
    4. ''{' → logprob: -4.033128261566162
    5. '{' → logprob: -4.533128261566162
    6. '(' → logprob: -5.283128261566162
    7. '('{' → logprob: -5.783128261566162
    8. '(f' → logprob: -5.908128261566162
    9. 'tree' → logprob: -6.033128261566162
    10. '"' → logprob: -6.908128261566162

Token 133: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0027419927064329386
    2. 'tree' → logprob: -6.502741813659668
    3. ' {' → logprob: -6.877741813659668
    4. '(tree' → logprob: -8.627741813659668
    5. ' tree' → logprob: -11.627741813659668
    6. '"{' → logprob: -12.377741813659668
    7. '({' → logprob: -13.502741813659668
    8. '
' → logprob: -13.627741813659668
    9. ' ' → logprob: -13.627741813659668
    10. '   ' → logprob: -13.627741813659668

Token 134: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -5.9153885558771435e-06
    2. ' tree' → logprob: -12.375005722045898
    3. '(tree' → logprob: -14.125005722045898
    4. '	tree' → logprob: -14.875005722045898
    5. 'tre' → logprob: -15.500005722045898
    6. '   ' → logprob: -16.2500057220459
    7. 'node' → logprob: -16.5000057220459
    8. '}' → logprob: -17.0000057220459
    9. '.tree' → logprob: -17.1250057220459
    10. 't' → logprob: -17.3750057220459

Token 135: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.141186450899113e-05
    2. '.' → logprob: -11.000020980834961
    3. ' .' → logprob: -12.875020980834961
    4. '.left' → logprob: -13.875020980834961
    5. 'key' → logprob: -14.000020980834961
    6. ').' → logprob: -16.25002098083496
    7. '
' → logprob: -16.87502098083496
    8. ' key' → logprob: -17.75002098083496
    9. '.keys' → logprob: -17.75002098083496
    10. '.right' → logprob: -17.87502098083496

Token 136: '}',' (ID: 36898)
  Prédit: '}','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}',' → logprob: -0.3155379891395569
    2. '',' → logprob: -1.315537929534912
    3. '}' → logprob: -6.565537929534912
    4. '}')' → logprob: -7.440537929534912
    5. '')' → logprob: -8.69053840637207
    6. ',' → logprob: -10.31553840637207
    7. ''}' → logprob: -10.56553840637207
    8. ' ',' → logprob: -11.06553840637207
    9. '}'' → logprob: -11.81553840637207
    10. ' }' → logprob: -12.19053840637207

Token 137: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.048590436577796936
    2. ' end' → logprob: -3.0485904216766357
    3. ',end' → logprob: -13.173590660095215
    4. ',' → logprob: -15.048590660095215
    5. '(end' → logprob: -15.548590660095215
    6. 'sep' → logprob: -15.548590660095215
    7. '	end' → logprob: -15.798590660095215
    8. ')' → logprob: -15.923590660095215
    9. '   ' → logprob: -16.5485897064209
    10. ' ' → logprob: -16.6735897064209

Token 138: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.00779624842107296
    2. '=' → logprob: -5.007796287536621
    3. '=''' → logprob: -6.882796287536621
    4. '='')
' → logprob: -10.382796287536621
    5. ''' → logprob: -11.882796287536621
    6. '="' → logprob: -12.007796287536621
    7. '='',' → logprob: -12.507796287536621
    8. '=',' → logprob: -12.632796287536621
    9. ' ='' → logprob: -14.007796287536621
    10. ''=' → logprob: -14.007796287536621

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006139122415333986
    2. ' if' → logprob: -5.381139278411865
    3. 'if' → logprob: -6.631139278411865
    4. '	if' → logprob: -9.006138801574707
    5. '
' → logprob: -10.506138801574707
    6. ' ' → logprob: -11.131138801574707
    7. '<|end|>' → logprob: -11.631138801574707
    8. '    
' → logprob: -12.006138801574707
    9. '  ' → logprob: -12.131138801574707
    10. ',' → logprob: -12.256138801574707

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19679422676563263
    2. '   ' → logprob: -2.196794271469116
    3. ' if' → logprob: -2.696794271469116
    4. '	if' → logprob: -10.071794509887695
    5. '
' → logprob: -12.196794509887695
    6. ' ' → logprob: -12.446794509887695
    7. '    
' → logprob: -12.696794509887695
    8. '  ' → logprob: -12.696794509887695
    9. '    ' → logprob: -14.071794509887695
    10. 'for' → logprob: -14.321794509887695

Token 141: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.03368489071726799
    2. 'tree' → logprob: -3.4086849689483643
    3. '	tree' → logprob: -10.283684730529785
    4. '(tree' → logprob: -12.783684730529785
    5. ' ' → logprob: -13.408684730529785
    6. '   ' → logprob: -15.158684730529785
    7. 'Tree' → logprob: -16.1586856842041
    8. '.tree' → logprob: -16.4086856842041
    9. '_tree' → logprob: -16.7836856842041
    10. ' not' → logprob: -17.2836856842041

Token 142: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00013381359167397022
    2. '.' → logprob: -9.125133514404297
    3. '.right' → logprob: -11.125133514404297
    4. '.Left' → logprob: -12.625133514404297
    5. '.le' → logprob: -12.875133514404297
    6. ' .' → logprob: -13.375133514404297
    7. ' is' → logprob: -14.125133514404297
    8. 'left' → logprob: -14.125133514404297
    9. ' and' → logprob: -14.250133514404297
    10. '.parent' → logprob: -16.000133514404297

Token 143: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.23282502591609955
    2. 'is' → logprob: -1.7328250408172607
    3. ':' → logprob: -3.4828250408172607
    4. ':
' → logprob: -9.23282527923584
    5. ')' → logprob: -10.23282527923584
    6. '!=' → logprob: -11.10782527923584
    7. '	is' → logprob: -11.23282527923584
    8. '   ' → logprob: -11.73282527923584
    9. ' ' → logprob: -11.98282527923584
    10. '  ' → logprob: -12.35782527923584

Token 144: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5238825678825378
    2. ' not' → logprob: -0.8988825678825378
    3. 'None' → logprob: -7.7738823890686035
    4. '   ' → logprob: -9.398882865905762
    5. '
' → logprob: -9.523882865905762
    6. ' None' → logprob: -10.148882865905762
    7. 'n' → logprob: -10.773882865905762
    8. '	not' → logprob: -10.773882865905762
    9. '!' → logprob: -11.023882865905762
    10. 'Not' → logprob: -11.148882865905762

Token 145: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.003186147892847657
    2. ' None' → logprob: -5.753186225891113
    3. '   ' → logprob: -11.753186225891113
    4. '_None' → logprob: -16.003185272216797
    5. ' ' → logprob: -16.253185272216797
    6. '       ' → logprob: -16.378185272216797
    7. '  ' → logprob: -16.378185272216797
    8. '    ' → logprob: -16.753185272216797
    9. '(None' → logprob: -17.003185272216797
    10. 'No' → logprob: -17.378185272216797

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07008525729179382
    2. ':
' → logprob: -2.695085287094116
    3. '   ' → logprob: -9.320085525512695
    4. '       ' → logprob: -10.695085525512695
    5. '):
' → logprob: -11.070085525512695
    6. ' and' → logprob: -11.570085525512695
    7. '):' → logprob: -12.695085525512695
    8. ' :' → logprob: -12.945085525512695
    9. ':

' → logprob: -13.820085525512695
    10. ' :
' → logprob: -13.945085525512695

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1665389984846115
    2. ' preorder' → logprob: -1.916538953781128
    3. 'pre' → logprob: -5.541539192199707
    4. '   ' → logprob: -7.291539192199707
    5. '
' → logprob: -7.416539192199707
    6. '        
' → logprob: -7.541539192199707
    7. '(pre' → logprob: -8.416539192199707
    8. ' pre' → logprob: -8.916539192199707
    9. '	pre' → logprob: -9.291539192199707
    10. '    
' → logprob: -10.291539192199707

Token 148: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.38998427987098694
    2. ' preorder' → logprob: -1.1399842500686646
    3. '   ' → logprob: -6.764984130859375
    4. ' pre' → logprob: -6.889984130859375
    5. '
' → logprob: -7.889984130859375
    6. '       ' → logprob: -8.139984130859375
    7. '	pre' → logprob: -8.889984130859375
    8. '    ' → logprob: -10.139984130859375
    9. '(pre' → logprob: -10.514984130859375
    10. 'preced' → logprob: -10.889984130859375

Token 149: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.00026264708139933646
    2. '(' → logprob: -8.250262260437012
    3. '(t' → logprob: -13.750262260437012
    4. ' (' → logprob: -15.750262260437012
    5. '(Tree' → logprob: -16.750263214111328
    6. '(
' → logprob: -17.125263214111328
    7. '(tr' → logprob: -17.750263214111328
    8. '(node' → logprob: -18.250263214111328
    9. 'tree' → logprob: -18.375263214111328
    10. '((' → logprob: -18.500263214111328

Token 150: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0017137357499450445
    2. '.' → logprob: -6.376713752746582
    3. ' .' → logprob: -12.501713752746582
    4. '.right' → logprob: -12.751713752746582
    5. ').' → logprob: -13.376713752746582
    6. '.tree' → logprob: -13.501713752746582
    7. '.le' → logprob: -14.376713752746582
    8. 'left' → logprob: -14.876713752746582
    9. '.Left' → logprob: -15.251713752746582
    10. ')' → logprob: -15.751713752746582

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39003580808639526
    2. ')
' → logprob: -1.14003586769104
    3. '   ' → logprob: -5.765035629272461
    4. ' )
' → logprob: -11.140035629272461
    5. ' )' → logprob: -11.890035629272461
    6. ')
' → logprob: -13.640035629272461
    7. ' ' → logprob: -14.140035629272461
    8. ')

' → logprob: -14.265035629272461
    9. '       ' → logprob: -15.515035629272461
    10. '
' → logprob: -16.89003562927246

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014211333356797695
    2. '
' → logprob: -4.264211177825928
    3. '    
' → logprob: -10.764211654663086
    4. ' if' → logprob: -10.889211654663086
    5. 'if' → logprob: -12.389211654663086
    6. ' 
' → logprob: -13.889211654663086
    7. '<|end|>' → logprob: -13.889211654663086
    8. ' ' → logprob: -14.264211654663086
    9. '	if' → logprob: -15.139211654663086
    10. '
' → logprob: -15.139211654663086

Token 153: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6382384896278381
    2. '   ' → logprob: -1.1382384300231934
    3. 'if' (adapté à ' if') → logprob: -1.8882384300231934
    4. '
' → logprob: -10.638238906860352
    5. '	if' → logprob: -10.638238906860352
    6. ' ' → logprob: -12.013238906860352
    7. '    
' → logprob: -14.013238906860352
    8. '    ' → logprob: -14.138238906860352
    9. '  ' → logprob: -15.013238906860352
    10. 'If' → logprob: -15.013238906860352

Token 154: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.016052784398198128
    2. 'tree' → logprob: -4.141052722930908
    3. '(tree' → logprob: -11.391053199768066
    4. '	tree' → logprob: -12.016053199768066
    5. ' ' → logprob: -14.766053199768066
    6. '.tree' → logprob: -15.266053199768066
    7. ' tre' → logprob: -16.01605224609375
    8. '/tree' → logprob: -16.26605224609375
    9. '-tree' → logprob: -16.39105224609375
    10. '   ' → logprob: -16.51605224609375

Token 155: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0008082019630819559
    2. '.' → logprob: -7.125808238983154
    3. ' .' → logprob: -13.250807762145996
    4. 'right' → logprob: -13.875807762145996
    5. '.left' → logprob: -14.250807762145996
    6. '	right' → logprob: -15.500807762145996
    7. '   ' → logprob: -16.250808715820312
    8. ' ' → logprob: -17.000808715820312
    9. '[right' → logprob: -17.000808715820312
    10. '.
' → logprob: -17.250808715820312

Token 156: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10020763427019119
    2. 'is' → logprob: -2.350207567214966
    3. '	is' → logprob: -14.725207328796387
    4. ' ' → logprob: -15.600207328796387
    5. '   ' → logprob: -16.475208282470703
    6. ')' → logprob: -16.475208282470703
    7. ' ' → logprob: -16.600208282470703
    8. 'は' → logprob: -16.850208282470703
    9. '[' → logprob: -17.600208282470703
    10. ':' → logprob: -17.600208282470703

Token 157: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3484679162502289
    2. 'not' → logprob: -1.2234679460525513
    3. '   ' → logprob: -12.223467826843262
    4. '	not' → logprob: -12.473467826843262
    5. 'None' → logprob: -12.598467826843262
    6. ' ' → logprob: -13.098467826843262
    7. ' ' → logprob: -13.223467826843262
    8. '不' → logprob: -13.598467826843262
    9. 'Not' → logprob: -13.848467826843262
    10. '
' → logprob: -14.223467826843262

Token 158: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.005454313009977341
    2. ' None' → logprob: -5.2554545402526855
    3. 'not' → logprob: -8.505454063415527
    4. '   ' → logprob: -12.255454063415527
    5. 'Not' → logprob: -12.630454063415527
    6. '_None' → logprob: -12.755454063415527
    7. ' not' → logprob: -13.005454063415527
    8. 'none' → logprob: -13.505454063415527
    9. '_none' → logprob: -13.880454063415527
    10. '=None' → logprob: -14.505454063415527

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02146187052130699
    2. ':
' → logprob: -4.0214619636535645
    3. '       ' → logprob: -5.7714619636535645
    4. '   ' → logprob: -9.271461486816406
    5. '):' → logprob: -9.646461486816406
    6. '):
' → logprob: -10.896461486816406
    7. ')' → logprob: -12.271461486816406
    8. ' :' → logprob: -13.271461486816406
    9. '  ' → logprob: -14.146461486816406
    10. ':

' → logprob: -14.146461486816406

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005079937167465687
    2. 'pre' → logprob: -5.505079746246338
    3. ' preorder' → logprob: -7.130079746246338
    4. '   ' → logprob: -9.505080223083496
    5. ' pre' → logprob: -9.755080223083496
    6. '(pre' → logprob: -10.130080223083496
    7. '	pre' → logprob: -11.255080223083496
    8. ':' → logprob: -12.880080223083496
    9. 'preter' → logprob: -12.880080223083496
    10. '      ' → logprob: -13.005080223083496

Token 161: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.006717974785715342
    2. ' preorder' → logprob: -5.006718158721924
    3. ' pre' → logprob: -13.756717681884766
    4. 'post' → logprob: -14.256717681884766
    5. '(pre' → logprob: -15.006717681884766
    6. '	pre' → logprob: -15.131717681884766
    7. 'pr' → logprob: -16.131717681884766
    8. 'preced' → logprob: -16.256717681884766
    9. 'preh' → logprob: -17.756717681884766
    10. '   ' → logprob: -17.756717681884766

Token 162: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.250001907348633
    3. '(t' → logprob: -18.125001907348633
    4. 'tree' → logprob: -18.375001907348633
    5. '(Tree' → logprob: -19.125001907348633
    6. ' (' → logprob: -19.875001907348633
    7. '	tree' → logprob: -20.875001907348633
    8. '(root' → logprob: -21.125001907348633
    9. '(
' → logprob: -21.500001907348633
    10. '(tr' → logprob: -21.750001907348633

Token 163: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00034988581319339573
    2. '.' → logprob: -8.000349998474121
    3. ' .' → logprob: -11.750349998474121
    4. 'right' → logprob: -12.750349998474121
    5. ').' → logprob: -13.125349998474121
    6. '.r' → logprob: -14.500349998474121
    7. '.left' → logprob: -14.750349998474121
    8. ')' → logprob: -15.250349998474121
    9. '.Right' → logprob: -16.125349044799805
    10. '[right' → logprob: -16.125349044799805

Token 164: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001227276516146958
    2. '   ' → logprob: -9.250123023986816
    3. ')
' → logprob: -10.625123023986816
    4. ' )' → logprob: -13.750123023986816
    5. '')' → logprob: -15.375123023986816
    6. '<|end|>' → logprob: -15.500123023986816
    7. ')return' → logprob: -15.625123023986816
    8. '}' → logprob: -15.750123023986816
    9. ')#' → logprob: -15.875123023986816
    10. ')}' → logprob: -16.2501220703125

Token 165: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6433471441268921
    2. '
' → logprob: -0.7683471441268921
    3. ' 
' → logprob: -5.393347263336182
    4. '<|end|>' → logprob: -5.893347263336182
    5. '  
' → logprob: -6.643347263336182
    6. '

' → logprob: -7.018347263336182
    7. ' def' → logprob: -7.768347263336182
    8. '    
' → logprob: -8.393346786499023
    9. '\' → logprob: -8.893346786499023
    10. '\n' → logprob: -9.143346786499023

Token 166: ' inorder' (ID: 139692)
  Prédit: ' inorder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inorder' → logprob: -0.16257935762405396
    2. 'in' → logprob: -1.9125792980194092
    3. ' in' → logprob: -7.287579536437988
    4. ' main' → logprob: -7.537579536437988
    5. 'main' → logprob: -8.162579536437988
    6. 'print' → logprob: -9.037579536437988
    7. 'insert' → logprob: -9.162579536437988
    8. 'post' → logprob: -9.287579536437988
    9. ' insert' → logprob: -9.537579536437988
    10. ' post' → logprob: -10.162579536437988

Token 167: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -5.860340752406046e-05
    2. '(' → logprob: -9.7500581741333
    3. ' (' → logprob: -16.500059127807617
    4. '(t' → logprob: -16.750059127807617
    5. '(Tree' → logprob: -16.750059127807617
    6. '(tr' → logprob: -18.000059127807617
    7. '(root' → logprob: -18.250059127807617
    8. '	tree' → logprob: -18.250059127807617
    9. '(node' → logprob: -18.625059127807617
    10. '(
' → logprob: -19.500059127807617

Token 168: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008913894183933735
    2. '(tree' → logprob: -5.383913993835449
    3. ')' → logprob: -5.758913993835449
    4. '):' → logprob: -6.883913993835449
    5. ' :' → logprob: -10.50891399383545
    6. '   ' → logprob: -10.75891399383545
    7. ',' → logprob: -11.75891399383545
    8. ' )' → logprob: -12.38391399383545
    9. ' ' → logprob: -12.50891399383545
    10. '(' → logprob: -12.50891399383545

Token 169: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.20320865511894226
    2. ' Node' → logprob: -1.7032086849212646
    3. 'Tree' → logprob: -7.5782084465026855
    4. '(Node' → logprob: -7.9532084465026855
    5. ' tree' → logprob: -7.9532084465026855
    6. 'tree' → logprob: -8.203208923339844
    7. ')' → logprob: -8.453208923339844
    8. ' Tree' → logprob: -11.078208923339844
    9. '(tree' → logprob: -11.078208923339844
    10. '.Node' → logprob: -11.578208923339844

Token 170: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00029518234077841043
    2. '(tree' → logprob: -8.875295639038086
    3. '):' → logprob: -8.875295639038086
    4. ':' → logprob: -11.500295639038086
    5. ' )' → logprob: -13.125295639038086
    6. '   ' → logprob: -13.875295639038086
    7. '):
' → logprob: -14.125295639038086
    8. ' tree' → logprob: -14.375295639038086
    9. 'tree' → logprob: -15.000295639038086
    10. ',' → logprob: -15.250295639038086

Token 171: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5519384145736694
    2. '(tree' → logprob: -1.6769384145736694
    3. ' ->' → logprob: -2.051938533782959
    4. ':' → logprob: -2.301938533782959
    5. '->' → logprob: -4.801938533782959
    6. '   ' → logprob: -8.8019380569458
    7. ')->' → logprob: -9.3019380569458
    8. '(' → logprob: -9.9269380569458
    9. ' :' → logprob: -10.3019380569458
    10. '):' → logprob: -10.5519380569458

Token 172: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.47417202591896057
    2. ' None' → logprob: -0.9741719961166382
    3. '(None' → logprob: -9.34917163848877
    4. 'Node' → logprob: -12.84917163848877
    5. ' ' → logprob: -13.22417163848877
    6. '=None' → logprob: -13.84917163848877
    7. ')' → logprob: -14.22417163848877
    8. '_None' → logprob: -14.34917163848877
    9. 'def' → logprob: -15.59917163848877
    10. '   ' → logprob: -15.59917163848877

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07011105120182037
    2. ':
' → logprob: -2.695111036300659
    3. '   ' → logprob: -8.695111274719238
    4. ' :' → logprob: -13.570111274719238
    5. '):
' → logprob: -13.695111274719238
    6. ':

' → logprob: -13.820111274719238
    7. '):' → logprob: -14.320111274719238
    8. ':def' → logprob: -14.320111274719238
    9. ' :
' → logprob: -14.445111274719238
    10. '():
' → logprob: -14.945111274719238

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.688212614681106e-05
    2. '
' → logprob: -11.250017166137695
    3. ' if' → logprob: -13.375017166137695
    4. '```' → logprob: -14.375017166137695
    5. '    ' → logprob: -15.125017166137695
    6. '    
' → logprob: -15.375017166137695
    7. '   ' → logprob: -15.375017166137695
    8. ')' → logprob: -16.125017166137695
    9. 'if' → logprob: -16.250017166137695
    10. ' print' → logprob: -16.375017166137695

Token 175: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013766606571152806
    2. ' if' → logprob: -6.626376628875732
    3. 'if' → logprob: -11.12637710571289
    4. ' print' → logprob: -11.25137710571289
    5. '
' → logprob: -11.87637710571289
    6. '"""' (adapté à ' """') → logprob: -12.12637710571289
    7. ' """' → logprob: -12.25137710571289
    8. '```' → logprob: -12.50137710571289
    9. '    ' → logprob: -14.12637710571289
    10. 'print' → logprob: -14.87637710571289

Token 176: '中' (ID: 1404)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7434192895889282
    2. '"""' → logprob: -1.9934192895889282
    3. '中' → logprob: -2.3684191703796387
    4. '先' → logprob: -2.8684191703796387
    5. ' ' → logprob: -2.8684191703796387
    6. 'def' → logprob: -3.2434191703796387
    7. ' if' → logprob: -3.3684191703796387
    8. 'in' → logprob: -3.4934191703796387
    9. '   ' → logprob: -3.4934191703796387
    10. ' """' → logprob: -3.9934191703796387

Token 177: '間' (ID: 16987)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5809047818183899
    2. '   ' → logprob: -1.4559047222137451
    3. '順' → logprob: -3.080904722213745
    4. '行' → logprob: -3.330904722213745
    5. ' ' → logprob: -3.955904722213745
    6. 'def' → logprob: -4.080904960632324
    7. '間' → logprob: -4.080904960632324
    8. '序' → logprob: -4.205904960632324
    9. 'print' → logprob: -4.830904960632324
    10. 'for' → logprob: -5.080904960632324

Token 178: '順' (ID: 90778)
  Prédit: '順'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '順' → logprob: -0.0003741887048818171
    2. 'order' → logprob: -9.250373840332031
    3. '_order' → logprob: -9.375373840332031
    4. '遍' → logprob: -10.000373840332031
    5. '```' → logprob: -10.000373840332031
    6. '巡' → logprob: -10.500373840332031
    7. '
' → logprob: -10.625373840332031
    8. '顺' → logprob: -11.375373840332031
    9. '

' → logprob: -12.250373840332031
    10. '序' → logprob: -12.625373840332031

Token 179: '巡' (ID: 84982)
  Prédit: '巡'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '巡' → logprob: -0.00653122691437602
    2. '   ' → logprob: -6.256531238555908
    3. '遍' → logprob: -6.881531238555908
    4. ' ' → logprob: -7.131531238555908
    5. ' traversal' → logprob: -7.131531238555908
    6. '順' → logprob: -7.381531238555908
    7. 'def' → logprob: -8.00653076171875
    8. ' \xe5\xb7' → logprob: -8.00653076171875
    9. '　' → logprob: -8.88153076171875
    10. '
' → logprob: -8.88153076171875

Token 180: '回' (ID: 10154)
  Prédit: '回'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '回' → logprob: -0.0010542457457631826
    2. '環' → logprob: -7.876054286956787
    3. '帰' → logprob: -8.376053810119629
    4. '巡' → logprob: -9.501053810119629
    5. '```' → logprob: -9.501053810119629
    6. '覧' → logprob: -10.001053810119629
    7. '行' → logprob: -10.501053810119629
    8. '返' → logprob: -10.501053810119629
    9. '閲' → logprob: -10.876053810119629
    10. 'return' → logprob: -11.251053810119629

Token 181: '。' (ID: 788)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6656163930892944
    2. '(tree' → logprob: -1.1656163930892944
    3. '.' → logprob: -2.165616512298584
    4. '。' → logprob: -2.915616512298584
    5. '(' → logprob: -6.165616512298584
    6. ' ' → logprob: -7.165616512298584
    7. ')' → logprob: -7.540616512298584
    8. ' tree' → logprob: -7.790616512298584
    9. 'def' → logprob: -8.040616035461426
    10. '	tree' → logprob: -8.040616035461426

Token 182: '"""
' (ID: 15611)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013738969573751092
    2. '
' → logprob: -9.500137329101562
    3. ' if' → logprob: -10.250137329101562
    4. '```' → logprob: -10.750137329101562
    5. 'if' → logprob: -13.000137329101562
    6. '    ' → logprob: -14.125137329101562
    7. '       ' → logprob: -14.750137329101562
    8. 'print' → logprob: -14.750137329101562
    9. ' print' → logprob: -14.875137329101562
    10. ' ' → logprob: -15.000137329101562

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.053081028163433075
    2. ' if' → logprob: -3.0530810356140137
    3. 'if' → logprob: -5.428081035614014
    4. ' print' → logprob: -10.053080558776855
    5. 'print' → logprob: -11.053080558776855
    6. ' ' → logprob: -11.428080558776855
    7. '
' → logprob: -11.678080558776855
    8. '    ' → logprob: -11.803080558776855
    9. '```' → logprob: -12.678080558776855
    10. '  ' → logprob: -13.928080558776855

Token 184: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010173439048230648
    2. 'print' → logprob: -4.760173320770264
    3. ' if' → logprob: -6.510173320770264
    4. '   ' → logprob: -9.635173797607422
    5. ' print' → logprob: -12.885173797607422
    6. ' ' → logprob: -13.885173797607422
    7. '```' → logprob: -15.135173797607422
    8. '
' → logprob: -15.510173797607422
    9. 'def' → logprob: -15.635173797607422
    10. '  ' → logprob: -17.010173797607422

Token 185: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.31329411268234253
    2. ' tree' → logprob: -1.3132941722869873
    3. '(tree' → logprob: -10.938294410705566
    4. '	tree' → logprob: -11.438294410705566
    5. '   ' → logprob: -13.313294410705566
    6. ' ' → logprob: -13.813294410705566
    7. '.tree' → logprob: -14.813294410705566
    8. 'tre' → logprob: -15.813294410705566
    9. '_tree' → logprob: -15.938294410705566
    10. 'Tree' → logprob: -16.06329345703125

Token 186: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.625005722045898
    3. ' .' → logprob: -13.500005722045898
    4. 'left' → logprob: -14.875005722045898
    5. ' is' → logprob: -16.5000057220459
    6. '.Left' → logprob: -16.8750057220459
    7. '.right' → logprob: -17.0000057220459
    8. '   ' → logprob: -17.1250057220459
    9. '.has' → logprob: -17.6250057220459
    10. '	left' → logprob: -18.1250057220459

Token 187: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5759555101394653
    2. ' is' → logprob: -0.8259555101394653
    3. '	is' → logprob: -12.200955390930176
    4. ' ' → logprob: -12.700955390930176
    5. '   ' → logprob: -12.950955390930176
    6. 'は' → logprob: -13.325955390930176
    7. ')' → logprob: -13.575955390930176
    8. ':' → logprob: -13.575955390930176
    9. ')is' → logprob: -14.575955390930176
    10. '　' → logprob: -15.950955390930176

Token 188: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.11326926201581955
    2. 'not' → logprob: -2.238269329071045
    3. 'None' → logprob: -7.988269329071045
    4. ' None' → logprob: -9.363268852233887
    5. 'Not' → logprob: -11.738268852233887
    6. '	not' → logprob: -12.363268852233887
    7. '   ' → logprob: -12.988268852233887
    8. ' ' → logprob: -13.613268852233887
    9. '
' → logprob: -13.738268852233887
    10. '_not' → logprob: -14.113268852233887

Token 189: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0077775754034519196
    2. 'not' → logprob: -5.382777690887451
    3. ' None' → logprob: -5.882777690887451
    4. ' not' → logprob: -8.257777214050293
    5. '   ' → logprob: -9.632777214050293
    6. 'Not' → logprob: -11.382777214050293
    7. ' ' → logprob: -11.757777214050293
    8. '
' → logprob: -12.257777214050293
    9. '    ' → logprob: -12.507777214050293
    10. '  ' → logprob: -13.257777214050293

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5022602677345276
    2. '       ' → logprob: -1.0022602081298828
    3. ':
' → logprob: -3.877260208129883
    4. '   ' → logprob: -5.002260208129883
    5. '():' → logprob: -9.377260208129883
    6. '():
' → logprob: -9.627260208129883
    7. '<|end|>' → logprob: -10.252260208129883
    8. '):
' → logprob: -11.002260208129883
    9. '      ' → logprob: -11.002260208129883
    10. ' inorder' → logprob: -11.127260208129883

Token 191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0366416871547699
    2. 'in' → logprob: -3.4116415977478027
    3. '   ' → logprob: -6.536641597747803
    4. ' inorder' → logprob: -6.536641597747803
    5. ' in' → logprob: -9.411642074584961
    6. '	in' → logprob: -12.036642074584961
    7. '     ' → logprob: -13.536642074584961
    8. '[in' → logprob: -14.036642074584961
    9. '      ' → logprob: -14.536642074584961
    10. ' ' → logprob: -14.911642074584961

Token 192: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.001036383560858667
    2. ' inorder' → logprob: -6.876036167144775
    3. '   ' → logprob: -13.376036643981934
    4. ' in' → logprob: -13.376036643981934
    5. '	in' → logprob: -14.751036643981934
    6. ' ' → logprob: -16.376035690307617
    7. '  ' → logprob: -17.126035690307617
    8. 'inode' → logprob: -17.376035690307617
    9. '[in' → logprob: -17.626035690307617
    10. 'pre' → logprob: -17.876035690307617

Token 193: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.50001049041748
    3. 'tree' → logprob: -16.250009536743164
    4. ' (' → logprob: -16.750009536743164
    5. '(t' → logprob: -16.750009536743164
    6. '(Tree' → logprob: -17.500009536743164
    7. '(
' → logprob: -18.750009536743164
    8. '(tr' → logprob: -19.375009536743164
    9. '(table' → logprob: -19.625009536743164
    10. '	tree' → logprob: -19.625009536743164

Token 194: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0001146291324403137
    2. '.' → logprob: -9.125114440917969
    3. 'left' → logprob: -13.000114440917969
    4. ' .' → logprob: -13.125114440917969
    5. '.tree' → logprob: -14.375114440917969
    6. '.right' → logprob: -14.875114440917969
    7. '.le' → logprob: -15.500114440917969
    8. '.Left' → logprob: -16.25011444091797
    9. '(left' → logprob: -16.37511444091797
    10. ').' → logprob: -16.87511444091797

Token 195: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07031596451997757
    2. ')' → logprob: -2.9453160762786865
    3. '   ' → logprob: -4.195315837860107
    4. ' )
' → logprob: -8.945316314697266
    5. ')
' → logprob: -9.820316314697266
    6. ' ' → logprob: -10.070316314697266
    7. ')

' → logprob: -11.695316314697266
    8. '
' → logprob: -12.820316314697266
    9. '())
' → logprob: -12.945316314697266
    10. '       ' → logprob: -13.070316314697266

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022231535986065865
    2. '
' → logprob: -4.272231578826904
    3. 'print' → logprob: -4.897231578826904
    4. ' print' → logprob: -8.147231101989746
    5. '    
' → logprob: -8.397231101989746
    6. '```' → logprob: -11.272231101989746
    7. '  
' → logprob: -11.397231101989746
    8. '\n' → logprob: -11.772231101989746
    9. ' 
' → logprob: -12.147231101989746
    10. '	print' → logprob: -12.397231101989746

Token 197: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07930073142051697
    2. ' print' → logprob: -2.57930064201355
    3. '   ' → logprob: -7.829300880432129
    4. '
' → logprob: -11.829300880432129
    5. '	print' → logprob: -12.704300880432129
    6. ' ' → logprob: -13.704300880432129
    7. '```' → logprob: -14.704300880432129
    8. '.print' → logprob: -14.954300880432129
    9. 'Print' → logprob: -15.454300880432129
    10. '_print' → logprob: -16.204299926757812

Token 198: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005238140933215618
    2. '(' → logprob: -5.255238056182861
    3. '('' → logprob: -12.63023853302002
    4. 'f' → logprob: -14.75523853302002
    5. '(
' → logprob: -15.13023853302002
    6. '()' → logprob: -15.38023853302002
    7. '(F' → logprob: -16.630237579345703
    8. '(tree' → logprob: -17.255237579345703
    9. '((' → logprob: -17.755237579345703
    10. '("' → logprob: -18.005237579345703

Token 199: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.033645693212747574
    2. '('' → logprob: -3.5336456298828125
    3. ' f' → logprob: -6.1586456298828125
    4. '(f' → logprob: -7.0336456298828125
    5. '(' → logprob: -7.4086456298828125
    6. 'f' → logprob: -8.658645629882812
    7. '{' → logprob: -9.908645629882812
    8. ' ' → logprob: -9.908645629882812
    9. '"' → logprob: -12.908645629882812
    10. '`' → logprob: -13.033645629882812

Token 200: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.001181181170977652
    2. '{' → logprob: -6.751181125640869
    3. ' ' → logprob: -11.626181602478027
    4. ' tree' → logprob: -13.626181602478027
    5. '(tree' → logprob: -15.001181602478027
    6. ' ' → logprob: -15.501181602478027
    7. ' {"' → logprob: -16.50118064880371
    8. ' f' → logprob: -16.50118064880371
    9. ' #{' → logprob: -17.12618064880371
    10. ''' → logprob: -17.25118064880371

Token 201: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -7.896309739408025e-07
    2. ' tree' → logprob: -14.250000953674316
    3. '	tree' → logprob: -17.25
    4. '(tree' → logprob: -17.625
    5. 'tre' → logprob: -18.5
    6. '.tree' → logprob: -20.0
    7. '-tree' → logprob: -20.5
    8. '
' → logprob: -21.25
    9. 't' → logprob: -21.5
    10. '/tree' → logprob: -21.5

Token 202: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.7120533811976202e-05
    2. '.' → logprob: -11.000017166137695
    3. 'key' → logprob: -14.875017166137695
    4. ' .' → logprob: -17.375017166137695
    5. ' key' → logprob: -19.375017166137695
    6. '[key' → logprob: -19.500017166137695
    7. '.Key' → logprob: -19.875017166137695
    8. '.left' → logprob: -19.875017166137695
    9. '.right' → logprob: -20.375017166137695
    10. '.keys' → logprob: -21.125017166137695

Token 203: '}',' (ID: 36898)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -5.676981345459353e-06
    2. '}',' → logprob: -12.375005722045898
    3. '')' → logprob: -14.625005722045898
    4. ''' → logprob: -15.375005722045898
    5. ',' → logprob: -15.625005722045898
    6. '','' → logprob: -15.625005722045898
    7. ' ',' → logprob: -15.750005722045898
    8. '",' → logprob: -16.0000057220459
    9. ''),' → logprob: -17.6250057220459
    10. ''',' → logprob: -17.8750057220459

Token 204: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3132619559764862
    2. 'end' → logprob: -1.3132619857788086
    3. ',end' → logprob: -16.438261032104492
    4. '(end' → logprob: -16.813261032104492
    5. '	end' → logprob: -17.438261032104492
    6. '=end' → logprob: -17.688261032104492
    7. ''end' → logprob: -18.313261032104492
    8. '   ' → logprob: -18.688261032104492
    9. '[end' → logprob: -19.313261032104492
    10. ' ' → logprob: -19.438261032104492

Token 205: '='')
' (ID: 135148)
  Prédit: '=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.03067055158317089
    2. ''' → logprob: -3.530670642852783
    3. '''' → logprob: -7.280670642852783
    4. '=''' → logprob: -8.905670166015625
    5. '=' → logprob: -10.405670166015625
    6. '='')
' → logprob: -10.655670166015625
    7. ' '')' → logprob: -10.905670166015625
    8. ')' → logprob: -11.030670166015625
    9. '('' → logprob: -12.155670166015625
    10. ''=' → logprob: -14.780670166015625

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006272526225075126
    2. '
' → logprob: -8.125627517700195
    3. ' if' → logprob: -8.750627517700195
    4. '<|end|>' → logprob: -9.125627517700195
    5. 'if' → logprob: -9.875627517700195
    6. ' ' → logprob: -12.000627517700195
    7. '```' → logprob: -13.375627517700195
    8. '  ' → logprob: -13.750627517700195
    9. '    
' → logprob: -13.750627517700195
    10. '<|end|>' → logprob: -14.000627517700195

Token 207: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39438873529434204
    2. '   ' → logprob: -1.1443886756896973
    3. ' if' → logprob: -4.894388675689697
    4. '	if' → logprob: -14.394389152526855
    5. ' ' → logprob: -14.894389152526855
    6. '```' → logprob: -16.39438819885254
    7. '  ' → logprob: -16.51938819885254
    8. 'If' → logprob: -17.14438819885254
    9. '       ' → logprob: -17.26938819885254
    10. '    ' → logprob: -17.89438819885254

Token 208: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.20147201418876648
    2. 'tree' → logprob: -1.7014720439910889
    3. '(tree' → logprob: -9.951472282409668
    4. '	tree' → logprob: -11.576472282409668
    5. '.tree' → logprob: -14.576472282409668
    6. 'tre' → logprob: -15.326472282409668
    7. 'Tree' → logprob: -15.326472282409668
    8. ' ' → logprob: -15.576472282409668
    9. '   ' → logprob: -15.701472282409668
    10. '/tree' → logprob: -16.07647132873535

Token 209: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00015288250870071352
    2. '.' → logprob: -8.875152587890625
    3. ' .' → logprob: -12.125152587890625
    4. 'right' → logprob: -12.250152587890625
    5. '.left' → logprob: -12.875152587890625
    6. '	right' → logprob: -17.375152587890625
    7. '   ' → logprob: -17.375152587890625
    8. ' ' → logprob: -17.625152587890625
    9. '[right' → logprob: -17.750152587890625
    10. '.Right' → logprob: -18.750152587890625

Token 210: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.07889143377542496
    2. 'is' → logprob: -2.5788915157318115
    3. ' ' → logprob: -14.32889175415039
    4. '   ' → logprob: -14.95389175415039
    5. '	is' → logprob: -15.20389175415039
    6. '```' → logprob: -16.45389175415039
    7. 'は' → logprob: -16.57889175415039
    8. '    ' → logprob: -16.70389175415039
    9. ' ' → logprob: -16.95389175415039
    10. 'if' → logprob: -17.07889175415039

Token 211: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16025327146053314
    2. 'not' → logprob: -1.9102532863616943
    3. 'None' → logprob: -11.660253524780273
    4. ' ' → logprob: -12.285253524780273
    5. 'Not' → logprob: -12.535253524780273
    6. '   ' → logprob: -12.660253524780273
    7. '	not' → logprob: -12.785253524780273
    8. '
' → logprob: -14.035253524780273
    9. ' None' → logprob: -14.035253524780273
    10. '    ' → logprob: -14.597753524780273

Token 212: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5072921514511108
    2. 'not' → logprob: -1.0072921514511108
    3. ' not' → logprob: -3.6322922706604004
    4. ' None' → logprob: -5.2572922706604
    5. 'Not' → logprob: -7.2572922706604
    6. ' ' → logprob: -9.132291793823242
    7. '   ' → logprob: -9.257291793823242
    8. '
' → logprob: -11.007291793823242
    9. 'none' → logprob: -11.132291793823242
    10. '    ' → logprob: -11.632291793823242

Token 213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3035266399383545
    2. ':
' → logprob: -1.9285266399383545
    3. '       ' → logprob: -2.1785266399383545
    4. '   ' → logprob: -5.928526878356934
    5. '):
' → logprob: -8.428526878356934
    6. ' inorder' → logprob: -9.678526878356934
    7. 'in' → logprob: -9.803526878356934
    8. '):' → logprob: -10.053526878356934
    9. ' :' → logprob: -10.428526878356934
    10. ' not' → logprob: -10.803526878356934

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02209721878170967
    2. ' inorder' → logprob: -4.147097110748291
    3. 'in' → logprob: -5.147097110748291
    4. '   ' → logprob: -8.77209758758545
    5. ' in' → logprob: -9.89709758758545
    6. '	in' → logprob: -11.64709758758545
    7. '      ' → logprob: -12.89709758758545
    8. '[in' → logprob: -13.02209758758545
    9. '    ' → logprob: -13.39709758758545
    10. ',in' → logprob: -13.77209758758545

Token 215: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07891380041837692
    2. ' inorder' → logprob: -2.578913688659668
    3. ' in' → logprob: -11.078913688659668
    4. '	in' → logprob: -12.453913688659668
    5. '   ' → logprob: -13.078913688659668
    6. '[in' → logprob: -14.703913688659668
    7. 'In' → logprob: -14.703913688659668
    8. ' ' → logprob: -15.328913688659668
    9. '(in' → logprob: -15.328913688659668
    10. 'inode' → logprob: -15.578913688659668

Token 216: '(tree' (ID: 44909)
  Prédit: '(tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tree' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.25
    3. 'tree' → logprob: -16.875
    4. '(t' → logprob: -18.5
    5. '(tr' → logprob: -19.125
    6. '(Tree' → logprob: -19.875
    7. '(
' → logprob: -20.625
    8. '	tree' → logprob: -20.75
    9. ' (' → logprob: -20.875
    10. '(table' → logprob: -21.5

Token 217: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.006894631776958704
    2. '(tree' → logprob: -5.006894588470459
    3. '(right' → logprob: -9.381895065307617
    4. 'right' → logprob: -9.506895065307617
    5. '.left' → logprob: -12.131895065307617
    6. '.tree' → logprob: -12.256895065307617
    7. ')' → logprob: -12.381895065307617
    8. '.' → logprob: -12.506895065307617
    9. '.Right' → logprob: -14.506895065307617
    10. '   ' → logprob: -14.881895065307617

Token 218: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.7530574849806726e-05
    2. ')
' → logprob: -11.000057220458984
    3. '())' → logprob: -11.000057220458984
    4. '   ' → logprob: -11.375057220458984
    5. '()' → logprob: -12.125057220458984
    6. ' )' → logprob: -12.375057220458984
    7. ')#' → logprob: -13.875057220458984
    8. '<|end|>' → logprob: -14.000057220458984
    9. ')

' → logprob: -15.875057220458984
    10. ')return' → logprob: -16.000057220458984

Token 219: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0030770637094974518
    2. '
' → logprob: -6.378077030181885
    3. 'class' → logprob: -6.628077030181885
    4. '

' → logprob: -10.628077507019043
    5. 'd' → logprob: -11.753077507019043
    6. ' 
' → logprob: -12.503077507019043
    7. '  
' → logprob: -12.628077507019043
    8. '    
' → logprob: -12.878077507019043
    9. '```' → logprob: -12.878077507019043
    10. '#' → logprob: -14.003077507019043

Token 220: ' insert' (ID: 10898)
  Prédit: ' insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.17026224732398987
    2. 'insert' → logprob: -2.045262336730957
    3. ' search' → logprob: -4.045262336730957
    4. 'search' → logprob: -4.795262336730957
    5. ' find' → logprob: -7.045262336730957
    6. ' main' → logprob: -9.045262336730957
    7. 'def' → logprob: -9.420262336730957
    8. ' def' → logprob: -9.545262336730957
    9. 'main' → logprob: -9.795262336730957
    10. ' bst' → logprob: -10.295262336730957

Token 221: '(new' (ID: 2648)
  Prédit: '(tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tree' → logprob: -0.07909853011369705
    2. '(root' → logprob: -2.5790984630584717
    3. '(node' → logprob: -9.07909870147705
    4. '(parent' → logprob: -10.32909870147705
    5. '(' → logprob: -10.45409870147705
    6. ' (' → logprob: -10.70409870147705
    7. '(t' → logprob: -11.82909870147705
    8. '(Tree' → logprob: -13.20409870147705
    9. '(self' → logprob: -14.07909870147705
    10. '(head' → logprob: -15.32909870147705

Token 222: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.1520572900772095
    2. ':' → logprob: -1.4020572900772095
    3. '):' → logprob: -1.9020572900772095
    4. '_key' → logprob: -2.65205717086792
    5. ' :' → logprob: -2.65205717086792
    6. ',' → logprob: -3.27705717086792
    7. ' ):' → logprob: -3.40205717086792
    8. ')' → logprob: -4.40205717086792
    9. ' ,' → logprob: -4.90205717086792
    10. ' node' → logprob: -4.90205717086792

Token 223: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15598131716251373
    2. ':' → logprob: -2.1559813022613525
    3. ')' → logprob: -4.530981540679932
    4. '):' → logprob: -4.655981540679932
    5. ' :' → logprob: -6.155981540679932
    6. '(root' → logprob: -6.280981540679932
    7. ' ,' → logprob: -6.655981540679932
    8. '(tree' → logprob: -7.155981540679932
    9. '(self' → logprob: -7.780981540679932
    10. '(node' → logprob: -8.405981063842773

Token 224: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0032208492048084736
    2. ' Node' → logprob: -5.753221035003662
    3. 'root' → logprob: -10.878220558166504
    4. ')' → logprob: -11.628220558166504
    5. ',' → logprob: -12.503220558166504
    6. ' root' → logprob: -12.878220558166504
    7. '(Node' → logprob: -12.878220558166504
    8. 'Root' → logprob: -13.378220558166504
    9. 'Tree' → logprob: -13.503220558166504
    10. 'node' → logprob: -13.753220558166504

Token 225: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019746100588236004
    2. ' ,' → logprob: -9.375197410583496
    3. ')' → logprob: -9.750197410583496
    4. 'root' → logprob: -10.375197410583496
    5. '   ' → logprob: -11.750197410583496
    6. ' root' → logprob: -12.500197410583496
    7. ',node' → logprob: -12.875197410583496
    8. '(root' → logprob: -13.250197410583496
    9. ',parent' → logprob: -13.250197410583496
    10. ',
' → logprob: -13.625197410583496

Token 226: ' ->' (ID: 2747)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.6612778902053833
    2. ':' → logprob: -1.5362778902053833
    3. ',' → logprob: -1.7862778902053833
    4. '(tree' → logprob: -2.6612777709960938
    5. ')' → logprob: -4.161277770996094
    6. '(parent' → logprob: -5.036277770996094
    7. '(node' → logprob: -5.661277770996094
    8. ' ->' → logprob: -6.161277770996094
    9. '   ' → logprob: -6.661277770996094
    10. '->' → logprob: -7.286277770996094

Token 227: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.048072945326566696
    2. ' None' → logprob: -3.5480730533599854
    3. 'Node' → logprob: -4.048072814941406
    4. ' Node' → logprob: -7.423072814941406
    5. '(Node' → logprob: -10.673072814941406
    6. '(None' → logprob: -10.798072814941406
    7. '   ' → logprob: -10.923072814941406
    8. ' ' → logprob: -11.048072814941406
    9. 'Optional' → logprob: -11.548072814941406
    10. 'No' → logprob: -12.673072814941406

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008519897237420082
    2. ':
' → logprob: -5.008520126342773
    3. '   ' → logprob: -6.508520126342773
    4. '(tree' → logprob: -9.133520126342773
    5. 'def' → logprob: -9.758520126342773
    6. '():' → logprob: -10.258520126342773
    7. ':def' → logprob: -10.883520126342773
    8. '(global' → logprob: -11.133520126342773
    9. 'global' → logprob: -11.258520126342773
    10. '):' → logprob: -11.258520126342773

Token 229: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.2044302374124527
    2. '   ' → logprob: -2.079430341720581
    3. ' global' → logprob: -2.829430341720581
    4. 'current' → logprob: -8.07943058013916
    5. '	global' → logprob: -8.70443058013916
    6. 'root' → logprob: -8.95443058013916
    7. 'if' → logprob: -8.95443058013916
    8. 'def' → logprob: -9.82943058013916
    9. 'node' → logprob: -11.07943058013916
    10. ' current' → logprob: -11.32943058013916

Token 230: ' """' (ID: 9280)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.0008195152622647583
    2. ' global' → logprob: -7.250819683074951
    3. 'current' → logprob: -9.625819206237793
    4. 'root' → logprob: -10.875819206237793
    5. '   ' → logprob: -11.125819206237793
    6. 'if' → logprob: -12.250819206237793
    7. 'def' → logprob: -13.125819206237793
    8. '	global' → logprob: -14.375819206237793
    9. 'parent' → logprob: -14.500819206237793
    10. 'cur' → logprob: -14.500819206237793

Token 231: '二' (ID: 7779)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.005006040446460247
    2. ' global' → logprob: -5.380005836486816
    3. 'root' → logprob: -8.755005836486816
    4. 'def' → logprob: -9.005005836486816
    5. 'current' → logprob: -9.880005836486816
    6. 'parent' → logprob: -10.130005836486816
    7. 'if' → logprob: -12.255005836486816
    8. '	global' → logprob: -13.130005836486816
    9. 'pass' → logprob: -13.255005836486816
    10. 'node' → logprob: -13.755005836486816

Token 232: '分' (ID: 2957)
  Prédit: '分'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '分' → logprob: -0.04259316250681877
    2. ' 分' → logprob: -3.417593240737915
    3. '   ' → logprob: -6.042593002319336
    4. ' \xe6' → logprob: -6.292593002319336
    5. ' search' → logprob: -6.792593002319336
    6. ' ' → logprob: -6.792593002319336
    7. '叉' → logprob: -7.167593002319336
    8. '
' → logprob: -8.042593002319336
    9. '  ' → logprob: -8.292593002319336
    10. 'search' → logprob: -9.167593002319336

Token 233: '探索' (ID: 191406)
  Prédit: '探索'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '探索' → logprob: -0.6516692638397217
    2. 'search' → logprob: -1.5266692638397217
    3. '検索' → logprob: -2.1516692638397217
    4. ' search' → logprob: -2.2766692638397217
    5. '木' → logprob: -4.276669502258301
    6. '\xe6\x8c' → logprob: -4.526669502258301
    7. ' \xe6' → logprob: -5.901669502258301
    8. '探' → logprob: -6.151669502258301
    9. '   ' → logprob: -6.151669502258301
    10. 'tree' → logprob: -6.401669502258301

Token 234: '木' (ID: 21196)
  Prédit: '木'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '木' → logprob: -0.05143583565950394
    2. 'tree' → logprob: -3.301435947418213
    3. '   ' → logprob: -5.301435947418213
    4. ' tree' → logprob: -5.676435947418213
    5. ' 木' → logprob: -6.551435947418213
    6. '```' → logprob: -7.176435947418213
    7. '
' → logprob: -7.926435947418213
    8. 'search' → logprob: -8.051435470581055
    9. ' ' → logprob: -8.176435470581055
    10. '_tree' → logprob: -8.676435470581055

Token 235: 'に' (ID: 5280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1080641746520996
    2. ' global' → logprob: -1.7330641746520996
    3. '   ' → logprob: -1.9830641746520996
    4. 'global' → logprob: -2.1080641746520996
    5. 'root' → logprob: -2.4830641746520996
    6. ' root' → logprob: -2.6080641746520996
    7. ' def' → logprob: -3.2330641746520996
    8. 'current' → logprob: -5.2330641746521
    9. ':' → logprob: -5.3580641746521
    10. '(root' → logprob: -5.8580641746521

Token 236: '�' (ID: 6695)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7157330513000488
    2. 'root' → logprob: -0.8407330513000488
    3. 'global' → logprob: -3.215733051300049
    4. ' root' → logprob: -4.840733051300049
    5. 'node' → logprob: -5.090733051300049
    6. 'insert' → logprob: -5.340733051300049
    7. 'new' → logprob: -5.715733051300049
    8. ' def' → logprob: -5.715733051300049
    9. 'None' → logprob: -5.715733051300049
    10. 'current' → logprob: -6.215733051300049

Token 237: '�' (ID: 123)
  Prédit: '新'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '新' → logprob: -0.6983136534690857
    2. '追加' → logprob: -1.5733137130737305
    3. 'す' → logprob: -2.5733137130737305
    4. '\xe6\x8c' → logprob: -2.9483137130737305
    5. 'insert' → logprob: -3.0733137130737305
    6. ' new' → logprob: -4.1983137130737305
    7. 'new' → logprob: -4.1983137130737305
    8. 'は' → logprob: -4.5733137130737305
    9. 'け' → logprob: -4.6983137130737305
    10. '入' → logprob: -4.8233137130737305

Token 238: '入' (ID: 8130)
  Prédit: ' root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.8344119787216187
    2. ' None' → logprob: -1.4594119787216187
    3. 'root' → logprob: -2.209412097930908
    4. 'None' → logprob: -2.584412097930908
    5. '   ' → logprob: -2.959412097930908
    6. 'def' → logprob: -3.334412097930908
    7. 'insert' → logprob: -4.459412097930908
    8. 'node' → logprob: -4.834412097930908
    9. ' node' → logprob: -5.209412097930908
    10. 'Node' → logprob: -5.584412097930908

Token 239: 'する' (ID: 39065)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.130464792251587
    2. ' new' → logprob: -2.130464792251587
    3. 'れ' → logprob: -2.255464792251587
    4. 'def' → logprob: -2.505464792251587
    5. 'する' → logprob: -2.630464792251587
    6. 'る' → logprob: -2.880464792251587
    7. '新' → logprob: -3.380464792251587
    8. 'す' → logprob: -3.505464792251587
    9. '   ' → logprob: -3.630464792251587
    10. ' ' → logprob: -3.630464792251587

Token 240: '。' (ID: 788)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9531286358833313
    2. ' root' → logprob: -1.3281285762786865
    3. ' node' → logprob: -1.8281285762786865
    4. ' ' → logprob: -2.5781285762786865
    5. 'node' → logprob: -3.3281285762786865
    6. 'new' → logprob: -3.9531285762786865
    7. ')' → logprob: -4.203128814697266
    8. 'root' → logprob: -4.328128814697266
    9. ' )' → logprob: -5.328128814697266
    10. ' def' → logprob: -5.828128814697266

Token 241: '"""

' (ID: 34508)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.1785048246383667
    2. ' None' → logprob: -1.3035048246383667
    3. 'root' → logprob: -1.5535048246383667
    4. ' root' → logprob: -1.6785048246383667
    5. '
' → logprob: -4.178504943847656
    6. 'def' → logprob: -6.303504943847656
    7. 'parent' → logprob: -6.928504943847656
    8. '   ' → logprob: -7.553504943847656
    9. 'current' → logprob: -7.678504943847656
    10. ' parent' → logprob: -7.928504943847656

Token 242: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.11774120479822159
    2. ' global' → logprob: -2.242741107940674
    3. 'root' → logprob: -6.242741107940674
    4. 'current' → logprob: -6.242741107940674
    5. '   ' → logprob: -7.617741107940674
    6. ' current' → logprob: -9.117741584777832
    7. ' root' → logprob: -9.242741584777832
    8. 'parent' → logprob: -9.617741584777832
    9. ' ' → logprob: -9.617741584777832
    10. 'if' → logprob: -9.742741584777832

Token 243: ' #' (ID: 1069)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.01188939530402422
    2. ' global' → logprob: -4.761889457702637
    3. 'root' → logprob: -6.386889457702637
    4. 'current' → logprob: -7.136889457702637
    5. 'if' → logprob: -8.261889457702637
    6. 'def' → logprob: -8.511889457702637
    7. '   ' → logprob: -9.261889457702637
    8. 'parent' → logprob: -9.511889457702637
    9. 'node' → logprob: -10.261889457702637
    10. 'key' → logprob: -10.636889457702637

Token 244: ' root' (ID: 6577)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.32180097699165344
    2. 'root' → logprob: -1.446800947189331
    3. 'current' → logprob: -3.946800947189331
    4. 'if' → logprob: -4.44680118560791
    5. 'parent' → logprob: -5.69680118560791
    6. ' global' → logprob: -6.69680118560791
    7. 'key' → logprob: -7.19680118560791
    8. 'node' → logprob: -7.32180118560791
    9. 'def' → logprob: -7.57180118560791
    10. 'cur' → logprob: -7.57180118560791

Token 245: 'は' (ID: 5205)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22288154065608978
    2. 'global' → logprob: -2.222881555557251
    3. ' is' → logprob: -3.222881555557251
    4. ' global' → logprob: -3.722881555557251
    5. '=' → logprob: -4.222881317138672
    6. ' ' → logprob: -5.347881317138672
    7. '   ' → logprob: -6.347881317138672
    8. 'node' → logprob: -7.347881317138672
    9. '.global' → logprob: -7.472881317138672
    10. '
' → logprob: -7.472881317138672

Token 246: 'global' (ID: 11849)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.7344414591789246
    2. 'None' → logprob: -0.8594414591789246
    3. 'globals' → logprob: -2.7344415187835693
    4. ' None' → logprob: -4.23444128036499
    5. 'insert' → logprob: -4.73444128036499
    6. ' globals' → logprob: -5.73444128036499
    7. 'global' → logprob: -6.35944128036499
    8. ' root' → logprob: -6.98444128036499
    9. 'roots' → logprob: -7.10944128036499
    10. 'new' → logprob: -7.98444128036499

Token 247: 'に' (ID: 5280)
  Prédit: ' root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.29920464754104614
    2. ' global' → logprob: -1.5492045879364014
    3. ' ' → logprob: -3.2992045879364014
    4. 'root' → logprob: -5.0492048263549805
    5. 'global' → logprob: -6.0492048263549805
    6. ' _' → logprob: -9.29920482635498
    7. '
' → logprob: -9.54920482635498
    8. '  ' → logprob: -10.42420482635498
    9. ' def' → logprob: -10.42420482635498
    10. ' 
' → logprob: -10.67420482635498

Token 248: '共有' (ID: 140981)
  Prédit: ' root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.2846449911594391
    2. 'root' → logprob: -1.9096449613571167
    3. ' None' → logprob: -2.4096450805664062
    4. ' global' → logprob: -5.909645080566406
    5. 'None' → logprob: -6.034645080566406
    6. ' ' → logprob: -6.034645080566406
    7. 'global' → logprob: -6.409645080566406
    8. ' declared' → logprob: -9.284645080566406
    9. 'tree' → logprob: -9.409645080566406
    10. ' tree' → logprob: -9.409645080566406

Token 249: 'する' (ID: 39065)
  Prédit: ' root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.04554930329322815
    2. ' ' → logprob: -3.5455493927001953
    3. ' global' → logprob: -4.670549392700195
    4. 'root' → logprob: -5.295549392700195
    5. '  ' → logprob: -7.295549392700195
    6. ' None' → logprob: -8.420549392700195
    7. ' tree' → logprob: -9.170549392700195
    8. 'global' → logprob: -9.545549392700195
    9. ' space' → logprob: -9.920549392700195
    10. '    ' → logprob: -10.295549392700195

Token 250: '。
' (ID: 3414)
  Prédit: ' global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' global' → logprob: -0.7052329778671265
    2. ' root' → logprob: -0.8302329778671265
    3. ' ' → logprob: -3.705233097076416
    4. 'global' → logprob: -3.830233097076416
    5. 'root' → logprob: -4.080233097076416
    6. '
' → logprob: -6.080233097076416
    7. '   ' → logprob: -6.455233097076416
    8. ' None' → logprob: -7.830233097076416
    9. '(root' → logprob: -7.955233097076416
    10. '  ' → logprob: -8.080232620239258

Token 251: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.4748001992702484
    2. ' global' → logprob: -0.9748002290725708
    3. '   ' → logprob: -7.974800109863281
    4. ' None' → logprob: -9.099800109863281
    5. 'root' → logprob: -9.724800109863281
    6. '	global' → logprob: -9.974800109863281
    7. ' ' → logprob: -9.974800109863281
    8. ' globals' → logprob: -10.849800109863281
    9. 'globals' → logprob: -11.099800109863281
    10. ' root' → logprob: -11.099800109863281

Token 252: ' global' (ID: 5466)
  Prédit: ' global'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' global' → logprob: -0.7040711641311646
    2. 'global' (adapté à ' global') → logprob: -1.7040711641311646
    3. 'root' → logprob: -1.8290711641311646
    4. ' root' → logprob: -1.8290711641311646
    5. ' None' → logprob: -7.204071044921875
    6. ' globals' → logprob: -7.204071044921875
    7. ' ' → logprob: -8.079071044921875
    8. 'globals' → logprob: -8.454071044921875
    9. 'None' → logprob: -9.454071044921875
    10. '   ' → logprob: -10.079071044921875

Token 253: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.012520363554358482
    2. ' root' → logprob: -4.3875203132629395
    3. '	root' → logprob: -12.887520790100098
    4. '_root' → logprob: -13.262520790100098
    5. ' ' → logprob: -13.512520790100098
    6. 'roo' → logprob: -14.012520790100098
    7. '
' → logprob: -14.387520790100098
    8. '.root' → logprob: -14.387520790100098
    9. 'Root' → logprob: -14.512520790100098
    10. 'r' → logprob: -15.012520790100098

Token 254: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23355041444301605
    2. '   ' → logprob: -2.6085503101348877
    3. ' current' → logprob: -2.7335503101348877
    4. 'current' → logprob: -3.3585503101348877
    5. '    
' → logprob: -4.233550548553467
    6. ' 
' → logprob: -5.233550548553467
    7. 'node' → logprob: -5.733550548553467
    8. ' node' → logprob: -6.108550548553467
    9. '
' → logprob: -6.233550548553467
    10. ' if' → logprob: -6.858550548553467

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4900359809398651
    2. 'current' → logprob: -1.6150360107421875
    3. 'cur' → logprob: -2.9900360107421875
    4. 'if' → logprob: -2.9900360107421875
    5. 'node' → logprob: -3.1150360107421875
    6. ' current' → logprob: -4.4900360107421875
    7. 'parent' → logprob: -4.7400360107421875
    8. 'curr' → logprob: -4.7400360107421875
    9. 'tmp' → logprob: -6.1150360107421875
    10. 'p' → logprob: -6.2400360107421875

Token 256: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7772493362426758
    2. 'if' → logprob: -1.4022493362426758
    3. 'node' → logprob: -1.9022493362426758
    4. 'cur' → logprob: -2.652249336242676
    5. 'parent' → logprob: -3.527249336242676
    6. 'curr' → logprob: -4.402249336242676
    7. 'x' → logprob: -4.527249336242676
    8. 'tmp' → logprob: -5.027249336242676
    9. 't' → logprob: -5.902249336242676
    10. 'temp' → logprob: -5.902249336242676

Token 257: ' new' (ID: 620)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8943540453910828
    2. 'parent' → logprob: -1.1443541049957275
    3. 'node' → logprob: -2.2693541049957275
    4. 'cur' → logprob: -2.5193541049957275
    5. 'y' → logprob: -3.6443541049957275
    6. 'if' → logprob: -3.8943541049957275
    7. 'root' → logprob: -4.519353866577148
    8. 'curr' → logprob: -4.519353866577148
    9. 'tmp' → logprob: -5.519353866577148
    10. 'key' → logprob: -5.769353866577148

Token 258: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.02830871008336544
    2. 'node' → logprob: -4.403308868408203
    3. '_' → logprob: -5.528308868408203
    4. '   ' → logprob: -5.528308868408203
    5. ' =' → logprob: -5.653308868408203
    6. '=' → logprob: -5.778308868408203
    7. '_key' → logprob: -8.153308868408203
    8. ' node' → logprob: -8.778308868408203
    9. '_root' → logprob: -8.903308868408203
    10. '=node' → logprob: -9.278308868408203

Token 259: 'を' (ID: 7277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4389030933380127
    2. '=' → logprob: -2.5639030933380127
    3. 'current' → logprob: -2.6889030933380127
    4. '_key' → logprob: -2.8139030933380127
    5. 'key' → logprob: -3.3139030933380127
    6. '_node' → logprob: -3.8139030933380127
    7. '.parent' → logprob: -3.9389030933380127
    8. 'parent' → logprob: -4.563902854919434
    9. ' is' → logprob: -4.813902854919434
    10. 'cur' → logprob: -5.063902854919434

Token 260: '付' (ID: 20166)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.002224602736532688
    2. ' root' → logprob: -6.127224445343018
    3. 'None' → logprob: -10.502224922180176
    4. '	root' → logprob: -12.877224922180176
    5. ' None' → logprob: -13.127224922180176
    6. '
' → logprob: -13.377224922180176
    7. 'parent' → logprob: -13.627224922180176
    8. '(root' → logprob: -14.002224922180176
    9. 'roo' → logprob: -14.002224922180176
    10. 'current' → logprob: -14.377224922180176

Token 261: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.0007220837287604809
    2. '   ' → logprob: -8.50072193145752
    3. '与' → logprob: -9.00072193145752
    4. '点' → logprob: -9.12572193145752
    5. '加' → logprob: -9.25072193145752
    6. 'root' → logprob: -10.12572193145752
    7. '下' → logprob: -10.87572193145752
    8. '    ' → logprob: -11.00072193145752
    9. 'す' → logprob: -11.37572193145752
    10. '属' → logprob: -11.50072193145752

Token 262: '加' (ID: 9116)
  Prédit: 'け'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.2576415240764618
    2. '加' → logprob: -1.6326415538787842
    3. 'る' → logprob: -3.632641553878784
    4. 'root' → logprob: -5.632641315460205
    5. '根' → logprob: -7.632641315460205
    6. 'く' → logprob: -8.257641792297363
    7. 'す' → logprob: -8.382641792297363
    8. 'た' → logprob: -9.382641792297363
    9. ' ' → logprob: -9.507641792297363
    10. '   ' → logprob: -9.632641792297363

Token 263: 'える' (ID: 133169)
  Prédit: 'える'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'える' → logprob: -0.004766411148011684
    2. 'え' → logprob: -6.004766464233398
    3. 'る' → logprob: -6.254766464233398
    4. '
' → logprob: -8.504766464233398
    5. '   ' → logprob: -9.879766464233398
    6. '```' → logprob: -10.504766464233398
    7. ' ' → logprob: -11.004766464233398
    8. '加' → logprob: -11.254766464233398
    9. 'えて' → logprob: -11.504766464233398
    10. '       ' → logprob: -11.629766464233398

Token 264: '節' (ID: 89129)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.311007022857666
    2. 'current' → logprob: -1.311007022857666
    3. 'node' → logprob: -1.436007022857666
    4. '   ' → logprob: -3.186007022857666
    5. ' node' → logprob: -3.186007022857666
    6. ' current' → logprob: -3.561007022857666
    7. 'if' → logprob: -3.561007022857666
    8. 'curr' → logprob: -3.936007022857666
    9. ' if' → logprob: -4.186007022857666
    10. 'parent' → logprob: -4.186007022857666

Token 265: '(parent' (ID: 24729)
  Prédit: '点'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '点' → logprob: -0.0025072861462831497
    2. 'を' → logprob: -6.627507209777832
    3. 'point' → logprob: -7.877507209777832
    4. 'に' → logprob: -9.002507209777832
    5. 'p' → logprob: -9.752507209777832
    6. '
' → logprob: -9.752507209777832
    7. 'の' → logprob: -10.002507209777832
    8. '所' → logprob: -10.002507209777832
    9. ' 点' → logprob: -10.127507209777832
    10. '   ' → logprob: -10.252507209777832

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3027268946170807
    2. '=' → logprob: -1.9277268648147583
    3. ' =' → logprob: -2.552726984024048
    4. ',' → logprob: -3.802726984024048
    5. ' )' → logprob: -5.677726745605469
    6. 'は' → logprob: -6.427726745605469
    7. 'を' → logprob: -6.552726745605469
    8. ' ' → logprob: -6.677726745605469
    9. 's' → logprob: -7.177726745605469
    10. '
' → logprob: -7.302726745605469

Token 267: 'の' (ID: 3385)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4867931008338928
    2. ' =' → logprob: -1.111793041229248
    3. ',' → logprob: -3.486793041229248
    4. 'は' → logprob: -4.986793041229248
    5. 'として' → logprob: -5.736793041229248
    6. 'node' → logprob: -5.986793041229248
    7. '=node' → logprob: -5.986793041229248
    8. 'current' → logprob: -6.486793041229248
    9. 'を' → logprob: -6.486793041229248
    10. ' ' → logprob: -6.486793041229248

Token 268: '初' (ID: 26719)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.01671183854341507
    2. 'None' → logprob: -4.266711711883545
    3. ' root' → logprob: -6.141711711883545
    4. ' None' → logprob: -8.141712188720703
    5. 'current' → logprob: -10.641712188720703
    6. '   ' → logprob: -11.016712188720703
    7. 'node' → logprob: -11.266712188720703
    8. '
' → logprob: -11.641712188720703
    9. ' ' → logprob: -11.766712188720703
    10. 'parent' → logprob: -12.266712188720703

Token 269: '期' (ID: 5055)
  Prédit: 'め'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'め' → logprob: -0.5822070240974426
    2. '   ' → logprob: -1.9572069644927979
    3. '期' → logprob: -1.9572069644927979
    4. 'parent' → logprob: -2.707206964492798
    5. '始' → logprob: -4.207207202911377
    6. '       ' → logprob: -4.332207202911377
    7. '
' → logprob: -4.707207202911377
    8. '点' → logprob: -4.957207202911377
    9. '祖' → logprob: -4.957207202911377
    10. '値' → logprob: -5.457207202911377

Token 270: '値' (ID: 69555)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.48495960235595703
    2. '値' → logprob: -2.359959602355957
    3. '位置' → logprob: -2.859959602355957
    4. ' node' → logprob: -3.109959602355957
    5. 'parent' → logprob: -3.109959602355957
    6. '点' → logprob: -3.859959602355957
    7. 'value' → logprob: -3.984959602355957
    8. 'position' → logprob: -4.109959602355957
    9. 'None' → logprob: -4.484959602355957
    10. 'root' → logprob: -4.609959602355957

Token 271: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.081485815346241
    2. ' =' → logprob: -2.5814857482910156
    3. '=root' → logprob: -6.581485748291016
    4. ',' → logprob: -7.456485748291016
    5. 'root' → logprob: -8.456485748291016
    6. '=None' → logprob: -8.956485748291016
    7. 'は' → logprob: -9.956485748291016
    8. 'node' → logprob: -10.331485748291016
    9. '=node' → logprob: -10.331485748291016
    10. ':' → logprob: -10.331485748291016

Token 272: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04342994466423988
    2. 'root' → logprob: -3.1684298515319824
    3. ' None' → logprob: -7.793429851531982
    4. ' root' → logprob: -11.66843032836914
    5. 'none' → logprob: -12.04343032836914
    6. '
' → logprob: -13.29343032836914
    7. 'N' → logprob: -14.91843032836914
    8. 'null' → logprob: -15.29343032836914
    9. 'No' → logprob: -15.41843032836914
    10. 'node' → logprob: -15.54343032836914

Token 273: 'に' (ID: 5280)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.19948123395442963
    2. ',' → logprob: -2.199481248855591
    3. ' parent' → logprob: -3.324481248855591
    4. '   ' → logprob: -4.824481010437012
    5. '
' → logprob: -5.324481010437012
    6. ',parent' → logprob: -5.574481010437012
    7. 'として' → logprob: -5.699481010437012
    8. 'node' → logprob: -6.074481010437012
    9. 'current' → logprob: -6.699481010437012
    10. '(parent' → logprob: -6.949481010437012

Token 274: '設定' (ID: 157652)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9417660236358643
    2. '設定' → logprob: -1.6917660236358643
    3. 'します' → logprob: -2.3167660236358643
    4. 'set' → logprob: -2.3167660236358643
    5. 'して' → logprob: -2.4417660236358643
    6. 'parent' → logprob: -2.5667660236358643
    7. 'する' → logprob: -3.6917660236358643
    8. 'し' → logprob: -4.816765785217285
    9. 'setting' → logprob: -5.191765785217285
    10. '   ' → logprob: -5.191765785217285

Token 275: 'する' (ID: 39065)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.025790298357605934
    2. ' parent' → logprob: -4.025790214538574
    3. '   ' → logprob: -5.900790214538574
    4. '
' → logprob: -6.150790214538574
    5. 'p' → logprob: -7.150790214538574
    6. 'node' → logprob: -7.525790214538574
    7. '(parent' → logprob: -8.400790214538574
    8. 'None' → logprob: -8.650790214538574
    9. 'current' → logprob: -8.775790214538574
    10. '	parent' → logprob: -9.400790214538574

Token 276: '。
' (ID: 3414)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10439743101596832
    2. ' parent' → logprob: -2.4793975353240967
    3. '
' → logprob: -4.979397296905518
    4. '   ' → logprob: -5.729397296905518
    5. 'p' → logprob: -6.479397296905518
    6. ' =' → logprob: -7.729397296905518
    7. '(parent' → logprob: -8.104397773742676
    8. ',' → logprob: -8.354397773742676
    9. ',parent' → logprob: -8.354397773742676
    10. 'node' → logprob: -8.479397773742676

Token 277: '   ' (ID: 271)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.3506903350353241
    2. ' parent' → logprob: -1.2256903648376465
    3. 'p' → logprob: -7.4756903648376465
    4. '   ' → logprob: -7.4756903648376465
    5. 'node' → logprob: -7.9756903648376465
    6. ' node' → logprob: -8.475689888000488
    7. ' p' → logprob: -8.975689888000488
    8. '
' → logprob: -9.100689888000488
    9. ' par' → logprob: -10.100689888000488
    10. ' ' → logprob: -10.225689888000488

Token 278: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.014472213573753834
    2. ' parent' → logprob: -4.389472007751465
    3. 'p' → logprob: -6.389472007751465
    4. 'node' → logprob: -8.764472007751465
    5. '   ' → logprob: -10.764472007751465
    6. 'y' → logprob: -10.764472007751465
    7. ' p' → logprob: -11.139472007751465
    8. 'current' → logprob: -11.389472007751465
    9. ' ' → logprob: -11.764472007751465
    10. ' node' → logprob: -12.014472007751465

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1003003716468811
    2. '=' → logprob: -2.3503003120422363
    3. '=None' → logprob: -9.725300788879395
    4. ',' → logprob: -10.975300788879395
    5. ' ' → logprob: -11.725300788879395
    6. 's' → logprob: -13.100300788879395
    7. 'None' → logprob: -13.600300788879395
    8. ' None' → logprob: -13.850300788879395
    9. '＝' → logprob: -13.850300788879395
    10. '<|end|>' → logprob: -13.975300788879395

Token 280: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0015380734112113714
    2. ' None' → logprob: -6.501538276672363
    3. 'root' → logprob: -10.251538276672363
    4. ' root' → logprob: -15.876538276672363
    5. '   ' → logprob: -16.376537322998047
    6. 'none' → logprob: -16.751537322998047
    7. '
' → logprob: -17.501537322998047
    8. ' ' → logprob: -18.876537322998047
    9. 'No' → logprob: -18.876537322998047
    10. '  ' → logprob: -19.126537322998047

Token 281: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45771101117134094
    2. 'current' → logprob: -1.9577109813690186
    3. '   ' → logprob: -2.0827109813690186
    4. ' current' → logprob: -3.5827109813690186
    5. '<|end|>' → logprob: -4.082711219787598
    6. 'node' → logprob: -4.582711219787598
    7. ' 
' → logprob: -4.707711219787598
    8. ' node' → logprob: -5.332711219787598
    9. ' ' → logprob: -5.332711219787598
    10. ' while' → logprob: -5.457711219787598

Token 282: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.3936191201210022
    2. 'node' → logprob: -1.6436190605163574
    3. ' current' → logprob: -2.8936190605163574
    4. '   ' → logprob: -3.2686190605163574
    5. ' node' → logprob: -4.268619060516357
    6. 'child' → logprob: -4.393619060516357
    7. ' child' → logprob: -6.018619060516357
    8. 'curr' → logprob: -6.018619060516357
    9. 'cur' → logprob: -6.268619060516357
    10. 'tmp' → logprob: -6.768619060516357

Token 283: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16583168506622314
    2. 'node' → logprob: -2.0408315658569336
    3. ' current' → logprob: -5.290831565856934
    4. 'temp' → logprob: -5.915831565856934
    5. 'root' → logprob: -5.915831565856934
    6. 'child' → logprob: -6.040831565856934
    7. 'tmp' → logprob: -6.040831565856934
    8. 'tree' → logprob: -6.040831565856934
    9. 'cur' → logprob: -6.790831565856934
    10. ' node' → logprob: -6.915831565856934

Token 284: ' tmp' (ID: 8919)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.36111143231391907
    2. 'node' → logprob: -2.2361114025115967
    3. 'root' → logprob: -2.3611114025115967
    4. 'cur' → logprob: -2.9861114025115967
    5. 'curr' → logprob: -4.111111640930176
    6. ' current' → logprob: -4.611111640930176
    7. 'tmp' → logprob: -4.861111640930176
    8. 'x' → logprob: -5.736111640930176
    9. 'temp' → logprob: -5.986111640930176
    10. 'child' → logprob: -6.111111640930176

Token 285: 'に' (ID: 5280)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003710173536092043
    2. '=' → logprob: -5.6287102699279785
    3. ' ' → logprob: -9.62870979309082
    4. '=root' → logprob: -10.87870979309082
    5. 'root' → logprob: -12.50370979309082
    6. ' root' → logprob: -12.50370979309082
    7. 'node' → logprob: -12.50370979309082
    8. '_node' → logprob: -12.50370979309082
    9. ' node' → logprob: -12.87870979309082
    10. '=node' → logprob: -13.12870979309082

Token 286: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -9.805981972021982e-05
    2. ' root' → logprob: -9.25009822845459
    3. '
' → logprob: -14.25009822845459
    4. '	root' → logprob: -15.00009822845459
    5. 'roo' → logprob: -15.12509822845459
    6. '(root' → logprob: -15.87509822845459
    7. '=root' → logprob: -15.87509822845459
    8. 'r' → logprob: -16.625097274780273
    9. 'global' → logprob: -16.625097274780273
    10. '   ' → logprob: -17.000097274780273

Token 287: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7536344528198242
    2. ' =' → logprob: -1.3786344528198242
    3. '
' → logprob: -2.753634452819824
    4. '<|end|>' → logprob: -3.003634452819824
    5. '<|end|>' → logprob: -3.128634452819824
    6. '=root' → logprob: -3.378634452819824
    7. '=node' → logprob: -3.878634452819824
    8. ',' → logprob: -4.628634452819824
    9. 'root' → logprob: -4.753634452819824
    10. 'を' → logprob: -5.003634452819824

Token 288: '設定' (ID: 157652)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0003054301778320223
    2. ' root' → logprob: -8.12530517578125
    3. '=root' → logprob: -12.25030517578125
    4. '(root' → logprob: -13.12530517578125
    5. '	root' → logprob: -14.87530517578125
    6. '
' → logprob: -15.00030517578125
    7. 'parent' → logprob: -15.12530517578125
    8. '[root' → logprob: -15.25030517578125
    9. 'assigned' → logprob: -15.37530517578125
    10. 'assign' → logprob: -15.50030517578125

Token 289: 'する' (ID: 39065)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9103086590766907
    2. '   ' → logprob: -1.535308599472046
    3. '=' → logprob: -1.785308599472046
    4. 'tmp' → logprob: -1.910308599472046
    5. ' tmp' → logprob: -3.285308599472046
    6. 'tree' → logprob: -5.035308837890625
    7. 'root' → logprob: -5.285308837890625
    8. ' ' → logprob: -5.535308837890625
    9. '=root' → logprob: -5.785308837890625
    10. ' tree' → logprob: -6.285308837890625

Token 290: '。
' (ID: 3414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06578820943832397
    2. '
' → logprob: -2.8157882690429688
    3. 'tmp' → logprob: -6.190788269042969
    4. '    
' → logprob: -7.565788269042969
    5. 'root' → logprob: -8.315788269042969
    6. ' tmp' → logprob: -8.565788269042969
    7. '  ' → logprob: -8.940788269042969
    8. ' =' → logprob: -9.065788269042969
    9. 'tree' → logprob: -9.315788269042969
    10. ' ' → logprob: -9.315788269042969

Token 291: '   ' (ID: 271)
  Prédit: ' tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.4436184763908386
    2. 'tmp' → logprob: -1.0686185359954834
    3. '   ' → logprob: -4.318618297576904
    4. ' root' → logprob: -7.193618297576904
    5. 'root' → logprob: -8.068618774414062
    6. '	tmp' → logprob: -8.943618774414062
    7. ' temp' → logprob: -9.318618774414062
    8. '
' → logprob: -9.943618774414062
    9. 'temp' → logprob: -10.318618774414062
    10. ' tree' → logprob: -10.318618774414062

Token 292: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.035906270146369934
    2. ' tmp' → logprob: -3.4109063148498535
    3. 'root' → logprob: -6.1609063148498535
    4. '   ' → logprob: -9.535905838012695
    5. ' root' → logprob: -9.910905838012695
    6. '
' → logprob: -11.910905838012695
    7. '	tmp' → logprob: -12.035905838012695
    8. 'temp' → logprob: -12.285905838012695
    9. 'tree' → logprob: -12.910905838012695
    10. 't' → logprob: -13.035905838012695

Token 293: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891171425580978
    2. '=' → logprob: -2.578911781311035
    3. '=root' → logprob: -10.953911781311035
    4. ' ' → logprob: -12.453911781311035
    5. '＝' → logprob: -15.203911781311035
    6. ' =
' → logprob: -16.32891082763672
    7. ',' → logprob: -16.57891082763672
    8. ' root' → logprob: -17.07891082763672
    9. 'root' → logprob: -17.57891082763672
    10. ':' → logprob: -17.57891082763672

Token 294: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.026303434744477272
    2. ' root' → logprob: -3.65130352973938
    3. '
' → logprob: -14.1513032913208
    4. '	root' → logprob: -14.1513032913208
    5. '(root' → logprob: -14.6513032913208
    6. ' ' → logprob: -15.0263032913208
    7. '   ' → logprob: -15.2763032913208
    8. 'roo' → logprob: -15.5263032913208
    9. '[root' → logprob: -15.6513032913208
    10. '=root' → logprob: -16.526304244995117

Token 295: '

' (ID: 279)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5704173445701599
    2. '
' → logprob: -1.1954174041748047
    3. '   ' → logprob: -2.1954174041748047
    4. ' while' → logprob: -4.195417404174805
    5. '    
' → logprob: -5.320417404174805
    6. '  
' → logprob: -8.570417404174805
    7. ' 
' → logprob: -8.820417404174805
    8. '	while' → logprob: -8.945417404174805
    9. 'While' → logprob: -9.195417404174805
    10. '
' → logprob: -9.445417404174805

Token 296: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7452956438064575
    2. 'while' → logprob: -0.7452956438064575
    3. '   ' → logprob: -3.120295524597168
    4. '
' → logprob: -5.620295524597168
    5. '	while' → logprob: -6.870295524597168
    6. '    
' → logprob: -6.995295524597168
    7. ' 
' → logprob: -7.870295524597168
    8. '<|end|>' → logprob: -8.620295524597168
    9. 'While' → logprob: -9.245295524597168
    10. '  
' → logprob: -9.370295524597168

Token 297: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.28629255294799805
    2. 'while' → logprob: -1.411292552947998
    3. '   ' → logprob: -5.411292552947998
    4. ' ' → logprob: -8.661293029785156
    5. '    ' → logprob: -9.036293029785156
    6. '	while' → logprob: -9.036293029785156
    7. 'While' → logprob: -9.161293029785156
    8. '  ' → logprob: -9.661293029785156
    9. '    
' → logprob: -10.661293029785156
    10. ' 
' → logprob: -10.661293029785156

Token 298: ' new' (ID: 620)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08025635033845901
    2. ' while' → logprob: -2.580256462097168
    3. 'tmp' → logprob: -6.955256462097168
    4. 'While' → logprob: -8.330256462097168
    5. ' tmp' → logprob: -9.330256462097168
    6. '
' → logprob: -10.080256462097168
    7. '   ' → logprob: -11.205256462097168
    8. ' While' → logprob: -11.580256462097168
    9. '	while' → logprob: -12.455256462097168
    10. '#' → logprob: -12.580256462097168

Token 299: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00383559032343328
    2. '_' → logprob: -6.503835678100586
    3. 'node' → logprob: -7.128835678100586
    4. '   ' → logprob: -8.128835678100586
    5. ' node' → logprob: -8.253835678100586
    6. '
' → logprob: -8.378835678100586
    7. ' ' → logprob: -8.878835678100586
    8. '_key' → logprob: -9.128835678100586
    9. '_token' → logprob: -9.128835678100586
    10. ' _' → logprob: -9.503835678100586

Token 300: 'を' (ID: 7277)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.49890902638435364
    2. 'while' → logprob: -2.2489089965820312
    3. '=' → logprob: -3.2489089965820312
    4. '!=' → logprob: -3.3739089965820312
    5. ' while' → logprob: -3.6239089965820312
    6. 'の' → logprob: -3.7489089965820312
    7. 'は' → logprob: -3.8739089965820312
    8. ' !=' → logprob: -3.9989089965820312
    9. 'key' → logprob: -4.373908996582031
    10. 'を' → logprob: -4.373908996582031

Token 301: '付' (ID: 20166)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7177652716636658
    2. 'None' → logprob: -1.0927653312683105
    3. 'parent' → logprob: -2.8427653312683105
    4. 'tmp' → logprob: -2.9677653312683105
    5. 'while' → logprob: -3.5927653312683105
    6. ' tmp' → logprob: -4.2177653312683105
    7. ' parent' → logprob: -4.7177653312683105
    8. ' while' → logprob: -4.7177653312683105
    9. 'insert' → logprob: -5.9677653312683105
    10. 'new' → logprob: -6.9677653312683105

Token 302: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.2630665600299835
    2. '   ' → logprob: -1.5130665302276611
    3. '加' → logprob: -4.76306676864624
    4. '  ' → logprob: -7.63806676864624
    5. '
' → logprob: -8.013066291809082
    6. ' ' → logprob: -8.138066291809082
    7. '       ' → logprob: -8.138066291809082
    8. '_' → logprob: -8.513066291809082
    9. 'く' → logprob: -8.513066291809082
    10. '    ' → logprob: -8.763066291809082

Token 303: '加' (ID: 9116)
  Prédit: '加'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '加' → logprob: -0.002365540014579892
    2. 'け' → logprob: -6.252365589141846
    3. 'る' → logprob: -9.002365112304688
    4. ' ' → logprob: -9.502365112304688
    5. ' 加' → logprob: -9.627365112304688
    6. 'parent' → logprob: -10.502365112304688
    7. '
' → logprob: -10.502365112304688
    8. 'add' → logprob: -11.002365112304688
    9. '   ' → logprob: -11.002365112304688
    10. '  ' → logprob: -11.252365112304688

Token 304: 'える' (ID: 133169)
  Prédit: '加'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '加' → logprob: -0.3903658390045166
    2. 'る' → logprob: -1.1403658390045166
    3. '   ' → logprob: -6.8903656005859375
    4. ' ' → logprob: -7.3903656005859375
    5. '```' → logprob: -8.140365600585938
    6. 'え' → logprob: -8.515365600585938
    7. 'new' → logprob: -8.890365600585938
    8. 'える' → logprob: -8.890365600585938
    9. ' 加' → logprob: -9.015365600585938
    10. '     ' → logprob: -9.015365600585938

Token 305: '節' (ID: 89129)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5343462228775024
    2. ' while' → logprob: -0.9093462228775024
    3. ' ' → logprob: -6.159346103668213
    4. '場所' → logprob: -6.284346103668213
    5. 'parent' → logprob: -6.409346103668213
    6. 'node' → logprob: -7.284346103668213
    7. ' node' → logprob: -7.534346103668213
    8. 'まで' → logprob: -7.659346103668213
    9. '   ' → logprob: -7.784346103668213
    10. '  ' → logprob: -8.284346580505371

Token 306: '(parent' (ID: 24729)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.0454264879226685
    2. 'が' → logprob: -1.0454264879226685
    3. 'を' → logprob: -2.920426368713379
    4. 'while' → logprob: -3.170426368713379
    5. 'は' → logprob: -3.420426368713379
    6. ' is' → logprob: -3.670426368713379
    7. '=' → logprob: -3.920426368713379
    8. ' =' → logprob: -4.170426368713379
    9. 'parent' → logprob: -4.420426368713379
    10. 'に' → logprob: -4.670426368713379

Token 307: ')' (ID: 8)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6552449464797974
    2. ')' → logprob: -1.4052449464797974
    3. ' =' → logprob: -2.280244827270508
    4. 'while' → logprob: -3.405244827270508
    5. 'を' → logprob: -3.905244827270508
    6. 'は' → logprob: -4.030244827270508
    7. ' is' → logprob: -4.280244827270508
    8. '=None' → logprob: -4.655244827270508
    9. 'の' → logprob: -4.905244827270508
    10. '   ' → logprob: -5.030244827270508

Token 308: 'を' (ID: 7277)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.26348626613616943
    2. '=' → logprob: -2.138486385345459
    3. ' while' → logprob: -2.763486385345459
    4. 'を' → logprob: -4.138486385345459
    5. ' is' → logprob: -4.263486385345459
    6. 'は' → logprob: -5.388486385345459
    7. ' =' → logprob: -5.513486385345459
    8. 'の' → logprob: -6.263486385345459
    9. '=None' → logprob: -6.263486385345459
    10. 'に' → logprob: -6.763486385345459

Token 309: '探索' (ID: 191406)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0381968691945076
    2. ' tmp' → logprob: -3.5381968021392822
    3. 'None' → logprob: -5.038197040557861
    4. ' None' → logprob: -6.413197040557861
    5. 'while' → logprob: -9.413196563720703
    6. 'parent' → logprob: -9.663196563720703
    7. 'new' → logprob: -10.163196563720703
    8. 'root' → logprob: -10.788196563720703
    9. '	tmp' → logprob: -11.288196563720703
    10. 'tree' → logprob: -11.413196563720703

Token 310: 'する' (ID: 39065)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6951013803482056
    2. ' while' → logprob: -0.8201013803482056
    3. '   ' → logprob: -2.820101261138916
    4. '	while' → logprob: -7.570101261138916
    5. ' ' → logprob: -9.070101737976074
    6. ',' → logprob: -9.820101737976074
    7. '
' → logprob: -10.070101737976074
    8. 'の' → logprob: -10.445101737976074
    9. ' in' → logprob: -10.695101737976074
    10. '  ' → logprob: -10.820101737976074

Token 311: '。
' (ID: 3414)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3720124363899231
    2. ' while' → logprob: -1.7470123767852783
    3. '   ' → logprob: -1.9970123767852783
    4. '	while' → logprob: -8.1220121383667
    5. '
' → logprob: -8.6220121383667
    6. '    
' → logprob: -10.1220121383667
    7. ' ' → logprob: -10.7470121383667
    8. ',' → logprob: -10.8720121383667
    9. '  ' → logprob: -11.2470121383667
    10. 'While' → logprob: -11.3720121383667

Token 312: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5129880309104919
    2. 'while' → logprob: -1.2629880905151367
    3. '   ' → logprob: -2.1379880905151367
    4. '	while' → logprob: -8.137988090515137
    5. 'While' → logprob: -9.012988090515137
    6. ' ' → logprob: -9.512988090515137
    7. '  ' → logprob: -10.262988090515137
    8. '    ' → logprob: -10.637988090515137
    9. '    
' → logprob: -10.762988090515137
    10. ' 
' → logprob: -11.387988090515137

Token 313: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2988843023777008
    2. ' while' → logprob: -1.4238842725753784
    3. '   ' → logprob: -4.048884391784668
    4. '	while' → logprob: -9.548884391784668
    5. '
' → logprob: -10.923884391784668
    6. 'While' → logprob: -11.423884391784668
    7. ' 
' → logprob: -11.548884391784668
    8. ' ' → logprob: -11.798884391784668
    9. '  ' → logprob: -11.798884391784668
    10. '    
' → logprob: -11.923884391784668

Token 314: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.04863017052412033
    2. ' tmp' → logprob: -3.0486302375793457
    3. '(tmp' → logprob: -10.423629760742188
    4. '	tmp' → logprob: -12.048629760742188
    5. ' ' → logprob: -13.048629760742188
    6. '_tmp' → logprob: -13.548629760742188
    7. '   ' → logprob: -13.798629760742188
    8. '/tmp' → logprob: -14.298629760742188
    9. '$tmp' → logprob: -14.548629760742188
    10. '[tmp' → logprob: -14.673629760742188

Token 315: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.011066209524869919
    2. 'is' → logprob: -4.511066436767578
    3. 'は' → logprob: -11.886066436767578
    4. '!=' → logprob: -12.261066436767578
    5. ' ' → logprob: -13.261066436767578
    6. ' !=' → logprob: -13.636066436767578
    7. ':' → logprob: -14.261066436767578
    8. ')' → logprob: -14.261066436767578
    9. '	is' → logprob: -14.261066436767578
    10. ' は' → logprob: -14.761066436767578

Token 316: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10027103871107101
    2. ' not' → logprob: -2.350270986557007
    3. '!' → logprob: -11.225271224975586
    4. '	not' → logprob: -11.475271224975586
    5. '   ' → logprob: -11.975271224975586
    6. '
' → logprob: -12.475271224975586
    7. '不' → logprob: -12.725271224975586
    8. 'Not' → logprob: -12.850271224975586
    9. '```' → logprob: -12.975271224975586
    10. 'n' → logprob: -12.975271224975586

Token 317: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.10078905522823334
    2. ' None' → logprob: -2.3507890701293945
    3. 'not' → logprob: -7.9757890701293945
    4. ' not' → logprob: -8.475789070129395
    5. '   ' → logprob: -10.850789070129395
    6. '(None' → logprob: -12.725789070129395
    7. 'none' → logprob: -13.100789070129395
    8. ' ' → logprob: -13.600789070129395
    9. 'Not' → logprob: -13.725789070129395
    10. '
' → logprob: -14.100789070129395

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31391268968582153
    2. ':
' → logprob: -1.3139126300811768
    3. ' and' → logprob: -7.938912868499756
    4. ' :' → logprob: -9.313912391662598
    5. 'and' → logprob: -9.563912391662598
    6. ' :
' → logprob: -9.563912391662598
    7. '       ' → logprob: -10.813912391662598
    8. '   ' → logprob: -11.063912391662598
    9. ':

' → logprob: -11.188912391662598
    10. '):
' → logprob: -12.438912391662598

Token 319: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.471150279045105
    2. '       ' → logprob: -1.096150279045105
    3. 'parent' → logprob: -3.2211503982543945
    4. ' parent' → logprob: -6.8461503982543945
    5. 'if' → logprob: -8.221150398254395
    6. '
' → logprob: -8.596150398254395
    7. '	parent' → logprob: -9.721150398254395
    8. '    ' → logprob: -10.721150398254395
    9. ' if' → logprob: -11.346150398254395
    10. ' ' → logprob: -11.971150398254395

Token 320: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.02411748841404915
    2. '   ' → logprob: -3.8991174697875977
    3. ' parent' → logprob: -5.649117469787598
    4. '       ' → logprob: -10.899117469787598
    5. '	parent' → logprob: -10.899117469787598
    6. 'if' → logprob: -12.149117469787598
    7. ' ' → logprob: -12.899117469787598
    8. '  ' → logprob: -13.524117469787598
    9. '    ' → logprob: -13.899117469787598
    10. ' if' → logprob: -15.274117469787598

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.252458781003952
    2. '=' → logprob: -1.5024588108062744
    3. ',' → logprob: -8.127458572387695
    4. ' ' → logprob: -9.502458572387695
    5. 'tmp' → logprob: -9.877458572387695
    6. '.' → logprob: -10.877458572387695
    7. '    ' → logprob: -11.252458572387695
    8. 'key' → logprob: -11.752458572387695
    9. 'new' → logprob: -12.252458572387695
    10. '   ' → logprob: -12.252458572387695

Token 322: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.0067161982879042625
    2. ' tmp' → logprob: -5.006716251373291
    3. '	tmp' → logprob: -14.881715774536133
    4. ' ' → logprob: -15.506715774536133
    5. '   ' → logprob: -16.256715774536133
    6. '(tmp' → logprob: -16.756715774536133
    7. 'temp' → logprob: -16.881715774536133
    8. '/tmp' → logprob: -17.131715774536133
    9. '
' → logprob: -17.256715774536133
    10. '_tmp' → logprob: -17.631715774536133

Token 323: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8436259031295776
    2. 'if' → logprob: -1.4686259031295776
    3. '   ' → logprob: -1.7186259031295776
    4. '       ' → logprob: -1.8436259031295776
    5. '
' → logprob: -6.843626022338867
    6. '    ' → logprob: -8.093626022338867
    7. '        
' → logprob: -8.843626022338867
    8. '	if' → logprob: -8.968626022338867
    9. '    
' → logprob: -9.593626022338867
    10. ' ' → logprob: -9.593626022338867

Token 324: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4071913957595825
    2. '       ' → logprob: -1.5321913957595825
    3. 'if' → logprob: -2.157191276550293
    4. '   ' → logprob: -6.032191276550293
    5. '    ' → logprob: -8.532191276550293
    6. '        
' → logprob: -9.907191276550293
    7. '	if' → logprob: -10.157191276550293
    8. '
' → logprob: -11.032191276550293
    9. ' 
' → logprob: -11.157191276550293
    10. '        ' → logprob: -11.157191276550293

Token 325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0011948712635785341
    2. ' if' → logprob: -6.751194953918457
    3. '       ' → logprob: -10.751194953918457
    4. '   ' → logprob: -12.876194953918457
    5. '           ' → logprob: -15.376194953918457
    6. '    ' → logprob: -15.626194953918457
    7. '        
' → logprob: -16.25119400024414
    8. '	if' → logprob: -16.37619400024414
    9. '
' → logprob: -16.75119400024414
    10. ' ' → logprob: -17.25119400024414

Token 326: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.348469614982605
    2. ' new' → logprob: -1.223469614982605
    3. '   ' → logprob: -11.598469734191895
    4. '	new' → logprob: -11.848469734191895
    5. ' ' → logprob: -12.348469734191895
    6. '新' → logprob: -13.473469734191895
    7. '  ' → logprob: -14.098469734191895
    8. '    ' → logprob: -14.723469734191895
    9. ')new' → logprob: -14.848469734191895
    10. '
' → logprob: -14.973469734191895

Token 327: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -4.0126840758603066e-05
    2. 'node' → logprob: -10.625040054321289
    3. '_' → logprob: -12.250040054321289
    4. 'new' → logprob: -13.500040054321289
    5. ' node' → logprob: -13.750040054321289
    6. '_key' → logprob: -13.750040054321289
    7. '_NODE' → logprob: -13.875040054321289
    8. '   ' → logprob: -14.000040054321289
    9. '_.' → logprob: -14.250040054321289
    10. '_n' → logprob: -14.375040054321289

Token 328: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.250006675720215
    3. ' .' → logprob: -13.250006675720215
    4. 'key' → logprob: -17.50000762939453
    5. '
' → logprob: -17.75000762939453
    6. '.
' → logprob: -18.00000762939453
    7. '.left' → logprob: -18.50000762939453
    8. '.parent' → logprob: -18.75000762939453
    9. '.Key' → logprob: -18.75000762939453
    10. '.value' → logprob: -19.12500762939453

Token 329: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.05492347106337547
    2. '<' → logprob: -2.9299235343933105
    3. ' ' → logprob: -10.679923057556152
    4. ' >' → logprob: -12.054923057556152
    5. '.' → logprob: -12.679923057556152
    6. '   ' → logprob: -13.054923057556152
    7. ' ==' → logprob: -13.429923057556152
    8. '[' → logprob: -13.929923057556152
    9. ' <
' → logprob: -13.929923057556152
    10. '>' → logprob: -14.304923057556152

Token 330: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.07894685864448547
    2. ' tmp' → logprob: -2.578946828842163
    3. 'parent' → logprob: -9.953947067260742
    4. ' parent' → logprob: -12.578947067260742
    5. '	tmp' → logprob: -13.078947067260742
    6. 'root' → logprob: -13.953947067260742
    7. '(tmp' → logprob: -14.578947067260742
    8. '   ' → logprob: -14.578947067260742
    9. 'temp' → logprob: -14.953947067260742
    10. ' ' → logprob: -14.953947067260742

Token 331: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -6.921253225300461e-05
    2. '.' → logprob: -9.625069618225098
    3. ' .' → logprob: -13.125069618225098
    4. 'key' → logprob: -14.375069618225098
    5. '.left' → logprob: -15.250069618225098
    6. '.
' → logprob: -16.87506866455078
    7. '
' → logprob: -17.25006866455078
    8. '.keys' → logprob: -17.37506866455078
    9. ' key' → logprob: -17.37506866455078
    10. '.Key' → logprob: -17.37506866455078

Token 332: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3902057409286499
    2. ':
' → logprob: -1.14020574092865
    3. '       ' → logprob: -6.2652058601379395
    4. '           ' → logprob: -6.6402058601379395
    5. '):
' → logprob: -10.140205383300781
    6. ' :
' → logprob: -11.140205383300781
    7. ' :' → logprob: -11.265205383300781
    8. '):' → logprob: -11.515205383300781
    9. ',' → logprob: -11.765205383300781
    10. ')' → logprob: -12.015205383300781

Token 333: '           ' (ID: 352)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -1.1410534381866455
    2. ' tmp' → logprob: -1.6410534381866455
    3. '       ' → logprob: -1.7660534381866455
    4. '
' → logprob: -1.8910534381866455
    5. '        
' → logprob: -1.8910534381866455
    6. ' 
' → logprob: -5.641053199768066
    7. '[tmp' → logprob: -6.266053199768066
    8. '_tmp' → logprob: -6.516053199768066
    9. '(tmp' → logprob: -6.641053199768066
    10. '    
' → logprob: -7.016053199768066

Token 334: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.029941396787762642
    2. ' tmp' → logprob: -3.5299413204193115
    3. '
' → logprob: -9.52994155883789
    4. '           ' → logprob: -9.90494155883789
    5. '            
' → logprob: -10.27994155883789
    6. '	tmp' → logprob: -11.65494155883789
    7. '_tmp' → logprob: -11.77994155883789
    8. '        
' → logprob: -12.40494155883789
    9. '       ' → logprob: -12.52994155883789
    10. '(tmp' → logprob: -12.90494155883789

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889397442340851
    2. '=' → logprob: -2.5788938999176025
    3. '＝' → logprob: -13.203893661499023
    4. ' ' → logprob: -13.828893661499023
    5. 'tmp' → logprob: -14.953893661499023
    6. '.' → logprob: -15.078893661499023
    7. '.left' → logprob: -15.703893661499023
    8. '=temp' → logprob: -15.703893661499023
    9. '.=' → logprob: -16.203893661499023
    10. 'left' → logprob: -16.453893661499023

Token 336: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.12693557143211365
    2. ' tmp' → logprob: -2.1269354820251465
    3. '	tmp' → logprob: -12.376935958862305
    4. ' ' → logprob: -14.251935958862305
    5. 'temp' → logprob: -14.251935958862305
    6. '/tmp' → logprob: -14.876935958862305
    7. '(tmp' → logprob: -14.876935958862305
    8. '   ' → logprob: -15.126935958862305
    9. '$tmp' → logprob: -15.126935958862305
    10. '_tmp' → logprob: -15.501935958862305

Token 337: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.054500666621607e-06
    2. '.' → logprob: -12.75000286102295
    3. 'left' → logprob: -16.375003814697266
    4. '.le' → logprob: -17.000003814697266
    5. ' .' → logprob: -17.125003814697266
    6. '.right' → logprob: -18.375003814697266
    7. '.Left' → logprob: -19.125003814697266
    8. '.l' → logprob: -19.750003814697266
    9. '.parent' → logprob: -20.625003814697266
    10. '	left' → logprob: -20.750003814697266

Token 338: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022452453151345253
    2. ' else' → logprob: -4.522452354431152
    3. 'else' → logprob: -4.522452354431152
    4. 'elif' → logprob: -8.022452354431152
    5. '
' → logprob: -9.147452354431152
    6. ' elif' → logprob: -10.397452354431152
    7. '<|end|>' → logprob: -12.522452354431152
    8. '	else' → logprob: -12.897452354431152
    9. '   ' → logprob: -13.772452354431152
    10. '        
' → logprob: -13.897452354431152

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3507716655731201
    2. ' else' → logprob: -1.8507716655731201
    3. 'else' → logprob: -1.9757716655731201
    4. '
' → logprob: -10.3507719039917
    5. 'elif' → logprob: -10.6007719039917
    6. '	else' → logprob: -11.6007719039917
    7. ' elif' → logprob: -12.1007719039917
    8. '        
' → logprob: -12.3507719039917
    9. ' 
' → logprob: -13.2257719039917
    10. '   ' → logprob: -13.6007719039917

Token 340: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.22031617164611816
    2. ' else' → logprob: -1.9703161716461182
    3. '       ' → logprob: -2.845316171646118
    4. 'elif' → logprob: -8.595315933227539
    5. ' elif' → logprob: -11.345315933227539
    6. '	else' → logprob: -12.095315933227539
    7. '   ' → logprob: -13.595315933227539
    8. '
' → logprob: -13.720315933227539
    9. '_else' → logprob: -14.845315933227539
    10. '        
' → logprob: -15.720315933227539

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8498013019561768
    2. '           ' → logprob: -0.8498013019561768
    3. ':
' → logprob: -1.9748013019561768
    4. '       ' → logprob: -5.099801063537598
    5. ' :
' → logprob: -10.849801063537598
    6. ' :' → logprob: -10.974801063537598
    7. '          ' → logprob: -11.099801063537598
    8. '   ' → logprob: -11.224801063537598
    9. '               ' → logprob: -11.849801063537598
    10. ':

' → logprob: -12.224801063537598

Token 342: '           ' (ID: 352)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.889939546585083
    2. '           ' → logprob: -1.014939546585083
    3. ' tmp' → logprob: -1.764939546585083
    4. '       ' → logprob: -2.889939546585083
    5. '   ' → logprob: -10.389939308166504
    6. '	tmp' → logprob: -10.639939308166504
    7. '
' → logprob: -10.639939308166504
    8. '/tmp' → logprob: -11.889939308166504
    9. '               ' → logprob: -12.264939308166504
    10. 'temp' → logprob: -12.264939308166504

Token 343: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.048830464482307434
    2. ' tmp' → logprob: -3.048830509185791
    3. '           ' → logprob: -8.423830032348633
    4. '       ' → logprob: -11.173830032348633
    5. 'temp' → logprob: -12.673830032348633
    6. '/tmp' → logprob: -13.048830032348633
    7. '	tmp' → logprob: -13.048830032348633
    8. '$tmp' → logprob: -14.798830032348633
    9. '(tmp' → logprob: -14.923830032348633
    10. '[tmp' → logprob: -15.173830032348633

Token 344: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693136930465698
    2. '=' → logprob: -2.1269314289093018
    3. 'tmp' → logprob: -14.126931190490723
    4. '＝' → logprob: -14.126931190490723
    5. ' tmp' → logprob: -14.376931190490723
    6. ' ' → logprob: -14.751931190490723
    7. ' =
' → logprob: -15.626931190490723
    8. '=
' → logprob: -15.626931190490723
    9. ' key' → logprob: -16.00193214416504
    10. '   ' → logprob: -16.50193214416504

Token 345: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.03804837539792061
    2. ' tmp' → logprob: -3.288048267364502
    3. '	tmp' → logprob: -12.28804874420166
    4. '/tmp' → logprob: -13.53804874420166
    5. '$tmp' → logprob: -15.28804874420166
    6. '(tmp' → logprob: -15.53804874420166
    7. ' ' → logprob: -15.66304874420166
    8. '[tmp' → logprob: -16.038047790527344
    9. '.tmp' → logprob: -16.288047790527344
    10. '   ' → logprob: -16.413047790527344

Token 346: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -8.895480277715251e-06
    2. '.' → logprob: -11.875008583068848
    3. 'right' → logprob: -13.750008583068848
    4. ' .' → logprob: -14.125008583068848
    5. '.left' → logprob: -17.500009536743164
    6. '.r' → logprob: -18.125009536743164
    7. ' ' → logprob: -18.500009536743164
    8. '.parent' → logprob: -18.875009536743164
    9. '	right' → logprob: -19.375009536743164
    10. '[right' → logprob: -19.375009536743164

Token 347: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27026763558387756
    2. '
' → logprob: -1.7702676057815552
    3. '    
' → logprob: -2.8952677249908447
    4. '  
' → logprob: -5.770267486572266
    5. '        
' → logprob: -6.270267486572266
    6. ' 
' → logprob: -6.645267486572266
    7. '<|end|>' → logprob: -6.770267486572266
    8. '   
' → logprob: -7.270267486572266
    9. '[' → logprob: -7.895267486572266
    10. '       ' → logprob: -8.020267486572266

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022355586290359497
    2. 'new' → logprob: -4.772355556488037
    3. 'if' → logprob: -4.897355556488037
    4. ' new' → logprob: -5.647355556488037
    5. ' if' → logprob: -6.522355556488037
    6. '    
' → logprob: -8.147356033325195
    7. '```' → logprob: -8.147356033325195
    8. '
' → logprob: -8.272356033325195
    9. ')' → logprob: -9.772356033325195
    10. 'while' → logprob: -10.147356033325195

Token 349: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6966588497161865
    2. 'new' → logprob: -0.9466588497161865
    3. '   ' → logprob: -2.1966588497161865
    4. ' new' → logprob: -6.571659088134766
    5. ' if' → logprob: -6.946659088134766
    6. '#' (adapté à ' #') → logprob: -9.071659088134766
    7. '
' → logprob: -10.446659088134766
    8. '    
' → logprob: -11.321659088134766
    9. '```' → logprob: -12.071659088134766
    10. 'node' → logprob: -12.321659088134766

Token 350: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.03429132327437401
    2. 'if' → logprob: -3.4092912673950195
    3. '   ' → logprob: -7.7842912673950195
    4. ' new' → logprob: -8.53429126739502
    5. '新' → logprob: -11.78429126739502
    6. ' if' → logprob: -12.03429126739502
    7. '
' → logprob: -12.40929126739502
    8. '#' → logprob: -12.78429126739502
    9. '	new' → logprob: -12.90929126739502
    10. '       ' → logprob: -13.28429126739502

Token 351: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.25000286102295
    3. 'node' → logprob: -14.37500286102295
    4. '   ' → logprob: -14.62500286102295
    5. '_nodes' → logprob: -15.62500286102295
    6. '_NODE' → logprob: -16.500003814697266
    7. '_
' → logprob: -16.625003814697266
    8. '
' → logprob: -17.500003814697266
    9. '_key' → logprob: -17.750003814697266
    10. '._' → logprob: -18.250003814697266

Token 352: 'の' (ID: 3385)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.parent' → logprob: -4.370294846012257e-05
    2. '.' → logprob: -10.125043869018555
    3. '.key' → logprob: -13.250043869018555
    4. ' .' → logprob: -14.375043869018555
    5. 'parent' → logprob: -15.000043869018555
    6. '.par' → logprob: -15.375043869018555
    7. '.
' → logprob: -15.625043869018555
    8. '.p' → logprob: -15.875043869018555
    9. '.left' → logprob: -16.000043869018555
    10. '.Parent' → logprob: -16.375043869018555

Token 353: '親' (ID: 87691)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00018542143516242504
    2. '.parent' → logprob: -8.625185012817383
    3. ' parent' → logprob: -12.375185012817383
    4. 'node' → logprob: -14.125185012817383
    5. '	parent' → logprob: -15.250185012817383
    6. '_parent' → logprob: -15.500185012817383
    7. 'key' → logprob: -15.875185012817383
    8. '[parent' → logprob: -16.625185012817383
    9. ',parent' → logprob: -16.875185012817383
    10. '
' → logprob: -16.875185012817383

Token 354: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11292634159326553
    2. ' =' → logprob: -2.2379262447357178
    3. '＝' → logprob: -9.987926483154297
    4. '=node' → logprob: -10.487926483154297
    5. 'node' → logprob: -11.112926483154297
    6. 'new' → logprob: -11.987926483154297
    7. '=new' → logprob: -13.362926483154297
    8. 'は' → logprob: -13.987926483154297
    9. ' ' → logprob: -13.987926483154297
    10. '=None' → logprob: -14.112926483154297

Token 355: '設定' (ID: 157652)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0011709370883181691
    2. ' parent' → logprob: -6.751171112060547
    3. '	parent' → logprob: -14.751171112060547
    4. '   ' → logprob: -16.126171112060547
    5. '(parent' → logprob: -16.376171112060547
    6. '親' → logprob: -16.501171112060547
    7. '[parent' → logprob: -16.876171112060547
    8. 'paren' → logprob: -17.251171112060547
    9. '.parent' → logprob: -17.626171112060547
    10. ',parent' → logprob: -19.251171112060547

Token 356: 'する' (ID: 39065)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47411900758743286
    2. ' =' → logprob: -0.9741190075874329
    3. '   ' → logprob: -10.599119186401367
    4. '＝' → logprob: -11.849119186401367
    5. 'parent' → logprob: -12.349119186401367
    6. '(parent' → logprob: -13.849119186401367
    7. '[parent' → logprob: -13.849119186401367
    8. ' ' → logprob: -14.224119186401367
    9. '=
' → logprob: -14.349119186401367
    10. '    ' → logprob: -14.349119186401367

Token 357: '。
' (ID: 3414)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19368749856948853
    2. ' =' → logprob: -2.0686874389648438
    3. 'new' → logprob: -3.4436874389648438
    4. '   ' → logprob: -4.068687438964844
    5. ' new' → logprob: -7.818687438964844
    6. '=new' → logprob: -8.943687438964844
    7. '=
' → logprob: -9.068687438964844
    8. '[new' → logprob: -11.318687438964844
    9. ' =
' → logprob: -12.568687438964844
    10. '	new' → logprob: -12.693687438964844

Token 358: '   ' (ID: 271)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.009176280349493027
    2. ' new' → logprob: -5.009176254272461
    3. '   ' → logprob: -6.009176254272461
    4. '	new' → logprob: -13.509176254272461
    5. '
' → logprob: -15.509176254272461
    6. '[new' → logprob: -17.00917625427246
    7. ' ' → logprob: -17.13417625427246
    8. '    
' → logprob: -17.25917625427246
    9. '(new' → logprob: -17.38417625427246
    10. '  ' → logprob: -17.50917625427246

Token 359: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0016007984522730112
    2. ' new' → logprob: -6.751600742340088
    3. '   ' → logprob: -7.751600742340088
    4. '	new' → logprob: -15.126601219177246
    5. '新' → logprob: -17.50160026550293
    6. ' ' → logprob: -17.50160026550293
    7. 'New' → logprob: -17.75160026550293
    8. '  ' → logprob: -18.12660026550293
    9. '       ' → logprob: -18.50160026550293
    10. '[new' → logprob: -18.62660026550293

Token 360: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. 'node' → logprob: -20.125
    4. '_Node' → logprob: -20.375
    5. '_NODE' → logprob: -20.375
    6. ' _' → logprob: -20.75
    7. '_parent' → logprob: -20.875
    8. '_n' → logprob: -21.125
    9. '_nodes' → logprob: -21.25
    10. '__' → logprob: -21.625

Token 361: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00010092071170220152
    2. '.' → logprob: -9.250101089477539
    3. ' .' → logprob: -13.000101089477539
    4. '.key' → logprob: -13.375101089477539
    5. '.Parent' → logprob: -14.875101089477539
    6. 'parent' → logprob: -15.750101089477539
    7. '.parents' → logprob: -15.875101089477539
    8. '
' → logprob: -17.50010108947754
    9. ',parent' → logprob: -17.50010108947754
    10. '}.' → logprob: -17.62510108947754

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326213479042053
    2. '=' → logprob: -1.3132621049880981
    3. '＝' → logprob: -15.438261985778809
    4. ',' → logprob: -16.313262939453125
    5. ' =
' → logprob: -16.938262939453125
    6. ' ' → logprob: -16.938262939453125
    7. ')' → logprob: -17.438262939453125
    8. ',parent' → logprob: -18.313262939453125
    9. '=end' → logprob: -18.688262939453125
    10. '[parent' → logprob: -19.063262939453125

Token 363: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.04858805239200592
    2. ' parent' → logprob: -3.0485880374908447
    3. '	parent' → logprob: -14.923587799072266
    4. '(parent' → logprob: -15.673587799072266
    5. '[parent' → logprob: -15.923587799072266
    6. 'paren' → logprob: -16.798587799072266
    7. ' ' → logprob: -18.048587799072266
    8. '.parent' → logprob: -18.423587799072266
    9. 'par' → logprob: -18.548587799072266
    10. '_parent' → logprob: -18.923587799072266

Token 364: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1250683069229126
    2. 'if' → logprob: -2.375068187713623
    3. '
' → logprob: -3.875068187713623
    4. ' if' → logprob: -5.875068187713623
    5. '    
' → logprob: -7.375068187713623
    6. ' 
' → logprob: -8.750068664550781
    7. '  
' → logprob: -9.375068664550781
    8. '<|end|>' → logprob: -10.125068664550781
    9. '	if' → logprob: -11.000068664550781
    10. '  ' → logprob: -11.250068664550781

Token 365: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009998777881264687
    2. 'if' → logprob: -5.134998798370361
    3. ' if' → logprob: -5.509998798370361
    4. '    
' → logprob: -12.509998321533203
    5. '
' → logprob: -12.634998321533203
    6. '```' → logprob: -12.634998321533203
    7. '	if' → logprob: -13.134998321533203
    8. 'If' → logprob: -13.884998321533203
    9. ' 
' → logprob: -13.884998321533203
    10. '<|end|>' → logprob: -15.009998321533203

Token 366: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0007158888038247824
    2. '   ' → logprob: -7.250715732574463
    3. ' if' → logprob: -12.125716209411621
    4. 'If' → logprob: -15.000716209411621
    5. '```' → logprob: -16.250715255737305
    6. '	if' → logprob: -17.375715255737305
    7. '
' → logprob: -17.875715255737305
    8. '#' (adapté à ' #') → logprob: -18.750715255737305
    9. '       ' → logprob: -19.125715255737305
    10. '    
' → logprob: -19.375715255737305

Token 367: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.941161776310764e-05
    2. '   ' → logprob: -10.375039100646973
    3. ' if' → logprob: -11.750039100646973
    4. '
' → logprob: -15.500039100646973
    5. '```' → logprob: -17.00004005432129
    6. '	if' → logprob: -17.75004005432129
    7. '#' → logprob: -18.25004005432129
    8. '       ' → logprob: -18.50004005432129
    9. 'If' → logprob: -19.00004005432129
    10. '    
' → logprob: -19.62504005432129

Token 368: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.200166469876422e-06
    2. 'node' → logprob: -12.375004768371582
    3. '_' → logprob: -14.125004768371582
    4. 'if' → logprob: -15.875004768371582
    5. 'Node' → logprob: -17.5000057220459
    6. '_nodes' → logprob: -17.8750057220459
    7. '_key' → logprob: -18.0000057220459
    8. '```' → logprob: -18.2500057220459
    9. '_NODE' → logprob: -18.2500057220459
    10. '_code' → logprob: -18.6250057220459

Token 369: 'の' (ID: 3385)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.7730361819267273
    2. 'if' → logprob: -1.023036241531372
    3. ' if' → logprob: -2.523036241531372
    4. '.left' → logprob: -3.773036241531372
    5. 'が' → logprob: -4.273036003112793
    6. 'の' → logprob: -4.398036003112793
    7. 'を' → logprob: -4.648036003112793
    8. '   ' → logprob: -5.023036003112793
    9. 'は' → logprob: -5.273036003112793
    10. ' is' → logprob: -5.523036003112793

Token 370: '子' (ID: 7407)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.0688621997833252
    2. 'left' → logprob: -1.0688621997833252
    3. 'if' → logprob: -1.3188621997833252
    4. 'parent' → logprob: -3.443862199783325
    5. ' key' → logprob: -5.318861961364746
    6. 'None' → logprob: -5.568861961364746
    7. 'right' → logprob: -7.068861961364746
    8. ' left' → logprob: -7.068861961364746
    9. ' if' → logprob: -7.068861961364746
    10. 'node' → logprob: -7.568861961364746

Token 371: '供' (ID: 20955)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7744836807250977
    2. 'if' → logprob: -0.8994836807250977
    3. '=' → logprob: -2.6494836807250977
    4. ' if' → logprob: -3.7744836807250977
    5. 'が' → logprob: -4.524483680725098
    6. 'として' → logprob: -5.399483680725098
    7. 'を' → logprob: -5.524483680725098
    8. '=None' → logprob: -5.774483680725098
    9. 'は' → logprob: -5.899483680725098
    10. '_nodes' → logprob: -6.024483680725098

Token 372: 'を' (ID: 7277)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5007193684577942
    2. 'が' → logprob: -1.5007193088531494
    3. '=' → logprob: -2.3757193088531494
    4. 'は' → logprob: -3.8757193088531494
    5. ' =' → logprob: -4.3757195472717285
    6. 'として' → logprob: -4.6257195472717285
    7. '=None' → logprob: -4.7507195472717285
    8. ' if' → logprob: -4.8757195472717285
    9. 'を' → logprob: -5.1257195472717285
    10. 'の' → logprob: -6.0007195472717285

Token 373: '設定' (ID: 157652)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00016790216614026576
    2. ' None' → logprob: -8.750167846679688
    3. '   ' → logprob: -11.875167846679688
    4. '```' → logprob: -13.875167846679688
    5. 'none' → logprob: -14.875167846679688
    6. '(None' → logprob: -15.000167846679688
    7. '_None' → logprob: -15.625167846679688
    8. 'Node' → logprob: -15.875167846679688
    9. 'なし' → logprob: -15.875167846679688
    10. 'No' → logprob: -16.500167846679688

Token 374: 'する' (ID: 39065)
  Prédit: '(None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.11953747272491455
    2. 'None' → logprob: -2.744537353515625
    3. '=' → logprob: -4.244537353515625
    4. '(' → logprob: -4.244537353515625
    5. '   ' → logprob: -5.369537353515625
    6. '=None' → logprob: -5.869537353515625
    7. '[' → logprob: -5.994537353515625
    8. ' =' → logprob: -6.619537353515625
    9. '(new' → logprob: -6.744537353515625
    10. ' None' → logprob: -6.869537353515625

Token 375: '。
' (ID: 3414)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35876479744911194
    2. '   ' → logprob: -2.108764886856079
    3. '=' → logprob: -2.358764886856079
    4. ' if' → logprob: -2.983764886856079
    5. ' =' → logprob: -3.733764886856079
    6. 'new' → logprob: -5.1087646484375
    7. 'None' → logprob: -5.9837646484375
    8. '.' → logprob: -7.1087646484375
    9. '=None' → logprob: -7.8587646484375
    10. 'left' → logprob: -8.4837646484375

Token 376: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26168909668922424
    2. 'new' → logprob: -1.5116890668869019
    3. '   ' → logprob: -5.261689186096191
    4. ' if' → logprob: -5.761689186096191
    5. ' new' → logprob: -6.636689186096191
    6. '```' → logprob: -10.136689186096191
    7. '[new' → logprob: -12.011689186096191
    8. 'If' → logprob: -12.511689186096191
    9. 'None' → logprob: -12.761689186096191
    10. 'New' → logprob: -12.761689186096191

Token 377: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07012393325567245
    2. 'new' → logprob: -2.6951239109039307
    3. '   ' → logprob: -8.945123672485352
    4. ' if' → logprob: -10.070123672485352
    5. ' new' → logprob: -11.570123672485352
    6. '```' → logprob: -12.695123672485352
    7. 'If' → logprob: -14.945123672485352
    8. 'left' → logprob: -14.945123672485352
    9. '
' → logprob: -15.195123672485352
    10. '[new' → logprob: -15.320123672485352

Token 378: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.12695373594760895
    2. ' parent' → logprob: -2.1269538402557373
    3. 'new' → logprob: -11.376954078674316
    4. ' new' → logprob: -12.001954078674316
    5. '   ' → logprob: -12.876954078674316
    6. ' ' → logprob: -13.251954078674316
    7. '	parent' → logprob: -13.501954078674316
    8. '  ' → logprob: -13.751954078674316
    9. '(parent' → logprob: -14.001954078674316
    10. '[parent' → logprob: -16.376953125

Token 379: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00013953536108601838
    2. '.left' → logprob: -9.500139236450195
    3. 'is' → logprob: -9.875139236450195
    4. '.key' → logprob: -11.625139236450195
    5. ' ' → logprob: -13.375139236450195
    6. '==' → logprob: -13.750139236450195
    7. 'left' → logprob: -14.250139236450195
    8. ':' → logprob: -15.250139236450195
    9. ' ==' → logprob: -15.875139236450195
    10. '.is' → logprob: -16.125139236450195

Token 380: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00033558503491804004
    2. ' None' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.625335693359375
    4. 'not' → logprob: -18.125335693359375
    5. '(None' → logprob: -18.375335693359375
    6. '=None' → logprob: -18.625335693359375
    7. 'N' → logprob: -18.875335693359375
    8. '_None' → logprob: -19.750335693359375
    9. 'No' → logprob: -19.875335693359375
    10. 'Not' → logprob: -20.125335693359375

Token 381: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7081138491630554
    2. ':' → logprob: -0.8331138491630554
    3. '   ' → logprob: -3.0831139087677
    4. '       ' → logprob: -3.8331139087677
    5. 'root' → logprob: -5.458113670349121
    6. ' root' → logprob: -7.833113670349121
    7. '[root' → logprob: -8.958113670349121
    8. '=root' → logprob: -9.083113670349121
    9. '(root' → logprob: -9.833113670349121
    10. ' :
' → logprob: -9.958113670349121

Token 382: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.20263779163360596
    2. '       ' → logprob: -1.952637791633606
    3. ' root' → logprob: -3.2026376724243164
    4. '   ' → logprob: -7.077637672424316
    5. '	root' → logprob: -10.827637672424316
    6. '[root' → logprob: -12.952637672424316
    7. '_root' → logprob: -13.577637672424316
    8. '
' → logprob: -13.702637672424316
    9. ' ' → logprob: -13.827637672424316
    10. '/root' → logprob: -14.702637672424316

Token 383: ' #' (ID: 1069)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0019362468738108873
    2. ' root' → logprob: -6.251936435699463
    3. '   ' → logprob: -12.251935958862305
    4. 'new' → logprob: -13.126935958862305
    5. '       ' → logprob: -14.626935958862305
    6. 'global' → logprob: -15.376935958862305
    7. '	root' → logprob: -16.376935958862305
    8. 'roots' → logprob: -17.251935958862305
    9. ' new' → logprob: -17.376935958862305
    10. ' ' → logprob: -18.251935958862305

Token 384: ' tree' (ID: 8165)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.004092292860150337
    2. ' root' → logprob: -5.504092216491699
    3. 'new' → logprob: -12.0040922164917
    4. '   ' → logprob: -12.2540922164917
    5. 'global' → logprob: -12.8790922164917
    6. '	root' → logprob: -15.6290922164917
    7. ' new' → logprob: -16.254093170166016
    8. '       ' → logprob: -16.254093170166016
    9. '#' → logprob: -17.379093170166016
    10. ' ' → logprob: -17.504093170166016

Token 385: 'が' (ID: 6632)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05944376811385155
    2. '=' → logprob: -3.059443712234497
    3. 'root' → logprob: -5.059443950653076
    4. '=root' → logprob: -5.934443950653076
    5. ' root' → logprob: -7.559443950653076
    6. '_root' → logprob: -7.934443950653076
    7. '.root' → logprob: -8.434443473815918
    8. '[root' → logprob: -8.684443473815918
    9. '   ' → logprob: -9.059443473815918
    10. ' ' → logprob: -9.059443473815918

Token 386: '空' (ID: 16207)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.019565779715776443
    2. ' new' → logprob: -4.144565582275391
    3. 'None' → logprob: -5.769565582275391
    4. ' None' → logprob: -8.01956558227539
    5. 'root' → logprob: -9.64456558227539
    6. '   ' → logprob: -13.01956558227539
    7. 'none' → logprob: -13.39456558227539
    8. ' ' → logprob: -13.64456558227539
    9. '    ' → logprob: -13.76956558227539
    10. '	new' → logprob: -14.14456558227539

Token 387: 'だった' (ID: 182863)
  Prédit: 'の場合'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の場合' → logprob: -1.2539491653442383
    2. 'の' → logprob: -1.3789491653442383
    3. '       ' → logprob: -1.8789491653442383
    4. '   ' → logprob: -1.8789491653442383
    5. 'なので' → logprob: -2.6289491653442383
    6. 'で' → logprob: -3.5039491653442383
    7. 'ので' → logprob: -4.378949165344238
    8. 'root' → logprob: -4.503949165344238
    9. '(root' → logprob: -4.628949165344238
    10. '=' → logprob: -5.628949165344238

Token 388: '場合' (ID: 72486)
  Prédit: 'ので'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ので' → logprob: -0.12781883776187897
    2. 'root' → logprob: -2.8778188228607178
    3. 'ため' → logprob: -3.7528188228607178
    4. '   ' → logprob: -3.7528188228607178
    5. '
' → logprob: -5.252819061279297
    6. '場合' → logprob: -5.377819061279297
    7. ' root' → logprob: -6.752819061279297
    8. '#' → logprob: -6.752819061279297
    9. 'ら' → logprob: -7.252819061279297
    10. '。' → logprob: -7.502819061279297

Token 389: 'は' (ID: 5205)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07599067687988281
    2. 'root' → logprob: -2.700990676879883
    3. ' root' → logprob: -5.325990676879883
    4. '   ' → logprob: -7.075990676879883
    5. '
' → logprob: -9.700990676879883
    6. ':
' → logprob: -9.825990676879883
    7. '           ' → logprob: -9.950990676879883
    8. '[root' → logprob: -10.075990676879883
    9. ':' → logprob: -10.200990676879883
    10. '(root' → logprob: -10.325990676879883

Token 390: '、' (ID: 1395)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00027432903880253434
    2. ' root' → logprob: -8.250274658203125
    3. '   ' → logprob: -12.125274658203125
    4. 'new' → logprob: -12.375274658203125
    5. 'global' → logprob: -12.875274658203125
    6. '       ' → logprob: -14.125274658203125
    7. '	root' → logprob: -16.250274658203125
    8. '           ' → logprob: -18.500274658203125
    9. ' new' → logprob: -18.625274658203125
    10. '
' → logprob: -18.625274658203125

Token 391: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.273621405242011e-05
    2. ' root' → logprob: -10.375032424926758
    3. 'global' → logprob: -14.250032424926758
    4. '   ' → logprob: -14.625032424926758
    5. 'new' → logprob: -15.125032424926758
    6. '       ' → logprob: -17.000032424926758
    7. '	root' → logprob: -17.250032424926758
    8. '
' → logprob: -19.375032424926758
    9. 'roots' → logprob: -19.500032424926758
    10. '[root' → logprob: -19.875032424926758

Token 392: 'に' (ID: 5280)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133142590522766
    2. '=' → logprob: -1.3133141994476318
    3. '=root' → logprob: -9.938314437866211
    4. ' ' → logprob: -13.313314437866211
    5. '＝' → logprob: -13.313314437866211
    6. '=new' → logprob: -14.563314437866211
    7. '   ' → logprob: -16.31331443786621
    8. 'new' → logprob: -16.31331443786621
    9. 'root' → logprob: -16.68831443786621
    10. ' ' → logprob: -16.68831443786621

Token 393: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0031806828919798136
    2. ' new' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.628180503845215
    4. '新' → logprob: -13.878180503845215
    5. 'root' → logprob: -14.503180503845215
    6. '	new' → logprob: -15.378180503845215
    7. '```' → logprob: -16.37818145751953
    8. '    ' → logprob: -17.75318145751953
    9. ' ' → logprob: -17.87818145751953
    10. '  ' → logprob: -18.37818145751953

Token 394: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.8624639324116288e-06
    2. 'node' → logprob: -14.125001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_root' → logprob: -16.000001907348633
    5. '_n' → logprob: -16.375001907348633
    6. ' _' → logprob: -16.500001907348633
    7. '_NODE' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '
' → logprob: -17.625001907348633
    10. ' node' → logprob: -17.875001907348633

Token 395: 'を' (ID: 7277)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2259903997182846
    2. ' =' → logprob: -1.6009904146194458
    3. '=root' → logprob: -8.225990295410156
    4. '   ' → logprob: -8.600990295410156
    5. 'を' → logprob: -9.975990295410156
    6. '＝' → logprob: -10.225990295410156
    7. ' ' → logprob: -11.850990295410156
    8. 'new' → logprob: -11.975990295410156
    9. ' を' → logprob: -12.350990295410156
    10. ' new' → logprob: -12.475990295410156

Token 396: '設定' (ID: 157652)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.020783724263310432
    2. 'root' → logprob: -4.3957839012146
    3. '設定' → logprob: -5.6457839012146
    4. ' new' → logprob: -6.1457839012146
    5. 'set' → logprob: -6.2707839012146
    6. '新' → logprob: -8.395783424377441
    7. 'セット' → logprob: -8.520783424377441
    8. '   ' → logprob: -9.145783424377441
    9. ' root' → logprob: -10.520783424377441
    10. '代' → logprob: -10.520783424377441

Token 397: 'する' (ID: 39065)
  Prédit: 'する'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'する' → logprob: -0.13018320500850677
    2. '   ' → logprob: -2.630183219909668
    3. '       ' → logprob: -3.130183219909668
    4. 'され' → logprob: -6.505183219909668
    5. 'し' → logprob: -6.505183219909668
    6. 'します' → logprob: -6.505183219909668
    7. 'して' → logprob: -7.505183219909668
    8. 'してください' → logprob: -7.505183219909668
    9. 'root' → logprob: -7.880183219909668
    10. '(root' → logprob: -9.755183219909668

Token 398: '。
' (ID: 3414)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030094444751739502
    2. 'root' → logprob: -3.9050943851470947
    3. '
' → logprob: -5.280094623565674
    4. '   ' → logprob: -5.905094623565674
    5. ' root' → logprob: -6.655094623565674
    6. '(root' → logprob: -8.780094146728516
    7. '[root' → logprob: -9.655094146728516
    8. '           ' → logprob: -9.780094146728516
    9. ':
' → logprob: -10.655094146728516
    10. '
' → logprob: -10.780094146728516

Token 399: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.02286582812666893
    2. '   ' → logprob: -4.2728657722473145
    3. '       ' → logprob: -5.2728657722473145
    4. ' root' → logprob: -5.6478657722473145
    5. '	root' → logprob: -11.897866249084473
    6. '
' → logprob: -13.647866249084473
    7. ' ' → logprob: -14.522866249084473
    8. '```' → logprob: -14.522866249084473
    9. 'global' → logprob: -14.647866249084473
    10. '  ' → logprob: -15.522866249084473

Token 400: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.00016742534353397787
    2. ' root' → logprob: -8.750167846679688
    3. '   ' → logprob: -12.250167846679688
    4. 'global' → logprob: -13.000167846679688
    5. '       ' → logprob: -13.375167846679688
    6. 'new' → logprob: -16.625167846679688
    7. '	root' → logprob: -16.875167846679688
    8. '
' → logprob: -18.250167846679688
    9. '           ' → logprob: -19.125167846679688
    10. 'roots' → logprob: -19.125167846679688

Token 401: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. '=new' → logprob: -15.160224914550781
    4. '＝' → logprob: -15.160224914550781
    5. '=root' → logprob: -15.160224914550781
    6. ' ' → logprob: -17.28522491455078
    7. '=create' → logprob: -18.53522491455078
    8. '=end' → logprob: -18.66022491455078
    9. '=head' → logprob: -18.66022491455078
    10. '=
' → logprob: -18.66022491455078

Token 402: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02324652671813965
    2. ' new' → logprob: -3.7732465267181396
    3. '   ' → logprob: -14.648246765136719
    4. '	new' → logprob: -15.523246765136719
    5. ' ' → logprob: -15.648246765136719
    6. 'ne' → logprob: -16.77324676513672
    7. '新' → logprob: -16.89824676513672
    8. '
' → logprob: -17.64824676513672
    9. '```' → logprob: -17.89824676513672
    10. '  ' → logprob: -18.02324676513672

Token 403: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.624555291840807e-05
    2. 'node' → logprob: -9.500076293945312
    3. ' node' → logprob: -14.875076293945312
    4. ' _' → logprob: -15.000076293945312
    5. 'new' → logprob: -15.000076293945312
    6. '_' → logprob: -15.750076293945312
    7. 'Node' → logprob: -16.750076293945312
    8. '_NODE' → logprob: -17.625076293945312
    9. '_root' → logprob: -18.875076293945312
    10. '_nodes' → logprob: -18.875076293945312

Token 404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003396343090571463
    2. 'else' → logprob: -8.50033950805664
    3. 'elif' → logprob: -9.25033950805664
    4. 'return' → logprob: -10.75033950805664
    5. '       ' → logprob: -11.75033950805664
    6. ' else' → logprob: -12.37533950805664
    7. '
' → logprob: -12.62533950805664
    8. '    
' → logprob: -13.62533950805664
    9. ' elif' → logprob: -14.12533950805664
    10. '	elif' → logprob: -15.12533950805664

Token 405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0039476752281188965
    2. 'else' → logprob: -5.628947734832764
    3. ' else' → logprob: -8.503947257995605
    4. 'elif' → logprob: -9.003947257995605
    5. '       ' → logprob: -11.878947257995605
    6. 'return' → logprob: -12.253947257995605
    7. '	else' → logprob: -12.378947257995605
    8. ' elif' → logprob: -12.753947257995605
    9. '	elif' → logprob: -13.753947257995605
    10. '    
' → logprob: -14.503947257995605

Token 406: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.13466253876686096
    2. 'else' → logprob: -2.384662628173828
    3. '   ' → logprob: -3.634662628173828
    4. ' elif' → logprob: -5.009662628173828
    5. ' else' → logprob: -7.134662628173828
    6. 'el' → logprob: -12.759662628173828
    7. '	elif' → logprob: -13.759662628173828
    8. ' ' → logprob: -14.259662628173828
    9. 'elseif' → logprob: -14.384662628173828
    10. '       ' → logprob: -15.259662628173828

Token 407: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.11285308003425598
    2. ' new' → logprob: -2.2378530502319336
    3. '   ' → logprob: -11.112853050231934
    4. 'parent' → logprob: -11.737853050231934
    5. ' ' → logprob: -12.487853050231934
    6. '  ' → logprob: -13.612853050231934
    7. ' parent' → logprob: -13.862853050231934
    8. '	new' → logprob: -13.862853050231934
    9. '    ' → logprob: -14.612853050231934
    10. '新' → logprob: -16.23785400390625

Token 408: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.5776860184123507e-06
    2. 'node' → logprob: -13.37500286102295
    3. '_key' → logprob: -14.25000286102295
    4. ' node' → logprob: -16.125001907348633
    5. '_NODE' → logprob: -16.500001907348633
    6. '.node' → logprob: -17.625001907348633
    7. 'new' → logprob: -18.000001907348633
    8. 'Node' → logprob: -18.000001907348633
    9. '_' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.750001907348633

Token 409: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -13.000004768371582
    3. '.parent' → logprob: -13.000004768371582
    4. ' .' → logprob: -14.875004768371582
    5. 'key' → logprob: -16.3750057220459
    6. '
' → logprob: -17.8750057220459
    7. '.left' → logprob: -18.3750057220459
    8. ' key' → logprob: -18.7500057220459
    9. '.Key' → logprob: -19.0000057220459
    10. '   ' → logprob: -19.2500057220459

Token 410: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.016037069261074066
    2. '<' → logprob: -4.1410369873046875
    3. ' >' → logprob: -13.641036987304688
    4. ' ' → logprob: -13.641036987304688
    5. '>' → logprob: -16.016036987304688
    6. ' ' → logprob: -17.016036987304688
    7. ')' → logprob: -17.578536987304688
    8. '＜' → logprob: -17.641036987304688
    9. ' <=' → logprob: -17.703536987304688
    10. '<class' → logprob: -17.766036987304688

Token 411: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.023245595395565033
    2. ' parent' → logprob: -3.7732455730438232
    3. '	parent' → logprob: -16.898244857788086
    4. '(parent' → logprob: -17.023244857788086
    5. '   ' → logprob: -17.523244857788086
    6. '[parent' → logprob: -17.898244857788086
    7. '.parent' → logprob: -18.523244857788086
    8. ' ' → logprob: -19.898244857788086
    9. '_parent' → logprob: -19.898244857788086
    10. ',parent' → logprob: -21.023244857788086

Token 412: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -3.607391408877447e-05
    2. '.' → logprob: -10.250036239624023
    3. '.left' → logprob: -14.625036239624023
    4. ' .' → logprob: -16.125036239624023
    5. 'key' → logprob: -16.875036239624023
    6. '.right' → logprob: -17.750036239624023
    7. '.Key' → logprob: -18.500036239624023
    8. '[key' → logprob: -19.000036239624023
    9. '.
' → logprob: -19.375036239624023
    10. '.parent' → logprob: -19.375036239624023

Token 413: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20229724049568176
    2. ':' → logprob: -1.7022972106933594
    3. '       ' → logprob: -7.202297210693359
    4. '   ' → logprob: -10.07729721069336
    5. '):
' → logprob: -10.20229721069336
    6. ':
' → logprob: -11.07729721069336
    7. ' :
' → logprob: -11.20229721069336
    8. '.parent' → logprob: -11.20229721069336
    9. 'parent' → logprob: -12.20229721069336
    10. ' :' → logprob: -12.82729721069336

Token 414: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004226916469633579
    2. ' parent' → logprob: -6.2542266845703125
    3. '
' → logprob: -6.3792266845703125
    4. 'parent' → logprob: -7.7542266845703125
    5. '   ' → logprob: -9.254226684570312
    6. ':
' → logprob: -10.879226684570312
    7. '(parent' → logprob: -11.379226684570312
    8. '        
' → logprob: -11.754226684570312
    9. '	parent' → logprob: -12.004226684570312
    10. '.parent' → logprob: -12.254226684570312

Token 415: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.6965599656105042
    2. ' parent' → logprob: -0.6965599656105042
    3. '       ' → logprob: -5.696559906005859
    4. '   ' → logprob: -10.69655990600586
    5. '	parent' → logprob: -11.44655990600586
    6. '.parent' → logprob: -11.94655990600586
    7. '(parent' → logprob: -12.57155990600586
    8. ' parent's' → logprob: -12.94655990600586
    9. '_parent' → logprob: -13.44655990600586
    10. '[parent' → logprob: -14.32155990600586

Token 416: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.250004768371582
    3. ' .' → logprob: -16.0000057220459
    4. '.Left' → logprob: -16.5000057220459
    5. '.right' → logprob: -16.5000057220459
    6. '.le' → logprob: -18.2500057220459
    7. '.child' → logprob: -18.3750057220459
    8. '.parent' → logprob: -18.8750057220459
    9. '.next' → logprob: -19.3750057220459
    10. 'left' → logprob: -19.5000057220459

Token 417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692999839782715
    2. ' =' → logprob: -2.126929998397827
    3. '=new' → logprob: -13.376930236816406
    4. '＝' → logprob: -15.126930236816406
    5. 'new' → logprob: -17.001930236816406
    6. '=
' → logprob: -17.126930236816406
    7. ' =
' → logprob: -18.126930236816406
    8. ' new' → logprob: -18.251930236816406
    9. ' ' → logprob: -18.501930236816406
    10. '=node' → logprob: -18.626930236816406

Token 418: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.2519311308860779
    2. ' new' → logprob: -1.5019311904907227
    3. '   ' → logprob: -13.751931190490723
    4. '	new' → logprob: -14.751931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '新' → logprob: -16.251930236816406
    7. 'ne' → logprob: -17.001930236816406
    8. ' ' → logprob: -17.126930236816406
    9. 'New' → logprob: -17.501930236816406
    10. '  ' → logprob: -17.501930236816406

Token 419: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.7835754988482222e-05
    2. 'node' → logprob: -11.125018119812012
    3. '_' → logprob: -13.125018119812012
    4. ' node' → logprob: -14.625018119812012
    5. '_key' → logprob: -16.000017166137695
    6. '_NODE' → logprob: -16.125017166137695
    7. ' _' → logprob: -16.375017166137695
    8. 'new' → logprob: -16.375017166137695
    9. 'Node' → logprob: -16.500017166137695
    10. '   ' → logprob: -17.125017166137695

Token 420: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08690689504146576
    2. 'else' → logprob: -2.711906909942627
    3. ' else' → logprob: -4.086906909942627
    4. '	else' → logprob: -10.836906433105469
    5. '
' → logprob: -11.961906433105469
    6. 'elif' → logprob: -12.461906433105469
    7. '    
' → logprob: -12.461906433105469
    8. '_else' → logprob: -14.586906433105469
    9. '```' → logprob: -15.086906433105469
    10. '.' → logprob: -15.086906433105469

Token 421: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052487123757600784
    2. 'else' → logprob: -3.0524871349334717
    3. ' else' → logprob: -5.552486896514893
    4. '	else' → logprob: -11.17748737335205
    5. '   ' → logprob: -16.427486419677734
    6. 'elif' → logprob: -16.677486419677734
    7. '```' → logprob: -16.677486419677734
    8. '    
' → logprob: -17.302486419677734
    9. '_else' → logprob: -17.302486419677734
    10. ')' → logprob: -17.427486419677734

Token 422: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8693811297416687
    2. 'else' (adapté à ' else') → logprob: -1.1193811893463135
    3. ' else' → logprob: -1.3693811893463135
    4. '	else' → logprob: -10.119380950927734
    5. '_else' → logprob: -14.119380950927734
    6. 'elif' → logprob: -14.994380950927734
    7. '  ' → logprob: -15.244380950927734
    8. ' ' → logprob: -15.244380950927734
    9. '```' → logprob: -15.369380950927734
    10. '    ' → logprob: -15.494380950927734

Token 423: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30075448751449585
    2. ':' → logprob: -1.5507545471191406
    3. ':
' → logprob: -3.0507545471191406
    4. '.parent' → logprob: -8.92575454711914
    5. '   ' → logprob: -10.05075454711914
    6. ' :
' → logprob: -10.17575454711914
    7. ' :' → logprob: -10.30075454711914
    8. ' parent' → logprob: -10.42575454711914
    9. '.' → logprob: -10.67575454711914
    10. ' parent's' → logprob: -12.05075454711914

Token 424: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05359616130590439
    2. ' parent' → logprob: -3.053596258163452
    3. 'parent' → logprob: -5.303596019744873
    4. '   ' → logprob: -11.678596496582031
    5. '	parent' → logprob: -12.053596496582031
    6. '.parent' → logprob: -12.303596496582031
    7. '(parent' → logprob: -13.553596496582031
    8. ' parent's' → logprob: -14.553596496582031
    9. '[parent' → logprob: -14.553596496582031
    10. ',parent' → logprob: -14.803596496582031

Token 425: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.4740902781486511
    2. ' parent' → logprob: -0.9740902781486511
    3. '       ' → logprob: -11.474090576171875
    4. '	parent' → logprob: -13.224090576171875
    5. '.parent' → logprob: -14.724090576171875
    6. '   ' → logprob: -14.724090576171875
    7. ' parent's' → logprob: -15.724090576171875
    8. '(parent' → logprob: -16.724090576171875
    9. '[parent' → logprob: -17.099090576171875
    10. '_parent' → logprob: -17.724090576171875

Token 426: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.011063028126955032
    2. '.' → logprob: -4.511063098907471
    3. ' .' → logprob: -11.261062622070312
    4. '.left' → logprob: -13.136062622070312
    5. '.Right' → logprob: -15.761062622070312
    6. 'right' → logprob: -16.761062622070312
    7. '.key' → logprob: -17.011062622070312
    8. '.r' → logprob: -17.136062622070312
    9. '.next' → logprob: -17.886062622070312
    10. '.
' → logprob: -17.886062622070312

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861468818038702
    2. ' =' → logprob: -4.758614540100098
    3. '=new' → logprob: -16.008615493774414
    4. '＝' → logprob: -18.508615493774414
    5. '=
' → logprob: -20.383615493774414
    6. '.=' → logprob: -20.758615493774414
    7. 'new' → logprob: -20.758615493774414
    8. ' ' → logprob: -21.508615493774414
    9. ' new' → logprob: -21.508615493774414
    10. '   ' → logprob: -22.008615493774414

Token 428: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.02054574340581894
    2. ' new' → logprob: -3.895545721054077
    3. '   ' → logprob: -13.145545959472656
    4. '	new' → logprob: -13.895545959472656
    5. ' ' → logprob: -14.395545959472656
    6. '  ' → logprob: -15.770545959472656
    7. '    ' → logprob: -16.395545959472656
    8. '       ' → logprob: -16.770545959472656
    9. '新' → logprob: -17.270545959472656
    10. '     ' → logprob: -17.770545959472656

Token 429: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00035060103982686996
    2. 'node' → logprob: -8.000350952148438
    3. ' node' → logprob: -11.875350952148438
    4. 'new' → logprob: -12.000350952148438
    5. '_' → logprob: -14.375350952148438
    6. ' new' → logprob: -14.625350952148438
    7. 'Node' → logprob: -15.000350952148438
    8. ' _' → logprob: -15.500350952148438
    9. '.node' → logprob: -16.125350952148438
    10. '_new' → logprob: -16.250350952148438

Token 430: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03996086120605469
    2. '
' → logprob: -3.4149608612060547
    3. '<|end|>' → logprob: -5.414960861206055
    4. ' 
' → logprob: -7.789960861206055
    5. '

' → logprob: -8.039960861206055
    6. '  
' → logprob: -8.664960861206055
    7. 'return' → logprob: -9.039960861206055
    8. '#' → logprob: -9.039960861206055
    9. '```' → logprob: -9.164960861206055
    10. ')' → logprob: -9.414960861206055

Token 431: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017342021455988288
    2. 'if' → logprob: -6.501734256744385
    3. 'while' → logprob: -9.126733779907227
    4. 'root' → logprob: -9.751733779907227
    5. 'for' → logprob: -10.251733779907227
    6. '#' → logprob: -11.876733779907227
    7. '
' → logprob: -12.376733779907227
    8. '```' → logprob: -12.376733779907227
    9. '    
' → logprob: -13.126733779907227
    10. '   ' → logprob: -13.376733779907227

Token 432: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.11770273000001907
    2. 'find' → logprob: -2.8677027225494385
    3. ' search' → logprob: -3.6177027225494385
    4. 'search' → logprob: -4.242702960968018
    5. ' main' → logprob: -4.617702960968018
    6. 'main' → logprob: -5.867702960968018
    7. 'def' → logprob: -9.24270248413086
    8. ' ' → logprob: -9.49270248413086
    9. ' tree' → logprob: -10.99270248413086
    10. ' def' → logprob: -10.99270248413086

Token 433: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.1220274418592453
    2. '(node' → logprob: -2.7470273971557617
    3. '(tree' → logprob: -3.2470273971557617
    4. '(root' → logprob: -4.872027397155762
    5. '(target' → logprob: -5.497027397155762
    6. '(' → logprob: -10.622027397155762
    7. '(new' → logprob: -10.997027397155762
    8. '(x' → logprob: -10.997027397155762
    9. '(current' → logprob: -11.122027397155762
    10. ' (' → logprob: -11.872027397155762

Token 434: ')->' (ID: 9079)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008182040764950216
    2. ')' → logprob: -7.375818252563477
    3. ',' → logprob: -8.625818252563477
    4. ' :' → logprob: -12.375818252563477
    5. '):' → logprob: -12.625818252563477
    6. ':key' → logprob: -13.000818252563477
    7. 'key' → logprob: -14.500818252563477
    8. '(key' → logprob: -14.625818252563477
    9. '   ' → logprob: -14.875818252563477
    10. '(root' → logprob: -15.500818252563477

Token 435: ' bool' (ID: 3792)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.0008847765857353806
    2. ' Node' → logprob: -7.250885009765625
    3. 'Optional' → logprob: -9.000885009765625
    4. 'None' → logprob: -10.000885009765625
    5. 'bool' → logprob: -12.375885009765625
    6. '(Node' → logprob: -14.000885009765625
    7. '	Node' → logprob: -14.625885009765625
    8. ' Optional' → logprob: -16.125885009765625
    9. '_Node' → logprob: -16.125885009765625
    10. '<Node' → logprob: -16.250885009765625

Token 436: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004624749533832073
    2. ':
' → logprob: -5.379624843597412
    3. ' :' → logprob: -13.129624366760254
    4. '   ' → logprob: -13.879624366760254
    5. ':def' → logprob: -14.254624366760254
    6. ':
' → logprob: -15.004624366760254
    7. '->' → logprob: -15.129624366760254
    8. ':

' → logprob: -16.12962532043457
    9. ':int' → logprob: -16.50462532043457
    10. ' :
' → logprob: -16.75462532043457

Token 437: '   ' (ID: 271)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.40539202094078064
    2. '   ' → logprob: -1.155392050743103
    3. ' global' → logprob: -4.405392169952393
    4. '
' → logprob: -5.905392169952393
    5. 'tmp' → logprob: -6.280392169952393
    6. 'node' → logprob: -7.280392169952393
    7. '#' → logprob: -7.780392169952393
    8. 'key' → logprob: -9.655391693115234
    9. ' ' → logprob: -9.780391693115234
    10. '    
' → logprob: -10.030391693115234

Token 438: ' global' (ID: 5466)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.20628291368484497
    2. 'global' (adapté à ' global') → logprob: -1.7062828540802002
    3. 'current' → logprob: -5.956283092498779
    4. 'node' → logprob: -6.956283092498779
    5. ' global' → logprob: -7.331283092498779
    6. ' tmp' → logprob: -8.081282615661621
    7. '   ' → logprob: -9.081282615661621
    8. '#' → logprob: -9.706282615661621
    9. 'temp' → logprob: -9.831282615661621
    10. 'cur' → logprob: -10.331282615661621

Token 439: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.31326377391815186
    2. ' root' → logprob: -1.3132637739181519
    3. '   ' → logprob: -13.813263893127441
    4. ' ' → logprob: -14.313263893127441
    5. '	root' → logprob: -15.688263893127441
    6. '
' → logprob: -15.813263893127441
    7. '_root' → logprob: -16.688262939453125
    8. '(root' → logprob: -17.188262939453125
    9. '=root' → logprob: -18.188262939453125
    10. '[root' → logprob: -18.188262939453125

Token 440: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09377039223909378
    2. '
' → logprob: -2.4687705039978027
    3. 'tmp' → logprob: -6.218770503997803
    4. '    
' → logprob: -6.468770503997803
    5. ' tmp' → logprob: -6.843770503997803
    6. '

' → logprob: -9.718770027160645
    7. '
' → logprob: -9.843770027160645
    8. ' 
' → logprob: -10.343770027160645
    9. '  
' → logprob: -10.968770027160645
    10. '	tmp' → logprob: -11.093770027160645

Token 441: '   ' (ID: 271)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.1637970209121704
    2. '   ' → logprob: -2.038796901702881
    3. ' tmp' → logprob: -4.038796901702881
    4. 'node' → logprob: -6.038796901702881
    5. '
' → logprob: -8.288797378540039
    6. 'temp' → logprob: -8.538797378540039
    7. ' node' → logprob: -8.663797378540039
    8. 'current' → logprob: -9.163797378540039
    9. ' current' → logprob: -10.038797378540039
    10. '    
' → logprob: -10.163797378540039

Token 442: ' #' (ID: 1069)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.010753614827990532
    2. 'node' → logprob: -5.135753631591797
    3. 'current' → logprob: -5.635753631591797
    4. 'cur' → logprob: -7.635753631591797
    5. 'curr' → logprob: -8.010753631591797
    6. ' tmp' → logprob: -8.635753631591797
    7. 'temp' → logprob: -8.885753631591797
    8. 'tree' → logprob: -10.010753631591797
    9. 'target' → logprob: -11.010753631591797
    10. 'ptr' → logprob: -11.260753631591797

Token 443: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.02325037121772766
    2. 'node' → logprob: -4.398250579833984
    3. 'current' → logprob: -5.773250579833984
    4. 'cur' → logprob: -5.898250579833984
    5. ' tmp' → logprob: -6.523250579833984
    6. 'curr' → logprob: -6.648250579833984
    7. 'tree' → logprob: -7.773250579833984
    8. 'temp' → logprob: -7.898250579833984
    9. 'target' → logprob: -8.023250579833984
    10. 'x' → logprob: -8.023250579833984

Token 444: 'に' (ID: 5280)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160235196352005
    2. '=' → logprob: -1.9102351665496826
    3. '=root' → logprob: -11.785235404968262
    4. ' ' → logprob: -13.035235404968262
    5. '＝' → logprob: -15.035235404968262
    6. '   ' → logprob: -15.410235404968262
    7. ':' → logprob: -15.660235404968262
    8. ',' → logprob: -16.285234451293945
    9. '=
' → logprob: -16.410234451293945
    10. ' =
' → logprob: -16.660234451293945

Token 445: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0004309076175559312
    2. ' root' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.750431060791016
    4. '	root' → logprob: -17.000431060791016
    5. '=root' → logprob: -17.625431060791016
    6. '
' → logprob: -17.750431060791016
    7. '(root' → logprob: -18.125431060791016
    8. '_root' → logprob: -18.375431060791016
    9. '[root' → logprob: -19.500431060791016
    10. ' ' → logprob: -20.000431060791016

Token 446: 'を' (ID: 7277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22553879022598267
    2. '=' → logprob: -1.600538730621338
    3. '=root' → logprob: -9.100539207458496
    4. '   ' → logprob: -12.475539207458496
    5. ' ' → logprob: -12.850539207458496
    6. '=
' → logprob: -13.475539207458496
    7. 'を' → logprob: -13.600539207458496
    8. 'root' → logprob: -14.225539207458496
    9. '=node' → logprob: -14.225539207458496
    10. '＝' → logprob: -14.350539207458496

Token 447: '設定' (ID: 157652)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -3.547789674485102e-05
    2. ' root' → logprob: -10.250035285949707
    3. '=root' → logprob: -17.500036239624023
    4. '(root' → logprob: -18.250036239624023
    5. '
' → logprob: -18.500036239624023
    6. 'r' → logprob: -19.250036239624023
    7. '	root' → logprob: -19.500036239624023
    8. '_root' → logprob: -19.625036239624023
    9. '   ' → logprob: -20.125036239624023
    10. '.root' → logprob: -20.500036239624023

Token 448: 'する' (ID: 39065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009046572260558605
    2. '=' → logprob: -5.63404655456543
    3. ' =' → logprob: -5.88404655456543
    4. 'tmp' → logprob: -6.25904655456543
    5. ' tmp' → logprob: -7.75904655456543
    6. 'root' → logprob: -9.25904655456543
    7. '=root' → logprob: -9.63404655456543
    8. ' root' → logprob: -9.88404655456543
    9. 'def' → logprob: -10.38404655456543
    10. '(root' → logprob: -11.13404655456543

Token 449: '。
' (ID: 3414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015850765630602837
    2. 'tmp' → logprob: -4.26585054397583
    3. ' tmp' → logprob: -6.89085054397583
    4. '
' → logprob: -7.51585054397583
    5. '    
' → logprob: -9.390851020812988
    6. '	tmp' → logprob: -10.515851020812988
    7. '
' → logprob: -13.015851020812988
    8. ' ' → logprob: -13.140851020812988
    9. ' =' → logprob: -13.390851020812988
    10. '=' → logprob: -13.390851020812988

Token 450: '   ' (ID: 271)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.20948664844036102
    2. '   ' → logprob: -1.7094866037368774
    3. ' tmp' → logprob: -4.834486484527588
    4. '	tmp' → logprob: -9.959486961364746
    5. 'node' → logprob: -10.709486961364746
    6. 'temp' → logprob: -12.334486961364746
    7. 'current' → logprob: -12.334486961364746
    8. '```' → logprob: -12.584486961364746
    9. '    
' → logprob: -12.959486961364746
    10. ' ' → logprob: -13.334486961364746

Token 451: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.00012451570364646614
    2. ' tmp' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.37512493133545
    4. 'node' → logprob: -15.37512493133545
    5. 'root' → logprob: -16.250123977661133
    6. 'temp' → logprob: -16.375123977661133
    7. '	tmp' → logprob: -17.750123977661133
    8. '
' → logprob: -18.250123977661133
    9. '```' → logprob: -18.750123977661133
    10. 't' → logprob: -18.875123977661133

Token 452: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410619258880615
    2. '=' → logprob: -0.9741061925888062
    3. '=root' → logprob: -10.474105834960938
    4. ' ' → logprob: -14.474105834960938
    5. '=
' → logprob: -15.599105834960938
    6. ' =
' → logprob: -16.724105834960938
    7. '＝' → logprob: -17.099105834960938
    8. '   ' → logprob: -17.724105834960938
    9. ' root' → logprob: -18.224105834960938
    10. ':' → logprob: -18.349105834960938

Token 453: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.31326571106910706
    2. ' root' → logprob: -1.3132656812667847
    3. '	root' → logprob: -13.563265800476074
    4. '(root' → logprob: -14.313265800476074
    5. ' ' → logprob: -14.688265800476074
    6. '   ' → logprob: -14.813265800476074
    7. '
' → logprob: -15.188265800476074
    8. '_root' → logprob: -15.438265800476074
    9. '[root' → logprob: -15.438265800476074
    10. '=root' → logprob: -15.688265800476074

Token 454: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20908060669898987
    2. 'while' → logprob: -2.209080696105957
    3. '
' → logprob: -3.209080696105957
    4. '    
' → logprob: -3.459080696105957
    5. ' while' → logprob: -5.084080696105957
    6. '	while' → logprob: -7.959080696105957
    7. '<|end|>' → logprob: -8.459080696105957
    8. '   
' → logprob: -9.084080696105957
    9. '  
' → logprob: -9.584080696105957
    10. ' 
' → logprob: -11.209080696105957

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06613807380199432
    2. 'while' → logprob: -3.1911380290985107
    3. ' while' → logprob: -4.69113826751709
    4. '
' → logprob: -4.69113826751709
    5. '    
' → logprob: -5.44113826751709
    6. '	while' → logprob: -9.06613826751709
    7. ' 
' → logprob: -10.94113826751709
    8. '   
' → logprob: -11.06613826751709
    9. '```' → logprob: -11.19113826751709
    10. '  
' → logprob: -11.81613826751709

Token 456: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -4.4849443838757e-06
    2. '   ' → logprob: -13.000004768371582
    3. ' while' → logprob: -13.125004768371582
    4. '	while' → logprob: -15.750004768371582
    5. 'While' → logprob: -18.500003814697266
    6. '```' → logprob: -18.500003814697266
    7. '
' → logprob: -18.500003814697266
    8. '    
' → logprob: -20.750003814697266
    9. 'if' → logprob: -20.875003814697266
    10. 'wh' → logprob: -21.125003814697266

Token 457: ' new' (ID: 620)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.165027217415627e-05
    2. ' while' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.50002098083496
    4. '
' → logprob: -18.12502098083496
    5. '	while' → logprob: -18.25002098083496
    6. 'While' → logprob: -18.62502098083496
    7. '```' → logprob: -19.75002098083496
    8. 'wh' → logprob: -19.87502098083496
    9. 'w' → logprob: -21.37502098083496
    10. 'return' → logprob: -22.87502098083496

Token 458: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.07883086055517197
    2. '_key' → logprob: -2.7038309574127197
    3. '   ' → logprob: -5.453830718994141
    4. 'node' → logprob: -6.328830718994141
    5. 'key' → logprob: -7.828830718994141
    6. ' =' → logprob: -7.828830718994141
    7. 'while' → logprob: -7.953830718994141
    8. '
' → logprob: -8.07883071899414
    9. '_' → logprob: -8.32883071899414
    10. '_token' → logprob: -8.82883071899414

Token 459: 'を' (ID: 7277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9552814960479736
    2. '=' → logprob: -1.2052814960479736
    3. 'while' → logprob: -1.7052814960479736
    4. 'key' → logprob: -3.3302814960479736
    5. ' while' → logprob: -3.7052814960479736
    6. '_key' → logprob: -4.0802812576293945
    7. 'を' → logprob: -4.2052812576293945
    8. ' is' → logprob: -4.5802812576293945
    9. 'の' → logprob: -4.9552812576293945
    10. ' key' → logprob: -5.3302812576293945

Token 460: '付' (ID: 20166)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9824073314666748
    2. 'key' → logprob: -1.3574073314666748
    3. ' None' → logprob: -2.232407331466675
    4. 'tmp' → logprob: -2.232407331466675
    5. 'while' → logprob: -2.482407331466675
    6. ' key' → logprob: -3.107407331466675
    7. ' tmp' → logprob: -4.732407569885254
    8. ' while' → logprob: -5.357407569885254
    9. 'new' → logprob: -6.357407569885254
    10. 'search' → logprob: -6.482407569885254

Token 461: 'け' (ID: 15707)
  Prédit: 'け'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'け' → logprob: -0.1408321112394333
    2. '   ' → logprob: -2.1408321857452393
    3. '       ' → logprob: -5.01583194732666
    4. '  ' → logprob: -6.26583194732666
    5. '    ' → logprob: -6.76583194732666
    6. '      ' → logprob: -6.76583194732666
    7. '
' → logprob: -7.14083194732666
    8. ' ' → logprob: -7.76583194732666
    9. '           ' → logprob: -7.76583194732666
    10. '     ' → logprob: -8.01583194732666

Token 462: '加' (ID: 9116)
  Prédit: '加'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '加' → logprob: -0.13404586911201477
    2. 'け' → logprob: -2.1340458393096924
    3. 'tmp' → logprob: -5.7590460777282715
    4. '   ' → logprob: -6.8840460777282715
    5. 'key' → logprob: -7.5090460777282715
    6. 'き' → logprob: -7.6340460777282715
    7. ' ' → logprob: -8.259045600891113
    8. 'add' → logprob: -8.384045600891113
    9. '_key' → logprob: -8.759045600891113
    10. '```' → logprob: -8.884045600891113

Token 463: 'える' (ID: 133169)
  Prédit: '加'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '加' → logprob: -0.4570707380771637
    2. 'け' → logprob: -1.0820707082748413
    3. 'tmp' → logprob: -4.207070827484131
    4. '   ' → logprob: -5.582070827484131
    5. 'る' → logprob: -5.957070827484131
    6. ' ' → logprob: -6.457070827484131
    7. '(tmp' → logprob: -6.707070827484131
    8. '```' → logprob: -7.082070827484131
    9. '  ' → logprob: -7.332070827484131
    10. '_' → logprob: -7.957070827484131

Token 464: '節' (ID: 89129)
  Prédit: '節'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '節' → logprob: -0.20149579644203186
    2. 'while' → logprob: -1.9514957666397095
    3. '   ' → logprob: -4.07649564743042
    4. ' while' → logprob: -4.45149564743042
    5. 'node' → logprob: -5.45149564743042
    6. '探索' → logprob: -6.95149564743042
    7. ' node' → logprob: -7.20149564743042
    8. '#' → logprob: -7.20149564743042
    9. '```' → logprob: -7.20149564743042
    10. 'キー' → logprob: -7.32649564743042

Token 465: '(parent' (ID: 24729)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.39295750856399536
    2. '=' → logprob: -2.3929574489593506
    3. 'の' → logprob: -2.3929574489593506
    4. ' =' → logprob: -2.8929574489593506
    5. '   ' → logprob: -3.2679574489593506
    6. 'while' → logprob: -3.8929574489593506
    7. 'が' → logprob: -4.51795768737793
    8. ' is' → logprob: -6.01795768737793
    9. ' を' → logprob: -6.01795768737793
    10. 'は' → logprob: -6.14295768737793

Token 466: ')' (ID: 8)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9454712271690369
    2. ' =' → logprob: -0.9454712271690369
    3. ')' → logprob: -2.3204712867736816
    4. 'を' → logprob: -2.8204712867736816
    5. 'の' → logprob: -3.6954712867736816
    6. '   ' → logprob: -4.320471286773682
    7. 'while' → logprob: -5.070471286773682
    8. ' is' → logprob: -5.445471286773682
    9. ' を' → logprob: -5.945471286773682
    10. '）' → logprob: -6.320471286773682

Token 467: 'を' (ID: 7277)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.18517883121967316
    2. '   ' → logprob: -2.310178756713867
    3. ' while' → logprob: -3.310178756713867
    4. '=' → logprob: -3.810178756713867
    5. 'を' → logprob: -5.435178756713867
    6. ' =' → logprob: -5.685178756713867
    7. '
' → logprob: -7.060178756713867
    8. '#' → logprob: -7.310178756713867
    9. 'の' → logprob: -7.310178756713867
    10. '	while' → logprob: -8.060178756713867

Token 468: '探索' (ID: 191406)
  Prédit: '探索'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '探索' → logprob: -0.4772748649120331
    2. 'while' → logprob: -1.6022748947143555
    3. 'None' → logprob: -2.1022748947143555
    4. ' None' → logprob: -3.8522748947143555
    5. '探' → logprob: -4.4772748947143555
    6. 'search' → logprob: -4.8522748947143555
    7. 'tmp' → logprob: -5.3522748947143555
    8. ' while' → logprob: -5.3522748947143555
    9. '検索' → logprob: -5.6022748947143555
    10. '```' → logprob: -7.4772748947143555

Token 469: 'する' (ID: 39065)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042897552251815796
    2. 'する' → logprob: -4.042897701263428
    3. 'while' → logprob: -4.292897701263428
    4. ' while' → logprob: -5.167897701263428
    5. 'を' → logprob: -6.417897701263428
    6. 'の' → logprob: -6.542897701263428
    7. 'し' → logprob: -7.417897701263428
    8. ' ' → logprob: -8.54289722442627
    9. 'して' → logprob: -8.79289722442627
    10. '(' → logprob: -9.04289722442627

Token 470: '。
' (ID: 3414)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12387214601039886
    2. 'while' → logprob: -2.6238720417022705
    3. ' while' → logprob: -3.2488720417022705
    4. '.' → logprob: -5.62387228012085
    5. ':' → logprob: -7.62387228012085
    6. '
' → logprob: -8.373871803283691
    7. '	while' → logprob: -8.373871803283691
    8. '    
' → logprob: -8.748871803283691
    9. ',' → logprob: -8.873871803283691
    10. '=' → logprob: -9.498871803283691

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9391204118728638
    2. 'while' → logprob: -1.1891204118728638
    3. ' while' → logprob: -1.1891204118728638
    4. '	while' → logprob: -10.064120292663574
    5. '
' → logprob: -12.689120292663574
    6. 'While' → logprob: -13.439120292663574
    7. '    
' → logprob: -13.689120292663574
    8. 'w' → logprob: -14.189120292663574
    9. '```' → logprob: -14.939120292663574
    10. '   ' → logprob: -15.064120292663574

Token 472: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0105288065969944
    2. ' while' → logprob: -4.760529041290283
    3. '   ' → logprob: -6.260529041290283
    4. '	while' → logprob: -13.635528564453125
    5. '```' → logprob: -14.760528564453125
    6. 'wh' → logprob: -16.135528564453125
    7. 'While' → logprob: -16.135528564453125
    8. 'w' → logprob: -16.260528564453125
    9. ' ' → logprob: -16.260528564453125
    10. '  ' → logprob: -16.635528564453125

Token 473: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.12694522738456726
    2. ' tmp' → logprob: -2.1269452571868896
    3. '(tmp' → logprob: -11.501945495605469
    4. '	tmp' → logprob: -12.251945495605469
    5. '/tmp' → logprob: -14.501945495605469
    6. '$tmp' → logprob: -14.501945495605469
    7. 'Tmp' → logprob: -14.876945495605469
    8. 'temp' → logprob: -15.001945495605469
    9. '_tmp' → logprob: -15.126945495605469
    10. '[tmp' → logprob: -15.376945495605469

Token 474: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0076081594452261925
    2. 'is' → logprob: -4.882607936859131
    3. ' ' → logprob: -13.757608413696289
    4. ' and' → logprob: -15.132608413696289
    5. 'and' → logprob: -15.382608413696289
    6. '	is' → logprob: -15.632608413696289
    7. 's' → logprob: -16.38260841369629
    8. ')' → logprob: -16.75760841369629
    9. 'は' → logprob: -16.75760841369629
    10. ' i' → logprob: -17.25760841369629

Token 475: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.17975875735282898
    2. 'not' → logprob: -1.8047587871551514
    3. '	not' → logprob: -12.67975902557373
    4. 'Not' → logprob: -12.80475902557373
    5. '_not' → logprob: -13.67975902557373
    6. '   ' → logprob: -13.80475902557373
    7. ' ' → logprob: -13.92975902557373
    8. '    ' → logprob: -14.17975902557373
    9. 'None' → logprob: -14.42975902557373
    10. '
' → logprob: -14.55475902557373

Token 476: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.036866795271635056
    2. 'not' → logprob: -3.6618669033050537
    3. ' None' → logprob: -4.911866664886475
    4. ' not' → logprob: -5.786866664886475
    5. '(None' → logprob: -10.036867141723633
    6. 'root' → logprob: -11.911867141723633
    7. '   ' → logprob: -12.536867141723633
    8. '
' → logprob: -12.536867141723633
    9. 'none' → logprob: -12.536867141723633
    10. 'Not' → logprob: -12.786867141723633

Token 477: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8672479391098022
    2. ':' → logprob: -1.2422479391098022
    3. ':
' → logprob: -1.3672479391098022
    4. '   ' → logprob: -3.617248058319092
    5. 'and' → logprob: -5.367248058319092
    6. '       ' → logprob: -5.492248058319092
    7. '<|end|>' → logprob: -8.742247581481934
    8. '):
' → logprob: -8.867247581481934
    9. ',' → logprob: -9.242247581481934
    10. ' :
' → logprob: -9.492247581481934

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016545868711546063
    2. '   ' → logprob: -6.876654624938965
    3. ' if' → logprob: -7.501654624938965
    4. 'if' → logprob: -9.876654624938965
    5. '<|end|>' → logprob: -12.001654624938965
    6. '    ' → logprob: -12.376654624938965
    7. '      ' → logprob: -12.751654624938965
    8. '     ' → logprob: -13.876654624938965
    9. '```' → logprob: -14.126654624938965
    10. '
' → logprob: -14.126654624938965

Token 479: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5629972815513611
    2. ' if' → logprob: -1.6879973411560059
    3. 'if' (adapté à ' if') → logprob: -1.9379973411560059
    4. '       ' → logprob: -2.437997341156006
    5. ' ' → logprob: -4.687997341156006
    6. '  ' → logprob: -6.187997341156006
    7. '    ' → logprob: -6.562997341156006
    8. 't' → logprob: -7.062997341156006
    9. '<|end|>' → logprob: -8.687996864318848
    10. 'i' → logprob: -9.062996864318848

Token 480: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.1798497885465622
    2. ' key' → logprob: -2.179849863052368
    3. 'tmp' → logprob: -3.054849863052368
    4. ' tmp' → logprob: -5.429849624633789
    5. '	key' → logprob: -11.554849624633789
    6. ' ' → logprob: -12.179849624633789
    7. '	tmp' → logprob: -12.429849624633789
    8. '   ' → logprob: -13.054849624633789
    9. '(tmp' → logprob: -13.179849624633789
    10. 'temp' → logprob: -13.429849624633789

Token 481: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25232312083244324
    2. '==' → logprob: -1.5023231506347656
    3. ' <' → logprob: -8.502323150634766
    4. '=' → logprob: -8.752323150634766
    5. '<' → logprob: -11.127323150634766
    6. ' =' → logprob: -11.502323150634766
    7. ')==' → logprob: -13.252323150634766
    8. ' ' → logprob: -13.502323150634766
    9. '<|end|>' → logprob: -13.502323150634766
    10. ' >' → logprob: -14.252323150634766

Token 482: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.10020741820335388
    2. ' tmp' → logprob: -2.3502073287963867
    3. '	tmp' → logprob: -14.600207328796387
    4. 'temp' → logprob: -15.850207328796387
    5. '(tmp' → logprob: -16.475208282470703
    6. '/tmp' → logprob: -16.600208282470703
    7. '[tmp' → logprob: -17.350208282470703
    8. '   ' → logprob: -17.975208282470703
    9. '$tmp' → logprob: -17.975208282470703
    10. '       ' → logprob: -18.100208282470703

Token 483: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -7.52919222577475e-05
    2. '.' → logprob: -9.500075340270996
    3. ' .' → logprob: -14.875075340270996
    4. '.Key' → logprob: -17.62507438659668
    5. '.keys' → logprob: -18.25007438659668
    6. '.token' → logprob: -18.50007438659668
    7. '.value' → logprob: -19.75007438659668
    8. 'key' → logprob: -19.87507438659668
    9. '.user' → logprob: -20.12507438659668
    10. '.keyword' → logprob: -20.12507438659668

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09053114056587219
    2. ':
' → logprob: -2.46553111076355
    3. '           ' → logprob: -7.340531349182129
    4. ':return' → logprob: -7.465531349182129
    5. '       ' → logprob: -7.965531349182129
    6. ' :' → logprob: -12.465531349182129
    7. '   ' → logprob: -12.715531349182129
    8. '):
' → logprob: -13.215531349182129
    9. ' :
' → logprob: -13.340531349182129
    10. ':

' → logprob: -13.465531349182129

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007855626754462719
    2. '       ' → logprob: -5.507855415344238
    3. ' return' → logprob: -5.757855415344238
    4. 'return' → logprob: -8.632855415344238
    5. ':' → logprob: -8.757855415344238
    6. ':return' → logprob: -9.132855415344238
    7. '   ' → logprob: -10.132855415344238
    8. '               ' → logprob: -10.632855415344238
    9. ':
' → logprob: -11.007855415344238
    10. '
' → logprob: -11.132855415344238

Token 486: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28524914383888245
    2. '           ' → logprob: -1.78524911403656
    3. ' return' → logprob: -2.5352492332458496
    4. '       ' → logprob: -6.78524923324585
    5. '   ' → logprob: -11.535248756408691
    6. '               ' → logprob: -11.660248756408691
    7. '{return' → logprob: -11.910248756408691
    8. '	return' → logprob: -12.035248756408691
    9. ':return' → logprob: -12.160248756408691
    10. '
' → logprob: -13.285248756408691

Token 487: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868711292743683
    2. ' True' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.761871337890625
    4. ' ' → logprob: -17.886871337890625
    5. '(True' → logprob: -18.136871337890625
    6. '   ' → logprob: -18.761871337890625
    7. ' Tru' → logprob: -20.636871337890625
    8. '  ' → logprob: -20.636871337890625
    9. 'tmp' → logprob: -20.886871337890625
    10. 'true' → logprob: -21.136871337890625

Token 488: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2352385965641588e-05
    2. '        
' → logprob: -12.125012397766113
    3. '
' → logprob: -12.875012397766113
    4. '   ' → logprob: -13.500012397766113
    5. '<|end|>' → logprob: -14.125012397766113
    6. '      ' → logprob: -14.375012397766113
    7. '       
' → logprob: -15.625012397766113
    8. '	' → logprob: -15.625012397766113
    9. '           ' → logprob: -15.750012397766113
    10. 'elif' → logprob: -15.750012397766113

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.318681188422488e-05
    2. '        
' → logprob: -11.50001335144043
    3. '   ' → logprob: -14.25001335144043
    4. '
' → logprob: -14.37501335144043
    5. '      ' → logprob: -15.00001335144043
    6. '       
' → logprob: -15.62501335144043
    7. '	' → logprob: -15.75001335144043
    8. '  
' → logprob: -16.00001335144043
    9. ' 
' → logprob: -16.37501335144043
    10. '    
' → logprob: -16.50001335144043

Token 490: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4826567769050598
    2. ' elif' → logprob: -1.357656717300415
    3. 'elif' (adapté à ' elif') → logprob: -2.357656717300415
    4. ' ' → logprob: -3.982656717300415
    5. ' if' → logprob: -5.857656955718994
    6. '    ' → logprob: -6.232656955718994
    7. '        ' → logprob: -6.482656955718994
    8. ' 
' → logprob: -6.732656955718994
    9. 'if' → logprob: -6.857656955718994
    10. '   ' → logprob: -6.857656955718994

Token 491: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.1602276712656021
    2. 'key' → logprob: -1.910227656364441
    3. '	key' → logprob: -13.41022777557373
    4. ' ' → logprob: -13.53522777557373
    5. '   ' → logprob: -15.28522777557373
    6. 'tmp' → logprob: -16.285226821899414
    7. ' tmp' → logprob: -16.285226821899414
    8. '  ' → logprob: -16.910226821899414
    9. 'Key' → logprob: -17.035226821899414
    10. ' ' → logprob: -17.410226821899414

Token 492: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.001705175032839179
    2. '<' → logprob: -6.376705169677734
    3. ' ' → logprob: -12.876705169677734
    4. ' >' → logprob: -15.001705169677734
    5. '<|end|>' → logprob: -16.751705169677734
    6. ' <",' → logprob: -17.251705169677734
    7. ' ＜' → logprob: -17.251705169677734
    8. ' <
' → logprob: -17.751705169677734
    9. '＜' → logprob: -18.876705169677734
    10. '[' → logprob: -18.876705169677734

Token 493: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.3132646679878235
    2. 'tmp' → logprob: -1.3132646083831787
    3. '	tmp' → logprob: -13.063264846801758
    4. '/tmp' → logprob: -15.063264846801758
    5. '(tmp' → logprob: -15.688264846801758
    6. ' ' → logprob: -15.938264846801758
    7. '_tmp' → logprob: -15.938264846801758
    8. '$tmp' → logprob: -16.938264846801758
    9. '[tmp' → logprob: -16.938264846801758
    10. '   ' → logprob: -18.063264846801758

Token 494: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00015908108616713434
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -14.75015926361084
    4. 'key' → logprob: -16.125158309936523
    5. '.left' → logprob: -17.375158309936523
    6. '.right' → logprob: -18.000158309936523
    7. '.Key' → logprob: -19.125158309936523
    8. '.ke' → logprob: -19.375158309936523
    9. '.tmp' → logprob: -19.500158309936523
    10. '[key' → logprob: -19.500158309936523

Token 495: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8581016659736633
    2. ':
' → logprob: -0.9831016659736633
    3. '           ' → logprob: -1.6081016063690186
    4. '       ' → logprob: -6.733101844787598
    5. '=' → logprob: -9.483101844787598
    6. '):
' → logprob: -9.483101844787598
    7. ',' → logprob: -9.858101844787598
    8. '<|end|>' → logprob: -9.983101844787598
    9. ' :' → logprob: -10.233101844787598
    10. ' :
' → logprob: -10.358101844787598

Token 496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01119235809892416
    2. '
' → logprob: -4.636192321777344
    3. 'tmp' → logprob: -6.886192321777344
    4. ':
' → logprob: -8.761192321777344
    5. ' tmp' → logprob: -9.261192321777344
    6. '       ' → logprob: -9.261192321777344
    7. ':' → logprob: -10.761192321777344
    8. '            
' → logprob: -11.261192321777344
    9. '   ' → logprob: -12.511192321777344
    10. '
' → logprob: -12.886192321777344

Token 497: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.08290775865316391
    2. ' tmp' → logprob: -2.5829076766967773
    3. '           ' → logprob: -5.582907676696777
    4. '
' → logprob: -8.582907676696777
    5. '       ' → logprob: -10.082907676696777
    6. '	tmp' → logprob: -11.957907676696777
    7. '(tmp' → logprob: -12.832907676696777
    8. '_tmp' → logprob: -12.832907676696777
    9. '/tmp' → logprob: -13.332907676696777
    10. 'temp' → logprob: -13.582907676696777

Token 498: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693209946155548
    2. '=' → logprob: -2.126932144165039
    3. '.' → logprob: -13.751932144165039
    4. '.=' → logprob: -13.751932144165039
    5. ' =
' → logprob: -14.251932144165039
    6. '.left' → logprob: -14.501932144165039
    7. '=
' → logprob: -14.626932144165039
    8. '＝' → logprob: -15.751932144165039
    9. '.right' → logprob: -15.751932144165039
    10. ' ' → logprob: -16.75193214416504

Token 499: ' tmp' (ID: 8919)
  Prédit: ' tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tmp' → logprob: -0.4740828275680542
    2. 'tmp' → logprob: -0.9740828275680542
    3. '	tmp' → logprob: -12.599082946777344
    4. '(tmp' → logprob: -13.974082946777344
    5. '/tmp' → logprob: -14.224082946777344
    6. ' ' → logprob: -15.599082946777344
    7. '_tmp' → logprob: -15.599082946777344
    8. '[tmp' → logprob: -15.599082946777344
    9. '$tmp' → logprob: -15.724082946777344
    10. '.tmp' → logprob: -15.724082946777344

Token 500: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.570319702499546e-05
    2. '.' → logprob: -10.625025749206543
    3. ' .' → logprob: -13.875025749206543
    4. 'left' → logprob: -15.000025749206543
    5. '.right' → logprob: -17.375024795532227
    6. '.le' → logprob: -18.250024795532227
    7. '.Left' → logprob: -19.000024795532227
    8. ' left' → logprob: -19.375024795532227
    9. '[left' → logprob: -19.375024795532227
    10. '左' → logprob: -19.500024795532227

Token 501: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021622790955007076
    2. 'else' → logprob: -6.252162456512451
    3. ' else' → logprob: -8.377161979675293
    4. '	else' → logprob: -13.752161979675293
    5. '	' → logprob: -13.877161979675293
    6. '
' → logprob: -14.377161979675293
    7. 'elif' → logprob: -15.002161979675293
    8. '<|end|>' → logprob: -15.502161979675293
    9. '   ' → logprob: -15.752161979675293
    10. '```' → logprob: -16.00216293334961

Token 502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0249136071652174
    2. 'else' → logprob: -3.7749135494232178
    3. ' else' → logprob: -6.399913787841797
    4. '	else' → logprob: -12.649913787841797
    5. '	' → logprob: -14.274913787841797
    6. 'elif' → logprob: -15.149913787841797
    7. '```' → logprob: -15.524913787841797
    8. '   ' → logprob: -15.774913787841797
    9. '<|end|>' → logprob: -15.774913787841797
    10. '_else' → logprob: -16.024913787841797

Token 503: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.17188285291194916
    2. '       ' → logprob: -2.4218828678131104
    3. ' else' → logprob: -2.6718828678131104
    4. '	else' → logprob: -10.046882629394531
    5. '   ' → logprob: -13.921882629394531
    6. '	' → logprob: -14.421882629394531
    7. 'elif' → logprob: -15.046882629394531
    8. '_else' → logprob: -15.421882629394531
    9. '```' → logprob: -15.921882629394531
    10. '
' → logprob: -16.42188262939453

Token 504: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04100434109568596
    2. ':
' → logprob: -3.7910044193267822
    3. ':' → logprob: -4.041004180908203
    4. '       ' → logprob: -11.916004180908203
    5. '               ' → logprob: -12.166004180908203
    6. '          ' → logprob: -12.541004180908203
    7. '{
' → logprob: -13.666004180908203
    8. '   ' → logprob: -14.166004180908203
    9. ':
' → logprob: -14.166004180908203
    10. '         ' → logprob: -14.541004180908203

Token 505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21628572046756744
    2. 'tmp' → logprob: -1.7162857055664062
    3. ' tmp' → logprob: -4.216285705566406
    4. '
' → logprob: -12.841285705566406
    5. 'temp' → logprob: -13.091285705566406
    6. '               ' → logprob: -13.841285705566406
    7. '	tmp' → logprob: -14.216285705566406
    8. '       ' → logprob: -14.466285705566406
    9. '/tmp' → logprob: -14.466285705566406
    10. '   ' → logprob: -15.216285705566406

Token 506: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0009311101748608053
    2. ' tmp' → logprob: -7.000931262969971
    3. '           ' → logprob: -11.000930786132812
    4. 'temp' → logprob: -12.875930786132812
    5. '/tmp' → logprob: -15.750930786132812
    6. '	tmp' → logprob: -15.875930786132812
    7. '       ' → logprob: -17.625930786132812
    8. '   ' → logprob: -17.750930786132812
    9. '               ' → logprob: -18.000930786132812
    10. 'tmpl' → logprob: -18.125930786132812

Token 507: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38766756653785706
    2. '=' → logprob: -1.1376675367355347
    3. '.right' → logprob: -7.137667655944824
    4. '.' → logprob: -14.387667655944824
    5. '.=' → logprob: -15.387667655944824
    6. ' ' → logprob: -15.512667655944824
    7. '.key' → logprob: -15.637667655944824
    8. '＝' → logprob: -15.762667655944824
    9. 'right' → logprob: -16.262666702270508
    10. 'tmp' → logprob: -17.012666702270508

Token 508: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.12693418562412262
    2. ' tmp' → logprob: -2.126934289932251
    3. '	tmp' → logprob: -12.751934051513672
    4. '/tmp' → logprob: -13.376934051513672
    5. 'temp' → logprob: -14.376934051513672
    6. '(tmp' → logprob: -14.751934051513672
    7. '[tmp' → logprob: -15.501934051513672
    8. '$tmp' → logprob: -15.626934051513672
    9. '_tmp' → logprob: -16.251934051513672
    10. ' ' → logprob: -16.251934051513672

Token 509: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -12.000007629394531
    3. 'right' → logprob: -14.000007629394531
    4. ' .' → logprob: -14.500007629394531
    5. '.r' → logprob: -15.625007629394531
    6. '.left' → logprob: -16.50000762939453
    7. '[right' → logprob: -19.37500762939453
    8. '.Right' → logprob: -19.62500762939453
    9. ' ' → logprob: -20.50000762939453
    10. '	right' → logprob: -20.62500762939453

Token 510: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014992679934948683
    2. '<|end|>' → logprob: -6.626499176025391
    3. '    
' → logprob: -9.75149917602539
    4. 'return' → logprob: -9.87649917602539
    5. 'None' → logprob: -10.75149917602539
    6. ' return' → logprob: -11.50149917602539
    7. '<|end|>' → logprob: -12.25149917602539
    8. '
' → logprob: -12.25149917602539
    9. '       ' → logprob: -12.50149917602539
    10. ')' → logprob: -12.50149917602539

Token 511: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006408308399841189
    2. '   ' → logprob: -7.500640869140625
    3. ' return' → logprob: -9.375640869140625
    4. '	return' → logprob: -14.000640869140625
    5. '```' → logprob: -14.250640869140625
    6. 'None' → logprob: -14.750640869140625
    7. 'False' → logprob: -14.875640869140625
    8. '       ' → logprob: -15.375640869140625
    9. 'eturn' → logprob: -16.250640869140625
    10. ':return' → logprob: -16.500640869140625

Token 512: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -5.288163083605468e-05
    2. '   ' → logprob: -10.000052452087402
    3. ' return' → logprob: -11.875052452087402
    4. '	return' → logprob: -14.875052452087402
    5. '```' → logprob: -16.37505340576172
    6. 'def' → logprob: -17.87505340576172
    7. 'ret' → logprob: -18.12505340576172
    8. '       ' → logprob: -18.37505340576172
    9. 'eturn' → logprob: -18.37505340576172
    10. '    
' → logprob: -18.50005340576172

Token 513: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0024756586644798517
    2. ' False' → logprob: -6.002475738525391
    3. '(False' → logprob: -19.87747573852539
    4. 'None' → logprob: -21.50247573852539
    5. 'false' → logprob: -22.37747573852539
    6. 'F' → logprob: -23.25247573852539
    7. 'True' → logprob: -23.62747573852539
    8. '_false' → logprob: -23.87747573852539
    9. '=False' → logprob: -24.37747573852539
    10. 'FALSE' → logprob: -25.00247573852539

Token 514: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 515: 'root' (ID: 5488)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6843236088752747
    2. 'def' → logprob: -1.4343235492706299
    3. 'root' → logprob: -1.5593235492706299
    4. 'n' → logprob: -3.80932354927063
    5. '#' → logprob: -4.434323787689209
    6. 'i' → logprob: -5.434323787689209
    7. 'while' → logprob: -5.684323787689209
    8. 'for' → logprob: -6.684323787689209
    9. 'r' → logprob: -7.434323787689209
    10. 't' → logprob: -7.434323787689209

Token 516: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931529641151428
    2. ' =' → logprob: -0.6931529641151428
    3. '=None' → logprob: -12.318153381347656
    4. ' ' → logprob: -14.068153381347656
    5. '=root' → logprob: -16.443153381347656
    6. ' None' → logprob: -16.693153381347656
    7. '=

' → logprob: -16.818153381347656
    8. '＝' → logprob: -17.193153381347656
    9. 'None' → logprob: -17.443153381347656
    10. ':' → logprob: -17.443153381347656

Token 517: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001234428636962548
    2. ' None' → logprob: -9.000123023986816
    3. '   ' → logprob: -20.625123977661133
    4. 'No' → logprob: -20.625123977661133
    5. '_None' → logprob: -20.625123977661133
    6. '(None' → logprob: -20.750123977661133
    7. 'none' → logprob: -21.000123977661133
    8. 'Node' → logprob: -21.250123977661133
    9. '0' → logprob: -21.500123977661133
    10. '=None' → logprob: -21.875123977661133

Token 518: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.027760202065110207
    2. 'for' → logprob: -4.277760028839111
    3. 'n' → logprob: -4.777760028839111
    4. 'if' → logprob: -5.652760028839111
    5. 'def' → logprob: -7.527760028839111
    6. ' while' → logprob: -7.652760028839111
    7. 't' → logprob: -8.27776050567627
    8. 'w' → logprob: -9.02776050567627
    9. '
' → logprob: -10.15276050567627
    10. 'q' → logprob: -10.40276050567627

Token 519: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0703071877360344
    2. 'for' → logprob: -3.5703072547912598
    3. 'n' → logprob: -3.8203072547912598
    4. 'if' → logprob: -4.57030725479126
    5. 'def' → logprob: -5.57030725479126
    6. 'q' → logprob: -5.94530725479126
    7. 't' → logprob: -7.57030725479126
    8. ' while' → logprob: -8.320306777954102
    9. 'Q' → logprob: -9.070306777954102
    10. '
' → logprob: -10.195306777954102

Token 520: ' tree' (ID: 8165)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9701741933822632
    2. 'while' → logprob: -0.9701741933822632
    3. 'n' → logprob: -2.7201743125915527
    4. '#' → logprob: -2.7201743125915527
    5. 'for' → logprob: -3.2201743125915527
    6. ' while' → logprob: -3.8451743125915527
    7. '```' → logprob: -4.095174312591553
    8. ' ' → logprob: -4.220174312591553
    9. ' 
' → logprob: -5.595174312591553
    10. ' if' → logprob: -5.720174312591553

Token 521: 'の' (ID: 3385)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.10568077117204666
    2. '
' → logprob: -2.9806807041168213
    3. 'if' → logprob: -3.8556807041168213
    4. 'for' → logprob: -4.1056809425354
    5. ' while' → logprob: -5.2306809425354
    6. 'n' → logprob: -5.8556809425354
    7. 'def' → logprob: -5.9806809425354
    8. 'root' → logprob: -7.8556809425354
    9. '
' → logprob: -8.730680465698242
    10. ' for' → logprob: -9.105680465698242

Token 522: '根' (ID: 31888)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.016782408580183983
    2. 'root' → logprob: -4.141782283782959
    3. ' None' → logprob: -7.891782283782959
    4. '#' → logprob: -8.641782760620117
    5. 'Node' → logprob: -8.891782760620117
    6. 'main' → logprob: -11.016782760620117
    7. '根' → logprob: -11.641782760620117
    8. 'entry' → logprob: -12.266782760620117
    9. ' root' → logprob: -12.391782760620117
    10. '```' → logprob: -12.766782760620117

Token 523: 'を' (ID: 7277)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3254711627960205
    2. 'while' → logprob: -1.8254711627960205
    3. 'for' → logprob: -2.9504711627960205
    4. 'def' → logprob: -4.075470924377441
    5. '
' → logprob: -4.700470924377441
    6. 'if' → logprob: -5.200470924377441
    7. 'root' → logprob: -5.325470924377441
    8. '

' → logprob: -5.325470924377441
    9. '  
' → logprob: -5.700470924377441
    10. '' → logprob: -5.825470924377441

Token 524: '表' (ID: 9314)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001061390619724989
    2. ' None' → logprob: -7.25106143951416
    3. '設定' → logprob: -8.37606143951416
    4. '```' → logprob: -10.25106143951416
    5. '定' → logprob: -10.37606143951416
    6. '初' → logprob: -11.00106143951416
    7. 'null' → logprob: -12.12606143951416
    8. 'root' → logprob: -12.37606143951416
    9. 'set' → logprob: -12.37606143951416
    10. '#' → logprob: -12.37606143951416

Token 525: 'す' (ID: 4868)
  Prédit: 'す'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.006077514495700598
    2. 'わ' → logprob: -5.256077289581299
    3. '示' → logprob: -7.631077289581299
    4. 'して' → logprob: -8.631077766418457
    5. 'します' → logprob: -10.131077766418457
    6. 'しています' → logprob: -10.256077766418457
    7. '現' → logprob: -10.506077766418457
    8. '#' → logprob: -10.756077766418457
    9. 'し' → logprob: -10.756077766418457
    10. '=' → logprob: -11.381077766418457

Token 526: '。' (ID: 788)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7309207320213318
    2. 'while' → logprob: -1.3559207916259766
    3. 'for' → logprob: -1.9809207916259766
    4. 'def' → logprob: -2.9809207916259766
    5. 'if' → logprob: -2.9809207916259766
    6. 't' → logprob: -4.980920791625977
    7. 'q' → logprob: -5.105920791625977
    8. '
' → logprob: -5.480920791625977
    9. 'Q' → logprob: -6.230920791625977
    10. 'num' → logprob: -6.730920791625977

Token 527: '初' (ID: 26719)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.09138795733451843
    2. 'n' → logprob: -2.716387987136841
    3. 'if' → logprob: -4.841387748718262
    4. 'for' → logprob: -5.216387748718262
    5. 'q' → logprob: -5.591387748718262
    6. 't' → logprob: -5.966387748718262
    7. ' while' → logprob: -6.716387748718262
    8. 'def' → logprob: -8.591387748718262
    9. '
' → logprob: -9.841387748718262
    10. 'Q' → logprob: -10.091387748718262

Token 528: '期' (ID: 5055)
  Prédit: '期'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '期' → logprob: -7.362307223957032e-05
    2. 'None' → logprob: -9.750073432922363
    3. 'め' → logprob: -11.125073432922363
    4. 'initialized' → logprob: -16.25007438659668
    5. '```' → logprob: -16.25007438659668
    6. '   ' → logprob: -17.00007438659668
    7. '始化' → logprob: -17.12507438659668
    8. ' None' → logprob: -17.50007438659668
    9. 'value' → logprob: -17.50007438659668
    10. '期待' → logprob: -17.75007438659668

Token 529: '値' (ID: 69555)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.8445292115211487
    2. ' None' → logprob: -1.094529151916504
    3. 'root' → logprob: -1.594529151916504
    4. ' root' → logprob: -4.594529151916504
    5. 'value' → logprob: -4.844529151916504
    6. '=' → logprob: -5.469529151916504
    7. '```' → logprob: -5.594529151916504
    8. '=None' → logprob: -6.594529151916504
    9. '=root' → logprob: -6.844529151916504
    10. ' =' → logprob: -7.344529151916504

Token 530: 'は' (ID: 5205)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004334814380854368
    2. ' =' → logprob: -5.879334926605225
    3. '=None' → logprob: -7.254334926605225
    4. 'None' → logprob: -7.504334926605225
    5. '=root' → logprob: -9.129334449768066
    6. ' None' → logprob: -9.504334449768066
    7. '=
' → logprob: -10.129334449768066
    8. '<|end|>' → logprob: -11.254334449768066
    9. 'root' → logprob: -11.754334449768066
    10. '#' → logprob: -12.004334449768066

Token 531: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00043353010551072657
    2. ' None' → logprob: -7.750433444976807
    3. 'なし' → logprob: -13.625433921813965
    4. 'none' → logprob: -14.500433921813965
    5. '```' → logprob: -14.750433921813965
    6. 'null' → logprob: -15.250433921813965
    7. '   ' → logprob: -15.375433921813965
    8. ' ' → logprob: -16.12543296813965
    9. 'root' → logprob: -16.87543296813965
    10. 'No' → logprob: -17.12543296813965

Token 532: '。
' (ID: 3414)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06534665822982788
    2. 'while' → logprob: -3.0653467178344727
    3. '\n' → logprob: -5.065346717834473
    4. 'n' → logprob: -5.190346717834473
    5. 'for' → logprob: -6.190346717834473
    6. '<|end|>' → logprob: -6.565346717834473
    7. ' while' → logprob: -7.815346717834473
    8. '

' → logprob: -8.940346717834473
    9. '```' → logprob: -9.065346717834473
    10. '  
' → logprob: -9.190346717834473

Token 533: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7051248550415039
    2. 'while' → logprob: -0.9551248550415039
    3. 'for' → logprob: -2.330124855041504
    4. 'if' → logprob: -4.330124855041504
    5. 'def' → logprob: -5.330124855041504
    6. ' while' → logprob: -6.455124855041504
    7. 'q' → logprob: -6.455124855041504
    8. 't' → logprob: -6.580124855041504
    9. 'num' → logprob: -7.455124855041504
    10. 'line' → logprob: -8.705124855041504

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.210606649518013
    2. '=' → logprob: -1.7106066942214966
    3. '=int' → logprob: -4.710606575012207
    4. ' ' → logprob: -8.960606575012207
    5. '  ' → logprob: -12.085606575012207
    6. '＝' → logprob: -12.585606575012207
    7. ' =
' → logprob: -13.210606575012207
    8. '   ' → logprob: -13.210606575012207
    9. '_' → logprob: -13.460606575012207
    10. '
' → logprob: -13.460606575012207

Token 535: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029751529917120934
    2. ' int' → logprob: -3.5297515392303467
    3. ' ' → logprob: -14.529751777648926
    4. '  ' → logprob: -15.904751777648926
    5. '(int' → logprob: -15.904751777648926
    6. '	int' → logprob: -15.904751777648926
    7. '0' → logprob: -16.65475082397461
    8. '   ' → logprob: -16.90475082397461
    9. '=int' → logprob: -17.15475082397461
    10. '[int' → logprob: -17.15475082397461

Token 536: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00022678142704535276
    2. 'input' → logprob: -9.375226974487305
    3. '()' → logprob: -9.500226974487305
    4. '(' → logprob: -9.625226974487305
    5. ' (' → logprob: -14.125226974487305
    6. '(
' → logprob: -16.125226974487305
    7. '=input' → logprob: -16.250226974487305
    8. ' ()' → logprob: -17.125226974487305
    9. ' input' → logprob: -17.375226974487305
    10. ' ' → logprob: -17.375226974487305

Token 537: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07896238565444946
    2. '()' → logprob: -2.5789623260498047
    3. '())
' → logprob: -9.953962326049805
    4. '()
' → logprob: -10.953962326049805
    5. ' ())' → logprob: -12.453962326049805
    6. ')' → logprob: -13.203962326049805
    7. '().' → logprob: -14.078962326049805
    8. '(' → logprob: -14.578962326049805
    9. ' ()' → logprob: -15.578962326049805
    10. '()>' → logprob: -16.078962326049805

Token 538: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5048530030981055e-06
    2. ' for' → logprob: -13.500001907348633
    3. 'root' → logprob: -17.250001907348633
    4. '	for' → logprob: -18.375001907348633
    5. '```' → logprob: -18.375001907348633
    6. 'while' → logprob: -20.250001907348633
    7. '
' → logprob: -20.625001907348633
    8. 'i' → logprob: -20.625001907348633
    9. 'f' → logprob: -20.875001907348633
    10. 'line' → logprob: -21.000001907348633

Token 539: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3870488107204437
    2. ' _' → logprob: -1.1370488405227661
    3. ' i' → logprob: -8.762048721313477
    4. ' ' → logprob: -11.012048721313477
    5. '_i' → logprob: -13.387048721313477
    6. '＿' → logprob: -14.137048721313477
    7. ' ' → logprob: -14.137048721313477
    8. ' ‌' → logprob: -14.387048721313477
    9. ' _
' → logprob: -14.887048721313477
    10. ' ​' → logprob: -15.637048721313477

Token 540: 'i' (ID: 72)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12700842320919037
    2. 'in' → logprob: -2.1270084381103516
    3. ' ' → logprob: -9.752008438110352
    4. 'range' → logprob: -11.127008438110352
    5. '_' → logprob: -12.877008438110352
    6. 'i' → logprob: -13.377008438110352
    7. '  ' → logprob: -13.502008438110352
    8. ' i' → logprob: -13.877008438110352
    9. ' _' → logprob: -14.877008438110352
    10. ' range' → logprob: -15.002008438110352

Token 541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.051586318761110306
    2. 'in' → logprob: -3.051586389541626
    3. 'n' → logprob: -5.926586151123047
    4. '_' → logprob: -8.551586151123047
    5. ' ' → logprob: -9.176586151123047
    6. 'i' → logprob: -12.301586151123047
    7. ' i' → logprob: -12.801586151123047
    8. 'range' → logprob: -12.801586151123047
    9. ' _' → logprob: -12.926586151123047
    10. '0' → logprob: -13.176586151123047

Token 542: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038042064756155014
    2. ' range' → logprob: -3.2880420684814453
    3. '_' → logprob: -15.163042068481445
    4. ' ' → logprob: -15.663042068481445
    5. 'rang' → logprob: -16.913042068481445
    6. 'r' → logprob: -17.538042068481445
    7. '(range' → logprob: -17.913042068481445
    8. ' in' → logprob: -18.038042068481445
    9. '  ' → logprob: -18.163042068481445
    10. '	range' → logprob: -18.163042068481445

Token 543: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.004102504346519709
    2. '(' → logprob: -5.50410270690918
    3. ' (' → logprob: -11.00410270690918
    4. 'N' → logprob: -12.12910270690918
    5. ' N' → logprob: -14.00410270690918
    6. '(
' → logprob: -14.25410270690918
    7. '(range' → logprob: -15.25410270690918
    8. '(n' → logprob: -16.00410270690918
    9. 'range' → logprob: -16.25410270690918
    10. '()' → logprob: -17.12910270690918

Token 544: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027267539873719215
    2. ' ):' → logprob: -3.9022674560546875
    3. '):
' → logprob: -5.5272674560546875
    4. ')' → logprob: -6.0272674560546875
    5. ':' → logprob: -8.902267456054688
    6. ',' → logprob: -9.652267456054688
    7. ' ):
' → logprob: -10.277267456054688
    8. ' )' → logprob: -10.652267456054688
    9. ' :' → logprob: -11.152267456054688
    10. ' ' → logprob: -11.277267456054688

Token 545: '   ' (ID: 271)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.6303744912147522
    2. 'command' → logprob: -1.0053744316101074
    3. 'op' → logprob: -2.7553744316101074
    4. 'operation' → logprob: -4.255374431610107
    5. 'com' → logprob: -4.380374431610107
    6. 'query' → logprob: -6.130374431610107
    7. '   ' → logprob: -6.380374431610107
    8. ' command' → logprob: -6.380374431610107
    9. ' cmd' → logprob: -6.755374431610107
    10. 'opcode' → logprob: -7.380374431610107

Token 546: ' order' (ID: 2569)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.760323703289032
    2. 'cmd' → logprob: -0.760323703289032
    3. 'com' → logprob: -3.3853237628936768
    4. 'op' → logprob: -4.135323524475098
    5. 'query' → logprob: -5.635323524475098
    6. 'operation' → logprob: -5.635323524475098
    7. 'order' (adapté à ' order') → logprob: -5.885323524475098
    8. 'c' → logprob: -7.260323524475098
    9. 'mode' → logprob: -7.635323524475098
    10. 'type' → logprob: -8.135323524475098

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026100215036422014
    2. ' ,' → logprob: -6.627610206604004
    3. '=' → logprob: -8.127610206604004
    4. ' =' → logprob: -8.252610206604004
    5. '_type' → logprob: -8.252610206604004
    6. '_,' → logprob: -9.252610206604004
    7. ',line' → logprob: -9.502610206604004
    8. 'type' → logprob: -9.627610206604004
    9. '_line' → logprob: -9.877610206604004
    10. ',_' → logprob: -10.252610206604004

Token 548: ' val' (ID: 1459)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7707980275154114
    2. 'x' → logprob: -1.1457979679107666
    3. 'value' → logprob: -1.6457979679107666
    4. 'v' → logprob: -4.645798206329346
    5. 'val' → logprob: -4.645798206329346
    6. 'num' → logprob: -5.270798206329346
    7. 'arg' → logprob: -7.020798206329346
    8. ' key' → logprob: -7.270798206329346
    9. ' x' → logprob: -9.020797729492188
    10. 'k' → logprob: -9.145797729492188

Token 549: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132622241973877
    2. ' =' → logprob: -1.3132622241973877
    3. ' ' → logprob: -14.938261985778809
    4. '＝' → logprob: -15.813261985778809
    5. ',' → logprob: -18.313262939453125
    6. '=line' → logprob: -18.438262939453125
    7. '=input' → logprob: -18.563262939453125
    8. '   ' → logprob: -18.688262939453125
    9. '  ' → logprob: -19.813262939453125
    10. ')' → logprob: -20.188262939453125

Token 550: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047814972698689
    2. ' input' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.76104736328125
    4. '	input' → logprob: -17.88604736328125
    5. ' ' → logprob: -18.38604736328125
    6. '(input' → logprob: -19.13604736328125
    7. 'inp' → logprob: -19.51104736328125
    8. '入力' → logprob: -19.88604736328125
    9. '_input' → logprob: -20.01104736328125
    10. '=input' → logprob: -20.01104736328125

Token 551: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.5577775128767826e-06
    2. '()' → logprob: -12.750005722045898
    3. '_' → logprob: -13.875005722045898
    4. 'line' → logprob: -14.125005722045898
    5. '_l' → logprob: -15.250005722045898
    6. '_LINE' → logprob: -15.875005722045898
    7. '()
' → logprob: -16.1250057220459
    8. '
' → logprob: -16.3750057220459
    9. ' _' → logprob: -16.3750057220459
    10. '   ' → logprob: -17.0000057220459

Token 552: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05839240550994873
    2. '
' → logprob: -2.9333925247192383
    3. 'if' → logprob: -6.433392524719238
    4. ' if' → logprob: -6.683392524719238
    5. '    
' → logprob: -7.933392524719238
    6. ' ' → logprob: -10.308392524719238
    7. ':
' → logprob: -10.433392524719238
    8. ' 
' → logprob: -10.558392524719238
    9. ':' → logprob: -10.558392524719238
    10. '  
' → logprob: -10.683392524719238

Token 553: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001253207796253264
    2. ' if' → logprob: -6.876253128051758
    3. 'if' → logprob: -9.126253128051758
    4. '    
' → logprob: -9.751253128051758
    5. '
' → logprob: -10.501253128051758
    6. '<|end|>' → logprob: -11.501253128051758
    7. ' 
' → logprob: -12.251253128051758
    8. ' ' → logprob: -13.001253128051758
    9. '  ' → logprob: -13.001253128051758
    10. '    ' → logprob: -13.501253128051758

Token 554: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.053587235510349274
    2. ' if' → logprob: -3.0535871982574463
    3. '   ' → logprob: -5.303587436676025
    4. 'i' → logprob: -11.428586959838867
    5. ' i' → logprob: -13.553586959838867
    6. ' ' → logprob: -14.803586959838867
    7. '    ' → logprob: -15.053586959838867
    8. '	if' → logprob: -15.303586959838867
    9. '  ' → logprob: -15.803586959838867
    10. '    
' → logprob: -16.053586959838867

Token 555: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.693149745464325
    2. ' order' → logprob: -0.693149745464325
    3. ' ' → logprob: -13.44314956665039
    4. '	order' → logprob: -14.81814956665039
    5. '(order' → logprob: -15.31814956665039
    6. '   ' → logprob: -15.31814956665039
    7. '    ' → logprob: -16.56814956665039
    8. 'orde' → logprob: -16.94314956665039
    9. '$order' → logprob: -17.06814956665039
    10. '  ' → logprob: -17.44314956665039

Token 556: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.474269300699234
    2. ' ==' → logprob: -0.9742692708969116
    3. '=' → logprob: -9.224268913269043
    4. '=='' → logprob: -9.599268913269043
    5. ' ' → logprob: -11.849268913269043
    6. '==
' → logprob: -11.974268913269043
    7. '=="' → logprob: -12.099268913269043
    8. ' =' → logprob: -12.974268913269043
    9. ' =='' → logprob: -13.099268913269043
    10. '===' → logprob: -14.224268913269043

Token 557: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007004032959230244
    2. ' '' → logprob: -7.6257004737854
    3. '"' → logprob: -8.500699996948242
    4. ''ins' → logprob: -13.000699996948242
    5. 'insert' → logprob: -13.250699996948242
    6. ''in' → logprob: -13.750699996948242
    7. ''import' → logprob: -14.000699996948242
    8. '   ' → logprob: -14.250699996948242
    9. ''s' → logprob: -14.625699996948242
    10. ' ' → logprob: -14.625699996948242

Token 558: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.0014746295055374503
    2. 'i' → logprob: -6.626474857330322
    3. 'in' → logprob: -9.126474380493164
    4. 'find' → logprob: -10.876474380493164
    5. ''' → logprob: -11.751474380493164
    6. ' insert' → logprob: -12.251474380493164
    7. 'inse' → logprob: -13.251474380493164
    8. 'ins' → logprob: -13.501474380493164
    9. ''in' → logprob: -13.751474380493164
    10. ''i' → logprob: -13.876474380493164

Token 559: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.002835899591445923
    2. '':
' → logprob: -6.127835750579834
    3. ''' → logprob: -7.502835750579834
    4. ':' → logprob: -9.627836227416992
    5. '':
' → logprob: -10.627836227416992
    6. '':'' → logprob: -13.002836227416992
    7. ' ':' → logprob: -13.127836227416992
    8. '':

' → logprob: -13.502836227416992
    9. '(':' → logprob: -14.127836227416992
    10. ''):' → logprob: -14.252836227416992

Token 560: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3337486684322357
    2. ' insert' → logprob: -1.958748698234558
    3. '   ' → logprob: -2.0837485790252686
    4. 'insert' → logprob: -4.833748817443848
    5. ' new' → logprob: -5.083748817443848
    6. '
' → logprob: -6.458748817443848
    7. '    
' → logprob: -7.333748817443848
    8. '    ' → logprob: -7.958748817443848
    9. '	insert' → logprob: -8.083748817443848
    10. '        
' → logprob: -8.458748817443848

Token 561: ' node' (ID: 4596)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.4513872265815735
    2. 'insert' → logprob: -1.4513871669769287
    3. ' new' → logprob: -3.0763871669769287
    4. 'node' (adapté à ' node') → logprob: -3.4513871669769287
    5. ' node' → logprob: -3.8263871669769287
    6. 'new' → logprob: -4.076387405395508
    7. '       ' → logprob: -4.951387405395508
    8. '   ' → logprob: -6.326387405395508
    9. '
' → logprob: -6.451387405395508
    10. 'n' → logprob: -6.826387405395508

Token 562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759522914886475
    2. ' =' → logprob: -0.8259522914886475
    3. '(Node' → logprob: -11.700952529907227
    4. ' ' → logprob: -13.575952529907227
    5. '(' → logprob: -14.075952529907227
    6. '=node' → logprob: -14.075952529907227
    7. '＝' → logprob: -14.700952529907227
    8. '(node' → logprob: -14.825952529907227
    9. ')' → logprob: -15.825952529907227
    10. 'insert' → logprob: -16.075952529907227

Token 563: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.10020678490400314
    2. ' Node' → logprob: -2.3502068519592285
    3. '	Node' → logprob: -16.35020637512207
    4. ' ' → logprob: -17.10020637512207
    5. '   ' → logprob: -18.22520637512207
    6. '(Node' → logprob: -19.35020637512207
    7. 'new' → logprob: -19.47520637512207
    8. ' new' → logprob: -19.85020637512207
    9. '_Node' → logprob: -19.85020637512207
    10. ' node' → logprob: -19.85020637512207

Token 564: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. '[val' → logprob: -17.375003814697266
    4. 'val' → logprob: -18.125003814697266
    5. '(v' → logprob: -18.500003814697266
    6. ',val' → logprob: -18.875003814697266
    7. ' (' → logprob: -19.625003814697266
    8. '(valor' → logprob: -20.500003814697266
    9. '	val' → logprob: -20.875003814697266
    10. ' val' → logprob: -20.875003814697266

Token 565: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25203609466552734
    2. ')
' → logprob: -1.5020360946655273
    3. ')
' → logprob: -9.502036094665527
    4. '       ' → logprob: -10.877036094665527
    5. '   ' → logprob: -11.377036094665527
    6. ' )' → logprob: -14.377036094665527
    7. ' )
' → logprob: -14.502036094665527
    8. ')

' → logprob: -14.627036094665527
    9. ')`
' → logprob: -15.377036094665527
    10. ' ' → logprob: -16.252037048339844

Token 566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006156065966933966
    2. 'insert' → logprob: -5.256155967712402
    3. '   ' → logprob: -7.506155967712402
    4. ' insert' → logprob: -8.006155967712402
    5. '	insert' → logprob: -11.256155967712402
    6. '.insert' → logprob: -11.631155967712402
    7. '
' → logprob: -12.131155967712402
    8. '        
' → logprob: -12.131155967712402
    9. '           ' → logprob: -13.256155967712402
    10. ' ' → logprob: -14.131155967712402

Token 567: ' insert' (ID: 10898)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' (adapté à ' insert') → logprob: -4.572941179503687e-05
    2. ' insert' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.625045776367188
    4. '       ' → logprob: -16.625045776367188
    5. '	insert' → logprob: -16.750045776367188
    6. '.insert' → logprob: -18.250045776367188
    7. '
' → logprob: -18.625045776367188
    8. 'import' → logprob: -19.125045776367188
    9. '        
' → logprob: -19.750045776367188
    10. '_insert' → logprob: -20.125045776367188

Token 568: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -4.620622712536715e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -14.250045776367188
    4. '(
' → logprob: -18.500045776367188
    5. 'node' → logprob: -18.750045776367188
    6. '=node' → logprob: -18.875045776367188
    7. '(n' → logprob: -19.000045776367188
    8. ',node' → logprob: -19.750045776367188
    9. ' node' → logprob: -20.250045776367188
    10. '[node' → logprob: -20.375045776367188

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005536708049476147
    2. ')
' → logprob: -5.3805365562438965
    3. '   ' → logprob: -7.0055365562438965
    4. '<|end|>' → logprob: -12.255537033081055
    5. ' )' → logprob: -13.005537033081055
    6. 'elif' → logprob: -14.255537033081055
    7. '<|end|>' → logprob: -15.255537033081055
    8. '')' → logprob: -15.505537033081055
    9. ')return' → logprob: -15.880537033081055
    10. ' ' → logprob: -16.005537033081055

Token 570: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013977376511320472
    2. 'elif' → logprob: -9.750140190124512
    3. '<|end|>' → logprob: -9.750140190124512
    4. ' elif' → logprob: -11.000140190124512
    5. '```' → logprob: -12.625140190124512
    6. '	elif' → logprob: -13.750140190124512
    7. ' ' → logprob: -14.250140190124512
    8. '<|end|>' → logprob: -14.750140190124512
    9. '       ' → logprob: -15.000140190124512
    10. ' if' → logprob: -15.750140190124512

Token 571: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.001179989194497466
    2. ' elif' → logprob: -6.751180171966553
    3. 'else' → logprob: -12.126179695129395
    4. 'el' → logprob: -12.876179695129395
    5. 'e' → logprob: -13.751179695129395
    6. 'if' → logprob: -14.751179695129395
    7. ' ' → logprob: -15.626179695129395
    8. '   ' → logprob: -17.00118064880371
    9. '	elif' → logprob: -17.12618064880371
    10. '```' → logprob: -17.75118064880371

Token 572: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.47407984733581543
    2. 'order' → logprob: -0.9740798473358154
    3. 'val' → logprob: -14.099080085754395
    4. '(order' → logprob: -14.224080085754395
    5. '	order' → logprob: -14.724080085754395
    6. ' ' → logprob: -15.474080085754395
    7. '$order' → logprob: -15.599080085754395
    8. ' val' → logprob: -15.599080085754395
    9. 'find' → logprob: -15.724080085754395
    10. 'ord' → logprob: -16.474079132080078

Token 573: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25194308161735535
    2. '==' → logprob: -1.5019431114196777
    3. '=='' → logprob: -12.12694263458252
    4. '=' → logprob: -12.25194263458252
    5. ' ' → logprob: -14.00194263458252
    6. ' =' → logprob: -14.12694263458252
    7. '==
' → logprob: -14.50194263458252
    8. '=="' → logprob: -14.62694263458252
    9. ' =='' → logprob: -14.62694263458252
    10. '===' → logprob: -15.00194263458252

Token 574: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007619995623826981
    2. ' '' → logprob: -4.882619857788086
    3. ' ' → logprob: -12.507619857788086
    4. '"' → logprob: -12.757619857788086
    5. ''s' → logprob: -13.007619857788086
    6. '('' → logprob: -13.382619857788086
    7. ' find' → logprob: -13.632619857788086
    8. 'find' → logprob: -13.757619857788086
    9. '   ' → logprob: -15.132619857788086
    10. '	' → logprob: -16.257619857788086

Token 575: 'print' (ID: 1598)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0024826733861118555
    2. 'find' → logprob: -6.002482891082764
    3. ' find' → logprob: -12.627482414245605
    4. '"' → logprob: -13.627482414245605
    5. ''s' → logprob: -14.627482414245605
    6. '(find' → logprob: -15.002482414245605
    7. '	find' → logprob: -15.127482414245605
    8. ' '' → logprob: -15.252482414245605
    9. '('' → logprob: -15.252482414245605
    10. ' ' → logprob: -15.627482414245605

Token 576: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.058691684156656265
    2. ''' → logprob: -3.4336917400360107
    3. '':
' → logprob: -4.308691501617432
    4. '('' → logprob: -4.808691501617432
    5. ':' → logprob: -6.433691501617432
    6. '(':' → logprob: -7.058691501617432
    7. '':'' → logprob: -8.05869197845459
    8. '(' → logprob: -8.80869197845459
    9. '(order' → logprob: -10.30869197845459
    10. 'order' → logprob: -10.43369197845459

Token 577: '       ' (ID: 309)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06693266332149506
    2. ' inorder' → logprob: -2.8169326782226562
    3. '   ' → logprob: -5.941932678222656
    4. ' in' → logprob: -6.566932678222656
    5. '
' → logprob: -7.816932678222656
    6. 'print' → logprob: -8.066932678222656
    7. '```' → logprob: -9.691932678222656
    8. '(in' → logprob: -10.316932678222656
    9. '    
' → logprob: -10.691932678222656
    10. ' preorder' → logprob: -10.691932678222656

Token 578: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -6.873571692267433e-05
    2. ' inorder' → logprob: -9.625068664550781
    3. '	in' → logprob: -14.500068664550781
    4. 'print' → logprob: -14.625068664550781
    5. ' in' → logprob: -15.250068664550781
    6. '(in' → logprob: -15.375068664550781
    7. '```' → logprob: -15.375068664550781
    8. '"in' → logprob: -15.500068664550781
    9. '   ' → logprob: -15.750068664550781
    10. ''in' → logprob: -15.875068664550781

Token 579: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -4.1557283111615106e-05
    2. '(' → logprob: -10.125041961669922
    3. '()' → logprob: -14.000041961669922
    4. ' (' → logprob: -15.250041961669922
    5. 'root' → logprob: -15.875041961669922
    6. '(
' → logprob: -16.500041961669922
    7. ' root' → logprob: -17.125041961669922
    8. '(ROOT' → logprob: -17.250041961669922
    9. '(r' → logprob: -18.125041961669922
    10. '(tree' → logprob: -19.000041961669922

Token 580: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006751731503754854
    2. ')' → logprob: -5.006751537322998
    3. ')
' → logprob: -10.381752014160156
    4. ' )
' → logprob: -12.881752014160156
    5. '()
' → logprob: -13.256752014160156
    6. '())
' → logprob: -14.381752014160156
    7. '(root' → logprob: -15.381752014160156
    8. '()' → logprob: -15.881752014160156
    9. ')

' → logprob: -16.131752014160156
    10. ');
' → logprob: -17.131752014160156

Token 581: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000156577822053805
    2. '
' → logprob: -9.25015640258789
    3. ' print' → logprob: -10.12515640258789
    4. '   ' → logprob: -11.12515640258789
    5. '
' → logprob: -14.00015640258789
    6. '    
' → logprob: -14.00015640258789
    7. '	print' → logprob: -14.25015640258789
    8. '\n' → logprob: -14.37515640258789
    9. '()
' → logprob: -14.62515640258789
    10. '```' → logprob: -14.87515640258789

Token 582: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00012928384239785373
    2. '
' → logprob: -9.125129699707031
    3. ' print' → logprob: -11.000129699707031
    4. '()
' → logprob: -13.125129699707031
    5. '```' → logprob: -14.750129699707031
    6. ' 
' → logprob: -15.250129699707031
    7. '(print' → logprob: -15.625129699707031
    8. '
' → logprob: -15.750129699707031
    9. '  
' → logprob: -16.25012969970703
    10. '\n' → logprob: -16.62512969970703

Token 583: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0025085974484682083
    2. '()
' → logprob: -6.002508640289307
    3. '('' → logprob: -10.627508163452148
    4. '("")' → logprob: -12.502508163452148
    5. ' ()' → logprob: -12.877508163452148
    6. '(' → logprob: -13.127508163452148
    7. '('')
' → logprob: -15.627508163452148
    8. '()

' → logprob: -16.00250816345215
    9. '（）' → logprob: -17.12750816345215
    10. '()
' → logprob: -17.75250816345215

Token 584: '       ' (ID: 309)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.001192490803077817
    2. ' preorder' → logprob: -6.876192569732666
    3. '   ' → logprob: -9.626192092895508
    4. ' pre' → logprob: -10.251192092895508
    5. '       ' → logprob: -10.751192092895508
    6. '(pre' → logprob: -11.376192092895508
    7. '	pre' → logprob: -11.376192092895508
    8. 'print' → logprob: -12.251192092895508
    9. '```' → logprob: -12.501192092895508
    10. 'post' → logprob: -13.376192092895508

Token 585: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -3.128163257315464e-07
    2. 'post' → logprob: -15.5
    3. ' preorder' → logprob: -17.875
    4. '   ' → logprob: -21.5
    5. 'preced' → logprob: -22.875
    6. '```' → logprob: -22.875
    7. '	pre' → logprob: -23.0
    8. 'print' → logprob: -23.625
    9. 'pr' → logprob: -23.875
    10. 'prev' → logprob: -24.0

Token 586: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -3.173704271830502e-06
    2. '(' → logprob: -12.75000286102295
    3. ' (' → logprob: -15.75000286102295
    4. '(tree' → logprob: -17.000003814697266
    5. '(ROOT' → logprob: -17.750003814697266
    6. '[root' → logprob: -18.500003814697266
    7. 'root' → logprob: -18.625003814697266
    8. '(rest' → logprob: -18.750003814697266
    9. '(parent' → logprob: -19.000003814697266
    10. '(
' → logprob: -19.625003814697266

Token 587: ')
' (ID: 446)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.011078944429755211
    2. ')' → logprob: -4.511078834533691
    3. '(' → logprob: -10.636078834533691
    4. ')(' → logprob: -13.011078834533691
    5. 'root' → logprob: -13.136078834533691
    6. ')
' → logprob: -13.386078834533691
    7. ' (' → logprob: -14.511078834533691
    8. '[root' → logprob: -14.886078834533691
    9. ' root' → logprob: -15.761078834533691
    10. '(parent' → logprob: -16.136079788208008

Token 588: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039039745926856995
    2. '()
' → logprob: -3.7890398502349854
    3. 'print' → logprob: -4.164039611816406
    4. '()\' → logprob: -9.289039611816406
    5. ' print' → logprob: -11.414039611816406
    6. '(print' → logprob: -12.289039611816406
    7. '()

' → logprob: -12.539039611816406
    8. ' ()' → logprob: -12.914039611816406
    9. '()<' → logprob: -13.289039611816406
    10. '<|end|>' → logprob: -13.289039611816406

Token 589: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016313401283696294
    2. '()' → logprob: -8.750163078308105
    3. ' print' → logprob: -12.500163078308105
    4. '()
' → logprob: -14.000163078308105
    5. '(print' → logprob: -16.500164031982422
    6. '	print' → logprob: -18.500164031982422
    7. '()\' → logprob: -19.000164031982422
    8. '
' → logprob: -19.875164031982422
    9. '```' → logprob: -19.875164031982422
    10. '.print' → logprob: -20.250164031982422

Token 590: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5048530030981055e-06
    2. '()
' → logprob: -14.250001907348633
    3. '(' → logprob: -14.375001907348633
    4. ' ()' → logprob: -15.500001907348633
    5. '（）' → logprob: -18.625001907348633
    6. '()\' → logprob: -18.875001907348633
    7. '()

' → logprob: -19.000001907348633
    8. '().' → logprob: -19.375001907348633
    9. '()<' → logprob: -19.375001907348633
    10. '()`' → logprob: -19.375001907348633

Token 591: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 592: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.016601283103227615
    2. ' elif' → logprob: -4.516601085662842
    3. 'else' → logprob: -5.391601085662842
    4. '   ' → logprob: -7.891601085662842
    5. '<|end|>' → logprob: -8.1416015625
    6. '	elif' → logprob: -8.7666015625
    7. ' else' → logprob: -8.8916015625
    8. '```' → logprob: -11.8916015625
    9. ' ' → logprob: -12.3916015625
    10. '#elif' → logprob: -12.8916015625

Token 593: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5759609341621399
    2. ' order' → logprob: -0.8259609341621399
    3. 'val' → logprob: -11.700961112976074
    4. ''' → logprob: -12.200961112976074
    5. ' ' → logprob: -13.075961112976074
    6. '	order' → logprob: -13.200961112976074
    7. 'ord' → logprob: -14.200961112976074
    8. ' val' → logprob: -14.450961112976074
    9. 'find' → logprob: -14.575961112976074
    10. '(order' → logprob: -14.825961112976074

Token 594: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932957768440247
    2. ' ==' → logprob: -0.6932957768440247
    3. '=' → logprob: -9.0682954788208
    4. '=='' → logprob: -11.0682954788208
    5. ' =' → logprob: -11.4432954788208
    6. '===' → logprob: -13.0682954788208
    7. '==
' → logprob: -13.8182954788208
    8. '=="' → logprob: -14.0682954788208
    9. ' =='' → logprob: -14.1932954788208
    10. ' ' → logprob: -14.8182954788208

Token 595: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007195804500952363
    2. ' '' → logprob: -7.2507195472717285
    3. '"' → logprob: -12.125720024108887
    4. ''s' → logprob: -13.125720024108887
    5. ' ' → logprob: -14.000720024108887
    6. 'find' → logprob: -14.625720024108887
    7. '('' → logprob: -14.750720024108887
    8. ' find' → logprob: -15.750720024108887
    9. '	' → logprob: -16.37571907043457
    10. '   ' → logprob: -16.87571907043457

Token 596: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.723973582556937e-05
    2. ''' → logprob: -11.000017166137695
    3. ' find' → logprob: -14.625017166137695
    4. 'f' → logprob: -17.125017166137695
    5. 'fi' → logprob: -17.375017166137695
    6. 'fin' → logprob: -17.625017166137695
    7. '	find' → logprob: -18.625017166137695
    8. ''s' → logprob: -19.750017166137695
    9. '_find' → logprob: -19.750017166137695
    10. 'found' → logprob: -20.000017166137695

Token 597: '':
' (ID: 7669)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.9477030038833618
    2. '(val' → logprob: -1.1977030038833618
    3. ''' → logprob: -1.5727030038833618
    4. 'val' → logprob: -3.0727028846740723
    5. '')' → logprob: -4.447702884674072
    6. '<|end|>' → logprob: -4.447702884674072
    7. '':
' → logprob: -5.197702884674072
    8. '':' → logprob: -5.322702884674072
    9. '',' → logprob: -5.322702884674072
    10. ''):
' → logprob: -5.697702884674072

Token 598: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07236713171005249
    2. 'print' → logprob: -3.4473671913146973
    3. ' print' → logprob: -3.8223671913146973
    4. ' if' → logprob: -4.822367191314697
    5. 'if' → logprob: -4.947367191314697
    6. '       ' → logprob: -7.447367191314697
    7. 'result' → logprob: -9.072366714477539
    8. ' result' → logprob: -9.072366714477539
    9. ' res' → logprob: -10.447366714477539
    10. '```' → logprob: -10.572366714477539

Token 599: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10676880180835724
    2. 'found' → logprob: -2.856768846511841
    3. 'if' (adapté à ' if') → logprob: -3.231768846511841
    4. 'result' → logprob: -6.356768608093262
    5. 'res' → logprob: -6.356768608093262
    6. ' found' → logprob: -7.481768608093262
    7. ' print' → logprob: -9.106768608093262
    8. 'Found' → logprob: -10.106768608093262
    9. 'ans' → logprob: -10.231768608093262
    10. ' if' → logprob: -10.481768608093262

Token 600: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.048593614250421524
    2. ' find' → logprob: -3.048593521118164
    3. '(find' → logprob: -12.423593521118164
    4. 'val' → logprob: -13.548593521118164
    5. '	find' → logprob: -14.798593521118164
    6. '   ' → logprob: -15.923593521118164
    7. ' ' → logprob: -16.298593521118164
    8. ' val' → logprob: -16.298593521118164
    9. 'found' → logprob: -17.298593521118164
    10. '=find' → logprob: -17.423593521118164

Token 601: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -9.984787902794778e-05
    2. 'val' → logprob: -9.375100135803223
    3. '(' → logprob: -11.625100135803223
    4. ' val' → logprob: -12.375100135803223
    5. '[val' → logprob: -14.125100135803223
    6. ' (' → logprob: -14.250100135803223
    7. ',val' → logprob: -15.375100135803223
    8. '	val' → logprob: -16.750099182128906
    9. '(valor' → logprob: -17.000099182128906
    10. '(value' → logprob: -17.375099182128906

Token 602: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.056941911578178406
    2. '(root' → logprob: -3.1819419860839844
    3. '):
' → logprob: -4.556941986083984
    4. ')' → logprob: -6.556941986083984
    5. '(key' → logprob: -6.931941986083984
    6. ' ):' → logprob: -8.056941986083984
    7. '(' → logprob: -8.556941986083984
    8. '(val' → logprob: -9.056941986083984
    9. '(True' → logprob: -9.431941986083984
    10. '()' → logprob: -9.556941986083984

Token 603: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.340559720993042
    2. '           ' → logprob: -1.965559720993042
    3. ' print' → logprob: -2.340559720993042
    4. 'print' → logprob: -2.965559720993042
    5. '   ' → logprob: -7.840559959411621
    6. '        ' → logprob: -8.840559959411621
    7. '         ' → logprob: -9.590559959411621
    8. '               ' → logprob: -10.590559959411621
    9. ' ' → logprob: -10.715559959411621
    10. '	print' → logprob: -10.715559959411621

Token 604: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005742399953305721
    2. ' print' → logprob: -7.500574111938477
    3. '   ' → logprob: -10.875574111938477
    4. '       ' → logprob: -13.250574111938477
    5. '           ' → logprob: -15.125574111938477
    6. '	print' → logprob: -15.125574111938477
    7. ' ' → logprob: -19.000574111938477
    8. 'Print' → logprob: -19.125574111938477
    9. 'printf' → logprob: -19.250574111938477
    10. '```' → logprob: -19.625574111938477

Token 605: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.16212543845176697
    2. '("' → logprob: -1.9121254682540894
    3. '(' → logprob: -6.287125587463379
    4. ''' → logprob: -10.662125587463379
    5. '"' → logprob: -11.287125587463379
    6. '(f' → logprob: -12.787125587463379
    7. '()' → logprob: -15.162125587463379
    8. ' ('' → logprob: -15.912125587463379
    9. '(
' → logprob: -16.162124633789062
    10. '(True' → logprob: -16.537124633789062

Token 606: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.16759973764419556
    2. ' yes' → logprob: -1.9175996780395508
    3. 'Yes' → logprob: -5.917599678039551
    4. 'found' → logprob: -6.542599678039551
    5. ''' → logprob: -6.667599678039551
    6. ' found' → logprob: -6.917599678039551
    7. 'YES' → logprob: -7.792599678039551
    8. 'Found' → logprob: -8.66759967803955
    9. ' Yes' → logprob: -8.79259967803955
    10. ' Found' → logprob: -9.41759967803955

Token 607: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0005717403837479651
    2. '')
' → logprob: -7.5005717277526855
    3. ')' → logprob: -11.250572204589844
    4. '")' → logprob: -12.375572204589844
    5. '');' → logprob: -14.375572204589844
    6. ''' → logprob: -14.500572204589844
    7. ' ')' → logprob: -15.625572204589844
    8. '<|end|>' → logprob: -16.500572204589844
    9. '')

' → logprob: -16.625572204589844
    10. '',' → logprob: -17.625572204589844

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08036262542009354
    2. ' else' → logprob: -2.705362558364868
    3. 'else' → logprob: -4.580362796783447
    4. '	else' → logprob: -9.830362319946289
    5. '<|end|>' → logprob: -10.205362319946289
    6. '   ' → logprob: -11.705362319946289
    7. '           ' → logprob: -12.330362319946289
    8. '	' → logprob: -12.330362319946289
    9. '      ' → logprob: -12.705362319946289
    10. '```' → logprob: -13.205362319946289

Token 609: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.41188594698905945
    2. ' else' → logprob: -1.6618859767913818
    3. '       ' → logprob: -1.9118859767913818
    4. '	else' → logprob: -11.161886215209961
    5. 'elif' → logprob: -14.036886215209961
    6. '   ' → logprob: -14.286886215209961
    7. '	' → logprob: -14.411886215209961
    8. '<|end|>' → logprob: -14.661886215209961
    9. '}else' → logprob: -15.411886215209961
    10. ' ' → logprob: -15.411886215209961

Token 610: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026242893654853106
    2. ':
' → logprob: -6.12762451171875
    3. 'print' → logprob: -8.75262451171875
    4. ' print' → logprob: -9.50262451171875
    5. '          ' → logprob: -9.62762451171875
    6. ':' → logprob: -10.00262451171875
    7. '   ' → logprob: -10.62762451171875
    8. '       ' → logprob: -10.62762451171875
    9. '('' → logprob: -11.75262451171875
    10. '               ' → logprob: -11.87762451171875

Token 611: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5264697074890137
    2. ' print' → logprob: -1.5264697074890137
    3. 'print' → logprob: -1.6514697074890137
    4. '   ' → logprob: -9.401470184326172
    5. ' ' → logprob: -10.651470184326172
    6. ' yes' → logprob: -10.776470184326172
    7. '	print' → logprob: -10.901470184326172
    8. '       ' → logprob: -10.901470184326172
    9. '          ' → logprob: -11.026470184326172
    10. '```' → logprob: -11.526470184326172

Token 612: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006738811731338501
    2. ' print' → logprob: -5.006738662719727
    3. 'no' → logprob: -11.131738662719727
    4. '           ' → logprob: -12.006738662719727
    5. 'yes' → logprob: -13.881738662719727
    6. ''' → logprob: -14.256738662719727
    7. '	print' → logprob: -15.381738662719727
    8. ' yes' → logprob: -15.756738662719727
    9. ' no' → logprob: -15.881738662719727
    10. '       ' → logprob: -15.881738662719727

Token 613: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0005227696383371949
    2. ''' → logprob: -8.00052261352539
    3. '(' → logprob: -8.62552261352539
    4. ' ('' → logprob: -12.87552261352539
    5. ' ' → logprob: -13.00052261352539
    6. '("' → logprob: -13.25052261352539
    7. ''s' → logprob: -14.75052261352539
    8. 'no' → logprob: -15.37552261352539
    9. '(
' → logprob: -15.62552261352539
    10. '   ' → logprob: -15.75052261352539

Token 614: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0001593195047462359
    2. ''' → logprob: -8.75015926361084
    3. '	no' → logprob: -14.62515926361084
    4. ' no' → logprob: -15.50015926361084
    5. ' ' → logprob: -17.125160217285156
    6. 'n' → logprob: -18.000160217285156
    7. 'No' → logprob: -18.500160217285156
    8. ''n' → logprob: -18.625160217285156
    9. '(no' → logprob: -18.875160217285156
    10. 'not' → logprob: -19.375160217285156

Token 615: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.001936485292389989
    2. ')' → logprob: -6.251936435699463
    3. '')
' → logprob: -11.876936912536621
    4. '")' → logprob: -14.126936912536621
    5. ''' → logprob: -16.376935958862305
    6. '.')' → logprob: -18.251935958862305
    7. '<|end|>' → logprob: -18.501935958862305
    8. '')

' → logprob: -18.876935958862305
    9. ')
' → logprob: -19.001935958862305
    10. ' ')' → logprob: -19.251935958862305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 613
Tokens correctement prédits (1ère position, stricte): 209
Tokens correctement prédits (1ère position, avec adaptation): 249
Tokens correctement prédits (top 10): 481
Précision stricte (1ère position): 34.09%
Précision adaptée (1ère position): 40.62%
Précision (top 10): 78.47%
================================================================================
