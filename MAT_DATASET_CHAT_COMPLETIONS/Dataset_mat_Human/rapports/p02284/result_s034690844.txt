================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class BinarySearchTree(object):
    __slots__ = ['root']

    def __init__(self):
        self.root = None

    def insert(self, key):
        new_node = [key, None, None]

        if self.root is None:
            self.root = new_node
            return

        parent, child = None, self.root
        while child:
            parent = child
            child = child[1] if key < child[0] else child[2]

        if key < parent[0]:
            parent[1] = new_node
        else:
            parent[2] = new_node

    def find(self, key):
        current = self.root
        while current and current[0] != key:
            current = current[1] if key < current[0] else current[2]

        return current

    def walk(self, walk_type):
        a = []
        self._walk(self.root, a, walk_type)
        return a

    def _walk(self, node, a, walk_type):
        if walk_type == 0:
            a.append(node[0])
        if node[1]:
            self._walk(node[1], a, walk_type)
        if walk_type == 1:
            a.append(node[0])
        if node[2]:
            self._walk(node[2], a, walk_type)

if __name__ == '__main__':
    import sys
    input()
    tree = BinarySearchTree()

    for cmd in (l.split() for l in sys.stdin):
        if cmd[0] == 'insert':
            tree.insert(int(cmd[1]))
        elif cmd[0] == 'find':
            print('yes' if tree.find(int(cmd[1])) else 'no')
        else:
            print('', *tree.walk(1))
            print('', *tree.walk(0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Binary' (ID: 32672)
  → Token d'amorce (pas de prédiction)

Token 2: 'Search' (ID: 5975)
  → Token d'amorce (pas de prédiction)

Token 3: 'Tree' (ID: 8062)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5972354412078857
    2. '{' → logprob: -0.9722354412078857
    3. ':' → logprob: -3.3472354412078857
    4. ' {' → logprob: -3.7222354412078857
    5. ' ' → logprob: -5.222235679626465
    6. '.' → logprob: -5.972235679626465
    7. '[' → logprob: -6.472235679626465
    8. ' (' → logprob: -7.097235679626465
    9. '```' → logprob: -7.097235679626465
    10. '<' → logprob: -9.222235679626465

Token 4: '(object' (ID: 9750)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5627707242965698
    2. '(' → logprob: -1.1877707242965698
    3. ' {' → logprob: -2.9377708435058594
    4. ':' → logprob: -3.1877708435058594
    5. '.' → logprob: -3.5627708435058594
    6. '```' → logprob: -6.937770843505859
    7. '[' → logprob: -7.437770843505859
    8. ' ' → logprob: -7.562770843505859
    9. ' (' → logprob: -8.31277084350586
    10. ' .' → logprob: -9.81277084350586

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18222291767597198
    2. ')' → logprob: -1.8072229623794556
    3. ':' → logprob: -6.057222843170166
    4. '):
' → logprob: -9.557223320007324
    5. '{' → logprob: -11.057223320007324
    6. ' ):' → logprob: -11.682223320007324
    7. '```' → logprob: -11.807223320007324
    8. ')>' → logprob: -12.182223320007324
    9. '):

' → logprob: -12.432223320007324
    10. '   ' → logprob: -12.557223320007324

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08211292326450348
    2. '(' → logprob: -2.832113027572632
    3. '.' → logprob: -5.082112789154053
    4. '(
' → logprob: -5.832112789154053
    5. ':
' → logprob: -5.832112789154053
    6. '   ' → logprob: -6.832112789154053
    7. '
' → logprob: -6.832112789154053
    8. '```' → logprob: -6.832112789154053
    9. '():' → logprob: -7.207112789154053
    10. '\' → logprob: -7.582112789154053

Token 7: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7907516956329346
    2. ' ' → logprob: -1.1657516956329346
    3. ' 
' → logprob: -2.6657516956329346
    4. '    ' → logprob: -2.9157516956329346
    5. '```' → logprob: -3.5407516956329346
    6. ':' → logprob: -3.9157516956329346
    7. ' :' → logprob: -4.6657514572143555
    8. '    
' → logprob: -4.6657514572143555
    9. ' def' → logprob: -5.0407514572143555
    10. '\' → logprob: -5.1657514572143555

Token 8: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.4704831838607788
    2. '_' → logprob: -1.2204831838607788
    3. '_init' → logprob: -2.8454833030700684
    4. ' _' → logprob: -4.220483303070068
    5. '_slots' → logprob: -6.095483303070068
    6. ' init' → logprob: -6.845483303070068
    7. '_i' → logprob: -7.220483303070068
    8. '_new' → logprob: -7.220483303070068
    9. 'slots' → logprob: -7.720483303070068
    10. '_in' → logprob: -8.34548282623291

Token 9: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.001213806332089007
    2. '=' → logprob: -6.876214027404785
    3. '__.__' → logprob: -9.501214027404785
    4. '__["' → logprob: -10.376214027404785
    5. '__[' → logprob: -10.376214027404785
    6. '__.' → logprob: -11.001214027404785
    7. '___' → logprob: -11.626214027404785
    8. ' =' → logprob: -12.501214027404785
    9. '=['' → logprob: -13.251214027404785
    10. '_' → logprob: -13.376214027404785

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8769327998161316
    2. '=['' → logprob: -1.5019328594207764
    3. '=' → logprob: -1.8769328594207764
    4. '__' → logprob: -2.6269328594207764
    5. '[' → logprob: -2.6269328594207764
    6. '_' → logprob: -4.126932621002197
    7. '=[' → logprob: -4.376932621002197
    8. ' =[' → logprob: -4.626932621002197
    9. ' ' → logprob: -5.126932621002197
    10. '['' → logprob: -5.501932621002197

Token 11: ' ['' (ID: 5140)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.19656117260456085
    2. '['' → logprob: -2.821561098098755
    3. ''s' → logprob: -3.196561098098755
    4. '[' → logprob: -3.946561098098755
    5. ' '__' → logprob: -4.696561336517334
    6. ' '' → logprob: -4.821561336517334
    7. ' ['' → logprob: -4.821561336517334
    8. '('__' → logprob: -5.071561336517334
    9. '(' → logprob: -5.196561336517334
    10. '"' → logprob: -5.321561336517334

Token 12: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.3652305603027344
    2. '_root' → logprob: -1.3652305603027344
    3. 'value' → logprob: -3.3652305603027344
    4. '_key' → logprob: -5.115230560302734
    5. '_value' → logprob: -5.490230560302734
    6. 'key' → logprob: -5.865230560302734
    7. '_val' → logprob: -7.115230560302734
    8. 'data' → logprob: -7.490230560302734
    9. '_data' → logprob: -7.740230560302734
    10. '_left' → logprob: -7.865230560302734

Token 13: '']

' (ID: 36979)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '']' → logprob: -0.02309977449476719
    2. ']' → logprob: -4.273099899291992
    3. '',' → logprob: -4.773099899291992
    4. ',' → logprob: -7.898099899291992
    5. '.' → logprob: -11.148099899291992
    6. ' ']' → logprob: -11.273099899291992
    7. '   ' → logprob: -11.398099899291992
    8. '"]' → logprob: -11.773099899291992
    9. '','' → logprob: -12.023099899291992
    10. '[' → logprob: -12.023099899291992

Token 14: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15640337765216827
    2. '   ' → logprob: -2.7814033031463623
    3. ':' → logprob: -3.1564033031463623
    4. '\' → logprob: -4.656403541564941
    5. '    
' → logprob: -4.906403541564941
    6. '\n' → logprob: -5.281403541564941
    7. '```' → logprob: -5.281403541564941
    8. '(' → logprob: -5.906403541564941
    9. ',' → logprob: -6.406403541564941
    10. ':
' → logprob: -6.656403541564941

Token 15: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2587624192237854
    2. 'def' (adapté à ' def') → logprob: -2.0087623596191406
    3. ' def' → logprob: -2.6337623596191406
    4. '
' → logprob: -5.633762359619141
    5. '\n' → logprob: -5.633762359619141
    6. '    
' → logprob: -5.758762359619141
    7. '```' → logprob: -5.883762359619141
    8. '\' → logprob: -6.133762359619141
    9. ':' → logprob: -6.508762359619141
    10. 'd' → logprob: -6.758762359619141

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5127165913581848
    2. ' ' → logprob: -1.01271653175354
    3. '__' → logprob: -3.76271653175354
    4. ' init' → logprob: -5.512716770172119
    5. ' initialize' → logprob: -5.762716770172119
    6. ' def' → logprob: -7.012716770172119
    7. '_init' → logprob: -7.137716770172119
    8. ' find' → logprob: -7.137716770172119
    9. '_' → logprob: -7.262716770172119
    10. ' get' → logprob: -7.637716770172119

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.842555426876061e-06
    2. 'i' → logprob: -12.750004768371582
    3. 'ini' → logprob: -13.500004768371582
    4. 'in' → logprob: -14.875004768371582
    5. ' init' → logprob: -15.375004768371582
    6. '_init' → logprob: -18.3750057220459
    7. 'innit' → logprob: -18.7500057220459
    8. 'inite' → logprob: -19.1250057220459
    9. '_i' → logprob: -19.5000057220459
    10. 'int' → logprob: -19.5000057220459

Token 18: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.25255852937698364
    2. '__' → logprob: -1.5025584697723389
    3. '__(
' → logprob: -7.752558708190918
    4. '__((' → logprob: -9.752558708190918
    5. '(' → logprob: -10.377558708190918
    6. '(self' → logprob: -10.502558708190918
    7. '___' → logprob: -10.752558708190918
    8. '_' → logprob: -10.752558708190918
    9. '__('' → logprob: -11.127558708190918
    10. '__(*' → logprob: -11.252558708190918

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001171056181192398
    2. ' self' → logprob: -6.751171112060547
    3. '(self' → logprob: -14.751171112060547
    4. ')' → logprob: -15.626171112060547
    5. '       ' → logprob: -16.126171112060547
    6. '   ' → logprob: -16.126171112060547
    7. ' ' → logprob: -16.126171112060547
    8. '	self' → logprob: -17.876171112060547
    9. ',self' → logprob: -18.251171112060547
    10. '0' → logprob: -18.501171112060547

Token 20: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030244918540120125
    2. 'self' → logprob: -4.530244827270508
    3. ')' → logprob: -4.780244827270508
    4. ' ,' → logprob: -4.905244827270508
    5. ' self' → logprob: -6.655244827270508
    6. '(self' → logprob: -7.280244827270508
    7. ',self' → logprob: -7.280244827270508
    8. ' )' → logprob: -8.280244827270508
    9. '<|end|>' → logprob: -8.905244827270508
    10. ' ' → logprob: -10.280244827270508

Token 21: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3305712640285492
    2. ' self' → logprob: -1.4555712938308716
    3. '       ' → logprob: -3.205571174621582
    4. '        ' → logprob: -5.830571174621582
    5. '    ' → logprob: -6.080571174621582
    6. '   ' → logprob: -6.455571174621582
    7. ' ' → logprob: -7.705571174621582
    8. ' None' → logprob: -8.955571174621582
    9. ' ' → logprob: -9.330571174621582
    10. '     ' → logprob: -9.455571174621582

Token 22: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.31997862458229065
    2. 'self' (adapté à ' self') → logprob: -1.3199785947799683
    3. '       ' → logprob: -5.069978713989258
    4. ' ' → logprob: -8.194978713989258
    5. '   ' → logprob: -9.319978713989258
    6. '        ' → logprob: -10.944978713989258
    7. ' ' → logprob: -11.319978713989258
    8. '	self' → logprob: -11.819978713989258
    9. '    ' → logprob: -12.319978713989258
    10. ' None' → logprob: -13.944978713989258

Token 23: '.root' (ID: 25375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023302778601646423
    2. '.root' → logprob: -3.7733027935028076
    3. ' .' → logprob: -9.898303031921387
    4. 'root' → logprob: -13.523303031921387
    5. '.ro' → logprob: -13.648303031921387
    6. ' ' → logprob: -13.773303031921387
    7. '.user' → logprob: -14.398303031921387
    8. '.parent' → logprob: -14.523303031921387
    9. '.next' → logprob: -15.148303031921387
    10. '._' → logprob: -15.148303031921387

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002098023891449
    2. '=' → logprob: -2.3502097129821777
    3. ' ' → logprob: -13.350210189819336
    4. '=None' → logprob: -14.100210189819336
    5. ' =
' → logprob: -15.350210189819336
    6. '<|end|>' → logprob: -15.350210189819336
    7. ' =)' → logprob: -15.975210189819336
    8. '   ' → logprob: -17.100210189819336
    9. ')' → logprob: -17.225210189819336
    10. ' is' → logprob: -17.350210189819336

Token 25: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0380416102707386
    2. 'None' → logprob: -3.288041591644287
    3. '(None' → logprob: -16.413042068481445
    4. ',None' → logprob: -16.788042068481445
    5. '_None' → logprob: -16.788042068481445
    6. ' ' → logprob: -17.788042068481445
    7. '=None' → logprob: -17.788042068481445
    8. '.None' → logprob: -18.038042068481445
    9. ' ' → logprob: -19.538042068481445
    10. ' N' → logprob: -19.788042068481445

Token 26: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.271203875541687
    2. '<|end|>' → logprob: -1.521203875541687
    3. '   ' → logprob: -4.896203994750977
    4. '

' → logprob: -5.646203994750977
    5. '    
' → logprob: -6.021203994750977
    6. '<|end|>' → logprob: -6.271203994750977
    7. '\n' → logprob: -6.896203994750977
    8. ' 
' → logprob: -7.146203994750977
    9. '```' → logprob: -8.271203994750977
    10. 'def' → logprob: -8.396203994750977

Token 27: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6373022198677063
    2. '   ' → logprob: -1.0123021602630615
    3. '    
' → logprob: -3.3873021602630615
    4. 'def' → logprob: -3.5123021602630615
    5. '<|end|>' → logprob: -3.5123021602630615
    6. '```' → logprob: -5.512302398681641
    7. ' 
' → logprob: -5.762302398681641
    8. ' def' → logprob: -6.262302398681641
    9. '\n' → logprob: -6.637302398681641
    10. '  
' → logprob: -6.887302398681641

Token 28: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6414276957511902
    2. '   ' → logprob: -1.016427755355835
    3. ' def' → logprob: -2.266427755355835
    4. '
' → logprob: -6.016427516937256
    5. '```' → logprob: -6.016427516937256
    6. '    
' → logprob: -7.016427516937256
    7. '	def' → logprob: -7.516427516937256
    8. ' ' → logprob: -7.766427516937256
    9. '<|end|>' → logprob: -8.016427993774414
    10. '    ' → logprob: -8.516427993774414

Token 29: ' insert' (ID: 10898)
  Prédit: ' insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.021290214732289314
    2. 'insert' → logprob: -4.271290302276611
    3. '_insert' → logprob: -5.521290302276611
    4. ' ' → logprob: -6.396290302276611
    5. ' search' → logprob: -7.646290302276611
    6. ' find' → logprob: -7.771290302276611
    7. ' root' → logprob: -9.521289825439453
    8. ' space' → logprob: -9.521289825439453
    9. ' contains' → logprob: -9.771289825439453
    10. ' _' → logprob: -9.771289825439453

Token 30: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05399629473686218
    2. '(self' → logprob: -3.3039963245391846
    3. ' (' → logprob: -4.6789960861206055
    4. '<|end|>' → logprob: -5.1789960861206055
    5. ' ' → logprob: -7.8039960861206055
    6. '<|end|>' → logprob: -8.178996086120605
    7. '(
' → logprob: -9.928996086120605
    8. 'self' → logprob: -10.303996086120605
    9. '(s' → logprob: -11.053996086120605
    10. '```' → logprob: -11.178996086120605

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020702460780739784
    2. ' ,' → logprob: -3.895702362060547
    3. 'self' → logprob: -9.145702362060547
    4. ',self' → logprob: -11.145702362060547
    5. ',node' → logprob: -11.270702362060547
    6. ' self' → logprob: -11.395702362060547
    7. ')' → logprob: -11.770702362060547
    8. ' )' → logprob: -12.895702362060547
    9. '<|end|>' → logprob: -12.895702362060547
    10. ' ' → logprob: -14.395702362060547

Token 32: ' key' (ID: 2140)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.5492119789123535
    2. ' key' → logprob: -1.2992119789123535
    3. 'value' → logprob: -2.6742119789123535
    4. ' node' → logprob: -3.5492119789123535
    5. ' data' → logprob: -3.7992119789123535
    6. ' val' → logprob: -4.5492119789123535
    7. ' self' → logprob: -5.0492119789123535
    8. 'key' → logprob: -5.5492119789123535
    9. ' root' → logprob: -5.5492119789123535
    10. 'data' → logprob: -5.9242119789123535

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08090359717607498
    2. ',' → logprob: -2.5809035301208496
    3. ')' → logprob: -6.45590353012085
    4. ' ):' → logprob: -8.080904006958008
    5. '):
' → logprob: -9.580904006958008
    6. ' ,' → logprob: -11.080904006958008
    7. 'self' → logprob: -11.330904006958008
    8. '   ' → logprob: -11.455904006958008
    9. ':' → logprob: -12.080904006958008
    10. ' )' → logprob: -12.705904006958008

Token 34: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8907160758972168
    2. ':' → logprob: -1.7657160758972168
    3. '<|end|>' → logprob: -1.7657160758972168
    4. '       ' → logprob: -2.015716075897217
    5. '
' → logprob: -3.640716075897217
    6. '   ' → logprob: -4.140716075897217
    7. ')' → logprob: -4.140716075897217
    8. ' 
' → logprob: -4.515716075897217
    9. ':
' → logprob: -4.640716075897217
    10. '    ' → logprob: -5.140716075897217

Token 35: ' new' (ID: 620)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1277448683977127
    2. ' pass' → logprob: -2.5027449131011963
    3. ' if' → logprob: -4.127744674682617
    4. ' 
' → logprob: -4.377744674682617
    5. 'pass' → logprob: -5.877744674682617
    6. '        ' → logprob: -6.127744674682617
    7. 'if' → logprob: -6.502744674682617
    8. '#' → logprob: -7.252744674682617
    9. ' node' → logprob: -7.877744674682617
    10. ' #' → logprob: -8.002744674682617

Token 36: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.3942476809024811
    2. ' ' → logprob: -1.7692476511001587
    3. ' _' → logprob: -2.5192477703094482
    4. '_' → logprob: -2.6442477703094482
    5. 'Node' → logprob: -6.644247531890869
    6. ' =' → logprob: -7.269247531890869
    7. '_space' → logprob: -8.019248008728027
    8. ')' → logprob: -8.144248008728027
    9. '._' → logprob: -8.644248008728027
    10. '_Node' → logprob: -8.894248008728027

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010561492526903749
    2. '=' → logprob: -6.87605619430542
    3. ' ' → logprob: -10.751055717468262
    4. ')' → logprob: -13.501055717468262
    5. '.' → logprob: -15.626055717468262
    6. 'space' → logprob: -15.876055717468262
    7. '  ' → logprob: -16.376056671142578
    8. ' =
' → logprob: -16.376056671142578
    9. '_space' → logprob: -17.126056671142578
    10. '    ' → logprob: -17.626056671142578

Token 38: ' [' (ID: 723)
  Prédit: ' Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.07606237381696701
    2. 'Node' → logprob: -3.4510624408721924
    3. ' Tree' → logprob: -3.7010624408721924
    4. ' self' → logprob: -4.951062202453613
    5. ' ' → logprob: -5.951062202453613
    6. 'self' → logprob: -6.326062202453613
    7. ' {'' → logprob: -6.701062202453613
    8. '	Node' → logprob: -6.951062202453613
    9. ' Binary' → logprob: -7.201062202453613
    10. 'Tree' → logprob: -7.701062202453613

Token 39: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.1574544459581375
    2. ' key' → logprob: -2.157454490661621
    3. '(key' → logprob: -4.032454490661621
    4. 'None' → logprob: -5.282454490661621
    5. '{'' → logprob: -5.657454490661621
    6. '[key' → logprob: -7.032454490661621
    7. ' {'' → logprob: -7.032454490661621
    8. ' None' → logprob: -7.157454490661621
    9. '{' → logprob: -7.532454490661621
    10. '(None' → logprob: -8.282454490661621

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007506298366934061
    2. ']' → logprob: -5.132506370544434
    3. ',None' → logprob: -7.132506370544434
    4. 'None' → logprob: -7.507506370544434
    5. ' ,' → logprob: -9.132506370544434
    6. ' ]' → logprob: -10.382506370544434
    7. ' None' → logprob: -10.507506370544434
    8. ',null' → logprob: -10.507506370544434
    9. ',
' → logprob: -11.382506370544434
    10. ')' → logprob: -11.882506370544434

Token 41: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3873094320297241
    2. 'None' → logprob: -1.1373094320297241
    3. ',None' → logprob: -9.137309074401855
    4. ' left' → logprob: -9.387309074401855
    5. '[],' → logprob: -10.262309074401855
    6. ' [' → logprob: -10.512309074401855
    7. '(None' → logprob: -10.637309074401855
    8. ' [],' → logprob: -10.762309074401855
    9. 'left' → logprob: -10.762309074401855
    10. '[' → logprob: -10.762309074401855

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00047166430158540606
    2. ',None' → logprob: -8.250472068786621
    3. ' ,' → logprob: -8.500472068786621
    4. ',null' → logprob: -13.000472068786621
    5. 'None' → logprob: -13.375472068786621
    6. ']' → logprob: -13.875472068786621
    7. '<|end|>' → logprob: -14.750472068786621
    8. ' None' → logprob: -15.000472068786621
    9. ',
' → logprob: -15.250472068786621
    10. ')' → logprob: -15.250472068786621

Token 43: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.348508358001709
    2. 'None' → logprob: -1.223508358001709
    3. ',None' → logprob: -10.098508834838867
    4. '(None' → logprob: -11.723508834838867
    5. '   ' → logprob: -12.473508834838867
    6. '_None' → logprob: -12.723508834838867
    7. ' ' → logprob: -12.973508834838867
    8. '  ' → logprob: -13.223508834838867
    9. '=None' → logprob: -13.473508834838867
    10. '    ' → logprob: -13.723508834838867

Token 44: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011117222311440855
    2. ' ]' → logprob: -9.62511157989502
    3. ',' → logprob: -10.87511157989502
    4. '   ' → logprob: -11.62511157989502
    5. ']
' → logprob: -12.00011157989502
    6. ')' → logprob: -12.12511157989502
    7. '       ' → logprob: -12.75011157989502
    8. '<|end|>' → logprob: -13.75011157989502
    9. ' ' → logprob: -14.75011157989502
    10. ']

' → logprob: -15.00011157989502

Token 45: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22256174683570862
    2. '       ' → logprob: -2.472561836242676
    3. '<|end|>' → logprob: -2.597561836242676
    4. ' if' → logprob: -4.097561836242676
    5. ' 
' → logprob: -5.097561836242676
    6. '        
' → logprob: -5.222561836242676
    7. 'if' → logprob: -5.347561836242676
    8. '  
' → logprob: -5.972561836242676
    9. ' ' → logprob: -6.597561836242676
    10. ',' → logprob: -6.847561836242676

Token 46: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005305858328938484
    2. ' if' → logprob: -5.255305767059326
    3. '       ' → logprob: -10.005306243896484
    4. 'current' → logprob: -11.005306243896484
    5. ')' → logprob: -12.630306243896484
    6. 'def' → logprob: -13.130306243896484
    7. 'node' → logprob: -14.005306243896484
    8. '   ' → logprob: -14.005306243896484
    9. '        
' → logprob: -14.255306243896484
    10. '```' → logprob: -14.505306243896484

Token 47: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.001957179047167301
    2. 'self' → logprob: -6.251957416534424
    3. ' not' → logprob: -10.876956939697266
    4. ' ' → logprob: -11.626956939697266
    5. ' ' → logprob: -14.251956939697266
    6. '	self' → logprob: -16.626956939697266
    7. '_self' → logprob: -17.251956939697266
    8. '(self' → logprob: -17.626956939697266
    9. '  ' → logprob: -18.626956939697266
    10. 'Self' → logprob: -18.689456939697266

Token 48: '.root' (ID: 25375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7223235368728638
    2. '.root' → logprob: -0.8473235368728638
    3. ' .' → logprob: -2.472323417663574
    4. 'root' → logprob: -6.722323417663574
    5. ' ' → logprob: -9.847323417663574
    6. '[root' → logprob: -10.222323417663574
    7. '.user' → logprob: -10.347323417663574
    8. ' root' → logprob: -10.972323417663574
    9. '
' → logprob: -10.972323417663574
    10. '

' → logprob: -12.097323417663574

Token 49: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00029995047952979803
    2. 'is' → logprob: -8.125300407409668
    3. ' ' → logprob: -12.625300407409668
    4. ' ==' → logprob: -14.500300407409668
    5. '==' → logprob: -16.75029945373535
    6. ' )' → logprob: -17.00029945373535
    7. ' None' → logprob: -17.25029945373535
    8. ' ' → logprob: -18.00029945373535
    9. ')' → logprob: -18.37529945373535
    10. ' =' → logprob: -18.75029945373535

Token 50: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.0052342405542731285
    2. 'None' → logprob: -5.255234241485596
    3. ' ' → logprob: -14.755233764648438
    4. ' not' → logprob: -17.255233764648438
    5. '(None' → logprob: -17.505233764648438
    6. '_None' → logprob: -18.255233764648438
    7. '=None' → logprob: -18.380233764648438
    8. ' none' → logprob: -19.130233764648438
    9. ',None' → logprob: -19.380233764648438
    10. ' N' → logprob: -19.755233764648438

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.421908958349377e-05
    2. '):' → logprob: -10.25007438659668
    3. ':
' → logprob: -11.00007438659668
    4. ' :' → logprob: -11.12507438659668
    5. ',' → logprob: -12.62507438659668
    6. '<|end|>' → logprob: -13.37507438659668
    7. '():' → logprob: -14.37507438659668
    8. ':**' → logprob: -14.50007438659668
    9. '=' → logprob: -15.62507438659668
    10. ':return' → logprob: -15.75007438659668

Token 52: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2632351815700531
    2. '           ' → logprob: -1.5132352113723755
    3. '<|end|>' → logprob: -5.263235092163086
    4. ':
' → logprob: -5.888235092163086
    5. ',' → logprob: -6.888235092163086
    6. ' :' → logprob: -8.138235092163086
    7. '<|end|>' → logprob: -8.138235092163086
    8. '):' → logprob: -8.513235092163086
    9. '            
' → logprob: -8.763235092163086
    10. '```' → logprob: -8.763235092163086

Token 53: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04301757737994194
    2. 'self' (adapté à ' self') → logprob: -3.168017625808716
    3. '           ' → logprob: -11.793017387390137
    4. ' ' → logprob: -12.293017387390137
    5. '               ' → logprob: -12.918017387390137
    6. '	self' → logprob: -14.043017387390137
    7. ' 
' → logprob: -14.293017387390137
    8. ' ' → logprob: -14.543017387390137
    9. ' new' → logprob: -14.918017387390137
    10. '            ' → logprob: -14.918017387390137

Token 54: '.root' (ID: 25375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09951678663492203
    2. '.root' → logprob: -2.4745168685913086
    3. ' .' → logprob: -4.599516868591309
    4. '<|end|>' → logprob: -8.974516868591309
    5. ' ' → logprob: -9.349516868591309
    6. 'root' → logprob: -9.599516868591309
    7. '<|end|>' → logprob: -10.724516868591309
    8. '[root' → logprob: -11.099516868591309
    9. '.user' → logprob: -11.474516868591309
    10. '.space' → logprob: -11.599516868591309

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016039058566093445
    2. '=' → logprob: -4.14103889465332
    3. ' ' → logprob: -12.39103889465332
    4. ' =[' → logprob: -15.01603889465332
    5. ' is' → logprob: -16.14103889465332
    6. ' =)' → logprob: -17.01603889465332
    7. ' =
' → logprob: -17.14103889465332
    8. '<|end|>' → logprob: -17.39103889465332
    9. ' ='' → logprob: -18.01603889465332
    10. ')' → logprob: -18.14103889465332

Token 56: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.04858771339058876
    2. 'new' → logprob: -3.0485877990722656
    3. '新' → logprob: -16.673587799072266
    4. ' ' → logprob: -17.048587799072266
    5. '[new' → logprob: -17.423587799072266
    6. '	new' → logprob: -17.923587799072266
    7. '```' → logprob: -18.048587799072266
    8. ')new' → logprob: -18.298587799072266
    9. ' ' → logprob: -19.048587799072266
    10. '_new' → logprob: -19.298587799072266

Token 57: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0004195906512904912
    2. '_' → logprob: -7.875419616699219
    3. '_token' → logprob: -10.750419616699219
    4. ' _' → logprob: -11.375419616699219
    5. 'w' → logprob: -13.500419616699219
    6. '_n' → logprob: -13.750419616699219
    7. '_w' → logprob: -14.000419616699219
    8. '_nodes' → logprob: -14.250419616699219
    9. '_NODE' → logprob: -15.000419616699219
    10. '_Node' → logprob: -15.125419616699219

Token 58: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3155009150505066
    2. '       ' → logprob: -1.3155009746551514
    3. '
' → logprob: -6.815500736236572
    4. 'return' → logprob: -7.190500736236572
    5. 'else' → logprob: -9.56550121307373
    6. '            
' → logprob: -9.69050121307373
    7. '<|end|>' → logprob: -9.94050121307373
    8. '   ' → logprob: -10.56550121307373
    9. '    
' → logprob: -10.69050121307373
    10. '        
' → logprob: -10.81550121307373

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16143417358398438
    2. '       ' → logprob: -1.9114341735839844
    3. '
' → logprob: -7.536434173583984
    4. 'return' → logprob: -9.286434173583984
    5. '```' → logprob: -9.286434173583984
    6. 'else' → logprob: -9.536434173583984
    7. '   ' → logprob: -9.536434173583984
    8. '            
' → logprob: -9.911434173583984
    9. '<|end|>' → logprob: -9.911434173583984
    10. ' else' → logprob: -10.036434173583984

Token 60: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39711299538612366
    2. ' return' → logprob: -1.3971129655838013
    3. '           ' → logprob: -2.522113084793091
    4. '       ' → logprob: -9.022112846374512
    5. '   ' → logprob: -12.147112846374512
    6. ':return' → logprob: -12.522112846374512
    7. '               ' → logprob: -12.647112846374512
    8. '	return' → logprob: -12.772112846374512
    9. '          ' → logprob: -14.022112846374512
    10. '
' → logprob: -14.147112846374512

Token 61: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4304903745651245
    2. ' 
' → logprob: -1.3054903745651245
    3. '       ' → logprob: -2.930490493774414
    4. '        
' → logprob: -3.930490493774414
    5. '  
' → logprob: -6.430490493774414
    6. '
        
' → logprob: -6.930490493774414
    7. '    
' → logprob: -7.430490493774414
    8. ' 

' → logprob: -7.555490493774414
    9. '        ' → logprob: -8.305490493774414
    10. '     
' → logprob: -8.430490493774414

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9098779559135437
    2. 'current' → logprob: -1.1598780155181885
    3. ' current' → logprob: -1.4098780155181885
    4. '   ' → logprob: -3.9098780155181885
    5. 'node' → logprob: -4.534877777099609
    6. ' node' → logprob: -5.034877777099609
    7. '        
' → logprob: -7.284877777099609
    8. '
' → logprob: -8.15987777709961
    9. 'curr' → logprob: -8.28487777709961
    10. ' if' → logprob: -8.90987777709961

Token 63: ' parent' (ID: 5980)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.08972557634115219
    2. 'node' → logprob: -3.0897254943847656
    3. ' current' → logprob: -3.3397254943847656
    4. '       ' → logprob: -5.964725494384766
    5. ' node' → logprob: -6.464725494384766
    6. 'curr' → logprob: -8.214725494384766
    7. '   ' → logprob: -8.714725494384766
    8. 'stack' → logprob: -8.839725494384766
    9. 'cur' → logprob: -9.214725494384766
    10. 'def' → logprob: -11.214725494384766

Token 64: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011392860673367977
    2. '=' → logprob: -4.511393070220947
    3. ',' → logprob: -8.136392593383789
    4. ' ' → logprob: -10.011392593383789
    5. '=node' → logprob: -13.011392593383789
    6. '    ' → logprob: -14.136392593383789
    7. ' ,' → logprob: -14.261392593383789
    8. '   ' → logprob: -14.261392593383789
    9. ',node' → logprob: -14.636392593383789
    10. '=current' → logprob: -14.636392593383789

Token 65: ' child' (ID: 2320)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.32497265934944153
    2. ' current' → logprob: -1.9499726295471191
    3. 'node' → logprob: -2.449972629547119
    4. 'self' → logprob: -3.824972629547119
    5. ' node' → logprob: -4.574972629547119
    6. 'child' → logprob: -4.949972629547119
    7. 'curr' → logprob: -5.699972629547119
    8. ' self' → logprob: -6.074972629547119
    9. 'cur' → logprob: -6.199972629547119
    10. ' curr' → logprob: -7.324972629547119

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023406775668263435
    2. '=' → logprob: -3.773406744003296
    3. ' ' → logprob: -9.398406982421875
    4. ',' → logprob: -9.523406982421875
    5. '    ' → logprob: -13.273406982421875
    6. '  ' → logprob: -14.273406982421875
    7. '   ' → logprob: -14.273406982421875
    8. 's' → logprob: -14.523406982421875
    9. ' ,' → logprob: -14.648406982421875
    10. '=self' → logprob: -15.273406982421875

Token 67: ' None' (ID: 4662)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1798257976770401
    2. ' self' → logprob: -1.804825782775879
    3. '(self' → logprob: -10.554825782775879
    4. '    ' → logprob: -10.804825782775879
    5. '       ' → logprob: -11.179825782775879
    6. '   ' → logprob: -11.429825782775879
    7. '        ' → logprob: -13.304825782775879
    8. ' ' → logprob: -13.554825782775879
    9. '	self' → logprob: -13.679825782775879
    10. ' (' → logprob: -13.679825782775879

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013916619354858994
    2. ' ,' → logprob: -7.001391887664795
    3. ',self' → logprob: -8.126391410827637
    4. '<|end|>' → logprob: -9.501391410827637
    5. ' =' → logprob: -10.126391410827637
    6. 'self' → logprob: -10.251391410827637
    7. '=' → logprob: -11.876391410827637
    8. '       ' → logprob: -12.501391410827637
    9. '<|end|>' → logprob: -12.626391410827637
    10. 's' → logprob: -12.626391410827637

Token 69: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03806065768003464
    2. ' self' → logprob: -3.2880606651306152
    3. '<|end|>' → logprob: -12.163060188293457
    4. ' ' → logprob: -12.288060188293457
    5. '   ' → logprob: -12.413060188293457
    6. '  ' → logprob: -13.288060188293457
    7. '       ' → logprob: -13.538060188293457
    8. '	self' → logprob: -14.038060188293457
    9. '    ' → logprob: -14.663060188293457
    10. '[self' → logprob: -15.413060188293457

Token 70: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.026942571625113487
    2. '.' → logprob: -3.651942491531372
    3. 'root' → logprob: -7.776942729949951
    4. ' .' → logprob: -8.651942253112793
    5. '.ro' → logprob: -10.651942253112793
    6. '[root' → logprob: -11.776942253112793
    7. '.
' → logprob: -12.651942253112793
    8. ' root' → logprob: -13.026942253112793
    9. '.user' → logprob: -13.526942253112793
    10. '
' → logprob: -14.276942253112793

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0037488907109946012
    2. ' 
' → logprob: -7.003748893737793
    3. 'while' → logprob: -7.003748893737793
    4. '
' → logprob: -7.128748893737793
    5. '<|end|>' → logprob: -7.628748893737793
    6. ' while' → logprob: -8.753748893737793
    7. '

' → logprob: -8.753748893737793
    8. '  
' → logprob: -8.878748893737793
    9. '\n' → logprob: -9.628748893737793
    10. '<|end|>' → logprob: -10.378748893737793

Token 72: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05513197183609009
    2. ' 
' → logprob: -3.6801319122314453
    3. '<|end|>' → logprob: -3.8051319122314453
    4. '  
' → logprob: -6.180131912231445
    5. '
' → logprob: -7.055131912231445
    6. '\n' → logprob: -7.430131912231445
    7. 'while' → logprob: -7.555131912231445
    8. ' while' → logprob: -7.555131912231445
    9. '        
' → logprob: -7.805131912231445
    10. '<|end|>' → logprob: -7.930131912231445

Token 73: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.4741393029689789
    2. 'child' → logprob: -0.9741393327713013
    3. '	child' → logprob: -10.349139213562012
    4. '(child' → logprob: -10.849139213562012
    5. 'Child' → logprob: -12.474139213562012
    6. '_child' → logprob: -12.724139213562012
    7. ' ' → logprob: -13.599139213562012
    8. '   ' → logprob: -14.099139213562012
    9. '.child' → logprob: -14.224139213562012
    10. '<|end|>' → logprob: -14.849139213562012

Token 75: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007229862734675407
    2. 'is' → logprob: -5.257229804992676
    3. ' and' → logprob: -6.382229804992676
    4. 'and' → logprob: -8.132229804992676
    5. '<|end|>' → logprob: -13.132229804992676
    6. ':' → logprob: -13.257229804992676
    7. '[' → logprob: -13.382229804992676
    8. ' ' → logprob: -13.507229804992676
    9. '	is' → logprob: -14.257229804992676
    10. 's' → logprob: -14.507229804992676

Token 76: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' parent' (ID: 5980)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.22847655415534973
    2. 'if' → logprob: -2.9784765243530273
    3. '<|end|>' → logprob: -2.9784765243530273
    4. '        ' → logprob: -3.3534765243530273
    5. '           ' → logprob: -3.4784765243530273
    6. '       ' → logprob: -4.103476524353027
    7. ' ' → logprob: -5.353476524353027
    8. '            ' → logprob: -5.478476524353027
    9. 'parent' (adapté à ' parent') → logprob: -5.728476524353027
    10. '    ' → logprob: -5.728476524353027

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.032502319663763046
    2. '=' → logprob: -3.6575024127960205
    3. ',' → logprob: -5.157502174377441
    4. ' ' → logprob: -8.657502174377441
    5. '<|end|>' → logprob: -8.657502174377441
    6. ' ,' → logprob: -10.657502174377441
    7. ' ==' → logprob: -11.907502174377441
    8. ' is' → logprob: -11.907502174377441
    9. 's' → logprob: -12.032502174377441
    10. ')' → logprob: -12.032502174377441

Token 79: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.4740939140319824
    2. ' child' → logprob: -0.9740939140319824
    3. '	child' → logprob: -11.09909439086914
    4. '(child' → logprob: -14.59909439086914
    5. '_child' → logprob: -14.72409439086914
    6. '.child' → logprob: -14.72409439086914
    7. 'c' → logprob: -15.47409439086914
    8. '[' → logprob: -15.84909439086914
    9. ' ' → logprob: -16.59909439086914
    10. ' child's' → logprob: -16.72409439086914

Token 80: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19210797548294067
    2. ' if' → logprob: -2.567107915878296
    3. ' 
' → logprob: -3.567107915878296
    4. '           ' → logprob: -3.567107915878296
    5. '[' → logprob: -4.317108154296875
    6. '            
' → logprob: -5.192108154296875
    7. '       ' → logprob: -5.192108154296875
    8. 'if' → logprob: -5.192108154296875
    9. '<|end|>' → logprob: -5.817108154296875
    10. '
' → logprob: -5.942108154296875

Token 81: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.46490153670310974
    2. ' if' → logprob: -1.4649015665054321
    3. '
' → logprob: -2.4649014472961426
    4. '           ' → logprob: -4.089901447296143
    5. '       ' → logprob: -4.214901447296143
    6. '[' → logprob: -4.839901447296143
    7. 'if' → logprob: -5.089901447296143
    8. '            
' → logprob: -5.964901447296143
    9. '        
' → logprob: -6.589901447296143
    10. '  
' → logprob: -6.589901447296143

Token 82: ' child' (ID: 2320)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8153393864631653
    2. ' if' → logprob: -0.8153393864631653
    3. ' child' → logprob: -2.5653393268585205
    4. 'child' (adapté à ' child') → logprob: -3.4403393268585205
    5. ' key' → logprob: -5.3153395652771
    6. 'key' → logprob: -7.3153395652771
    7. '           ' → logprob: -8.690339088439941
    8. '[' → logprob: -9.565339088439941
    9. '       ' → logprob: -9.565339088439941
    10. ' new' → logprob: -9.940339088439941

Token 83: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008847849443554878
    2. ' ' → logprob: -5.133847713470459
    3. '[' → logprob: -6.258847713470459
    4. '=' → logprob: -7.008847713470459
    5. ',' → logprob: -10.883848190307617
    6. '<|end|>' → logprob: -11.008848190307617
    7. ' =[' → logprob: -11.008848190307617
    8. '_' → logprob: -11.758848190307617
    9. 's' → logprob: -12.133848190307617
    10. ' <<=' → logprob: -12.633848190307617

Token 84: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.5760157704353333
    2. ' child' → logprob: -0.8260157704353333
    3. '	child' → logprob: -9.70101547241211
    4. 'parent' → logprob: -11.95101547241211
    5. '(child' → logprob: -12.95101547241211
    6. ' parent' → logprob: -13.20101547241211
    7. '.child' → logprob: -13.82601547241211
    8. ' ' → logprob: -14.07601547241211
    9. '   ' → logprob: -14.45101547241211
    10. '[' → logprob: -15.07601547241211

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -13.12500286102295
    3. '```' → logprob: -14.87500286102295
    4. '2' → logprob: -15.50000286102295
    5. ' [' → logprob: -15.62500286102295
    6. '[-' → logprob: -15.87500286102295
    7. '[
' → logprob: -16.125003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '\[' → logprob: -18.000003814697266
    10. '>[' → logprob: -18.125003814697266

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5018702149391174
    2. '0' → logprob: -1.0018701553344727
    3. '2' → logprob: -3.6268701553344727
    4. 'int' → logprob: -8.501870155334473
    5. 'key' → logprob: -8.626870155334473
    6. ' ' → logprob: -8.876870155334473
    7. '   ' → logprob: -9.501870155334473
    8. '-' → logprob: -10.126870155334473
    9. '
' → logprob: -10.314370155334473
    10. '```' → logprob: -10.939370155334473

Token 87: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.008743155747652054
    2. 'if' → logprob: -4.7587432861328125
    3. ']' → logprob: -9.758743286132812
    4. '<|end|>' → logprob: -9.758743286132812
    5. ' ' → logprob: -12.008743286132812
    6. '	if' → logprob: -12.883743286132812
    7. ' ]' → logprob: -13.133743286132812
    8. '<|end|>' → logprob: -13.508743286132812
    9. '
' → logprob: -15.258743286132812
    10. '  ' → logprob: -15.883743286132812

Token 88: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20142921805381775
    2. 'if' → logprob: -1.7014292478561401
    3. '<|end|>' → logprob: -12.07642936706543
    4. '           ' → logprob: -12.82642936706543
    5. '	if' → logprob: -13.32642936706543
    6. '          ' → logprob: -13.95142936706543
    7. ' ' → logprob: -14.07642936706543
    8. '   ' → logprob: -14.20142936706543
    9. '       ' → logprob: -14.45142936706543
    10. '  ' → logprob: -14.57642936706543

Token 89: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.31328994035720825
    2. 'key' → logprob: -1.3132898807525635
    3. '	key' → logprob: -10.563289642333984
    4. '(key' → logprob: -14.688289642333984
    5. '_key' → logprob: -15.188289642333984
    6. '   ' → logprob: -15.313289642333984
    7. 'new' → logprob: -15.313289642333984
    8. 'child' → logprob: -15.313289642333984
    9. ' new' → logprob: -15.438289642333984
    10. ' ' → logprob: -15.438289642333984

Token 90: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07912418991327286
    2. '<' → logprob: -2.5791242122650146
    3. ' ' → logprob: -9.204124450683594
    4. '<|end|>' → logprob: -9.454124450683594
    5. ' <",' → logprob: -11.204124450683594
    6. '[' → logprob: -11.954124450683594
    7. '<data' → logprob: -12.579124450683594
    8. '<int' → logprob: -12.829124450683594
    9. ' less' → logprob: -13.079124450683594
    10. '<size' → logprob: -13.141624450683594

Token 91: ' child' (ID: 2320)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.062100671231746674
    2. 'parent' → logprob: -2.812100648880005
    3. ' child' → logprob: -9.062100410461426
    4. 'child' → logprob: -12.187100410461426
    5. '	parent' → logprob: -12.312100410461426
    6. ' key' → logprob: -12.562100410461426
    7. '(parent' → logprob: -13.312100410461426
    8. '[parent' → logprob: -13.562100410461426
    9. ' ' → logprob: -14.812100410461426
    10. '_parent' → logprob: -15.687100410461426

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.511406809295295e-06
    2. ' [' → logprob: -12.375006675720215
    3. '[
' → logprob: -13.750006675720215
    4. '0' → logprob: -14.750006675720215
    5. '```' → logprob: -15.750006675720215
    6. '   ' → logprob: -16.0000057220459
    7. ' else' → logprob: -16.2500057220459
    8. '][' → logprob: -16.7500057220459
    9. '1' → logprob: -16.7500057220459
    10. ' ' → logprob: -17.0000057220459

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.464347173576243e-05
    2. ' ' → logprob: -10.87503433227539
    3. '[' → logprob: -11.75003433227539
    4. '1' → logprob: -12.25003433227539
    5. '   ' → logprob: -14.12503433227539
    6. 'key' → logprob: -14.50003433227539
    7. '```' → logprob: -15.00003433227539
    8. '  ' → logprob: -15.06253433227539
    9. '2' → logprob: -15.87503433227539
    10. ']' → logprob: -16.00003433227539

Token 94: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003136366605758667
    2. ' else' → logprob: -5.878136157989502
    3. 'else' → logprob: -8.25313663482666
    4. ' ]' → logprob: -9.62813663482666
    5. '']' → logprob: -13.62813663482666
    6. '        ' → logprob: -13.75313663482666
    7. ')' → logprob: -13.75313663482666
    8. '       ' → logprob: -14.50313663482666
    9. '<|end|>' → logprob: -15.62813663482666
    10. '	else' → logprob: -15.62813663482666

Token 95: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.006716674659401178
    2. 'else' → logprob: -5.006716728210449
    3. '	else' → logprob: -13.63171672821045
    4. '        ' → logprob: -17.381715774536133
    5. '<|end|>' → logprob: -17.756715774536133
    6. '_else' → logprob: -17.881715774536133
    7. 'lse' → logprob: -18.506715774536133
    8. ' ' → logprob: -18.631715774536133
    9. '```' → logprob: -18.881715774536133
    10. '    ' → logprob: -19.006715774536133

Token 96: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.1426943689584732
    2. 'child' → logprob: -2.0176944732666016
    3. '	child' → logprob: -11.142694473266602
    4. ' ' → logprob: -13.267694473266602
    5. ' child's' → logprob: -14.267694473266602
    6. '.child' → logprob: -14.392694473266602
    7. '(child' → logprob: -14.392694473266602
    8. '[' → logprob: -15.392694473266602
    9. '   ' → logprob: -15.642694473266602
    10. ' ' → logprob: -15.767694473266602

Token 97: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1517960956552997e-05
    2. '2' → logprob: -11.500011444091797
    3. '3' → logprob: -13.875011444091797
    4. ' [' → logprob: -15.750011444091797
    5. '[
' → logprob: -16.375011444091797
    6. '```' → logprob: -16.500011444091797
    7. '   ' → logprob: -16.625011444091797
    8. '][' → logprob: -17.000011444091797
    9. ' ' → logprob: -17.625011444091797
    10. 's' → logprob: -18.000011444091797

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.875003814697266
    3. '   ' → logprob: -15.125003814697266
    4. '```' → logprob: -15.500003814697266
    5. '[' → logprob: -16.000003814697266
    6. '۲' → logprob: -17.062503814697266
    7. '  ' → logprob: -17.187503814697266
    8. ']' → logprob: -17.312503814697266
    9. '২' → logprob: -18.062503814697266
    10. '２' → logprob: -18.125003814697266

Token 99: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3890725374221802
    2. '<|end|>' → logprob: -1.1390725374221802
    3. '<|end|>' → logprob: -6.889072418212891
    4. ')' → logprob: -7.639072418212891
    5. ' ]' → logprob: -7.889072418212891
    6. '       ' → logprob: -9.01407241821289
    7. '
' → logprob: -10.01407241821289
    8. ']
' → logprob: -10.13907241821289
    9. '}' → logprob: -10.51407241821289
    10. ']>' → logprob: -10.88907241821289

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03588418290019035
    2. ' 
' → logprob: -4.285884380340576
    3. '        
' → logprob: -4.410884380340576
    4. '
' → logprob: -4.910884380340576
    5. '  
' → logprob: -7.785884380340576
    6. ')' → logprob: -8.035883903503418
    7. '    
' → logprob: -8.160883903503418
    8. '   ' → logprob: -8.660883903503418
    9. ' if' → logprob: -9.160883903503418
    10. '       
' → logprob: -9.160883903503418

Token 101: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21130624413490295
    2. '       ' → logprob: -1.8363062143325806
    3. 'if' (adapté à ' if') → logprob: -3.71130633354187
    4. '        ' → logprob: -5.711306095123291
    5. '    ' → logprob: -7.086306095123291
    6. ' )' → logprob: -7.711306095123291
    7. '   ' → logprob: -7.711306095123291
    8. ')' → logprob: -7.961306095123291
    9. '        
' → logprob: -8.08630657196045
    10. ' new' → logprob: -8.21130657196045

Token 102: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.00765833118930459
    2. 'key' → logprob: -4.8826584815979
    3. ' new' → logprob: -10.007658004760742
    4. 'new' → logprob: -12.757658004760742
    5. '	key' → logprob: -13.382658004760742
    6. '(key' → logprob: -14.007658004760742
    7. '   ' → logprob: -14.507658004760742
    8. ' ' → logprob: -14.632658004760742
    9. '[key' → logprob: -14.632658004760742
    10. '_key' → logprob: -15.632658004760742

Token 103: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.005237075500190258
    2. '<' → logprob: -5.255237102508545
    3. '[' → logprob: -12.880236625671387
    4. ' ' → logprob: -14.630236625671387
    5. ')' → logprob: -16.630237579345703
    6. ' ' → logprob: -17.380237579345703
    7. '   ' → logprob: -17.567737579345703
    8. '  ' → logprob: -17.755237579345703
    9. '<int' → logprob: -17.755237579345703
    10. '<|end|>' → logprob: -17.755237579345703

Token 104: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.007611005567014217
    2. 'parent' → logprob: -4.88261079788208
    3. '	parent' → logprob: -13.257611274719238
    4. '(parent' → logprob: -13.882611274719238
    5. '[parent' → logprob: -14.007611274719238
    6. ' ' → logprob: -14.632611274719238
    7. ' child' → logprob: -15.507611274719238
    8. ' ' → logprob: -15.632611274719238
    9. ' parent's' → logprob: -16.007610321044922
    10. '.parent' → logprob: -16.132610321044922

Token 105: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.5
    3. '   ' → logprob: -16.625
    4. '0' → logprob: -17.625
    5. '```' → logprob: -17.875
    6. '.' → logprob: -18.125
    7. ''s' → logprob: -18.625
    8. ' ' → logprob: -19.5
    9. ''[' → logprob: -19.5
    10. '[
' → logprob: -19.5

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.875000953674316
    3. ' ' → logprob: -16.500001907348633
    4. '۰' → logprob: -17.375001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '０' → logprob: -20.375001907348633
    7. '```' → logprob: -20.750001907348633
    8. '<|end|>' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.250001907348633
    10. '০' → logprob: -22.062501907348633

Token 107: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.1871117353439331
    2. ']' → logprob: -2.4371118545532227
    3. ']:
' → logprob: -2.5621118545532227
    4. ' ]' → logprob: -5.437111854553223
    5. ']:
' → logprob: -7.187111854553223
    6. '       ' → logprob: -7.437111854553223
    7. ':' → logprob: -8.562111854553223
    8. '           ' → logprob: -9.187111854553223
    9. ']:

' → logprob: -10.312111854553223
    10. '):' → logprob: -11.687111854553223

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03137589618563652
    2. ' parent' → logprob: -3.6563758850097656
    3. 'parent' → logprob: -6.031375885009766
    4. ' 
' → logprob: -6.406375885009766
    5. '            
' → logprob: -7.281375885009766
    6. '
' → logprob: -9.406375885009766
    7. '_parent' → logprob: -9.781375885009766
    8. '(parent' → logprob: -10.031375885009766
    9. '[parent' → logprob: -10.031375885009766
    10. '.parent' → logprob: -10.781375885009766

Token 109: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.07893186807632446
    2. 'parent' (adapté à ' parent') → logprob: -2.5789318084716797
    3. '           ' → logprob: -10.70393180847168
    4. ' child' → logprob: -11.82893180847168
    5. '[parent' → logprob: -12.20393180847168
    6. '_parent' → logprob: -13.32893180847168
    7. '.parent' → logprob: -13.45393180847168
    8. '(parent' → logprob: -13.45393180847168
    9. '	parent' → logprob: -13.70393180847168
    10. '[' → logprob: -14.95393180847168

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.034592388459714e-06
    2. ' [' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.000005722045898
    4. '1' → logprob: -16.3750057220459
    5. '][' → logprob: -16.8750057220459
    6. ' =' → logprob: -17.3750057220459
    7. '=' → logprob: -17.5000057220459
    8. '```' → logprob: -17.6250057220459
    9. ' ' → logprob: -17.7500057220459
    10. 's' → logprob: -17.8750057220459

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.250007629394531
    3. ' ' → logprob: -13.125007629394531
    4. '```' → logprob: -14.750007629394531
    5. '   ' → logprob: -15.250007629394531
    6. '' → logprob: -17.50000762939453
    7. '`' → logprob: -17.75000762939453
    8. '][' → logprob: -18.37500762939453
    9. '  ' → logprob: -18.62500762939453
    10. ']' → logprob: -18.62500762939453

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.034330837428569794
    2. ' =' → logprob: -3.7843308448791504
    3. ' ]' → logprob: -5.28433084487915
    4. '=' → logprob: -5.28433084487915
    5. ']=' → logprob: -7.03433084487915
    6. ')' → logprob: -14.034330368041992
    7. ' ' → logprob: -14.784330368041992
    8. '<|end|>' → logprob: -14.784330368041992
    9. '']' → logprob: -16.784330368041992
    10. '=new' → logprob: -17.284330368041992

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.251930832862854
    2. '=' → logprob: -1.501930832862854
    3. '=new' → logprob: -13.876931190490723
    4. ' ' → logprob: -14.501931190490723
    5. ' new' → logprob: -15.126931190490723
    6. '＝' → logprob: -17.126930236816406
    7. 'new' → logprob: -17.501930236816406
    8. ' =[' → logprob: -17.876930236816406
    9. ')' → logprob: -19.001930236816406
    10. ' =
' → logprob: -19.251930236816406

Token 114: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.12692853808403015
    2. ' new' → logprob: -2.1269285678863525
    3. '新' → logprob: -15.126928329467773
    4. 'New' → logprob: -16.876928329467773
    5. '	new' → logprob: -17.001928329467773
    6. '[new' → logprob: -17.501928329467773
    7. '   ' → logprob: -17.876928329467773
    8. '_new' → logprob: -18.501928329467773
    9. ' ' → logprob: -18.626928329467773
    10. '           ' → logprob: -18.876928329467773

Token 115: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -12.000009536743164
    3. ' _' → logprob: -12.750009536743164
    4. '_token' → logprob: -15.625009536743164
    5. 'node' → logprob: -15.875009536743164
    6. '_NODE' → logprob: -16.000009536743164
    7. '_n' → logprob: -16.000009536743164
    8. '_key' → logprob: -17.375009536743164
    9. '```' → logprob: -17.375009536743164
    10. '"_' → logprob: -17.500009536743164

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35212138295173645
    2. 'else' → logprob: -1.602121353149414
    3. ' else' → logprob: -2.352121353149414
    4. '	else' → logprob: -9.477121353149414
    5. '<|end|>' → logprob: -9.977121353149414
    6. '
' → logprob: -11.227121353149414
    7. '```' → logprob: -11.227121353149414
    8. '   ' → logprob: -12.352121353149414
    9. '      ' → logprob: -12.852121353149414
    10. '	' → logprob: -12.977121353149414

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3716298043727875
    2. 'else' → logprob: -1.3716298341751099
    3. ' else' → logprob: -2.8716297149658203
    4. '	else' → logprob: -9.99662971496582
    5. '```' → logprob: -10.62162971496582
    6. '   ' → logprob: -11.87162971496582
    7. '<|end|>' → logprob: -12.12162971496582
    8. '      ' → logprob: -13.37162971496582
    9. '	' → logprob: -13.74662971496582
    10. '_else' → logprob: -14.12162971496582

Token 118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6583002805709839
    2. '       ' → logprob: -1.1583002805709839
    3. ' else' → logprob: -1.7833002805709839
    4. '	else' → logprob: -8.783300399780273
    5. '```' → logprob: -12.158300399780273
    6. '	' → logprob: -12.658300399780273
    7. '   ' → logprob: -13.533300399780273
    8. '      ' → logprob: -14.283300399780273
    9. '_else' → logprob: -14.283300399780273
    10. 'elif' → logprob: -14.658300399780273

Token 119: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5276854634284973
    2. ' parent' → logprob: -0.9026854634284973
    3. '[parent' → logprob: -6.402685642242432
    4. ':' → logprob: -7.277685642242432
    5. 'parent' → logprob: -7.402685642242432
    6. '(parent' → logprob: -7.402685642242432
    7. ':
' → logprob: -7.777685642242432
    8. '.parent' → logprob: -8.652685165405273
    9. '	parent' → logprob: -8.902685165405273
    10. '_parent' → logprob: -9.777685165405273

Token 120: '           ' (ID: 352)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.004832022823393345
    2. 'parent' → logprob: -5.379831790924072
    3. '           ' → logprob: -8.50483226776123
    4. '	parent' → logprob: -12.75483226776123
    5. '(parent' → logprob: -13.12983226776123
    6. '.parent' → logprob: -13.25483226776123
    7. '[parent' → logprob: -13.87983226776123
    8. ',parent' → logprob: -14.00483226776123
    9. ' ' → logprob: -14.75483226776123
    10. '_parent' → logprob: -15.25483226776123

Token 121: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.47407785058021545
    2. 'parent' (adapté à ' parent') → logprob: -0.9740778207778931
    3. '	parent' → logprob: -14.599078178405762
    4. '.parent' → logprob: -15.724078178405762
    5. '           ' → logprob: -16.349077224731445
    6. '[parent' → logprob: -16.599077224731445
    7. '(parent' → logprob: -16.974077224731445
    8. '_parent' → logprob: -17.599077224731445
    9. 'Parent' → logprob: -17.849077224731445
    10. ',parent' → logprob: -18.224077224731445

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. ' [' → logprob: -17.625
    3. '```' → logprob: -18.75
    4. '][' → logprob: -18.875
    5. '   ' → logprob: -19.875
    6. '[
' → logprob: -20.125
    7. ')[' → logprob: -20.25
    8. '`' → logprob: -20.5
    9. '2' → logprob: -20.75
    10. ' ' → logprob: -21.125

Token 123: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.625000953674316
    3. '[' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.875
    5. '```' → logprob: -17.875
    6. '  ' → logprob: -19.625
    7. '۲' → logprob: -19.75
    8. '２' → logprob: -19.875
    9. '    ' → logprob: -20.5
    10. '
' → logprob: -20.5

Token 124: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7024137377738953
    2. ' =' → logprob: -0.7024137377738953
    3. ']' → logprob: -4.702413558959961
    4. ' ]' → logprob: -9.327413558959961
    5. ']=' → logprob: -9.827413558959961
    6. ')' → logprob: -11.952413558959961
    7. ' ' → logprob: -14.327413558959961
    8. '<|end|>' → logprob: -15.327413558959961
    9. ')=' → logprob: -15.952413558959961
    10. ' )' → logprob: -16.32741355895996

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380416102707386
    2. ' =' → logprob: -3.288041591644287
    3. '=new' → logprob: -16.538042068481445
    4. ' new' → logprob: -18.413042068481445
    5. '＝' → logprob: -19.663042068481445
    6. ' ' → logprob: -19.788042068481445
    7. '=
' → logprob: -20.038042068481445
    8. '=

' → logprob: -20.163042068481445
    9. ' =
' → logprob: -21.288042068481445
    10. ')' → logprob: -21.413042068481445

Token 126: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.47407716512680054
    2. ' new' → logprob: -0.9740771651268005
    3. '新' → logprob: -16.474077224731445
    4. '	new' → logprob: -16.974077224731445
    5. ' ' → logprob: -17.474077224731445
    6. '[new' → logprob: -17.599077224731445
    7. '_new' → logprob: -17.974077224731445
    8. 'New' → logprob: -18.724077224731445
    9. ' ' → logprob: -18.849077224731445
    10. '$new' → logprob: -19.224077224731445

Token 127: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00033713103039190173
    2. 'node' → logprob: -8.000337600708008
    3. '_token' → logprob: -14.875337600708008
    4. ' node' → logprob: -15.125337600708008
    5. 'new' → logprob: -15.250337600708008
    6. 'Node' → logprob: -15.500337600708008
    7. '-node' → logprob: -15.875337600708008
    8. '_' → logprob: -16.125337600708008
    9. '[node' → logprob: -16.125337600708008
    10. '_NODE' → logprob: -17.250337600708008

Token 128: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.227903813123703
    2. '<|end|>' → logprob: -1.7279038429260254
    3. '   ' → logprob: -3.9779038429260254
    4. 'def' → logprob: -6.102903842926025
    5. '<|end|>' → logprob: -6.102903842926025
    6. '    
' → logprob: -7.227903842926025
    7. '  
' → logprob: -7.352903842926025
    8. ' def' → logprob: -7.727903842926025
    9. ' 
' → logprob: -8.477903366088867
    10. '

' → logprob: -8.602903366088867

Token 129: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.30888333916664124
    2. '   ' → logprob: -1.5588833093643188
    3. ' def' → logprob: -3.4338834285736084
    4. '
' → logprob: -3.9338834285736084
    5. '<|end|>' → logprob: -6.933883190155029
    6. ' ' → logprob: -7.183883190155029
    7. '	def' → logprob: -7.558883190155029
    8. '    
' → logprob: -8.058883666992188
    9. '```' → logprob: -8.183883666992188
    10. '  ' → logprob: -8.933883666992188

Token 130: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06226903572678566
    2. ' def' → logprob: -2.8122689723968506
    3. '   ' → logprob: -8.18726921081543
    4. '
' → logprob: -11.06226921081543
    5. '	def' → logprob: -12.81226921081543
    6. ' ' → logprob: -13.56226921081543
    7. ' 
' → logprob: -13.56226921081543
    8. 'd' → logprob: -14.93726921081543
    9. '```' → logprob: -15.06226921081543
    10. '    
' → logprob: -15.06226921081543

Token 131: ' find' (ID: 1646)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.3228279948234558
    2. ' find' → logprob: -1.3228280544281006
    3. ' def' → logprob: -4.8228278160095215
    4. 'search' → logprob: -7.0728278160095215
    5. ' in' → logprob: -8.57282829284668
    6. 'find' → logprob: -8.94782829284668
    7. ' inorder' → logprob: -9.07282829284668
    8. ' lookup' → logprob: -9.82282829284668
    9. '_search' → logprob: -10.19782829284668
    10. ' remove' → logprob: -11.07282829284668

Token 132: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005997759755700827
    2. '(' → logprob: -5.130997657775879
    3. '(
' → logprob: -9.755997657775879
    4. 'self' → logprob: -12.005997657775879
    5. ' (' → logprob: -13.130997657775879
    6. '(sel' → logprob: -13.880997657775879
    7. '_key' → logprob: -14.380997657775879
    8. '(s' → logprob: -14.755997657775879
    9. '(

' → logprob: -15.755997657775879
    10. ' ' → logprob: -15.880997657775879

Token 133: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01059215608984232
    2. ')' → logprob: -5.885591983795166
    3. 'self' → logprob: -5.885591983795166
    4. '(' → logprob: -6.135591983795166
    5. ',' → logprob: -6.635591983795166
    6. '_key' → logprob: -7.260591983795166
    7. ')(' → logprob: -7.760591983795166
    8. 'key' → logprob: -9.385592460632324
    9. ' ' → logprob: -10.010592460632324
    10. ' (' → logprob: -10.135592460632324

Token 134: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.3268061876296997
    2. 'key' → logprob: -1.8268061876296997
    3. 'self' → logprob: -2.45180606842041
    4. ' self' → logprob: -3.45180606842041
    5. '   ' → logprob: -11.45180606842041
    6. '_key' → logprob: -13.07680606842041
    7. ' ' → logprob: -13.07680606842041
    8. 'Key' → logprob: -13.45180606842041
    9. '	key' → logprob: -13.57680606842041
    10. '       ' → logprob: -13.95180606842041

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01182082574814558
    2. '):
' → logprob: -4.5118207931518555
    3. ',' → logprob: -7.5118207931518555
    4. ' ):' → logprob: -9.386820793151855
    5. '       ' → logprob: -9.636820793151855
    6. 'self' → logprob: -10.636820793151855
    7. '   ' → logprob: -11.011820793151855
    8. ')' → logprob: -11.136820793151855
    9. '):
' → logprob: -11.136820793151855
    10. '(self' → logprob: -13.511820793151855

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034164607524871826
    2. '
' → logprob: -3.5341646671295166
    3. ' 
' → logprob: -5.9091644287109375
    4. '        
' → logprob: -7.6591644287109375
    5. '  
' → logprob: -8.534164428710938
    6. ' node' → logprob: -8.659164428710938
    7. '<|end|>' → logprob: -8.659164428710938
    8. '    ' → logprob: -9.284164428710938
    9. '   ' → logprob: -9.409164428710938
    10. '    
' → logprob: -9.534164428710938

Token 137: ' current' (ID: 2208)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5537383556365967
    2. 'node' → logprob: -1.6787383556365967
    3. ' child' → logprob: -1.8037383556365967
    4. ' current' → logprob: -2.9287383556365967
    5. 'child' → logprob: -4.553738594055176
    6. 'current' (adapté à ' current') → logprob: -4.678738594055176
    7. ' curr' → logprob: -8.428738594055176
    8. '       ' → logprob: -8.553738594055176
    9. 'curr' → logprob: -9.678738594055176
    10. ' parent' → logprob: -9.928738594055176

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002186307217925787
    2. '=' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.12718677520752
    4. '=self' → logprob: -15.12718677520752
    5. ',' → logprob: -15.87718677520752
    6. ' =
' → logprob: -16.627185821533203
    7. '    ' → logprob: -17.377185821533203
    8. '   ' → logprob: -18.127185821533203
    9. '=None' → logprob: -18.627185821533203
    10. '=node' → logprob: -18.752185821533203

Token 139: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38688093423843384
    2. ' self' → logprob: -1.136880874633789
    3. '	self' → logprob: -12.761880874633789
    4. '       ' → logprob: -12.886880874633789
    5. '[self' → logprob: -13.011880874633789
    6. ' ' → logprob: -14.386880874633789
    7. '   ' → logprob: -14.886880874633789
    8. '(self' → logprob: -14.886880874633789
    9. '<|end|>' → logprob: -15.011880874633789
    10. '
' → logprob: -15.261880874633789

Token 140: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0016718494007363915
    2. '.' → logprob: -6.50167179107666
    3. 'root' → logprob: -8.75167179107666
    4. '.ro' → logprob: -12.25167179107666
    5. ' .' → logprob: -12.62667179107666
    6. '[root' → logprob: -14.62667179107666
    7. '.current' → logprob: -14.87667179107666
    8. '.user' → logprob: -15.00167179107666
    9. '[' → logprob: -15.25167179107666
    10. '	root' → logprob: -15.37667179107666

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3586379587650299
    2. '       ' → logprob: -1.3586379289627075
    3. 'while' → logprob: -3.233638048171997
    4. '        
' → logprob: -5.983637809753418
    5. ' while' → logprob: -7.108637809753418
    6. ' 
' → logprob: -7.608637809753418
    7. '  
' → logprob: -8.108637809753418
    8. '
' → logprob: -8.358637809753418
    9. '<|end|>' → logprob: -8.358637809753418
    10. '	while' → logprob: -8.858637809753418

Token 142: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26906469464302063
    2. '       ' → logprob: -1.5190646648406982
    3. '<|end|>' → logprob: -4.269064903259277
    4. '        
' → logprob: -6.394064903259277
    5. ' 
' → logprob: -8.019064903259277
    6. '<|end|>' → logprob: -8.644064903259277
    7. '  
' → logprob: -8.894064903259277
    8. '		
' → logprob: -9.019064903259277
    9. ' while' → logprob: -9.144064903259277
    10. '
' → logprob: -9.519064903259277

Token 143: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.510054886341095
    2. '       ' → logprob: -1.3850548267364502
    3. ' while' → logprob: -2.01005482673645
    4. '
' → logprob: -4.260055065155029
    5. '	while' → logprob: -7.385055065155029
    6. ' 
' → logprob: -8.385054588317871
    7. '        
' → logprob: -8.635054588317871
    8. '   ' → logprob: -10.635054588317871
    9. '```' → logprob: -11.135054588317871
    10. '	' → logprob: -11.135054588317871

Token 144: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.31326231360435486
    2. ' current' → logprob: -1.3132623434066772
    3. '	current' → logprob: -15.438261985778809
    4. '(current' → logprob: -15.438261985778809
    5. 'urrent' → logprob: -16.438262939453125
    6. '[current' → logprob: -16.688262939453125
    7. '$current' → logprob: -17.563262939453125
    8. ' ' → logprob: -17.938262939453125
    9. '.current' → logprob: -18.063262939453125
    10. '   ' → logprob: -18.438262939453125

Token 145: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4779779016971588
    2. ' and' → logprob: -0.9779778718948364
    3. ' is' → logprob: -5.977977752685547
    4. 'is' → logprob: -6.602977752685547
    5. ' ' → logprob: -13.852977752685547
    6. ':' → logprob: -13.977977752685547
    7. ':
' → logprob: -14.727977752685547
    8. '   ' → logprob: -15.102977752685547
    9. ' и' → logprob: -15.352977752685547
    10. '	and' → logprob: -16.352977752685547

Token 146: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.023842690512537956
    2. ' current' → logprob: -3.7738425731658936
    3. 'key' → logprob: -7.523842811584473
    4. ' key' → logprob: -9.773842811584473
    5. '	current' → logprob: -16.898841857910156
    6. '(current' → logprob: -16.898841857910156
    7. '
' → logprob: -17.773841857910156
    8. '   ' → logprob: -17.898841857910156
    9. ' ' → logprob: -18.648841857910156
    10. '.current' → logprob: -19.523841857910156

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -15.375000953674316
    3. 'and' → logprob: -15.375000953674316
    4. ' and' → logprob: -16.5
    5. ' [' → logprob: -17.375
    6. '```' → logprob: -17.75
    7. '[
' → logprob: -18.125
    8. '
' → logprob: -18.75
    9. '!=' → logprob: -19.25
    10. ':' → logprob: -19.25

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -11.125016212463379
    3. ' ' → logprob: -14.375016212463379
    4. '
' → logprob: -15.500016212463379
    5. '۰' → logprob: -16.500015258789062
    6. '00' → logprob: -17.250015258789062
    7. '(' → logprob: -18.000015258789062
    8. '```' → logprob: -18.062515258789062
    9. '-' → logprob: -18.187515258789062
    10. '#' → logprob: -18.250015258789062

Token 149: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2126341015100479
    2. '!=' → logprob: -2.2126340866088867
    3. ']' → logprob: -2.5876340866088867
    4. ']!=' → logprob: -5.337634086608887
    5. ' ]' → logprob: -6.337634086608887
    6. '<' → logprob: -8.462634086608887
    7. ' <' → logprob: -9.962634086608887
    8. '()!=' → logprob: -10.837634086608887
    9. ')!=' → logprob: -10.962634086608887
    10. ')' → logprob: -11.087634086608887

Token 150: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2519477307796478
    2. '!=' → logprob: -1.5019477605819702
    3. '()!=' → logprob: -11.626947402954102
    4. ')!=' → logprob: -12.751947402954102
    5. '!==' → logprob: -13.626947402954102
    6. ']!=' → logprob: -13.626947402954102
    7. '!=(' → logprob: -13.751947402954102
    8. '!='' → logprob: -14.126947402954102
    9. '!="' → logprob: -14.251947402954102
    10. ' ' → logprob: -14.251947402954102

Token 151: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.10020678490400314
    2. 'key' → logprob: -2.3502068519592285
    3. '	key' → logprob: -16.10020637512207
    4. ' ' → logprob: -18.47520637512207
    5. '(key' → logprob: -19.35020637512207
    6. '$key' → logprob: -20.35020637512207
    7. '   ' → logprob: -20.47520637512207
    8. '_key' → logprob: -20.47520637512207
    9. '[key' → logprob: -20.85020637512207
    10. '
' → logprob: -20.97520637512207

Token 152: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010247779078781605
    2. ':
' → logprob: -4.635247707366943
    3. ',' → logprob: -8.260248184204102
    4. '       ' → logprob: -8.635248184204102
    5. ' :' → logprob: -10.760248184204102
    6. '):' → logprob: -12.010248184204102
    7. '   ' → logprob: -12.510248184204102
    8. '[' → logprob: -12.510248184204102
    9. '           ' → logprob: -12.510248184204102
    10. '):
' → logprob: -12.635248184204102

Token 153: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.07952513545751572
    2. '       ' → logprob: -3.4545252323150635
    3. '
' → logprob: -3.8295252323150635
    4. ' ' → logprob: -3.9545252323150635
    5. '        
' → logprob: -5.954524993896484
    6. '    
' → logprob: -8.329524993896484
    7. '  
' → logprob: -8.829524993896484
    8. ' if' → logprob: -9.079524993896484
    9. '<|end|>' → logprob: -9.079524993896484
    10. '           ' → logprob: -9.454524993896484

Token 154: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.09819304943084717
    2. 'current' (adapté à ' current') → logprob: -2.4731931686401367
    3. '           ' → logprob: -5.223193168640137
    4. ' if' → logprob: -6.223193168640137
    5. ' 
' → logprob: -6.973193168640137
    6. '
' → logprob: -7.848193168640137
    7. '            
' → logprob: -8.348193168640137
    8. 'if' → logprob: -9.723193168640137
    9. '[current' → logprob: -9.848193168640137
    10. '            ' → logprob: -10.723193168640137

Token 155: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0008049834286794066
    2. '=' → logprob: -7.125804901123047
    3. ' ' → logprob: -14.875804901123047
    4. '[' → logprob: -17.250804901123047
    5. ',' → logprob: -17.375804901123047
    6. ' =[' → logprob: -17.625804901123047
    7. ' =
' → logprob: -17.875804901123047
    8. '   ' → logprob: -18.875804901123047
    9. '=current' → logprob: -19.000804901123047
    10. '	' → logprob: -19.000804901123047

Token 156: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.38687628507614136
    2. 'current' → logprob: -1.1368763446807861
    3. '   ' → logprob: -13.761876106262207
    4. '	current' → logprob: -13.761876106262207
    5. 'urrent' → logprob: -14.011876106262207
    6. '(current' → logprob: -14.261876106262207
    7. '[current' → logprob: -14.636876106262207
    8. ' ' → logprob: -15.261876106262207
    9. '$current' → logprob: -15.261876106262207
    10. '.current' → logprob: -15.261876106262207

Token 157: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. ' [' → logprob: -15.125000953674316
    3. '[
' → logprob: -16.875
    4. '1' → logprob: -16.875
    5. '   ' → logprob: -17.25
    6. '```' → logprob: -17.5
    7. 'if' → logprob: -18.0
    8. '.' → logprob: -18.375
    9. ' ' → logprob: -18.875
    10. '	' → logprob: -19.125

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00025657136575318873
    2. '[' → logprob: -8.375256538391113
    3. ' ' → logprob: -10.875256538391113
    4. '   ' → logprob: -13.250256538391113
    5. '```' → logprob: -13.250256538391113
    6. '
' → logprob: -14.000256538391113
    7. ']' → logprob: -15.000256538391113
    8. '-' → logprob: -15.375256538391113
    9. '][' → logprob: -15.687756538391113
    10. '[
' → logprob: -15.687756538391113

Token 159: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03805239871144295
    2. 'if' → logprob: -3.2880523204803467
    3. ']' → logprob: -11.538052558898926
    4. ' ' → logprob: -14.788052558898926
    5. ')' → logprob: -15.288052558898926
    6. '	if' → logprob: -15.663052558898926
    7. '```' → logprob: -16.03805160522461
    8. 'If' → logprob: -16.16305160522461
    9. ' ]' → logprob: -16.41305160522461
    10. '<|end|>' → logprob: -16.78805160522461

Token 160: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02975071594119072
    2. 'if' → logprob: -3.5297508239746094
    3. 'If' → logprob: -16.02975082397461
    4. ' ' → logprob: -17.15475082397461
    5. ' or' → logprob: -17.65475082397461
    6. '           ' → logprob: -17.90475082397461
    7. '       ' → logprob: -18.02975082397461
    8. '```' → logprob: -18.15475082397461
    9. '	if' → logprob: -18.52975082397461
    10. '   ' → logprob: -18.77975082397461

Token 161: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.07888978719711304
    2. 'key' → logprob: -2.578889846801758
    3. '	key' → logprob: -17.703889846801758
    4. ' ' → logprob: -18.203889846801758
    5. '(key' → logprob: -19.078889846801758
    6. '_key' → logprob: -20.578889846801758
    7. 'Key' → logprob: -20.578889846801758
    8. '$key' → logprob: -21.078889846801758
    9. '.key' → logprob: -21.453889846801758
    10. '   ' → logprob: -21.703889846801758

Token 162: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.002817835658788681
    2. '<' → logprob: -5.877817630767822
    3. ' ' → logprob: -11.50281810760498
    4. '<|end|>' → logprob: -13.62781810760498
    5. '<class' → logprob: -15.12781810760498
    6. ' <",' → logprob: -15.37781810760498
    7. '<int' → logprob: -15.75281810760498
    8. '[' → logprob: -16.377817153930664
    9. '<context' → logprob: -16.502817153930664
    10. '<len' → logprob: -16.752817153930664

Token 163: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6931484341621399
    2. 'current' → logprob: -0.6931484341621399
    3. ' ' → logprob: -14.693148612976074
    4. '	current' → logprob: -15.193148612976074
    5. '[current' → logprob: -15.693148612976074
    6. 'Current' → logprob: -16.068147659301758
    7. '$current' → logprob: -16.443147659301758
    8. '(current' → logprob: -16.943147659301758
    9. '.current' → logprob: -16.943147659301758
    10. '_current' → logprob: -17.068147659301758

Token 164: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. ' [' → logprob: -12.250006675720215
    3. '.' → logprob: -14.125006675720215
    4. '   ' → logprob: -14.375006675720215
    5. '0' → logprob: -14.750006675720215
    6. '```' → logprob: -15.875006675720215
    7. '[
' → logprob: -16.87500762939453
    8. ' ' → logprob: -17.68750762939453
    9. 'current' → logprob: -18.25000762939453
    10. '  ' → logprob: -18.68750762939453

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002075933152809739
    2. '[' → logprob: -8.500207901000977
    3. ' ' → logprob: -12.500207901000977
    4. '   ' → logprob: -16.750207901000977
    5. '۰' → logprob: -17.250207901000977
    6. '```' → logprob: -17.437707901000977
    7. '  ' → logprob: -17.687707901000977
    8. 'current' → logprob: -18.000207901000977
    9. '
' → logprob: -18.125207901000977
    10. ' [' → logprob: -18.375207901000977

Token 166: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018369542434811592
    2. ' else' → logprob: -4.268369674682617
    3. 'else' → logprob: -5.518369674682617
    4. ' ]' → logprob: -8.643369674682617
    5. '       ' → logprob: -12.143369674682617
    6. '        ' → logprob: -13.393369674682617
    7. '           ' → logprob: -13.893369674682617
    8. '```' → logprob: -15.768369674682617
    9. '   ' → logprob: -16.018369674682617
    10. '}' → logprob: -16.393369674682617

Token 167: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10020752996206284
    2. 'else' → logprob: -2.350207567214966
    3. '           ' → logprob: -15.225207328796387
    4. '        ' → logprob: -15.350207328796387
    5. '       ' → logprob: -15.475207328796387
    6. '         ' → logprob: -16.350208282470703
    7. '	else' → logprob: -16.850208282470703
    8. ' ' → logprob: -17.475208282470703
    9. '```' → logprob: -17.475208282470703
    10. '   ' → logprob: -18.350208282470703

Token 168: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.20141811668872833
    2. 'current' → logprob: -1.701418161392212
    3. '	current' → logprob: -13.326417922973633
    4. '[current' → logprob: -14.076417922973633
    5. '(current' → logprob: -14.201417922973633
    6. '.current' → logprob: -14.326417922973633
    7. '$current' → logprob: -14.701417922973633
    8. 'urrent' → logprob: -15.826417922973633
    9. 'Current' → logprob: -16.076417922973633
    10. '_current' → logprob: -16.201417922973633

Token 169: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '2' → logprob: -12.250004768371582
    3. ' [' → logprob: -16.8750057220459
    4. '   ' → logprob: -18.5000057220459
    5. '```' → logprob: -19.0000057220459
    6. ' ' → logprob: -19.1250057220459
    7. '[
' → logprob: -20.1250057220459
    8. '  ' → logprob: -21.0000057220459
    9. '`' → logprob: -21.7500057220459
    10. '][' → logprob: -21.8750057220459

Token 170: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.875008583068848
    3. '```' → logprob: -14.750008583068848
    4. '   ' → logprob: -15.000008583068848
    5. '[' → logprob: -15.125008583068848
    6. '  ' → logprob: -15.625008583068848
    7. '۲' → logprob: -16.43750762939453
    8. '
' → logprob: -16.87500762939453
    9. '    ' → logprob: -17.50000762939453
    10. '２' → logprob: -18.00000762939453

Token 171: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3694397509098053
    2. '<|end|>' → logprob: -1.994439721107483
    3. '       ' → logprob: -2.3694398403167725
    4. ']' → logprob: -2.6194398403167725
    5. ')
' → logprob: -5.869439601898193
    6. '<|end|>' → logprob: -6.994439601898193
    7. ')return' → logprob: -7.119439601898193
    8. 'return' → logprob: -7.619439601898193
    9. '
' → logprob: -7.869439601898193
    10. ']
' → logprob: -8.119440078735352

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006917838007211685
    2. 'return' → logprob: -5.131917953491211
    3. '
' → logprob: -7.381917953491211
    4. '   ' → logprob: -8.381917953491211
    5. ' return' → logprob: -9.381917953491211
    6. '        
' → logprob: -10.381917953491211
    7. '    
' → logprob: -12.006917953491211
    8. '	return' → logprob: -12.756917953491211
    9. '
' → logprob: -13.131917953491211
    10. '	' → logprob: -13.131917953491211

Token 173: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005081149865873158
    2. '       ' → logprob: -7.7505083084106445
    3. ' return' → logprob: -9.500508308410645
    4. '   ' → logprob: -13.125508308410645
    5. '	return' → logprob: -14.625508308410645
    6. '
' → logprob: -16.125507354736328
    7. 'if' → logprob: -17.750507354736328
    8. '{return' → logprob: -18.500507354736328
    9. '```' → logprob: -18.875507354736328
    10. 'eturn' → logprob: -19.000507354736328

Token 174: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.06218177080154419
    2. ' current' → logprob: -2.8121817111968994
    3. 'None' → logprob: -8.56218147277832
    4. ' None' → logprob: -10.68718147277832
    5. '	current' → logprob: -17.56218147277832
    6. '.current' → logprob: -18.56218147277832
    7. 'cur' → logprob: -18.81218147277832
    8. '(current' → logprob: -18.81218147277832
    9. '$current' → logprob: -18.81218147277832
    10. '[current' → logprob: -18.81218147277832

Token 175: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8637028336524963
    2. 'def' → logprob: -1.1137027740478516
    3. '   ' → logprob: -1.8637027740478516
    4. '<|end|>' → logprob: -2.4887027740478516
    5. ' def' → logprob: -5.363702774047852
    6. ' ' → logprob: -6.613702774047852
    7. '	def' → logprob: -6.863702774047852
    8. '<|end|>' → logprob: -6.863702774047852
    9. '

' → logprob: -6.988702774047852
    10. '    
' → logprob: -7.238702774047852

Token 176: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.060296956449747086
    2. '   ' → logprob: -3.0602970123291016
    3. '
' → logprob: -5.185297012329102
    4. '<|end|>' → logprob: -6.060297012329102
    5. ' def' → logprob: -6.435297012329102
    6. '	def' → logprob: -7.060297012329102
    7. ' ' → logprob: -8.435297012329102
    8. '#' → logprob: -8.435297012329102
    9. '```' → logprob: -8.685297012329102
    10. '[' → logprob: -8.935297012329102

Token 177: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.664371848164592e-05
    2. ' def' → logprob: -11.500016212463379
    3. '   ' → logprob: -12.000016212463379
    4. 'class' → logprob: -16.125017166137695
    5. '	def' → logprob: -16.750017166137695
    6. ' ' → logprob: -17.375017166137695
    7. 'de' → logprob: -18.750017166137695
    8. '#' → logprob: -19.000017166137695
    9. '  ' → logprob: -19.250017166137695
    10. '```' → logprob: -19.500017166137695

Token 178: ' walk' (ID: 5229)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.2806968688964844
    2. 'in' → logprob: -1.9056968688964844
    3. 'def' → logprob: -3.5306968688964844
    4. ' delete' → logprob: -3.6556968688964844
    5. 'remove' → logprob: -4.155696868896484
    6. ' inorder' → logprob: -4.155696868896484
    7. ' def' → logprob: -6.155696868896484
    8. '_in' → logprob: -6.280696868896484
    9. '_delete' → logprob: -6.280696868896484
    10. 'min' → logprob: -6.655696868896484

Token 179: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07151927053928375
    2. '_in' → logprob: -2.696519374847412
    3. '(' → logprob: -6.946519374847412
    4. 'in' → logprob: -8.696518898010254
    5. '   ' → logprob: -8.946518898010254
    6. 'In' → logprob: -9.071518898010254
    7. '_' → logprob: -9.696518898010254
    8. '_(' → logprob: -9.821518898010254
    9. '_recursive' → logprob: -9.946518898010254
    10. '_tree' → logprob: -11.446518898010254

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008994946256279945
    2. '_in' → logprob: -5.008995056152344
    3. ' ,' → logprob: -7.258995056152344
    4. 'self' → logprob: -7.508995056152344
    5. ',node' → logprob: -8.133995056152344
    6. ')' → logprob: -8.383995056152344
    7. 'in' → logprob: -8.633995056152344
    8. '):' → logprob: -9.633995056152344
    9. '   ' → logprob: -10.133995056152344
    10. '_pre' → logprob: -10.383995056152344

Token 181: ' walk' (ID: 5229)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.18432867527008057
    2. ' node' → logprob: -1.8093286752700806
    3. 'self' → logprob: -6.184328556060791
    4. ' self' → logprob: -7.309328556060791
    5. 'root' → logprob: -7.434328556060791
    6. 'func' → logprob: -7.809328556060791
    7. 'current' → logprob: -8.55932903289795
    8. ')' → logprob: -9.30932903289795
    9. ' current' → logprob: -9.43432903289795
    10. ' func' → logprob: -9.55932903289795

Token 182: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.2136862426996231
    2. '_in' → logprob: -2.713686227798462
    3. 'er' → logprob: -3.463686227798462
    4. '_order' → logprob: -3.588686227798462
    5. 'type' → logprob: -3.963686227798462
    6. ',' → logprob: -4.213686466217041
    7. '):
' → logprob: -4.713686466217041
    8. '_func' → logprob: -5.213686466217041
    9. 'order' → logprob: -5.838686466217041
    10. '   ' → logprob: -5.838686466217041

Token 183: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1414133757352829
    2. ')' → logprob: -2.266413450241089
    3. '=' → logprob: -4.01641321182251
    4. '):
' → logprob: -5.26641321182251
    5. ',' → logprob: -5.89141321182251
    6. '='' → logprob: -7.01641321182251
    7. 'self' → logprob: -8.016413688659668
    8. '(self' → logprob: -8.766413688659668
    9. ' ):' → logprob: -8.766413688659668
    10. '=self' → logprob: -9.016413688659668

Token 184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2889813482761383
    2. '   ' → logprob: -2.2889814376831055
    3. ':' → logprob: -2.6639814376831055
    4. '    ' → logprob: -3.5389814376831055
    5. '(' → logprob: -4.1639814376831055
    6. ' ' → logprob: -4.2889814376831055
    7. '        ' → logprob: -5.4139814376831055
    8. '_' → logprob: -5.6639814376831055
    9. '(self' → logprob: -5.6639814376831055
    10. '<|end|>' → logprob: -6.1639814376831055

Token 185: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7057119011878967
    2. ' if' → logprob: -0.7057119011878967
    3. 'def' → logprob: -5.080711841583252
    4. 'stack' → logprob: -6.205711841583252
    5. ' def' → logprob: -6.455711841583252
    6. '       ' → logprob: -6.955711841583252
    7. ' stack' → logprob: -6.955711841583252
    8. 'result' → logprob: -8.20571231842041
    9. ' result' → logprob: -8.45571231842041
    10. '   ' → logprob: -8.95571231842041

Token 186: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5922935009002686
    2. 's' → logprob: -1.7172935009002686
    3. 'd' → logprob: -2.5922935009002686
    4. '       ' → logprob: -3.2172935009002686
    5. 'b' → logprob: -3.3422935009002686
    6. '   ' → logprob: -3.4672935009002686
    7. 'def' → logprob: -4.217293739318848
    8. '=' → logprob: -4.342293739318848
    9. ' =' → logprob: -4.717293739318848
    10. 'rray' → logprob: -4.842293739318848

Token 187: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006224425043910742
    2. 'self' → logprob: -5.506224632263184
    3. 'lambda' → logprob: -7.006224632263184
    4. '[]
' → logprob: -7.506224632263184
    5. ' []' → logprob: -7.881224632263184
    6. '[]

' → logprob: -9.506224632263184
    7. '['' → logprob: -9.881224632263184
    8. '[' → logprob: -9.881224632263184
    9. '[self' → logprob: -10.256224632263184
    10. '(lambda' → logprob: -11.006224632263184

Token 188: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16317617893218994
    2. '       ' → logprob: -2.0381760597229004
    3. 'def' → logprob: -4.4131760597229
    4. ' if' → logprob: -5.7881760597229
    5. 'if' → logprob: -6.5381760597229
    6. '        
' → logprob: -6.7881760597229
    7. ' def' → logprob: -7.5381760597229
    8. ' 
' → logprob: -7.5381760597229
    9. '   ' → logprob: -7.7881760597229
    10. ' ' → logprob: -8.288176536560059

Token 189: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004877334926277399
    2. 'if' → logprob: -5.87987756729126
    3. ' def' → logprob: -6.87987756729126
    4. '       ' → logprob: -7.50487756729126
    5. '
' → logprob: -8.504877090454102
    6. '   ' → logprob: -8.504877090454102
    7. ' if' → logprob: -9.629877090454102
    8. '	def' → logprob: -11.504877090454102
    9. '        
' → logprob: -12.629877090454102
    10. 'stack' → logprob: -13.379877090454102

Token 190: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.43619805574417114
    2. '.' → logprob: -1.1861979961395264
    3. '.walk' → logprob: -3.0611979961395264
    4. ' .' → logprob: -7.3111982345581055
    5. '.w' → logprob: -8.186198234558105
    6. '.root' → logprob: -9.186198234558105
    7. '.__' → logprob: -9.936198234558105
    8. '.append' → logprob: -10.936198234558105
    9. '.visit' → logprob: -11.061198234558105
    10. '..' → logprob: -11.061198234558105

Token 191: 'walk' (ID: 26072)
  Prédit: 'walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.01749604381620884
    2. '_walk' → logprob: -4.392496109008789
    3. 'tr' → logprob: -6.392496109008789
    4. 'in' → logprob: -6.392496109008789
    5. '_tr' → logprob: -6.892496109008789
    6. '_in' → logprob: -7.642496109008789
    7. 'def' → logprob: -10.767496109008789
    8. 'walker' → logprob: -11.267496109008789
    9. '_' → logprob: -11.392496109008789
    10. '_w' → logprob: -11.392496109008789

Token 192: '(self' (ID: 2402)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.6999668478965759
    2. '(' → logprob: -0.8249668478965759
    3. '(self' → logprob: -2.8249669075012207
    4. '('' → logprob: -5.699966907501221
    5. 'walk' → logprob: -7.074966907501221
    6. '(a' → logprob: -7.574966907501221
    7. 'self' → logprob: -8.324966430664062
    8. '(None' → logprob: -8.574966430664062
    9. '(
' → logprob: -8.949966430664062
    10. '(root' → logprob: -9.074966430664062

Token 193: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.01055806502699852
    2. 'root' → logprob: -5.135558128356934
    3. '.' → logprob: -5.635558128356934
    4. ',' → logprob: -7.385558128356934
    5. '.walk' → logprob: -8.135558128356934
    6. ' .' → logprob: -9.885558128356934
    7. '[root' → logprob: -11.135558128356934
    8. '(root' → logprob: -11.385558128356934
    9. '[' → logprob: -11.510558128356934
    10. '.ro' → logprob: -11.760558128356934

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.24310302757658e-05
    2. ' ,' → logprob: -9.750072479248047
    3. ',w' → logprob: -11.625072479248047
    4. ')' → logprob: -13.375072479248047
    5. ',
' → logprob: -13.750072479248047
    6. 'walk' → logprob: -14.250072479248047
    7. '[' → logprob: -14.625072479248047
    8. 'w' → logprob: -14.750072479248047
    9. '(w' → logprob: -15.625072479248047
    10. '   ' → logprob: -15.875072479248047

Token 195: ' a' (ID: 261)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.3825216591358185
    2. 'a' → logprob: -1.757521629333496
    3. ' walk' → logprob: -2.132521629333496
    4. ' a' → logprob: -3.632521629333496
    5. '0' → logprob: -8.757521629333496
    6. 'lambda' → logprob: -9.632521629333496
    7. ' ' → logprob: -9.757521629333496
    8. ' lambda' → logprob: -10.132521629333496
    9. 'w' → logprob: -11.257521629333496
    10. '_walk' → logprob: -11.570021629333496

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ',w' → logprob: -14.875001907348633
    4. ')' → logprob: -16.250001907348633
    5. ',
' → logprob: -17.250001907348633
    6. 'w' → logprob: -19.000001907348633
    7. '[' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.375001907348633
    9. 'a' → logprob: -19.750001907348633
    10. '   ' → logprob: -20.375001907348633

Token 197: ' walk' (ID: 5229)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.07895687222480774
    2. ' walk' → logprob: -2.5789568424224854
    3. '0' → logprob: -9.953956604003906
    4. ' ' → logprob: -11.453956604003906
    5. ')' → logprob: -12.578956604003906
    6. '_walk' → logprob: -14.078956604003906
    7. '   ' → logprob: -14.203956604003906
    8. 'lambda' → logprob: -14.203956604003906
    9. '  ' → logprob: -14.828956604003906
    10. '
' → logprob: -14.828956604003906

Token 198: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -2.45848218582978e-06
    2. 'type' → logprob: -13.37500286102295
    3. '_' → logprob: -14.50000286102295
    4. '_t' → logprob: -16.250001907348633
    5. 'Type' → logprob: -16.250001907348633
    6. '_typ' → logprob: -16.875001907348633
    7. '_ty' → logprob: -17.625001907348633
    8. ')' → logprob: -17.750001907348633
    9. ' _' → logprob: -18.000001907348633
    10. ')_' → logprob: -18.375001907348633

Token 199: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007393499254249036
    2. ',' → logprob: -7.250739574432373
    3. ')
' → logprob: -11.125739097595215
    4. ' )' → logprob: -11.250739097595215
    5. '),' → logprob: -15.000739097595215
    6. ')

' → logprob: -15.000739097595215
    7. '   ' → logprob: -15.000739097595215
    8. ',)' → logprob: -15.125739097595215
    9. ' ' → logprob: -15.750739097595215
    10. ')return' → logprob: -16.00074005126953

Token 200: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.531363308429718
    2. 'return' → logprob: -1.1563632488250732
    3. ' return' → logprob: -2.4063632488250732
    4. '   ' → logprob: -5.156363487243652
    5. '
' → logprob: -7.281363487243652
    6. '	return' → logprob: -7.406363487243652
    7. 'def' → logprob: -8.656363487243652
    8. ' ' → logprob: -9.281363487243652
    9. '	' → logprob: -9.906363487243652
    10. '  ' → logprob: -12.531363487243652

Token 201: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007320931763388216
    2. ' return' → logprob: -7.250731945037842
    3. '       ' → logprob: -10.750732421875
    4. '   ' → logprob: -14.750732421875
    5. '	return' → logprob: -14.875732421875
    6. ' ' → logprob: -18.500732421875
    7. 'eturn' → logprob: -18.875732421875
    8. ':return' → logprob: -18.875732421875
    9. '
' → logprob: -19.000732421875
    10. 'def' → logprob: -19.125732421875

Token 202: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020699352025986
    2. ' a' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.850207328796387
    4. ' ' → logprob: -16.47520637512207
    5. '	a' → logprob: -16.60020637512207
    6. 'None' → logprob: -16.97520637512207
    7. '_a' → logprob: -16.97520637512207
    8. '  ' → logprob: -18.72520637512207
    9. ' None' → logprob: -19.22520637512207
    10. '    ' → logprob: -19.60020637512207

Token 203: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023186540231108665
    2. '   ' → logprob: -4.523186683654785
    3. '<|end|>' → logprob: -5.023186683654785
    4. 'def' → logprob: -6.398186683654785
    5. ' 
' → logprob: -7.148186683654785
    6. '    
' → logprob: -7.273186683654785
    7. ' def' → logprob: -7.648186683654785
    8. '```' → logprob: -7.898186683654785
    9. '  
' → logprob: -8.023186683654785
    10. 'newline' → logprob: -8.273186683654785

Token 204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46886909008026123
    2. '
' → logprob: -1.8438690900802612
    3. 'def' → logprob: -2.093869209289551
    4. ' 
' → logprob: -3.093869209289551
    5. ' def' → logprob: -3.468869209289551
    6. '    
' → logprob: -4.843869209289551
    7. '_' → logprob: -5.593869209289551
    8. '	def' → logprob: -6.718869209289551
    9. ' ' → logprob: -6.843869209289551
    10. '\' → logprob: -7.343869209289551

Token 205: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001288332510739565
    2. '   ' → logprob: -7.251288414001465
    3. ' def' → logprob: -7.501288414001465
    4. '
' → logprob: -10.751288414001465
    5. '	def' → logprob: -13.251288414001465
    6. '_def' → logprob: -13.376288414001465
    7. ' ' → logprob: -14.001288414001465
    8. '    
' → logprob: -15.876288414001465
    9. '_' → logprob: -15.876288414001465
    10. '  ' → logprob: -16.75128746032715

Token 206: ' _' (ID: 1175)
  Prédit: '_walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -0.021024806424975395
    2. ' _' → logprob: -3.896024703979492
    3. '_' → logprob: -8.396024703979492
    4. '_w' → logprob: -8.896024703979492
    5. '_find' → logprob: -10.271024703979492
    6. '_insert' → logprob: -11.021024703979492
    7. '_write' → logprob: -11.521024703979492
    8. '_add' → logprob: -11.521024703979492
    9. '_search' → logprob: -11.896024703979492
    10. '_print' → logprob: -12.021024703979492

Token 207: 'walk' (ID: 26072)
  Prédit: 'walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.00038384052459150553
    2. '_walk' → logprob: -7.8753838539123535
    3. 'w' → logprob: -13.500383377075195
    4. ' walk' → logprob: -13.625383377075195
    5. '.walk' → logprob: -15.000383377075195
    6. '_' → logprob: -15.500383377075195
    7. '_w' → logprob: -15.500383377075195
    8. 'def' → logprob: -15.625383377075195
    9. 'walker' → logprob: -16.000383377075195
    10. 'wrap' → logprob: -16.750383377075195

Token 208: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015070053050294518
    2. '(' → logprob: -6.501506805419922
    3. '(
' → logprob: -12.751506805419922
    4. 'self' → logprob: -14.251506805419922
    5. 'def' → logprob: -14.751506805419922
    6. '   ' → logprob: -15.751506805419922
    7. ' (' → logprob: -15.751506805419922
    8. '
' → logprob: -16.751506805419922
    9. '(s' → logprob: -16.876506805419922
    10. '(root' → logprob: -17.251506805419922

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.620622712536715e-05
    2. 'self' → logprob: -10.500045776367188
    3. ' ,' → logprob: -11.250045776367188
    4. ',self' → logprob: -12.875045776367188
    5. ',node' → logprob: -13.250045776367188
    6. '(self' → logprob: -14.250045776367188
    7. 'root' → logprob: -15.375045776367188
    8. ',
' → logprob: -16.125045776367188
    9. ' self' → logprob: -16.625045776367188
    10. 'def' → logprob: -16.875045776367188

Token 210: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10340364277362823
    2. 'node' → logprob: -2.3534035682678223
    3. ' self' → logprob: -6.103403568267822
    4. ' node' → logprob: -6.978403568267822
    5. 'current' → logprob: -10.85340404510498
    6. '   ' → logprob: -12.97840404510498
    7. 'root' → logprob: -13.97840404510498
    8. ' current' → logprob: -13.97840404510498
    9. '(self' → logprob: -14.85340404510498
    10. ' ' → logprob: -15.10340404510498

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.759734732331708e-05
    2. ' ,' → logprob: -11.000017166137695
    3. ',node' → logprob: -14.875017166137695
    4. ',key' → logprob: -15.125017166137695
    5. '   ' → logprob: -15.625017166137695
    6. '       ' → logprob: -16.750017166137695
    7. ',
' → logprob: -17.000017166137695
    8. ',None' → logprob: -18.500017166137695
    9. 'def' → logprob: -19.000017166137695
    10. 'self' → logprob: -19.125017166137695

Token 212: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1814298778772354
    2. ' a' → logprob: -1.8064298629760742
    3. 'arr' → logprob: -7.181429862976074
    4. ' arr' → logprob: -8.556429862976074
    5. 'walk' → logprob: -8.681429862976074
    6. ' walk' → logprob: -9.056429862976074
    7. 'array' → logprob: -9.306429862976074
    8. 'result' → logprob: -9.556429862976074
    9. 'lst' → logprob: -9.556429862976074
    10. ' lst' → logprob: -9.556429862976074

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5107177862082608e-05
    2. ' ,' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.000024795532227
    4. ',node' → logprob: -15.875024795532227
    5. ',key' → logprob: -16.500024795532227
    6. ',
' → logprob: -16.500024795532227
    7. '       ' → logprob: -16.750024795532227
    8. '‌,' → logprob: -18.500024795532227
    9. ',None' → logprob: -18.500024795532227
    10. '):
' → logprob: -18.750024795532227

Token 214: ' walk' (ID: 5229)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.03804975748062134
    2. ' walk' → logprob: -3.2880496978759766
    3. ' ' → logprob: -13.288049697875977
    4. 'type' → logprob: -13.288049697875977
    5. '
' → logprob: -13.538049697875977
    6. '_walk' → logprob: -14.288049697875977
    7. '   ' → logprob: -14.663049697875977
    8. 'walker' → logprob: -14.913049697875977
    9. 'visit' → logprob: -14.913049697875977
    10. ')' → logprob: -15.163049697875977

Token 215: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -8.537868779967539e-06
    2. 'type' → logprob: -12.000008583068848
    3. ' _' → logprob: -14.500008583068848
    4. '   ' → logprob: -14.750008583068848
    5. 'Type' → logprob: -15.125008583068848
    6. ')_' → logprob: -15.125008583068848
    7. ',' → logprob: -15.625008583068848
    8. '_types' → logprob: -16.12500762939453
    9. '_TYPE' → logprob: -16.25000762939453
    10. ')' → logprob: -16.37500762939453

Token 216: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10222147405147552
    2. '):
' → logprob: -2.3522214889526367
    3. ',' → logprob: -6.227221488952637
    4. '):
' → logprob: -10.852221488952637
    5. '   ' → logprob: -11.727221488952637
    6. ':' → logprob: -12.352221488952637
    7. '       ' → logprob: -12.852221488952637
    8. ' ):' → logprob: -13.477221488952637
    9. '):

' → logprob: -13.852221488952637
    10. ')' → logprob: -14.352221488952637

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058647964149713516
    2. ' if' → logprob: -3.058647871017456
    3. ' ' → logprob: -5.058648109436035
    4. '    ' → logprob: -6.433648109436035
    5. '        ' → logprob: -7.308648109436035
    6. '   ' → logprob: -7.433648109436035
    7. '<|end|>' → logprob: -8.058648109436035
    8. ',' → logprob: -8.808648109436035
    9. '  ' → logprob: -9.808648109436035
    10. '      ' → logprob: -10.308648109436035

Token 218: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11667345464229584
    2. 'if' (adapté à ' if') → logprob: -2.366673469543457
    3. '       ' → logprob: -4.116673469543457
    4. '   ' → logprob: -10.616673469543457
    5. '	if' → logprob: -12.491673469543457
    6. '    ' → logprob: -13.366673469543457
    7. '        ' → logprob: -13.491673469543457
    8. ' 
' → logprob: -13.991673469543457
    9. ' ' → logprob: -14.616673469543457
    10. '
' → logprob: -15.366673469543457

Token 219: ' walk' (ID: 5229)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.2884441018104553
    2. 'node' → logprob: -1.4134440422058105
    3. ' not' → logprob: -5.0384440422058105
    4. 'not' → logprob: -7.1634440422058105
    5. ' None' → logprob: -12.913444519042969
    6. '	node' → logprob: -12.913444519042969
    7. '(node' → logprob: -13.538444519042969
    8. 'None' → logprob: -13.913444519042969
    9. ' ' → logprob: -14.538444519042969
    10. ' ' → logprob: -15.163444519042969

Token 220: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.0005277725285850465
    2. '_' → logprob: -7.750527858734131
    3. 'type' → logprob: -9.375527381896973
    4. ' is' → logprob: -12.125527381896973
    5. 'node' → logprob: -13.125527381896973
    6. '   ' → logprob: -13.500527381896973
    7. '==' → logprob: -13.625527381896973
    8. 'Type' → logprob: -14.000527381896973
    9. '       ' → logprob: -15.375527381896973
    10. ' ' → logprob: -15.500527381896973

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38796937465667725
    2. '==' → logprob: -1.1379693746566772
    3. '=='' → logprob: -7.762969493865967
    4. ' is' → logprob: -8.637969017028809
    5. '=="' → logprob: -8.762969017028809
    6. ' ' → logprob: -9.262969017028809
    7. '[' → logprob: -9.387969017028809
    8. ')' → logprob: -10.012969017028809
    9. '=' → logprob: -10.137969017028809
    10. ' =='' → logprob: -10.512969017028809

Token 222: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40427646040916443
    2. ' '' → logprob: -1.5292764902114868
    3. ''in' → logprob: -2.6542763710021973
    4. '"' → logprob: -3.7792763710021973
    5. ' "' → logprob: -4.779276371002197
    6. ''post' → logprob: -5.404276371002197
    7. '"in' → logprob: -5.779276371002197
    8. '0' → logprob: -5.779276371002197
    9. ' ' → logprob: -6.029276371002197
    10. '1' → logprob: -8.404276847839355

Token 223: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.48267602920532227
    2. ''in' → logprob: -1.1076760292053223
    3. ''post' → logprob: -3.4826760292053223
    4. ' '' → logprob: -5.107676029205322
    5. '"' → logprob: -5.232676029205322
    6. '0' → logprob: -5.357676029205322
    7. '"in' → logprob: -5.482676029205322
    8. ' ' → logprob: -7.732676029205322
    9. '1' → logprob: -8.357675552368164
    10. ' "' → logprob: -8.357675552368164

Token 224: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038610879331827164
    2. ' and' → logprob: -3.5386109352111816
    3. ':
' → logprob: -4.788610935211182
    4. 'and' → logprob: -8.038610458374023
    5. ' :' → logprob: -8.913610458374023
    6. ' or' → logprob: -11.038610458374023
    7. '   ' → logprob: -11.913610458374023
    8. '       ' → logprob: -12.538610458374023
    9. '<|end|>' → logprob: -12.538610458374023
    10. ' :
' → logprob: -13.038610458374023

Token 225: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8389345407485962
    2. ' if' → logprob: -0.9639345407485962
    3. '       ' → logprob: -2.2139344215393066
    4. ' None' → logprob: -3.9639344215393066
    5. 'if' → logprob: -4.338934421539307
    6. ' return' → logprob: -4.463934421539307
    7. '   ' → logprob: -4.713934421539307
    8. ' and' → logprob: -5.338934421539307
    9. 'None' → logprob: -5.338934421539307
    10. ':' → logprob: -5.338934421539307

Token 226: ' a' (ID: 261)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3539811372756958
    2. ' if' → logprob: -1.2289811372756958
    3. 'self' → logprob: -6.228981018066406
    4. 'a' (adapté à ' a') → logprob: -6.353981018066406
    5. ' self' → logprob: -6.978981018066406
    6. ' a' → logprob: -7.603981018066406
    7. '       ' → logprob: -8.478981018066406
    8. '           ' → logprob: -9.478981018066406
    9. '   ' → logprob: -10.103981018066406
    10. '
' → logprob: -10.228981018066406

Token 227: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000498701527249068
    2. 'append' → logprob: -8.12549877166748
    3. '.' → logprob: -9.25049877166748
    4. '.extend' → logprob: -9.25049877166748
    5. ' append' → logprob: -12.25049877166748
    6. ' .' → logprob: -12.87549877166748
    7. 'Append' → logprob: -13.87549877166748
    8. '_append' → logprob: -14.25049877166748
    9. '.Append' → logprob: -14.62549877166748
    10. ' and' → logprob: -15.12549877166748

Token 228: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.967624019831419e-05
    2. 'node' → logprob: -10.125060081481934
    3. '(' → logprob: -10.875060081481934
    4. '((' → logprob: -15.875060081481934
    5. '[node' → logprob: -16.000059127807617
    6. '(
' → logprob: -16.125059127807617
    7. ' node' → logprob: -16.500059127807617
    8. ' (' → logprob: -17.500059127807617
    9. '(n' → logprob: -17.625059127807617
    10. ',node' → logprob: -18.250059127807617

Token 229: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006116729229688644
    2. ')' → logprob: -5.13111686706543
    3. ')
' → logprob: -9.25611686706543
    4. ' if' → logprob: -10.00611686706543
    5. 'if' → logprob: -10.75611686706543
    6. ' and' → logprob: -11.88111686706543
    7. '   ' → logprob: -12.13111686706543
    8. ' )' → logprob: -12.38111686706543
    9. 'and' → logprob: -13.00611686706543
    10. ' [' → logprob: -13.63111686706543

Token 230: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -14.125001907348633
    3. '])' → logprob: -14.750001907348633
    4. '1' → logprob: -14.875001907348633
    5. '[' → logprob: -15.375001907348633
    6. ']' → logprob: -15.937501907348633
    7. '   ' → logprob: -16.875001907348633
    8. '۰' → logprob: -17.000001907348633
    9. '
' → logprob: -17.250001907348633
    10. ')' → logprob: -17.437501907348633

Token 231: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.10998515784740448
    2. ')' → logprob: -2.984985113143921
    3. '])
' → logprob: -3.359985113143921
    4. ']' → logprob: -4.1099853515625
    5. ')
' → logprob: -6.3599853515625
    6. ' if' → logprob: -8.4849853515625
    7. ']
' → logprob: -9.3599853515625
    8. '<|end|>' → logprob: -9.4849853515625
    9. ' ])' → logprob: -9.7349853515625
    10. ']);' → logprob: -9.7349853515625

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.671163022518158
    2. '
' → logprob: -0.921163022518158
    3. '<|end|>' → logprob: -3.4211630821228027
    4. ' if' → logprob: -3.6711630821228027
    5. '        
' → logprob: -4.796163082122803
    6. 'elif' → logprob: -5.296163082122803
    7. '    
' → logprob: -5.421163082122803
    8. ' 
' → logprob: -6.046163082122803
    9. ' elif' → logprob: -6.171163082122803
    10. '  
' → logprob: -6.546163082122803

Token 233: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9762140512466431
    2. '       ' → logprob: -1.226214051246643
    3. ' if' → logprob: -1.351214051246643
    4. ' 
' → logprob: -4.2262139320373535
    5. '        
' → logprob: -4.4762139320373535
    6. 'if' (adapté à ' if') → logprob: -4.7262139320373535
    7. '   ' → logprob: -4.8512139320373535
    8. '    
' → logprob: -5.1012139320373535
    9. ' elif' → logprob: -5.2262139320373535
    10. '<|end|>' → logprob: -5.2262139320373535

Token 234: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.20830513536930084
    2. ' node' → logprob: -1.7083051204681396
    3. 'walk' → logprob: -5.458305358886719
    4. ' walk' → logprob: -6.333305358886719
    5. ' not' → logprob: -7.833305358886719
    6. 'not' → logprob: -7.833305358886719
    7. '(node' → logprob: -11.458305358886719
    8. '	node' → logprob: -11.583305358886719
    9. ' ' → logprob: -12.333305358886719
    10. '   ' → logprob: -12.583305358886719

Token 235: '[' (ID: 58)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.19578610360622406
    2. '[' → logprob: -2.4457859992980957
    3. ':' → logprob: -2.5707859992980957
    4. 'is' → logprob: -4.820785999298096
    5. 'and' → logprob: -5.320785999298096
    6. ' and' → logprob: -6.445785999298096
    7. ':
' → logprob: -9.945786476135254
    8. ' ' → logprob: -11.320786476135254
    9. ' :' → logprob: -11.320786476135254
    10. ' [' → logprob: -11.445786476135254

Token 236: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3617804944515228
    2. ' is' → logprob: -1.9867805242538452
    3. 'is' → logprob: -2.1117804050445557
    4. '1' → logprob: -4.236780643463135
    5. ' None' → logprob: -4.611780643463135
    6. '0' → logprob: -4.736780643463135
    7. '[' → logprob: -4.736780643463135
    8. ']' → logprob: -6.486780643463135
    9. 'not' → logprob: -7.361780643463135
    10. ')' → logprob: -7.861780643463135

Token 237: ']:
' (ID: 22152)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6048187017440796
    2. ' and' → logprob: -1.3548187017440796
    3. 'and' → logprob: -1.7298187017440796
    4. ':' → logprob: -4.354818820953369
    5. 'is' → logprob: -5.729818820953369
    6. '):' → logprob: -6.729818820953369
    7. ':
' → logprob: -8.229818344116211
    8. ')' → logprob: -8.354818344116211
    9. '<|end|>' → logprob: -8.729818344116211
    10. '):
' → logprob: -9.229818344116211

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008617527782917023
    2. ' self' → logprob: -5.508617401123047
    3. ':
' → logprob: -6.633617401123047
    4. ':' → logprob: -6.883617401123047
    5. '       ' → logprob: -7.008617401123047
    6. '   ' → logprob: -8.008617401123047
    7. ' and' → logprob: -8.258617401123047
    8. '               ' → logprob: -9.008617401123047
    9. '            
' → logprob: -9.133617401123047
    10. '	       ' → logprob: -9.258617401123047

Token 239: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.576425313949585
    2. 'self' (adapté à ' self') → logprob: -0.826425313949585
    3. '       ' → logprob: -8.201425552368164
    4. '   ' → logprob: -9.326425552368164
    5. '	self' → logprob: -9.701425552368164
    6. '           ' → logprob: -9.951425552368164
    7. ' ' → logprob: -12.076425552368164
    8. ' ' → logprob: -13.076425552368164
    9. '_self' → logprob: -13.326425552368164
    10. '(self' → logprob: -13.951425552368164

Token 240: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00016516048344783485
    2. '_walk' → logprob: -8.750164985656738
    3. '_w' → logprob: -12.625164985656738
    4. '.walk' → logprob: -12.875164985656738
    5. '.' → logprob: -15.125164985656738
    6. '   ' → logprob: -15.875164985656738
    7. ']._' → logprob: -16.250165939331055
    8. ' _' → logprob: -16.875165939331055
    9. ',_' → logprob: -17.125165939331055
    10. ' ' → logprob: -17.875165939331055

Token 241: 'walk' (ID: 26072)
  Prédit: 'walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.000181372175575234
    2. '_walk' → logprob: -8.625181198120117
    3. ' walk' → logprob: -13.625181198120117
    4. '.walk' → logprob: -14.375181198120117
    5. 'w' → logprob: -17.625181198120117
    6. '```' → logprob: -18.375181198120117
    7. 'walker' → logprob: -18.500181198120117
    8. '   ' → logprob: -19.250181198120117
    9. 'wrap' → logprob: -19.375181198120117
    10. 'walking' → logprob: -19.500181198120117

Token 242: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.4021237802808173e-05
    2. '(' → logprob: -11.500014305114746
    3. '(
' → logprob: -13.500014305114746
    4. 'node' → logprob: -13.625014305114746
    5. ' (' → logprob: -14.000014305114746
    6. ' node' → logprob: -15.125014305114746
    7. '[node' → logprob: -16.62501335144043
    8. ',node' → logprob: -16.87501335144043
    9. '=node' → logprob: -18.00001335144043
    10. '(n' → logprob: -18.00001335144043

Token 243: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.027371587231755257
    2. ',' → logprob: -3.652371644973755
    3. ',[' → logprob: -7.152371406555176
    4. ' ,' → logprob: -9.027371406555176
    5. '1' → logprob: -9.652371406555176
    6. ',node' → logprob: -10.902371406555176
    7. '   ' → logprob: -11.152371406555176
    8. ' [' → logprob: -11.152371406555176
    9. '	' → logprob: -11.527371406555176
    10. ',
' → logprob: -11.902371406555176

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.87501335144043
    3. '[' → logprob: -12.00001335144043
    4. '   ' → logprob: -15.62501335144043
    5. ''' → logprob: -16.62501335144043
    6. ',' → logprob: -16.75001335144043
    7. ']' → logprob: -17.37501335144043
    8. '][' → logprob: -17.37501335144043
    9. '
' → logprob: -17.75001335144043
    10. '0' → logprob: -17.87501335144043

Token 245: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015788905147928745
    2. ' ,' → logprob: -9.125158309936523
    3. ',a' → logprob: -10.250158309936523
    4. ',node' → logprob: -11.500158309936523
    5. 'a' → logprob: -13.125158309936523
    6. '],' → logprob: -15.250158309936523
    7. '       ' → logprob: -15.375158309936523
    8. '           ' → logprob: -15.625158309936523
    9. '),' → logprob: -15.875158309936523
    10. ' a' → logprob: -15.875158309936523

Token 246: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326186656951904
    2. ' a' → logprob: -1.313261866569519
    3. '	a' → logprob: -16.813261032104492
    4. '    ' → logprob: -18.063261032104492
    5. ' ' → logprob: -18.563261032104492
    6. ' ' → logprob: -18.563261032104492
    7. 'а' → logprob: -18.813261032104492
    8. ')a' → logprob: -18.813261032104492
    9. ',a' → logprob: -19.313261032104492
    10. ' а' → logprob: -19.438261032104492

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021093101531732827
    2. ' ,' → logprob: -8.500210762023926
    3. ')' → logprob: -12.125210762023926
    4. ',node' → logprob: -13.500210762023926
    5. ',a' → logprob: -15.750210762023926
    6. '       ' → logprob: -16.125211715698242
    7. '),' → logprob: -16.375211715698242
    8. ',
' → logprob: -16.375211715698242
    9. '   ' → logprob: -17.000211715698242
    10. ',w' → logprob: -17.125211715698242

Token 248: ' walk' (ID: 5229)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47598811984062195
    2. 'walk' → logprob: -1.3509881496429443
    3. ' walk' → logprob: -2.6009881496429443
    4. ' a' → logprob: -3.1009881496429443
    5. ' ' → logprob: -7.850987911224365
    6. 'node' → logprob: -9.850988388061523
    7. '_walk' → logprob: -10.600988388061523
    8. '    ' → logprob: -11.725988388061523
    9. ' walkthrough' → logprob: -11.725988388061523
    10. ' node' → logprob: -11.725988388061523

Token 249: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.00028278882382437587
    2. ',' → logprob: -8.750283241271973
    3. 'type' → logprob: -9.625283241271973
    4. ')' → logprob: -10.500283241271973
    5. ')
' → logprob: -11.500283241271973
    6. '[' → logprob: -12.000283241271973
    7. '       ' → logprob: -12.375283241271973
    8. 'Type' → logprob: -12.875283241271973
    9. '   ' → logprob: -13.250283241271973
    10. 'a' → logprob: -14.125283241271973

Token 250: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31337159872055054
    2. ')' → logprob: -1.3133716583251953
    3. '       ' → logprob: -10.063371658325195
    4. '   ' → logprob: -10.563371658325195
    5. ' )
' → logprob: -10.563371658325195
    6. ')

' → logprob: -12.313371658325195
    7. ',' → logprob: -12.313371658325195
    8. ' )' → logprob: -12.813371658325195
    9. ')
' → logprob: -13.688371658325195
    10. ',)
' → logprob: -14.063371658325195

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4354143440723419
    2. '
' → logprob: -1.0604143142700195
    3. '   ' → logprob: -6.0604143142700195
    4. '        
' → logprob: -7.3104143142700195
    5. ' if' → logprob: -7.3104143142700195
    6. ' 
' → logprob: -7.5604143142700195
    7. '<|end|>' → logprob: -7.5604143142700195
    8. '  
' → logprob: -7.6854143142700195
    9. '    
' → logprob: -7.6854143142700195
    10. '	' → logprob: -8.81041431427002

Token 252: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4770998954772949
    2. ' if' → logprob: -0.9770998954772949
    3. '       ' → logprob: -5.852099895477295
    4. '   ' → logprob: -8.977100372314453
    5. ' ' → logprob: -11.477100372314453
    6. '	if' → logprob: -11.977100372314453
    7. '
' → logprob: -14.602100372314453
    8. '```' → logprob: -14.852100372314453
    9. '           ' → logprob: -15.852100372314453
    10. '  ' → logprob: -15.977100372314453

Token 253: ' walk' (ID: 5229)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.07127075642347336
    2. ' walk' → logprob: -2.821270704269409
    3. 'node' → logprob: -4.821270942687988
    4. ' node' → logprob: -6.821270942687988
    5. 'not' → logprob: -10.196270942687988
    6. '   ' → logprob: -10.821270942687988
    7. ' ' → logprob: -11.071270942687988
    8. ' not' → logprob: -11.821270942687988
    9. 'type' → logprob: -12.196270942687988
    10. '  ' → logprob: -12.321270942687988

Token 254: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -1.5570885807392187e-05
    2. '[' → logprob: -11.625015258789062
    3. 'type' → logprob: -12.000015258789062
    4. 'Type' → logprob: -15.375015258789062
    5. 'out' → logprob: -16.000015258789062
    6. '_TYPE' → logprob: -18.750015258789062
    7. 't' → logprob: -18.750015258789062
    8. '_typ' → logprob: -19.125015258789062
    9. '```' → logprob: -19.375015258789062
    10. '_' → logprob: -19.750015258789062

Token 255: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11284210532903671
    2. '==' → logprob: -2.237842082977295
    3. ' ' → logprob: -11.987842559814453
    4. '[' → logprob: -12.737842559814453
    5. ' !=' → logprob: -12.862842559814453
    6. '==
' → logprob: -12.862842559814453
    7. '	' → logprob: -14.362842559814453
    8. ' >' → logprob: -14.362842559814453
    9. '   ' → logprob: -14.612842559814453
    10. ' <' → logprob: -14.612842559814453

Token 256: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002726298291236162
    2. ' ' → logprob: -6.002726078033447
    3. '2' → logprob: -8.502726554870605
    4. '   ' → logprob: -10.252726554870605
    5. '           ' → logprob: -12.252726554870605
    6. '       ' → logprob: -13.252726554870605
    7. '0' → logprob: -13.752726554870605
    8. '    ' → logprob: -13.752726554870605
    9. '  ' → logprob: -13.877726554870605
    10. '	' → logprob: -14.252726554870605

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000668713531922549
    2. ' ' → logprob: -7.500668525695801
    3. '2' → logprob: -9.1256685256958
    4. '   ' → logprob: -13.1256685256958
    5. '0' → logprob: -13.2506685256958
    6. '  ' → logprob: -14.8131685256958
    7. '```' → logprob: -14.8756685256958
    8. '           ' → logprob: -14.9381685256958
    9. '    ' → logprob: -15.1881685256958
    10. '     ' → logprob: -15.1881685256958

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28121280670166016
    2. ':
' → logprob: -1.5312128067016602
    3. '           ' → logprob: -3.65621280670166
    4. '       ' → logprob: -6.15621280670166
    5. '   ' → logprob: -8.03121280670166
    6. '==' → logprob: -8.15621280670166
    7. ' and' → logprob: -8.90621280670166
    8. ' ==' → logprob: -10.53121280670166
    9. ':

' → logprob: -10.90621280670166
    10. '):
' → logprob: -11.15621280670166

Token 259: '           ' (ID: 352)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5539420247077942
    2. '           ' → logprob: -1.4289419651031494
    3. '       ' → logprob: -2.5539419651031494
    4. ' a' → logprob: -2.8039419651031494
    5. '   ' → logprob: -3.0539419651031494
    6. ' ' → logprob: -8.67894172668457
    7. '	a' → logprob: -11.05394172668457
    8. '  ' → logprob: -11.30394172668457
    9. ',a' → logprob: -11.42894172668457
    10. '    ' → logprob: -11.67894172668457

Token 260: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0031796174589544535
    2. ' a' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.503179550170898
    4. '	a' → logprob: -14.753179550170898
    5. '       ' → logprob: -15.628179550170898
    6. ' ' → logprob: -18.0031795501709
    7. '  ' → logprob: -18.5031795501709
    8. '    ' → logprob: -18.7531795501709
    9. '           ' → logprob: -18.8781795501709
    10. ',a' → logprob: -20.2531795501709

Token 261: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.88418151892256e-05
    2. '.' → logprob: -9.750059127807617
    3. 'append' → logprob: -14.625059127807617
    4. '.extend' → logprob: -17.125059127807617
    5. '.app' → logprob: -17.250059127807617
    6. ' .' → logprob: -18.125059127807617
    7. '.Append' → logprob: -19.750059127807617
    8. 'appen' → logprob: -19.875059127807617
    9. '	append' → logprob: -20.750059127807617
    10. '.ap' → logprob: -20.875059127807617

Token 262: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -2.935296834039036e-06
    2. 'node' → logprob: -12.75000286102295
    3. '(' → logprob: -18.750003814697266
    4. ' node' → logprob: -19.375003814697266
    5. '[node' → logprob: -20.000003814697266
    6. '	node' → logprob: -21.250003814697266
    7. ',node' → logprob: -21.250003814697266
    8. '=node' → logprob: -21.250003814697266
    9. ' (' → logprob: -22.875003814697266
    10. '(n' → logprob: -23.500003814697266

Token 263: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '0' → logprob: -14.750000953674316
    3. ' [' → logprob: -16.75
    4. '   ' → logprob: -17.125
    5. '.' → logprob: -17.375
    6. '```' → logprob: -18.0
    7. ' ' → logprob: -18.25
    8. '[
' → logprob: -18.625
    9. '(' → logprob: -19.0
    10. ')' → logprob: -19.25

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.750000953674316
    3. '۰' → logprob: -17.000001907348633
    4. ' ' → logprob: -17.750001907348633
    5. '
' → logprob: -19.500001907348633
    6. '2' → logprob: -20.000001907348633
    7. '   ' → logprob: -20.500001907348633
    8. '1' → logprob: -20.500001907348633
    9. '０' → logprob: -20.625001907348633
    10. '०' → logprob: -20.875001907348633

Token 265: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.637786231702194e-05
    2. ')
' → logprob: -9.625086784362793
    3. ' )' → logprob: -11.875086784362793
    4. '       ' → logprob: -12.625086784362793
    5. ']' → logprob: -12.625086784362793
    6. ')]' → logprob: -12.875086784362793
    7. '])' → logprob: -13.375086784362793
    8. '<|end|>' → logprob: -14.500086784362793
    9. ')}' → logprob: -14.750086784362793
    10. '[' → logprob: -14.875086784362793

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021846420131623745
    2. 'if' → logprob: -6.252184867858887
    3. ' if' → logprob: -8.377184867858887
    4. '   ' → logprob: -10.627184867858887
    5. '```' → logprob: -14.502184867858887
    6. ' ' → logprob: -15.002184867858887
    7. '	' → logprob: -15.252184867858887
    8. '	if' → logprob: -15.252184867858887
    9. '           ' → logprob: -15.377184867858887
    10. '<|end|>' → logprob: -16.87718391418457

Token 267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10809150338172913
    2. ' if' → logprob: -2.3580915927886963
    3. '       ' → logprob: -4.858091354370117
    4. '   ' → logprob: -9.358091354370117
    5. '	if' → logprob: -13.858091354370117
    6. ' ' → logprob: -14.108091354370117
    7. '```' → logprob: -14.733091354370117
    8. 'If' → logprob: -16.483091354370117
    9. '           ' → logprob: -16.608091354370117
    10. '    ' → logprob: -17.233091354370117

Token 268: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.008615635335445404
    2. ' node' → logprob: -4.758615493774414
    3. '(node' → logprob: -14.883615493774414
    4. 'not' → logprob: -14.883615493774414
    5. '	node' → logprob: -15.258615493774414
    6. '[node' → logprob: -16.508615493774414
    7. ' ' → logprob: -16.883615493774414
    8. ' not' → logprob: -17.258615493774414
    9. '   ' → logprob: -17.383615493774414
    10. 'type' → logprob: -18.508615493774414

Token 269: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. 'and' → logprob: -15.125000953674316
    3. ' [' → logprob: -15.500000953674316
    4. ' and' → logprob: -16.875
    5. '[
' → logprob: -17.0
    6. '][' → logprob: -17.25
    7. '   ' → logprob: -17.375
    8. '```' → logprob: -17.75
    9. '.' → logprob: -18.625
    10. ':' → logprob: -19.0

Token 270: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014120421838015318
    2. '[' → logprob: -8.875141143798828
    3. ' ' → logprob: -14.125141143798828
    4. '
' → logprob: -15.625141143798828
    5. '```' → logprob: -16.125141143798828
    6. '   ' → logprob: -16.375141143798828
    7. '][' → logprob: -16.875141143798828
    8. '۲' → logprob: -17.375141143798828
    9. ',' → logprob: -17.875141143798828
    10. ']' → logprob: -18.187641143798828

Token 271: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2050689160823822
    2. '):' → logprob: -1.7050689458847046
    3. ')' → logprob: -6.830069065093994
    4. ']:' → logprob: -7.330069065093994
    5. '):
' → logprob: -7.330069065093994
    6. ':
' → logprob: -7.705069065093994
    7. '>:' → logprob: -7.955069065093994
    8. '}:' → logprob: -8.830068588256836
    9. ' and' → logprob: -9.705068588256836
    10. '>' → logprob: -9.830068588256836

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19697703421115875
    2. '       ' → logprob: -2.196977138519287
    3. 'self' → logprob: -2.696977138519287
    4. ' self' → logprob: -8.571976661682129
    5. '   ' → logprob: -9.946976661682129
    6. '               ' → logprob: -13.321976661682129
    7. '	self' → logprob: -13.321976661682129
    8. '          ' → logprob: -14.446976661682129
    9. '(self' → logprob: -15.071976661682129
    10. '        ' → logprob: -15.196976661682129

Token 273: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03814740478992462
    2. ' self' → logprob: -3.288147449493408
    3. '           ' → logprob: -9.16314697265625
    4. '	self' → logprob: -14.91314697265625
    5. '       ' → logprob: -15.03814697265625
    6. '               ' → logprob: -15.41314697265625
    7. '   ' → logprob: -15.53814697265625
    8. ' ' → logprob: -16.91314697265625
    9. '[self' → logprob: -16.91314697265625
    10. '(self' → logprob: -17.91314697265625

Token 274: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.088346359931165e-07
    2. '_walk' → logprob: -14.375000953674316
    3. '.walk' → logprob: -15.625000953674316
    4. '.' → logprob: -17.0
    5. ' _' → logprob: -17.625
    6. ' .' → logprob: -18.125
    7. '   ' → logprob: -18.375
    8. ' ' → logprob: -19.125
    9. '->_' → logprob: -19.75
    10. '_w' → logprob: -20.0

Token 275: 'walk' (ID: 26072)
  Prédit: 'walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -4.036524842376821e-05
    2. '_walk' → logprob: -10.125040054321289
    3. ' walk' → logprob: -16.00004005432129
    4. '.walk' → logprob: -16.37504005432129
    5. 'w' → logprob: -18.12504005432129
    6. 'alk' → logprob: -18.87504005432129
    7. 'Walk' → logprob: -19.37504005432129
    8. '```' → logprob: -20.25004005432129
    9. '
' → logprob: -20.87504005432129
    10. 'ack' → logprob: -21.37504005432129

Token 276: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.512236498361744e-07
    2. 'node' → logprob: -15.000000953674316
    3. '(' → logprob: -15.875000953674316
    4. '[node' → logprob: -17.75
    5. '(
' → logprob: -19.125
    6. ' (' → logprob: -19.75
    7. ' node' → logprob: -19.875
    8. '=node' → logprob: -20.25
    9. ',node' → logprob: -21.0
    10. '	node' → logprob: -22.0

Token 277: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.704273118884885e-07
    2. '[node' → logprob: -14.750000953674316
    3. '2' → logprob: -15.750000953674316
    4. 'node' → logprob: -16.625
    5. '```' → logprob: -17.5
    6. '(node' → logprob: -17.625
    7. '   ' → logprob: -18.125
    8. '[
' → logprob: -18.125
    9. '(' → logprob: -18.25
    10. ',' → logprob: -19.0

Token 278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019320894498378038
    2. '[' → logprob: -6.251932144165039
    3. 'node' → logprob: -12.876932144165039
    4. ' ' → logprob: -14.251932144165039
    5. '   ' → logprob: -15.251932144165039
    6. '```' → logprob: -17.25193214416504
    7. '[node' → logprob: -17.37693214416504
    8. '[
' → logprob: -18.50193214416504
    9. '(' → logprob: -19.00193214416504
    10. '
' → logprob: -19.25193214416504

Token 279: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014972723089158535
    2. ',node' → logprob: -4.639972686767578
    3. 'node' → logprob: -6.014972686767578
    4. '(node' → logprob: -6.514972686767578
    5. '[node' → logprob: -7.264972686767578
    6. ' node' → logprob: -8.014972686767578
    7. '],' → logprob: -9.264972686767578
    8. ' ,' → logprob: -9.389972686767578
    9. ']' → logprob: -10.389972686767578
    10. ')' → logprob: -11.014972686767578

Token 280: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.048587825149297714
    2. ' a' → logprob: -3.0485877990722656
    3. 'node' → logprob: -14.923587799072266
    4. ' node' → logprob: -16.048587799072266
    5. '	a' → logprob: -16.923587799072266
    6. ')a' → logprob: -18.173587799072266
    7. '[a' → logprob: -18.298587799072266
    8. ' ' → logprob: -18.923587799072266
    9. '_a' → logprob: -19.298587799072266
    10. '>a' → logprob: -19.298587799072266

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002989968634210527
    2. ',a' → logprob: -8.750299453735352
    3. 'a' → logprob: -9.000299453735352
    4. ' a' → logprob: -11.375299453735352
    5. ' ,' → logprob: -12.125299453735352
    6. '(a' → logprob: -17.00029945373535
    7. ')' → logprob: -17.00029945373535
    8. '[' → logprob: -17.75029945373535
    9. '[a' → logprob: -18.50029945373535
    10. '(' → logprob: -19.37529945373535

Token 282: ' walk' (ID: 5229)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31326204538345337
    2. ' a' → logprob: -1.3132619857788086
    3. '	a' → logprob: -15.938261985778809
    4. ' ' → logprob: -16.688262939453125
    5. ' ' → logprob: -16.688262939453125
    6. ',a' → logprob: -17.688262939453125
    7. ',' → logprob: -17.688262939453125
    8. '   ' → logprob: -18.063262939453125
    9. ')a' → logprob: -18.688262939453125
    10. ' а' → logprob: -18.813262939453125

Token 283: '_type' (ID: 3804)
  Prédit: '_type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.00023178798437584192
    2. 'type' → logprob: -8.500231742858887
    3. '[' → logprob: -10.625231742858887
    4. ',' → logprob: -13.500231742858887
    5. ')' → logprob: -14.250231742858887
    6. 'Type' → logprob: -14.375231742858887
    7. 'a' → logprob: -15.250231742858887
    8. '_TYPE' → logprob: -16.000232696533203
    9. '   ' → logprob: -16.250232696533203
    10. ' type' → logprob: -16.375232696533203

Token 284: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020182132720947266
    2. ')' → logprob: -6.252017974853516
    3. ')
' → logprob: -9.877017974853516
    4. '       ' → logprob: -10.502017974853516
    5. '   ' → logprob: -12.002017974853516
    6. ',a' → logprob: -13.002017974853516
    7. ' ,' → logprob: -13.752017974853516
    8. '           ' → logprob: -15.252017974853516
    9. '),' → logprob: -15.252017974853516
    10. ',
' → logprob: -15.252017974853516

Token 285: 'if' (ID: 366)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3526279032230377
    2. 'if' → logprob: -1.6026278734207153
    3. ' if' → logprob: -2.352627992630005
    4. '   ' → logprob: -7.602627754211426
    5. ' ' → logprob: -9.352627754211426
    6. '```' → logprob: -9.727627754211426
    7. '           ' → logprob: -10.977627754211426
    8. '	if' → logprob: -12.477627754211426
    9. '<|end|>' → logprob: -13.477627754211426
    10. '        ' → logprob: -13.477627754211426

Token 286: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.35754895210266113
    2. ' walk' → logprob: -1.3575489521026611
    3. '__' → logprob: -3.232548952102661
    4. 'walk' → logprob: -5.732548713684082
    5. ' not' → logprob: -7.982548713684082
    6. ' ' → logprob: -9.357548713684082
    7. '_' → logprob: -9.732548713684082
    8. '_walk' → logprob: -10.607548713684082
    9. ' self' → logprob: -10.732548713684082
    10. ' hasattr' → logprob: -10.732548713684082

Token 287: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6849662065505981
    2. 'name' → logprob: -0.8099662065505981
    3. ' __' → logprob: -3.3099660873413086
    4. ' ==' → logprob: -4.309966087341309
    5. '==' → logprob: -8.059966087341309
    6. '.name' → logprob: -8.559966087341309
    7. 'if' → logprob: -9.059966087341309
    8. '_name' → logprob: -9.184966087341309
    9. ' name' → logprob: -9.809966087341309
    10. '```' → logprob: -10.184966087341309

Token 288: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.008129963040119e-06
    2. 'name' → logprob: -12.875003814697266
    3. '__.__' → logprob: -15.000003814697266
    4. '==' → logprob: -15.375003814697266
    5. '____' → logprob: -15.750003814697266
    6. '___' → logprob: -16.250003814697266
    7. '__
' → logprob: -16.250003814697266
    8. ' ==' → logprob: -16.625003814697266
    9. '__.' → logprob: -16.750003814697266
    10. '```' → logprob: -17.125003814697266

Token 289: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00045700959162786603
    2. ' ==' → logprob: -8.000456809997559
    3. '==' → logprob: -9.250456809997559
    4. '__.__' → logprob: -11.000456809997559
    5. '=="' → logprob: -13.125456809997559
    6. '__.' → logprob: -13.500456809997559
    7. '__
' → logprob: -13.750456809997559
    8. ' ' → logprob: -14.125456809997559
    9. '___' → logprob: -14.375456809997559
    10. '_' → logprob: -14.375456809997559

Token 290: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10044410824775696
    2. ''' → logprob: -2.3504440784454346
    3. ' "__' → logprob: -8.475443840026855
    4. '__' → logprob: -11.225443840026855
    5. ' '__' → logprob: -11.475443840026855
    6. '   ' → logprob: -13.225443840026855
    7. ''"' → logprob: -14.100443840026855
    8. ' ' → logprob: -14.225443840026855
    9. '"name' → logprob: -14.850443840026855
    10. '("__' → logprob: -15.225443840026855

Token 291: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.981667537620524e-06
    2. 'name' → logprob: -13.500001907348633
    3. 'ma' → logprob: -14.625001907348633
    4. 'm' → logprob: -16.000001907348633
    5. ' main' → logprob: -17.875001907348633
    6. 'mai' → logprob: -18.000001907348633
    7. '_main' → logprob: -19.000001907348633
    8. '__' → logprob: -19.250001907348633
    9. '	main' → logprob: -20.125001907348633
    10. 'maine' → logprob: -20.375001907348633

Token 292: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.011054190807044506
    2. '__' → logprob: -4.511054039001465
    3. '__":
' → logprob: -12.261054039001465
    4. '__:' → logprob: -13.386054039001465
    5. '':
' → logprob: -17.63605499267578
    6. '__.' → logprob: -17.76105499267578
    7. '___' → logprob: -18.26105499267578
    8. '_' → logprob: -18.51105499267578
    9. '__
' → logprob: -18.51105499267578
    10. '__('' → logprob: -18.88605499267578

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3286014199256897
    2. '       ' → logprob: -1.328601360321045
    3. '    ' → logprob: -5.203601360321045
    4. '    
' → logprob: -6.078601360321045
    5. '        
' → logprob: -6.328601360321045
    6. '        ' → logprob: -7.203601360321045
    7. 'b' → logprob: -7.328601360321045
    8. ' ' → logprob: -7.578601360321045
    9. '<|end|>' → logprob: -8.078601837158203
    10. ' 
' → logprob: -8.078601837158203

Token 294: ' import' (ID: 1588)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.8419087529182434
    2. 'tree' → logprob: -1.2169086933135986
    3. ' bst' → logprob: -2.0919086933135986
    4. ' tree' → logprob: -2.0919086933135986
    5. '   ' → logprob: -4.466908931732178
    6. 't' → logprob: -5.341908931732178
    7. 'import' (adapté à ' import') → logprob: -5.841908931732178
    8. 'b' → logprob: -6.091908931732178
    9. ' t' → logprob: -6.966908931732178
    10. 'bt' → logprob: -7.091908931732178

Token 295: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0018159556202590466
    2. 'sys' → logprob: -6.3768157958984375
    3. ' random' → logprob: -9.251815795898438
    4. ' unittest' → logprob: -11.251815795898438
    5. 'random' → logprob: -12.876815795898438
    6. ' collections' → logprob: -13.751815795898438
    7. '=sys' → logprob: -15.501815795898438
    8. ' pytest' → logprob: -15.876815795898438
    9. '	sys' → logprob: -15.876815795898438
    10. ' json' → logprob: -16.251815795898438

Token 296: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01723725162446499
    2. '    
' → logprob: -4.267237186431885
    3. '
' → logprob: -7.017237186431885
    4. ' for' → logprob: -8.142237663269043
    5. 'b' → logprob: -8.767237663269043
    6. '        
' → logprob: -8.892237663269043
    7. ' 
' → logprob: -8.892237663269043
    8. ',' → logprob: -9.017237663269043
    9. 'for' → logprob: -9.142237663269043
    10. '       ' → logprob: -9.392237663269043

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1581212878227234
    2. ' bst' → logprob: -2.783121347427368
    3. ' b' → logprob: -3.283121347427368
    4. 'b' → logprob: -4.408121109008789
    5. ' tree' → logprob: -4.783121109008789
    6. 'bst' → logprob: -5.408121109008789
    7. ' for' → logprob: -5.408121109008789
    8. ' bt' → logprob: -5.658121109008789
    9. '    
' → logprob: -6.033121109008789
    10. 'tree' → logprob: -6.158121109008789

Token 298: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39740899205207825
    2. 'tree' → logprob: -1.7724089622497559
    3. 'bst' → logprob: -2.522408962249756
    4. ' tree' → logprob: -3.147408962249756
    5. ' bst' → logprob: -3.897408962249756
    6. 'b' → logprob: -5.272408962249756
    7. '
' → logprob: -6.147408962249756
    8. 'bs' → logprob: -6.772408962249756
    9. 't' → logprob: -6.772408962249756
    10. '    
' → logprob: -6.897408962249756

Token 299: '()
' (ID: 1234)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.941450834274292
    2. '_data' → logprob: -1.316450834274292
    3. '()' → logprob: -1.566450834274292
    4. '_' → logprob: -3.066450834274292
    5. '=' → logprob: -3.316450834274292
    6. 'data' → logprob: -4.066451072692871
    7. '_lines' → logprob: -4.316451072692871
    8. '_line' → logprob: -4.816451072692871
    9. '_list' → logprob: -5.566451072692871
    10. 's' → logprob: -5.566451072692871

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0513247549533844
    2. 'tree' → logprob: -4.426324844360352
    3. 'bst' → logprob: -4.676324844360352
    4. 'for' → logprob: -5.051324844360352
    5. ' bst' → logprob: -5.176324844360352
    6. 'b' → logprob: -5.801324844360352
    7. ' for' → logprob: -5.926324844360352
    8. 'keys' → logprob: -6.051324844360352
    9. 'data' → logprob: -6.551324844360352
    10. ' tree' → logprob: -6.801324844360352

Token 301: ' tree' (ID: 8165)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.6159764528274536
    2. 'tree' (adapté à ' tree') → logprob: -0.9909764528274536
    3. 'for' → logprob: -2.740976333618164
    4. 'root' → logprob: -4.740976333618164
    5. 'keys' → logprob: -5.240976333618164
    6. ' bst' → logprob: -6.365976333618164
    7. 't' → logprob: -6.615976333618164
    8. 'data' → logprob: -6.990976333618164
    9. ' tree' → logprob: -7.115976333618164
    10. 'print' → logprob: -7.490976333618164

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05801878497004509
    2. '=' → logprob: -2.933018684387207
    3. '.' → logprob: -5.808018684387207
    4. '.insert' → logprob: -9.933018684387207
    5. '   ' → logprob: -10.683018684387207
    6. '.=' → logprob: -11.558018684387207
    7. '    ' → logprob: -11.933018684387207
    8. '[' → logprob: -12.058018684387207
    9. ' ' → logprob: -12.058018684387207
    10. ' .' → logprob: -12.183018684387207

Token 303: ' Binary' (ID: 32672)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.0019287518225610256
    2. ' Binary' → logprob: -6.251928806304932
    3. '(Binary' → logprob: -16.251928329467773
    4. ' ' → logprob: -18.376928329467773
    5. 'binary' → logprob: -19.626928329467773
    6. '   ' → logprob: -19.876928329467773
    7. '.Binary' → logprob: -19.876928329467773
    8. '_binary' → logprob: -20.376928329467773
    9. ' binary' → logprob: -21.251928329467773
    10. 'Bin' → logprob: -21.626928329467773

Token 304: 'Search' (ID: 5975)
  Prédit: 'Search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Search' → logprob: -1.8624639324116288e-06
    2. '_search' → logprob: -14.000001907348633
    3. ' Search' → logprob: -14.875001907348633
    4. 'earch' → logprob: -15.625001907348633
    5. '_Search' → logprob: -16.000001907348633
    6. '<Search' → logprob: -16.000001907348633
    7. 'search' → logprob: -16.500001907348633
    8. 'S' → logprob: -17.125001907348633
    9. '(Search' → logprob: -17.250001907348633
    10. '.Search' → logprob: -17.500001907348633

Token 305: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -4.60414821645827e-06
    2. 'tree' → logprob: -12.875004768371582
    3. 'ree' → logprob: -14.000004768371582
    4. 'Tre' → logprob: -15.375004768371582
    5. '(Tree' → logprob: -15.375004768371582
    6. '_tree' → logprob: -15.375004768371582
    7. 'Node' → logprob: -15.875004768371582
    8. '<Tree' → logprob: -16.375003814697266
    9. '	Tree' → logprob: -16.375003814697266
    10. ' Tree' → logprob: -16.500003814697266

Token 306: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47420448064804077
    2. '()
' → logprob: -0.9742044806480408
    3. '()

' → logprob: -9.349204063415527
    4. '()
' → logprob: -10.224204063415527
    5. '()\' → logprob: -13.849204063415527
    6. ' ()' → logprob: -14.099204063415527
    7. '(' → logprob: -14.474204063415527
    8. ' ()
' → logprob: -14.974204063415527
    9. 'for' → logprob: -15.099204063415527
    10. '   ' → logprob: -15.349204063415527

Token 307: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43950319290161133
    2. '   ' → logprob: -1.0645031929016113
    3. ' for' → logprob: -4.564503192901611
    4. 'lines' → logprob: -9.064502716064453
    5. '	for' → logprob: -9.939502716064453
    6. 'data' → logprob: -10.314502716064453
    7. 'keys' → logprob: -10.314502716064453
    8. '
' → logprob: -10.689502716064453
    9. '    
' → logprob: -11.064502716064453
    10. ' lines' → logprob: -11.064502716064453

Token 308: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006134323193691671
    2. ' for' → logprob: -7.875613212585449
    3. '   ' → logprob: -8.37561321258545
    4. 'lines' → logprob: -14.37561321258545
    5. '    
' → logprob: -14.37561321258545
    6. 'while' → logprob: -14.62561321258545
    7. 'sys' → logprob: -15.12561321258545
    8. 'data' → logprob: -15.25061321258545
    9. 'line' → logprob: -15.25061321258545
    10. 'import' → logprob: -15.50061321258545

Token 309: ' cmd' (ID: 11704)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3872556984424591
    2. 'line' → logprob: -1.1372556686401367
    3. 'key' → logprob: -8.762255668640137
    4. '_' → logprob: -9.012255668640137
    5. ' key' → logprob: -9.762255668640137
    6. '_line' → logprob: -10.387255668640137
    7. 'l' → logprob: -12.012255668640137
    8. ' _' → logprob: -13.262255668640137
    9. 'x' → logprob: -13.387255668640137
    10. 'i' → logprob: -13.387255668640137

Token 310: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06525619328022003
    2. ',' → logprob: -2.815256118774414
    3. 'in' → logprob: -5.940256118774414
    4. ' ' → logprob: -8.815256118774414
    5. 'line' → logprob: -9.065256118774414
    6. ',line' → logprob: -9.190256118774414
    7. ' ,' → logprob: -9.440256118774414
    8. 's' → logprob: -9.565256118774414
    9. '_line' → logprob: -9.690256118774414
    10. '_' → logprob: -11.440256118774414

Token 311: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.014201470650732517
    2. ' sys' → logprob: -4.264201641082764
    3. 'map' → logprob: -10.514201164245605
    4. '(sys' → logprob: -11.889201164245605
    5. ' map' → logprob: -13.639201164245605
    6. '	sys' → logprob: -13.889201164245605
    7. '   ' → logprob: -14.014201164245605
    8. 'input' → logprob: -14.764201164245605
    9. '=sys' → logprob: -15.139201164245605
    10. 'iter' → logprob: -15.264201164245605

Token 312: 'l' (ID: 75)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04549497738480568
    2. 'line' → logprob: -3.17049503326416
    3. 'map' → logprob: -6.54549503326416
    4. ' sys' → logprob: -7.17049503326416
    5. 'input' → logprob: -9.04549503326416
    6. '   ' → logprob: -9.04549503326416
    7. ' line' → logprob: -10.42049503326416
    8. 'x' → logprob: -12.67049503326416
    9. 'iter' → logprob: -12.67049503326416
    10. ' map' → logprob: -13.17049503326416

Token 313: '.split' (ID: 10347)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6507744193077087
    2. 'ine' → logprob: -0.7757744193077087
    3. ' in' → logprob: -4.1507744789123535
    4. '.strip' → logprob: -7.2757744789123535
    5. '   ' → logprob: -7.7757744789123535
    6. ' for' → logprob: -8.150774002075195
    7. 'strip' → logprob: -8.275774002075195
    8. 'input' → logprob: -8.525774002075195
    9. '.rstrip' → logprob: -9.275774002075195
    10. 'ines' → logprob: -9.650774002075195

Token 314: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009132515988312662
    2. '('' → logprob: -7.500913143157959
    3. '()
' → logprob: -8.750913619995117
    4. 'line' → logprob: -10.000913619995117
    5. 'lines' → logprob: -10.250913619995117
    6. 'for' → logprob: -10.250913619995117
    7. '()[' → logprob: -10.750913619995117
    8. '   ' → logprob: -10.875913619995117
    9. ')' → logprob: -11.500913619995117
    10. '(None' → logprob: -11.750913619995117

Token 315: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25412675738334656
    2. 'for' → logprob: -1.504126787185669
    3. '()' → logprob: -6.87912654876709
    4. '   ' → logprob: -7.00412654876709
    5. '    ' → logprob: -9.00412654876709
    6. 'in' → logprob: -9.75412654876709
    7. ')' → logprob: -10.37912654876709
    8. ' ' → logprob: -11.12912654876709
    9. ' in' → logprob: -11.37912654876709
    10. '	for' → logprob: -11.87912654876709

Token 316: ' l' (ID: 305)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0004307884373702109
    2. ' sys' → logprob: -7.750430583953857
    3. '	sys' → logprob: -16.375431060791016
    4. '   ' → logprob: -16.875431060791016
    5. 'iter' → logprob: -18.375431060791016
    6. ' ' → logprob: -18.500431060791016
    7. '=sys' → logprob: -18.750431060791016
    8. 'open' → logprob: -19.250431060791016
    9. '
' → logprob: -19.625431060791016
    10. 'input' → logprob: -19.625431060791016

Token 317: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12165775895118713
    2. 'in' → logprob: -2.2466578483581543
    3. ' sys' → logprob: -5.371657848358154
    4. 'sys' → logprob: -5.496657848358154
    5. '   ' → logprob: -10.621657371520996
    6. 'import' → logprob: -11.121657371520996
    7. '=sys' → logprob: -12.871657371520996
    8. '(sys' → logprob: -12.996657371520996
    9. ' ' → logprob: -13.246657371520996
    10. 'input' → logprob: -13.496657371520996

Token 318: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00861729308962822
    2. ' sys' → logprob: -4.758617401123047
    3. '   ' → logprob: -13.133617401123047
    4. '	sys' → logprob: -14.508617401123047
    5. ' ' → logprob: -16.508617401123047
    6. '=sys' → logprob: -16.633617401123047
    7. 'open' → logprob: -16.883617401123047
    8. '(sys' → logprob: -17.008617401123047
    9. 'stdin' → logprob: -17.883617401123047
    10. '
' → logprob: -18.008617401123047

Token 319: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002619318547658622
    2. 'stdin' → logprob: -8.250262260437012
    3. ' stdin' → logprob: -14.500262260437012
    4. '.' → logprob: -15.625262260437012
    5. '.argv' → logprob: -16.750261306762695
    6. '(stdin' → logprob: -17.375261306762695
    7. '.stdout' → logprob: -18.250261306762695
    8. '.std' → logprob: -18.250261306762695
    9. '   ' → logprob: -19.375261306762695
    10. 'in' → logprob: -20.625261306762695

Token 320: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2256757766008377
    2. '):
' → logprob: -1.6006758213043213
    3. ')' → logprob: -8.725675582885742
    4. '   ' → logprob: -10.975675582885742
    5. ' if' → logprob: -11.225675582885742
    6. '):
' → logprob: -11.225675582885742
    7. '.readlines' → logprob: -11.225675582885742
    8. 'if' → logprob: -11.350675582885742
    9. '.readline' → logprob: -12.225675582885742
    10. ' ):' → logprob: -12.225675582885742

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009678177535533905
    2. '<|end|>' → logprob: -5.759678363800049
    3. '   ' → logprob: -6.384678363800049
    4. '    ' → logprob: -6.634678363800049
    5. ' ' → logprob: -6.634678363800049
    6. '        
' → logprob: -6.759678363800049
    7. ' if' → logprob: -8.13467788696289
    8. '	   ' → logprob: -8.63467788696289
    9. '[' → logprob: -9.63467788696289
    10. '<|end|>' → logprob: -9.63467788696289

Token 322: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021641770377755165
    2. ' if' → logprob: -4.021641731262207
    3. 'if' (adapté à ' if') → logprob: -6.896641731262207
    4. '   ' → logprob: -7.146641731262207
    5. '    ' → logprob: -7.896641731262207
    6. '<|end|>' → logprob: -8.021641731262207
    7. '        ' → logprob: -8.146641731262207
    8. ' ' → logprob: -8.646641731262207
    9. ' t' → logprob: -9.521641731262207
    10. 't' → logprob: -9.521641731262207

Token 323: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.20143651962280273
    2. ' cmd' → logprob: -1.7014365196228027
    3. '	cmd' → logprob: -11.076436996459961
    4. 'len' → logprob: -12.576436996459961
    5. '(cmd' → logprob: -12.576436996459961
    6. '.cmd' → logprob: -14.951436996459961
    7. ' len' → logprob: -15.201436996459961
    8. '       ' → logprob: -16.45143699645996
    9. '   ' → logprob: -16.70143699645996
    10. '           ' → logprob: -17.07643699645996

Token 324: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.465036105713807e-06
    2. '==' → logprob: -12.875007629394531
    3. ' [' → logprob: -13.375007629394531
    4. ' and' → logprob: -13.625007629394531
    5. ' ==' → logprob: -14.625007629394531
    6. '   ' → logprob: -15.125007629394531
    7. 'and' → logprob: -15.125007629394531
    8. '       ' → logprob: -15.375007629394531
    9. ':' → logprob: -15.625007629394531
    10. '.' → logprob: -16.12500762939453

Token 325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024406595912296325
    2. ' ' → logprob: -8.375244140625
    3. '1' → logprob: -12.687744140625
    4. '[' → logprob: -12.812744140625
    5. '   ' → logprob: -13.000244140625
    6. '
' → logprob: -13.562744140625
    7. ''' → logprob: -14.187744140625
    8. ''s' → logprob: -14.750244140625
    9. '
' → logprob: -15.062744140625
    10. '  ' → logprob: -15.187744140625

Token 326: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5801473259925842
    2. ' ==' → logprob: -0.8301473259925842
    3. '[' → logprob: -6.0801472663879395
    4. '=='' → logprob: -6.9551472663879395
    5. ']' → logprob: -7.7051472663879395
    6. '=' → logprob: -8.205147743225098
    7. ']==' → logprob: -9.455147743225098
    8. '==
' → logprob: -10.330147743225098
    9. '===' → logprob: -10.455147743225098
    10. ')' → logprob: -10.580147743225098

Token 327: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2266843467950821
    2. '==' → logprob: -1.601684331893921
    3. '[' → logprob: -7.4766845703125
    4. '=='' → logprob: -7.7266845703125
    5. '=' → logprob: -8.9766845703125
    6. '=="' → logprob: -10.3516845703125
    7. ' ' → logprob: -10.6016845703125
    8. ' =='' → logprob: -10.7266845703125
    9. '==
' → logprob: -10.8516845703125
    10. ' =' → logprob: -11.7266845703125

Token 328: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05772098898887634
    2. ''i' → logprob: -3.057720899581909
    3. '"' → logprob: -5.807721138000488
    4. ''ins' → logprob: -5.932721138000488
    5. ''I' → logprob: -6.307721138000488
    6. ' '' → logprob: -7.057721138000488
    7. ''a' → logprob: -8.057721138000488
    8. ''u' → logprob: -8.932721138000488
    9. ''in' → logprob: -8.932721138000488
    10. ''import' → logprob: -10.682721138000488

Token 329: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.048202112317085266
    2. 'i' → logprob: -3.1732020378112793
    3. ''' → logprob: -6.173202037811279
    4. 'add' → logprob: -7.298202037811279
    5. 'ins' → logprob: -7.423202037811279
    6. 'I' → logprob: -8.298202514648438
    7. 'find' → logprob: -8.548202514648438
    8. 'set' → logprob: -8.548202514648438
    9. ''i' → logprob: -8.548202514648438
    10. 'print' → logprob: -8.923202514648438

Token 330: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0902295708656311
    2. '':
' → logprob: -2.4652295112609863
    3. ''' → logprob: -6.715229511260986
    4. '':
' → logprob: -10.090229988098145
    5. '':

' → logprob: -11.215229988098145
    6. '(':' → logprob: -12.215229988098145
    7. ':' → logprob: -12.590229988098145
    8. ' ':' → logprob: -12.965229988098145
    9. ''):
' → logprob: -12.965229988098145
    10. '':'' → logprob: -13.090229988098145

Token 331: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.253654807806015
    2. '       ' → logprob: -2.253654718399048
    3. ':' → logprob: -2.503654718399048
    4. '(tree' → logprob: -4.253654956817627
    5. ':
' → logprob: -4.628654956817627
    6. '():
' → logprob: -6.128654956817627
    7. ' tree' → logprob: -6.253654956817627
    8. '            
' → logprob: -6.503654956817627
    9. 'tree' → logprob: -7.003654956817627
    10. '        
' → logprob: -7.128654956817627

Token 332: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.4934373199939728
    2. 'tree' (adapté à ' tree') → logprob: -0.9934372901916504
    3. '           ' → logprob: -3.9934372901916504
    4. '	tree' → logprob: -7.49343729019165
    5. '       ' → logprob: -8.993437767028809
    6. '               ' → logprob: -11.368437767028809
    7. '	       ' → logprob: -11.743437767028809
    8. '(tree' → logprob: -11.993437767028809
    9. '_tree' → logprob: -12.118437767028809
    10. '.tree' → logprob: -12.368437767028809

Token 333: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.004081247374415398
    2. '.' → logprob: -5.5040812492370605
    3. ' .' → logprob: -13.129080772399902
    4. '.append' → logprob: -14.629080772399902
    5. '.put' → logprob: -15.879080772399902
    6. '   ' → logprob: -16.37908172607422
    7. 'insert' → logprob: -17.00408172607422
    8. '.
' → logprob: -17.25408172607422
    9. '.inject' → logprob: -17.37908172607422
    10. '.Insert' → logprob: -17.50408172607422

Token 334: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015192650025710464
    2. '(' → logprob: -6.501519203186035
    3. '(cmd' → logprob: -12.126519203186035
    4. 'int' → logprob: -12.126519203186035
    5. ' (' → logprob: -12.626519203186035
    6. '(float' → logprob: -14.126519203186035
    7. '(
' → logprob: -14.251519203186035
    8. ' int' → logprob: -14.376519203186035
    9. '((' → logprob: -15.126519203186035
    10. '(eval' → logprob: -15.376519203186035

Token 335: '(cmd' (ID: 31322)
  Prédit: '(cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cmd' → logprob: -0.0002765902318060398
    2. '(' → logprob: -8.375276565551758
    3. 'cmd' → logprob: -10.125276565551758
    4. ' (' → logprob: -12.750276565551758
    5. ')' → logprob: -13.625276565551758
    6. ')(' → logprob: -14.250276565551758
    7. '	cmd' → logprob: -14.625276565551758
    8. ' cmd' → logprob: -14.750276565551758
    9. '(
' → logprob: -15.750276565551758
    10. '
' → logprob: -17.375276565551758

Token 336: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31362468004226685
    2. '(cmd' → logprob: -1.313624620437622
    3. '(' → logprob: -8.188624382019043
    4. 'cmd' → logprob: -9.938624382019043
    5. '	cmd' → logprob: -11.313624382019043
    6. ' cmd' → logprob: -11.688624382019043
    7. '   ' → logprob: -12.188624382019043
    8. '(
' → logprob: -12.688624382019043
    9. ' (' → logprob: -13.188624382019043
    10. '([' → logprob: -13.563624382019043

Token 337: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.034592388459714e-06
    2. '[' → logprob: -12.625005722045898
    3. ' ' → logprob: -13.250005722045898
    4. '   ' → logprob: -14.000005722045898
    5. '
' → logprob: -16.5000057220459
    6. '  ' → logprob: -18.7500057220459
    7. '2' → logprob: -18.8750057220459
    8. '```' → logprob: -18.8750057220459
    9. '    ' → logprob: -19.6250057220459
    10. ')' → logprob: -19.8750057220459

Token 338: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00016194197814911604
    2. '))
' → logprob: -9.125162124633789
    3. ')' → logprob: -10.125162124633789
    4. ' ))' → logprob: -11.500162124633789
    5. '()))' → logprob: -13.375162124633789
    6. ')))' → logprob: -14.750162124633789
    7. '])' → logprob: -15.375162124633789
    8. '))

' → logprob: -15.625162124633789
    9. ''))' → logprob: -16.00016212463379
    10. ']))' → logprob: -16.37516212463379

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00382370688021183
    2. 'elif' → logprob: -5.628823757171631
    3. ' elif' → logprob: -8.628823280334473
    4. '<|end|>' → logprob: -10.378823280334473
    5. '	elif' → logprob: -12.253823280334473
    6. '	' → logprob: -13.003823280334473
    7. '   ' → logprob: -13.253823280334473
    8. '           ' → logprob: -14.128823280334473
    9. 'else' → logprob: -14.128823280334473
    10. ' ' → logprob: -14.128823280334473

Token 340: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.03812537342309952
    2. '       ' → logprob: -3.5381252765655518
    3. ' elif' → logprob: -4.788125514984131
    4. '	elif' → logprob: -11.913125038146973
    5. '   ' → logprob: -13.163125038146973
    6. 'if' → logprob: -13.288125038146973
    7. ' ' → logprob: -14.788125038146973
    8. 'else' → logprob: -14.788125038146973
    9. 'el' → logprob: -15.163125038146973
    10. '           ' → logprob: -16.16312599182129

Token 341: ' cmd' (ID: 11704)
  Prédit: ' cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cmd' → logprob: -0.3132786154747009
    2. 'cmd' → logprob: -1.3132786750793457
    3. '(cmd' → logprob: -11.313278198242188
    4. '	cmd' → logprob: -12.688278198242188
    5. ''' → logprob: -14.313278198242188
    6. '.cmd' → logprob: -15.188278198242188
    7. ' ' → logprob: -15.563278198242188
    8. '_cmd' → logprob: -16.313278198242188
    9. '    ' → logprob: -16.813278198242188
    10. '   ' → logprob: -16.938278198242188

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0056168390437960625
    2. ' ==' → logprob: -5.255616664886475
    3. '==' → logprob: -7.880616664886475
    4. ' [' → logprob: -13.255617141723633
    5. '[]' → logprob: -14.005617141723633
    6. ' ' → logprob: -14.130617141723633
    7. '   ' → logprob: -14.505617141723633
    8. '```' → logprob: -15.255617141723633
    9. '=='' → logprob: -15.380617141723633
    10. ' =' → logprob: -15.755617141723633

Token 343: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.155698761343956
    2. ''s' → logprob: -2.280698776245117
    3. ''name' → logprob: -4.905698776245117
    4. ''t' → logprob: -5.280698776245117
    5. ''user' → logprob: -5.280698776245117
    6. ''value' → logprob: -5.780698776245117
    7. ''x' → logprob: -5.905698776245117
    8. ''d' → logprob: -6.155698776245117
    9. ' '' → logprob: -6.280698776245117
    10. ''b' → logprob: -6.280698776245117

Token 344: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4861533045768738
    2. '==' → logprob: -1.4861533641815186
    3. ']' → logprob: -1.8611533641815186
    4. ']==' → logprob: -5.8611531257629395
    5. '']' → logprob: -9.111153602600098
    6. '[' → logprob: -9.611153602600098
    7. '=' → logprob: -10.111153602600098
    8. ' ]' → logprob: -10.111153602600098
    9. ')' → logprob: -10.111153602600098
    10. '=='' → logprob: -10.236153602600098

Token 345: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11302227526903152
    2. '==' → logprob: -2.2380223274230957
    3. '[' → logprob: -9.238021850585938
    4. '=='' → logprob: -9.988021850585938
    5. '=' → logprob: -10.863021850585938
    6. ''' → logprob: -11.238021850585938
    7. ' =' → logprob: -12.363021850585938
    8. '===' → logprob: -12.488021850585938
    9. ' =='' → logprob: -12.863021850585938
    10. ' ' → logprob: -12.863021850585938

Token 346: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007455448503606021
    2. ' '' → logprob: -7.25074577331543
    3. ''s' → logprob: -11.50074577331543
    4. '('' → logprob: -11.62574577331543
    5. '"' → logprob: -12.37574577331543
    6. ''ex' → logprob: -12.62574577331543
    7. ' ' → logprob: -13.25074577331543
    8. ''post' → logprob: -14.00074577331543
    9. ''in' → logprob: -14.00074577331543
    10. ''ins' → logprob: -14.37574577331543

Token 347: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.05841995030641556
    2. 'print' → logprob: -3.683419942855835
    3. ''' → logprob: -3.808419942855835
    4. 'walk' → logprob: -5.308420181274414
    5. ' find' → logprob: -5.808420181274414
    6. 'insert' → logprob: -7.183420181274414
    7. 'delete' → logprob: -8.808420181274414
    8. ' walk' → logprob: -9.058420181274414
    9. ''in' → logprob: -9.558420181274414
    10. 'remove' → logprob: -9.558420181274414

Token 348: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.14472749829292297
    2. '':' → logprob: -2.0197274684906006
    3. ''' → logprob: -6.51972770690918
    4. '':
' → logprob: -8.14472770690918
    5. ''):
' → logprob: -9.51972770690918
    6. ' '' → logprob: -10.14472770690918
    7. ':' → logprob: -10.26972770690918
    8. '   ' → logprob: -10.39472770690918
    9. '':

' → logprob: -10.76972770690918
    10. ':
' → logprob: -10.89472770690918

Token 349: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4411468803882599
    2. 'print' → logprob: -2.3161468505859375
    3. 'result' → logprob: -2.3161468505859375
    4. ' print' → logprob: -2.4411468505859375
    5. '       ' → logprob: -3.4411468505859375
    6. ' result' → logprob: -4.0661468505859375
    7. ' found' → logprob: -4.5661468505859375
    8. 'found' → logprob: -5.0661468505859375
    9. 'node' → logprob: -7.1911468505859375
    10. ' key' → logprob: -7.3161468505859375

Token 350: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.021091463044285774
    2. ' print' → logprob: -4.771091461181641
    3. 'result' → logprob: -5.021091461181641
    4. 'node' → logprob: -6.271091461181641
    5. 'res' → logprob: -6.896091461181641
    6. 'key' → logprob: -7.021091461181641
    7. 'found' → logprob: -7.021091461181641
    8. '           ' → logprob: -7.771091461181641
    9. ' found' → logprob: -8.64609146118164
    10. ' res' → logprob: -9.14609146118164

Token 351: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.27119579911231995
    2. '("' → logprob: -2.396195888519287
    3. ''' → logprob: -3.021195888519287
    4. '(tree' → logprob: -3.521195888519287
    5. '(' → logprob: -3.646195888519287
    6. '(int' → logprob: -3.896195888519287
    7. '"' → logprob: -4.521195888519287
    8. 'int' → logprob: -5.521195888519287
    9. 'tree' → logprob: -6.271195888519287
    10. '1' → logprob: -6.396195888519287

Token 352: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.5080414414405823
    2. ''' → logprob: -1.2580413818359375
    3. 'Found' → logprob: -3.2580413818359375
    4. 'found' → logprob: -3.2580413818359375
    5. 'Yes' → logprob: -4.0080413818359375
    6. 'YES' → logprob: -4.8830413818359375
    7. '1' → logprob: -5.2580413818359375
    8. '"' → logprob: -5.8830413818359375
    9. 'key' → logprob: -7.1330413818359375
    10. 'True' → logprob: -7.5080413818359375

Token 353: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0683535037969705e-05
    2. '')' → logprob: -11.62501049041748
    3. '"' → logprob: -13.62501049041748
    4. ' if' → logprob: -15.37501049041748
    5. ' '' → logprob: -16.125011444091797
    6. 'if' → logprob: -16.500011444091797
    7. ')'' → logprob: -17.250011444091797
    8. '')
' → logprob: -17.750011444091797
    9. '\n' → logprob: -18.625011444091797
    10. '',' → logprob: -18.625011444091797

Token 354: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5766873359680176
    2. 'if' → logprob: -0.8266873359680176
    3. ')' → logprob: -7.326687335968018
    4. '   ' → logprob: -9.57668685913086
    5. '    ' → logprob: -12.20168685913086
    6. '       ' → logprob: -12.95168685913086
    7. ',' → logprob: -13.20168685913086
    8. ' ' → logprob: -13.32668685913086
    9. '"' → logprob: -13.70168685913086
    10. ''' → logprob: -13.70168685913086

Token 355: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.20142202079296112
    2. ' tree' → logprob: -1.7014219760894775
    3. '(tree' → logprob: -12.326421737670898
    4. '	tree' → logprob: -12.576421737670898
    5. '   ' → logprob: -14.576421737670898
    6. 'Tree' → logprob: -16.2014217376709
    7. ' ' → logprob: -16.7014217376709
    8. '/tree' → logprob: -16.8264217376709
    9. 'binary' → logprob: -17.3264217376709
    10. 't' → logprob: -17.7014217376709

Token 356: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.09242892265319824
    2. '.' → logprob: -2.4674289226531982
    3. '.findall' → logprob: -5.967429161071777
    4. ' .' → logprob: -7.092429161071777
    5. '   ' → logprob: -9.842429161071777
    6. ').' → logprob: -10.717429161071777
    7. 'find' → logprob: -12.592429161071777
    8. '.
' → logprob: -13.092429161071777
    9. '.Find' → logprob: -13.092429161071777
    10. '
' → logprob: -13.217429161071777

Token 357: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.7888184528565034e-05
    2. '(' → logprob: -10.8750581741333
    3. ' (' → logprob: -10.8750581741333
    4. 'int' → logprob: -10.8750581741333
    5. ' int' → logprob: -15.0000581741333
    6. '   ' → logprob: -15.3750581741333
    7. '[int' → logprob: -15.6250581741333
    8. '<int' → logprob: -16.000057220458984
    9. '=int' → logprob: -16.250057220458984
    10. '(
' → logprob: -16.250057220458984

Token 358: '(cmd' (ID: 31322)
  Prédit: '(cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cmd' → logprob: -2.6060808522743173e-05
    2. ' (' → logprob: -11.250025749206543
    3. 'cmd' → logprob: -12.000025749206543
    4. '(' → logprob: -12.000025749206543
    5. ')' → logprob: -15.375025749206543
    6. ' cmd' → logprob: -15.875025749206543
    7. '(
' → logprob: -16.25002670288086
    8. '
' → logprob: -16.37502670288086
    9. ')(' → logprob: -16.37502670288086
    10. '	cmd' → logprob: -17.00002670288086

Token 359: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.625008583068848
    3. '1' → logprob: -13.375008583068848
    4. ')' → logprob: -13.875008583068848
    5. '(cmd' → logprob: -14.250008583068848
    6. ')[' → logprob: -14.625008583068848
    7. '   ' → logprob: -14.750008583068848
    8. '
' → logprob: -15.750008583068848
    9. 'cmd' → logprob: -15.750008583068848
    10. '       ' → logprob: -15.750008583068848

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.12127808178775e-05
    2. '[' → logprob: -10.000051498413086
    3. ' ' → logprob: -12.750051498413086
    4. 'cmd' → logprob: -13.375051498413086
    5. '   ' → logprob: -14.625051498413086
    6. '2' → logprob: -14.750051498413086
    7. 'command' → logprob: -16.625051498413086
    8. ')' → logprob: -16.875051498413086
    9. '(' → logprob: -16.875051498413086
    10. '```' → logprob: -17.187551498413086

Token 361: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16369511187076569
    2. '()))' → logprob: -1.9136950969696045
    3. '()' → logprob: -6.663695335388184
    4. '[' → logprob: -6.788695335388184
    5. '0' → logprob: -8.538695335388184
    6. '])' → logprob: -8.913695335388184
    7. '()[' → logprob: -9.038695335388184
    8. ')' → logprob: -9.288695335388184
    9. ' ))' → logprob: -9.413695335388184
    10. '())' → logprob: -9.413695335388184

Token 362: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3997991979122162
    2. ' else' → logprob: -1.1497992277145386
    3. ' is' → logprob: -4.399799346923828
    4. 'is' → logprob: -7.524799346923828
    5. ' ' → logprob: -11.899799346923828
    6. '        ' → logprob: -12.274799346923828
    7. '    ' → logprob: -12.524799346923828
    8. '            ' → logprob: -12.524799346923828
    9. '()' → logprob: -13.274799346923828
    10. '   ' → logprob: -13.399799346923828

Token 363: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004923873930238187
    2. ''ny' → logprob: -8.000492095947266
    3. ' '' → logprob: -9.375492095947266
    4. '   ' → logprob: -9.750492095947266
    5. '       ' → logprob: -13.000492095947266
    6. ''n' → logprob: -13.375492095947266
    7. ' no' → logprob: -13.625492095947266
    8. ''ok' → logprob: -13.625492095947266
    9. ''any' → logprob: -13.625492095947266
    10. 'no' → logprob: -13.750492095947266

Token 364: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.5761293172836304
    2. ''' → logprob: -0.8261293172836304
    3. '	no' → logprob: -9.201128959655762
    4. ' no' → logprob: -9.826128959655762
    5. ''n' → logprob: -11.701128959655762
    6. ' ' → logprob: -11.951128959655762
    7. '   ' → logprob: -11.951128959655762
    8. 'print' → logprob: -12.326128959655762
    9. '
' → logprob: -13.451128959655762
    10. ''ny' → logprob: -13.576128959655762

Token 365: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.483026921749115
    2. '')' → logprob: -0.983026921749115
    3. '')
' → logprob: -5.35802698135376
    4. ')
' → logprob: -5.48302698135376
    5. ' )' → logprob: -11.358026504516602
    6. '")' → logprob: -11.733026504516602
    7. '       ' → logprob: -12.233026504516602
    8. ''' → logprob: -12.233026504516602
    9. ')')
' → logprob: -12.608026504516602
    10. '   ' → logprob: -12.983026504516602

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15003077685832977
    2. ' else' → logprob: -2.4000308513641357
    3. 'else' → logprob: -3.4000308513641357
    4. ' elif' → logprob: -4.525030612945557
    5. 'elif' → logprob: -5.775030612945557
    6. '<|end|>' → logprob: -7.400030612945557
    7. '   ' → logprob: -7.775030612945557
    8. ' ' → logprob: -9.525031089782715
    9. ' if' → logprob: -10.150031089782715
    10. '    ' → logprob: -10.150031089782715

Token 367: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5742433071136475
    2. 'else' (adapté à ' else') → logprob: -1.3242433071136475
    3. '       ' → logprob: -1.9492433071136475
    4. ' elif' → logprob: -3.8242433071136475
    5. ' else' → logprob: -5.199243545532227
    6. '   ' → logprob: -7.074243545532227
    7. '	elif' → logprob: -8.824243545532227
    8. ' ' → logprob: -9.949243545532227
    9. '    ' → logprob: -10.449243545532227
    10. '  ' → logprob: -11.449243545532227

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5758678317070007
    2. '           ' → logprob: -1.2008678913116455
    3. ' if' → logprob: -2.9508678913116455
    4. ':
' → logprob: -3.2008678913116455
    5. '       ' → logprob: -3.4508678913116455
    6. 'if' → logprob: -4.575867652893066
    7. '        ' → logprob: -7.200867652893066
    8. ' :' → logprob: -8.200867652893066
    9. '          ' → logprob: -8.575867652893066
    10. '   ' → logprob: -8.575867652893066

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30955132842063904
    2. 'print' → logprob: -1.4345513582229614
    3. ' print' → logprob: -4.434551239013672
    4. '       ' → logprob: -4.434551239013672
    5. '   ' → logprob: -6.809551239013672
    6. 'tree' → logprob: -7.309551239013672
    7. 'a' → logprob: -7.559551239013672
    8. ' if' → logprob: -7.559551239013672
    9. 'if' → logprob: -7.684551239013672
    10. ' tree' → logprob: -7.934551239013672

Token 370: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04696813225746155
    2. ' print' → logprob: -4.17196798324585
    3. 'for' → logprob: -4.17196798324585
    4. 'a' → logprob: -4.92196798324585
    5. ' for' → logprob: -6.04696798324585
    6. 'if' → logprob: -6.04696798324585
    7. '           ' → logprob: -7.29696798324585
    8. 'result' → logprob: -7.54696798324585
    9. ' if' → logprob: -7.54696798324585
    10. ' a' → logprob: -7.67196798324585

Token 371: '('',' (ID: 53836)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08983378857374191
    2. '(*' → logprob: -2.5898337364196777
    3. '(tree' → logprob: -4.714833736419678
    4. '(' → logprob: -6.839833736419678
    5. '("' → logprob: -7.589833736419678
    6. '('\' → logprob: -8.964834213256836
    7. '(*(' → logprob: -9.214834213256836
    8. '()' → logprob: -9.839834213256836
    9. ''' → logprob: -10.339834213256836
    10. 'tree' → logprob: -10.714834213256836

Token 372: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.46437928080558777
    2. 'tree' → logprob: -1.2143793106079102
    3. ''' → logprob: -3.21437931060791
    4. ''t' → logprob: -3.58937931060791
    5. ')' → logprob: -5.96437931060791
    6. ' *' → logprob: -6.33937931060791
    7. ''end' → logprob: -7.71437931060791
    8. ' tree' → logprob: -7.83937931060791
    9. '*[' → logprob: -8.21437931060791
    10. '*t' → logprob: -8.33937931060791

Token 373: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -5.967624019831419e-05
    2. '(tree' → logprob: -10.500060081481934
    3. ' tree' → logprob: -10.500060081481934
    4. '[' → logprob: -12.500060081481934
    5. '   ' → logprob: -15.125060081481934
    6. 'map' → logprob: -16.000059127807617
    7. '	tree' → logprob: -16.375059127807617
    8. 'tuple' → logprob: -16.750059127807617
    9. 'list' → logprob: -17.125059127807617
    10. '       ' → logprob: -17.250059127807617

Token 374: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -7.219262624857947e-05
    2. '.' → logprob: -9.625072479248047
    3. ' .' → logprob: -12.500072479248047
    4. 'walk' → logprob: -13.375072479248047
    5. ').' → logprob: -15.000072479248047
    6. '.tree' → logprob: -15.750072479248047
    7. '.visit' → logprob: -16.250072479248047
    8. '.wave' → logprob: -17.000072479248047
    9. '.w' → logprob: -17.125072479248047
    10. '.wall' → logprob: -17.500072479248047

Token 375: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00021712594025302678
    2. '([' → logprob: -9.75021743774414
    3. '((' → logprob: -9.87521743774414
    4. '(cmd' → logprob: -10.37521743774414
    5. '(int' → logprob: -10.62521743774414
    6. '('' → logprob: -10.87521743774414
    7. '(-' → logprob: -11.75021743774414
    8. '(
' → logprob: -12.00021743774414
    9. ' (' → logprob: -12.62521743774414
    10. ')' → logprob: -12.87521743774414

Token 376: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.046231526881456375
    2. 'int' → logprob: -3.421231508255005
    3. '1' → logprob: -5.171231746673584
    4. '0' → logprob: -6.046231746673584
    5. '{'' → logprob: -6.171231746673584
    6. '{
' → logprob: -7.046231746673584
    7. '(' → logprob: -7.796231746673584
    8. '(int' → logprob: -7.796231746673584
    9. '{"' → logprob: -8.171231269836426
    10. '{' → logprob: -9.171231269836426

Token 377: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007080250070430338
    2. ')' → logprob: -7.625708103179932
    3. '))
' → logprob: -8.625707626342773
    4. '),' → logprob: -10.625707626342773
    5. ' ))' → logprob: -11.500707626342773
    6. ')))' → logprob: -12.875707626342773
    7. '0' → logprob: -13.750707626342773
    8. ' ' → logprob: -14.125707626342773
    9. '))

' → logprob: -14.375707626342773
    10. '()))' → logprob: -15.125707626342773

Token 378: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05014663562178612
    2. '           ' → logprob: -3.8001465797424316
    3. '   ' → logprob: -4.300146579742432
    4. '<|end|>' → logprob: -4.925146579742432
    5. ')' → logprob: -6.300146579742432
    6. 'else' → logprob: -6.925146579742432
    7. '        ' → logprob: -7.050146579742432
    8. ' else' → logprob: -7.925146579742432
    9. ' ' → logprob: -8.17514705657959
    10. '[' → logprob: -8.30014705657959

Token 379: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.346649706363678
    2. '       ' → logprob: -1.5966496467590332
    3. '   ' → logprob: -3.096649646759033
    4. '<|end|>' → logprob: -4.221649646759033
    5. ')' → logprob: -4.721649646759033
    6. 'else' → logprob: -5.096649646759033
    7. '        ' → logprob: -5.596649646759033
    8. '            ' → logprob: -6.471649646759033
    9. ' ' → logprob: -6.596649646759033
    10. '          ' → logprob: -6.846649646759033

Token 380: '('',' (ID: 53836)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3907802104949951
    2. '('',' → logprob: -1.1407802104949951
    3. '(' → logprob: -5.640780448913574
    4. '()' → logprob: -8.015780448913574
    5. '("",' → logprob: -12.265780448913574
    6. '(*' → logprob: -12.390780448913574
    7. ' ('' → logprob: -12.515780448913574
    8. '(
' → logprob: -13.140780448913574
    9. '("' → logprob: -13.640780448913574
    10. '('\' → logprob: -14.140780448913574

Token 381: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0002584785979706794
    2. ' *' → logprob: -8.375258445739746
    3. '*,' → logprob: -11.250258445739746
    4. '*t' → logprob: -11.750258445739746
    5. '*self' → logprob: -13.250258445739746
    6. '*time' → logprob: -14.125258445739746
    7. '*p' → logprob: -14.250258445739746
    8. '   ' → logprob: -14.750258445739746
    9. ' ' → logprob: -14.875258445739746
    10. 'tree' → logprob: -15.125258445739746

Token 382: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -2.339278580620885e-06
    2. ' tree' → logprob: -13.000001907348633
    3. '(tree' → logprob: -17.375001907348633
    4. '   ' → logprob: -17.500001907348633
    5. ' ' → logprob: -17.625001907348633
    6. '	tree' → logprob: -18.250001907348633
    7. '       ' → logprob: -18.500001907348633
    8. '
' → logprob: -19.000001907348633
    9. '  ' → logprob: -19.250001907348633
    10. '    ' → logprob: -19.750001907348633

Token 383: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.008732757531106472
    2. '._' → logprob: -4.758732795715332
    3. '.' → logprob: -9.258732795715332
    4. 'walk' → logprob: -11.633732795715332
    5. ' .' → logprob: -11.883732795715332
    6. '_.' → logprob: -13.508732795715332
    7. '_walk' → logprob: -13.883732795715332
    8. '```' → logprob: -13.883732795715332
    9. '.tree' → logprob: -14.508732795715332
    10. ').' → logprob: -14.758732795715332

Token 384: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.416665640543215e-05
    2. '2' → logprob: -10.62503433227539
    3. '0' → logprob: -11.75003433227539
    4. ' (' → logprob: -13.50003433227539
    5. '(
' → logprob: -15.37503433227539
    6. '       ' → logprob: -16.37503433227539
    7. '   ' → logprob: -16.75003433227539
    8. '(-' → logprob: -16.75003433227539
    9. '           ' → logprob: -17.00003433227539
    10. '```' → logprob: -17.25003433227539

Token 385: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5759979486465454
    2. '2' → logprob: -0.8259979486465454
    3. ' ' → logprob: -9.950998306274414
    4. '1' → logprob: -12.200998306274414
    5. ')' → logprob: -13.513498306274414
    6. '   ' → logprob: -13.700998306274414
    7. '
' → logprob: -14.325998306274414
    8. '```' → logprob: -14.763498306274414
    9. '-' → logprob: -15.138498306274414
    10. '3' → logprob: -15.263498306274414

Token 386: '))' (ID: 915)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3445306420326233
    2. ')' → logprob: -1.9695305824279785
    3. '))
' → logprob: -1.9695305824279785
    4. '))' → logprob: -4.4695305824279785
    5. '           ' → logprob: -7.5945305824279785
    6. '       ' → logprob: -7.8445305824279785
    7. '          ' → logprob: -11.219531059265137
    8. ' )
' → logprob: -11.469531059265137
    9. '   ' → logprob: -12.219531059265137
    10. ')
' → logprob: -12.719531059265137


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 384
Tokens correctement prédits (1ère position, stricte): 205
Tokens correctement prédits (1ère position, avec adaptation): 223
Tokens correctement prédits (top 10): 343
Précision stricte (1ère position): 53.39%
Précision adaptée (1ère position): 58.07%
Précision (top 10): 89.32%
================================================================================
