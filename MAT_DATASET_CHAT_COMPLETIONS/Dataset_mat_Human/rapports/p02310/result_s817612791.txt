================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import pi, cos, sin, atan2
EPS = 10**(-9)

def eq(value1, value2):
    return abs(value1-value2) <= EPS

class Point():
    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.arg = atan2(y, x) # -PI ~ PI
    
    def __str__(self):
        return "{0:.8f} {1:.8f}".format(self.x, self.y)
    
    def __add__(self, other):
        return Point(self.x + other.x, self.y + other.y)
    
    def __sub__(self, other):
        return Point(self.x - other.x, self.y - other.y)
    
    def __mul__(self, scal):
        return Point(self.x*scal, self.y*scal)
    
    def __truediv__(self, scal):
        return Point(self.x/scal, self.y/scal)
    
    def __eq__(self, other):
        return eq(self.x, other.x) and eq(self.y, other.y)

    # 原点からの距離
    def __abs__(self):
        return (self.x**2+self.y**2)**0.5
    
# 原点を中心にrad角だけ回転した点
def Rotation(vec: Point, rad):
    return Point(vec.x*cos(rad)-vec.y*sin(rad), vec.x*sin(rad)+vec.y*cos(rad))

class Circle():
    def __init__(self, p, r):
        self.p = p
        self.r = r

class Line():
    # 点a, bを通る
    def __init__(self, a, b):
        self.a = a
        self.b = b
        self.arg = (a-b).arg % pi
    
    def __str__(self):
        return "[({0}, {1}) - ({2}, {3})]".format(self.a.x, self.a.y, self.b.x, self.b.y)

    # pointを通って平行
    def par(self, point):
        return Line(point, point+(self.a-self.b))

    # pointを通って垂直
    def tan(self, point):
        return Line(point, point + Rotation(self.a-self.b, pi/2))

class Segment(Line):
    def __init__(self, a, b):
        super().__init__(a, b)

# 符号付き面積
def cross(vec1: Point, vec2: Point):
    return vec1.x*vec2.y - vec1.y*vec2.x

# 内積
def dot(vec1: Point, vec2: Point):
    return vec1.x*vec2.x + vec1.y*vec2.y

# 点a->b->cの回転方向
def ccw(a, b, c):
    if cross(b-a, c-a) > EPS: return +1 # COUNTER_CLOCKWISE
    if cross(b-a, c-a) < -EPS: return -1 # CLOCKWISE
    if dot(c-a, b-a) < -EPS: return +2 # c -> a -> b
    if abs(b-a) < abs(c-a): return -2 # a -> b -> c
    return 0 # a -> c -> b

# pのlへの射影
def projection(l, p):
    t = dot(l.b-l.a, p-l.a) / abs(l.a-l.b)**2
    return l.a + (l.b-l.a)*t

# pのlによる反射
def reflection(l, p):
    return p + (projection(l, p) - p)*2

def isPararell(l1, l2):
    return eq(cross(l1.a-l1.b, l2.a-l2.b), 0)

def isVertical(l1, l2):
    return eq(dot(l1.a-l1.b, l2.a-l2.b), 0)

def isIntersect_lp(l, p):
    return abs(ccw(l.a, l.b, p)) != 1

def isIntersect_ll(l1, l2):
    return not isPararell(l1, l2) or isIntersect_lp(l1, l2.a)

def isIntersect_sp(s, p):
    return ccw(s.a, s.b, p) == 0

def isIntersect_ss(s1, s2):
    return ccw(s1.a, s1.b, s2.a)*ccw(s1.a, s1.b, s2.b) <= 0 and ccw(s2.a, s2.b, s1.a)*ccw(s2.a, s2.b, s1.b) <= 0

def isIntersect_ls(l, s):
    return cross(l.b - l.a, s.a - l.a) * cross(l.b - l.a, s.b - l.a) < EPS

def isIntersect_cp(c, p):
    return abs(abs(c.p - p) - c.r) < EPS

def isIntersect_cl(c, l):
    return distance_lp(l, c.p) <= c.r + EPS

def isIntersect_cs(c, s):
    pass

def intersect_cc(c1, c2):
    if c1.r < c2.r:
        c1, c2 = c2, c1
    d = abs(c1.p - c2.p)
    if eq(c1.r + c2.r, d): return 3 # 内接
    if eq(c1.r - c2.r, d): return 1 # 外接
    if c1.r + c2.r < d: return 4 # 含まれてる
    if c1.r - c2.r < d: return 2 # 2交点持つ
    return 0 # 離れてる

def distance_pp(p1, p2):
    return abs(p1-p2)

def distance_lp(l, p):
    return abs(projection(l,p)-p)

def distance_ll(l1, l2):
    return 0 if isIntersect_ll(l1, l2) else distance_lp(l1, l2.a)

def distance_sp(s, p):
    r = projection(s, p)
    if isIntersect_sp(s, r): return abs(r-p)
    return min(abs(s.a-p), abs(s.b-p))

def distance_ss(s1, s2):
    if isIntersect_ss(s1, s2): return 0
    return min([distance_sp(s1, s2.a), distance_sp(s1, s2.b), distance_sp(s2, s1.a), distance_sp(s2, s1.b)])

def distance_ls(l, s):
    if isIntersect_ls(l, s): return 0
    return min(distance_lp(l, s.a), distance_lp(l, s.b))

def crosspoint_ll(l1, l2):
    A = cross(l1.b - l1.a, l2.b - l2.a)
    B = cross(l1.b - l1.a, l1.b - l2.a)
    if eq(abs(A), 0) and eq(abs(B), 0): return l2.a
    return l2.a + (l2.b - l2.a) * B / A

def crosspoint_ss(s1, s2):
    return crosspoint_ll(s1, s2)

def crosspoint_lc(l, c):
    p = projection(l, c.p)
    if eq(distance_lp(l, c.p), c.r): return [p]
    e = (l.b - l.a) / abs(l.b-l.a)
    dis = (c.r**2-abs(p-c.p)**2)**0.5
    return [p + e*dis, p - e*dis]

def crosspoint_sc(s, c):
    pass

def crosspoint_cc(c1, c2):
    d = abs(c1.p-c2.p)
    if not abs(c1.r-c2.r) <= d <= c1.r+c2.r:
        return []
    mid_p = (c2.p * (c1.r**2-c2.r**2+d**2) + c1.p * (c2.r**2-c1.r**2+d**2)) / (2*d**2)
    tanvec = Rotation(c1.p-c2.p, pi/2)
    return crosspoint_lc(Line(mid_p, mid_p+tanvec), c1)

# pからのcの接点
def tangent_cp(c, p):
    return crosspoint_cc(c, Circle(p, (abs(p-c.p)**2 - c.r**2)**0.5))

import sys
input = sys.stdin.readline

def verify_1A():
    p1x, p1y, p2x, p2y = map(int, input().split())
    l = Line(Point(p1x, p1y), Point(p2x, p2y))
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for px, py in Query:
        p = Point(px, py)
        print(projection(l, p))

def verify_1B():
    p1x, p1y, p2x, p2y = map(int, input().split())
    l = Line(Point(p1x, p1y), Point(p2x, p2y))
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for px, py in Query:
        p = Point(px, py)
        print(reflection(l, p))

def verify_1C():
    p1x, p1y, p2x, p2y = map(int, input().split())
    p1 = Point(p1x, p1y); p2 = Point(p2x, p2y)
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for px, py in Query:
        p = Point(px, py)
        result = ccw(p1, p2, p)
        if result == 1:
            print("COUNTER_CLOCKWISE")
        elif result == -1:
            print("CLOCKWISE")
        elif result == 2:
            print("ONLINE_BACK")
        elif result == -2:
            print("ONLINE_FRONT")
        else:
            print("ON_SEGMENT")

def verify_2A():
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y in Query:
        l1 = Line(Point(p0x, p0y), Point(p1x, p1y))
        l2 = Line(Point(p2x, p2y), Point(p3x, p3y))
        if isPararell(l1, l2):
            print(2)
        elif isVertical(l1, l2):
            print(1)
        else:
            print(0)

def verify_2B():
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y in Query:
        s1 = Segment(Point(p0x, p0y), Point(p1x, p1y))
        s2 = Segment(Point(p2x, p2y), Point(p3x, p3y))
        if isIntersect_ss(s1, s2):
            print(1)
        else:
            print(0)

def verify_2C():
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y in Query:
        s1 = Segment(Point(p0x, p0y), Point(p1x, p1y))
        s2 = Segment(Point(p2x, p2y), Point(p3x, p3y))
        print(crosspoint_ss(s1, s2))  

def verify_2D():
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y in Query:
        s1 = Segment(Point(p0x, p0y), Point(p1x, p1y))
        s2 = Segment(Point(p2x, p2y), Point(p3x, p3y))
        print("{:.8f}".format(distance_ss(s1, s2)))

def verify_7A():
    c1x, c1y, c1r = map(int, input().split())
    c2x, c2y, c2r = map(int, input().split())
    print(intersect_cc(Circle(Point(c1x, c1y), c1r), Circle(Point(c2x, c2y), c2r)))

def verify_7D():
    cx, cy, cr = map(int, input().split())
    c = Circle(Point(cx, cy), cr)
    Q = int(input())
    Query = [list(map(int, input().split())) for _ in range(Q)]
    for x1, y1, x2, y2 in Query:
        Points = crosspoint_lc(Line(Point(x1, y1), Point(x2,y2)), c)
        if len(Points) == 1:
            Points.append(Points[-1])
        Points.sort(key=lambda p: p.y)
        Points.sort(key=lambda p: p.x)
        print(*Points)

def verify_7E():
    c1x, c1y, c1r = map(int, input().split())
    c1 = Circle(Point(c1x, c1y), c1r)
    c2x, c2y, c2r = map(int, input().split())
    c2 = Circle(Point(c2x, c2y), c2r)

    Points = crosspoint_cc(c1, c2)
    if len(Points) == 1:
        Points.append(Points[-1])
    Points.sort(key=lambda p: p.y)
    Points.sort(key=lambda p: p.x)
    print(*Points)  

def verify_7F():
    px, py = map(int, input().split())
    cx, cy, cr = map(int, input().split())
    Points = tangent_cp(Circle(Point(cx, cy), cr), Point(px, py))
    if len(Points) == 1:
        Points.append(Points[-1])
    Points.sort(key=lambda p: p.y)
    Points.sort(key=lambda p: p.x)
    print(*Points, sep="\n")    

verify_7F()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' pi' (ID: 6404)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.22550995647907257
    2. ' sqrt' → logprob: -1.8505100011825562
    3. 'pow' → logprob: -4.100510120391846
    4. 'pi' → logprob: -4.850510120391846
    5. 'sin' → logprob: -4.850510120391846
    6. ' pi' → logprob: -5.100510120391846
    7. 'import' → logprob: -6.350510120391846
    8. 'ceil' → logprob: -7.100510120391846
    9. ' sin' → logprob: -7.225510120391846
    10. 'log' → logprob: -7.725510120391846

Token 4: ',' (ID: 11)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5109156966209412
    2. ',' → logprob: -1.760915756225586
    3. '\n' → logprob: -1.885915756225586
    4. '\' → logprob: -3.760915756225586
    5. 'import' → logprob: -4.385915756225586
    6. '.' → logprob: -4.760915756225586
    7. '
' → logprob: -5.260915756225586
    8. '+' → logprob: -5.260915756225586
    9. '```' → logprob: -5.260915756225586
    10. '#' → logprob: -5.885915756225586

Token 5: ' cos' (ID: 8974)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21503181755542755
    2. ' e' → logprob: -1.7150318622589111
    3. 'sin' → logprob: -5.340031623840332
    4. 'tau' → logprob: -5.840031623840332
    5. ' tau' → logprob: -6.090031623840332
    6. 'cos' → logprob: -6.590031623840332
    7. ' sin' → logprob: -7.090031623840332
    8. 'atan' → logprob: -7.965031623840332
    9. 'sqrt' → logprob: -8.215031623840332
    10. '```' → logprob: -8.715031623840332

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000657154421787709
    2. ',' → logprob: -8.125657081604004
    3. '\(' → logprob: -8.625657081604004
    4. '(
' → logprob: -9.750657081604004
    5. '\' → logprob: -10.125657081604004
    6. ' (' → logprob: -10.375657081604004
    7. '*' → logprob: -11.250657081604004
    8. '\n' → logprob: -11.750657081604004
    9. '#' → logprob: -11.875657081604004
    10. '\xe2\x81' → logprob: -13.000657081604004

Token 7: ' sin' (ID: 2187)
  Prédit: ' sin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sin' → logprob: -0.523440957069397
    2. 'sin' → logprob: -0.898440957069397
    3. 's' → logprob: -8.773441314697266
    4. ' sine' → logprob: -9.398441314697266
    5. ' radians' → logprob: -10.273441314697266
    6. ' acos' → logprob: -10.898441314697266
    7. 'sqrt' → logprob: -12.273441314697266
    8. ' ' → logprob: -12.648441314697266
    9. ' sqrt' → logprob: -12.773441314697266
    10. '```' → logprob: -12.898441314697266

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032545026391744614
    2. 'def' → logprob: -4.28254508972168
    3. '(
' → logprob: -4.53254508972168
    4. '\' → logprob: -5.65754508972168
    5. '\(' → logprob: -6.40754508972168
    6. ',' → logprob: -7.78254508972168
    7. '\n' → logprob: -7.78254508972168
    8. '#' → logprob: -8.15754508972168
    9. '```' → logprob: -8.15754508972168
    10. 'd' → logprob: -8.53254508972168

Token 9: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.49899163842201233
    2. 'tan' → logprob: -1.49899160861969
    3. ' sqrt' → logprob: -2.7489917278289795
    4. ' tan' → logprob: -2.9989917278289795
    5. 'sqrt' → logprob: -4.1239914894104
    6. ' radians' → logprob: -4.2489914894104
    7. ' atan' → logprob: -4.4989914894104
    8. ' acos' → logprob: -4.8739914894104
    9. 't' → logprob: -5.4989914894104
    10. ' asin' → logprob: -7.3739914894104

Token 10: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5780183672904968
    2. '2' → logprob: -0.8280183672904968
    3. ',' → logprob: -7.2030181884765625
    4. 'w' → logprob: -8.328018188476562
    5. 'h' → logprob: -8.328018188476562
    6. '(
' → logprob: -8.828018188476562
    7. 's' → logprob: -9.203018188476562
    8. 'def' → logprob: -9.328018188476562
    9. ' (' → logprob: -9.578018188476562
    10. '\(' → logprob: -10.078018188476562

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15871545672416687
    2. '\' → logprob: -3.1587154865264893
    3. 'def' → logprob: -3.2837154865264893
    4. '(
' → logprob: -3.6587154865264893
    5. 'd' → logprob: -4.28371524810791
    6. '\n' → logprob: -4.78371524810791
    7. '\(' → logprob: -5.28371524810791
    8. ',' → logprob: -5.28371524810791
    9. '#' → logprob: -5.90871524810791
    10. '_' → logprob: -7.15871524810791

Token 12: 'EPS' (ID: 82793)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1812523901462555
    2. 'd' → logprob: -2.1812524795532227
    3. '(
' → logprob: -3.8062524795532227
    4. '\' → logprob: -4.431252479553223
    5. ',' → logprob: -4.931252479553223
    6. 'def' → logprob: -5.306252479553223
    7. '\(' → logprob: -6.806252479553223
    8. '#' → logprob: -6.806252479553223
    9. '' → logprob: -7.431252479553223
    10. '`' → logprob: -7.556252479553223

Token 13: ' =' (ID: 314)
  Prédit: 'ILON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ILON' → logprob: -0.13793647289276123
    2. '_' → logprob: -2.262936592102051
    3. ' =' → logprob: -4.387936592102051
    4. '=' → logprob: -5.137936592102051
    5. 'ilon' → logprob: -6.262936592102051
    6. 'I' → logprob: -6.387936592102051
    7. '_=' → logprob: -7.512936592102051
    8. '__' → logprob: -7.512936592102051
    9. 'ILO' → logprob: -7.887936592102051
    10. ' _' → logprob: -8.63793659210205

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16023772954940796
    2. '1' → logprob: -1.9102377891540527
    3. '10' → logprob: -11.660237312316895
    4. '0' → logprob: -13.160237312316895
    5. ' ' → logprob: -13.160237312316895
    6. '2' → logprob: -15.160237312316895
    7. '```' → logprob: -15.785237312316895
    8. '>' → logprob: -16.16023826599121
    9. '9' → logprob: -16.66023826599121
    10. '​' → logprob: -16.78523826599121

Token 15: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078878089785576
    2. ' ' → logprob: -5.5040788650512695
    3. '0' → logprob: -15.12907886505127
    4. '10' → logprob: -15.37907886505127
    5. '   ' → logprob: -16.879079818725586
    6. '2' → logprob: -18.254079818725586
    7. '```' → logprob: -19.379079818725586
    8. '  ' → logprob: -19.629079818725586
    9. '3' → logprob: -19.629079818725586
    10. ' ' → logprob: -19.754079818725586

Token 16: '**' (ID: 410)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14326432347297668
    2. '**' → logprob: -2.0182642936706543
    3. '```' → logprob: -8.268264770507812
    4. '^-' → logprob: -9.018264770507812
    5. '0' → logprob: -9.143264770507812
    6. 'e' → logprob: -9.768264770507812
    7. '*-' → logprob: -10.643264770507812
    8. '*' → logprob: -11.268264770507812
    9. '\-' → logprob: -13.268264770507812
    10. ' **' → logprob: -13.393264770507812

Token 17: '(-' (ID: 8087)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.292907877039397e-06
    2. '(-' → logprob: -13.62500286102295
    3. '9' → logprob: -13.87500286102295
    4. '7' → logprob: -14.75000286102295
    5. '6' → logprob: -14.87500286102295
    6. '−' → logprob: -15.87500286102295
    7. '8' → logprob: -16.750003814697266
    8. '```' → logprob: -17.125003814697266
    9. ' -' → logprob: -17.625003814697266
    10. '{-' → logprob: -18.125003814697266

Token 18: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7096250653266907
    2. '7' → logprob: -0.8346250653266907
    3. '8' → logprob: -3.334625005722046
    4. '15' → logprob: -4.209625244140625
    5. '6' → logprob: -4.709625244140625
    6. '12' → logprob: -4.709625244140625
    7. '10' → logprob: -5.334625244140625
    8. '14' → logprob: -7.334625244140625
    9. '13' → logprob: -9.709625244140625
    10. '16' → logprob: -10.334625244140625

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -15.500000953674316
    3. ')
' → logprob: -15.625000953674316
    4. '))' → logprob: -16.0
    5. ')**' → logprob: -17.125
    6. '**' → logprob: -17.25
    7. ')
' → logprob: -17.75
    8. ')))' → logprob: -17.875
    9. '```' → logprob: -18.0
    10. ')

' → logprob: -18.25

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.026409560814499855
    2. '
' → logprob: -3.90140962600708
    3. 'd' → logprob: -5.27640962600708
    4. 'class' → logprob: -8.026409149169922
    5. ' def' → logprob: -9.026409149169922
    6. 'de' → logprob: -9.651409149169922
    7. ' 
' → logprob: -9.776409149169922
    8. '\' → logprob: -9.901409149169922
    9. '

' → logprob: -10.026409149169922
    10. '```' → logprob: -10.401409149169922

Token 21: ' eq' (ID: 18955)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.7218809723854065
    2. ' compute' → logprob: -1.7218809127807617
    3. ' distance' → logprob: -1.8468809127807617
    4. ' normalize' → logprob: -3.3468809127807617
    5. ' solve' → logprob: -3.7218809127807617
    6. ' find' → logprob: -4.096880912780762
    7. ' vector' → logprob: -4.346880912780762
    8. ' get' → logprob: -4.346880912780762
    9. ' circle' → logprob: -4.721880912780762
    10. ' is' → logprob: -4.721880912780762

Token 22: '(value' (ID: 6333)
  Prédit: 'ual'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ual' → logprob: -7.707997428951785e-05
    2. 'u' → logprob: -10.250077247619629
    3. 'uala' → logprob: -11.375077247619629
    4. 'uali' → logprob: -11.375077247619629
    5. 'uale' → logprob: -12.500077247619629
    6. 'uel' → logprob: -12.750077247619629
    7. 'uil' → logprob: -12.875077247619629
    8. '_' → logprob: -13.625077247619629
    9. 'ualitas' → logprob: -13.625077247619629
    10. 'aul' → logprob: -13.750077247619629

Token 23: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4215545654296875
    2. '):' → logprob: -1.1715545654296875
    3. ')' → logprob: -3.5465545654296875
    4. '=' → logprob: -6.0465545654296875
    5. '1' → logprob: -6.4215545654296875
    6. ':' → logprob: -7.2965545654296875
    7. ',)' → logprob: -9.046554565429688
    8. ' ,' → logprob: -9.421554565429688
    9. ',value' → logprob: -9.546554565429688
    10. ' ):' → logprob: -9.796554565429688

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004438971809577197
    2. ',value' → logprob: -8.250443458557129
    3. ' ,' → logprob: -8.625443458557129
    4. ')' → logprob: -14.000443458557129
    5. ',v' → logprob: -14.125443458557129
    6. '=' → logprob: -14.750443458557129
    7. ',)' → logprob: -14.875443458557129
    8. ':' → logprob: -15.625443458557129
    9. ' ' → logprob: -15.875443458557129
    10. '=value' → logprob: -16.125444412231445

Token 25: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.038047801703214645
    2. 'value' → logprob: -3.2880477905273438
    3. ')value' → logprob: -12.413047790527344
    4. ',value' → logprob: -14.288047790527344
    5. ' ' → logprob: -14.663047790527344
    6. ')' → logprob: -15.038047790527344
    7. '	value' → logprob: -15.288047790527344
    8. ' ' → logprob: -15.538047790527344
    9. '"value' → logprob: -15.538047790527344
    10. '(value' → logprob: -16.788047790527344

Token 26: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5760071277618408
    2. '2' → logprob: -0.8260071277618408
    3. ',' → logprob: -10.201006889343262
    4. ')' → logprob: -10.826006889343262
    5. ' ' → logprob: -12.701006889343262
    6. '):' → logprob: -13.201006889343262
    7. ',)' → logprob: -13.201006889343262
    8. ',value' → logprob: -13.576006889343262
    9. 'value' → logprob: -14.576006889343262
    10. 's' → logprob: -15.201006889343262

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00732560595497489
    2. ')' → logprob: -5.007325649261475
    3. ' ):' → logprob: -8.007325172424316
    4. ',' → logprob: -8.257325172424316
    5. ':' → logprob: -11.757325172424316
    6. '):
' → logprob: -12.507325172424316
    7. ' )' → logprob: -13.007325172424316
    8. '   ' → logprob: -13.757325172424316
    9. ' ' → logprob: -14.257325172424316
    10. '=' → logprob: -14.882325172424316

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09978675097227097
    2. ' abs' → logprob: -2.7247867584228516
    3. ' return' → logprob: -4.349786758422852
    4. '(abs' → logprob: -4.974786758422852
    5. 'abs' → logprob: -5.349786758422852
    6. '(value' → logprob: -6.849786758422852
    7. ' (' → logprob: -7.099786758422852
    8. '    ' → logprob: -7.474786758422852
    9. '<|end|>' → logprob: -7.474786758422852
    10. ' ' → logprob: -7.974786758422852

Token 29: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04904818907380104
    2. ' return' → logprob: -3.0490481853485107
    3. 'return' (adapté à ' return') → logprob: -8.29904842376709
    4. '    ' → logprob: -8.54904842376709
    5. ' abs' → logprob: -11.29904842376709
    6. '	return' → logprob: -13.29904842376709
    7. '  ' → logprob: -14.42404842376709
    8. ' ' → logprob: -14.42404842376709
    9. 'abs' → logprob: -14.54904842376709
    10. '   ' → logprob: -14.54904842376709

Token 30: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.002201047958806157
    2. 'abs' → logprob: -6.127201080322266
    3. ' value' → logprob: -11.377201080322266
    4. '(abs' → logprob: -12.627201080322266
    5. ' ' → logprob: -14.127201080322266
    6. 'value' → logprob: -15.127201080322266
    7. ' fabs' → logprob: -16.252201080322266
    8. ' ' → logprob: -16.377201080322266
    9. '   ' → logprob: -18.002201080322266
    10. ' Abs' → logprob: -18.252201080322266

Token 31: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.07889099419116974
    2. '(' → logprob: -2.5788910388946533
    3. '(
' → logprob: -14.578890800476074
    4. ' (' → logprob: -14.828890800476074
    5. '(

' → logprob: -15.328890800476074
    6. 'value' → logprob: -16.82889175415039
    7. ' value' → logprob: -17.70389175415039
    8. ')value' → logprob: -17.82889175415039
    9. '((' → logprob: -18.57889175415039
    10. ',value' → logprob: -18.70389175415039

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011219942942261696
    2. '(value' → logprob: -4.5112199783325195
    3. '(' → logprob: -9.51121997833252
    4. ' -' → logprob: -10.26121997833252
    5. 'value' → logprob: -11.01121997833252
    6. ')' → logprob: -11.13621997833252
    7. '-' → logprob: -11.26121997833252
    8. ' ' → logprob: -12.63621997833252
    9. ' (' → logprob: -12.76121997833252
    10. ',value' → logprob: -12.88621997833252

Token 33: '-value' (ID: 38798)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.47501707077026367
    2. '-' → logprob: -0.9750170707702637
    3. '-value' → logprob: -6.975017070770264
    4. ' ' → logprob: -12.600017547607422
    5. '   ' → logprob: -14.600017547607422
    6. 'value' → logprob: -16.100017547607422
    7. '  ' → logprob: -16.225017547607422
    8. '-values' → logprob: -16.225017547607422
    9. ' value' → logprob: -16.350017547607422
    10. '–' → logprob: -16.600017547607422

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024895723909139633
    2. 'value' → logprob: -6.0024895668029785
    3. ' value' → logprob: -12.127490043640137
    4. ' ' → logprob: -12.127490043640137
    5. 'alue' → logprob: -13.502490043640137
    6. '_value' → logprob: -14.752490043640137
    7. '"value' → logprob: -15.002490043640137
    8. ')value' → logprob: -15.377490043640137
    9. ''value' → logprob: -15.752490043640137
    10. '  ' → logprob: -16.00248908996582

Token 35: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0041197193786501884
    2. ')<=' → logprob: -6.129119873046875
    3. ')<' → logprob: -6.254119873046875
    4. ' )' → logprob: -11.504119873046875
    5. ')==' → logprob: -17.004119873046875
    6. ')**' → logprob: -17.254119873046875
    7. '<=' → logprob: -17.754119873046875
    8. ')return' → logprob: -17.879119873046875
    9. '<' → logprob: -18.004119873046875
    10. ' ' → logprob: -18.004119873046875

Token 36: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1204153448343277
    2. '<' → logprob: -2.245415449142456
    3. ' <=' → logprob: -5.120415210723877
    4. '<=' → logprob: -6.620415210723877
    5. ' ' → logprob: -9.370415687561035
    6. '<E' → logprob: -9.870415687561035
    7. ')' → logprob: -9.995415687561035
    8. '0' → logprob: -11.120415687561035
    9. 'EPS' → logprob: -11.495415687561035
    10. '<|end|>' → logprob: -12.245415687561035

Token 37: ' EPS' (ID: 66979)
  Prédit: ' EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EPS' → logprob: -0.07889121770858765
    2. 'EPS' → logprob: -2.5788912773132324
    3. ' ' → logprob: -13.828890800476074
    4. 'eps' → logprob: -16.07889175415039
    5. ' ' → logprob: -16.20389175415039
    6. ' eps' → logprob: -16.45389175415039
    7. ' ESP' → logprob: -16.70389175415039
    8. 'ES' → logprob: -17.20389175415039
    9. ' EP' → logprob: -17.20389175415039
    10. 'EP' → logprob: -17.32889175415039

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3453901410102844
    2. '

' → logprob: -1.9703900814056396
    3. '<|end|>' → logprob: -2.3453900814056396
    4. 'def' → logprob: -3.4703900814056396
    5. '\n' → logprob: -4.595390319824219
    6. ' 

' → logprob: -5.595390319824219
    7. 'newline' → logprob: -6.345390319824219
    8. '\' → logprob: -6.345390319824219
    9. '```' → logprob: -6.845390319824219
    10. '<|end|>' → logprob: -7.095390319824219

Token 39: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14837928116321564
    2. '
' → logprob: -2.148379325866699
    3. '

' → logprob: -4.023379325866699
    4. '\n' → logprob: -7.023379325866699
    5. ' def' → logprob: -7.398379325866699
    6. '<|end|>' → logprob: -7.773379325866699
    7. ' 

' → logprob: -8.3983793258667
    8. '\' → logprob: -8.6483793258667
    9. '(' → logprob: -8.8983793258667
    10. 'newline' → logprob: -9.0233793258667

Token 40: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.16001540422439575
    2. ' Vector' → logprob: -2.285015344619751
    3. ' Circle' → logprob: -3.160015344619751
    4. ' Vec' → logprob: -6.91001558303833
    5. ' Geometry' → logprob: -6.91001558303833
    6. ' ' → logprob: -7.91001558303833
    7. ' Space' → logprob: -8.410015106201172
    8. ' Ge' → logprob: -8.660015106201172
    9. ' Polygon' → logprob: -8.660015106201172
    10. ' Triangle' → logprob: -8.785015106201172

Token 41: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011553396470844746
    2. '(' → logprob: -7.501155376434326
    3. '():' → logprob: -7.626155376434326
    4. '<|end|>' → logprob: -9.876154899597168
    5. ' :' → logprob: -10.751154899597168
    6. '(object' → logprob: -11.626154899597168
    7. '):' → logprob: -11.876154899597168
    8. ':
' → logprob: -12.001154899597168
    9. ':**' → logprob: -12.251154899597168
    10. '>:' → logprob: -12.751154899597168

Token 42: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3294408321380615
    2. '<|end|>' → logprob: -1.3294408321380615
    3. '   ' → logprob: -5.204441070556641
    4. '    ' → logprob: -5.329441070556641
    5. ' def' → logprob: -6.454441070556641
    6. '  ' → logprob: -6.704441070556641
    7. ':' → logprob: -7.329441070556641
    8. ' 
' → logprob: -7.954441070556641
    9. ')' → logprob: -7.954441070556641
    10. '<|end|>' → logprob: -8.45444107055664

Token 43: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6559538841247559
    2. '    ' → logprob: -1.1559538841247559
    3. '   ' → logprob: -2.155953884124756
    4. ' ' → logprob: -3.905953884124756
    5. 'def' (adapté à ' def') → logprob: -4.530953884124756
    6. ' pass' → logprob: -5.030953884124756
    7. ' 
' → logprob: -6.155953884124756
    8. '    
' → logprob: -6.405953884124756
    9. '```' → logprob: -6.405953884124756
    10. '<|end|>' → logprob: -6.405953884124756

Token 44: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.028444388881325722
    2. ' init' → logprob: -3.903444290161133
    3. ' ' → logprob: -4.903444290161133
    4. 'init' → logprob: -8.153444290161133
    5. ' ' → logprob: -9.903444290161133
    6. '_init' → logprob: -10.278444290161133
    7. '__' → logprob: -10.778444290161133
    8. ' _' → logprob: -10.778444290161133
    9. ' ```' → logprob: -11.403444290161133
    10. ' def' → logprob: -11.403444290161133

Token 45: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'eq' → logprob: -14.125000953674316
    3. 'ini' → logprob: -15.500000953674316
    4. ' init' → logprob: -16.125001907348633
    5. 'in' → logprob: -17.375001907348633
    6. 'i' → logprob: -18.250001907348633
    7. 'inite' → logprob: -18.750001907348633
    8. '_init' → logprob: -19.375001907348633
    9. 'int' → logprob: -19.875001907348633
    10. '```' → logprob: -20.125001907348633

Token 46: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012463388033211231
    2. '__' → logprob: -4.762463569641113
    3. '(self' → logprob: -5.887463569641113
    4. '__(
' → logprob: -7.637463569641113
    5. '(' → logprob: -8.262463569641113
    6. '__((' → logprob: -8.762463569641113
    7. '<|end|>' → logprob: -9.637463569641113
    8. '__(*' → logprob: -9.887463569641113
    9. 'self' → logprob: -11.012463569641113
    10. ' (' → logprob: -11.387463569641113

Token 47: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006717743817716837
    2. ' self' → logprob: -5.006717681884766
    3. '   ' → logprob: -14.381717681884766
    4. ',' → logprob: -14.756717681884766
    5. ',self' → logprob: -14.756717681884766
    6. '(self' → logprob: -15.006717681884766
    7. '	self' → logprob: -15.131717681884766
    8. 'x' → logprob: -15.256717681884766
    9. '0' → logprob: -16.131717681884766
    10. ' ' → logprob: -16.131717681884766

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00807193387299776
    2. ' ,' → logprob: -4.8830718994140625
    3. 'self' → logprob: -7.7580718994140625
    4. ',self' → logprob: -10.758071899414062
    5. ' self' → logprob: -11.883071899414062
    6. '_,' → logprob: -12.133071899414062
    7. ',x' → logprob: -13.383071899414062
    8. '(self' → logprob: -14.383071899414062
    9. '_self' → logprob: -14.508071899414062
    10. '   ' → logprob: -15.258071899414062

Token 49: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19813470542430878
    2. 'self' → logprob: -1.9481346607208252
    3. ' x' → logprob: -3.573134660720825
    4. ' self' → logprob: -4.698134899139404
    5. '   ' → logprob: -11.698134422302246
    6. ' ' → logprob: -12.823134422302246
    7. ')x' → logprob: -12.948134422302246
    8. '	x' → logprob: -13.448134422302246
    9. ')' → logprob: -13.573134422302246
    10. '```' → logprob: -13.698134422302246

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022988072305452079
    2. ' ,' → logprob: -8.500229835510254
    3. '<|end|>' → logprob: -11.625229835510254
    4. '=' → logprob: -12.125229835510254
    5. '<|end|>' → logprob: -12.750229835510254
    6. ')' → logprob: -12.750229835510254
    7. ',x' → logprob: -13.125229835510254
    8. '):' → logprob: -13.750229835510254
    9. ':' → logprob: -14.375229835510254
    10. ',y' → logprob: -14.500229835510254

Token 51: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20141859352588654
    2. 'y' → logprob: -1.7014186382293701
    3. ' ' → logprob: -12.32641887664795
    4. '	y' → logprob: -14.57641887664795
    5. ' ' → logprob: -15.20141887664795
    6. ',y' → logprob: -17.576417922973633
    7. '    ' → logprob: -17.576417922973633
    8. '<|end|>' → logprob: -17.576417922973633
    9. '<|end|>' → logprob: -17.826417922973633
    10. '  ' → logprob: -17.951417922973633

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00037800322752445936
    2. ')' → logprob: -8.125377655029297
    3. '):
' → logprob: -9.625377655029297
    4. '   ' → logprob: -11.875377655029297
    5. ':' → logprob: -12.250377655029297
    6. ' ):' → logprob: -13.125377655029297
    7. ',' → logprob: -13.750377655029297
    8. '),' → logprob: -15.625377655029297
    9. '**' → logprob: -15.750377655029297
    10. '):
' → logprob: -16.250377655029297

Token 53: '       ' (ID: 309)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0423367023468018
    2. '       ' → logprob: -1.1673367023468018
    3. '    ' → logprob: -1.6673367023468018
    4. ' ' → logprob: -2.0423367023468018
    5. '        ' → logprob: -5.292336463928223
    6. '   ' → logprob: -5.417336463928223
    7. ' x' → logprob: -5.542336463928223
    8. '     ' → logprob: -7.167336463928223
    9. ' ' → logprob: -7.542336463928223
    10. ')' → logprob: -7.667336463928223

Token 54: ' self' (ID: 1051)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020871460437775
    2. ' x' → logprob: -2.3502087593078613
    3. 'self' (adapté à ' self') → logprob: -13.350208282470703
    4. ' self' → logprob: -14.725208282470703
    5. '       ' → logprob: -16.225208282470703
    6. '   ' → logprob: -17.600208282470703
    7. '	x' → logprob: -17.975208282470703
    8. '    ' → logprob: -18.475208282470703
    9. ' ' → logprob: -19.600208282470703
    10. '        ' → logprob: -19.725208282470703

Token 55: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00032247265335172415
    2. '.x' → logprob: -8.250322341918945
    3. ' .' → logprob: -9.750322341918945
    4. '<|end|>' → logprob: -14.375322341918945
    5. '.

' → logprob: -14.875322341918945
    6. 'x' → logprob: -15.000322341918945
    7. '.
' → logprob: -15.500322341918945
    8. '‌.' → logprob: -15.750322341918945
    9. '.py' → logprob: -15.750322341918945
    10. '=' → logprob: -16.125322341918945

Token 56: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31660088896751404
    2. ' =' → logprob: -1.3166009187698364
    3. '<|end|>' → logprob: -5.816600799560547
    4. ')' → logprob: -9.441600799560547
    5. ' ' → logprob: -9.566600799560547
    6. ',' → logprob: -9.566600799560547
    7. ' =)' → logprob: -9.816600799560547
    8. '<|end|>' → logprob: -10.316600799560547
    9. '=}' → logprob: -11.066600799560547
    10. '_' → logprob: -11.566600799560547

Token 57: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022443771362305
    2. ' x' → logprob: -1.910224437713623
    3. '	x' → logprob: -15.785224914550781
    4. ')x' → logprob: -17.91022491455078
    5. ' ' → logprob: -18.78522491455078
    6. '(x' → logprob: -18.91022491455078
    7. ' ' → logprob: -19.16022491455078
    8. '$x' → logprob: -19.78522491455078
    9. '    ' → logprob: -20.53522491455078
    10. '"x' → logprob: -20.66022491455078

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8149145841598511
    2. '<|end|>' → logprob: -0.9399145841598511
    3. '
' → logprob: -2.0649147033691406
    4. '    
' → logprob: -4.564914703369141
    5. '  
' → logprob: -4.689914703369141
    6. '<|end|>' → logprob: -5.439914703369141
    7. '        
' → logprob: -5.689914703369141
    8. 'y' → logprob: -5.814914703369141
    9. ' 
' → logprob: -6.064914703369141
    10. ' ' → logprob: -6.189914703369141

Token 60: ' self' (ID: 1051)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1602276712656021
    2. ' y' → logprob: -1.910227656364441
    3. ' ' → logprob: -13.53522777557373
    4. 'x' → logprob: -14.28522777557373
    5. ',y' → logprob: -14.28522777557373
    6. '	y' → logprob: -14.78522777557373
    7. ',' → logprob: -15.53522777557373
    8. '    ' → logprob: -16.160226821899414
    9. '<|end|>' → logprob: -16.410226821899414
    10. ' 
' → logprob: -16.910226821899414

Token 61: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005749551928602159
    2. '.x' → logprob: -8.250575065612793
    3. '<|end|>' → logprob: -8.375575065612793
    4. '<|end|>' → logprob: -10.750575065612793
    5. '.y' → logprob: -10.875575065612793
    6. ')' → logprob: -11.000575065612793
    7. 'x' → logprob: -12.250575065612793
    8. ' .' → logprob: -12.750575065612793
    9. '=' → logprob: -12.750575065612793
    10. '-' → logprob: -13.000575065612793

Token 62: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12692831456661224
    2. ' y' → logprob: -2.1269283294677734
    3. '	y' → logprob: -16.251928329467773
    4. ')y' → logprob: -16.626928329467773
    5. ' ' → logprob: -16.876928329467773
    6. 'x' → logprob: -17.501928329467773
    7. '0' → logprob: -18.001928329467773
    8. ')' → logprob: -18.751928329467773
    9. '   ' → logprob: -18.751928329467773
    10. '(y' → logprob: -19.001928329467773

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6684008240699768
    2. '   ' → logprob: -1.793400764465332
    3. '    
' → logprob: -1.793400764465332
    4. '<|end|>' → logprob: -2.418400764465332
    5. ' 
' → logprob: -3.293400764465332
    6. '  
' → logprob: -4.793400764465332
    7. '   
' → logprob: -5.543400764465332
    8. ' ' → logprob: -5.668400764465332
    9. '\n' → logprob: -6.043400764465332
    10. 'newline' → logprob: -6.293400764465332

Token 65: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08474627137184143
    2. '   ' → logprob: -3.0847463607788086
    3. '    
' → logprob: -3.5847463607788086
    4. '<|end|>' → logprob: -5.709746360778809
    5. '  
' → logprob: -6.709746360778809
    6. 'def' → logprob: -6.709746360778809
    7. ' 
' → logprob: -6.709746360778809
    8. '   
' → logprob: -8.709746360778809
    9. '

' → logprob: -9.209746360778809
    10. '' → logprob: -9.459746360778809

Token 66: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: '.arg' (ID: 47493)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0003831252979580313
    2. ' .' → logprob: -8.875383377075195
    3. ' ' → logprob: -10.000383377075195
    4. '=' → logprob: -10.125383377075195
    5. '.x' → logprob: -10.375383377075195
    6. ' =' → logprob: -10.875383377075195
    7. ' ==' → logprob: -11.375383377075195
    8. 'def' → logprob: -11.375383377075195
    9. ')' → logprob: -11.875383377075195
    10. '.is' → logprob: -12.000383377075195

Token 68: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20818093419075012
    2. ' =' → logprob: -1.7081809043884277
    3. 'ument' → logprob: -5.333180904388428
    4. 'uments' → logprob: -6.708180904388428
    5. 's' → logprob: -8.583181381225586
    6. '_' → logprob: -8.958181381225586
    7. ')' → logprob: -9.083181381225586
    8. '<|end|>' → logprob: -9.583181381225586
    9. 'um' → logprob: -10.083181381225586
    10. ' ' → logprob: -10.583181381225586

Token 69: ' atan' (ID: 70327)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.22585193812847137
    2. ' atan' → logprob: -1.6008518934249878
    3. '0' → logprob: -7.850852012634277
    4. ' ' → logprob: -10.975852012634277
    5. '.atan' → logprob: -11.350852012634277
    6. ' None' → logprob: -11.600852012634277
    7. '(' → logprob: -13.225852012634277
    8. 'None' → logprob: -13.350852012634277
    9. '   ' → logprob: -13.725852012634277
    10. 'pi' → logprob: -14.163352012634277

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. 'atan' → logprob: -18.25
    4. '۲' → logprob: -18.5
    5. '₂' → logprob: -19.5
    6. '(' → logprob: -19.625
    7. '２' → logprob: -19.75
    8. '٢' → logprob: -20.25
    9. '' → logprob: -20.625
    10. '২' → logprob: -20.875

Token 71: '(y' (ID: 14684)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5240969657897949
    2. '(y' → logprob: -1.024096965789795
    3. '(self' → logprob: -3.024096965789795
    4. '(
' → logprob: -9.399097442626953
    5. '(s' → logprob: -9.524097442626953
    6. '(

' → logprob: -12.024097442626953
    7. '(this' → logprob: -12.149097442626953
    8. '((' → logprob: -12.274097442626953
    9. 'y' → logprob: -12.274097442626953
    10. '(user' → logprob: -13.149097442626953

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001923352392623201
    2. ',y' → logprob: -9.125192642211914
    3. ' ,' → logprob: -9.875192642211914
    4. ')' → logprob: -10.750192642211914
    5. ',x' → logprob: -12.250192642211914
    6. '(' → logprob: -12.750192642211914
    7. '<|end|>' → logprob: -13.875192642211914
    8. ',
' → logprob: -14.625192642211914
    9. '(y' → logprob: -15.250192642211914
    10. '),' → logprob: -15.250192642211914

Token 73: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014165744185447693
    2. ' x' → logprob: -4.264165878295898
    3. '	x' → logprob: -13.264165878295898
    4. ' ' → logprob: -15.514165878295898
    5. '(x' → logprob: -16.1391658782959
    6. ')x' → logprob: -17.0141658782959
    7. ',x' → logprob: -17.6391658782959
    8. ')' → logprob: -18.0141658782959
    9. ',' → logprob: -18.8891658782959
    10. '   ' → logprob: -19.0141658782959

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -13.875005722045898
    4. '<|end|>' → logprob: -15.375005722045898
    5. ')return' → logprob: -17.0000057220459
    6. ')

' → logprob: -17.3750057220459
    7. '),' → logprob: -18.0000057220459
    8. ')#' → logprob: -18.3750057220459
    9. ')}' → logprob: -18.3750057220459
    10. '))' → logprob: -18.5000057220459

Token 75: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: 'PI' (ID: 5479)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.003655313979834318
    2. ' pi' → logprob: -6.753655433654785
    3. '1' → logprob: -7.003655433654785
    4. '3' → logprob: -7.003655433654785
    5. '.pi' → logprob: -8.378655433654785
    6. '180' → logprob: -8.878655433654785
    7. ')' → logprob: -9.128655433654785
    8. '0' → logprob: -9.628655433654785
    9. '_pi' → logprob: -10.128655433654785
    10. '.' → logprob: -11.003655433654785

Token 78: ' ~' (ID: 6574)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07374481111764908
    2. ' to' → logprob: -3.323744773864746
    3. '<|end|>' → logprob: -3.573744773864746
    4. ')' → logprob: -5.698744773864746
    5. ' ' → logprob: -6.448744773864746
    6. ' ,' → logprob: -7.948744773864746
    7. '.' → logprob: -8.198744773864746
    8. '/' → logprob: -8.573744773864746
    9. '<=' → logprob: -8.573744773864746
    10. 'to' → logprob: -8.573744773864746

Token 79: ' PI' (ID: 43074)
  Prédit: 'PI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PI' → logprob: -0.25637584924697876
    2. 'pi' → logprob: -2.006375789642334
    3. ' PI' → logprob: -3.131375789642334
    4. ' pi' → logprob: -4.006375789642334
    5. '+' → logprob: -4.256375789642334
    6. '1' → logprob: -5.631375789642334
    7. ' ' → logprob: -6.006375789642334
    8. ' +' → logprob: -6.131375789642334
    9. '.pi' → logprob: -6.131375789642334
    10. '_PI' → logprob: -6.256375789642334

Token 80: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0755733996629715
    2. '<|end|>' → logprob: -4.075573444366455
    3. 'def' → logprob: -4.325573444366455
    4. '    
' → logprob: -4.325573444366455
    5. ' def' → logprob: -4.700573444366455
    6. '
' → logprob: -4.700573444366455
    7. ' 
' → logprob: -5.075573444366455
    8. ' ' → logprob: -5.825573444366455
    9. '  
' → logprob: -6.700573444366455
    10. '  ' → logprob: -8.575572967529297

Token 82: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6841331720352173
    2. '   ' → logprob: -1.6841331720352173
    3. ' def' → logprob: -1.6841331720352173
    4. ' ' → logprob: -2.1841330528259277
    5. '<|end|>' → logprob: -5.809133052825928
    6. '    
' → logprob: -6.059133052825928
    7. '    ' → logprob: -6.684133052825928
    8. '  ' → logprob: -6.684133052825928
    9. '	def' → logprob: -6.809133052825928
    10. ' 
' → logprob: -6.934133052825928

Token 83: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04036039859056473
    2. ' .' → logprob: -3.665360450744629
    3. '.' → logprob: -5.790360450744629
    4. ' _' → logprob: -6.290360450744629
    5. ' space' → logprob: -6.415360450744629
    6. '_' → logprob: -6.415360450744629
    7. ' ' → logprob: -7.040360450744629
    8. ' x' → logprob: -7.040360450744629
    9. ' def' → logprob: -7.165360450744629
    10. '  ' → logprob: -7.415360450744629

Token 84: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0025276257656514645
    2. 'e' → logprob: -6.127527713775635
    3. 'lt' → logprob: -8.377527236938477
    4. 'init' → logprob: -10.627527236938477
    5. ' eq' → logprob: -10.877527236938477
    6. 'repr' → logprob: -11.127527236938477
    7. ' ' → logprob: -11.502527236938477
    8. 'le' → logprob: -11.752527236938477
    9. 'sub' → logprob: -12.002527236938477
    10. 'i' → logprob: -12.127527236938477

Token 85: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6937533617019653
    2. '__(' → logprob: -0.6937533617019653
    3. '__('' → logprob: -7.693753242492676
    4. '__(
' → logprob: -9.443753242492676
    5. '__((' → logprob: -10.943753242492676
    6. '__("' → logprob: -11.193753242492676
    7. '___' → logprob: -11.193753242492676
    8. '__.__' → logprob: -11.318753242492676
    9. '__(*' → logprob: -12.318753242492676
    10. '(' → logprob: -12.943753242492676

Token 86: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031818747520446777
    2. ')' → logprob: -5.7531819343566895
    3. ' self' → logprob: -13.503181457519531
    4. '(self' → logprob: -14.003181457519531
    5. '	self' → logprob: -14.503181457519531
    6. ' )' → logprob: -15.003181457519531
    7. '
' → logprob: -15.378181457519531
    8. ' ' → logprob: -15.378181457519531
    9. '   ' → logprob: -16.12818145751953
    10. '):' → logprob: -16.50318145751953

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4298121929168701
    2. ')' → logprob: -1.0548121929168701
    3. ',' → logprob: -7.179812431335449
    4. '):
' → logprob: -8.67981243133545
    5. 'self' → logprob: -9.42981243133545
    6. ' ):' → logprob: -11.05481243133545
    7. ')__' → logprob: -11.30481243133545
    8. ')>' → logprob: -11.67981243133545
    9. '):

' → logprob: -11.67981243133545
    10. '),' → logprob: -11.80481243133545

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032932094763964415
    2. ' return' → logprob: -6.253293037414551
    3. 'return' → logprob: -7.003293037414551
    4. '   ' → logprob: -9.12829303741455
    5. '    ' → logprob: -9.62829303741455
    6. '(' → logprob: -9.75329303741455
    7. 'f' → logprob: -9.87829303741455
    8. '"' → logprob: -9.87829303741455
    9. ' f' → logprob: -10.00329303741455
    10. ''' → logprob: -10.87829303741455

Token 89: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3140399158000946
    2. 'f' → logprob: -1.314039945602417
    3. ' return' → logprob: -7.439039707183838
    4. '   ' → logprob: -9.189040184020996
    5. ' f' → logprob: -9.564040184020996
    6. '       ' → logprob: -11.564040184020996
    7. '"' → logprob: -12.314040184020996
    8. 'str' → logprob: -13.689040184020996
    9. ''f' → logprob: -14.814040184020996
    10. '    ' → logprob: -14.939040184020996

Token 90: ' "{' (ID: 29585)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.10103002190589905
    2. ' f' → logprob: -2.351030111312866
    3. '"' → logprob: -7.226029872894287
    4. ''' → logprob: -10.226030349731445
    5. '   ' → logprob: -11.101030349731445
    6. ' ' → logprob: -11.351030349731445
    7. ''f' → logprob: -11.351030349731445
    8. ' "("' → logprob: -11.476030349731445
    9. '(f' → logprob: -12.601030349731445
    10. '	f' → logprob: -12.851030349731445

Token 91: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30108827352523804
    2. ':.' → logprob: -2.176088333129883
    3. '0' → logprob: -2.926088333129883
    4. '}' → logprob: -3.051088333129883
    5. '},' → logprob: -3.426088333129883
    6. '.' → logprob: -5.051088333129883
    7. '}.' → logprob: -6.676088333129883
    8. '.x' → logprob: -6.676088333129883
    9. 'x' → logprob: -7.176088333129883
    10. 'f' → logprob: -7.551088333129883

Token 92: ':.' (ID: 27474)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.012676804326474667
    2. '}.' → logprob: -5.13767671585083
    3. '},' → logprob: -6.26267671585083
    4. '}(' → logprob: -6.38767671585083
    5. '.x' → logprob: -6.63767671585083
    6. ':.' → logprob: -7.01267671585083
    7. '.' → logprob: -7.76267671585083
    8. ':x' → logprob: -8.887677192687988
    9. '},{' → logprob: -9.262677192687988
    10. ':' → logprob: -9.887677192687988

Token 93: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5137712359428406
    2. '9' → logprob: -1.0137712955474854
    3. '7' → logprob: -4.638771057128906
    4. '8' → logprob: -4.638771057128906
    5. '10' → logprob: -5.138771057128906
    6. '3' → logprob: -5.138771057128906
    7. '5' → logprob: -5.763771057128906
    8. '4' → logprob: -6.138771057128906
    9. '2' → logprob: -6.888771057128906
    10. '12' → logprob: -6.888771057128906

Token 94: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -3.380904672667384e-05
    2. 'g' → logprob: -10.375033378601074
    3. '}' → logprob: -13.625033378601074
    4. 'e' → logprob: -14.000033378601074
    5. '
' → logprob: -15.750033378601074
    6. 's' → logprob: -16.37503433227539
    7. ' f' → logprob: -16.37503433227539
    8. '```' → logprob: -17.25003433227539
    9. '

' → logprob: -17.75003433227539
    10. '}"' → logprob: -18.12503433227539

Token 95: '}' (ID: 92)
  Prédit: '}".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.04518955945968628
    2. '}' → logprob: -3.295189619064331
    3. '},{' → logprob: -6.295189380645752
    4. '.format' → logprob: -6.420189380645752
    5. 'f' → logprob: -6.795189380645752
    6. '},' → logprob: -7.420189380645752
    7. ',' → logprob: -7.795189380645752
    8. 'format' → logprob: -8.54518985748291
    9. '({' → logprob: -8.79518985748291
    10. '}"' → logprob: -8.79518985748291

Token 96: ' {' (ID: 354)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1330733448266983
    2. '({' → logprob: -2.883073329925537
    3. '}' → logprob: -4.008073329925537
    4. '}".' → logprob: -4.758073329925537
    5. '(format' → logprob: -4.758073329925537
    6. '("' → logprob: -5.133073329925537
    7. '(".' → logprob: -5.258073329925537
    8. '(x' → logprob: -5.508073329925537
    9. ' (' → logprob: -5.508073329925537
    10. ',' → logprob: -5.633073329925537

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '0' → logprob: -14.875001907348633
    3. 'self' → logprob: -14.875001907348633
    4. '{' → logprob: -15.000001907348633
    5. '.' → logprob: -15.375001907348633
    6. ' ' → logprob: -15.625001907348633
    7. '}' → logprob: -15.875001907348633
    8. '}{' → logprob: -17.750001907348633
    9. '```' → logprob: -17.875001907348633
    10. '

' → logprob: -18.750001907348633

Token 98: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.5760349631309509
    2. '.' → logprob: -0.8260349631309509
    3. '.x' → logprob: -9.326034545898438
    4. ' .' → logprob: -13.451034545898438
    5. '(.' → logprob: -13.451034545898438
    6. ' :.' → logprob: -13.576034545898438
    7. '.:' → logprob: -13.826034545898438
    8. '.__' → logprob: -15.951034545898438
    9. ',.' → logprob: -16.076034545898438
    10. '}.' → logprob: -16.326034545898438

Token 99: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.512236498361744e-07
    2. 'f' → logprob: -14.625000953674316
    3. '6' → logprob: -16.875
    4. '7' → logprob: -17.375
    5. '```' → logprob: -17.75
    6. ' ' → logprob: -18.0
    7. '}' → logprob: -19.0
    8. 'str' → logprob: -19.0
    9. '08' → logprob: -19.25
    10. '0' → logprob: -20.375

Token 100: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.704273118884885e-07
    2. 'e' → logprob: -16.0
    3. '}' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. 'g' → logprob: -16.375
    6. '
' → logprob: -16.625
    7. ' f' → logprob: -16.75
    8. '

' → logprob: -16.875
    9. 's' → logprob: -17.5
    10. '	f' → logprob: -17.875

Token 101: '}".' (ID: 53576)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.0031871015671640635
    2. '}".' → logprob: -5.75318717956543
    3. '.format' → logprob: -12.75318717956543
    4. '"' → logprob: -12.75318717956543
    5. '").' → logprob: -13.50318717956543
    6. '.' → logprob: -14.25318717956543
    7. '}.' → logprob: -14.37818717956543
    8. '}' → logprob: -14.87818717956543
    9. ''.' → logprob: -15.12818717956543
    10. '\"' → logprob: -15.50318717956543

Token 102: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -2.2200749754119897e-06
    2. ' format' → logprob: -13.125001907348633
    3. 'form' → logprob: -16.625001907348633
    4. '	format' → logprob: -17.750001907348633
    5. 'forma' → logprob: -18.250001907348633
    6. 'f' → logprob: -18.875001907348633
    7. '(format' → logprob: -19.250001907348633
    8. 'str' → logprob: -20.250001907348633
    9. 'strip' → logprob: -20.375001907348633
    10. 'for' → logprob: -20.750001907348633

Token 103: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014025058771949261
    2. '(' → logprob: -9.000140190124512
    3. 'self' → logprob: -11.125140190124512
    4. '(
' → logprob: -13.625140190124512
    5. ' self' → logprob: -15.500140190124512
    6. '(s' → logprob: -15.625140190124512
    7. ',self' → logprob: -16.000141143798828
    8. ' (' → logprob: -16.750141143798828
    9. '<|end|>' → logprob: -17.000141143798828
    10. '	self' → logprob: -17.375141143798828

Token 104: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0040807779878377914
    2. '.' → logprob: -5.504080772399902
    3. '.
' → logprob: -13.629080772399902
    4. ' .' → logprob: -14.379080772399902
    5. '<|end|>' → logprob: -15.754080772399902
    6. 'x' → logprob: -15.879080772399902
    7. ').' → logprob: -16.25408172607422
    8. '.xaml' → logprob: -17.37908172607422
    9. '.xlabel' → logprob: -17.37908172607422
    10. ' ' → logprob: -17.37908172607422

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.03521392197581e-05
    2. ' ,' → logprob: -10.875030517578125
    3. ',self' → logprob: -11.875030517578125
    4. ',
' → logprob: -12.875030517578125
    5. ',

' → logprob: -13.875030517578125
    6. ')' → logprob: -14.250030517578125
    7. ',y' → logprob: -16.125030517578125
    8. ',
' → logprob: -16.500030517578125
    9. 'self' → logprob: -17.625030517578125
    10. ',x' → logprob: -18.250030517578125

Token 106: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20142249763011932
    2. 'self' → logprob: -1.7014224529266357
    3. '	self' → logprob: -12.826422691345215
    4. ' ' → logprob: -12.826422691345215
    5. ' ' → logprob: -13.576422691345215
    6. '<|end|>' → logprob: -13.576422691345215
    7. ' 
' → logprob: -15.076422691345215
    8. '_self' → logprob: -15.451422691345215
    9. '(self' → logprob: -15.951422691345215
    10. 's' → logprob: -16.0764217376709

Token 107: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00015943869948387146
    2. '.' → logprob: -8.75015926361084
    3. 'y' → logprob: -14.37515926361084
    4. '.x' → logprob: -16.375160217285156
    5. ')' → logprob: -16.625160217285156
    6. ' .' → logprob: -16.625160217285156
    7. ').' → logprob: -17.375160217285156
    8. ' y' → logprob: -19.500160217285156
    9. '.
' → logprob: -19.875160217285156
    10. '.py' → logprob: -19.875160217285156

Token 108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.875003814697266
    3. ' )' → logprob: -15.500003814697266
    4. '<|end|>' → logprob: -15.750003814697266
    5. '}' → logprob: -15.875003814697266
    6. ')}' → logprob: -16.875003814697266
    7. ')return' → logprob: -17.000003814697266
    8. '   ' → logprob: -17.375003814697266
    9. ')`' → logprob: -17.500003814697266
    10. ')

' → logprob: -18.250003814697266

Token 109: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013706794008612633
    2. '    
' → logprob: -5.013706684112549
    3. 'def' → logprob: -5.263706684112549
    4. ' def' → logprob: -6.638706684112549
    5. ' 
' → logprob: -8.888707160949707
    6. ' ' → logprob: -9.263707160949707
    7. '  
' → logprob: -9.888707160949707
    8. '        
' → logprob: -10.013707160949707
    9. '	def' → logprob: -10.513707160949707
    10. '   
' → logprob: -10.638707160949707

Token 111: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01415716391056776
    2. '   ' → logprob: -5.014157295227051
    3. ' def' → logprob: -5.014157295227051
    4. '    
' → logprob: -7.514157295227051
    5. ' ' → logprob: -9.13915729522705
    6. ' 
' → logprob: -10.13915729522705
    7. '@property' → logprob: -11.01415729522705
    8. '	def' → logprob: -11.26415729522705
    9. '
' → logprob: -11.38915729522705
    10. '  
' → logprob: -11.76415729522705

Token 112: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19651564955711365
    2. ' _' → logprob: -2.5715155601501465
    3. '_' → logprob: -3.0715155601501465
    4. ' __' → logprob: -3.0715155601501465
    5. ' ' → logprob: -5.5715155601501465
    6. ' `' → logprob: -7.3215155601501465
    7. ' def' → logprob: -7.4465155601501465
    8. ' x' → logprob: -7.8215155601501465
    9. ' add' → logprob: -7.9465155601501465
    10. ' ```' → logprob: -7.9465155601501465

Token 113: 'add' (ID: 964)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.03474714234471321
    2. 'lt' → logprob: -3.5347471237182617
    3. 'repr' → logprob: -5.909747123718262
    4. 'sub' → logprob: -6.409747123718262
    5. 'add' → logprob: -7.909747123718262
    6. 'gt' → logprob: -9.534747123718262
    7. 'mul' → logprob: -10.034747123718262
    8. 'cmp' → logprob: -10.159747123718262
    9. 'le' → logprob: -10.534747123718262
    10. 'hash' → logprob: -10.909747123718262

Token 114: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1995415836572647
    2. '__' → logprob: -2.3245415687561035
    3. '(' → logprob: -2.5745415687561035
    4. '(self' → logprob: -5.6995415687561035
    5. '__(
' → logprob: -6.8245415687561035
    6. '<|end|>' → logprob: -6.8245415687561035
    7. '__('' → logprob: -7.6995415687561035
    8. '_' → logprob: -8.449542045593262
    9. '__("' → logprob: -8.699542045593262
    10. '__((' → logprob: -8.699542045593262

Token 115: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00785775762051344
    2. 'other' → logprob: -5.257857799530029
    3. ' self' → logprob: -6.007857799530029
    4. ' other' → logprob: -8.757857322692871
    5. '(self' → logprob: -13.257857322692871
    6. ' ' → logprob: -13.632857322692871
    7. ',' → logprob: -14.257857322692871
    8. '   ' → logprob: -16.257858276367188
    9. '	self' → logprob: -16.757858276367188
    10. 's' → logprob: -16.882858276367188

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04885895177721977
    2. ' ,' → logprob: -3.048858880996704
    3. '<|end|>' → logprob: -9.298858642578125
    4. 'other' → logprob: -9.923858642578125
    5. ' ' → logprob: -10.423858642578125
    6. 'self' → logprob: -10.548858642578125
    7. ' other' → logprob: -10.923858642578125
    8. ')' → logprob: -11.298858642578125
    9. ' )' → logprob: -11.548858642578125
    10. ',self' → logprob: -12.173858642578125

Token 117: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.47414255142211914
    2. ' other' → logprob: -0.9741425514221191
    3. ' o' → logprob: -10.224142074584961
    4. 'o' → logprob: -10.974142074584961
    5. ' ' → logprob: -12.849142074584961
    6. ' oth' → logprob: -13.224142074584961
    7. 'point' → logprob: -13.349142074584961
    8. 'self' → logprob: -13.474142074584961
    9. ' point' → logprob: -13.974142074584961
    10. '(other' → logprob: -13.974142074584961

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005101414280943573
    2. '):
' → logprob: -7.625510215759277
    3. ':' → logprob: -11.375510215759277
    4. ')' → logprob: -11.625510215759277
    5. ' ):' → logprob: -13.750510215759277
    6. '):
' → logprob: -14.625510215759277
    7. '):

' → logprob: -16.00050926208496
    8. '**' → logprob: -17.25050926208496
    9. '():' → logprob: -17.50050926208496
    10. '<|end|>' → logprob: -17.50050926208496

Token 119: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3603031635284424
    2. ' 
' → logprob: -1.6103031635284424
    3. '    ' → logprob: -2.1103031635284424
    4. ' ' → logprob: -2.4853031635284424
    5. '       ' → logprob: -2.7353031635284424
    6. '):' → logprob: -2.9853031635284424
    7. '   ' → logprob: -3.1103031635284424
    8. ')' → logprob: -3.6103031635284424
    9. '):
' → logprob: -4.110302925109863
    10. '<|end|>' → logprob: -4.235302925109863

Token 120: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.07889419049024582
    2. ' Point' → logprob: -2.5788941383361816
    3. '	Point' → logprob: -13.82889461517334
    4. '(Point' → logprob: -14.07889461517334
    5. 'Po' → logprob: -14.32889461517334
    6. '   ' → logprob: -14.32889461517334
    7. '_Point' → logprob: -14.57889461517334
    8. 'self' → logprob: -15.32889461517334
    9. ' ' → logprob: -15.57889461517334
    10. '       ' → logprob: -15.82889461517334

Token 121: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.11284413188695908
    2. 'Point' → logprob: -2.237844228744507
    3. '	Point' → logprob: -11.237844467163086
    4. '(Point' → logprob: -12.362844467163086
    5. '_Point' → logprob: -13.237844467163086
    6. ' ' → logprob: -14.112844467163086
    7. ' ' → logprob: -14.362844467163086
    8. '   ' → logprob: -15.237844467163086
    9. '"' → logprob: -15.362844467163086
    10. '<Point' → logprob: -15.487844467163086

Token 122: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011052774265408516
    2. '(' → logprob: -4.51105260848999
    3. '(s' → logprob: -12.511053085327148
    4. '(
' → logprob: -14.386053085327148
    5. '((' → logprob: -14.886053085327148
    6. ' (' → logprob: -15.136053085327148
    7. '(this' → logprob: -16.51105308532715
    8. '(sel' → logprob: -17.76105308532715
    9. 'self' → logprob: -17.88605308532715
    10. '(x' → logprob: -18.26105308532715

Token 123: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019310165662318468
    2. '.' → logprob: -6.251931190490723
    3. ' .' → logprob: -13.751931190490723
    4. 'x' → logprob: -13.751931190490723
    5. ').' → logprob: -15.626931190490723
    6. '.
' → logprob: -16.251930236816406
    7. ' ' → logprob: -17.376930236816406
    8. '.s' → logprob: -18.501930236816406
    9. '0' → logprob: -18.626930236816406
    10. '‌.' → logprob: -18.626930236816406

Token 124: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023246990516781807
    2. '+' → logprob: -3.773247003555298
    3. ' ' → logprob: -13.898246765136719
    4. ' plus' → logprob: -15.148246765136719
    5. ' +
' → logprob: -16.02324676513672
    6. ' ' → logprob: -16.64824676513672
    7. ' other' → logprob: -16.77324676513672
    8. 'other' → logprob: -17.02324676513672
    9. '+self' → logprob: -17.27324676513672
    10. ' +
' → logprob: -18.14824676513672

Token 125: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.474081814289093
    2. ' other' → logprob: -0.974081814289093
    3. '(other' → logprob: -13.099081993103027
    4. ' ' → logprob: -13.599081993103027
    5. '_other' → logprob: -14.849081993103027
    6. ' oth' → logprob: -14.974081993103027
    7. 'othe' → logprob: -15.224081993103027
    8. '.other' → logprob: -15.724081993103027
    9. 'Other' → logprob: -15.849081993103027
    10. '
' → logprob: -16.34908103942871

Token 126: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.038043901324272156
    2. '.' → logprob: -3.288043975830078
    3. ' .' → logprob: -13.663043975830078
    4. 'x' → logprob: -14.163043975830078
    5. '.
' → logprob: -15.663043975830078
    6. ').' → logprob: -15.663043975830078
    7. '.gridx' → logprob: -16.913043975830078
    8. '._' → logprob: -17.288043975830078
    9. '.

' → logprob: -17.788043975830078
    10. '	x' → logprob: -18.663043975830078

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025430647656321526
    2. ',
' → logprob: -9.37525463104248
    3. '<|end|>' → logprob: -9.37525463104248
    4. ' ,' → logprob: -9.50025463104248
    5. ')' → logprob: -11.87525463104248
    6. ',

' → logprob: -14.12525463104248
    7. ' ' → logprob: -14.50025463104248
    8. ',self' → logprob: -14.75025463104248
    9. '<|end|>' → logprob: -15.25025463104248
    10. ',\
' → logprob: -15.50025463104248

Token 128: ' self' (ID: 1051)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.17994090914726257
    2. 'other' → logprob: -1.804940938949585
    3. ' ' → logprob: -9.429941177368164
    4. '<|end|>' → logprob: -9.929941177368164
    5. '(other' → logprob: -10.554941177368164
    6. '_other' → logprob: -11.179941177368164
    7. ' self' → logprob: -12.179941177368164
    8. 'self' → logprob: -12.304941177368164
    9. 'Other' → logprob: -12.429941177368164
    10. ' 
' → logprob: -12.804941177368164

Token 129: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0040956162847578526
    2. '.' → logprob: -5.504095554351807
    3. 'y' → logprob: -11.004096031188965
    4. ' .' → logprob: -15.129096031188965
    5. ' y' → logprob: -15.254096031188965
    6. '	y' → logprob: -17.25409507751465
    7. ' ' → logprob: -18.12909507751465
    8. '.py' → logprob: -19.12909507751465
    9. '.x' → logprob: -19.12909507751465
    10. '.
' → logprob: -19.25409507751465

Token 130: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020710527896881
    2. '+' → logprob: -2.3502070903778076
    3. '+y' → logprob: -15.725207328796387
    4. ')' → logprob: -16.35020637512207
    5. '+)' → logprob: -16.47520637512207
    6. '<|end|>' → logprob: -16.97520637512207
    7. '+self' → logprob: -17.60020637512207
    8. ' ' → logprob: -17.97520637512207
    9. ' +
' → logprob: -18.22520637512207
    10. '+s' → logprob: -18.85020637512207

Token 131: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2519315779209137
    2. ' other' → logprob: -1.5019315481185913
    3. '(other' → logprob: -13.376931190490723
    4. 'Other' → logprob: -14.626931190490723
    5. '.other' → logprob: -15.126931190490723
    6. '_other' → logprob: -16.00193214416504
    7. ' ' → logprob: -16.37693214416504
    8. 'self' → logprob: -18.62693214416504
    9. '  ' → logprob: -19.12693214416504
    10. ' oth' → logprob: -19.25193214416504

Token 132: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.38730692863464355
    2. 'y' → logprob: -1.1373069286346436
    3. '.' → logprob: -8.137307167053223
    4. ' y' → logprob: -9.637307167053223
    5. ')' → logprob: -9.637307167053223
    6. '<|end|>' → logprob: -12.762307167053223
    7. '	y' → logprob: -12.887307167053223
    8. ')y' → logprob: -13.012307167053223
    9. ' .' → logprob: -13.637307167053223
    10. 'Y' → logprob: -14.137307167053223

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.750000953674316
    4. '<|end|>' → logprob: -16.75
    5. ')return' → logprob: -17.875
    6. '   ' → logprob: -18.75
    7. '),' → logprob: -19.125
    8. '}' → logprob: -19.25
    9. ')#' → logprob: -19.25
    10. ' ' → logprob: -19.625

Token 134: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005607235245406628
    2. 'def' → logprob: -5.8806071281433105
    3. '    
' → logprob: -6.0056071281433105
    4. ' def' → logprob: -8.880607604980469
    5. ' 
' → logprob: -9.880607604980469
    6. ' ' → logprob: -10.005607604980469
    7. '    ' → logprob: -11.005607604980469
    8. ''' → logprob: -11.005607604980469
    9. '  ' → logprob: -11.005607604980469
    10. '   
' → logprob: -11.130607604980469

Token 136: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.003298078430816531
    2. '   ' → logprob: -5.753298282623291
    3. ' def' → logprob: -9.253297805786133
    4. '    
' → logprob: -11.503297805786133
    5. ' ' → logprob: -11.753297805786133
    6. '	def' → logprob: -13.003297805786133
    7. '  ' → logprob: -13.628297805786133
    8. '__' → logprob: -14.003297805786133
    9. '(' → logprob: -14.628297805786133
    10. '    ' → logprob: -15.128297805786133

Token 137: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0059149316512048244
    2. '__' → logprob: -6.38091516494751
    3. ' def' → logprob: -6.38091516494751
    4. ' ' → logprob: -6.50591516494751
    5. ' _' → logprob: -8.005914688110352
    6. 'sub' → logprob: -8.630914688110352
    7. 'def' → logprob: -9.005914688110352
    8. ' ' → logprob: -9.505914688110352
    9. '-' → logprob: -9.755914688110352
    10. ' sub' → logprob: -10.005914688110352

Token 138: 'sub' (ID: 3834)
  Prédit: 'sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.015146746300160885
    2. 'mul' → logprob: -4.515146732330322
    3. '-' → logprob: -6.015146732330322
    4. 'eq' → logprob: -6.515146732330322
    5. 'r' → logprob: -9.51514720916748
    6. 'neg' → logprob: -10.76514720916748
    7. 'repr' → logprob: -11.51514720916748
    8. 'rm' → logprob: -12.01514720916748
    9. 'tr' → logprob: -12.01514720916748
    10. '```' → logprob: -12.01514720916748

Token 139: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3889073431491852
    2. '__(' → logprob: -1.1389073133468628
    3. '__((' → logprob: -6.888907432556152
    4. '__(
' → logprob: -7.638907432556152
    5. '__('' → logprob: -7.888907432556152
    6. '__(*' → logprob: -9.513907432556152
    7. '__("' → logprob: -10.138907432556152
    8. '__.__' → logprob: -10.763907432556152
    9. '(' → logprob: -11.638907432556152
    10. '__*/' → logprob: -12.513907432556152

Token 140: 'self' (ID: 1156)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0005242000916041434
    2. ' other' → logprob: -8.000524520874023
    3. 'self' → logprob: -8.750524520874023
    4. '(other' → logprob: -11.000524520874023
    5. '<|end|>' → logprob: -12.000524520874023
    6. 'Other' → logprob: -12.750524520874023
    7. ')' → logprob: -12.875524520874023
    8. '_other' → logprob: -13.750524520874023
    9. '.other' → logprob: -14.875524520874023
    10. ' ' → logprob: -15.375524520874023

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.269771933555603
    2. '__(' → logprob: -2.0197720527648926
    3. '__' → logprob: -2.7697720527648926
    4. '__,' → logprob: -5.019772052764893
    5. '__(
' → logprob: -5.019772052764893
    6. '__((' → logprob: -5.144772052764893
    7. ')' → logprob: -5.519772052764893
    8. '(' → logprob: -5.894772052764893
    9. ')(' → logprob: -6.019772052764893
    10. ' ' → logprob: -6.269772052764893

Token 142: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.575995147228241
    2. 'other' → logprob: -0.825995147228241
    3. 'Other' → logprob: -10.575995445251465
    4. '<|end|>' → logprob: -11.075995445251465
    5. '(other' → logprob: -11.325995445251465
    6. '_other' → logprob: -13.325995445251465
    7. 'self' → logprob: -14.575995445251465
    8. ' ' → logprob: -15.075995445251465
    9. '.other' → logprob: -15.325995445251465
    10. ' andere' → logprob: -17.32599449157715

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006160548073239625
    2. '):
' → logprob: -7.500616073608398
    3. ')' → logprob: -10.250616073608398
    4. ':' → logprob: -10.625616073608398
    5. ' ):' → logprob: -13.750616073608398
    6. '():' → logprob: -14.250616073608398
    7. '):
' → logprob: -14.250616073608398
    8. '):

' → logprob: -14.500616073608398
    9. ',' → logprob: -15.375616073608398
    10. '   ' → logprob: -16.6256160736084

Token 144: '       ' (ID: 309)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.2982305586338043
    2. '       ' → logprob: -1.548230528831482
    3. 'Point' → logprob: -3.2982306480407715
    4. ' return' → logprob: -5.1732306480407715
    5. '(Point' → logprob: -6.9232306480407715
    6. '   ' → logprob: -7.0482306480407715
    7. '	Point' → logprob: -8.173230171203613
    8. ' ' → logprob: -8.673230171203613
    9. '        ' → logprob: -9.423230171203613
    10. '    ' → logprob: -9.673230171203613

Token 145: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.38687145709991455
    2. ' Point' → logprob: -1.1368714570999146
    3. '	Point' → logprob: -15.511871337890625
    4. ' ' → logprob: -16.511871337890625
    5. '(Point' → logprob: -16.761871337890625
    6. '   ' → logprob: -17.136871337890625
    7. ' return' → logprob: -17.261871337890625
    8. '.Point' → logprob: -18.386871337890625
    9. '_Point' → logprob: -18.886871337890625
    10. '  ' → logprob: -18.886871337890625

Token 146: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.00862320140004158
    2. 'Point' → logprob: -4.758623123168945
    3. '	Point' → logprob: -11.883623123168945
    4. '(Point' → logprob: -14.258623123168945
    5. '_Point' → logprob: -14.633623123168945
    6. '.Point' → logprob: -14.758623123168945
    7. ' ' → logprob: -15.758623123168945
    8. '<Point' → logprob: -16.008623123168945
    9. ' ' → logprob: -17.008623123168945
    10. ' Points' → logprob: -18.383623123168945

Token 147: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. 'self' → logprob: -16.625009536743164
    4. '(
' → logprob: -17.000009536743164
    5. ' (' → logprob: -19.625009536743164
    6. '(this' → logprob: -20.375009536743164
    7. ' self' → logprob: -21.250009536743164
    8. '(Self' → logprob: -21.375009536743164
    9. '(s' → logprob: -21.875009536743164
    10. '	self' → logprob: -22.000009536743164

Token 148: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.198043699143454e-05
    2. '.' → logprob: -9.375091552734375
    3. 'x' → logprob: -11.875091552734375
    4. ' .' → logprob: -16.250091552734375
    5. '<|end|>' → logprob: -16.875091552734375
    6. ').' → logprob: -18.250091552734375
    7. ' -' → logprob: -18.500091552734375
    8. ' x' → logprob: -19.000091552734375
    9. '```' → logprob: -20.000091552734375
    10. ')x' → logprob: -20.000091552734375

Token 149: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1433592438697815
    2. '-' → logprob: -2.3933591842651367
    3. '.x' → logprob: -3.5183591842651367
    4. '.' → logprob: -4.393359184265137
    5. ' .' → logprob: -9.143359184265137
    6. 'x' → logprob: -10.143359184265137
    7. ' ' → logprob: -10.393359184265137
    8. ' x' → logprob: -10.643359184265137
    9. '-x' → logprob: -11.393359184265137
    10. '<|end|>' → logprob: -12.268359184265137

Token 150: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3869367837905884
    2. ' other' → logprob: -1.1369367837905884
    3. '<|end|>' → logprob: -9.886937141418457
    4. '(other' → logprob: -12.011937141418457
    5. '_other' → logprob: -12.261937141418457
    6. 'Other' → logprob: -12.636937141418457
    7. '.other' → logprob: -14.386937141418457
    8. ' ' → logprob: -16.88693618774414
    9. '-other' → logprob: -17.13693618774414
    10. ' oth' → logprob: -17.63693618774414

Token 151: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.006740477401763201
    2. '.' → logprob: -5.006740570068359
    3. 'x' → logprob: -10.63174057006836
    4. '<|end|>' → logprob: -14.75674057006836
    5. ' .' → logprob: -15.13174057006836
    6. ' x' → logprob: -16.00674057006836
    7. '.
' → logprob: -16.00674057006836
    8. '```' → logprob: -17.25674057006836
    9. '.y' → logprob: -18.00674057006836
    10. '	x' → logprob: -18.13174057006836

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.869017852295656e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',
' → logprob: -14.875006675720215
    4. ',self' → logprob: -16.12500762939453
    5. ')' → logprob: -16.25000762939453
    6. 'self' → logprob: -17.50000762939453
    7. '),' → logprob: -18.12500762939453
    8. '       ' → logprob: -18.12500762939453
    9. '   ' → logprob: -18.25000762939453
    10. ',y' → logprob: -18.37500762939453

Token 153: ' self' (ID: 1051)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.3868727385997772
    2. ' other' → logprob: -1.1368727684020996
    3. '(other' → logprob: -13.886872291564941
    4. 'Other' → logprob: -14.386872291564941
    5. '_other' → logprob: -16.136873245239258
    6. '.other' → logprob: -16.136873245239258
    7. 'self' → logprob: -16.636873245239258
    8. '<|end|>' → logprob: -18.261873245239258
    9. ' oth' → logprob: -18.511873245239258
    10. ' ' → logprob: -19.011873245239258

Token 154: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.2998586595058441
    2. '.y' → logprob: -1.4248586893081665
    3. '.' → logprob: -4.049858570098877
    4. 'y' → logprob: -7.299858570098877
    5. 'x' → logprob: -8.174859046936035
    6. '<|end|>' → logprob: -8.924859046936035
    7. ')' → logprob: -12.174859046936035
    8. '```' → logprob: -12.799859046936035
    9. ' .' → logprob: -13.174859046936035
    10. '<|end|>' → logprob: -13.174859046936035

Token 155: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.261227548122406
    2. '.other' → logprob: -2.636227607727051
    3. '<|end|>' → logprob: -2.761227607727051
    4. '.y' → logprob: -3.136227607727051
    5. '.' → logprob: -3.261227607727051
    6. '-' → logprob: -5.386227607727051
    7. '.x' → logprob: -6.011227607727051
    8. '),' → logprob: -6.886227607727051
    9. 'y' → logprob: -7.011227607727051
    10. 'other' → logprob: -7.136227607727051

Token 156: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.0019300628919154406
    2. ' other' → logprob: -6.251930236816406
    3. '(other' → logprob: -13.751930236816406
    4. 'Other' → logprob: -16.251930236816406
    5. '.other' → logprob: -16.251930236816406
    6. 'y' → logprob: -17.126930236816406
    7. '0' → logprob: -17.376930236816406
    8. '_other' → logprob: -17.501930236816406
    9. 'self' → logprob: -18.251930236816406
    10. '<|end|>' → logprob: -18.876930236816406

Token 157: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.009297938086092472
    2. '.x' → logprob: -5.134297847747803
    3. '.' → logprob: -5.884297847747803
    4. ')' → logprob: -8.009298324584961
    5. 'y' → logprob: -8.384298324584961
    6. '<|end|>' → logprob: -11.884298324584961
    7. ' .' → logprob: -12.384298324584961
    8. '.py' → logprob: -13.009298324584961
    9. ' y' → logprob: -13.509298324584961
    10. ').' → logprob: -14.259298324584961

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -15.250005722045898
    4. ')

' → logprob: -17.1250057220459
    5. ')return' → logprob: -17.3750057220459
    6. ' )' → logprob: -18.5000057220459
    7. '   ' → logprob: -19.2500057220459
    8. ')}' → logprob: -19.5000057220459
    9. '),' → logprob: -19.6250057220459
    10. ')
' → logprob: -19.7500057220459

Token 159: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.2845117449760437
    2. '   ' → logprob: -1.4095118045806885
    3. '<|end|>' → logprob: -6.784511566162109
    4. '
' → logprob: -7.159511566162109
    5. '   
' → logprob: -7.409511566162109
    6. '  
' → logprob: -7.909511566162109
    7. ' 
' → logprob: -9.03451156616211
    8. '        
' → logprob: -9.03451156616211
    9. '    ' → logprob: -10.03451156616211
    10. '	
' → logprob: -10.15951156616211

Token 160: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06256694346666336
    2. '   ' → logprob: -2.8125669956207275
    3. ' def' → logprob: -7.437566757202148
    4. '    
' → logprob: -11.812566757202148
    5. '	def' → logprob: -12.937566757202148
    6. ' ' → logprob: -14.812566757202148
    7. '  ' → logprob: -16.68756675720215
    8. '@property' → logprob: -16.81256675720215
    9. '```' → logprob: -17.18756675720215
    10. 'class' → logprob: -17.81256675720215

Token 161: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002112886286340654
    2. '   ' → logprob: -8.750211715698242
    3. ' def' → logprob: -9.875211715698242
    4. ' ' → logprob: -15.250211715698242
    5. '    
' → logprob: -15.250211715698242
    6. '	def' → logprob: -15.625211715698242
    7. ')' → logprob: -16.125211715698242
    8. 'class' → logprob: -16.375211715698242
    9. '*' → logprob: -16.500211715698242
    10. '__' → logprob: -16.625211715698242

Token 162: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.29346194863319397
    2. ' __' → logprob: -2.043462038040161
    3. ' ' → logprob: -2.168462038040161
    4. 'def' → logprob: -6.043461799621582
    5. ' ```' → logprob: -6.793461799621582
    6. ' mul' → logprob: -7.168461799621582
    7. ' dot' → logprob: -7.418461799621582
    8. ' `' → logprob: -7.543461799621582
    9. ' abs' → logprob: -7.668461799621582
    10. ' _' → logprob: -7.730961799621582

Token 163: 'mul' (ID: 44857)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.6338598132133484
    2. 'mul' → logprob: -0.7588598132133484
    3. 'lt' → logprob: -7.258859634399414
    4. 'abs' → logprob: -8.633859634399414
    5. 'repr' → logprob: -8.758859634399414
    6. 'tr' → logprob: -9.633859634399414
    7. 'neg' → logprob: -10.008859634399414
    8. 'le' → logprob: -10.258859634399414
    9. 'mult' → logprob: -11.258859634399414
    10. 'pow' → logprob: -11.258859634399414

Token 164: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009459740482270718
    2. '(self' → logprob: -5.009459972381592
    3. '(' → logprob: -6.759459972381592
    4. '__' → logprob: -6.884459972381592
    5. '__(
' → logprob: -8.259459495544434
    6. '<|end|>' → logprob: -8.884459495544434
    7. '__((' → logprob: -9.384459495544434
    8. ' (' → logprob: -10.884459495544434
    9. '__(*' → logprob: -11.009459495544434
    10. '_(' → logprob: -11.009459495544434

Token 165: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00036168331280350685
    2. ' self' → logprob: -8.125361442565918
    3. '
' → logprob: -9.750361442565918
    4. '   ' → logprob: -13.000361442565918
    5. '(self' → logprob: -13.125361442565918
    6. ' ' → logprob: -13.750361442565918
    7. ')' → logprob: -14.375361442565918
    8. 'other' → logprob: -14.375361442565918
    9. '	self' → logprob: -15.500361442565918
    10. 's' → logprob: -15.875361442565918

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017913442105054855
    2. '(self' → logprob: -4.642913341522217
    3. 'self' → logprob: -5.142913341522217
    4. '__(' → logprob: -6.392913341522217
    5. ' ,' → logprob: -8.767913818359375
    6. ' (' → logprob: -8.767913818359375
    7. ',self' → logprob: -9.517913818359375
    8. '
' → logprob: -9.767913818359375
    9. ' self' → logprob: -10.142913818359375
    10. ' ' → logprob: -10.517913818359375

Token 167: ' scal' (ID: 34925)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5161154270172119
    2. ' other' → logprob: -1.641115427017212
    3. ' self' → logprob: -2.266115427017212
    4. 'self' → logprob: -2.266115427017212
    5. ' ' → logprob: -6.391115188598633
    6. ' scalar' → logprob: -8.516115188598633
    7. 'scalar' → logprob: -9.641115188598633
    8. 'Other' → logprob: -11.641115188598633
    9. '_other' → logprob: -12.641115188598633
    10. 'value' → logprob: -12.891115188598633

Token 168: '):
' (ID: 1883)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -2.069664333248511e-05
    2. 'a' → logprob: -11.125020980834961
    3. ',' → logprob: -13.625020980834961
    4. ' ar' → logprob: -13.625020980834961
    5. 'er' → logprob: -14.000020980834961
    6. 'or' → logprob: -14.375020980834961
    7. '   ' → logprob: -15.375020980834961
    8. ')' → logprob: -15.750020980834961
    9. '
' → logprob: -15.750020980834961
    10. 'ars' → logprob: -15.875020980834961

Token 169: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3908962607383728
    2. '       ' → logprob: -1.7658963203430176
    3. ' self' → logprob: -2.8908963203430176
    4. '(self' → logprob: -3.1408963203430176
    5. 'return' → logprob: -3.2658963203430176
    6. ' return' → logprob: -5.515896320343018
    7. ' (' → logprob: -5.890896320343018
    8. '(' → logprob: -6.265896320343018
    9. 's' → logprob: -6.515896320343018
    10. '   ' → logprob: -6.890896320343018

Token 170: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.21064528822898865
    2. 'return' (adapté à ' return') → logprob: -1.710645318031311
    3. 'self' → logprob: -4.7106451988220215
    4. ' Point' → logprob: -9.33564567565918
    5. ' return' → logprob: -9.58564567565918
    6. '   ' → logprob: -11.71064567565918
    7. '       ' → logprob: -11.71064567565918
    8. '	Point' → logprob: -11.96064567565918
    9. ' self' → logprob: -12.83564567565918
    10. '_point' → logprob: -13.58564567565918

Token 171: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.023257242515683174
    2. ' Point' → logprob: -3.773257255554199
    3. '	Point' → logprob: -11.7732572555542
    4. 'self' → logprob: -13.2732572555542
    5. '   ' → logprob: -13.8982572555542
    6. '(Point' → logprob: -14.5232572555542
    7. ' ' → logprob: -15.3982572555542
    8. 'Points' → logprob: -16.023256301879883
    9. '_Point' → logprob: -16.023256301879883
    10. '.Point' → logprob: -16.523256301879883

Token 172: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00014084660506341606
    2. '(' → logprob: -8.875141143798828
    3. 'self' → logprob: -14.625141143798828
    4. '(s' → logprob: -14.875141143798828
    5. '(
' → logprob: -16.375141143798828
    6. ' (' → logprob: -17.250141143798828
    7. '(int' → logprob: -17.375141143798828
    8. '((' → logprob: -17.875141143798828
    9. '(round' → logprob: -17.875141143798828
    10. '(sel' → logprob: -18.250141143798828

Token 173: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.018191028386354446
    2. '.' → logprob: -4.018190860748291
    3. 'x' → logprob: -10.76819133758545
    4. ' .' → logprob: -11.39319133758545
    5. '<|end|>' → logprob: -12.26819133758545
    6. '.
' → logprob: -14.26819133758545
    7. ' ' → logprob: -14.51819133758545
    8. '.s' → logprob: -14.89319133758545
    9. '0' → logprob: -15.01819133758545
    10. '.xtext' → logprob: -15.39319133758545

Token 174: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.20141421258449554
    2. '*' → logprob: -1.7014142274856567
    3. ' ' → logprob: -14.576414108276367
    4. '*object' → logprob: -15.076414108276367
    5. ' ' → logprob: -16.951414108276367
    6. '*s' → logprob: -17.326414108276367
    7. '**' → logprob: -18.076414108276367
    8. ' **' → logprob: -18.326414108276367
    9. ' *
' → logprob: -18.451414108276367
    10. ')' → logprob: -18.826414108276367

Token 175: 'sc' (ID: 2786)
  Prédit: 'sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.3868780732154846
    2. ' scal' → logprob: -1.1368780136108398
    3. ' sc' → logprob: -13.01187801361084
    4. '	sc' → logprob: -14.01187801361084
    5. '_scal' → logprob: -14.13687801361084
    6. '.scal' → logprob: -14.26187801361084
    7. '<|end|>' → logprob: -15.01187801361084
    8. ' scalp' → logprob: -15.13687801361084
    9. 'Sc' → logprob: -15.13687801361084
    10. 's' → logprob: -15.38687801361084

Token 176: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -2.141186450899113e-05
    2. 'a' → logprob: -11.750020980834961
    3. 'alar' → logprob: -12.625020980834961
    4. 'ar' → logprob: -12.875020980834961
    5. ' al' → logprob: -13.125020980834961
    6. ' ' → logprob: -14.000020980834961
    7. '*' → logprob: -14.125020980834961
    8. '2' → logprob: -14.500020980834961
    9. '[' → logprob: -14.750020980834961
    10. 'at' → logprob: -15.250020980834961

Token 177: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.228561349213123e-05
    2. ' ,' → logprob: -9.875052452087402
    3. ',
' → logprob: -14.750052452087402
    4. ',self' → logprob: -15.375052452087402
    5. ',

' → logprob: -16.125051498413086
    6. '<|end|>' → logprob: -17.000051498413086
    7. ')' → logprob: -17.125051498413086
    8. '‌,' → logprob: -18.250051498413086
    9. 's' → logprob: -19.125051498413086
    10. ',float' → logprob: -19.250051498413086

Token 178: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25195056200027466
    2. 'self' → logprob: -1.5019505023956299
    3. ' ' → logprob: -11.37695026397705
    4. ' ' → logprob: -12.50195026397705
    5. '	self' → logprob: -12.87695026397705
    6. '(self' → logprob: -13.50195026397705
    7. '<|end|>' → logprob: -14.00195026397705
    8. '0' → logprob: -14.50195026397705
    9. '_self' → logprob: -15.62695026397705
    10. '$self' → logprob: -16.001951217651367

Token 179: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.004139549098908901
    2. 'y' → logprob: -5.504139423370361
    3. '.' → logprob: -9.75413990020752
    4. '*y' → logprob: -14.00413990020752
    5. ' y' → logprob: -14.50413990020752
    6. '*' → logprob: -14.62913990020752
    7. '	y' → logprob: -14.87913990020752
    8. '.s' → logprob: -15.00413990020752
    9. ' .' → logprob: -15.75413990020752
    10. '.x' → logprob: -16.004138946533203

Token 180: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -5.512236498361744e-07
    2. '*s' → logprob: -15.375000953674316
    3. '*object' → logprob: -15.875000953674316
    4. ' *' → logprob: -17.5
    5. '*cos' → logprob: -17.75
    6. ')*' → logprob: -18.25
    7. '**' → logprob: -19.375
    8. '*sin' → logprob: -19.5
    9. '*out' → logprob: -19.625
    10. '*np' → logprob: -19.625

Token 181: 'sc' (ID: 2786)
  Prédit: 'sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.00014096579980105162
    2. ' scal' → logprob: -8.875141143798828
    3. 'scalar' → logprob: -15.000141143798828
    4. '	sc' → logprob: -15.250141143798828
    5. 'sal' → logprob: -15.750141143798828
    6. '.scal' → logprob: -16.250141143798828
    7. 'skal' → logprob: -16.250141143798828
    8. '_scal' → logprob: -16.625141143798828
    9. '-scal' → logprob: -17.250141143798828
    10. 'Sc' → logprob: -17.875141143798828

Token 182: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -3.173704271830502e-06
    2. ' al' → logprob: -13.37500286102295
    3. ')' → logprob: -13.75000286102295
    4. '<|end|>' → logprob: -16.375003814697266
    5. '*' → logprob: -16.750003814697266
    6. '[' → logprob: -16.750003814697266
    7. '	al' → logprob: -16.750003814697266
    8. 'ал' → logprob: -17.000003814697266
    9. 'alph' → logprob: -17.625003814697266
    10. '>' → logprob: -17.875003814697266

Token 183: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. ' )' → logprob: -11.375014305114746
    3. ')
' → logprob: -12.875014305114746
    4. ')

' → logprob: -16.87501335144043
    5. '<|end|>' → logprob: -17.75001335144043
    6. ')return' → logprob: -18.62501335144043
    7. '   ' → logprob: -18.75001335144043
    8. '}' → logprob: -18.87501335144043
    9. ' ' → logprob: -19.12501335144043
    10. '),' → logprob: -19.25001335144043

Token 184: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04655074328184128
    2. 'def' → logprob: -3.171550750732422
    3. ' def' → logprob: -5.796550750732422
    4. '    
' → logprob: -7.796550750732422
    5. ' ' → logprob: -9.671550750732422
    6. '  ' → logprob: -11.421550750732422
    7. '	def' → logprob: -11.921550750732422
    8. '    ' → logprob: -12.046550750732422
    9. '   
' → logprob: -13.421550750732422
    10. '  
' → logprob: -13.796550750732422

Token 186: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00012892624363303185
    2. '__' → logprob: -9.500128746032715
    3. ' def' → logprob: -9.875128746032715
    4. '   ' → logprob: -13.500128746032715
    5. 'return' → logprob: -14.750128746032715
    6. ' ' → logprob: -14.875128746032715
    7. '    
' → logprob: -15.750128746032715
    8. '	def' → logprob: -16.37512969970703
    9. '@' → logprob: -17.25012969970703
    10. '@property' → logprob: -17.37512969970703

Token 187: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18268656730651855
    2. '__' → logprob: -1.8076865673065186
    3. ' def' → logprob: -6.432686805725098
    4. 'def' → logprob: -6.932686805725098
    5. '/__' → logprob: -9.432686805725098
    6. 'dot' → logprob: -10.432686805725098
    7. ' ' → logprob: -10.557686805725098
    8. 'mul' → logprob: -10.557686805725098
    9. '.__' → logprob: -11.057686805725098
    10. 'div' → logprob: -11.182686805725098

Token 188: 'tr' (ID: 371)
  Prédit: 'rm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.676340639591217
    2. 'tr' → logprob: -0.801340639591217
    3. 'eq' → logprob: -3.1763405799865723
    4. 'flo' → logprob: -7.926340579986572
    5. 'mul' → logprob: -8.30134105682373
    6. 'imul' → logprob: -8.67634105682373
    7. 'abs' → logprob: -9.17634105682373
    8. 'repr' → logprob: -9.55134105682373
    9. 'div' → logprob: -10.30134105682373
    10. 'pow' → logprob: -11.05134105682373

Token 189: 'ued' (ID: 5829)
  Prédit: 'ued'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ued' → logprob: -0.023587265983223915
    2. '__' → logprob: -4.148587226867676
    3. 'ue' → logprob: -5.148587226867676
    4. 'u' → logprob: -6.398587226867676
    5. '/' → logprob: -11.023587226867676
    6. '__(' → logprob: -11.648587226867676
    7. 'uem' → logprob: -12.523587226867676
    8. 'ues' → logprob: -12.773587226867676
    9. '_' → logprob: -12.898587226867676
    10. '__
' → logprob: -13.023587226867676

Token 190: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.0002266622323077172
    2. '__' → logprob: -8.500226974487305
    3. 'div' → logprob: -11.125226974487305
    4. 'ived' → logprob: -13.000226974487305
    5. 'IV' → logprob: -13.125226974487305
    6. '/__' → logprob: -14.000226974487305
    7. 'v' → logprob: -14.500226974487305
    8. '```' → logprob: -15.250226974487305
    9. '/f' → logprob: -15.375226974487305
    10. 'i' → logprob: -15.625226974487305

Token 191: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02094017155468464
    2. '(self' → logprob: -4.02094030380249
    3. '(' → logprob: -6.02094030380249
    4. '__' → logprob: -8.645939826965332
    5. '__(
' → logprob: -9.645939826965332
    6. '__('' → logprob: -9.895939826965332
    7. '__((' → logprob: -11.145939826965332
    8. ' (' → logprob: -11.395939826965332
    9. '__("' → logprob: -11.395939826965332
    10. '__(*' → logprob: -11.520939826965332

Token 192: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008330935961566865
    2. ' self' → logprob: -7.125833034515381
    3. 'sc' → logprob: -10.500833511352539
    4. '(self' → logprob: -14.375833511352539
    5. '
' → logprob: -16.12583351135254
    6. '	self' → logprob: -16.37583351135254
    7. 's' → logprob: -16.75083351135254
    8. ' ' → logprob: -16.75083351135254
    9. ')' → logprob: -16.87583351135254
    10. 'def' → logprob: -17.50083351135254

Token 193: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0124862315133214
    2. ' ,' → logprob: -5.262486457824707
    3. ' ' → logprob: -5.637486457824707
    4. '<|end|>' → logprob: -6.512486457824707
    5. ')' → logprob: -7.012486457824707
    6. ' scal' → logprob: -7.137486457824707
    7. 'sc' → logprob: -8.887486457824707
    8. 'self' → logprob: -8.887486457824707
    9. ',
' → logprob: -10.012486457824707
    10. 's' → logprob: -10.637486457824707

Token 194: ' scal' (ID: 34925)
  Prédit: ' scal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scal' → logprob: -0.12695667147636414
    2. 'sc' → logprob: -2.1269567012786865
    3. ' scalar' → logprob: -11.001956939697266
    4. ' sc' → logprob: -12.376956939697266
    5. 'scalar' → logprob: -12.376956939697266
    6. '	sc' → logprob: -13.501956939697266
    7. 'self' → logprob: -13.751956939697266
    8. ' scaler' → logprob: -14.876956939697266
    9. ' self' → logprob: -15.626956939697266
    10. ' scor' → logprob: -15.876956939697266

Token 195: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012984501663595438
    2. ')' → logprob: -7.376298427581787
    3. '):
' → logprob: -7.376298427581787
    4. ' ):' → logprob: -10.626298904418945
    5. '):
' → logprob: -11.626298904418945
    6. ':' → logprob: -12.126298904418945
    7. ',' → logprob: -12.376298904418945
    8. '):

' → logprob: -13.626298904418945
    9. ' ' → logprob: -14.751298904418945
    10. '(' → logprob: -14.751298904418945

Token 196: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5412825345993042
    2. '       ' → logprob: -1.0412825345993042
    3. 'return' → logprob: -2.7912826538085938
    4. '   ' → logprob: -5.666282653808594
    5. 'Point' → logprob: -9.291282653808594
    6. ' Point' → logprob: -9.416282653808594
    7. '	return' → logprob: -11.791282653808594
    8. ' ' → logprob: -12.791282653808594
    9. '    ' → logprob: -12.916282653808594
    10. '     ' → logprob: -13.291282653808594

Token 197: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.07110279053449631
    2. ' Point' → logprob: -3.3211028575897217
    3. 'return' (adapté à ' return') → logprob: -3.5711028575897217
    4. ' return' → logprob: -5.446102619171143
    5. 'self' → logprob: -9.8211030960083
    6. '       ' → logprob: -10.9461030960083
    7. '   ' → logprob: -12.3211030960083
    8. ' ' → logprob: -13.3211030960083
    9. ' self' → logprob: -13.4461030960083
    10. '	Point' → logprob: -13.6961030960083

Token 198: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.5759443640708923
    2. ' Point' → logprob: -0.8259443640708923
    3. 'self' → logprob: -12.825943946838379
    4. '	Point' → logprob: -13.450943946838379
    5. ' self' → logprob: -14.700943946838379
    6. '(Point' → logprob: -15.700943946838379
    7. ' ' → logprob: -16.575944900512695
    8. '   ' → logprob: -16.575944900512695
    9. '_Point' → logprob: -16.825944900512695
    10. '.Point' → logprob: -17.825944900512695

Token 199: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. 'self' → logprob: -15.250001907348633
    4. '(
' → logprob: -18.250001907348633
    5. '(s' → logprob: -19.625001907348633
    6. '(sel' → logprob: -20.000001907348633
    7. '(int' → logprob: -20.250001907348633
    8. ' self' → logprob: -20.625001907348633
    9. ' (' → logprob: -20.750001907348633
    10. '(this' → logprob: -21.000001907348633

Token 200: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0019353042589500546
    2. '.' → logprob: -6.2519354820251465
    3. ' .' → logprob: -12.751935005187988
    4. 'x' → logprob: -12.876935005187988
    5. ').' → logprob: -14.626935005187988
    6. '<|end|>' → logprob: -14.876935005187988
    7. '._' → logprob: -16.126935958862305
    8. '.__' → logprob: -16.251935958862305
    9. ')' → logprob: -17.001935958862305
    10. '.scal' → logprob: -17.626935958862305

Token 201: '/sc' (ID: 74111)
  Prédit: '/sc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/sc' → logprob: -0.05161575600504875
    2. ' /' → logprob: -3.0516157150268555
    3. '/' → logprob: -5.8016157150268555
    4. '/div' → logprob: -14.176615715026855
    5. '/self' → logprob: -16.051616668701172
    6. ' scal' → logprob: -16.301616668701172
    7. '/s' → logprob: -16.426616668701172
    8. ' ' → logprob: -16.926616668701172
    9. '/sk' → logprob: -17.676616668701172
    10. '/d' → logprob: -17.926616668701172

Token 202: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -2.2723104848410003e-05
    2. 'a' → logprob: -11.750022888183594
    3. '
' → logprob: -12.875022888183594
    4. 'sc' → logprob: -12.875022888183594
    5. 'als' → logprob: -13.125022888183594
    6. ' al' → logprob: -13.875022888183594
    7. '2' → logprob: -14.000022888183594
    8. 'alc' → logprob: -14.375022888183594
    9. 'ал' → logprob: -14.500022888183594
    10. '[' → logprob: -14.625022888183594

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001330360071733594
    2. ')' → logprob: -6.626330375671387
    3. ' ,' → logprob: -12.626330375671387
    4. ',
' → logprob: -14.126330375671387
    5. ' )' → logprob: -16.25132942199707
    6. '<|end|>' → logprob: -16.37632942199707
    7. ',

' → logprob: -16.87632942199707
    8. '),' → logprob: -17.37632942199707
    9. ',)' → logprob: -17.50132942199707
    10. 's' → logprob: -18.00132942199707

Token 204: ' self' (ID: 1051)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.6392391920089722
    2. ' scal' → logprob: -0.7642391920089722
    3. 'self' → logprob: -5.139239311218262
    4. ' self' → logprob: -7.264239311218262
    5. ' sc' → logprob: -10.639239311218262
    6. 'scalar' → logprob: -11.139239311218262
    7. ' scalar' → logprob: -11.764239311218262
    8. ' ' → logprob: -12.889239311218262
    9. '	sc' → logprob: -13.514239311218262
    10. ' scalp' → logprob: -14.264239311218262

Token 205: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006173963192850351
    2. '.y' → logprob: -5.131174087524414
    3. ' y' → logprob: -9.256174087524414
    4. ')' → logprob: -10.006174087524414
    5. 'x' → logprob: -10.006174087524414
    6. 'sc' → logprob: -10.631174087524414
    7. '.' → logprob: -11.006174087524414
    8. 's' → logprob: -12.381174087524414
    9. '.py' → logprob: -12.881174087524414
    10. ' ' → logprob: -13.131174087524414

Token 206: '/sc' (ID: 74111)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.968934758333489e-05
    2. ',' → logprob: -9.625069618225098
    3. ')
' → logprob: -13.000069618225098
    4. ' )' → logprob: -14.125069618225098
    5. '),' → logprob: -15.125069618225098
    6. '<|end|>' → logprob: -15.125069618225098
    7. ')}' → logprob: -17.625070571899414
    8. '))' → logprob: -18.125070571899414
    9. ')x' → logprob: -18.250070571899414
    10. ').' → logprob: -18.250070571899414

Token 207: 'al' (ID: 280)
  Prédit: 'al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -4.36574100604048e-06
    2. 'alc' → logprob: -13.500004768371582
    3. 'a' → logprob: -14.500004768371582
    4. 'ал' → logprob: -14.750004768371582
    5. 'sc' → logprob: -15.000004768371582
    6. 'alp' → logprob: -15.250004768371582
    7. 'als' → logprob: -15.375004768371582
    8. ' al' → logprob: -15.500004768371582
    9. 'alph' → logprob: -15.625004768371582
    10. '   ' → logprob: -15.875004768371582

Token 208: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -17.875
    4. '<|end|>' → logprob: -18.125
    5. ')

' → logprob: -18.5
    6. ')return' → logprob: -19.375
    7. '),' → logprob: -19.375
    8. ')
' → logprob: -19.375
    9. ')}' → logprob: -20.25
    10. ')`' → logprob: -20.375

Token 209: '    
' (ID: 1944)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 210: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062263213098049164
    2. '   ' → logprob: -2.812263250350952
    3. '@property' → logprob: -8.562263488769531
    4. ' def' → logprob: -9.437263488769531
    5. '    
' → logprob: -11.312263488769531
    6. '#' → logprob: -12.062263488769531
    7. '	def' → logprob: -12.437263488769531
    8. 'class' → logprob: -14.187263488769531
    9. 'import' → logprob: -14.812263488769531
    10. ' ' → logprob: -15.187263488769531

Token 211: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00047833603457547724
    2. '   ' → logprob: -8.250478744506836
    3. '@property' → logprob: -9.000478744506836
    4. ' def' → logprob: -9.375478744506836
    5. ')' → logprob: -12.750478744506836
    6. '#' → logprob: -13.250478744506836
    7. '    
' → logprob: -13.375478744506836
    8. '	def' → logprob: -14.000478744506836
    9. 'import' → logprob: -14.750478744506836
    10. ' ' → logprob: -15.125478744506836

Token 212: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17018833756446838
    2. 'def' → logprob: -3.0451884269714355
    3. ' norm' → logprob: -3.4201884269714355
    4. ' abs' → logprob: -3.9201884269714355
    5. 'abs' → logprob: -4.2951884269714355
    6. 'norm' → logprob: -4.5451884269714355
    7. ' dot' → logprob: -4.7951884269714355
    8. ' length' → logprob: -5.0451884269714355
    9. 'dot' → logprob: -5.1701884269714355
    10. ' __' → logprob: -5.5451884269714355

Token 213: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.014565256424248219
    2. 'lt' → logprob: -4.264565467834473
    3. 'neg' → logprob: -9.139565467834473
    4. 'mul' → logprob: -9.264565467834473
    5. 'abs' → logprob: -9.514565467834473
    6. 'pow' → logprob: -9.639565467834473
    7. 'repr' → logprob: -10.389565467834473
    8. 'flo' → logprob: -11.514565467834473
    9. 'rm' → logprob: -11.639565467834473
    10. 'gt' → logprob: -12.264565467834473

Token 214: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0007272057700902224
    2. '__' → logprob: -7.25072717666626
    3. '(self' → logprob: -11.625727653503418
    4. '(' → logprob: -12.125727653503418
    5. '__((' → logprob: -13.375727653503418
    6. '__('' → logprob: -14.625727653503418
    7. '__(
' → logprob: -14.625727653503418
    8. '_(' → logprob: -15.750727653503418
    9. '__("' → logprob: -16.2507266998291
    10. '__(*' → logprob: -17.2507266998291

Token 215: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.868328920158092e-05
    2. ' self' → logprob: -10.500028610229492
    3. 'other' → logprob: -13.875028610229492
    4. '(self' → logprob: -15.625028610229492
    5. '   ' → logprob: -19.625028610229492
    6. '	self' → logprob: -19.750028610229492
    7. ' ' → logprob: -20.250028610229492
    8. ' other' → logprob: -21.000028610229492
    9. ')' → logprob: -21.375028610229492
    10. '
' → logprob: -21.500028610229492

Token 216: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003685861302074045
    2. '(self' → logprob: -8.500368118286133
    3. '__' → logprob: -8.750368118286133
    4. '(' → logprob: -12.500368118286133
    5. '__(
' → logprob: -13.125368118286133
    6. 'self' → logprob: -14.875368118286133
    7. '__((' → logprob: -15.500368118286133
    8. '_(' → logprob: -15.625368118286133
    9. '__('' → logprob: -15.875368118286133
    10. '__("' → logprob: -16.500368118286133

Token 217: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.005238025914877653
    2. ' other' → logprob: -5.255238056182861
    3. 'self' → logprob: -12.380237579345703
    4. '(other' → logprob: -17.380237579345703
    5. 'Other' → logprob: -17.630237579345703
    6. '_other' → logprob: -18.880237579345703
    7. ' self' → logprob: -19.130237579345703
    8. '.other' → logprob: -19.130237579345703
    9. 'oth' → logprob: -19.630237579345703
    10. ' ' → logprob: -20.005237579345703

Token 218: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014203116297721863
    2. '):
' → logprob: -4.264203071594238
    3. ' ):' → logprob: -11.139203071594238
    4. ')' → logprob: -11.389203071594238
    5. '):
' → logprob: -11.514203071594238
    6. ':' → logprob: -13.639203071594238
    7. '   ' → logprob: -13.639203071594238
    8. '       ' → logprob: -14.514203071594238
    9. '):

' → logprob: -14.514203071594238
    10. ' ):
' → logprob: -15.389203071594238

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006401229766197503
    2. 'return' → logprob: -7.750639915466309
    3. ' return' → logprob: -8.500639915466309
    4. '
' → logprob: -13.250639915466309
    5. '   ' → logprob: -13.500639915466309
    6. '        
' → logprob: -14.375639915466309
    7. '      ' → logprob: -14.375639915466309
    8. '	return' → logprob: -14.500639915466309
    9. '{return' → logprob: -14.875639915466309
    10. '           ' → logprob: -15.250639915466309

Token 220: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02707565203309059
    2. 'eq' → logprob: -4.15207576751709
    3. '       ' → logprob: -4.77707576751709
    4. ' return' → logprob: -6.02707576751709
    5. '   ' → logprob: -9.02707576751709
    6. ' eq' → logprob: -11.77707576751709
    7. 'is' → logprob: -12.27707576751709
    8. '(eq' → logprob: -12.77707576751709
    9. 'if' → logprob: -12.90207576751709
    10. 'self' → logprob: -13.02707576751709

Token 221: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0013721456052735448
    2. ' eq' → logprob: -6.626372337341309
    3. '(eq' → logprob: -10.626372337341309
    4. 'abs' → logprob: -11.001372337341309
    5. '   ' → logprob: -12.376372337341309
    6. 'self' → logprob: -14.751372337341309
    7. ' abs' → logprob: -15.376372337341309
    8. ' ' → logprob: -16.376371383666992
    9. ' isinstance' → logprob: -16.876371383666992
    10. '       ' → logprob: -17.001371383666992

Token 222: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.60414821645827e-06
    2. '(' → logprob: -12.750004768371582
    3. 'self' → logprob: -13.500004768371582
    4. '(this' → logprob: -15.250004768371582
    5. '   ' → logprob: -17.750003814697266
    6. '(
' → logprob: -19.000003814697266
    7. '	self' → logprob: -19.125003814697266
    8. '=self' → logprob: -19.125003814697266
    9. ' (' → logprob: -19.250003814697266
    10. 's' → logprob: -19.375003814697266

Token 223: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0002724217774812132
    2. '.' → logprob: -8.375272750854492
    3. 'self' → logprob: -10.625272750854492
    4. '(self' → logprob: -11.750272750854492
    5. '.self' → logprob: -12.750272750854492
    6. ' .' → logprob: -13.000272750854492
    7. ').' → logprob: -13.750272750854492
    8. '(' → logprob: -14.000272750854492
    9. '(x' → logprob: -14.250272750854492
    10. 'x' → logprob: -14.375272750854492

Token 224: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023762896307744086
    2. ' ,' → logprob: -8.750237464904785
    3. '(other' → logprob: -9.750237464904785
    4. 'other' → logprob: -10.875237464904785
    5. '.other' → logprob: -14.750237464904785
    6. ')' → logprob: -15.250237464904785
    7. ',
' → logprob: -15.250237464904785
    8. ',self' → logprob: -15.375237464904785
    9. '   ' → logprob: -15.500237464904785
    10. '(' → logprob: -15.625237464904785

Token 225: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.003177952254191041
    2. ' other' → logprob: -5.753178119659424
    3. '(other' → logprob: -15.378177642822266
    4. 'self' → logprob: -17.128177642822266
    5. 'Other' → logprob: -18.503177642822266
    6. '.other' → logprob: -19.003177642822266
    7. 'othe' → logprob: -19.753177642822266
    8. ')' → logprob: -20.003177642822266
    9. '_other' → logprob: -20.128177642822266
    10. 'o' → logprob: -20.753177642822266

Token 226: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.805981972021982e-05
    2. '.' → logprob: -9.25009822845459
    3. ' .' → logprob: -13.87509822845459
    4. 'x' → logprob: -14.75009822845459
    5. ').' → logprob: -14.75009822845459
    6. '.y' → logprob: -17.125097274780273
    7. '.
' → logprob: -17.500097274780273
    8. ')' → logprob: -17.625097274780273
    9. '[' → logprob: -19.375097274780273
    10. ' ' → logprob: -19.625097274780273

Token 227: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002656271681189537
    2. 'and' → logprob: -8.375266075134277
    3. ' and' → logprob: -10.625266075134277
    4. ' )' → logprob: -11.500266075134277
    5. ')&&' → logprob: -15.125266075134277
    6. '       ' → logprob: -15.625266075134277
    7. ')
' → logprob: -16.25026512145996
    8. '   ' → logprob: -17.12526512145996
    9. '        ' → logprob: -18.37526512145996
    10. '),' → logprob: -18.62526512145996

Token 228: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759444236755371
    2. 'and' → logprob: -0.8259444236755371
    3. '       ' → logprob: -13.450944900512695
    4. '	and' → logprob: -13.575944900512695
    5. '   ' → logprob: -14.325944900512695
    6. ' ' → logprob: -14.450944900512695
    7. '    ' → logprob: -14.700944900512695
    8. ' ' → logprob: -15.575944900512695
    9. '      ' → logprob: -15.700944900512695
    10. '        ' → logprob: -15.950944900512695

Token 229: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.12692831456661224
    2. ' eq' → logprob: -2.1269283294677734
    3. '(eq' → logprob: -15.626928329467773
    4. '       ' → logprob: -16.751928329467773
    5. '.eq' → logprob: -17.501928329467773
    6. 'eg' → logprob: -18.376928329467773
    7. ' ' → logprob: -18.501928329467773
    8. '_eq' → logprob: -19.126928329467773
    9. 'self' → logprob: -19.251928329467773
    10. '   ' → logprob: -19.376928329467773

Token 230: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.618001053633634e-05
    2. '(' → logprob: -11.250025749206543
    3. 'self' → logprob: -11.250025749206543
    4. '(
' → logprob: -16.25002670288086
    5. '(this' → logprob: -16.87502670288086
    6. ' (' → logprob: -17.00002670288086
    7. '<|end|>' → logprob: -17.62502670288086
    8. ' self' → logprob: -18.50002670288086
    9. '(s' → logprob: -19.00002670288086
    10. '[self' → logprob: -19.62502670288086

Token 231: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -4.453737710718997e-05
    2. 'self' → logprob: -10.375044822692871
    3. 'y' → logprob: -11.750044822692871
    4. '.' → logprob: -13.125044822692871
    5. '(self' → logprob: -13.500044822692871
    6. '.s' → logprob: -14.375044822692871
    7. '.self' → logprob: -14.500044822692871
    8. '.user' → logprob: -15.375044822692871
    9. ' .' → logprob: -15.875044822692871
    10. '.x' → logprob: -16.000043869018555

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.743758760625497e-05
    2. 'other' → logprob: -9.625077247619629
    3. '(other' → logprob: -12.500077247619629
    4. ' ,' → logprob: -12.500077247619629
    5. ' other' → logprob: -12.750077247619629
    6. ')' → logprob: -14.750077247619629
    7. ',
' → logprob: -15.375077247619629
    8. '<|end|>' → logprob: -16.000078201293945
    9. 'Other' → logprob: -16.250078201293945
    10. '.other' → logprob: -17.125078201293945

Token 233: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.006717267446219921
    2. ' other' → logprob: -5.006717205047607
    3. '(other' → logprob: -13.506717681884766
    4. 'self' → logprob: -14.756717681884766
    5. 'Other' → logprob: -16.631717681884766
    6. '.other' → logprob: -17.381717681884766
    7. '_other' → logprob: -17.881717681884766
    8. 'others' → logprob: -19.756717681884766
    9. '   ' → logprob: -20.006717681884766
    10. 'OTHER' → logprob: -20.381717681884766

Token 234: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00032044618274085224
    2. 'y' → logprob: -8.250320434570312
    3. '.' → logprob: -9.875320434570312
    4. ')' → logprob: -12.250320434570312
    5. ',y' → logprob: -13.500320434570312
    6. ',' → logprob: -14.375320434570312
    7. ' y' → logprob: -14.625320434570312
    8. ').' → logprob: -15.875320434570312
    9. '	y' → logprob: -16.250320434570312
    10. ' .' → logprob: -16.625320434570312

Token 235: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.375001907348633
    4. '))' → logprob: -16.625001907348633
    5. '())' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.750001907348633
    7. ')

' → logprob: -18.000001907348633
    8. '}' → logprob: -18.125001907348633
    9. ')#' → logprob: -18.125001907348633
    10. ')return' → logprob: -18.500001907348633

Token 236: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08424638956785202
    2. '   ' → logprob: -2.7092463970184326
    3. '<|end|>' → logprob: -4.5842461585998535
    4. 'class' → logprob: -6.3342461585998535
    5. '@property' → logprob: -7.2092461585998535
    6. ' def' → logprob: -8.084246635437012
    7. ')' → logprob: -8.334246635437012
    8. '#' → logprob: -8.334246635437012
    9. '	def' → logprob: -8.584246635437012
    10. '    
' → logprob: -8.834246635437012

Token 237: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000531467841938138
    2. '   ' → logprob: -8.375531196594238
    3. '@property' → logprob: -8.625531196594238
    4. ' def' → logprob: -9.375531196594238
    5. '#' (adapté à ' #') → logprob: -10.875531196594238
    6. '    
' → logprob: -11.750531196594238
    7. 'class' → logprob: -12.875531196594238
    8. '	def' → logprob: -13.250531196594238
    9. 'import' → logprob: -13.750531196594238
    10. ' ' → logprob: -14.000531196594238

Token 238: ' 原' (ID: 96096)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07117784023284912
    2. ' def' → logprob: -2.8211779594421387
    3. 'abs' → logprob: -5.321177959442139
    4. 'property' → logprob: -6.071177959442139
    5. 'staticmethod' → logprob: -7.196177959442139
    6. '@property' → logprob: -8.32117748260498
    7. 'distance' → logprob: -9.19617748260498
    8. 'classmethod' → logprob: -9.57117748260498
    9. 'repr' → logprob: -9.69617748260498
    10. 'mul' → logprob: -9.69617748260498

Token 239: '点' (ID: 8300)
  Prédit: '点'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.041614118963479996
    2. 'def' → logprob: -3.291614055633545
    3. '   ' → logprob: -6.291614055633545
    4. '文' → logprob: -7.416614055633545
    5. 'doc' → logprob: -8.041614532470703
    6. '因' → logprob: -8.541614532470703
    7. ' def' → logprob: -8.666614532470703
    8. '點' → logprob: -9.291614532470703
    9. '稿' → logprob: -9.416614532470703
    10. '始' → logprob: -9.416614532470703

Token 240: 'から' (ID: 27500)
  Prédit: 'から'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.04044008627533913
    2. 'def' → logprob: -3.415440082550049
    3. 'を' → logprob: -5.790440082550049
    4. 'との' → logprob: -6.290440082550049
    5. 'に' → logprob: -7.665440082550049
    6. 'まで' → logprob: -8.165440559387207
    7. 'distance' → logprob: -8.290440559387207
    8. ',' → logprob: -9.165440559387207
    9. ' def' → logprob: -9.290440559387207
    10. 'の' → logprob: -9.290440559387207

Token 241: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37296345829963684
    2. 'の' → logprob: -1.4979634284973145
    3. '   ' → logprob: -2.9979634284973145
    4. ' def' → logprob: -4.1229634284973145
    5. '#' → logprob: -4.7479634284973145
    6. '距' → logprob: -5.3729634284973145
    7. 'self' → logprob: -5.7479634284973145
    8. 'distance' → logprob: -6.8729634284973145
    9. '点' → logprob: -6.9979634284973145
    10. 'the' → logprob: -7.3729634284973145

Token 242: '距' (ID: 76027)
  Prédit: '距'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '距' → logprob: -0.3168916404247284
    2. 'def' → logprob: -1.4418916702270508
    3. 'distance' → logprob: -3.816891670227051
    4. '長' → logprob: -5.566891670227051
    5. 'length' → logprob: -6.566891670227051
    6. ' def' → logprob: -6.566891670227051
    7. 'r' → logprob: -6.566891670227051
    8. '   ' → logprob: -6.816891670227051
    9. 'ベ' → logprob: -6.941891670227051
    10. '角' → logprob: -7.191891670227051

Token 243: '離' (ID: 112445)
  Prédit: '離'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '離' → logprob: -1.1472419600977446e-06
    2. '离' → logprob: -13.875000953674316
    3. '#' → logprob: -16.500001907348633
    4. '   ' → logprob: -17.875001907348633
    5. '```' → logprob: -17.875001907348633
    6. 'り' → logprob: -18.375001907348633
    7. '点' → logprob: -18.750001907348633
    8. 'r' → logprob: -19.500001907348633
    9. 'def' → logprob: -19.750001907348633
    10. '距' → logprob: -20.375001907348633

Token 244: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025468558073043823
    2. 'def' → logprob: -3.775468587875366
    3. '    
' → logprob: -6.525468349456787
    4. ' def' → logprob: -7.525468349456787
    5. '@property' → logprob: -9.025468826293945
    6. '	def' → logprob: -10.025468826293945
    7. ' ' → logprob: -11.525468826293945
    8. ':' → logprob: -11.775468826293945
    9. '
' → logprob: -12.150468826293945
    10. '  ' → logprob: -12.400468826293945

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004814461339265108
    2. 'def' → logprob: -5.504814624786377
    3. ' def' → logprob: -7.879814624786377
    4. '    
' → logprob: -8.129814147949219
    5. '
' → logprob: -9.879814147949219
    6. '	def' → logprob: -12.004814147949219
    7. '    ' → logprob: -13.754814147949219
    8. ' ' → logprob: -14.004814147949219
    9. '<|end|>' → logprob: -14.004814147949219
    10. '  ' → logprob: -14.129814147949219

Token 246: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1934824138879776
    2. '@property' → logprob: -1.9434823989868164
    3. '   ' → logprob: -3.4434823989868164
    4. ' def' → logprob: -7.193482398986816
    5. ' ' → logprob: -13.193482398986816
    6. '	def' → logprob: -13.693482398986816
    7. '@' → logprob: -13.818482398986816
    8. ' @' → logprob: -13.818482398986816
    9. '
' → logprob: -14.068482398986816
    10. '    
' → logprob: -14.818482398986816

Token 247: ' __' (ID: 2516)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0018466711044312
    2. 'def' → logprob: -1.8768466711044312
    3. 'dist' → logprob: -2.0018467903137207
    4. 'length' → logprob: -2.1268467903137207
    5. 'norm' → logprob: -2.2518467903137207
    6. 'distance' → logprob: -3.0018467903137207
    7. 'r' → logprob: -4.001846790313721
    8. 'len' → logprob: -4.251846790313721
    9. ' length' → logprob: -4.876846790313721
    10. ' def' → logprob: -4.876846790313721

Token 248: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -3.531315314830863e-06
    2. 'pow' → logprob: -13.125003814697266
    3. 'lt' → logprob: -14.875003814697266
    4. 'repr' → logprob: -15.125003814697266
    5. 'float' → logprob: -15.125003814697266
    6. 'mul' → logprob: -15.500003814697266
    7. 'len' → logprob: -16.125003814697266
    8. 'pos' → logprob: -16.375003814697266
    9. 'neg' → logprob: -17.000003814697266
    10. ' abs' → logprob: -17.375003814697266

Token 249: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019491063430905342
    2. '__' → logprob: -6.251949310302734
    3. '(self' → logprob: -11.501949310302734
    4. '__(
' → logprob: -12.001949310302734
    5. '__('' → logprob: -13.001949310302734
    6. '__((' → logprob: -13.501949310302734
    7. '(' → logprob: -14.876949310302734
    8. '__("' → logprob: -15.751949310302734
    9. '__(*' → logprob: -16.376949310302734
    10. '_(' → logprob: -17.251949310302734

Token 250: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.253090865968261e-06
    2. ' self' → logprob: -11.750009536743164
    3. ')' → logprob: -14.375009536743164
    4. '(self' → logprob: -14.375009536743164
    5. '   ' → logprob: -16.375009536743164
    6. ' ' → logprob: -18.125009536743164
    7. '	self' → logprob: -18.375009536743164
    8. '  ' → logprob: -18.375009536743164
    9. 's' → logprob: -18.500009536743164
    10. '
' → logprob: -18.625009536743164

Token 251: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6808763742446899
    2. 'self' → logprob: -1.30587637424469
    3. '):' → logprob: -1.55587637424469
    4. '(self' → logprob: -4.6808762550354
    5. ')' → logprob: -6.6808762550354
    6. '   ' → logprob: -7.8058762550354
    7. '):
' → logprob: -8.305876731872559
    8. ',' → logprob: -8.555876731872559
    9. '):

' → logprob: -8.805876731872559
    10. '       ' → logprob: -9.180876731872559

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03214072436094284
    2. ' return' → logprob: -4.282140731811523
    3. 'return' → logprob: -4.532140731811523
    4. '   ' → logprob: -5.157140731811523
    5. 'import' → logprob: -6.782140731811523
    6. '	return' → logprob: -9.407140731811523
    7. '<|end|>' → logprob: -11.032140731811523
    8. '      ' → logprob: -11.282140731811523
    9. '    ' → logprob: -11.532140731811523
    10. ' ' → logprob: -11.657140731811523

Token 253: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3655250072479248
    2. '(self' → logprob: -1.4905250072479248
    3. '(s' → logprob: -2.740525007247925
    4. ' return' → logprob: -4.990525245666504
    5. ' (' → logprob: -4.990525245666504
    6. 'self' → logprob: -6.865525245666504
    7. 'import' → logprob: -6.990525245666504
    8. 'from' → logprob: -7.740525245666504
    9. '   ' → logprob: -8.615525245666504
    10. '(return' → logprob: -9.740525245666504

Token 254: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007889339700341225
    2. 'self' → logprob: -5.757889270782471
    3. '(s' → logprob: -6.007889270782471
    4. ' (' → logprob: -6.132889270782471
    5. 'import' → logprob: -11.132889747619629
    6. 'cos' → logprob: -11.882889747619629
    7. 'from' → logprob: -12.007889747619629
    8. '(' → logprob: -12.132889747619629
    9. '(c' → logprob: -12.132889747619629
    10. '(x' → logprob: -12.132889747619629

Token 255: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.380904672667384e-05
    2. '(self' → logprob: -10.500033378601074
    3. ' self' → logprob: -12.000033378601074
    4. '	self' → logprob: -17.50003433227539
    5. 'import' → logprob: -18.87503433227539
    6. '(' → logprob: -19.87503433227539
    7. '   ' → logprob: -20.00003433227539
    8. '```' → logprob: -20.25003433227539
    9. '[self' → logprob: -20.62503433227539
    10. 's' → logprob: -20.87503433227539

Token 256: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -4.5491004129871726e-05
    2. 'self' → logprob: -10.500045776367188
    3. '.' → logprob: -11.000045776367188
    4. 'x' → logprob: -13.750045776367188
    5. ' .' → logprob: -15.750045776367188
    6. ' self' → logprob: -17.750045776367188
    7. ').' → logprob: -18.750045776367188
    8. '```' → logprob: -18.750045776367188
    9. 'Self' → logprob: -19.000045776367188
    10. '.self' → logprob: -19.500045776367188

Token 257: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.00022952310973778367
    2. '*self' → logprob: -8.625229835510254
    3. '*' → logprob: -10.500229835510254
    4. ' **' → logprob: -10.875229835510254
    5. 'self' → logprob: -12.625229835510254
    6. '2' → logprob: -16.375228881835938
    7. ')**' → logprob: -16.875228881835938
    8. ' *' → logprob: -17.125228881835938
    9. '```' → logprob: -18.000228881835938
    10. ' self' → logprob: -18.125228881835938

Token 258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5451681974809617e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -15.500015258789062
    4. '(' → logprob: -15.625015258789062
    5. '   ' → logprob: -16.375015258789062
    6. '

' → logprob: -16.875015258789062
    7. '```' → logprob: -17.250015258789062
    8. '.' → logprob: -17.750015258789062
    9. '  ' → logprob: -17.750015258789062
    10. '۲' → logprob: -17.875015258789062

Token 259: '+self' (ID: 195959)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0221555195748806
    2. ' +' → logprob: -4.022155284881592
    3. '+self' → logprob: -5.522155284881592
    4. '+
' → logprob: -16.14715576171875
    5. 'self' → logprob: -16.39715576171875
    6. '＋' → logprob: -17.02215576171875
    7. ' ' → logprob: -17.39715576171875
    8. '   ' → logprob: -18.14715576171875
    9. ' ' → logprob: -18.64715576171875
    10. '0' → logprob: -19.14715576171875

Token 260: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -3.4881879400927573e-05
    2. '.' → logprob: -10.750035285949707
    3. 'y' → logprob: -11.250035285949707
    4. '.x' → logprob: -15.500035285949707
    5. ' .' → logprob: -16.37503433227539
    6. '.
' → logprob: -18.00003433227539
    7. ' y' → logprob: -18.37503433227539
    8. '	y' → logprob: -19.25003433227539
    9. 'self' → logprob: -19.25003433227539
    10. ',y' → logprob: -20.12503433227539

Token 261: '**' (ID: 410)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38716360926628113
    2. '**' → logprob: -1.1371636390686035
    3. ')' → logprob: -9.137163162231445
    4. '.' → logprob: -9.637163162231445
    5. ')**' → logprob: -10.012163162231445
    6. '*' → logprob: -10.387163162231445
    7. ' ' → logprob: -10.637163162231445
    8. ' **' → logprob: -12.012163162231445
    9. '**)' → logprob: -12.262163162231445
    10. '²' → logprob: -12.387163162231445

Token 262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.659005157416686e-05
    2. ' ' → logprob: -9.625066757202148
    3. '
' → logprob: -15.500066757202148
    4. '**' → logprob: -16.62506675720215
    5. '   ' → logprob: -16.75006675720215
    6. '```' → logprob: -16.75006675720215
    7. '1' → logprob: -17.25006675720215
    8. '{' → logprob: -17.25006675720215
    9. ')' → logprob: -17.56256675720215
    10. '  ' → logprob: -17.93756675720215

Token 263: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.029753616079688072
    2. ')' → logprob: -3.5297536849975586
    3. '**' → logprob: -13.154753684997559
    4. ' )' → logprob: -14.279753684997559
    5. '   ' → logprob: -15.529753684997559
    6. '**)' → logprob: -16.279752731323242
    7. ' ' → logprob: -16.654752731323242
    8. ')^' → logprob: -16.779752731323242
    9. '）' → logprob: -17.154752731323242
    10. ' ' → logprob: -17.279752731323242

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.537868779967539e-06
    2. '.' → logprob: -12.250008583068848
    3. '(' → logprob: -12.625008583068848
    4. ' ' → logprob: -14.750008583068848
    5. '{' → logprob: -20.12500762939453
    6. '   ' → logprob: -20.62500762939453
    7. '05' → logprob: -20.87500762939453
    8. '2' → logprob: -21.00000762939453
    9. '-' → logprob: -21.12500762939453
    10. '۰' → logprob: -21.12500762939453

Token 265: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.810037742368877e-05
    2. '0' → logprob: -10.250038146972656
    3. '-' → logprob: -13.875038146972656
    4. '5' → logprob: -14.000038146972656
    5. '1' → logprob: -14.250038146972656
    6. '```' → logprob: -16.125038146972656
    7. '2' → logprob: -16.250038146972656
    8. '3' → logprob: -17.125038146972656
    9. '.-' → logprob: -17.625038146972656
    10. '6' → logprob: -18.250038146972656

Token 266: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. 'five' → logprob: -17.375
    3. 'half' → logprob: -18.125
    4. '05' → logprob: -18.25
    5. '0' → logprob: -18.375
    6. '.' → logprob: -18.625
    7. '５' → logprob: -18.75
    8. '```' → logprob: -19.0
    9. '4' → logprob: -19.75
    10. 'value' → logprob: -19.8125

Token 267: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1604383885860443
    2. '   ' → logprob: -1.9104384183883667
    3. ' def' → logprob: -8.535438537597656
    4. '	def' → logprob: -12.035438537597656
    5. '@property' → logprob: -12.285438537597656
    6. '#' → logprob: -12.535438537597656
    7. '    
' → logprob: -13.410438537597656
    8. ' ' → logprob: -13.535438537597656
    9. '  ' → logprob: -15.035438537597656
    10. ')' → logprob: -15.535438537597656

Token 269: ' 原' (ID: 96096)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18902695178985596
    2. ' def' → logprob: -2.0640268325805664
    3. '   ' → logprob: -3.3140268325805664
    4. 'class' → logprob: -5.689026832580566
    5. ' ' → logprob: -6.314026832580566
    6. '#' → logprob: -7.064026832580566
    7. '<|end|>' → logprob: -7.439026832580566
    8. '0' → logprob: -7.939026832580566
    9. ' #' → logprob: -8.189026832580566
    10. '    ' → logprob: -8.439026832580566

Token 270: '点' (ID: 8300)
  Prédit: '点'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '点' → logprob: -0.0010490043787285686
    2. 'def' → logprob: -6.876049041748047
    3. 'point' → logprob: -11.876049041748047
    4. '點' → logprob: -12.751049041748047
    5. '#' → logprob: -13.251049041748047
    6. '_point' → logprob: -13.376049041748047
    7. 'Point' → logprob: -14.251049041748047
    8. '   ' → logprob: -14.751049041748047
    9. 'origin' → logprob: -15.251049041748047
    10. '점' → logprob: -15.376049041748047

Token 271: 'を' (ID: 7277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6822435259819031
    2. ')' → logprob: -0.9322435259819031
    3. '(' → logprob: -3.057243585586548
    4. 'class' → logprob: -4.182243347167969
    5. '()' → logprob: -4.307243347167969
    6. '<|end|>' → logprob: -4.682243347167969
    7. 'から' → logprob: -5.807243347167969
    8. '0' → logprob: -5.932243347167969
    9. '#' → logprob: -6.057243347167969
    10. 'from' → logprob: -6.307243347167969

Token 272: '中心' (ID: 25847)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.6862651109695435
    2. '中心' → logprob: -0.8112651109695435
    3. 'center' → logprob: -3.061264991760254
    4. '基' → logprob: -6.436264991760254
    5. ' Point' → logprob: -6.686264991760254
    6. 'Center' → logprob: -7.436264991760254
    7. '(Point' → logprob: -7.686264991760254
    8. 'def' → logprob: -7.811264991760254
    9. '原' → logprob: -8.811264991760254
    10. 'cent' → logprob: -8.936264991760254

Token 273: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.3108537197113037
    2. 'の' → logprob: -1.8108537197113037
    3. 'と' → logprob: -2.6858537197113037
    4. 'として' → logprob: -4.560853958129883
    5. '#' → logprob: -4.685853958129883
    6. 'def' → logprob: -5.060853958129883
    7. ',' → logprob: -6.060853958129883
    8. 'class' → logprob: -6.185853958129883
    9. 'of' → logprob: -6.310853958129883
    10. 'で' → logprob: -6.685853958129883

Token 274: 'rad' (ID: 19027)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03592719882726669
    2. ' def' → logprob: -3.6609272956848145
    3. '   ' → logprob: -4.6609272956848145
    4. '	def' → logprob: -9.660926818847656
    5. 'class' → logprob: -10.160926818847656
    6. ' ' → logprob: -11.535926818847656
    7. '  ' → logprob: -12.660926818847656
    8. '#' → logprob: -12.660926818847656
    9. ')' → logprob: -13.660926818847656
    10. '
' → logprob: -13.785926818847656

Token 275: '角' (ID: 36205)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07356119155883789
    2. ' def' → logprob: -3.323561191558838
    3. ')' → logprob: -3.823561191558838
    4. '   ' → logprob: -5.198561191558838
    5. '):' → logprob: -5.948561191558838
    6. ',' → logprob: -6.823561191558838
    7. '(' → logprob: -7.323561191558838
    8. '旋' → logprob: -7.323561191558838
    9. 'を' → logprob: -8.44856071472168
    10. ' ' → logprob: -8.57356071472168

Token 276: 'だけ' (ID: 121885)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013085057958960533
    2. '度' → logprob: -4.388084888458252
    3. ' def' → logprob: -8.13808536529541
    4. 'の' → logprob: -8.76308536529541
    5. 'を' → logprob: -10.01308536529541
    6. ',' → logprob: -10.26308536529541
    7. 'で' → logprob: -10.63808536529541
    8. 'に' → logprob: -12.26308536529541
    9. '回' → logprob: -12.63808536529541
    10. '   ' → logprob: -12.76308536529541

Token 277: '回' (ID: 10154)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.056106679141521454
    2. '回' → logprob: -3.1811065673828125
    3. ' def' → logprob: -4.4311065673828125
    4. '   ' → logprob: -7.3061065673828125
    5. 'rotate' → logprob: -7.9311065673828125
    6. ' 回' → logprob: -10.431106567382812
    7. ' rotate' → logprob: -10.931106567382812
    8. 'rot' → logprob: -11.181106567382812
    9. '旋' → logprob: -12.306106567382812
    10. '#' → logprob: -12.556106567382812

Token 278: '転' (ID: 63850)
  Prédit: '転'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '転' → logprob: -0.0001951961312443018
    2. 'す' → logprob: -8.750195503234863
    3. 'る' → logprob: -10.750195503234863
    4. 'def' → logprob: -12.375195503234863
    5. '旋' → logprob: -12.375195503234863
    6. '```' → logprob: -13.625195503234863
    7. 'rotate' → logprob: -13.875195503234863
    8. '转' → logprob: -13.875195503234863
    9. '轉' → logprob: -13.875195503234863
    10. ')' → logprob: -15.125195503234863

Token 279: 'した' (ID: 23085)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00035906085395254195
    2. '   ' → logprob: -8.250359535217285
    3. ' def' → logprob: -9.250359535217285
    4. '	def' → logprob: -13.750359535217285
    5. '(' → logprob: -15.125359535217285
    6. '(def' → logprob: -16.12535858154297
    7. ' ' → logprob: -16.87535858154297
    8. '
' → logprob: -17.12535858154297
    9. ':def' → logprob: -17.25035858154297
    10. '    
' → logprob: -18.25035858154297

Token 280: '点' (ID: 8300)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03634699061512947
    2. ' def' → logprob: -4.036346912384033
    3. '   ' → logprob: -5.036346912384033
    4. 'Point' → logprob: -5.161346912384033
    5. ' point' → logprob: -6.411346912384033
    6. '_point' → logprob: -6.661346912384033
    7. ' Point' → logprob: -6.661346912384033
    8. '点' → logprob: -7.161346912384033
    9. 'point' → logprob: -8.161347389221191
    10. '(Point' → logprob: -9.036347389221191

Token 281: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01285595167428255
    2. '   ' → logprob: -4.3878560066223145
    3. ' def' → logprob: -8.262855529785156
    4. '	def' → logprob: -9.887855529785156
    5. ':def' → logprob: -11.637855529785156
    6. '
' → logprob: -11.887855529785156
    7. ':' → logprob: -12.012855529785156
    8. '    
' → logprob: -12.137855529785156
    9. '(' → logprob: -12.262855529785156
    10. '(def' → logprob: -12.637855529785156

Token 282: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00016587569552939385
    2. '   ' → logprob: -8.750165939331055
    3. ' def' → logprob: -11.875165939331055
    4. '	def' → logprob: -14.625165939331055
    5. '
' → logprob: -17.750165939331055
    6. '    
' → logprob: -18.250165939331055
    7. ' ' → logprob: -19.125165939331055
    8. ':def' → logprob: -19.875165939331055
    9. 'ndef' → logprob: -21.000165939331055
    10. '_def' → logprob: -21.000165939331055

Token 283: ' Rotation' (ID: 98033)
  Prédit: 'rotate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rotate' → logprob: -0.026635000482201576
    2. 'rot' → logprob: -4.40163516998291
    3. ' rotate' → logprob: -4.40163516998291
    4. 'rotation' → logprob: -6.90163516998291
    5. 'point' → logprob: -8.02663516998291
    6. ' rotated' → logprob: -9.02663516998291
    7. 'Point' → logprob: -9.65163516998291
    8. 'polar' → logprob: -9.90163516998291
    9. 'Rotate' → logprob: -10.52663516998291
    10. 'ro' → logprob: -10.65163516998291

Token 284: '(vec' (ID: 57650)
  Prédit: '(point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.1378391534090042
    2. '(p' → logprob: -2.1378390789031982
    3. '(Point' → logprob: -4.762839317321777
    4. '(P' → logprob: -6.512839317321777
    5. '(pt' → logprob: -7.512839317321777
    6. ' (' → logprob: -8.762839317321777
    7. '(center' → logprob: -10.012839317321777
    8. '(origin' → logprob: -10.262839317321777
    9. '(' → logprob: -10.762839317321777
    10. '(points' → logprob: -11.762839317321777

Token 285: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.958325295476243e-05
    2. 'a' → logprob: -11.000079154968262
    3. ':' → logprob: -11.000079154968262
    4. 'tor' → logprob: -11.000079154968262
    5. ' ,' → logprob: -11.875079154968262
    6. 'o' → logprob: -12.250079154968262
    7. 'ation' → logprob: -12.500079154968262
    8. '_,' → logprob: -13.000079154968262
    9. ':,' → logprob: -13.375079154968262
    10. '(Point' → logprob: -13.375079154968262

Token 286: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.011053833179175854
    2. ' Point' → logprob: -4.511054039001465
    3. '   ' → logprob: -12.261054039001465
    4. '	Point' → logprob: -14.386054039001465
    5. ' ' → logprob: -15.261054039001465
    6. ',' → logprob: -15.636054039001465
    7. '(Point' → logprob: -15.886054039001465
    8. '_Point' → logprob: -17.01105308532715
    9. ')' → logprob: -17.13605308532715
    10. 'Vector' → logprob: -17.26105308532715

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '‌,' → logprob: -16.12506675720215
    4. '   ' → logprob: -16.50006675720215
    5. ',
' → logprob: -17.00006675720215
    6. ')' → logprob: -17.75006675720215
    7. '，' → logprob: -17.87506675720215
    8. '),' → logprob: -18.12506675720215
    9. 'def' → logprob: -18.37506675720215
    10. ',r' → logprob: -18.87506675720215

Token 288: ' rad' (ID: 9920)
  Prédit: 'rad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rad' → logprob: -0.4741450846195221
    2. ' rad' → logprob: -0.9741450548171997
    3. '   ' → logprob: -10.47414493560791
    4. ' radians' → logprob: -11.09914493560791
    5. 'angle' → logprob: -12.09914493560791
    6. ' ' → logprob: -12.22414493560791
    7. 'r' → logprob: -12.47414493560791
    8. '(rad' → logprob: -12.84914493560791
    9. ')' → logprob: -13.47414493560791
    10. '_rad' → logprob: -13.47414493560791

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020706430077552795
    2. ')' → logprob: -3.8957064151763916
    3. '):
' → logprob: -9.145706176757812
    4. ')->' → logprob: -10.145706176757812
    5. ':' → logprob: -11.395706176757812
    6. ' ):' → logprob: -12.520706176757812
    7. '):
' → logprob: -13.645706176757812
    8. ')：' → logprob: -13.895706176757812
    9. ')):' → logprob: -15.020706176757812
    10. '):

' → logprob: -15.145706176757812

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004574192222207785
    2. ':' → logprob: -6.129574298858643
    3. '):' → logprob: -6.254574298858643
    4. '):
' → logprob: -8.879573822021484
    5. ')' → logprob: -9.254573822021484
    6. '    
' → logprob: -9.504573822021484
    7. '  ' → logprob: -10.379573822021484
    8. ' return' → logprob: -10.754573822021484
    9. ',' → logprob: -11.004573822021484
    10. ':return' → logprob: -11.004573822021484

Token 291: ' return' (ID: 622)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3217829763889313
    2. 'return' (adapté à ' return') → logprob: -1.4467829465866089
    3. 'cos' → logprob: -3.3217830657958984
    4. '   ' → logprob: -5.946783065795898
    5. 'vec' → logprob: -7.571783065795898
    6. 'x' → logprob: -8.446783065795898
    7. ' Point' → logprob: -8.946783065795898
    8. ' return' → logprob: -9.446783065795898
    9. 'new' → logprob: -10.071783065795898
    10. 'point' → logprob: -10.696783065795898

Token 292: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00032998246024362743
    2. ' Point' → logprob: -8.125329971313477
    3. '   ' → logprob: -10.625329971313477
    4. '	Point' → logprob: -12.250329971313477
    5. 'vec' → logprob: -12.625329971313477
    6. '  ' → logprob: -14.125329971313477
    7. '(Point' → logprob: -14.875329971313477
    8. 'Vec' → logprob: -15.750329971313477
    9. ' ' → logprob: -16.375329971313477
    10. '    ' → logprob: -17.125329971313477

Token 293: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.05149063840508461
    2. '(
' → logprob: -3.301490545272827
    3. '(c' → logprob: -5.051490783691406
    4. '(' → logprob: -5.051490783691406
    5. 'vec' → logprob: -7.551490783691406
    6. '(

' → logprob: -11.051490783691406
    7. 'cos' → logprob: -11.926490783691406
    8. '(s' → logprob: -12.051490783691406
    9. '(round' → logprob: -13.551490783691406
    10. '	vec' → logprob: -13.551490783691406

Token 294: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0030233447905629873
    2. '.cos' → logprob: -5.878023147583008
    3. '.' → logprob: -8.753023147583008
    4. ' .' → logprob: -10.878023147583008
    5. 'cos' → logprob: -11.003023147583008
    6. ').' → logprob: -11.378023147583008
    7. 'x' → logprob: -13.128023147583008
    8. '*cos' → logprob: -13.253023147583008
    9. '
' → logprob: -13.378023147583008
    10. '.rad' → logprob: -13.503023147583008

Token 295: '*cos' (ID: 147136)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6932796239852905
    2. '*cos' → logprob: -0.6932796239852905
    3. ' *' → logprob: -9.193279266357422
    4. 'cos' → logprob: -10.443279266357422
    5. '*c' → logprob: -13.693279266357422
    6. ' cos' → logprob: -15.193279266357422
    7. '*np' → logprob: -16.318279266357422
    8. '**' → logprob: -16.443279266357422
    9. '*sin' → logprob: -16.818279266357422
    10. '*Math' → logprob: -17.318279266357422

Token 296: '(rad' (ID: 186247)
  Prédit: '(rad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rad' → logprob: -0.0008003382245078683
    2. '(' → logprob: -7.500800132751465
    3. 'rad' → logprob: -8.375800132751465
    4. ' (' → logprob: -11.750800132751465
    5. ' rad' → logprob: -12.375800132751465
    6. '(
' → logprob: -12.500800132751465
    7. '(ray' → logprob: -14.750800132751465
    8. ')' → logprob: -14.875800132751465
    9. '_rad' → logprob: -16.25080108642578
    10. '(rot' → logprob: -16.75080108642578

Token 297: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006346796173602343
    2. ')-' → logprob: -5.381346702575684
    3. ' )' → logprob: -6.381346702575684
    4. '),' → logprob: -11.631346702575684
    5. '-)' → logprob: -12.006346702575684
    6. '   ' → logprob: -12.256346702575684
    7. ')+' → logprob: -13.006346702575684
    8. ')
' → logprob: -13.131346702575684
    9. ' ' → logprob: -13.506346702575684
    10. ' rad' → logprob: -14.006346702575684

Token 298: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -6.392202976712724e-06
    2. ' vec' → logprob: -12.000006675720215
    3. '	vec' → logprob: -15.625006675720215
    4. 've' → logprob: -17.3750057220459
    5. '(vec' → logprob: -17.5000057220459
    6. 'sin' → logprob: -18.1250057220459
    7. '   ' → logprob: -20.7500057220459
    8. 'vector' → logprob: -22.3750057220459
    9. '.vec' → logprob: -23.1250057220459
    10. '```' → logprob: -23.1250057220459

Token 299: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -4.2987729102605954e-05
    2. 'y' → logprob: -10.625042915344238
    3. '.' → logprob: -11.250042915344238
    4. '.x' → logprob: -12.375042915344238
    5. 'vec' → logprob: -14.375042915344238
    6. ' .' → logprob: -14.750042915344238
    7. 'sin' → logprob: -16.000043869018555
    8. ' ' → logprob: -16.750043869018555
    9. ' y' → logprob: -16.875043869018555
    10. '.sin' → logprob: -17.125043869018555

Token 300: '*sin' (ID: 136169)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.0003370118502061814
    2. '*sin' → logprob: -8.250336647033691
    3. ' sin' → logprob: -9.500336647033691
    4. '.sin' → logprob: -14.875336647033691
    5. '(s' → logprob: -15.500336647033691
    6. '(rad' → logprob: -15.625336647033691
    7. '(' → logprob: -16.250337600708008
    8. ')' → logprob: -17.125337600708008
    9. 'rad' → logprob: -17.375337600708008
    10. '*' → logprob: -19.000337600708008

Token 301: '(rad' (ID: 186247)
  Prédit: '(rad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rad' → logprob: -0.00010115911572938785
    2. 'rad' → logprob: -9.250101089477539
    3. '(' → logprob: -12.625101089477539
    4. ' rad' → logprob: -13.500101089477539
    5. ')' → logprob: -16.75010108947754
    6. ' (' → logprob: -16.75010108947754
    7. '(ray' → logprob: -17.00010108947754
    8. '(
' → logprob: -17.12510108947754
    9. '(rd' → logprob: -17.50010108947754
    10. '(red' → logprob: -17.87510108947754

Token 302: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.18615396320819855
    2. ',' → logprob: -1.9361540079116821
    3. ')' → logprob: -3.6861538887023926
    4. '))' → logprob: -7.686153888702393
    5. ' ),' → logprob: -10.43615436553955
    6. ' ,' → logprob: -11.18615436553955
    7. ')),' → logprob: -12.18615436553955
    8. '),
' → logprob: -12.18615436553955
    9. '   ' → logprob: -12.31115436553955
    10. ' ' → logprob: -13.06115436553955

Token 303: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.005236479919403791
    2. ' vec' → logprob: -5.255236625671387
    3. '	vec' → logprob: -13.130236625671387
    4. '   ' → logprob: -14.755236625671387
    5. 've' → logprob: -16.00523567199707
    6. '(vec' → logprob: -16.38023567199707
    7. ' ' → logprob: -18.00523567199707
    8. '    ' → logprob: -18.13023567199707
    9. '       ' → logprob: -18.25523567199707
    10. 'vector' → logprob: -18.75523567199707

Token 304: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.6060808522743173e-05
    2. '.y' → logprob: -10.625025749206543
    3. '.' → logprob: -13.625025749206543
    4. 'x' → logprob: -15.750025749206543
    5. ' .' → logprob: -16.00002670288086
    6. 'vec' → logprob: -16.37502670288086
    7. '[' → logprob: -16.75002670288086
    8. '```' → logprob: -16.87502670288086
    9. '1' → logprob: -17.75002670288086
    10. '
' → logprob: -18.00002670288086

Token 305: '*sin' (ID: 136169)
  Prédit: 'sin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sin' → logprob: -0.20145630836486816
    2. '*sin' → logprob: -1.7014563083648682
    3. '*cos' → logprob: -11.076456069946289
    4. 'cos' → logprob: -11.326456069946289
    5. ' sin' → logprob: -11.826456069946289
    6. '.sin' → logprob: -12.451456069946289
    7. '*' → logprob: -12.451456069946289
    8. ')' → logprob: -15.576456069946289
    9. '*pi' → logprob: -16.20145606994629
    10. ' *' → logprob: -16.95145606994629

Token 306: '(rad' (ID: 186247)
  Prédit: '(rad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rad' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.750008583068848
    3. 'rad' → logprob: -12.875008583068848
    4. ' rad' → logprob: -13.000008583068848
    5. '(ray' → logprob: -15.625008583068848
    6. '(
' → logprob: -15.750008583068848
    7. '(red' → logprob: -16.37500762939453
    8. '(rot' → logprob: -17.00000762939453
    9. ' (' → logprob: -17.12500762939453
    10. '.rad' → logprob: -17.62500762939453

Token 307: ')+' (ID: 16161)
  Prédit: 'rad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rad' → logprob: -0.3077181279659271
    2. '(rad' → logprob: -1.8077181577682495
    3. ' rad' → logprob: -2.55771803855896
    4. ')' → logprob: -4.682718276977539
    5. '*' → logprob: -4.807718276977539
    6. '),' → logprob: -5.682718276977539
    7. ',' → logprob: -6.432718276977539
    8. '.rad' → logprob: -7.432718276977539
    9. '_rad' → logprob: -8.307718276977539
    10. ')+' → logprob: -10.432718276977539

Token 308: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.00012570773833431304
    2. 'cos' → logprob: -9.000125885009766
    3. ' vec' → logprob: -13.125125885009766
    4. '	vec' → logprob: -16.250125885009766
    5. '(vec' → logprob: -17.000125885009766
    6. ' cos' → logprob: -17.875125885009766
    7. 've' → logprob: -19.750125885009766
    8. 'vector' → logprob: -20.125125885009766
    9. 'vect' → logprob: -20.125125885009766
    10. '_vec' → logprob: -20.625125885009766

Token 309: '.y' (ID: 4486)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.08944549411535263
    2. 'rad' → logprob: -2.9644455909729004
    3. '(rad' → logprob: -3.4644455909729004
    4. ' rad' → logprob: -6.2144455909729
    5. '.cos' → logprob: -8.589445114135742
    6. ' cos' → logprob: -8.714445114135742
    7. '.rad' → logprob: -9.089445114135742
    8. '*cos' → logprob: -9.339445114135742
    9. 'vec' → logprob: -9.589445114135742
    10. '(vec' → logprob: -10.839445114135742

Token 310: '*cos' (ID: 147136)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.00032151900813914835
    2. '*cos' → logprob: -8.375321388244629
    3. ' cos' → logprob: -9.500321388244629
    4. '(rad' → logprob: -11.500321388244629
    5. '(c' → logprob: -12.750321388244629
    6. 'rad' → logprob: -13.500321388244629
    7. '.cos' → logprob: -13.625321388244629
    8. '_cos' → logprob: -14.625321388244629
    9. ')' → logprob: -17.125322341918945
    10. 'cost' → logprob: -17.875322341918945

Token 311: '(rad' (ID: 186247)
  Prédit: '(rad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rad' → logprob: -0.00016206118743866682
    2. 'rad' → logprob: -8.750162124633789
    3. ' rad' → logprob: -13.250162124633789
    4. '(' → logprob: -13.750162124633789
    5. '(rot' → logprob: -15.250162124633789
    6. ')' → logprob: -15.875162124633789
    7. '(ray' → logprob: -16.25016212463379
    8. '_rad' → logprob: -16.50016212463379
    9. '.rad' → logprob: -17.00016212463379
    10. '(
' → logprob: -17.25016212463379

Token 312: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.17875951528549194
    2. 'rad' → logprob: -2.4287595748901367
    3. ')' → logprob: -2.6787595748901367
    4. '(rad' → logprob: -5.053759574890137
    5. ' rad' → logprob: -7.678759574890137
    6. ')))' → logprob: -11.428759574890137
    7. '_rad' → logprob: -11.553759574890137
    8. '),' → logprob: -12.053759574890137
    9. '(' → logprob: -12.053759574890137
    10. '.rad' → logprob: -12.678759574890137

Token 313: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0909806489944458
    2. 'class' → logprob: -2.9659805297851562
    3. '#' → logprob: -3.3409805297851562
    4. 'from' → logprob: -10.965980529785156
    5. '
' → logprob: -11.590980529785156
    6. 'import' → logprob: -11.590980529785156
    7. ' def' → logprob: -12.090980529785156
    8. 'Explain' → logprob: -13.590980529785156
    9. ')' → logprob: -13.840980529785156
    10. ' class' → logprob: -13.965980529785156

Token 314: ' Circle' (ID: 33361)
  Prédit: ' Circle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Circle' → logprob: -0.7009822726249695
    2. ' Polygon' → logprob: -1.8259823322296143
    3. ' Vector' → logprob: -2.3259823322296143
    4. ' Line' → logprob: -2.8259823322296143
    5. ' Segment' → logprob: -2.8259823322296143
    6. 'Circle' → logprob: -3.2009823322296143
    7. ' Point' → logprob: -3.9509823322296143
    8. 'Polygon' → logprob: -4.075982093811035
    9. 'Vector' → logprob: -4.075982093811035
    10. 'Segment' → logprob: -4.450982093811035

Token 315: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6941450238227844
    2. '():' → logprob: -0.6941450238227844
    3. '):' → logprob: -7.069145202636719
    4. '(object' → logprob: -9.319145202636719
    5. ' :' → logprob: -10.944145202636719
    6. '():
' → logprob: -11.444145202636719
    7. ':
' → logprob: -11.444145202636719
    8. ' ():' → logprob: -11.819145202636719
    9. '>:' → logprob: -12.194145202636719
    10. '}:' → logprob: -13.944145202636719

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02642778679728508
    2. 'def' → logprob: -3.901427745819092
    3. ' def' → logprob: -5.151427745819092
    4. '	def' → logprob: -10.15142822265625
    5. '  ' → logprob: -10.90142822265625
    6. '    
' → logprob: -11.77642822265625
    7. ':' → logprob: -12.77642822265625
    8. ' ' → logprob: -13.02642822265625
    9. ':def' → logprob: -13.52642822265625
    10. '
' → logprob: -13.52642822265625

Token 317: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12711593508720398
    2. ' def' → logprob: -2.1271159648895264
    3. '   ' → logprob: -8.752116203308105
    4. '__' → logprob: -10.877116203308105
    5. '	def' → logprob: -12.127116203308105
    6. ' __' → logprob: -13.377116203308105
    7. 'class' → logprob: -13.502116203308105
    8. ':def' → logprob: -14.127116203308105
    9. ' ' → logprob: -14.502116203308105
    10. '
' → logprob: -15.377116203308105

Token 318: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2738838195800781
    2. ' __' → logprob: -1.5238838195800781
    3. 'init' → logprob: -4.023883819580078
    4. 'def' → logprob: -6.273883819580078
    5. '_init' → logprob: -6.523883819580078
    6. ' def' → logprob: -7.773883819580078
    7. ' init' → logprob: -10.398883819580078
    8. '___' → logprob: -10.898883819580078
    9. '_' → logprob: -12.773883819580078
    10. '__(' → logprob: -13.273883819580078

Token 319: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.45848218582978e-06
    2. 'def' → logprob: -13.12500286102295
    3. 'int' → logprob: -16.250001907348633
    4. ' init' → logprob: -16.500001907348633
    5. 'class' → logprob: -16.500001907348633
    6. 'ini' → logprob: -17.250001907348633
    7. 'in' → logprob: -17.250001907348633
    8. '_init' → logprob: -18.000001907348633
    9. 'mul' → logprob: -18.750001907348633
    10. '```' → logprob: -19.000001907348633

Token 320: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.002196763874962926
    2. '(self' → logprob: -6.127196788787842
    3. '_(' → logprob: -12.127196311950684
    4. '(' → logprob: -13.127196311950684
    5. '__(
' → logprob: -13.127196311950684
    6. '__' → logprob: -13.252196311950684
    7. 'self' → logprob: -15.252196311950684
    8. '__((' → logprob: -16.377197265625
    9. '<>(' → logprob: -17.002197265625
    10. ' (' → logprob: -17.377197265625

Token 321: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0325924449716695e-05
    2. ' self' → logprob: -11.50001049041748
    3. '(self' → logprob: -16.750009536743164
    4. ',' → logprob: -17.500009536743164
    5. '0' → logprob: -18.500009536743164
    6. 'def' → logprob: -18.875009536743164
    7. 's' → logprob: -20.375009536743164
    8. 'x' → logprob: -21.125009536743164
    9. '	self' → logprob: -21.125009536743164
    10. ',self' → logprob: -21.250009536743164

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04034299775958061
    2. 'self' → logprob: -3.7903430461883545
    3. '(self' → logprob: -4.165342807769775
    4. '__(' → logprob: -7.040342807769775
    5. ' ,' → logprob: -8.665343284606934
    6. ',self' → logprob: -8.915343284606934
    7. ' self' → logprob: -9.165343284606934
    8. '__,' → logprob: -9.290343284606934
    9. ' (' → logprob: -10.665343284606934
    10. '(' → logprob: -11.540343284606934

Token 323: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7849583029747009
    2. 'center' → logprob: -1.5349583625793457
    3. 'o' → logprob: -2.2849583625793457
    4. ' center' → logprob: -2.4099583625793457
    5. 'Point' → logprob: -2.9099583625793457
    6. ' Point' → logprob: -3.7849583625793457
    7. ' o' → logprob: -4.159958362579346
    8. ' self' → logprob: -4.159958362579346
    9. 'c' → logprob: -4.409958362579346
    10. 'x' → logprob: -5.159958362579346

Token 324: ',' (ID: 11)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.5722147822380066
    2. ',' → logprob: -0.9472147822380066
    3. ':' → logprob: -3.0722148418426514
    4. 'oints' → logprob: -8.32221508026123
    5. 'center' → logprob: -8.69721508026123
    6. '   ' → logprob: -8.69721508026123
    7. '(Point' → logprob: -8.69721508026123
    8. 'osition' → logprob: -8.94721508026123
    9. '0' → logprob: -9.32221508026123
    10. '1' → logprob: -9.69721508026123

Token 325: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009377855458296835
    2. ' r' → logprob: -7.0009379386901855
    3. 'radius' → logprob: -10.625937461853027
    4. '	r' → logprob: -14.000937461853027
    5. ' radius' → logprob: -14.750937461853027
    6. 'rad' → logprob: -15.125937461853027
    7. 'R' → logprob: -15.375937461853027
    8. '   ' → logprob: -15.875937461853027
    9. 'rr' → logprob: -16.750938415527344
    10. ' ' → logprob: -16.875938415527344

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021536540240049362
    2. '):
' → logprob: -3.8965365886688232
    3. ',' → logprob: -7.021536350250244
    4. ')' → logprob: -10.396536827087402
    5. ':' → logprob: -10.771536827087402
    6. '):
' → logprob: -10.771536827087402
    7. ' ):' → logprob: -11.146536827087402
    8. '   ' → logprob: -12.521536827087402
    9. '=' → logprob: -12.771536827087402
    10. '<|end|>' → logprob: -12.896536827087402

Token 327: '       ' (ID: 309)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20577339828014374
    2. ' r' → logprob: -1.7057733535766602
    3. '       ' → logprob: -5.45577335357666
    4. '   ' → logprob: -9.83077335357666
    5. '	r' → logprob: -11.58077335357666
    6. ':' → logprob: -12.58077335357666
    7. ',' → logprob: -12.83077335357666
    8. ' ' → logprob: -12.95577335357666
    9. ' self' → logprob: -13.58077335357666
    10. '):
' → logprob: -13.58077335357666

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023708932101726532
    2. ' self' → logprob: -3.7737088203430176
    3. 'p' → logprob: -8.023709297180176
    4. '       ' → logprob: -9.023709297180176
    5. ' p' → logprob: -11.148709297180176
    6. '   ' → logprob: -14.398709297180176
    7. '	self' → logprob: -15.148709297180176
    8. ' ' → logprob: -19.52370834350586
    9. '     ' → logprob: -19.52370834350586
    10. '      ' → logprob: -20.52370834350586

Token 329: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.2036527693271637
    2. '.' → logprob: -1.8286527395248413
    3. '=' → logprob: -4.203652858734131
    4. 'p' → logprob: -5.453652858734131
    5. ' =' → logprob: -5.578652858734131
    6. '=p' → logprob: -7.703652858734131
    7. ' .' → logprob: -9.828652381896973
    8. ':' → logprob: -10.578652381896973
    9. '.x' → logprob: -10.953652381896973
    10. '.=' → logprob: -11.328652381896973

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023296605795621872
    2. ' =' → logprob: -3.773296594619751
    3. '=p' → logprob: -9.898296356201172
    4. ',' → logprob: -15.273296356201172
    5. '<|end|>' → logprob: -15.648296356201172
    6. 'p' → logprob: -15.773296356201172
    7. ')' → logprob: -16.148296356201172
    8. ' p' → logprob: -16.273296356201172
    9. '=
' → logprob: -17.273296356201172
    10. '.' → logprob: -17.398296356201172

Token 331: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.038045283406972885
    2. ' p' → logprob: -3.2880451679229736
    3. 'Point' → logprob: -12.538044929504395
    4. ' Point' → logprob: -15.288044929504395
    5. '	p' → logprob: -16.41304588317871
    6. 'point' → logprob: -18.28804588317871
    7. '_p' → logprob: -19.28804588317871
    8. '	Point' → logprob: -19.41304588317871
    9. '<p' → logprob: -19.53804588317871
    10. ' point' → logprob: -19.53804588317871

Token 332: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6844947934150696
    2. 'r' → logprob: -0.8094947934150696
    3. ' r' → logprob: -3.309494733810425
    4. '
' → logprob: -5.059494972229004
    5. '<|end|>' → logprob: -5.684494972229004
    6. ' ' → logprob: -6.934494972229004
    7. ',' → logprob: -7.184494972229004
    8. 'self' → logprob: -7.309494972229004
    9. '   ' → logprob: -7.434494972229004
    10. ' =' → logprob: -7.809494972229004

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03550504148006439
    2. 'self' → logprob: -3.5355050563812256
    3. ' self' → logprob: -5.2855048179626465
    4. 'r' → logprob: -7.4105048179626465
    5. ' r' → logprob: -10.910505294799805
    6. '   ' → logprob: -11.035505294799805
    7. ' ' → logprob: -11.785505294799805
    8. '<|end|>' → logprob: -12.035505294799805
    9. '
' → logprob: -12.535505294799805
    10. '	self' → logprob: -12.660505294799805

Token 334: ' self' (ID: 1051)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.65101717156358e-05
    2. ' r' → logprob: -9.250096321105957
    3. '       ' → logprob: -15.750096321105957
    4. '   ' → logprob: -16.125097274780273
    5. 'float' → logprob: -16.375097274780273
    6. 'self' (adapté à ' self') → logprob: -16.750097274780273
    7. '	r' → logprob: -18.375097274780273
    8. 'abs' → logprob: -18.625097274780273
    9. '
' → logprob: -19.250097274780273
    10. ' ' → logprob: -20.750097274780273

Token 335: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.16543683409690857
    2. 'r' → logprob: -1.915436863899231
    3. '.' → logprob: -5.540436744689941
    4. ' r' → logprob: -6.790436744689941
    5. '=r' → logprob: -9.915436744689941
    6. '.radius' → logprob: -10.040436744689941
    7. ' =' → logprob: -11.665436744689941
    8. '=' → logprob: -11.665436744689941
    9. ' .' → logprob: -11.915436744689941
    10. '	r' → logprob: -12.040436744689941

Token 336: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693104147911072
    2. ' =' → logprob: -2.1269309520721436
    3. ' ' → logprob: -12.876931190490723
    4. '=r' → logprob: -15.251931190490723
    5. ')' → logprob: -16.501930236816406
    6. '   ' → logprob: -17.251930236816406
    7. ',' → logprob: -17.501930236816406
    8. '<|end|>' → logprob: -17.626930236816406
    9. ' =
' → logprob: -18.376930236816406
    10. '=
' → logprob: -18.376930236816406

Token 337: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.0126840758603066e-05
    2. ' r' → logprob: -10.125040054321289
    3. '	r' → logprob: -19.37504005432129
    4. '   ' → logprob: -21.37504005432129
    5. ' ' → logprob: -22.12504005432129
    6. '_r' → logprob: -23.00004005432129
    7. '
' → logprob: -23.50004005432129
    8. '  ' → logprob: -24.12504005432129
    9. 'float' → logprob: -24.12504005432129
    10. '­r' → logprob: -24.12504005432129

Token 338: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29961007833480835
    2. '<|end|>' → logprob: -1.6746101379394531
    3. '   ' → logprob: -3.299610137939453
    4. '    
' → logprob: -4.049610137939453
    5. 'def' → logprob: -4.549610137939453
    6. '<|end|>' → logprob: -5.174610137939453
    7. '  
' → logprob: -8.549610137939453
    8. ' def' → logprob: -9.049610137939453
    9. '
    
' → logprob: -9.174610137939453
    10. '        
' → logprob: -9.174610137939453

Token 339: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48293226957321167
    2. '   ' → logprob: -1.2329323291778564
    3. 'def' → logprob: -2.6079323291778564
    4. '    
' → logprob: -4.107932090759277
    5. '<|end|>' → logprob: -7.232932090759277
    6. ' def' → logprob: -7.982932090759277
    7. '<|end|>' → logprob: -8.857932090759277
    8. '	def' → logprob: -9.482932090759277
    9. '  
' → logprob: -10.107932090759277
    10. '	
' → logprob: -10.232932090759277

Token 340: ' Line' (ID: 11342)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.7450524568557739
    2. ' Polygon' → logprob: -2.2450523376464844
    3. ' Triangle' → logprob: -2.2450523376464844
    4. 'Point' → logprob: -2.6200523376464844
    5. ' Rectangle' → logprob: -2.8700523376464844
    6. ' Line' → logprob: -2.9950523376464844
    7. 'Polygon' → logprob: -3.8700523376464844
    8. ' Segment' → logprob: -3.8700523376464844
    9. 'Line' → logprob: -3.9950523376464844
    10. 'Rectangle' → logprob: -4.245052337646484

Token 341: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002829603850841522
    2. '():
' → logprob: -6.127829551696777
    3. ':' → logprob: -7.377829551696777
    4. '()' → logprob: -12.252829551696777
    5. '(object' → logprob: -12.377829551696777
    6. '():
' → logprob: -12.627829551696777
    7. ' ():' → logprob: -12.627829551696777
    8. '():

' → logprob: -13.502829551696777
    9. ':
' → logprob: -13.627829551696777
    10. '(Point' → logprob: -14.502829551696777

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24554818868637085
    2. 'def' → logprob: -2.3705482482910156
    3. '():
' → logprob: -2.6205482482910156
    4. ':
' → logprob: -3.7455482482910156
    5. '():' → logprob: -3.8705482482910156
    6. ' def' → logprob: -5.745548248291016
    7. ':' → logprob: -6.245548248291016
    8. '):
' → logprob: -6.870548248291016
    9. '()' → logprob: -7.995548248291016
    10. '    
' → logprob: -9.495548248291016

Token 343: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32018306851387024
    2. ' def' → logprob: -1.3201830387115479
    3. '__' → logprob: -6.070183277130127
    4. '   ' → logprob: -6.695183277130127
    5. 'object' → logprob: -6.945183277130127
    6. ':' → logprob: -6.945183277130127
    7. ' ' → logprob: -8.195182800292969
    8. '():' → logprob: -8.445182800292969
    9. '().__' → logprob: -9.070182800292969
    10. '()' → logprob: -9.195182800292969

Token 344: ' 点' (ID: 61603)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35240745544433594
    2. ' def' → logprob: -1.227407455444336
    3. '__' → logprob: -5.727407455444336
    4. ' __' → logprob: -7.602407455444336
    5. '   ' → logprob: -9.102407455444336
    6. 'class' → logprob: -10.102407455444336
    7. 'from' → logprob: -11.477407455444336
    8. ' ' → logprob: -11.852407455444336
    9. 'init' → logprob: -11.852407455444336
    10. 'Def' → logprob: -12.352407455444336

Token 345: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2713528573513031
    2. '1' → logprob: -1.5213528871536255
    3. ',' → logprob: -4.521352767944336
    4. 'A' → logprob: -5.771352767944336
    5. 'es' → logprob: -6.396352767944336
    6. '(p' → logprob: -7.021352767944336
    7. '0' → logprob: -7.771352767944336
    8. '()' → logprob: -7.896352767944336
    9. '():' → logprob: -7.896352767944336
    10. 'a' → logprob: -8.396352767944336

Token 346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029023548122495413
    2. ' and' → logprob: -6.627902507781982
    3. ' ,' → logprob: -7.002902507781982
    4. 'and' → logprob: -8.002902030944824
    5. 'と' → logprob: -8.877902030944824
    6. '、' → logprob: -9.627902030944824
    7. ' ' → logprob: -10.502902030944824
    8. ',
' → logprob: -11.002902030944824
    9. '   ' → logprob: -11.002902030944824
    10. '=' → logprob: -11.752902030944824

Token 347: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2524122893810272
    2. ' b' → logprob: -1.5024123191833496
    3. '   ' → logprob: -8.377411842346191
    4. ' point' → logprob: -9.252411842346191
    5. 'point' → logprob: -9.752411842346191
    6. ' ' → logprob: -10.252411842346191
    7. '点' → logprob: -10.252411842346191
    8. ' 点' → logprob: -11.877411842346191
    9. 'p' → logprob: -12.502411842346191
    10. '	b' → logprob: -12.877411842346191

Token 348: 'を' (ID: 7277)
  Prédit: 'を'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.29855597019195557
    2. ',' → logprob: -2.048555850982666
    3. ' を' → logprob: -2.423555850982666
    4. 'の' → logprob: -4.173555850982666
    5. '   ' → logprob: -5.048555850982666
    6. ' ' → logprob: -5.423555850982666
    7. '(' → logprob: -6.048555850982666
    8. 'から' → logprob: -6.173555850982666
    9. 'def' → logprob: -6.548555850982666
    10. ' def' → logprob: -6.548555850982666

Token 349: '通' (ID: 9034)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.21345651149749756
    2. ' ' → logprob: -2.713456630706787
    3. ' __' → logprob: -2.963456630706787
    4. 'def' → logprob: -3.588456630706787
    5. 'init' → logprob: -3.713456630706787
    6. '   ' → logprob: -4.838456630706787
    7. 'a' → logprob: -5.713456630706787
    8. '  ' → logprob: -5.838456630706787
    9. ',' → logprob: -7.088456630706787
    10. '引' → logprob: -7.213456630706787

Token 350: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.006080956198275089
    2. 'す' → logprob: -6.0060811042785645
    3. '   ' → logprob: -6.1310811042785645
    4. '```' → logprob: -8.006080627441406
    5. 'り' → logprob: -8.381080627441406
    6. 'じ' → logprob: -8.631080627441406
    7. '#' → logprob: -8.756080627441406
    8. ' ' → logprob: -8.881080627441406
    9. 'って' → logprob: -9.131080627441406
    10. '過' → logprob: -9.631080627441406

Token 351: '
' (ID: 198)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.6408642530441284
    2. ' line' → logprob: -1.1408642530441284
    3. ' def' → logprob: -2.390864372253418
    4. ' class' → logprob: -3.890864372253418
    5. 'def' → logprob: -4.015864372253418
    6. ' ' → logprob: -4.515864372253418
    7. '   ' → logprob: -4.890864372253418
    8. 'line' → logprob: -6.015864372253418
    9. ' constructor' → logprob: -6.390864372253418
    10. '  ' → logprob: -8.515864372253418

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6244180202484131
    2. 'class' → logprob: -0.9994180202484131
    3. 'def' → logprob: -2.749418020248413
    4. ' def' → logprob: -3.624418020248413
    5. ' ' → logprob: -6.124418258666992
    6. '
' → logprob: -6.749418258666992
    7. ' class' → logprob: -6.874418258666992
    8. ' line' → logprob: -7.624418258666992
    9. '  ' → logprob: -7.749418258666992
    10. 'の' → logprob: -9.124418258666992

Token 353: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.012070552445948124
    2. ' def' → logprob: -4.512070655822754
    3. '   ' → logprob: -6.887070655822754
    4. '	def' → logprob: -13.887070655822754
    5. ' ' → logprob: -15.387070655822754
    6. ':def' → logprob: -16.137069702148438
    7. 'class' → logprob: -16.762069702148438
    8. 'de' → logprob: -17.137069702148438
    9. '  ' → logprob: -17.262069702148438
    10. '    
' → logprob: -17.762069702148438

Token 354: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.006780269090086222
    2. ' __' → logprob: -5.00678014755249
    3. '_init' → logprob: -10.006780624389648
    4. 'init' → logprob: -10.881780624389648
    5. '___' → logprob: -14.506780624389648
    6. 'def' → logprob: -15.256780624389648
    7. ' ' → logprob: -15.756780624389648
    8. '.__' → logprob: -17.13178062438965
    9. ' init' → logprob: -17.88178062438965
    10. '_' → logprob: -17.88178062438965

Token 355: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -17.0
    3. 'def' → logprob: -18.75
    4. ' init' → logprob: -19.375
    5. 'inite' → logprob: -20.125
    6. 'ini' → logprob: -20.25
    7. 'int' → logprob: -21.0
    8. '__' → logprob: -21.25
    9. '	init' → logprob: -21.25
    10. 'initi' → logprob: -21.375

Token 356: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.6550729419104755e-05
    2. '__' → logprob: -10.250036239624023
    3. '__(
' → logprob: -13.875036239624023
    4. '_(' → logprob: -16.250036239624023
    5. '__((' → logprob: -17.875036239624023
    6. '(self' → logprob: -18.500036239624023
    7. '_' → logprob: -19.125036239624023
    8. '(' → logprob: -19.125036239624023
    9. '__('' → logprob: -20.125036239624023
    10. '__(*' → logprob: -20.250036239624023

Token 357: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.52788148727268e-05
    2. ' self' → logprob: -9.875064849853516
    3. '(self' → logprob: -11.875064849853516
    4. '   ' → logprob: -12.625064849853516
    5. ',' → logprob: -13.375064849853516
    6. '__(' → logprob: -14.250064849853516
    7. '
' → logprob: -14.625064849853516
    8. ',self' → logprob: -15.125064849853516
    9. '	self' → logprob: -16.125064849853516
    10. ' ' → logprob: -16.125064849853516

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003936867695301771
    2. 'self' → logprob: -5.878936767578125
    3. '(self' → logprob: -7.128936767578125
    4. '__(' → logprob: -8.253936767578125
    5. ' ,' → logprob: -10.628936767578125
    6. ',self' → logprob: -11.003936767578125
    7. ' self' → logprob: -11.128936767578125
    8. '__,' → logprob: -11.378936767578125
    9. ' (' → logprob: -13.753936767578125
    10. '(' → logprob: -14.503936767578125

Token 359: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001508674118667841
    2. ' a' → logprob: -6.501508712768555
    3. 'self' → logprob: -12.501508712768555
    4. '   ' → logprob: -13.626508712768555
    5. '	a' → logprob: -14.751508712768555
    6. ' ' → logprob: -14.876508712768555
    7. 'p' → logprob: -15.001508712768555
    8. ' self' → logprob: -16.251508712768555
    9. ')a' → logprob: -17.001508712768555
    10. 'point' → logprob: -17.126508712768555

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.584861744660884e-05
    2. ' ,' → logprob: -10.000045776367188
    3. ',b' → logprob: -16.250045776367188
    4. '   ' → logprob: -16.250045776367188
    5. ',
' → logprob: -16.250045776367188
    6. ',a' → logprob: -17.000045776367188
    7. ':' → logprob: -18.000045776367188
    8. ',p' → logprob: -18.125045776367188
    9. ',line' → logprob: -18.125045776367188
    10. '=' → logprob: -18.625045776367188

Token 361: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804286941885948
    2. ' b' → logprob: -3.2880427837371826
    3. '	b' → logprob: -13.663043022155762
    4. '   ' → logprob: -16.163042068481445
    5. ' ' → logprob: -16.538042068481445
    6. ' б' → logprob: -17.538042068481445
    7. '_b' → logprob: -18.788042068481445
    8. '  ' → logprob: -18.788042068481445
    9. ')b' → logprob: -18.788042068481445
    10. ' ' → logprob: -19.038042068481445

Token 362: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005266245920211077
    2. '):
' → logprob: -5.255266189575195
    3. ')' → logprob: -10.630266189575195
    4. ' ):' → logprob: -12.255266189575195
    5. '):
' → logprob: -13.130266189575195
    6. ':' → logprob: -13.755266189575195
    7. ')：' → logprob: -15.880266189575195
    8. '):

' → logprob: -16.505266189575195
    9. '   ' → logprob: -16.630266189575195
    10. '）：' → logprob: -16.755266189575195

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005708358250558376
    2. 'self' → logprob: -5.63070821762085
    3. ' self' → logprob: -6.63070821762085
    4. '   ' → logprob: -7.75570821762085
    5. ',' → logprob: -9.130708694458008
    6. '	   ' → logprob: -9.505708694458008
    7. '	self' → logprob: -9.630708694458008
    8. '	' → logprob: -9.880708694458008
    9. '	       ' → logprob: -11.255708694458008
    10. '<|end|>' → logprob: -11.505708694458008

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014284518547356129
    2. '       ' → logprob: -6.626428604125977
    3. ' self' → logprob: -9.876428604125977
    4. 'dx' → logprob: -10.376428604125977
    5. 'd' → logprob: -11.501428604125977
    6. '	self' → logprob: -12.876428604125977
    7. 'a' → logprob: -13.126428604125977
    8. 'if' → logprob: -13.626428604125977
    9. '   ' → logprob: -13.751428604125977
    10. 'delta' → logprob: -14.001428604125977

Token 365: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -9.245724504580721e-05
    2. '.' → logprob: -9.625092506408691
    3. 'a' → logprob: -10.750092506408691
    4. ' =' → logprob: -13.500092506408691
    5. '=' → logprob: -13.625092506408691
    6. '._' → logprob: -14.250092506408691
    7. 'A' → logprob: -14.625092506408691
    8. '_a' → logprob: -14.875092506408691
    9. '.A' → logprob: -15.250092506408691
    10. '.p' → logprob: -15.625092506408691

Token 366: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38718417286872864
    2. ' =' → logprob: -1.1371841430664062
    3. ',' → logprob: -8.387184143066406
    4. '=a' → logprob: -9.512184143066406
    5. ' ' → logprob: -12.762184143066406
    6. '   ' → logprob: -13.137184143066406
    7. ' ,' → logprob: -13.387184143066406
    8. ',a' → logprob: -13.512184143066406
    9. 'a' → logprob: -14.262184143066406
    10. '=
' → logprob: -14.512184143066406

Token 367: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1637164789135568e-05
    2. ' a' → logprob: -11.375011444091797
    3. '	a' → logprob: -16.000011444091797
    4. 'Point' → logprob: -16.750011444091797
    5. '   ' → logprob: -19.125011444091797
    6. 'а' → logprob: -19.500011444091797
    7. ' Point' → logprob: -19.625011444091797
    8. '(a' → logprob: -20.250011444091797
    9. 'b' → logprob: -21.250011444091797
    10. '  ' → logprob: -21.375011444091797

Token 368: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012749579036608338
    2. 'self' → logprob: -9.125127792358398
    3. '
' → logprob: -11.875127792358398
    4. '	' → logprob: -12.625127792358398
    5. ' self' → logprob: -12.750127792358398
    6. '   ' → logprob: -13.125127792358398
    7. ',' → logprob: -13.375127792358398
    8. '<|end|>' → logprob: -14.500127792358398
    9. '               ' → logprob: -15.500127792358398
    10. '	self' → logprob: -15.750127792358398

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000768413650803268
    2. 'self' → logprob: -7.250768184661865
    3. ' self' → logprob: -10.250768661499023
    4. '
' → logprob: -11.625768661499023
    5. '   ' → logprob: -11.625768661499023
    6. '	' → logprob: -12.750768661499023
    7. '	self' → logprob: -13.750768661499023
    8. ',' → logprob: -14.750768661499023
    9. ' ' → logprob: -15.375768661499023
    10. '           ' → logprob: -16.250768661499023

Token 370: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023550475016236305
    2. 'b' → logprob: -3.773550510406494
    3. ' self' → logprob: -8.523550033569336
    4. '   ' → logprob: -9.773550033569336
    5. '       ' → logprob: -10.023550033569336
    6. '	self' → logprob: -13.023550033569336
    7. '(self' → logprob: -13.648550033569336
    8. ' b' → logprob: -13.898550033569336
    9. ' ' → logprob: -15.773550033569336
    10. '  ' → logprob: -16.023550033569336

Token 371: '.b' (ID: 1292)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.49995240569114685
    2. '
' → logprob: -2.6249523162841797
    3. '       ' → logprob: -2.7499523162841797
    4. ' =' → logprob: -2.8749523162841797
    5. ',' → logprob: -3.2499523162841797
    6. '   ' → logprob: -3.4999523162841797
    7. 'a' → logprob: -3.4999523162841797
    8. '<|end|>' → logprob: -3.4999523162841797
    9. '<|end|>' → logprob: -3.9999523162841797
    10. '=' → logprob: -4.24995231628418

Token 372: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 373: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. 'a' → logprob: -18.00020408630371
    4. '	b' → logprob: -18.50020408630371
    5. ' ' → logprob: -21.12520408630371
    6. '   ' → logprob: -21.62520408630371
    7. ' б' → logprob: -22.12520408630371
    8. ')b' → logprob: -24.12520408630371
    9. '_b' → logprob: -24.25020408630371
    10. 'б' → logprob: -24.50020408630371

Token 374: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07532932609319687
    2. '       ' → logprob: -2.950329303741455
    3. '   ' → logprob: -4.825329303741455
    4. '<|end|>' → logprob: -5.075329303741455
    5. '    
' → logprob: -5.450329303741455
    6. '        
' → logprob: -7.700329303741455
    7. '<|end|>' → logprob: -7.700329303741455
    8. 'def' → logprob: -8.075329780578613
    9. '

' → logprob: -9.450329780578613
    10. '    ' → logprob: -9.950329780578613

Token 375: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06298252195119858
    2. '       ' → logprob: -3.3129825592041016
    3. '<|end|>' → logprob: -3.9379825592041016
    4. '    
' → logprob: -6.187982559204102
    5. '
' → logprob: -6.312982559204102
    6. '<|end|>' → logprob: -6.937982559204102
    7. '        
' → logprob: -8.437982559204102
    8. 'def' → logprob: -10.062982559204102
    9. '    ' → logprob: -11.937982559204102
    10. '  
' → logprob: -12.562982559204102

Token 376: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7073105573654175
    2. 'def' → logprob: -1.0823105573654175
    3. '       ' → logprob: -1.8323105573654175
    4. '   ' → logprob: -5.207310676574707
    5. '	self' → logprob: -7.207310676574707
    6. '#' → logprob: -7.707310676574707
    7. ' self' → logprob: -7.957310676574707
    8. 'dx' → logprob: -7.957310676574707
    9. '
' → logprob: -8.332310676574707
    10. '    
' → logprob: -8.832310676574707

Token 377: '.arg' (ID: 47493)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.40013644099235535
    2. '.a' → logprob: -1.5251364707946777
    3. '.' → logprob: -3.7751364707946777
    4. '.dx' → logprob: -4.275136470794678
    5. '.v' → logprob: -4.525136470794678
    6. '.vector' → logprob: -4.650136470794678
    7. '.t' → logprob: -4.775136470794678
    8. '.s' → logprob: -5.025136470794678
    9. '.vec' → logprob: -5.275136470794678
    10. '.A' → logprob: -5.400136470794678

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.700939178466797
    4. ',' → logprob: -18.200939178466797
    5. '＝' → logprob: -18.700939178466797
    6. '   ' → logprob: -18.700939178466797
    7. '=line' → logprob: -19.200939178466797
    8. 's' → logprob: -19.325939178466797
    9. 'import' → logprob: -19.575939178466797
    10. ')' → logprob: -19.825939178466797

Token 379: ' (' (ID: 350)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.0005073997308500111
    2. '(b' → logprob: -8.375507354736328
    3. ' atan' → logprob: -8.875507354736328
    4. '(' → logprob: -9.125507354736328
    5. '(a' → logprob: -11.125507354736328
    6. 'b' → logprob: -12.750507354736328
    7. '.atan' → logprob: -12.750507354736328
    8. 'a' → logprob: -13.000507354736328
    9. 'self' → logprob: -13.375507354736328
    10. '(self' → logprob: -13.875507354736328

Token 380: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004743991419672966
    2. 'atan' → logprob: -5.629744052886963
    3. 'self' → logprob: -7.379744052886963
    4. '(b' → logprob: -7.629744052886963
    5. '(self' → logprob: -10.754743576049805
    6. 'a' → logprob: -11.754743576049805
    7. 'math' → logprob: -13.754743576049805
    8. ' b' → logprob: -14.129743576049805
    9. ' atan' → logprob: -14.379743576049805
    10. 'at' → logprob: -15.254743576049805

Token 381: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.3399122953414917
    2. '-' → logprob: -1.9649122953414917
    3. ' -' → logprob: -1.9649122953414917
    4. '-self' → logprob: -4.964912414550781
    5. 'b' → logprob: -7.839912414550781
    6. 'self' → logprob: -8.589912414550781
    7. '-p' → logprob: -8.839912414550781
    8. '-B' → logprob: -10.214912414550781
    9. '+' → logprob: -11.089912414550781
    10. '-y' → logprob: -11.339912414550781

Token 382: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -4.4849443838757e-06
    2. ' ).' → logprob: -12.625004768371582
    3. ')' → logprob: -14.250004768371582
    4. '   ' → logprob: -15.500004768371582
    5. ' ' → logprob: -16.250003814697266
    6. '.' → logprob: -16.500003814697266
    7. ').__' → logprob: -17.250003814697266
    8. ')._' → logprob: -17.500003814697266
    9. '.).' → logprob: -17.625003814697266
    10. '	' → logprob: -18.500003814697266

Token 383: 'arg' (ID: 1170)
  Prédit: 'arg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arg' → logprob: -0.0009120595059357584
    2. 'atan' → logprob: -7.000912189483643
    3. 'abs' → logprob: -15.250911712646484
    4. 'a' → logprob: -15.625911712646484
    5. 'ar' → logprob: -17.250911712646484
    6. '.arg' → logprob: -17.500911712646484
    7. '(arg' → logprob: -17.625911712646484
    8. ' arg' → logprob: -18.000911712646484
    9. '	arg' → logprob: -18.250911712646484
    10. 'argon' → logprob: -18.500911712646484

Token 384: ' %' (ID: 1851)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ' pi' (ID: 6404)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0051290313713252544
    2. '(pi' → logprob: -5.630128860473633
    3. 'pi' → logprob: -6.880128860473633
    4. ' (' → logprob: -7.630128860473633
    5. '{' → logprob: -11.630128860473633
    6. ' pi' → logprob: -13.130128860473633
    7. '(p' → logprob: -13.880128860473633
    8. '2' → logprob: -14.130128860473633
    9. '\(' → logprob: -14.880128860473633
    10. '(T' → logprob: -15.380128860473633

Token 386: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768064260482788
    2. 'def' → logprob: -0.8268064260482788
    3. ' def' → logprob: -7.451806545257568
    4. '    
' → logprob: -9.07680606842041
    5. ' ' → logprob: -9.32680606842041
    6. '	def' → logprob: -10.82680606842041
    7. '#' → logprob: -11.07680606842041
    8. '       ' → logprob: -11.20180606842041
    9. '<|end|>' → logprob: -11.32680606842041
    10. '        
' → logprob: -13.07680606842041

Token 388: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001487600733526051
    2. ' def' → logprob: -7.126487731933594
    3. '   ' → logprob: -7.376487731933594
    4. ' ' → logprob: -10.626487731933594
    5. '    
' → logprob: -11.751487731933594
    6. '@property' → logprob: -12.251487731933594
    7. '#' → logprob: -12.501487731933594
    8. '	def' → logprob: -12.876487731933594
    9. '0' → logprob: -13.626487731933594
    10. '2' → logprob: -14.001487731933594

Token 389: ' __' (ID: 2516)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proj' → logprob: -1.9684462547302246
    2. 'get' → logprob: -2.2184462547302246
    3. '__' → logprob: -2.3434462547302246
    4. 'point' → logprob: -2.5934462547302246
    5. 'projection' → logprob: -2.5934462547302246
    6. 'project' → logprob: -2.5934462547302246
    7. 'dist' → logprob: -2.7184462547302246
    8. 'eq' → logprob: -2.9684462547302246
    9. 'pos' → logprob: -3.4684462547302246
    10. 'calc' → logprob: -3.4684462547302246

Token 390: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0074117546901106834
    2. 'lt' → logprob: -5.507411956787109
    3. 'str' → logprob: -5.757411956787109
    4. 'sub' → logprob: -9.50741195678711
    5. 'init' → logprob: -10.00741195678711
    6. 'repr' → logprob: -10.38241195678711
    7. 'call' → logprob: -12.50741195678711
    8. 'hash' → logprob: -12.50741195678711
    9. 'gt' → logprob: -12.88241195678711
    10. 'add' → logprob: -13.13241195678711

Token 391: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030127864331007004
    2. '__(' → logprob: -3.530127763748169
    3. '(' → logprob: -7.905128002166748
    4. '(s' → logprob: -12.40512752532959
    5. '__(
' → logprob: -12.90512752532959
    6. '_(' → logprob: -14.65512752532959
    7. '__' → logprob: -14.65512752532959
    8. ' (' → logprob: -15.03012752532959
    9. 'self' → logprob: -15.40512752532959
    10. ')(' → logprob: -16.030128479003906

Token 392: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.320199877838604e-07
    2. ' self' → logprob: -15.5
    3. ')' → logprob: -16.625
    4. '(self' → logprob: -18.125
    5. '):
' → logprob: -19.25
    6. 's' → logprob: -20.125
    7. '
' → logprob: -20.625
    8. '0' → logprob: -21.25
    9. '   ' → logprob: -21.25
    10. ')(' → logprob: -21.25

Token 393: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20368456840515137
    2. ')(' → logprob: -2.3286845684051514
    3. 'self' → logprob: -2.8286845684051514
    4. '(self' → logprob: -3.8286845684051514
    5. '__' → logprob: -6.0786848068237305
    6. '):' → logprob: -6.2036848068237305
    7. '):
' → logprob: -6.5786848068237305
    8. ')' → logprob: -8.32868480682373
    9. ')(
' → logprob: -10.70368480682373
    10. ')(__' → logprob: -11.20368480682373

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005825805710628629
    2. ' f' → logprob: -8.375582695007324
    3. 'self' → logprob: -8.875582695007324
    4. 'f' → logprob: -9.000582695007324
    5. ' return' → logprob: -10.875582695007324
    6. '"' → logprob: -10.875582695007324
    7. ' self' → logprob: -11.125582695007324
    8. 'return' → logprob: -11.125582695007324
    9. '   ' → logprob: -11.875582695007324
    10. '"{' → logprob: -12.500582695007324

Token 395: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15536387264728546
    2. '"' → logprob: -2.4053637981414795
    3. 'f' → logprob: -3.9053637981414795
    4. '"{' → logprob: -4.155364036560059
    5. '       ' → logprob: -4.905364036560059
    6. ' return' → logprob: -4.905364036560059
    7. '   ' → logprob: -5.905364036560059
    8. ' f' → logprob: -8.655364036560059
    9. ' "{}' → logprob: -9.405364036560059
    10. '	return' → logprob: -10.905364036560059

Token 396: ' "[' (ID: 23317)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9139407873153687
    2. '"{' → logprob: -0.9139407873153687
    3. 'f' → logprob: -1.6639407873153687
    4. ' f' → logprob: -4.788940906524658
    5. ' "{' → logprob: -8.2889404296875
    6. ' "{}' → logprob: -9.1639404296875
    7. ' "' → logprob: -10.9139404296875
    8. '"[' → logprob: -11.7889404296875
    9. ''{' → logprob: -12.1639404296875
    10. '   ' → logprob: -12.4139404296875

Token 397: '({' (ID: 3972)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.03786301985383034
    2. '({' → logprob: -4.412863254547119
    3. '{},' → logprob: -4.412863254547119
    4. 'Point' → logprob: -5.037863254547119
    5. '{}' → logprob: -5.912863254547119
    6. 'Line' → logprob: -6.287863254547119
    7. '({},' → logprob: -6.537863254547119
    8. '"' → logprob: -9.537862777709961
    9. '(Point' → logprob: -9.662862777709961
    10. '{:' → logprob: -10.037862777709961

Token 398: '0' (ID: 15)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038122277706861496
    2. '0' → logprob: -3.2881221771240234
    3. '{' → logprob: -10.163122177124023
    4. '}{' → logprob: -11.038122177124023
    5. ':.' → logprob: -12.038122177124023
    6. ' self' → logprob: -12.663122177124023
    7. '})' → logprob: -12.788122177124023
    8. '}' → logprob: -12.913122177124023
    9. '1' → logprob: -12.913122177124023
    10. '.self' → logprob: -13.038122177124023

Token 399: '},' (ID: 4180)
  Prédit: ':.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.39602234959602356
    2. '.x' → logprob: -1.1460223197937012
    3. '.' → logprob: -5.021022319793701
    4. '}.' → logprob: -6.146022319793701
    5. '[' → logprob: -9.14602279663086
    6. '0' → logprob: -9.89602279663086
    7. '}' → logprob: -10.14602279663086
    8. '},{' → logprob: -10.39602279663086
    9. '   ' → logprob: -10.89602279663086
    10. 'x' → logprob: -10.89602279663086

Token 400: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.008068625815212727
    2. ' {' → logprob: -4.883068561553955
    3. 'self' → logprob: -8.258069038391113
    4. ')' → logprob: -8.758069038391113
    5. ' self' → logprob: -11.633069038391113
    6. '{})' → logprob: -11.633069038391113
    7. '){' → logprob: -12.008069038391113
    8. '"{' → logprob: -12.258069038391113
    9. '{return' → logprob: -12.383069038391113
    10. '{x' → logprob: -13.258069038391113

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7542375326156616
    2. 'self' → logprob: -0.7542375326156616
    3. '0' → logprob: -2.879237651824951
    4. '{' → logprob: -6.754237651824951
    5. '}{' → logprob: -7.004237651824951
    6. 'str' → logprob: -7.879237651824951
    7. '}' → logprob: -8.629237174987793
    8. '2' → logprob: -9.129237174987793
    9. '})' → logprob: -9.379237174987793
    10. '},{' → logprob: -10.129237174987793

Token 402: '})' (ID: 9263)
  Prédit: '}),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}),' → logprob: -0.2743038833141327
    2. '.x' → logprob: -1.774303913116455
    3. '})' → logprob: -3.274303913116455
    4. '},' → logprob: -3.524303913116455
    5. '),' → logprob: -6.149303913116455
    6. '}' → logprob: -8.274303436279297
    7. '.y' → logprob: -9.774303436279297
    8. '.format' → logprob: -10.024303436279297
    9. ')},' → logprob: -10.149303436279297
    10. '.' → logprob: -10.149303436279297

Token 403: ' -' (ID: 533)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.03138028457760811
    2. ',' → logprob: -3.7813801765441895
    3. ')' → logprob: -5.1563801765441895
    4. '{' → logprob: -6.2813801765441895
    5. '({' → logprob: -8.906380653381348
    6. ' {' → logprob: -9.906380653381348
    7. '},' → logprob: -10.031380653381348
    8. '   ' → logprob: -10.406380653381348
    9. '".' → logprob: -10.406380653381348
    10. ' ),' → logprob: -10.531380653381348

Token 404: ' ({' (ID: 16472)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.30860283970832825
    2. ' ({' → logprob: -1.5586028099060059
    3. '{' → logprob: -3.433602809906006
    4. ' {' → logprob: -3.808602809906006
    5. '(' → logprob: -7.683602809906006
    6. ' (' → logprob: -9.433603286743164
    7. ' ' → logprob: -10.058603286743164
    8. ')' → logprob: -10.933603286743164
    9. '>' → logprob: -11.683603286743164
    10. ' ' → logprob: -11.933603286743164

Token 405: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0060072410851716995
    2. 'self' → logprob: -5.756007194519043
    3. '0' → logprob: -5.881007194519043
    4. '{' → logprob: -10.381007194519043
    5. '}' → logprob: -14.256007194519043
    6. ' ' → logprob: -14.506007194519043
    7. ' self' → logprob: -14.756007194519043
    8. '   ' → logprob: -15.506007194519043
    9. '(self' → logprob: -15.881007194519043
    10. '```' → logprob: -16.13100814819336

Token 406: '},' (ID: 4180)
  Prédit: '},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.0018998401938006282
    2. '.x' → logprob: -6.376899719238281
    3. '),' → logprob: -9.626899719238281
    4. '}' → logprob: -9.751899719238281
    5. '.' → logprob: -10.251899719238281
    6. '}.' → logprob: -11.501899719238281
    7. '0' → logprob: -11.876899719238281
    8. '.s' → logprob: -12.251899719238281
    9. '3' → logprob: -12.751899719238281
    10. '.y' → logprob: -13.501899719238281

Token 407: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.016119064763188362
    2. ' {' → logprob: -4.141119003295898
    3. '3' → logprob: -9.516119003295898
    4. '<|end|>' → logprob: -12.516119003295898
    5. ' ' → logprob: -12.891119003295898
    6. ')' → logprob: -13.266119003295898
    7. '){' → logprob: -14.266119003295898
    8. '{return' → logprob: -14.766119003295898
    9. ',' → logprob: -15.141119003295898
    10. '"{' → logprob: -15.391119003295898

Token 408: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00021366903092712164
    2. '{' → logprob: -8.500213623046875
    3. ' ' → logprob: -12.375213623046875
    4. '2' → logprob: -13.250213623046875
    5. 'self' → logprob: -13.875213623046875
    6. '}' → logprob: -14.125213623046875
    7. ' {' → logprob: -14.250213623046875
    8. '<|end|>' → logprob: -15.125213623046875
    9. '}{' → logprob: -15.625213623046875
    10. ')' → logprob: -15.625213623046875

Token 409: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.44765451550483704
    2. ')]' → logprob: -1.4476544857025146
    3. '.format' → logprob: -2.5726544857025146
    4. ')' → logprob: -3.5726544857025146
    5. '}]' → logprob: -4.697654724121094
    6. '}' → logprob: -5.447654724121094
    7. ')}' → logprob: -5.447654724121094
    8. ')])' → logprob: -6.197654724121094
    9. '},' → logprob: -7.947654724121094
    10. 'format' → logprob: -7.947654724121094

Token 410: ']' (ID: 60)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.24451664090156555
    2. ')' → logprob: -1.6195166110992432
    3. ']' → logprob: -4.494516849517822
    4. '.format' → logprob: -5.744516849517822
    5. '])' → logprob: -6.494516849517822
    6. '}]' → logprob: -6.994516849517822
    7. '".' → logprob: -6.994516849517822
    8. '}".' → logprob: -6.994516849517822
    9. '})' → logprob: -9.494516372680664
    10. '{' → logprob: -9.994516372680664

Token 411: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.017229989171028137
    2. '.format' → logprob: -4.142230033874512
    3. '}".' → logprob: -7.017230033874512
    4. ']' → logprob: -8.767230033874512
    5. ')' → logprob: -9.392230033874512
    6. 'format' → logprob: -10.767230033874512
    7. '.' → logprob: -11.267230033874512
    8. '"' → logprob: -11.892230033874512
    9. ''.' → logprob: -12.392230033874512
    10. '\n' → logprob: -12.517230033874512

Token 412: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00026217024424113333
    2. ' format' → logprob: -8.250262260437012
    3. '.format' → logprob: -14.250262260437012
    4. '0' → logprob: -16.625261306762695
    5. '(format' → logprob: -16.625261306762695
    6. '	format' → logprob: -16.625261306762695
    7. 'forma' → logprob: -17.250261306762695
    8. 'f' → logprob: -18.125261306762695
    9. 'form' → logprob: -18.500261306762695
    10. ' .' → logprob: -18.625261306762695

Token 413: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.833878508885391e-05
    2. ' self' → logprob: -11.000038146972656
    3. 'round' → logprob: -11.250038146972656
    4. '(self' → logprob: -11.750038146972656
    5. '   ' → logprob: -15.125038146972656
    6. '       ' → logprob: -15.125038146972656
    7. '	self' → logprob: -16.375038146972656
    8. '(round' → logprob: -17.875038146972656
    9. '           ' → logprob: -19.500038146972656
    10. ' round' → logprob: -19.750038146972656

Token 414: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -3.3213025744771585e-05
    2. 'a' → logprob: -10.375033378601074
    3. '.' → logprob: -13.250033378601074
    4. ' .' → logprob: -16.625032424926758
    5. '.b' → logprob: -18.625032424926758
    6. '#a' → logprob: -19.375032424926758
    7. 'self' → logprob: -20.000032424926758
    8. '.x' → logprob: -20.125032424926758
    9. '.ai' → logprob: -20.125032424926758
    10. '.i' → logprob: -20.250032424926758

Token 415: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0012185708619654179
    2. '.' → logprob: -6.751218795776367
    3. ' .' → logprob: -10.126218795776367
    4. '.a' → logprob: -12.126218795776367
    5. ').' → logprob: -13.376218795776367
    6. ')' → logprob: -14.751218795776367
    7. 'x' → logprob: -14.876218795776367
    8. '[' → logprob: -15.751218795776367
    9. 'a' → logprob: -15.876218795776367
    10. '.s' → logprob: -16.251218795776367

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.146429223008454e-05
    2. ',self' → logprob: -10.25006103515625
    3. ' ,' → logprob: -10.87506103515625
    4. 'self' → logprob: -12.37506103515625
    5. ',
' → logprob: -12.87506103515625
    6. '),' → logprob: -16.00006103515625
    7. ' self' → logprob: -16.25006103515625
    8. '   ' → logprob: -16.37506103515625
    9. ')' → logprob: -17.12506103515625
    10. ',\
' → logprob: -17.75006103515625

Token 417: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868725001811981
    2. ' self' → logprob: -1.1368725299835205
    3. '	self' → logprob: -14.511872291564941
    4. '<|end|>' → logprob: -15.011872291564941
    5. '_self' → logprob: -16.011873245239258
    6. '       ' → logprob: -16.636873245239258
    7. ' ' → logprob: -16.636873245239258
    8. ' ' → logprob: -16.886873245239258
    9. '   ' → logprob: -17.011873245239258
    10. '(self' → logprob: -17.011873245239258

Token 418: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07927574217319489
    2. '.a' → logprob: -2.5792758464813232
    3. '.b' → logprob: -8.579276084899902
    4. '.y' → logprob: -9.204276084899902
    5. 'b' → logprob: -9.329276084899902
    6. '.' → logprob: -12.704276084899902
    7. ' a' → logprob: -13.204276084899902
    8. 'y' → logprob: -14.204276084899902
    9. '.x' → logprob: -14.204276084899902
    10. 'а' → logprob: -14.829276084899902

Token 419: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.07165232300758362
    2. 'y' → logprob: -2.696652412414551
    3. 'a' → logprob: -6.696652412414551
    4. '.x' → logprob: -8.07165241241455
    5. 'x' → logprob: -9.57165241241455
    6. ',' → logprob: -9.94665241241455
    7. '.' → logprob: -10.94665241241455
    8. ')' → logprob: -11.82165241241455
    9. ' y' → logprob: -12.19665241241455
    10. '.a' → logprob: -12.69665241241455

Token 420: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.084206375409849e-05
    2. ' ,' → logprob: -10.375041007995605
    3. ',self' → logprob: -12.250041007995605
    4. 'self' → logprob: -12.500041007995605
    5. ',
' → logprob: -13.875041007995605
    6. '),' → logprob: -16.87504005432129
    7. '',' → logprob: -17.00004005432129
    8. ')' → logprob: -17.12504005432129
    9. ' self' → logprob: -17.50004005432129
    10. '   ' → logprob: -17.87504005432129

Token 421: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687393069267273
    2. ' self' → logprob: -1.1368739604949951
    3. '<|end|>' → logprob: -13.761874198913574
    4. '	self' → logprob: -14.261874198913574
    5. 's' → logprob: -15.011874198913574
    6. '(self' → logprob: -15.136874198913574
    7. '[self' → logprob: -15.636874198913574
    8. 'Self' → logprob: -16.511873245239258
    9. '       ' → logprob: -16.636873245239258
    10. '_self' → logprob: -16.761873245239258

Token 422: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00014525714504998177
    2. 'b' → logprob: -9.125144958496094
    3. '.' → logprob: -10.250144958496094
    4. ' .' → logprob: -14.375144958496094
    5. '.б' → logprob: -16.750144958496094
    6. ').' → logprob: -17.125144958496094
    7. '.B' → logprob: -17.750144958496094
    8. '.x' → logprob: -17.750144958496094
    9. ' b' → logprob: -17.750144958496094
    10. ')b' → logprob: -17.875144958496094

Token 423: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0005561320576816797
    2. '.' → logprob: -7.500555992126465
    3. ' .' → logprob: -13.000555992126465
    4. 'x' → logprob: -14.125555992126465
    5. '<|end|>' → logprob: -17.00055694580078
    6. '.b' → logprob: -17.50055694580078
    7. '.y' → logprob: -17.62555694580078
    8. ' ' → logprob: -18.12555694580078
    9. ').' → logprob: -18.12555694580078
    10. ')' → logprob: -18.12555694580078

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026357775554060936
    2. '.' → logprob: -4.026357650756836
    3. '.x' → logprob: -4.901357650756836
    4. '.y' → logprob: -7.401357650756836
    5. ')' → logprob: -10.026357650756836
    6. '),' → logprob: -10.151357650756836
    7. ' ,' → logprob: -11.026357650756836
    8. ' .' → logprob: -11.276357650756836
    9. '.b' → logprob: -11.901357650756836
    10. '[' → logprob: -13.276357650756836

Token 425: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326326727867126
    2. ' self' → logprob: -1.3132632970809937
    3. '<|end|>' → logprob: -14.188262939453125
    4. '	self' → logprob: -15.438262939453125
    5. '(self' → logprob: -15.938262939453125
    6. '[self' → logprob: -16.438262939453125
    7. '   ' → logprob: -16.438262939453125
    8. ')' → logprob: -16.438262939453125
    9. '_self' → logprob: -17.063262939453125
    10. ' ' → logprob: -17.438262939453125

Token 426: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.7467832565307617
    2. 'b' → logprob: -0.8717832565307617
    3. '.y' → logprob: -2.2467832565307617
    4. '.' → logprob: -6.621783256530762
    5. 'y' → logprob: -7.246783256530762
    6. ')' → logprob: -10.371783256530762
    7. '	b' → logprob: -10.746783256530762
    8. 'self' → logprob: -11.371783256530762
    9. '1' → logprob: -12.121783256530762
    10. '   ' → logprob: -12.246783256530762

Token 427: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.000883237924426794
    2. '.' → logprob: -7.125883102416992
    3. '.b' → logprob: -10.250883102416992
    4. 'y' → logprob: -10.375883102416992
    5. '4' → logprob: -12.125883102416992
    6. '.z' → logprob: -12.750883102416992
    7. 'b' → logprob: -13.750883102416992
    8. '.x' → logprob: -13.875883102416992
    9. ')' → logprob: -14.000883102416992
    10. '.py' → logprob: -15.125883102416992

Token 428: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.5
    3. '))' → logprob: -17.125
    4. ' )' → logprob: -17.25
    5. '}' → logprob: -17.375
    6. ')
' → logprob: -17.5
    7. ')}' → logprob: -18.0
    8. ')")' → logprob: -18.5
    9. ')#' → logprob: -18.625
    10. '),' → logprob: -18.875

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02011389099061489
    2. '    
' → logprob: -4.270113945007324
    3. '<|end|>' → logprob: -5.895113945007324
    4. '
' → logprob: -6.395113945007324
    5. 'def' → logprob: -6.895113945007324
    6. '<|end|>' → logprob: -7.895113945007324
    7. ')' → logprob: -10.270113945007324
    8. '        
' → logprob: -10.395113945007324
    9. '  
' → logprob: -11.270113945007324
    10. '	def' → logprob: -11.645113945007324

Token 430: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5245181918144226
    2. '   ' → logprob: -0.8995181918144226
    3. '#' (adapté à ' #') → logprob: -7.274518013000488
    4. '    
' → logprob: -7.899518013000488
    5. '<|end|>' → logprob: -9.024518013000488
    6. ' def' → logprob: -9.149518013000488
    7. '<|end|>' → logprob: -10.274518013000488
    8. '@property' → logprob: -10.524518013000488
    9. '	def' → logprob: -10.524518013000488
    10. ')' → logprob: -12.649518013000488

Token 431: ' point' (ID: 2438)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07105038315057755
    2. ' def' → logprob: -3.3210504055023193
    3. '   ' → logprob: -3.6960504055023193
    4. '#' → logprob: -4.94605016708374
    5. ' ' → logprob: -8.571050643920898
    6. '@property' → logprob: -9.446050643920898
    7. '
' → logprob: -9.821050643920898
    8. ' #' → logprob: -9.946050643920898
    9. '	def' → logprob: -10.196050643920898
    10. '  ' → logprob: -11.071050643920898

Token 432: 'を' (ID: 7277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6641756892204285
    2. ' def' → logprob: -0.9141756892204285
    3. '   ' → logprob: -3.2891757488250732
    4. ')' → logprob: -3.6641757488250732
    5. 'class' → logprob: -5.789175510406494
    6. '(' → logprob: -6.164175510406494
    7. '_inside' → logprob: -6.164175510406494
    8. ',' → logprob: -6.289175510406494
    9. ' on' → logprob: -6.414175510406494
    10. ' ' → logprob: -6.414175510406494

Token 433: '通' (ID: 9034)
  Prédit: '通'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '通' → logprob: -0.25942444801330566
    2. 'on' → logprob: -2.5094244480133057
    3. 'project' → logprob: -3.3844244480133057
    4. 'proj' → logprob: -3.7594244480133057
    5. 'projection' → logprob: -3.8844244480133057
    6. 'def' → logprob: -4.009424209594727
    7. 'line' → logprob: -4.134424209594727
    8. 'contains' → logprob: -4.759424209594727
    9. 'distance' → logprob: -4.884424209594727
    10. 'is' → logprob: -5.884424209594727

Token 434: 'って' (ID: 30677)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.043936602771282196
    2. 'す' → logprob: -3.4189364910125732
    3. 'def' → logprob: -5.043936729431152
    4. '   ' → logprob: -6.043936729431152
    5. '#' → logprob: -7.543936729431152
    6. 'pass' → logprob: -8.293936729431152
    7. 'して' → logprob: -8.793936729431152
    8. 'し' → logprob: -9.168936729431152
    9. ' ' → logprob: -9.418936729431152
    10. 'する' → logprob: -9.543936729431152

Token 435: '平' (ID: 3585)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7855620980262756
    2. ',' → logprob: -1.6605620384216309
    3. '   ' → logprob: -2.285562038421631
    4. '#' → logprob: -2.285562038421631
    5. ' def' → logprob: -3.035562038421631
    6. ' line' → logprob: -3.910562038421631
    7. ' direction' → logprob: -4.785562038421631
    8. 'の' → logprob: -4.910562038421631
    9. '線' → logprob: -5.160562038421631
    10. 'vector' → logprob: -5.285562038421631

Token 436: '行' (ID: 6550)
  Prédit: '行'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '行' → logprob: -0.006577650085091591
    2. 'line' → logprob: -5.881577491760254
    3. 'def' → logprob: -6.131577491760254
    4. ' line' → logprob: -7.756577491760254
    5. '   ' → logprob: -7.881577491760254
    6. '#' → logprob: -8.006577491760254
    7. '面' → logprob: -9.131577491760254
    8. '_line' → logprob: -9.381577491760254
    9. '행' → logprob: -10.006577491760254
    10. '-line' → logprob: -10.006577491760254

Token 437: '
' (ID: 198)
  Prédit: '移'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '移' → logprob: -0.20654989778995514
    2. '線' → logprob: -1.831549882888794
    3. 'な' → logprob: -4.206550121307373
    4. 'に' → logprob: -5.706550121307373
    5. '   ' → logprob: -5.956550121307373
    6. 'line' → logprob: -6.331550121307373
    7. 'class' → logprob: -7.081550121307373
    8. 'def' → logprob: -7.206550121307373
    9. '#line' → logprob: -7.706550121307373
    10. '#' → logprob: -7.956550121307373

Token 438: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5792958736419678
    2. 'def' → logprob: -0.8292958736419678
    3. ' def' → logprob: -5.704296112060547
    4. '	def' → logprob: -10.954296112060547
    5. 'class' → logprob: -14.704296112060547
    6. '  ' → logprob: -14.704296112060547
    7. ' ' → logprob: -15.079296112060547
    8. '(' → logprob: -15.579296112060547
    9. ' line' → logprob: -16.204296112060547
    10. '    ' → logprob: -16.454296112060547

Token 439: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.06828660517930984
    2. '   ' → logprob: -2.818286657333374
    3. ' def' → logprob: -5.068286418914795
    4. '	def' → logprob: -12.193286895751953
    5. '  ' → logprob: -15.568286895751953
    6. '(' → logprob: -15.818286895751953
    7. ' ' → logprob: -15.818286895751953
    8. 'class' → logprob: -15.943286895751953
    9. '(def' → logprob: -16.193286895751953
    10. '    
' → logprob: -16.568286895751953

Token 440: ' par' (ID: 686)
  Prédit: 'parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parallel' → logprob: -0.3924291729927063
    2. ' parallel' → logprob: -1.1424291133880615
    3. 'Parallel' → logprob: -6.267429351806641
    4. 'par' → logprob: -6.517429351806641
    5. ' par' → logprob: -8.14242935180664
    6. '__' → logprob: -8.26742935180664
    7. 'line' → logprob: -8.39242935180664
    8. ' __' → logprob: -8.51742935180664
    9. ' line' → logprob: -8.64242935180664
    10. ' paral' → logprob: -8.64242935180664

Token 441: '(self' (ID: 2402)
  Prédit: 'allel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allel' → logprob: -0.037095412611961365
    2. 'al' → logprob: -3.662095308303833
    3. 'def' → logprob: -4.787095546722412
    4. 'a' → logprob: -7.287095546722412
    5. 'el' → logprob: -7.412095546722412
    6. 'alle' → logprob: -7.662095546722412
    7. 't' → logprob: -8.662095069885254
    8. '   ' → logprob: -9.412095069885254
    9. '(self' → logprob: -9.412095069885254
    10. 'arel' → logprob: -10.037095069885254

Token 442: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.9872815012931824
    2. 'allel' → logprob: -0.9872815012931824
    3. 'al' → logprob: -1.4872815608978271
    4. ')(' → logprob: -4.612281322479248
    5. 'a' → logprob: -4.862281322479248
    6. 'el' → logprob: -6.112281322479248
    7. ',' → logprob: -6.112281322479248
    8. ')' → logprob: -6.362281322479248
    9. '```' → logprob: -6.987281322479248
    10. '   ' → logprob: -7.237281322479248

Token 443: ' point' (ID: 2438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020082810893654823
    2. ' self' → logprob: -4.145082950592041
    3. 'point' → logprob: -5.645082950592041
    4. ' point' → logprob: -7.645082950592041
    5. '       ' → logprob: -11.395082473754883
    6. 'other' → logprob: -12.020082473754883
    7. '_point' → logprob: -13.520082473754883
    8. ' other' → logprob: -13.645082473754883
    9. '(self' → logprob: -13.770082473754883
    10. 'Point' → logprob: -13.895082473754883

Token 444: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.443743497133255
    2. 'self' → logprob: -1.1937434673309326
    3. '):
' → logprob: -3.1937434673309326
    4. '(self' → logprob: -4.818743705749512
    5. '):' → logprob: -5.443743705749512
    6. ' self' → logprob: -7.068743705749512
    7. '   ' → logprob: -7.693743705749512
    8. '       ' → logprob: -7.818743705749512
    9. ',self' → logprob: -9.943743705749512
    10. ')' → logprob: -10.068743705749512

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021236150059849024
    2. ' return' → logprob: -6.877123832702637
    3. 'return' → logprob: -6.877123832702637
    4. '	return' → logprob: -11.002123832702637
    5. ':' → logprob: -11.627123832702637
    6. '   ' → logprob: -12.002123832702637
    7. '	   ' → logprob: -12.252123832702637
    8. ',' → logprob: -12.502123832702637
    9. ')' → logprob: -12.502123832702637
    10. '<|end|>' → logprob: -12.752123832702637

Token 446: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0029809102416038513
    2. '       ' → logprob: -5.877980709075928
    3. ' return' → logprob: -9.252981185913086
    4. 'b' → logprob: -9.752981185913086
    5. 'v' → logprob: -11.752981185913086
    6. 'd' → logprob: -12.002981185913086
    7. 'delta' → logprob: -12.627981185913086
    8. '	return' → logprob: -13.752981185913086
    9. 'dx' → logprob: -14.627981185913086
    10. 'ret' → logprob: -14.877981185913086

Token 447: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -6.873571692267433e-05
    2. ' Line' → logprob: -9.625068664550781
    3. 'self' → logprob: -13.125068664550781
    4. '   ' → logprob: -14.625068664550781
    5. '(Line' → logprob: -16.25006866455078
    6. 'Point' → logprob: -16.75006866455078
    7. '       ' → logprob: -18.50006866455078
    8. 'Self' → logprob: -19.25006866455078
    9. 'line' → logprob: -19.37506866455078
    10. 'Lin' → logprob: -19.50006866455078

Token 448: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.0008999044075608253
    2. '(Point' → logprob: -7.625899791717529
    3. 'point' → logprob: -8.125900268554688
    4. '	point' → logprob: -9.875900268554688
    5. ' point' → logprob: -10.875900268554688
    6. 'Point' → logprob: -10.875900268554688
    7. '(' → logprob: -10.875900268554688
    8. '   ' → logprob: -13.375900268554688
    9. '(
' → logprob: -13.750900268554688
    10. '_point' → logprob: -14.000900268554688

Token 449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ' ,' → logprob: -10.750051498413086
    3. 'point' → logprob: -11.000051498413086
    4. '(point' → logprob: -12.125051498413086
    5. ',
' → logprob: -12.375051498413086
    6. '   ' → logprob: -13.375051498413086
    7. '+' → logprob: -14.125051498413086
    8. 'self' → logprob: -14.500051498413086
    9. ',self' → logprob: -15.125051498413086
    10. ')' → logprob: -15.500051498413086

Token 450: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.002083047293126583
    2. 'Point' → logprob: -6.377082824707031
    3. ' point' → logprob: -7.877082824707031
    4. '(point' → logprob: -13.752082824707031
    5. ' Point' → logprob: -16.50208282470703
    6. '	point' → logprob: -16.62708282470703
    7. 'line' → logprob: -17.25208282470703
    8. '_point' → logprob: -17.25208282470703
    9. '   ' → logprob: -17.62708282470703
    10. ')' → logprob: -17.75208282470703

Token 451: '+(' (ID: 31717)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.062431447207927704
    2. ' +' → logprob: -2.8124313354492188
    3. '+(' → logprob: -7.687431335449219
    4. '+self' → logprob: -12.562431335449219
    5. '+
' → logprob: -14.062431335449219
    6. ' +(' → logprob: -15.187431335449219
    7. ')' → logprob: -15.312431335449219
    8. ')+(' → logprob: -16.18743133544922
    9. '＋' → logprob: -16.18743133544922
    10. '+b' → logprob: -16.93743133544922

Token 452: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007647183374501765
    2. '(self' → logprob: -7.250764846801758
    3. ' self' → logprob: -10.125764846801758
    4. 'Rotation' → logprob: -11.250764846801758
    5. 'Point' → logprob: -13.625764846801758
    6. 'rotation' → logprob: -15.750764846801758
    7. '(' → logprob: -16.125764846801758
    8. ' (' → logprob: -16.625764846801758
    9. 'Line' → logprob: -16.625764846801758
    10. '	self' → logprob: -17.250764846801758

Token 453: '.a' (ID: 8772)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -7.171581091824919e-05
    2. 'b' → logprob: -9.62507152557373
    3. '.' → logprob: -12.37507152557373
    4. '.a' → logprob: -13.87507152557373
    5. '	b' → logprob: -15.75007152557373
    6. ' .' → logprob: -16.250072479248047
    7. '
' → logprob: -16.375072479248047
    8. ').' → logprob: -16.625072479248047
    9. '   ' → logprob: -17.125072479248047
    10. ',b' → logprob: -18.500072479248047

Token 454: '-self' (ID: 89352)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.04901379346847534
    2. '-' → logprob: -3.79901385307312
    3. ' -' → logprob: -3.79901385307312
    4. '-self' → logprob: -5.924013614654541
    5. 'b' → logprob: -8.0490140914917
    6. 'self' → logprob: -10.5490140914917
    7. ' self' → logprob: -11.9240140914917
    8. '   ' → logprob: -11.9240140914917
    9. '-B' → logprob: -12.9240140914917
    10. '	b' → logprob: -13.1740140914917

Token 455: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -2.2246291337069124e-05
    2. 'b' → logprob: -10.750021934509277
    3. '	b' → logprob: -14.125021934509277
    4. '.' → logprob: -17.500022888183594
    5. '.a' → logprob: -19.000022888183594
    6. ',b' → logprob: -19.125022888183594
    7. ' б' → logprob: -19.250022888183594
    8. '_b' → logprob: -19.375022888183594
    9. ' b' → logprob: -19.625022888183594
    10. ')b' → logprob: -19.750022888183594

Token 456: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759735703468323
    2. ')' → logprob: -0.8259735703468323
    3. '))
' → logprob: -11.075973510742188
    4. ')))' → logprob: -11.700973510742188
    5. ')
' → logprob: -11.825973510742188
    6. ' ))' → logprob: -13.575973510742188
    7. ' )' → logprob: -14.075973510742188
    8. ')}' → logprob: -15.700973510742188
    9. '))

' → logprob: -16.200973510742188
    10. ')")' → logprob: -16.325973510742188

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3467194736003876
    2. ')' → logprob: -1.34671950340271
    3. '<|end|>' → logprob: -3.47171950340271
    4. ' ' → logprob: -7.471719264984131
    5. '    
' → logprob: -8.346719741821289
    6. '[' → logprob: -8.346719741821289
    7. '  ' → logprob: -8.596719741821289
    8. 'def' → logprob: -9.096719741821289
    9. '```' → logprob: -9.471719741821289
    10. '<|end|>' → logprob: -9.596719741821289

Token 458: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46946990489959717
    2. 'def' → logprob: -1.5944699048995972
    3. '   ' → logprob: -1.8444699048995972
    4. '<|end|>' → logprob: -4.844470024108887
    5. '#' (adapté à ' #') → logprob: -5.719470024108887
    6. ' ' → logprob: -7.344470024108887
    7. ' def' → logprob: -7.344470024108887
    8. '```' → logprob: -8.094470024108887
    9. '    
' → logprob: -8.594470024108887
    10. '<|end|>' → logprob: -9.344470024108887

Token 459: ' point' (ID: 2438)
  Prédit: 'proj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proj' → logprob: -1.5589253902435303
    2. 'def' → logprob: -1.6839253902435303
    3. 'cross' → logprob: -2.1839253902435303
    4. 'per' → logprob: -2.1839253902435303
    5. 'inter' → logprob: -2.4339253902435303
    6. 'vec' → logprob: -2.8089253902435303
    7. 'normal' → logprob: -3.3089253902435303
    8. 'vertical' → logprob: -3.3089253902435303
    9. 'dist' → logprob: -3.6839253902435303
    10. 'norm' → logprob: -3.9339253902435303

Token 460: 'を' (ID: 7277)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05908111110329628
    2. ')' → logprob: -3.8090810775756836
    3. ',' → logprob: -3.8090810775756836
    4. ' def' → logprob: -5.684081077575684
    5. 'を' → logprob: -5.809081077575684
    6. 'from' → logprob: -6.559081077575684
    7. '.' → logprob: -6.934081077575684
    8. 'から' → logprob: -7.184081077575684
    9. '<|end|>' → logprob: -7.434081077575684
    10. ':' → logprob: -7.434081077575684

Token 461: '通' (ID: 9034)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.9052820205688477
    2. 'par' → logprob: -1.0302820205688477
    3. 'parallel' → logprob: -2.4052820205688477
    4. 'def' → logprob: -2.7802820205688477
    5. 'point' → logprob: -3.1552820205688477
    6. 'pass' → logprob: -3.6552820205688477
    7. 'passed' → logprob: -5.405282020568848
    8. 'passing' → logprob: -5.655282020568848
    9. 'Line' → logprob: -6.155282020568848
    10. '(Point' → logprob: -6.405282020568848

Token 462: 'って' (ID: 30677)
  Prédit: 'って'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'って' → logprob: -0.47141802310943604
    2. '       ' → logprob: -1.971418023109436
    3. 'る' → logprob: -2.5964179039001465
    4. '   ' → logprob: -2.8464179039001465
    5. 'def' → logprob: -3.2214179039001465
    6. '1' → logprob: -3.5964179039001465
    7. '2' → logprob: -4.4714179039001465
    8. 'point' → logprob: -5.5964179039001465
    9. '0' → logprob: -5.7214179039001465
    10. '(' → logprob: -5.9714179039001465

Token 463: '�' (ID: 13493)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19355037808418274
    2. 'point' → logprob: -2.3185503482818604
    3. 'par' → logprob: -3.5685503482818604
    4. '(self' → logprob: -3.8185503482818604
    5. ' self' → logprob: -4.1935505867004395
    6. 'Line' → logprob: -5.6935505867004395
    7. '   ' → logprob: -6.5685505867004395
    8. 'line' → logprob: -6.8185505867004395
    9. ' (' → logprob: -7.1935505867004395
    10. 'parallel' → logprob: -7.1935505867004395

Token 464: '�' (ID: 224)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.9147546887397766
    2. 'point' → logprob: -0.9147546887397766
    3. '(point' → logprob: -2.414754629135132
    4. 'self' → logprob: -3.539754629135132
    5. 'Point' → logprob: -4.039754867553711
    6. '...' → logprob: -4.289754867553711
    7. 'Line' → logprob: -4.414754867553711
    8. 't' → logprob: -4.664754867553711
    9. '(' → logprob: -4.789754867553711
    10. ' line' → logprob: -6.039754867553711

Token 465: '直' (ID: 9455)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5001785755157471
    2. 'point' → logprob: -1.875178575515747
    3. 'Line' → logprob: -2.500178575515747
    4. ' point' → logprob: -2.625178575515747
    5. ' self' → logprob: -3.375178575515747
    6. 'Point' → logprob: -4.000178337097168
    7. 'b' → logprob: -5.250178337097168
    8. ' Line' → logprob: -5.375178337097168
    9. '(point' → logprob: -5.375178337097168
    10. 't' → logprob: -5.625178337097168

Token 466: '
' (ID: 198)
  Prédit: '線'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '線' → logprob: -0.23140622675418854
    2. 'ル' → logprob: -2.9814062118530273
    3. '角' → logprob: -3.4814062118530273
    4. 'r' → logprob: -4.106406211853027
    5. 'ーク' → logprob: -4.356406211853027
    6. '立' → logprob: -4.856406211853027
    7. '线' → logprob: -5.106406211853027
    8. 'ン' → logprob: -5.106406211853027
    9. 'ラ' → logprob: -5.231406211853027
    10. '平' → logprob: -5.356406211853027

Token 467: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33855140209198
    2. 'る' → logprob: -2.8385515213012695
    3. 'self' → logprob: -3.2135515213012695
    4. 't' → logprob: -3.9635515213012695
    5. 'point' → logprob: -3.9635515213012695
    6. 'per' → logprob: -4.2135515213012695
    7. ' def' → logprob: -4.4635515213012695
    8. 'Line' → logprob: -4.5885515213012695
    9. 'cept' → logprob: -4.9635515213012695
    10. '   ' → logprob: -4.9635515213012695

Token 468: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6084969639778137
    2. 'per' → logprob: -1.358496904373169
    3. 't' → logprob: -2.858496904373169
    4. ' def' → logprob: -3.483496904373169
    5. 'f' → logprob: -3.608496904373169
    6. '   ' → logprob: -4.108497142791748
    7. 'point' → logprob: -4.358497142791748
    8. 'p' → logprob: -4.608497142791748
    9. 'ef' → logprob: -4.733497142791748
    10. ' ' → logprob: -4.983497142791748

Token 469: ' tan' (ID: 8323)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.3738330006599426
    2. 'ver' → logprob: -1.3738329410552979
    3. 'vert' → logprob: -3.998832941055298
    4. 'vertical' → logprob: -4.498833179473877
    5. 'rev' → logprob: -4.998833179473877
    6. '\xe5\x9e' → logprob: -5.123833179473877
    7. 'orth' → logprob: -5.748833179473877
    8. 'v' → logprob: -5.748833179473877
    9. 'norm' → logprob: -6.123833179473877
    10. 'normal' → logprob: -6.248833179473877

Token 470: '(self' (ID: 2402)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.18878938257694244
    2. 'gent' → logprob: -2.0637893676757812
    3. 'def' → logprob: -3.6887893676757812
    4. '   ' → logprob: -4.188789367675781
    5. '       ' → logprob: -6.188789367675781
    6. '(point' → logprob: -6.938789367675781
    7. ' def' → logprob: -7.188789367675781
    8. 'angent' → logprob: -8.563789367675781
    9. 't' → logprob: -8.938789367675781
    10. 'gen' → logprob: -9.563789367675781

Token 471: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0675608441233635
    2. 'def' → logprob: -3.692560911178589
    3. 'self' → logprob: -3.942560911178589
    4. '   ' → logprob: -4.94256067276001
    5. 'point' → logprob: -6.06756067276001
    6. '(point' → logprob: -6.19256067276001
    7. 'n' → logprob: -6.81756067276001
    8. 'angent' → logprob: -6.94256067276001
    9. 'g' → logprob: -7.06756067276001
    10. ' (' → logprob: -7.06756067276001

Token 472: ' point' (ID: 2438)
  Prédit: ' point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.47679048776626587
    2. 'point' → logprob: -0.9767904877662659
    3. 'Point' → logprob: -6.726790428161621
    4. 'self' → logprob: -6.851790428161621
    5. ' Point' → logprob: -8.476790428161621
    6. ' self' → logprob: -8.726790428161621
    7. '(point' → logprob: -10.476790428161621
    8. '_point' → logprob: -11.101790428161621
    9. '	point' → logprob: -11.101790428161621
    10. '   ' → logprob: -11.726790428161621

Token 473: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2810222804546356
    2. '       ' → logprob: -1.531022310256958
    3. ',' → logprob: -4.781022071838379
    4. 'self' → logprob: -4.906022071838379
    5. '(self' → logprob: -5.406022071838379
    6. '   ' → logprob: -5.531022071838379
    7. '):' → logprob: -5.781022071838379
    8. ')' → logprob: -7.531022071838379
    9. '
' → logprob: -8.531022071838379
    10. ')
' → logprob: -9.031022071838379

Token 474: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2451520562171936
    2. ' return' → logprob: -1.9951519966125488
    3. 'v' → logprob: -3.495151996612549
    4. '       ' → logprob: -4.245151996612549
    5. 'd' → logprob: -4.495151996612549
    6. 'vec' → logprob: -4.870151996612549
    7. '   ' → logprob: -5.120151996612549
    8. 'n' → logprob: -6.120151996612549
    9. 'dir' → logprob: -6.370151996612549
    10. 'direction' → logprob: -6.745151996612549

Token 475: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0199983362108469
    2. 'v' → logprob: -4.894998550415039
    3. 'vec' → logprob: -5.269998550415039
    4. 'd' → logprob: -6.394998550415039
    5. 'dir' → logprob: -6.394998550415039
    6. 'diff' → logprob: -7.019998550415039
    7. 'vector' → logprob: -7.394998550415039
    8. ' return' → logprob: -7.519998550415039
    9. 'direction' → logprob: -7.769998550415039
    10. '       ' → logprob: -7.769998550415039

Token 476: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.05168537050485611
    2. 'self' → logprob: -3.426685333251953
    3. ' Line' → logprob: -4.051685333251953
    4. ' self' → logprob: -7.676685333251953
    5. '(Line' → logprob: -12.301685333251953
    6. '   ' → logprob: -12.551685333251953
    7. 'Lin' → logprob: -12.676685333251953
    8. 'Point' → logprob: -13.176685333251953
    9. 'L' → logprob: -13.676685333251953
    10. ' ' → logprob: -13.801685333251953

Token 477: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -9.472211968386546e-05
    2. '(Point' → logprob: -9.875094413757324
    3. '(Line' → logprob: -10.750094413757324
    4. '(' → logprob: -11.000094413757324
    5. 'point' → logprob: -13.375094413757324
    6. '(self' → logprob: -13.375094413757324
    7. '(line' → logprob: -13.875094413757324
    8. 'Point' → logprob: -15.375094413757324
    9. '	point' → logprob: -16.12509536743164
    10. '(t' → logprob: -16.25009536743164

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.836499985889532e-05
    2. '+' → logprob: -11.2500581741333
    3. ' ,' → logprob: -11.2500581741333
    4. 'Rotation' → logprob: -11.5000581741333
    5. ' +' → logprob: -11.6250581741333
    6. ',
' → logprob: -12.2500581741333
    7. ',R' → logprob: -12.8750581741333
    8. '   ' → logprob: -13.8750581741333
    9. 'Rot' → logprob: -14.0000581741333
    10. ',(' → logprob: -14.1250581741333

Token 479: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0006111674592830241
    2. 'Point' → logprob: -7.750611305236816
    3. ' point' → logprob: -8.625611305236816
    4. '	point' → logprob: -14.750611305236816
    5. '(point' → logprob: -15.000611305236816
    6. '   ' → logprob: -16.1256103515625
    7. ' Point' → logprob: -17.6256103515625
    8. '_point' → logprob: -17.6256103515625
    9. '```' → logprob: -18.0006103515625
    10. 'punkt' → logprob: -18.1256103515625

Token 480: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011690518818795681
    2. '+(' → logprob: -4.636690616607666
    3. ' +' → logprob: -6.261690616607666
    4. 'Rotation' → logprob: -11.511690139770508
    5. '+
' → logprob: -12.386690139770508
    6. '+self' → logprob: -13.261690139770508
    7. '-' → logprob: -13.386690139770508
    8. '＋' → logprob: -13.386690139770508
    9. '-R' → logprob: -14.136690139770508
    10. '   ' → logprob: -14.511690139770508

Token 481: ' Rotation' (ID: 98033)
  Prédit: 'Rotation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rotation' → logprob: -0.014564438723027706
    2. 'Point' → logprob: -4.264564514160156
    3. ' Rotation' → logprob: -8.139564514160156
    4. '(Point' → logprob: -9.389564514160156
    5. 'Vector' → logprob: -12.139564514160156
    6. 'vec' → logprob: -12.639564514160156
    7. 'Rot' → logprob: -12.764564514160156
    8. 'self' → logprob: -12.764564514160156
    9. 'rotation' → logprob: -12.889564514160156
    10. '(self' → logprob: -13.264564514160156

Token 482: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000912774819880724
    2. '((' → logprob: -7.000912666320801
    3. 'self' → logprob: -13.8759126663208
    4. '(' → logprob: -15.2509126663208
    5. ' (' → logprob: -16.625913619995117
    6. '(Point' → logprob: -17.250913619995117
    7. '(((' → logprob: -18.000913619995117
    8. '(Line' → logprob: -18.625913619995117
    9. ' self' → logprob: -19.625913619995117
    10. '(Vector' → logprob: -19.625913619995117

Token 483: '.a' (ID: 8772)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13391031324863434
    2. '(self' → logprob: -2.1339104175567627
    3. ' self' → logprob: -5.008910179138184
    4. ' (' → logprob: -8.883910179138184
    5. 'a' → logprob: -9.758910179138184
    6. '(a' → logprob: -9.758910179138184
    7. '((' → logprob: -11.758910179138184
    8. 'Vector' → logprob: -12.508910179138184
    9. 'Line' → logprob: -12.758910179138184
    10. 'Point' → logprob: -12.758910179138184

Token 484: '-self' (ID: 89352)
  Prédit: '-self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-self' → logprob: -0.19009605050086975
    2. '-' → logprob: -2.190096139907837
    3. '-b' → logprob: -3.440096139907837
    4. ' -' → logprob: -3.565096139907837
    5. ' self' → logprob: -7.315095901489258
    6. 'self' → logprob: -8.940095901489258
    7. '-t' → logprob: -10.315095901489258
    8. '-p' → logprob: -11.565095901489258
    9. '-s' → logprob: -11.565095901489258
    10. 'b' → logprob: -13.815095901489258

Token 485: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.014221328310668468
    2. 'b' → logprob: -4.26422119140625
    3. '-b' → logprob: -9.88922119140625
    4. '.' → logprob: -12.76422119140625
    5. ' b' → logprob: -13.26422119140625
    6. '	b' → logprob: -13.88922119140625
    7. ',b' → logprob: -14.51422119140625
    8. '_b' → logprob: -14.63922119140625
    9. 'self' → logprob: -15.63922119140625
    10. '-' → logprob: -15.63922119140625

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.642081618309021
    2. '(pi' → logprob: -0.767081618309021
    3. '(' → logprob: -5.1420817375183105
    4. '(Point' → logprob: -6.5170817375183105
    5. 'pi' → logprob: -7.1420817375183105
    6. ' (' → logprob: -7.5170817375183105
    7. ' ,' → logprob: -7.6420817375183105
    8. ',(' → logprob: -9.267081260681152
    9. ' pi' → logprob: -10.517081260681152
    10. ')' → logprob: -10.642081260681152

Token 487: ' pi' (ID: 6404)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.0067405966110527515
    2. ' pi' → logprob: -5.006740570068359
    3. '(pi' → logprob: -11.38174057006836
    4. '-p' → logprob: -12.25674057006836
    5. '.pi' → logprob: -12.38174057006836
    6. '/pi' → logprob: -13.38174057006836
    7. '*pi' → logprob: -13.50674057006836
    8. 'frac' → logprob: -14.00674057006836
    9. ' ' → logprob: -15.25674057006836
    10. '-' → logprob: -15.25674057006836

Token 488: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -6.146429223008454e-05
    2. ' /' → logprob: -9.75006103515625
    3. '*' → logprob: -13.25006103515625
    4. ')' → logprob: -14.75006103515625
    5. '2' → logprob: -15.00006103515625
    6. '   ' → logprob: -15.37506103515625
    7. ' ' → logprob: -16.25006103515625
    8. '90' → logprob: -16.37506103515625
    9. '()/' → logprob: -16.50006103515625
    10. '/
' → logprob: -17.00006103515625

Token 489: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.625008583068848
    4. '
' → logprob: -17.37500762939453
    5. '```' → logprob: -17.75000762939453
    6. '２' → logprob: -18.75000762939453
    7. '/' → logprob: -19.25000762939453
    8. '  ' → logprob: -19.50000762939453
    9. '{' → logprob: -19.75000762939453
    10. '۲' → logprob: -19.87500762939453

Token 490: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.000491672137286514
    2. '()))' → logprob: -8.375492095947266
    3. ')' → logprob: -8.500492095947266
    4. '))
' → logprob: -10.375492095947266
    5. ')))' → logprob: -11.250492095947266
    6. ' ))' → logprob: -11.875492095947266
    7. '()' → logprob: -12.625492095947266
    8. '2' → logprob: -14.250492095947266
    9. '(' → logprob: -14.375492095947266
    10. ' ' → logprob: -14.875492095947266

Token 491: 'class' (ID: 1444)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8538522124290466
    2. '\n' → logprob: -0.8538522124290466
    3. '<|end|>' → logprob: -2.8538522720336914
    4. '#' → logprob: -3.1038522720336914
    5. '
' → logprob: -3.3538522720336914
    6. '\' → logprob: -5.478852272033691
    7. '  
' → logprob: -6.353852272033691
    8. ')
' → logprob: -6.853852272033691
    9. '    
' → logprob: -7.728852272033691
    10. 'n' → logprob: -7.978852272033691

Token 492: ' Segment' (ID: 64922)
  Prédit: ' Polygon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Polygon' → logprob: -0.4590487778186798
    2. ' Point' → logprob: -2.0840487480163574
    3. ' Triangle' → logprob: -2.5840487480163574
    4. 'Polygon' → logprob: -2.8340487480163574
    5. 'Point' → logprob: -3.8340487480163574
    6. ' Segment' → logprob: -3.8340487480163574
    7. 'Segment' → logprob: -4.084048748016357
    8. ' Circle' → logprob: -4.709048748016357
    9. ' Vector' → logprob: -4.709048748016357
    10. ' Rectangle' → logprob: -5.084048748016357

Token 493: '(Line' (ID: 170362)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00018863992590922862
    2. '():
' → logprob: -8.750188827514648
    3. '()' → logprob: -10.875188827514648
    4. '(' → logprob: -12.625188827514648
    5. ' ():' → logprob: -12.875188827514648
    6. '(Line' → logprob: -13.000188827514648
    7. ':' → logprob: -13.375188827514648
    8. '():

' → logprob: -14.625188827514648
    9. '().__' → logprob: -15.000188827514648
    10. '()(' → logprob: -15.375188827514648

Token 494: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16098542511463165
    2. '):' → logprob: -1.9109854698181152
    3. '()):
' → logprob: -7.535985469818115
    4. '()' → logprob: -8.910984992980957
    5. '():
' → logprob: -9.910984992980957
    6. '):
' → logprob: -10.785984992980957
    7. '():' → logprob: -11.660984992980957
    8. ')' → logprob: -12.160984992980957
    9. '):

' → logprob: -12.285984992980957
    10. '   ' → logprob: -13.410984992980957

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12534630298614502
    2. '()' → logprob: -2.7503461837768555
    3. 'def' → logprob: -4.0003461837768555
    4. ')' → logprob: -4.6253461837768555
    5. ' def' → logprob: -4.7503461837768555
    6. '):' → logprob: -5.0003461837768555
    7. '):
' → logprob: -5.5003461837768555
    8. '():' → logprob: -6.0003461837768555
    9. '():
' → logprob: -6.1253461837768555
    10. '())' → logprob: -7.8753461837768555

Token 496: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2467808872461319
    2. ' def' → logprob: -1.9967808723449707
    3. '   ' → logprob: -2.4967808723449707
    4. '#' → logprob: -7.746780872344971
    5. '	def' → logprob: -9.871781349182129
    6. ' ' → logprob: -10.371781349182129
    7. ' pass' → logprob: -10.871781349182129
    8. '  ' → logprob: -11.496781349182129
    9. 'pass' → logprob: -11.496781349182129
    10. ')' → logprob: -12.871781349182129

Token 497: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0067540407180786
    2. 'def' → logprob: -1.2567540407180786
    3. ' __' → logprob: -1.6317540407180786
    4. ' def' → logprob: -1.8817540407180786
    5. 'init' → logprob: -6.631753921508789
    6. ' ' → logprob: -8.006753921508789
    7. '_init' → logprob: -8.756753921508789
    8. '   ' → logprob: -8.881753921508789
    9. '.__' → logprob: -9.631753921508789
    10. '__(' → logprob: -10.381753921508789

Token 498: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.5776860184123507e-06
    2. 'def' → logprob: -13.62500286102295
    3. 'int' → logprob: -14.75000286102295
    4. '__' → logprob: -15.00000286102295
    5. 'sub' → logprob: -16.000001907348633
    6. '```' → logprob: -16.000001907348633
    7. '(init' → logprob: -16.875001907348633
    8. '   ' → logprob: -17.250001907348633
    9. '_init' → logprob: -17.375001907348633
    10. 'ini' → logprob: -17.750001907348633

Token 499: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -7.588793960167095e-05
    2. '(self' → logprob: -9.625076293945312
    3. '__' → logprob: -11.875076293945312
    4. '_(' → logprob: -13.250076293945312
    5. '(' → logprob: -14.250076293945312
    6. 'self' → logprob: -15.000076293945312
    7. '__(
' → logprob: -16.375076293945312
    8. '   ' → logprob: -16.875076293945312
    9. '__((' → logprob: -17.500076293945312
    10. ' (' → logprob: -17.750076293945312

Token 500: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7252845029579476e-05
    2. ' self' → logprob: -10.625027656555176
    3. '   ' → logprob: -13.375027656555176
    4. ',' → logprob: -14.500027656555176
    5. '(self' → logprob: -15.250027656555176
    6. 'a' → logprob: -15.500027656555176
    7. ')' → logprob: -16.12502670288086
    8. ',self' → logprob: -16.37502670288086
    9. '__' → logprob: -16.50002670288086
    10. ').__' → logprob: -16.62502670288086

Token 501: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029896501451730728
    2. 'self' → logprob: -3.5298964977264404
    3. ',self' → logprob: -9.52989673614502
    4. '(self' → logprob: -10.02989673614502
    5. ' self' → logprob: -11.27989673614502
    6. '   ' → logprob: -11.52989673614502
    7. ' ,' → logprob: -12.40489673614502
    8. '       ' → logprob: -13.27989673614502
    9. ',
' → logprob: -15.52989673614502
    10. '__,' → logprob: -15.77989673614502

Token 502: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6519520282745361
    2. 'a' → logprob: -0.7769520282745361
    3. ' self' → logprob: -4.151951789855957
    4. ' a' → logprob: -5.776951789855957
    5. '   ' → logprob: -8.151951789855957
    6. ',' → logprob: -10.776951789855957
    7. ' ' → logprob: -12.026951789855957
    8. 's' → logprob: -12.276951789855957
    9. '       ' → logprob: -12.526951789855957
    10. '  ' → logprob: -13.401951789855957

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4736459888808895e-05
    2. ' ,' → logprob: -11.250014305114746
    3. ',b' → logprob: -14.000014305114746
    4. ',a' → logprob: -14.875014305114746
    5. '   ' → logprob: -15.750014305114746
    6. ',self' → logprob: -16.125015258789062
    7. 'self' → logprob: -16.250015258789062
    8. ',
' → logprob: -17.000015258789062
    9. '),' → logprob: -17.125015258789062
    10. '       ' → logprob: -18.000015258789062

Token 504: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029751067981123924
    2. ' b' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.27975082397461
    4. '	b' → logprob: -15.40475082397461
    5. ' ' → logprob: -17.15475082397461
    6. '       ' → logprob: -17.15475082397461
    7. '    ' → logprob: -17.40475082397461
    8. ' б' → logprob: -18.27975082397461
    9. 'a' → logprob: -19.02975082397461
    10. ')b' → logprob: -19.27975082397461

Token 505: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014275742694735527
    2. '):' → logprob: -4.264275550842285
    3. '       ' → logprob: -9.389275550842285
    4. ')' → logprob: -11.139275550842285
    5. '   ' → logprob: -11.889275550842285
    6. '):
' → logprob: -12.014275550842285
    7. '):

' → logprob: -15.014275550842285
    8. ',' → logprob: -15.139275550842285
    9. 'self' → logprob: -15.764275550842285
    10. ' ):
' → logprob: -16.1392765045166

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0320916585624218
    2. ' super' → logprob: -4.0320916175842285
    3. 'super' → logprob: -4.2820916175842285
    4. '	super' → logprob: -11.032092094421387
    5. '   ' → logprob: -11.282092094421387
    6. '	' → logprob: -13.907092094421387
    7. '(super' → logprob: -15.032092094421387
    8. 'Super' → logprob: -15.282092094421387
    9. '     ' → logprob: -15.282092094421387
    10. 'def' → logprob: -15.407092094421387

Token 507: ' super' (ID: 2539)
  Prédit: 'super'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'super' (adapté à ' super') → logprob: -0.0022219838574528694
    2. '       ' → logprob: -6.502222061157227
    3. ' super' → logprob: -7.252222061157227
    4. 'self' → logprob: -11.502222061157227
    5. 'Line' → logprob: -14.877222061157227
    6. '   ' → logprob: -15.377222061157227
    7. '	super' → logprob: -15.627222061157227
    8. '(super' → logprob: -17.377222061157227
    9. '     ' → logprob: -18.502222061157227
    10. 'Super' → logprob: -19.252222061157227

Token 508: '().__' (ID: 57377)
  Prédit: '().__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().__' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -15.875
    3. ').__' → logprob: -16.625
    4. '().' → logprob: -17.125
    5. '(S' → logprob: -17.625
    6. '__' → logprob: -19.375
    7. '.__' → logprob: -19.5
    8. '(' → logprob: -20.25
    9. '()).' → logprob: -21.5
    10. '```' → logprob: -22.625

Token 509: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0006359508261084557
    2. '__' → logprob: -7.750636100769043
    3. '_init' → logprob: -8.500636100769043
    4. '(init' → logprob: -13.500636100769043
    5. '```' → logprob: -16.250635147094727
    6. '___' → logprob: -16.250635147094727
    7. '_' → logprob: -16.375635147094727
    8. 'def' → logprob: -16.500635147094727
    9. '__(' → logprob: -17.000635147094727
    10. 'class' → logprob: -17.125635147094727

Token 510: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4016956090927124
    2. '(a' → logprob: -1.1516956090927124
    3. '().__' → logprob: -4.776695728302002
    4. '(self' → logprob: -5.276695728302002
    5. '(' → logprob: -7.651695728302002
    6. '()(' → logprob: -8.026695251464844
    7. '()' → logprob: -8.651695251464844
    8. '__' → logprob: -8.776695251464844
    9. '(A' → logprob: -10.901695251464844
    10. '```' → logprob: -11.151695251464844

Token 511: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1472419600977446e-06
    2. ' a' → logprob: -14.500000953674316
    3. 'self' → logprob: -14.875000953674316
    4. '   ' → logprob: -15.875000953674316
    5. ')a' → logprob: -16.500001907348633
    6. ')' → logprob: -17.000001907348633
    7. '	a' → logprob: -18.250001907348633
    8. 'а' → logprob: -18.500001907348633
    9. '
' → logprob: -19.500001907348633
    10. '(a' → logprob: -19.625001907348633

Token 512: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005639957962557673
    2. ',b' → logprob: -7.500564098358154
    3. ' ,' → logprob: -11.875563621520996
    4. 'b' → logprob: -12.500563621520996
    5. ' b' → logprob: -15.625563621520996
    6. ',
' → logprob: -16.875564575195312
    7. '   ' → logprob: -17.625564575195312
    8. ')' → logprob: -18.125564575195312
    9. '),' → logprob: -19.125564575195312
    10. ',B' → logprob: -19.500564575195312

Token 513: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. ')b' → logprob: -17.125553131103516
    4. '   ' → logprob: -17.625553131103516
    5. '	b' → logprob: -18.125553131103516
    6. ' ' → logprob: -18.875553131103516
    7. '       ' → logprob: -19.250553131103516
    8. ')' → logprob: -19.375553131103516
    9. '    ' → logprob: -19.875553131103516
    10. '(b' → logprob: -20.500553131103516

Token 514: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47412243485450745
    2. ')' → logprob: -0.9741224050521851
    3. '       ' → logprob: -10.599122047424316
    4. ')
' → logprob: -10.974122047424316
    5. ')

' → logprob: -13.974122047424316
    6. '<|end|>' → logprob: -14.099122047424316
    7. ' )
' → logprob: -14.599122047424316
    8. '   ' → logprob: -14.849122047424316
    9. ' )' → logprob: -15.849122047424316
    10. ')#' → logprob: -15.849122047424316

Token 515: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3240264654159546
    2. '<|end|>' → logprob: -1.4490264654159546
    3. '       ' → logprob: -3.574026584625244
    4. '<|end|>' → logprob: -5.074026584625244
    5. 'def' → logprob: -6.199026584625244
    6. '
' → logprob: -6.449026584625244
    7. '    
' → logprob: -6.699026584625244
    8. ')' → logprob: -7.199026584625244
    9. '#' → logprob: -7.324026584625244
    10. '    ' → logprob: -8.199026107788086

Token 516: ' �' (ID: 3637)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1834994554519653
    2. ')' → logprob: -1.4334994554519653
    3. ' ' → logprob: -1.4334994554519653
    4. '<|end|>' → logprob: -2.308499336242676
    5. '    ' → logprob: -3.683499336242676
    6. '
' → logprob: -4.183499336242676
    7. '<|end|>' → logprob: -4.183499336242676
    8. '\n' → logprob: -4.433499336242676
    9. '#' → logprob: -5.183499336242676
    10. '  ' → logprob: -5.433499336242676

Token 517: '�' (ID: 105)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -1.0297285318374634
    2. 'def' → logprob: -1.1547285318374634
    3. 'b' → logprob: -1.6547285318374634
    4. 'ndef' → logprob: -4.029728412628174
    5. '#' → logprob: -4.279728412628174
    6. 'd' → logprob: -4.529728412628174
    7. 'r' → logprob: -4.529728412628174
    8. '   ' → logprob: -4.529728412628174
    9. '<|end|>' → logprob: -5.029728412628174
    10. 'class' → logprob: -5.092228412628174

Token 518: '�' (ID: 99)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9126071333885193
    2. '   ' → logprob: -2.162607192993164
    3. ')' → logprob: -2.287607192993164
    4. ' ' → logprob: -2.537607192993164
    5. 'n' → logprob: -3.412607192993164
    6. '<|end|>' → logprob: -3.412607192993164
    7. 'def' → logprob: -3.537607192993164
    8. '=' → logprob: -3.787607192993164
    9. ' def' → logprob: -4.037607192993164
    10. '\' → logprob: -4.287607192993164

Token 519: '号' (ID: 4785)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9089778065681458
    2. 'def' → logprob: -0.9089778065681458
    3. '#' → logprob: -2.408977746963501
    4. '   ' → logprob: -2.658977746963501
    5. ' #' → logprob: -4.28397798538208
    6. ' ' → logprob: -5.53397798538208
    7. 'class' → logprob: -5.65897798538208
    8. ')' → logprob: -6.59647798538208
    9. ' pass' → logprob: -6.90897798538208
    10. '  ' → logprob: -7.09647798538208

Token 520: '付き' (ID: 137416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02542300708591938
    2. 'def' → logprob: -4.275423049926758
    3. '<|end|>' → logprob: -6.900423049926758
    4. ' ' → logprob: -7.025423049926758
    5. ')' → logprob: -7.400423049926758
    6. '*' → logprob: -7.525423049926758
    7. 'class' → logprob: -7.525423049926758
    8. ' #' → logprob: -7.525423049926758
    9. ' def' → logprob: -7.712923049926758
    10. '\' → logprob: -7.712923049926758

Token 521: '面' (ID: 9961)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.23455770313739777
    2. '+' → logprob: -2.734557628631592
    3. '   ' → logprob: -2.734557628631592
    4. '\t' → logprob: -4.109557628631592
    5. 'def' → logprob: -4.609557628631592
    6. '*' → logprob: -5.609557628631592
    7. '\' → logprob: -5.609557628631592
    8. '-' → logprob: -5.734557628631592
    9. '\u' → logprob: -5.734557628631592
    10. ' def' → logprob: -5.859557628631592

Token 522: '積' (ID: 91483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33073630928993225
    2. 'class' → logprob: -1.3307362794876099
    3. '#' → logprob: -4.58073616027832
    4. ' def' → logprob: -6.08073616027832
    5. '"""
' → logprob: -6.20573616027832
    6. '"""' → logprob: -6.95573616027832
    7. 'from' → logprob: -7.33073616027832
    8. ' class' → logprob: -7.83073616027832
    9. '   ' → logprob: -9.08073616027832
    10. 'import' → logprob: -9.45573616027832

Token 523: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003444024478085339
    2. ' def' → logprob: -8.125344276428223
    3. 'd' → logprob: -10.625344276428223
    4. '
' → logprob: -11.500344276428223
    5. '"""
' → logprob: -12.875344276428223
    6. '#' → logprob: -13.000344276428223
    7. '\' → logprob: -13.500344276428223
    8. ' 
' → logprob: -13.750344276428223
    9. ')' → logprob: -13.875344276428223
    10. 'de' → logprob: -13.875344276428223

Token 524: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.625
    3. '#' → logprob: -17.875
    4. 'from' → logprob: -19.875
    5. ')' → logprob: -20.625
    6. '
' → logprob: -20.875
    7. '   ' → logprob: -21.5
    8. ':def' → logprob: -21.625
    9. '	def' → logprob: -22.0
    10. '(def' → logprob: -22.125

Token 525: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.7983180284500122
    2. 'signed' → logprob: -1.9233180284500122
    3. 'Cross' → logprob: -2.0483179092407227
    4. 'Signed' → logprob: -2.9233179092407227
    5. 'sho' → logprob: -3.0483179092407227
    6. 'Polygon' → logprob: -3.1733179092407227
    7. 'polygon' → logprob: -3.1733179092407227
    8. 'area' → logprob: -4.173317909240723
    9. 'cc' → logprob: -4.423317909240723
    10. 'triangle' → logprob: -4.798317909240723

Token 526: '(vec' (ID: 57650)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.005204708781093359
    2. '(A' → logprob: -6.630204677581787
    3. '(vec' → logprob: -6.755204677581787
    4. '(v' → logprob: -6.755204677581787
    5. '(p' → logprob: -7.130204677581787
    6. '(o' → logprob: -7.630204677581787
    7. '(u' → logprob: -8.880205154418945
    8. '(ax' → logprob: -10.130205154418945
    9. '(z' → logprob: -10.880205154418945
    10. '((' → logprob: -11.505205154418945

Token 527: '1' (ID: 16)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.11517257243394852
    2. '(vec' → logprob: -2.7401726245880127
    3. '):' → logprob: -4.115172386169434
    4. 'vec' → logprob: -4.615172386169434
    5. 'a' → logprob: -5.740172386169434
    6. ',' → logprob: -5.865172386169434
    7. '):
' → logprob: -5.990172386169434
    8. '1' → logprob: -6.115172386169434
    9. 'A' → logprob: -6.490172386169434
    10. '(v' → logprob: -7.115172386169434

Token 528: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011803467059507966
    2. ' ,' → logprob: -6.751180171966553
    3. ':' → logprob: -12.626180648803711
    4. 'vec' → logprob: -12.751180648803711
    5. '(vec' → logprob: -13.376180648803711
    6. '   ' → logprob: -14.376180648803711
    7. 'def' → logprob: -14.501180648803711
    8. '1' → logprob: -14.751180648803711
    9. ',
' → logprob: -15.751180648803711
    10. '_,' → logprob: -15.876180648803711

Token 529: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.01815708540380001
    2. ' Point' → logprob: -4.018157005310059
    3. 'Vector' → logprob: -12.893157005310059
    4. '	Point' → logprob: -13.268157005310059
    5. 'vec' → logprob: -13.393157005310059
    6. '(Point' → logprob: -14.393157005310059
    7. 'Vec' → logprob: -15.268157005310059
    8. '_Point' → logprob: -15.393157005310059
    9. '<Point' → logprob: -15.643157005310059
    10. '_point' → logprob: -15.893157005310059

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001818489981815219
    2. ' ,' → logprob: -8.625182151794434
    3. '   ' → logprob: -14.000182151794434
    4. ',
' → logprob: -14.125182151794434
    5. 'vec' → logprob: -15.000182151794434
    6. 'def' → logprob: -16.500181198120117
    7. '(vec' → logprob: -16.625181198120117
    8. '‌,' → logprob: -17.125181198120117
    9. '  ' → logprob: -17.625181198120117
    10. '，' → logprob: -17.750181198120117

Token 531: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.6931723952293396
    2. ' vec' → logprob: -0.6931723952293396
    3. '	vec' → logprob: -10.818172454833984
    4. '   ' → logprob: -13.193172454833984
    5. '(vec' → logprob: -13.693172454833984
    6. ' ' → logprob: -13.818172454833984
    7. 'vector' → logprob: -15.443172454833984
    8. ' vector' → logprob: -15.943172454833984
    9. 'Vec' → logprob: -15.943172454833984
    10. '_vec' → logprob: -16.068172454833984

Token 532: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038044244050979614
    2. '2' → logprob: -3.2880442142486572
    3. '):' → logprob: -13.663043975830078
    4. ',' → logprob: -14.413043975830078
    5. '):
' → logprob: -14.788043975830078
    6. ' ' → logprob: -15.288043975830078
    7. ')' → logprob: -16.038043975830078
    8. '0' → logprob: -16.538043975830078
    9. '(Point' → logprob: -16.538043975830078
    10. '   ' → logprob: -17.038043975830078

Token 533: ':' (ID: 25)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38782238960266113
    2. '):' → logprob: -1.1378223896026611
    3. ')' → logprob: -7.387822151184082
    4. '):
' → logprob: -8.262822151184082
    5. ' ):' → logprob: -10.512822151184082
    6. ' ):
' → logprob: -10.637822151184082
    7. '):

' → logprob: -11.637822151184082
    8. ')->' → logprob: -12.012822151184082
    9. ':' → logprob: -12.512822151184082
    10. ',' → logprob: -12.887822151184082

Token 534: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.2014186978340149
    2. ' Point' → logprob: -1.7014186382293701
    3. '	Point' → logprob: -12.95141887664795
    4. ' ' → logprob: -13.95141887664795
    5. '   ' → logprob: -14.20141887664795
    6. '(Point' → logprob: -14.45141887664795
    7. ')' → logprob: -14.82641887664795
    8. '_Point' → logprob: -15.82641887664795
    9. '):
' → logprob: -16.076417922973633
    10. '<Point' → logprob: -16.326417922973633

Token 535: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003280975390225649
    2. '):
' → logprob: -5.753281116485596
    3. ')' → logprob: -9.253280639648438
    4. '):
' → logprob: -12.378280639648438
    5. ' ):' → logprob: -13.628280639648438
    6. ')：' → logprob: -13.878280639648438
    7. '   ' → logprob: -14.753280639648438
    8. '):

' → logprob: -15.128280639648438
    9. ')->' → logprob: -15.503280639648438
    10. ':' → logprob: -16.003280639648438

Token 536: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020295155700296164
    2. 'return' → logprob: -6.2520294189453125
    3. ' return' → logprob: -9.502029418945312
    4. ':return' → logprob: -11.002029418945312
    5. ':' → logprob: -12.877029418945312
    6. '	return' → logprob: -13.002029418945312
    7. '(vec' → logprob: -14.002029418945312
    8. 'vec' → logprob: -14.127029418945312
    9. '  ' → logprob: -14.127029418945312
    10. ' ' → logprob: -14.752029418945312

Token 537: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006114058778621256
    2. ' return' → logprob: -8.000611305236816
    3. 'vec' → logprob: -8.625611305236816
    4. '   ' → logprob: -9.250611305236816
    5. '	return' → logprob: -15.500611305236816
    6. '```' → logprob: -16.375612258911133
    7. '(vec' → logprob: -17.000612258911133
    8. '
' → logprob: -17.250612258911133
    9. 'eturn' → logprob: -17.875612258911133
    10. ' vec' → logprob: -18.000612258911133

Token 538: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -1.2233183042553719e-05
    2. ' vec' → logprob: -11.875012397766113
    3. '(vec' → logprob: -12.250012397766113
    4. '	vec' → logprob: -15.375012397766113
    5. '   ' → logprob: -15.750012397766113
    6. '(' → logprob: -18.375011444091797
    7. '```' → logprob: -18.500011444091797
    8. 've' → logprob: -20.250011444091797
    9. 'Vec' → logprob: -20.375011444091797
    10. ' ' → logprob: -20.500011444091797

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.000000953674316
    3. 'vec' → logprob: -16.5
    4. '.x' → logprob: -17.125
    5. 'ector' → logprob: -17.75
    6. '```' → logprob: -18.25
    7. '１' → logprob: -18.5
    8. '.vec' → logprob: -19.0
    9. 'tor' → logprob: -19.0
    10. 's' → logprob: -19.25

Token 540: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.931863051955588e-05
    2. '.' → logprob: -9.750059127807617
    3. 'x' → logprob: -14.125059127807617
    4. ' .' → logprob: -15.375059127807617
    5. '.y' → logprob: -18.250059127807617
    6. '0' → logprob: -19.750059127807617
    7. '```' → logprob: -19.750059127807617
    8. '[' → logprob: -20.000059127807617
    9. '1' → logprob: -20.000059127807617
    10. '._' → logprob: -20.625059127807617

Token 541: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0024756586644798517
    2. ' *' → logprob: -6.002475738525391
    3. '*object' → logprob: -19.12747573852539
    4. '**' → logprob: -20.37747573852539
    5. 'vec' → logprob: -21.00247573852539
    6. '*(' → logprob: -21.87747573852539
    7. '*out' → logprob: -22.00247573852539
    8. '*self' → logprob: -22.00247573852539
    9. '＊' → logprob: -22.12747573852539
    10. '*v' → logprob: -22.62747573852539

Token 542: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -3.547789674485102e-05
    2. ' vec' → logprob: -10.250035285949707
    3. '	vec' → logprob: -17.000036239624023
    4. '(vec' → logprob: -18.500036239624023
    5. 'vector' → logprob: -19.750036239624023
    6. 've' → logprob: -21.250036239624023
    7. '.vec' → logprob: -21.250036239624023
    8. ' ' → logprob: -21.875036239624023
    9. 'vect' → logprob: -22.000036239624023
    10. '_vec' → logprob: -22.375036239624023

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. 'ctor' → logprob: -15.375000953674316
    3. '```' → logprob: -15.375000953674316
    4. '.y' → logprob: -15.750000953674316
    5. 'vec' → logprob: -16.125
    6. '1' → logprob: -16.625
    7. 'y' → logprob: -17.375
    8. 'tor' → logprob: -17.625
    9. 's' → logprob: -17.875
    10. '.' → logprob: -18.375

Token 544: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.500005722045898
    3. 'y' → logprob: -13.125005722045898
    4. ' .' → logprob: -15.750005722045898
    5. '.x' → logprob: -16.7500057220459
    6. ' y' → logprob: -18.2500057220459
    7. '	y' → logprob: -18.5000057220459
    8. ',y' → logprob: -19.3750057220459
    9. '.v' → logprob: -19.6250057220459
    10. '.py' → logprob: -19.7500057220459

Token 545: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31327635049819946
    2. '-' → logprob: -1.3132762908935547
    3. '-vector' → logprob: -11.313276290893555
    4. '-
' → logprob: -14.313276290893555
    5. ' -
' → logprob: -14.438276290893555
    6. '   ' → logprob: -15.688276290893555
    7. ' ' → logprob: -16.313276290893555
    8. ' ' → logprob: -16.313276290893555
    9. '-cross' → logprob: -16.563276290893555
    10. '-ex' → logprob: -16.688276290893555

Token 546: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0036026788875460625
    2. ' vec' → logprob: -5.628602504730225
    3. '	vec' → logprob: -13.128602981567383
    4. '(vec' → logprob: -14.378602981567383
    5. '.vec' → logprob: -17.378602981567383
    6. 've' → logprob: -17.628602981567383
    7. 'vector' → logprob: -18.628602981567383
    8. ' ' → logprob: -18.878602981567383
    9. '_vec' → logprob: -18.878602981567383
    10. 'vect' → logprob: -18.878602981567383

Token 547: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018862803699448705
    2. '1' → logprob: -6.376886367797852
    3. 'vec' → logprob: -8.626886367797852
    4. '```' → logprob: -13.251886367797852
    5. '.vec' → logprob: -13.751886367797852
    6. '.' → logprob: -13.751886367797852
    7. 'vector' → logprob: -15.251886367797852
    8. ' ' → logprob: -15.876886367797852
    9. 'point' → logprob: -16.00188636779785
    10. '.vector' → logprob: -16.50188636779785

Token 548: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.021432342007756233
    2. '.' → logprob: -4.146432399749756
    3. 'vec' → logprob: -5.896432399749756
    4. '.vec' → logprob: -6.521432399749756
    5. '2' → logprob: -7.021432399749756
    6. '1' → logprob: -8.896431922912598
    7. '```' → logprob: -10.271431922912598
    8. '.y' → logprob: -10.771431922912598
    9. ' .' → logprob: -11.271431922912598
    10. 'vector' → logprob: -11.396431922912598

Token 549: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0001414426224073395
    2. ' *' → logprob: -9.125141143798828
    3. 'vec' → logprob: -10.375141143798828
    4. '.vec' → logprob: -14.125141143798828
    5. '	vec' → logprob: -15.750141143798828
    6. '*object' → logprob: -15.875141143798828
    7. '(vec' → logprob: -16.125141143798828
    8. '_vec' → logprob: -16.875141143798828
    9. '*cos' → logprob: -18.000141143798828
    10. '[' → logprob: -18.125141143798828

Token 550: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -3.128163257315464e-07
    2. ' vec' → logprob: -15.25
    3. '	vec' → logprob: -17.375
    4. '(vec' → logprob: -20.375
    5. 'vector' → logprob: -21.375
    6. 've' → logprob: -21.5
    7. ' ' → logprob: -21.625
    8. 'v' → logprob: -21.75
    9. 'cross' → logprob: -21.75
    10. '.vec' → logprob: -21.875

Token 551: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003321484662592411
    2. '2' → logprob: -6.378321647644043
    3. '.x' → logprob: -6.503321647644043
    4. 'x' → logprob: -9.753321647644043
    5. 'vec' → logprob: -9.878321647644043
    6. '.' → logprob: -13.003321647644043
    7. '```' → logprob: -13.128321647644043
    8. 'vector' → logprob: -13.628321647644043
    9. '.vec' → logprob: -14.378321647644043
    10. 'def' → logprob: -14.503321647644043

Token 552: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0017227731877937913
    2. 'x' → logprob: -6.501722812652588
    3. '.' → logprob: -8.50172233581543
    4. 'vec' → logprob: -11.75172233581543
    5. '1' → logprob: -12.50172233581543
    6. '2' → logprob: -13.12672233581543
    7. ' .' → logprob: -13.87672233581543
    8. 's' → logprob: -14.50172233581543
    9. 'import' → logprob: -14.75172233581543
    10. '```' → logprob: -15.25172233581543

Token 553: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 555: ' 内' (ID: 68956)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1220841035246849
    2. '#' → logprob: -2.247084140777588
    3. ' def' → logprob: -4.872084140777588
    4. ' #' → logprob: -7.372084140777588
    5. 'from' → logprob: -8.37208366394043
    6. 'import' → logprob: -8.99708366394043
    7. '
' → logprob: -9.49708366394043
    8. ' ' → logprob: -9.49708366394043
    9. 'class' → logprob: -9.49708366394043
    10. '   ' → logprob: -10.12208366394043

Token 556: '積' (ID: 91483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17821811139583588
    2. '#' → logprob: -1.928218126296997
    3. '積' → logprob: -4.678217887878418
    4. '角' → logprob: -5.928217887878418
    5. '側' → logprob: -5.928217887878418
    6. 'product' → logprob: -7.053217887878418
    7. '点' → logprob: -8.303217887878418
    8. 'ter' → logprob: -8.803217887878418
    9. '_product' → logprob: -8.928217887878418
    10. ' def' → logprob: -9.178217887878418

Token 557: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.660315895918757e-05
    2. ' def' → logprob: -9.500076293945312
    3. '(' → logprob: -14.125076293945312
    4. '
' → logprob: -14.375076293945312
    5. '(def' → logprob: -15.500076293945312
    6. ':def' → logprob: -16.375076293945312
    7. '<|end|>' → logprob: -16.875076293945312
    8. '```' → logprob: -17.250076293945312
    9. '(
' → logprob: -18.000076293945312
    10. '	def' → logprob: -18.375076293945312

Token 558: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.250000953674316
    3. '
' → logprob: -18.125
    4. 'from' → logprob: -20.125
    5. '```' → logprob: -20.5
    6. '	def' → logprob: -21.25
    7. 'de' → logprob: -22.5
    8. ':def' → logprob: -22.625
    9. 'import' → logprob: -23.0
    10. 'd' → logprob: -23.375

Token 559: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0019044855143874884
    2. ' dot' → logprob: -6.376904487609863
    3. 'def' → logprob: -8.626904487609863
    4. 'cross' → logprob: -11.376904487609863
    5. 'inner' → logprob: -11.501904487609863
    6. '
' → logprob: -15.376904487609863
    7. 'lambda' → logprob: -15.626904487609863
    8. ' def' → logprob: -15.751904487609863
    9. ' inner' → logprob: -15.751904487609863
    10. 'dots' → logprob: -15.751904487609863

Token 560: '(vec' (ID: 57650)
  Prédit: '(vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vec' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.37500286102295
    3. '(v' → logprob: -14.50000286102295
    4. '(a' → logprob: -15.87500286102295
    5. ' (' → logprob: -16.250001907348633
    6. 'vec' → logprob: -16.625001907348633
    7. '(Vec' → logprob: -17.875001907348633
    8. '	vec' → logprob: -18.625001907348633
    9. '(vector' → logprob: -19.125001907348633
    10. '(p' → logprob: -19.250001907348633

Token 561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003606244223192334
    2. '(vec' → logprob: -5.62860631942749
    3. 'vec' → logprob: -13.003605842590332
    4. ')' → logprob: -13.878605842590332
    5. '```' → logprob: -14.253605842590332
    6. '
' → logprob: -14.253605842590332
    7. '(' → logprob: -14.378605842590332
    8. ' ' → logprob: -15.378605842590332
    9. ' (' → logprob: -16.00360679626465
    10. '):' → logprob: -16.12860679626465

Token 562: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13031232357025146
    2. ':' → logprob: -2.130312442779541
    3. '(vec' → logprob: -5.880312442779541
    4. 'vec' → logprob: -8.505311965942383
    5. '):' → logprob: -9.255311965942383
    6. ' ,' → logprob: -9.505311965942383
    7. '<|end|>' → logprob: -9.880311965942383
    8. '(Point' → logprob: -10.380311965942383
    9. ' vec' → logprob: -10.630311965942383
    10. '<Point' → logprob: -10.880311965942383

Token 563: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.5759404897689819
    2. ' Point' → logprob: -0.8259404897689819
    3. '(Point' → logprob: -15.075940132141113
    4. '	Point' → logprob: -15.200940132141113
    5. '_point' → logprob: -16.07594108581543
    6. '<Point' → logprob: -16.20094108581543
    7. '_Point' → logprob: -16.20094108581543
    8. '.Point' → logprob: -16.20094108581543
    9. ' point' → logprob: -16.82594108581543
    10. ' ' → logprob: -17.70094108581543

Token 564: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.318681188422488e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',
' → logprob: -16.62501335144043
    4. 'vec' → logprob: -17.37501335144043
    5. '(vec' → logprob: -19.37501335144043
    6. ',

' → logprob: -20.12501335144043
    7. '‌,' → logprob: -20.62501335144043
    8. ' vec' → logprob: -20.75001335144043
    9. '   ' → logprob: -20.75001335144043
    10. ',
' → logprob: -21.37501335144043

Token 565: ' vec' (ID: 10563)
  Prédit: ' vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vec' → logprob: -0.47407761216163635
    2. 'vec' → logprob: -0.974077582359314
    3. '(vec' → logprob: -15.099077224731445
    4. '	vec' → logprob: -15.099077224731445
    5. 'Vec' → logprob: -18.849077224731445
    6. 'vector' → logprob: -19.099077224731445
    7. 've' → logprob: -19.224077224731445
    8. ' Vec' → logprob: -19.474077224731445
    9. '.vec' → logprob: -19.599077224731445
    10. ' ' → logprob: -19.849077224731445

Token 566: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0041315918788313866
    2. '1' → logprob: -5.50413179397583
    3. 'vec' → logprob: -9.879131317138672
    4. '   ' → logprob: -14.629131317138672
    5. 'def' → logprob: -15.004131317138672
    6. ' ' → logprob: -15.129131317138672
    7. '(vec' → logprob: -15.129131317138672
    8. '```' → logprob: -15.629131317138672
    9. '3' → logprob: -15.879131317138672
    10. '
' → logprob: -16.254131317138672

Token 567: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.050746116787195206
    2. ':' → logprob: -3.050746202468872
    3. '):
' → logprob: -6.175745964050293
    4. ' ):' → logprob: -10.300745964050293
    5. ')' → logprob: -11.300745964050293
    6. '):
' → logprob: -12.550745964050293
    7. ',' → logprob: -12.550745964050293
    8. '):

' → logprob: -12.550745964050293
    9. '(vec' → logprob: -12.800745964050293
    10. ' :' → logprob: -12.925745964050293

Token 568: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3868723213672638
    2. ' Point' → logprob: -1.1368722915649414
    3. '	Point' → logprob: -14.261872291564941
    4. '(Point' → logprob: -15.136872291564941
    5. 'vec' → logprob: -15.636872291564941
    6. '_Point' → logprob: -16.636873245239258
    7. '.Point' → logprob: -17.011873245239258
    8. ')' → logprob: -17.011873245239258
    9. '<Point' → logprob: -17.261873245239258
    10. ' ' → logprob: -17.636873245239258

Token 569: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008089098846539855
    2. '):
' → logprob: -7.1258087158203125
    3. ' ):' → logprob: -13.125808715820312
    4. ')' → logprob: -13.375808715820312
    5. '):
' → logprob: -14.625808715820312
    6. '):

' → logprob: -15.250808715820312
    7. ':' → logprob: -15.625808715820312
    8. '   ' → logprob: -18.625808715820312
    9. ')：' → logprob: -18.625808715820312
    10. ')):' → logprob: -19.000808715820312

Token 570: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38903507590293884
    2. '   ' → logprob: -1.1390351057052612
    3. ' return' → logprob: -6.139035224914551
    4. '	return' → logprob: -12.76403522491455
    5. 'def' → logprob: -13.76403522491455
    6. '
' → logprob: -15.38903522491455
    7. '  ' → logprob: -15.51403522491455
    8. ' ' → logprob: -15.88903522491455
    9. 'vec' → logprob: -15.88903522491455
    10. '    ' → logprob: -17.014034271240234

Token 571: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0034512223210185766
    2. ' return' → logprob: -6.253451347351074
    3. 'vec' → logprob: -6.503451347351074
    4. '   ' → logprob: -10.753451347351074
    5. ' vec' → logprob: -13.753451347351074
    6. '	return' → logprob: -15.003451347351074
    7. '
' → logprob: -15.253451347351074
    8. '(vec' → logprob: -16.878450393676758
    9. ' ' → logprob: -17.253450393676758
    10. 'def' → logprob: -17.503450393676758

Token 572: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.006719871424138546
    2. ' vec' → logprob: -5.006720066070557
    3. '(vec' → logprob: -12.631719589233398
    4. '	vec' → logprob: -14.131719589233398
    5. '   ' → logprob: -15.631719589233398
    6. 've' → logprob: -16.3817195892334
    7. ' ' → logprob: -16.5067195892334
    8. '  ' → logprob: -17.5067195892334
    9. 'vector' → logprob: -17.8817195892334
    10. ' ' → logprob: -18.3817195892334

Token 573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'vec' → logprob: -16.0
    3. '2' → logprob: -18.375
    4. '.vec' → logprob: -18.625
    5. '(vec' → logprob: -19.375
    6. '   ' → logprob: -19.5
    7. '
' → logprob: -20.375
    8. '```' → logprob: -20.875
    9. 'obj' → logprob: -21.875
    10. '  ' → logprob: -22.0

Token 574: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -9.662937372922897e-05
    2. '.' → logprob: -9.250096321105957
    3. 'x' → logprob: -15.000096321105957
    4. ' .' → logprob: -16.375097274780273
    5. '0' → logprob: -19.750097274780273
    6. '1' → logprob: -20.250097274780273
    7. ').' → logprob: -20.500097274780273
    8. '.
' → logprob: -20.500097274780273
    9. '[' → logprob: -21.250097274780273
    10. '```' → logprob: -21.375097274780273

Token 575: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.493430894101039e-05
    2. ' *' → logprob: -9.500075340270996
    3. '**' → logprob: -18.50007438659668
    4. '*object' → logprob: -19.25007438659668
    5. '＊' → logprob: -20.25007438659668
    6. '*
' → logprob: -20.25007438659668
    7. '*cos' → logprob: -21.75007438659668
    8. '*

' → logprob: -22.12507438659668
    9. '*out' → logprob: -22.37507438659668
    10. '*(' → logprob: -22.37507438659668

Token 576: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -4.246537173457909e-06
    2. ' vec' → logprob: -12.375003814697266
    3. 've' → logprob: -17.875003814697266
    4. '	vec' → logprob: -18.750003814697266
    5. '(vec' → logprob: -19.875003814697266
    6. 'vector' → logprob: -21.375003814697266
    7. 'v' → logprob: -21.625003814697266
    8. 'vect' → logprob: -22.000003814697266
    9. '.vec' → logprob: -22.125003814697266
    10. ' ' → logprob: -22.375003814697266

Token 577: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017031522002071142
    2. 'vec' → logprob: -6.376703262329102
    3. '1' → logprob: -14.376703262329102
    4. '   ' → logprob: -15.751703262329102
    5. ' vec' → logprob: -16.2517032623291
    6. '  ' → logprob: -16.7517032623291
    7. '```' → logprob: -16.7517032623291
    8. ' ' → logprob: -17.3767032623291
    9. '.' → logprob: -17.6267032623291
    10. 's' → logprob: -17.8767032623291

Token 578: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0005662570474669337
    2. 'x' → logprob: -7.750566482543945
    3. '.' → logprob: -9.000566482543945
    4. 'vec' → logprob: -11.625566482543945
    5. '.vec' → logprob: -12.875566482543945
    6. ' .' → logprob: -14.625566482543945
    7. '0' → logprob: -17.000566482543945
    8. '2' → logprob: -17.125566482543945
    9. '*' → logprob: -17.375566482543945
    10. ' x' → logprob: -17.750566482543945

Token 579: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4740781784057617
    2. ' +' → logprob: -0.9740781784057617
    3. '+
' → logprob: -14.599078178405762
    4. '   ' → logprob: -14.599078178405762
    5. 'vec' → logprob: -16.349079132080078
    6. ' ' → logprob: -16.474079132080078
    7. ' +
' → logprob: -16.724079132080078
    8. '＋' → logprob: -16.974079132080078
    9. ' ' → logprob: -18.099079132080078
    10. '+\' → logprob: -18.349079132080078

Token 580: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.0015024791937321424
    2. ' vec' → logprob: -6.501502513885498
    3. '	vec' → logprob: -16.626502990722656
    4. '(vec' → logprob: -17.376502990722656
    5. 've' → logprob: -18.251502990722656
    6. 'vector' → logprob: -18.876502990722656
    7. ' ' → logprob: -19.001502990722656
    8. 'var' → logprob: -19.876502990722656
    9. '.vec' → logprob: -19.876502990722656
    10. '   ' → logprob: -20.251502990722656

Token 581: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0026384377852082253
    2. 'vec' → logprob: -6.252638339996338
    3. '1' → logprob: -7.252638339996338
    4. ' vec' → logprob: -14.377638816833496
    5. '(vec' → logprob: -14.627638816833496
    6. '   ' → logprob: -16.00263786315918
    7. '```' → logprob: -16.00263786315918
    8. ' ' → logprob: -17.25263786315918
    9. '.vec' → logprob: -17.37763786315918
    10. '  ' → logprob: -17.75263786315918

Token 582: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.43464791774749756
    2. 'y' → logprob: -1.4346479177474976
    3. '.' → logprob: -2.559648036956787
    4. 'vec' → logprob: -3.559648036956787
    5. '.vec' → logprob: -5.684648036956787
    6. ' .' → logprob: -6.059648036956787
    7. '*' → logprob: -6.684648036956787
    8. '   ' → logprob: -8.309647560119629
    9. '2' → logprob: -8.684647560119629
    10. '1' → logprob: -9.059647560119629

Token 583: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00010068230039905757
    2. 'vec' → logprob: -9.250101089477539
    3. ' *' → logprob: -12.375101089477539
    4. '.vec' → logprob: -16.37510108947754
    5. '(vec' → logprob: -16.75010108947754
    6. '	vec' → logprob: -16.75010108947754
    7. '<|end|>' → logprob: -17.37510108947754
    8. '_vec' → logprob: -17.75010108947754
    9. '.' → logprob: -17.75010108947754
    10. '*object' → logprob: -17.87510108947754

Token 584: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -1.0280383548888494e-06
    2. ' vec' → logprob: -13.875000953674316
    3. '	vec' → logprob: -17.875001907348633
    4. 've' → logprob: -18.625001907348633
    5. '(vec' → logprob: -19.500001907348633
    6. 'vector' → logprob: -20.250001907348633
    7. '<|end|>' → logprob: -20.625001907348633
    8. '.vec' → logprob: -20.875001907348633
    9. 'v' → logprob: -21.125001907348633
    10. 'var' → logprob: -21.125001907348633

Token 585: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.034592388459714e-06
    2. 'vec' → logprob: -12.125005722045898
    3. '.y' → logprob: -15.000005722045898
    4. 'y' → logprob: -15.875005722045898
    5. '```' → logprob: -17.2500057220459
    6. 's' → logprob: -17.5000057220459
    7. 'os' → logprob: -17.7500057220459
    8. 'ys' → logprob: -18.7500057220459
    9. 'z' → logprob: -18.8750057220459
    10. '   ' → logprob: -19.2500057220459

Token 586: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.032049987465143204
    2. 'y' → logprob: -3.5320498943328857
    3. '.' → logprob: -6.532050132751465
    4. '2' → logprob: -7.532050132751465
    5. '<|end|>' → logprob: -8.782050132751465
    6. '.x' → logprob: -9.282050132751465
    7. 'vec' → logprob: -11.157050132751465
    8. '.py' → logprob: -11.282050132751465
    9. 'Y' → logprob: -12.532050132751465
    10. 'vector' → logprob: -12.657050132751465

Token 587: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 588: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1837777942419052
    2. 'def' → logprob: -1.8087778091430664
    3. '
' → logprob: -6.558777809143066
    4. '   ' → logprob: -6.558777809143066
    5. '<|end|>' → logprob: -8.683777809143066
    6. '    
' → logprob: -8.808777809143066
    7. ')' → logprob: -9.058777809143066
    8. ' def' → logprob: -9.433777809143066
    9. '#
' → logprob: -9.558777809143066
    10. '\' → logprob: -9.558777809143066

Token 589: ' 点' (ID: 61603)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25260454416275024
    2. '#' → logprob: -1.5026044845581055
    3. 'class' → logprob: -8.252604484558105
    4. ' def' → logprob: -8.377604484558105
    5. 'abs' → logprob: -10.502604484558105
    6. 'from' → logprob: -10.627604484558105
    7. 'EPS' → logprob: -10.752604484558105
    8. '
' → logprob: -11.127604484558105
    9. 'dot' → logprob: -11.252604484558105
    10. 'cross' → logprob: -11.377604484558105

Token 590: 'a' (ID: 64)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.517848551273346
    2. '#' → logprob: -1.8928484916687012
    3. '<|end|>' → logprob: -2.767848491668701
    4. 'の' → logprob: -3.267848491668701
    5. '(point' → logprob: -3.517848491668701
    6. '(Point' → logprob: -3.892848491668701
    7. '(p' → logprob: -4.142848491668701
    8. ')' → logprob: -4.517848491668701
    9. 'class' → logprob: -4.517848491668701
    10. ',' → logprob: -4.767848491668701

Token 591: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031848405487835407
    2. 'def' → logprob: -6.753184795379639
    3. ')' → logprob: -6.878184795379639
    4. '#' → logprob: -8.003185272216797
    5. ' and' → logprob: -8.503185272216797
    6. '<|end|>' → logprob: -9.128185272216797
    7. ' ,' → logprob: -9.878185272216797
    8. '<|end|>' → logprob: -10.003185272216797
    9. 'と' → logprob: -10.253185272216797
    10. ' def' → logprob: -10.378185272216797

Token 592: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.52919222577475e-05
    2. 'Point' → logprob: -10.125075340270996
    3. ' b' → logprob: -10.375075340270996
    4. 'point' → logprob: -13.000075340270996
    5. 'vec' → logprob: -13.625075340270996
    6. ' Point' → logprob: -15.875075340270996
    7. '点' → logprob: -15.875075340270996
    8. ' point' → logprob: -16.62507438659668
    9. '_point' → logprob: -16.62507438659668
    10. 'def' → logprob: -17.37507438659668

Token 593: '->' (ID: 609)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4838741719722748
    2. 'への' → logprob: -1.4838742017745972
    3. 'の' → logprob: -2.4838740825653076
    4. ',' → logprob: -4.108874320983887
    5. ' ' → logprob: -4.858874320983887
    6. 'vec' → logprob: -4.983874320983887
    7. 'まで' → logprob: -4.983874320983887
    8. 'vector' → logprob: -5.108874320983887
    9. ')' → logprob: -5.483874320983887
    10. '#' → logprob: -5.608874320983887

Token 594: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2113979209971149e-05
    2. ' c' → logprob: -11.375012397766113
    3. 'Point' → logprob: -15.500012397766113
    4. 'p' → logprob: -16.375011444091797
    5. 'vec' → logprob: -16.500011444091797
    6. 'a' → logprob: -16.875011444091797
    7. 'C' → logprob: -17.500011444091797
    8. '#' → logprob: -17.625011444091797
    9. 'def' → logprob: -17.625011444091797
    10. '
' → logprob: -17.750011444091797

Token 595: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017764460062608123
    2. ' def' → logprob: -6.626776218414307
    3. '#' → logprob: -8.001776695251465
    4. 'の' → logprob: -9.501776695251465
    5. '<|end|>' → logprob: -11.251776695251465
    6. '<|end|>' → logprob: -11.376776695251465
    7. ')' → logprob: -13.001776695251465
    8. ':def' → logprob: -13.001776695251465
    9. '	def' → logprob: -13.126776695251465
    10. ',' → logprob: -13.376776695251465

Token 596: '回' (ID: 10154)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.09051904827356339
    2. 'cc' → logprob: -4.215518951416016
    3. '角' → logprob: -4.590518951416016
    4. 'vector' → logprob: -4.715518951416016
    5. '方向' → logprob: -4.715518951416016
    6. 'angle' → logprob: -4.840518951416016
    7. 'orient' → logprob: -5.465518951416016
    8. 'orientation' → logprob: -5.465518951416016
    9. '向' → logprob: -5.840518951416016
    10. 'clock' → logprob: -5.965518951416016

Token 597: '転' (ID: 63850)
  Prédit: '転'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '転' → logprob: -0.005289611406624317
    2. 'り' → logprob: -5.380289554595947
    3. '帰' → logprob: -8.130290031433105
    4. '```' → logprob: -8.755290031433105
    5. '#' → logprob: -9.755290031433105
    6. '旋' → logprob: -10.880290031433105
    7. 'る' → logprob: -11.005290031433105
    8. '頭' → logprob: -11.130290031433105
    9. 'return' → logprob: -11.505290031433105
    10. '-' → logprob: -11.630290031433105

Token 598: '方向' (ID: 101892)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.309682160615921
    2. '方向' → logprob: -2.1846821308135986
    3. 'direction' → logprob: -2.5596821308135986
    4. '_direction' → logprob: -2.6846821308135986
    5. 'Direction' → logprob: -5.559682369232178
    6. ' direction' → logprob: -6.684682369232178
    7. '(vec' → logprob: -7.184682369232178
    8. 'dir' → logprob: -7.434682369232178
    9. 'orientation' → logprob: -7.684682369232178
    10. ' 방향' → logprob: -7.809682369232178

Token 599: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0015737832291051745
    2. ' def' → logprob: -6.50157356262207
    3. ':' → logprob: -10.00157356262207
    4. '(' → logprob: -11.87657356262207
    5. '(def' → logprob: -11.87657356262207
    6. ':def' → logprob: -12.00157356262207
    7. '(
' → logprob: -13.62657356262207
    8. '#' → logprob: -13.75157356262207
    9. '_def' → logprob: -13.87657356262207
    10. '(a' → logprob: -14.62657356262207

Token 600: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.5
    3. '#' → logprob: -19.0
    4. 'ndef' → logprob: -21.375
    5. ':def' → logprob: -21.5
    6. '
' → logprob: -21.875
    7. '```' → logprob: -22.25
    8. '-def' → logprob: -22.375
    9. '(def' → logprob: -22.5
    10. '	def' → logprob: -23.125

Token 601: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.05076390877366066
    2. ' cc' → logprob: -4.675764083862305
    3. 'cross' → logprob: -4.800764083862305
    4. 'rotation' → logprob: -4.925764083862305
    5. 'orientation' → logprob: -5.175764083862305
    6. 'CC' → logprob: -5.300764083862305
    7. 'rot' → logprob: -5.675764083862305
    8. 'direction' → logprob: -5.800764083862305
    9. 'rotate' → logprob: -6.550764083862305
    10. 'counter' → logprob: -6.925764083862305

Token 602: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.607391408877447e-05
    2. 'd' → logprob: -11.000036239624023
    3. 'ｗ' → logprob: -12.125036239624023
    4. '
' → logprob: -12.375036239624023
    5. 'wr' → logprob: -13.750036239624023
    6. 'c' → logprob: -14.000036239624023
    7. 'wd' → logprob: -14.000036239624023
    8. 'r' → logprob: -14.125036239624023
    9. 'wa' → logprob: -14.125036239624023
    10. '

' → logprob: -14.250036239624023

Token 603: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -12.750003814697266
    3. '(A' → logprob: -14.125003814697266
    4. '(point' → logprob: -16.000003814697266
    5. 'a' → logprob: -16.125003814697266
    6. 'def' → logprob: -16.875003814697266
    7. ' (' → logprob: -17.250003814697266
    8. '(Point' → logprob: -17.500003814697266
    9. '(p' → logprob: -17.625003814697266
    10. '((' → logprob: -17.875003814697266

Token 604: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002529952325858176
    2. ' ,' → logprob: -8.625252723693848
    3. ',b' → logprob: -9.750252723693848
    4. ',p' → logprob: -11.875252723693848
    5. ',a' → logprob: -12.375252723693848
    6. ':' → logprob: -13.500252723693848
    7. ',c' → logprob: -14.125252723693848
    8. ',
' → logprob: -14.125252723693848
    9. '):' → logprob: -15.375252723693848
    10. 'a' → logprob: -16.000253677368164

Token 605: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.5776860184123507e-06
    2. ' b' → logprob: -13.00000286102295
    3. 'a' → logprob: -16.500001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '	b' → logprob: -18.125001907348633
    6. 'c' → logprob: -18.125001907348633
    7. '<|end|>' → logprob: -18.375001907348633
    8. ' ' → logprob: -19.000001907348633
    9. '(b' → logprob: -19.125001907348633
    10. ')' → logprob: -19.250001907348633

Token 606: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.490809417096898e-05
    2. ',c' → logprob: -10.375055313110352
    3. 'c' → logprob: -11.000055313110352
    4. ' ,' → logprob: -12.000055313110352
    5. ',
' → logprob: -15.000055313110352
    6. '):
' → logprob: -16.50005531311035
    7. 'a' → logprob: -16.87505531311035
    8. ' c' → logprob: -17.12505531311035
    9. '):' → logprob: -17.25005531311035
    10. '   ' → logprob: -17.37505531311035

Token 607: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00023131117632146925
    2. ' c' → logprob: -8.375231742858887
    3. '	c' → logprob: -15.125231742858887
    4. '   ' → logprob: -15.625231742858887
    5. ')c' → logprob: -15.875231742858887
    6. ')' → logprob: -16.62523078918457
    7. '<|end|>' → logprob: -17.37523078918457
    8. ' ' → logprob: -17.75023078918457
    9. 'a' → logprob: -17.87523078918457
    10. '
' → logprob: -18.62523078918457

Token 608: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009343287092633545
    2. '):
' → logprob: -7.00093412399292
    3. ')' → logprob: -10.750934600830078
    4. '):
' → logprob: -13.875934600830078
    5. ':' → logprob: -15.500934600830078
    6. ' ):' → logprob: -15.625934600830078
    7. '):

' → logprob: -16.125934600830078
    8. ')：' → logprob: -17.125934600830078
    9. '   ' → logprob: -18.125934600830078
    10. '）：' → logprob: -19.250934600830078

Token 609: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001375591498799622
    2. 'return' → logprob: -6.876375675201416
    3. 'd' → logprob: -8.751375198364258
    4. ' return' → logprob: -9.751375198364258
    5. 'cross' → logprob: -10.251375198364258
    6. 'vec' → logprob: -10.501375198364258
    7. 'v' → logprob: -11.001375198364258
    8. 't' → logprob: -11.751375198364258
    9. '	return' → logprob: -11.876375198364258
    10. 'turn' → logprob: -12.501375198364258

Token 610: ' if' (ID: 538)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.005894191563129425
    2. ' cross' → logprob: -6.255894184112549
    3. 'return' → logprob: -7.255894184112549
    4. 'cc' → logprob: -7.255894184112549
    5. '(c' → logprob: -7.505894184112549
    6. 'sign' → logprob: -7.755894184112549
    7. 'vec' → logprob: -8.130894660949707
    8. 'abs' → logprob: -8.755894660949707
    9. 'c' → logprob: -8.755894660949707
    10. '((' → logprob: -8.755894660949707

Token 611: ' cross' (ID: 8088)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.8861849308013916
    2. 'cross' → logprob: -1.0111849308013916
    3. 'abs' → logprob: -1.5111849308013916
    4. ' cross' → logprob: -6.1361846923828125
    5. ' eq' → logprob: -7.6361846923828125
    6. '(eq' → logprob: -8.011184692382812
    7. ' abs' → logprob: -8.636184692382812
    8. '(abs' → logprob: -9.386184692382812
    9. '((' → logprob: -10.511184692382812
    10. 'Cross' → logprob: -10.636184692382812

Token 612: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.282920129597187e-05
    2. '((' → logprob: -12.250012397766113
    3. 'b' → logprob: -12.375012397766113
    4. '(c' → logprob: -12.750012397766113
    5. '(Point' → logprob: -14.250012397766113
    6. '(' → logprob: -16.50001335144043
    7. 'Point' → logprob: -17.00001335144043
    8. ' (' → logprob: -18.75001335144043
    9. '	b' → logprob: -19.50001335144043
    10. ' Point' → logprob: -19.75001335144043

Token 613: '-a' (ID: 8575)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7521360516548157
    2. '-a' → logprob: -0.7521360516548157
    3. ' -' → logprob: -2.877135992050171
    4. '-c' → logprob: -7.12713623046875
    5. '-b' → logprob: -9.12713623046875
    6. 'a' → logprob: -10.12713623046875
    7. '-а' → logprob: -11.12713623046875
    8. '(a' → logprob: -11.87713623046875
    9. '-
' → logprob: -12.87713623046875
    10. '-A' → logprob: -13.00213623046875

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024184645153582096
    2. ',c' → logprob: -6.627418518066406
    3. 'c' → logprob: -6.877418518066406
    4. ' ,' → logprob: -10.502418518066406
    5. ',
' → logprob: -11.252418518066406
    6. '(c' → logprob: -11.752418518066406
    7. ' c' → logprob: -11.877418518066406
    8. 'a' → logprob: -13.002418518066406
    9. ')' → logprob: -14.252418518066406
    10. ',b' → logprob: -14.502418518066406

Token 615: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018125296628568321
    2. ' c' → logprob: -8.625181198120117
    3. '	c' → logprob: -14.000181198120117
    4. '   ' → logprob: -14.750181198120117
    5. ')c' → logprob: -15.125181198120117
    6. '(c' → logprob: -16.000181198120117
    7. '  ' → logprob: -18.000181198120117
    8. '[c' → logprob: -18.250181198120117
    9. ')' → logprob: -18.375181198120117
    10. '.c' → logprob: -18.625181198120117

Token 616: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.04267403855919838
    2. '-b' → logprob: -4.0426740646362305
    3. 'a' → logprob: -4.4176740646362305
    4. '-' → logprob: -4.5426740646362305
    5. ' -' → logprob: -6.6676740646362305
    6. 'b' → logprob: -8.41767406463623
    7. '-а' → logprob: -11.29267406463623
    8. '-c' → logprob: -11.91767406463623
    9. ' a' → logprob: -13.16767406463623
    10. '-
' → logprob: -13.29267406463623

Token 617: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019317318219691515
    2. ')>' → logprob: -6.376931667327881
    3. ' )' → logprob: -8.751932144165039
    4. '())' → logprob: -9.751932144165039
    5. '>' → logprob: -12.251932144165039
    6. '()' → logprob: -12.626932144165039
    7. ' >' → logprob: -13.376932144165039
    8. ' ' → logprob: -13.876932144165039
    9. '()>' → logprob: -14.251932144165039
    10. ')<' → logprob: -14.376932144165039

Token 618: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16066336631774902
    2. ' >' → logprob: -1.910663366317749
    3. '()>' → logprob: -7.785663604736328
    4. '()' → logprob: -11.785663604736328
    5. ' ' → logprob: -11.910663604736328
    6. ')>' → logprob: -12.410663604736328
    7. '＞' → logprob: -14.035663604736328
    8. ')' → logprob: -14.035663604736328
    9. '<' → logprob: -14.160663604736328
    10. '0' → logprob: -14.660663604736328

Token 619: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.0602392740547657
    2. '0' → logprob: -2.935239315032959
    3. ' EPS' → logprob: -5.435239315032959
    4. ' ' → logprob: -6.935239315032959
    5. 'EP' → logprob: -13.0602388381958
    6. '+' → logprob: -13.1852388381958
    7. '   ' → logprob: -13.5602388381958
    8. 'E' → logprob: -13.8102388381958
    9. '  ' → logprob: -13.9352388381958
    10. 'eps' → logprob: -14.0602388381958

Token 620: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05611558258533478
    2. ':
' → logprob: -3.5561156272888184
    3. ':return' → logprob: -3.6811156272888184
    4. ' :' → logprob: -8.18111515045166
    5. ' return' → logprob: -8.55611515045166
    6. '):' → logprob: -9.30611515045166
    7. '   ' → logprob: -9.43111515045166
    8. 'return' → logprob: -9.43111515045166
    9. '):
' → logprob: -10.18111515045166
    10. '       ' → logprob: -11.18111515045166

Token 621: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23521803319454193
    2. '1' → logprob: -1.6102180480957031
    3. ' return' → logprob: -5.485218048095703
    4. ' ' → logprob: -5.485218048095703
    5. '   ' → logprob: -6.860218048095703
    6. 'return' → logprob: -8.110218048095703
    7. '2' → logprob: -9.360218048095703
    8. '    ' → logprob: -11.985218048095703
    9. '3' → logprob: -12.235218048095703
    10. '	return' → logprob: -12.485218048095703

Token 622: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013335748808458447
    2. ' ' → logprob: -6.626333713531494
    3. '+' → logprob: -12.251333236694336
    4. ' +' → logprob: -13.376333236694336
    5. '   ' → logprob: -14.001333236694336
    6. 'True' → logprob: -15.626333236694336
    7. '"' → logprob: -15.751333236694336
    8. '  ' → logprob: -16.126333236694336
    9. '１' → logprob: -16.251333236694336
    10. ' True' → logprob: -17.001333236694336

Token 623: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '+' → logprob: -15.250006675720215
    4. ' +' → logprob: -19.2500057220459
    5. '１' → logprob: -19.7500057220459
    6. '  ' → logprob: -19.8750057220459
    7. '   ' → logprob: -20.0000057220459
    8. '2' → logprob: -20.7500057220459
    9. 'True' → logprob: -20.8750057220459
    10. '0' → logprob: -21.6250057220459

Token 624: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: ' COUN' (ID: 107160)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011521248379722238
    2. ' ' → logprob: -6.876152038574219
    3. ' counter' → logprob: -9.876152038574219
    4. 'Counter' → logprob: -10.751152038574219
    5. 'counter' → logprob: -11.251152038574219
    6. 'CC' → logprob: -11.251152038574219
    7. '<|end|>' → logprob: -12.001152038574219
    8. '+' → logprob: -12.876152038574219
    9. ' CC' → logprob: -13.001152038574219
    10. '   ' → logprob: -13.001152038574219

Token 626: 'TER' (ID: 6147)
  Prédit: 'TER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TER' → logprob: -0.008216550573706627
    2. 'ER' → logprob: -5.258216381072998
    3. 'T' → logprob: -6.633216381072998
    4. 'TE' → logprob: -6.883216381072998
    5. 'CLOCK' → logprob: -8.633216857910156
    6. '1' → logprob: -9.383216857910156
    7. '-' → logprob: -9.508216857910156
    8. 'ter' → logprob: -9.633216857910156
    9. '```' → logprob: -9.633216857910156
    10. '+' → logprob: -10.133216857910156

Token 627: '_CLOCK' (ID: 102378)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.08023951947689056
    2. '_CLOCK' → logprob: -2.5802395343780518
    3. 'clock' → logprob: -7.455239295959473
    4. '_clock' → logprob: -7.830239295959473
    5. 'CW' → logprob: -8.705239295959473
    6. 'Clock' → logprob: -9.705239295959473
    7. '-clock' → logprob: -9.830239295959473
    8. ' CLOCK' → logprob: -10.080239295959473
    9. 'CLK' → logprob: -10.830239295959473
    10. ' Clock' → logprob: -11.455239295959473

Token 628: 'WISE' (ID: 38559)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.9053843021392822
    2. '_CLOCK' → logprob: -1.1553843021392822
    3. '<|end|>' → logprob: -1.5303843021392822
    4. 'clock' → logprob: -3.5303843021392822
    5. '_clock' → logprob: -3.9053843021392822
    6. 'CW' → logprob: -5.030384063720703
    7. '-clock' → logprob: -6.155384063720703
    8. '_COUNTER' → logprob: -7.155384063720703
    9. '
' → logprob: -7.655384063720703
    10. 'C' → logprob: -7.655384063720703

Token 629: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 631: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5560234189033508
    2. 'if' (adapté à ' if') → logprob: -1.056023359298706
    3. '0' → logprob: -3.056023359298706
    4. '   ' → logprob: -4.431023597717285
    5. ' if' → logprob: -4.556023597717285
    6. '1' → logprob: -5.306023597717285
    7. ' elif' → logprob: -5.556023597717285
    8. ' ' → logprob: -9.431023597717285
    9. '<|end|>' → logprob: -9.556023597717285
    10. '2' → logprob: -9.556023597717285

Token 632: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.03806880861520767
    2. ' cross' → logprob: -3.2880687713623047
    3. 'abs' → logprob: -10.663068771362305
    4. '-cross' → logprob: -13.538068771362305
    5. ' abs' → logprob: -14.288068771362305
    6. '-' → logprob: -14.413068771362305
    7. '.cross' → logprob: -14.663068771362305
    8. '   ' → logprob: -14.788068771362305
    9. ' ' → logprob: -15.413068771362305
    10. '
' → logprob: -16.163068771362305

Token 633: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.008651684038341045
    2. '(c' → logprob: -4.7586517333984375
    3. 'b' → logprob: -10.758651733398438
    4. '(a' → logprob: -11.383651733398438
    5. '(' → logprob: -12.383651733398438
    6. ' (' → logprob: -16.008651733398438
    7. '(B' → logprob: -17.508651733398438
    8. 'a' → logprob: -17.633651733398438
    9. '#' → logprob: -18.008651733398438
    10. 'c' → logprob: -18.133651733398438

Token 634: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.007330690510571003
    2. ' -' → logprob: -5.257330894470215
    3. 'a' → logprob: -6.882330894470215
    4. '-' → logprob: -6.882330894470215
    5. ' a' → logprob: -10.632330894470215
    6. '-а' → logprob: -12.132330894470215
    7. '<|end|>' → logprob: -12.507330894470215
    8. '-c' → logprob: -13.007330894470215
    9. '-ai' → logprob: -13.132330894470215
    10. ' ' → logprob: -14.007330894470215

Token 635: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026367725804448128
    2. ',c' → logprob: -6.002636909484863
    3. '(c' → logprob: -9.002636909484863
    4. 'c' → logprob: -10.502636909484863
    5. ' ,' → logprob: -11.752636909484863
    6. '-c' → logprob: -14.002636909484863
    7. '-' → logprob: -14.877636909484863
    8. 'a' → logprob: -15.002636909484863
    9. ',a' → logprob: -15.002636909484863
    10. ' c' → logprob: -15.377636909484863

Token 636: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029762184247374535
    2. ' c' → logprob: -3.5297622680664062
    3. '(c' → logprob: -12.154762268066406
    4. '	c' → logprob: -13.154762268066406
    5. ' ' → logprob: -13.654762268066406
    6. ')c' → logprob: -13.654762268066406
    7. '   ' → logprob: -14.029762268066406
    8. '<|end|>' → logprob: -14.904762268066406
    9. ',c' → logprob: -15.779762268066406
    10. ')' → logprob: -15.779762268066406

Token 637: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.014265988953411579
    2. ' -' → logprob: -4.514266014099121
    3. 'a' → logprob: -6.389266014099121
    4. '-' → logprob: -6.764266014099121
    5. '-c' → logprob: -8.014266014099121
    6. '-а' → logprob: -11.639266014099121
    7. ' a' → logprob: -11.764266014099121
    8. 'c' → logprob: -11.889266014099121
    9. '>a' → logprob: -12.389266014099121
    10. '-A' → logprob: -12.764266014099121

Token 638: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.15411850810050964
    2. '<' → logprob: -2.529118537902832
    3. ')' → logprob: -2.779118537902832
    4. ')<' → logprob: -7.029118537902832
    5. ' ' → logprob: -9.654118537902832
    6. '<E' → logprob: -11.529118537902832
    7. '   ' → logprob: -11.654118537902832
    8. ' )' → logprob: -11.904118537902832
    9. ',' → logprob: -12.529118537902832
    10. '()' → logprob: -12.716618537902832

Token 639: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.38700082898139954
    2. '<' → logprob: -1.1370007991790771
    3. '<E' → logprob: -9.262001037597656
    4. ' ' → logprob: -11.012001037597656
    5. '<-' → logprob: -11.512001037597656
    6. ')' → logprob: -13.762001037597656
    7. ')<' → logprob: -14.262001037597656
    8. '<class' → logprob: -14.512001037597656
    9. '<=' → logprob: -14.637001037597656
    10. '<p' → logprob: -14.762001037597656

Token 640: ' -' (ID: 533)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.029847560450434685
    2. '-' → logprob: -3.5298476219177246
    3. ' -' → logprob: -9.279847145080566
    4. '-A' → logprob: -13.404847145080566
    5. '-IP' → logprob: -13.904847145080566
    6. '-US' → logprob: -14.779847145080566
    7. '-Q' → logprob: -15.529847145080566
    8. '-P' → logprob: -16.404848098754883
    9. '-END' → logprob: -16.779848098754883
    10. '-U' → logprob: -16.904848098754883

Token 641: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.1994775377388578e-05
    2. ' EPS' → logprob: -11.375012397766113
    3. 'EP' → logprob: -15.250012397766113
    4. 'ESP' → logprob: -15.625012397766113
    5. 'ES' → logprob: -16.500011444091797
    6. 'EOS' → logprob: -17.625011444091797
    7. '1' → logprob: -18.875011444091797
    8. 'EPT' → logprob: -19.125011444091797
    9. 'EEP' → logprob: -19.625011444091797
    10. '   ' → logprob: -20.000011444091797

Token 642: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014084475114941597
    2. ' :' → logprob: -6.876408576965332
    3. ':return' → logprob: -8.001408576965332
    4. ' return' → logprob: -10.876408576965332
    5. '   ' → logprob: -11.626408576965332
    6. '):' → logprob: -12.251408576965332
    7. 'return' → logprob: -12.501408576965332
    8. ':
' → logprob: -13.376408576965332
    9. ')' → logprob: -13.626408576965332
    10. ' ' → logprob: -14.751408576965332

Token 643: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20144304633140564
    2. ' -' → logprob: -1.701443076133728
    3. '   ' → logprob: -10.95144271850586
    4. ' ' → logprob: -11.70144271850586
    5. ' return' → logprob: -12.82644271850586
    6. 'return' → logprob: -14.57644271850586
    7. '  ' → logprob: -14.95144271850586
    8. '−' → logprob: -15.57644271850586
    9. '    ' → logprob: -15.82644271850586
    10. '       ' → logprob: -16.32644271850586

Token 644: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009115827269852161
    2. ' -' → logprob: -7.000911712646484
    3. ' ' → logprob: -15.875911712646484
    4. '   ' → logprob: -18.500911712646484
    5. '−' → logprob: -19.500911712646484
    6. '  ' → logprob: -20.375911712646484
    7. '\-' → logprob: -20.750911712646484
    8. '2' → logprob: -21.750911712646484
    9. '1' → logprob: -21.875911712646484
    10. '–' → logprob: -22.375911712646484

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '１' → logprob: -20.625
    4. '
' → logprob: -21.625
    5. '   ' → logprob: -21.75
    6. '2' → logprob: -22.25
    7. '۱' → logprob: -22.5
    8. '  ' → logprob: -22.5
    9. '```' → logprob: -22.5
    10. '-' → logprob: -22.625

Token 646: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07635840773582458
    2. ' ' → logprob: -2.7013583183288574
    3. '   ' → logprob: -5.201358318328857
    4. '<|end|>' → logprob: -7.201358318328857
    5. ' return' → logprob: -10.076358795166016
    6. '  ' → logprob: -10.576358795166016
    7. '1' → logprob: -10.701358795166016
    8. 'return' → logprob: -10.826358795166016
    9. '#' → logprob: -11.951358795166016
    10. '2' → logprob: -12.451358795166016

Token 647: ' CLOCK' (ID: 149973)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.07907484471797943
    2. ' CLOCK' → logprob: -2.5790748596191406
    3. '1' → logprob: -9.07907485961914
    4. 'CW' → logprob: -10.82907485961914
    5. 'COL' → logprob: -10.95407485961914
    6. ' ' → logprob: -11.45407485961914
    7. 'COUN' → logprob: -12.20407485961914
    8. 'Clock' → logprob: -12.45407485961914
    9. ' clockwise' → logprob: -12.45407485961914
    10. 'C' → logprob: -12.57907485961914

Token 648: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -0.014155986718833447
    2. '_CLOCK' → logprob: -4.514155864715576
    3. 'wise' → logprob: -6.014155864715576
    4. 'W' → logprob: -8.139156341552734
    5. '_COUNTER' → logprob: -8.889156341552734
    6. 'CLOCK' → logprob: -9.014156341552734
    7. '_W' → logprob: -10.139156341552734
    8. 'S' → logprob: -11.514156341552734
    9. 'Wise' → logprob: -11.764156341552734
    10. '__' → logprob: -12.139156341552734

Token 649: '
' (ID: 198)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01846175268292427
    2. '   ' → logprob: -4.64346170425415
    3. ' ' → logprob: -5.14346170425415
    4. 'return' → logprob: -6.14346170425415
    5. 'if' → logprob: -8.143462181091309
    6. ' return' → logprob: -8.393462181091309
    7. '<|end|>' → logprob: -9.268462181091309
    8. ' if' → logprob: -10.518462181091309
    9. '  ' → logprob: -10.893462181091309
    10. '    ' → logprob: -11.768462181091309

Token 650: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028559787198901176
    2. '   ' → logprob: -4.153559684753418
    3. 'return' → logprob: -4.653559684753418
    4. 'if' → logprob: -6.028559684753418
    5. ' return' → logprob: -8.403559684753418
    6. ' ' → logprob: -9.028559684753418
    7. '1' → logprob: -9.653559684753418
    8. ' if' → logprob: -9.903559684753418
    9. '	return' → logprob: -11.028559684753418
    10. '<|end|>' → logprob: -11.903559684753418

Token 651: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1347598433494568
    2. 'return' → logprob: -2.3847599029541016
    3. '   ' → logprob: -4.509759902954102
    4. 'd' → logprob: -5.009759902954102
    5. 'v' → logprob: -5.259759902954102
    6. 'vec' → logprob: -5.509759902954102
    7. ' if' → logprob: -5.634759902954102
    8. ' return' → logprob: -6.134759902954102
    9. 'p' → logprob: -7.884759902954102
    10. 'dist' → logprob: -8.634759902954102

Token 652: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.0038278677966445684
    2. ' dot' → logprob: -6.003828048706055
    3. '(dot' → logprob: -6.628828048706055
    4. '(a' → logprob: -11.253828048706055
    5. 'abs' → logprob: -11.753828048706055
    6. ' (' → logprob: -12.503828048706055
    7. '(b' → logprob: -13.253828048706055
    8. '(' → logprob: -13.378828048706055
    9. 'cross' → logprob: -14.503828048706055
    10. '((' → logprob: -14.628828048706055

Token 653: '(c' (ID: 2410)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.754368223482743e-05
    2. 'b' → logprob: -10.000067710876465
    3. '(c' → logprob: -10.750067710876465
    4. '((' → logprob: -15.375067710876465
    5. '	b' → logprob: -15.875067710876465
    6. '(a' → logprob: -16.62506675720215
    7. ' (' → logprob: -16.75006675720215
    8. '(Point' → logprob: -17.00006675720215
    9. '(' → logprob: -17.12506675720215
    10. '[b' → logprob: -19.37506675720215

Token 654: '-a' (ID: 8575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12998820841312408
    2. '(b' → logprob: -2.129988193511963
    3. '-b' → logprob: -6.754988193511963
    4. ',b' → logprob: -7.129988193511963
    5. '	b' → logprob: -8.129988670349121
    6. 'a' → logprob: -8.254988670349121
    7. '(a' → logprob: -8.379988670349121
    8. ' b' → logprob: -9.129988670349121
    9. '   ' → logprob: -9.629988670349121
    10. '-(' → logprob: -10.629988670349121

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43340247869491577
    2. ',b' → logprob: -1.4334025382995605
    3. 'b' → logprob: -2.1834025382995605
    4. ' ,' → logprob: -8.433402061462402
    5. ' b' → logprob: -8.933402061462402
    6. '(b' → logprob: -9.183402061462402
    7. '   ' → logprob: -9.683402061462402
    8. '	b' → logprob: -11.433402061462402
    9. ',(' → logprob: -12.183402061462402
    10. ',a' → logprob: -12.558402061462402

Token 656: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.319370302458992e-06
    2. ' b' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.375005722045898
    4. 'c' → logprob: -15.875005722045898
    5. '(b' → logprob: -16.6250057220459
    6. '	b' → logprob: -17.3750057220459
    7. ' ' → logprob: -18.7500057220459
    8. '
' → logprob: -20.3750057220459
    9. '  ' → logprob: -20.6250057220459
    10. 'a' → logprob: -20.7500057220459

Token 657: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.01496320404112339
    2. 'a' → logprob: -4.514963150024414
    3. '-' → logprob: -5.639963150024414
    4. ' -' → logprob: -8.014963150024414
    5. ' a' → logprob: -11.639963150024414
    6. '-а' → logprob: -11.889963150024414
    7. 'b' → logprob: -13.639963150024414
    8. '-A' → logprob: -13.764963150024414
    9. '   ' → logprob: -14.014963150024414
    10. '-au' → logprob: -14.389963150024414

Token 658: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3787370026111603
    2. ')' → logprob: -1.503736972808838
    3. ' <' → logprob: -2.628736972808838
    4. ')<' → logprob: -3.878736972808838
    5. ' ' → logprob: -10.503737449645996
    6. '>' → logprob: -10.753737449645996
    7. '()<' → logprob: -11.128737449645996
    8. '()' → logprob: -11.253737449645996
    9. ' )' → logprob: -11.753737449645996
    10. '[' → logprob: -11.878737449645996

Token 659: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.02070281282067299
    2. ' <' → logprob: -3.895702838897705
    3. ')<' → logprob: -9.270702362060547
    4. ')' → logprob: -10.520702362060547
    5. '()<' → logprob: -10.645702362060547
    6. ' ' → logprob: -11.895702362060547
    7. '<E' → logprob: -13.395702362060547
    8. '<=' → logprob: -14.145702362060547
    9. '<-' → logprob: -14.145702362060547
    10. '[' → logprob: -14.145702362060547

Token 660: ' -' (ID: 533)
  Prédit: '-E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-E' → logprob: -0.011033558286726475
    2. '0' → logprob: -5.011033535003662
    3. '-P' → logprob: -6.261033535003662
    4. '-' → logprob: -6.761033535003662
    5. ' -' → logprob: -6.761033535003662
    6. '-Q' → logprob: -11.01103401184082
    7. '-C' → logprob: -11.13603401184082
    8. '-A' → logprob: -11.76103401184082
    9. ' ' → logprob: -11.88603401184082
    10. '-IP' → logprob: -12.51103401184082

Token 661: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -1.2664456789934775e-06
    2. ' EPS' → logprob: -14.125000953674316
    3. ' ' → logprob: -16.125001907348633
    4. 'ESP' → logprob: -16.500001907348633
    5. 'EP' → logprob: -16.750001907348633
    6. 'eps' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.125001907348633
    8. '-' → logprob: -17.250001907348633
    9. '  ' → logprob: -17.625001907348633
    10. 'EEP' → logprob: -18.375001907348633

Token 662: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027180914767086506
    2. ':return' → logprob: -6.502717971801758
    3. ' :' → logprob: -7.002717971801758
    4. ':
' → logprob: -8.877717971801758
    5. '   ' → logprob: -9.377717971801758
    6. ' return' → logprob: -10.002717971801758
    7. '):' → logprob: -10.752717971801758
    8. '       ' → logprob: -12.377717971801758
    9. 'return' → logprob: -12.877717971801758
    10. '0' → logprob: -12.877717971801758

Token 663: ' return' (ID: 622)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0807738304138184
    2. '0' → logprob: -1.2057738304138184
    3. 'return' → logprob: -1.9557738304138184
    4. ' -' → logprob: -2.4557738304138184
    5. '   ' → logprob: -2.8307738304138184
    6. ' return' → logprob: -2.9557738304138184
    7. ' ' → logprob: -4.080773830413818
    8. '  ' → logprob: -6.205773830413818
    9. ':return' → logprob: -6.955773830413818
    10. '       ' → logprob: -7.080773830413818

Token 664: ' +' (ID: 659)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.203340083360672
    2. '-' → logprob: -1.7033400535583496
    3. '+' → logprob: -6.70334005355835
    4. ' ' → logprob: -7.70334005355835
    5. ' -' → logprob: -8.328340530395508
    6. 'True' → logprob: -12.953340530395508
    7. ' +' → logprob: -14.078340530395508
    8. '   ' → logprob: -14.203340530395508
    9. '2' → logprob: -14.703340530395508
    10. '  ' → logprob: -14.953340530395508

Token 665: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6330828070640564
    2. '1' → logprob: -0.7580828070640564
    3. ' ' → logprob: -8.133082389831543
    4. '0' → logprob: -8.883082389831543
    5. '
' → logprob: -10.633082389831543
    6. '-' → logprob: -12.383082389831543
    7. '3' → logprob: -12.508082389831543
    8. '

' → logprob: -12.570582389831543
    9. '```' → logprob: -12.695582389831543
    10. '4' → logprob: -12.883082389831543

Token 666: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.4763764441013336
    2. '#' → logprob: -0.9763764142990112
    3. '<|end|>' → logprob: -6.476376533508301
    4. '   ' → logprob: -7.476376533508301
    5. ' ' → logprob: -9.1013765335083
    6. '﻿#' → logprob: -10.6013765335083
    7. '
' → logprob: -11.2263765335083
    8. ' (' → logprob: -11.8513765335083
    9. '  ' → logprob: -11.9763765335083
    10. ')' → logprob: -12.1013765335083

Token 667: ' c' (ID: 274)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.811919629573822
    2. '1' → logprob: -1.1869196891784668
    3. '-' → logprob: -1.4369196891784668
    4. ' ' → logprob: -5.186919689178467
    5. ' -' → logprob: -5.436919689178467
    6. '3' → logprob: -6.311919689178467
    7. '+' → logprob: -7.561919689178467
    8. '#' → logprob: -8.436919212341309
    9. '4' → logprob: -8.936919212341309
    10. '(' → logprob: -9.186919212341309

Token 668: ' ->' (ID: 2747)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9971127510070801
    2. '-a' → logprob: -1.62211275100708
    3. 'is' → logprob: -2.12211275100708
    4. '<a' → logprob: -2.62211275100708
    5. 'return' → logprob: -3.37211275100708
    6. 'c' → logprob: -3.74711275100708
    7. '-' → logprob: -3.87211275100708
    8. ' is' → logprob: -3.87211275100708
    9. '<|end|>' → logprob: -3.87211275100708
    10. 'on' → logprob: -4.37211275100708

Token 669: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036626679357141256
    2. 'b' → logprob: -5.628662586212158
    3. ' a' → logprob: -9.753663063049316
    4. ' b' → logprob: -13.878663063049316
    5. 'c' → logprob: -14.128663063049316
    6. '1' → logprob: -14.128663063049316
    7. 'return' → logprob: -14.878663063049316
    8. '#a' → logprob: -14.878663063049316
    9. ' ' → logprob: -15.628663063049316
    10. '(a' → logprob: -15.628663063049316

Token 670: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 671: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.451116051815916e-05
    2. ' b' → logprob: -10.625024795532227
    3. '<b' → logprob: -16.375024795532227
    4. '	b' → logprob: -17.875024795532227
    5. 'c' → logprob: -18.500024795532227
    6. ' ' → logprob: -18.625024795532227
    7. 'a' → logprob: -18.750024795532227
    8. '$b' → logprob: -19.125024795532227
    9. ''b' → logprob: -19.625024795532227
    10. '\b' → logprob: -19.875024795532227

Token 672: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06244298443198204
    2. '<|end|>' → logprob: -3.3124430179595947
    3. '1' → logprob: -4.437442779541016
    4. '0' → logprob: -5.562442779541016
    5. '  ' → logprob: -6.187442779541016
    6. ')' → logprob: -6.687442779541016
    7. '2' → logprob: -7.062442779541016
    8. 'return' → logprob: -7.187442779541016
    9. ' ' → logprob: -7.312442779541016
    10. '
' → logprob: -7.562442779541016

Token 673: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4274413585662842
    2. '0' → logprob: -1.3024413585662842
    3. '1' → logprob: -2.802441358566284
    4. ' if' → logprob: -4.927441596984863
    5. '<|end|>' → logprob: -5.552441596984863
    6. '2' → logprob: -6.177441596984863
    7. 'if' → logprob: -7.177441596984863
    8. ' ' → logprob: -7.677441596984863
    9. '3' → logprob: -8.052441596984863
    10. ')' → logprob: -8.802441596984863

Token 674: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002808798337355256
    2. ' if' → logprob: -6.002808570861816
    3. 'return' → logprob: -9.127808570861816
    4. '1' → logprob: -9.627808570861816
    5. '0' → logprob: -9.752808570861816
    6. '   ' → logprob: -9.877808570861816
    7. '3' → logprob: -11.252808570861816
    8. '7' → logprob: -12.127808570861816
    9. 'If' → logprob: -12.252808570861816
    10. '2' → logprob: -12.377808570861816

Token 675: ' abs' (ID: 8443)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.021412506699562073
    2. 'eq' → logprob: -3.8964126110076904
    3. ' dot' → logprob: -7.271412372589111
    4. '(dot' → logprob: -9.02141284942627
    5. 'cross' → logprob: -10.52141284942627
    6. ' eq' → logprob: -10.89641284942627
    7. '(eq' → logprob: -12.39641284942627
    8. 'abs' → logprob: -12.64641284942627
    9. 'dots' → logprob: -14.52141284942627
    10. 'Eq' → logprob: -15.52141284942627

Token 676: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1604156345129013
    2. '(c' → logprob: -1.9104156494140625
    3. '(a' → logprob: -8.660415649414062
    4. '((' → logprob: -11.535415649414062
    5. 'b' → logprob: -12.285415649414062
    6. 'c' → logprob: -12.785415649414062
    7. '()' → logprob: -15.410415649414062
    8. 'a' → logprob: -15.660415649414062
    9. '(' → logprob: -15.910415649414062
    10. '```' → logprob: -16.410415649414062

Token 677: '-a' (ID: 8575)
  Prédit: '-a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-a' → logprob: -0.5034618377685547
    2. '-c' → logprob: -1.0034618377685547
    3. 'a' → logprob: -4.253461837768555
    4. ' -' → logprob: -4.503461837768555
    5. '-' → logprob: -5.878461837768555
    6. 'c' → logprob: -7.128461837768555
    7. '-b' → logprob: -11.003461837768555
    8. ' a' → logprob: -11.253461837768555
    9. ' ' → logprob: -11.878461837768555
    10. '   ' → logprob: -12.128461837768555

Token 678: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027989394962787628
    2. ')>' → logprob: -3.902989387512207
    3. ')c' → logprob: -5.652989387512207
    4. ')<' → logprob: -6.402989387512207
    5. ',c' → logprob: -8.152989387512207
    6. ',' → logprob: -8.152989387512207
    7. '>' → logprob: -8.152989387512207
    8. '(c' → logprob: -8.277989387512207
    9. ' ' → logprob: -8.402989387512207
    10. 'c' → logprob: -8.777989387512207

Token 679: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.19159255921840668
    2. '()<' → logprob: -2.3165924549102783
    3. ' <' → logprob: -2.9415924549102783
    4. '()' → logprob: -4.066592693328857
    5. '+' → logprob: -5.941592693328857
    6. '<E' → logprob: -6.816592693328857
    7. ' ' → logprob: -7.816592693328857
    8. '>' → logprob: -8.3165922164917
    9. '**' → logprob: -8.4415922164917
    10. '<=' → logprob: -8.5665922164917

Token 680: ' abs' (ID: 8443)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -0.10088087618350983
    2. 'abs' → logprob: -2.3508808612823486
    3. ' EPS' → logprob: -7.975881099700928
    4. 'eps' → logprob: -8.10088062286377
    5. '1' → logprob: -11.35088062286377
    6. ' abs' → logprob: -12.22588062286377
    7. 'dot' → logprob: -12.97588062286377
    8. '(abs' → logprob: -13.35088062286377
    9. 'epsilon' → logprob: -13.85088062286377
    10. '+' → logprob: -14.22588062286377

Token 681: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -4.008129963040119e-06
    2. 'c' → logprob: -12.750003814697266
    3. '(a' → logprob: -14.000003814697266
    4. '(b' → logprob: -15.625003814697266
    5. '©' → logprob: -17.625003814697266
    6. ' (' → logprob: -18.125003814697266
    7. '```' → logprob: -18.625003814697266
    8. '	c' → logprob: -18.750003814697266
    9. '
' → logprob: -18.875003814697266
    10. '((' → logprob: -18.875003814697266

Token 682: '-a' (ID: 8575)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.4066881835460663
    2. '-a' → logprob: -1.1566882133483887
    3. 'a' → logprob: -4.656688213348389
    4. '-' → logprob: -5.656688213348389
    5. 'b' → logprob: -5.656688213348389
    6. ' -' → logprob: -5.781688213348389
    7. '-c' → logprob: -11.03168773651123
    8. ' ' → logprob: -11.40668773651123
    9. '```' → logprob: -11.65668773651123
    10. ' a' → logprob: -12.40668773651123

Token 683: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3539121747016907
    2. '-' → logprob: -2.103912115097046
    3. '-E' → logprob: -2.603912115097046
    4. ':' → logprob: -3.228912115097046
    5. '<E' → logprob: -3.853912115097046
    6. '):' → logprob: -4.228912353515625
    7. '+' → logprob: -4.603912353515625
    8. ' -' → logprob: -5.478912353515625
    9. ')+' → logprob: -5.603912353515625
    10. '()' → logprob: -5.603912353515625

Token 684: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0275288820266724
    2. ' return' → logprob: -1.0275288820266724
    3. 'return' → logprob: -1.7775288820266724
    4. ' -' → logprob: -2.902528762817383
    5. '-' → logprob: -3.902528762817383
    6. '       ' → logprob: -4.402528762817383
    7. '  ' → logprob: -4.652528762817383
    8. ' ' → logprob: -5.027528762817383
    9. '3' → logprob: -5.402528762817383
    10. '1' → logprob: -5.652528762817383

Token 685: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003199730417691171
    2. '+' → logprob: -8.250320434570312
    3. ' -' → logprob: -10.000320434570312
    4. '0' → logprob: -11.375320434570312
    5. '1' → logprob: -14.125320434570312
    6. '−' → logprob: -14.375320434570312
    7. ' ' → logprob: -15.000320434570312
    8. '   ' → logprob: -16.375320434570312
    9. '  ' → logprob: -17.375320434570312
    10. '
' → logprob: -17.500320434570312

Token 686: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01831112802028656
    2. '1' → logprob: -4.018311023712158
    3. ' ' → logprob: -9.018311500549316
    4. '+' → logprob: -10.643311500549316
    5. '-' → logprob: -11.893311500549316
    6. 'EPS' → logprob: -12.268311500549316
    7. '3' → logprob: -13.393311500549316
    8. '
' → logprob: -14.018311500549316
    9. '２' → logprob: -14.455811500549316
    10. '   ' → logprob: -14.643311500549316

Token 687: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.38996556401252747
    2. '#' → logprob: -1.139965534210205
    3. '   ' → logprob: -6.139965534210205
    4. ' return' → logprob: -7.889965534210205
    5. '0' → logprob: -8.764966011047363
    6. 'return' → logprob: -8.889966011047363
    7. ' ' → logprob: -9.014966011047363
    8. '1' → logprob: -10.139966011047363
    9. '<|end|>' → logprob: -11.139966011047363
    10. '  ' → logprob: -11.264966011047363

Token 688: ' a' (ID: 261)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30768656730651855
    2. '-' → logprob: -1.8076865673065186
    3. '1' → logprob: -3.1826865673065186
    4. '+b' → logprob: -4.057686805725098
    5. 'a' → logprob: -4.682686805725098
    6. ' +' → logprob: -4.932686805725098
    7. 'b' → logprob: -5.057686805725098
    8. ' ' → logprob: -5.182686805725098
    9. ' -' → logprob: -5.807686805725098
    10. '#' → logprob: -5.932686805725098

Token 689: ' ->' (ID: 2747)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2537669241428375
    2. ' b' → logprob: -1.5037668943405151
    3. '>b' → logprob: -7.628767013549805
    4. ' ' → logprob: -8.378767013549805
    5. '+' → logprob: -8.503767013549805
    6. ',b' → logprob: -8.628767013549805
    7. '-b' → logprob: -9.128767013549805
    8. '->' → logprob: -9.128767013549805
    9. '>' → logprob: -9.503767013549805
    10. ',' → logprob: -9.503767013549805

Token 690: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006296341773122549
    2. ' b' → logprob: -5.506296157836914
    3. 'c' → logprob: -6.131296157836914
    4. ' c' → logprob: -10.256296157836914
    5. 'a' → logprob: -12.006296157836914
    6. ' ' → logprob: -16.131296157836914
    7. '	b' → logprob: -16.131296157836914
    8. ' a' → logprob: -17.006296157836914
    9. ' ' → logprob: -17.256296157836914
    10. '-' → logprob: -17.256296157836914

Token 691: ' ->' (ID: 2747)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002614550176076591
    2. ' c' → logprob: -8.250261306762695
    3. '	c' → logprob: -15.750261306762695
    4. '_c' → logprob: -18.250261306762695
    5. '<c' → logprob: -19.875261306762695
    6. '   ' → logprob: -20.125261306762695
    7. '+c' → logprob: -20.250261306762695
    8. ')c' → logprob: -20.375261306762695
    9. '$c' → logprob: -20.625261306762695
    10. ' ' → logprob: -20.875261306762695

Token 693: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6105067133903503
    2. '0' → logprob: -1.3605067729949951
    3. ' return' → logprob: -1.9855067729949951
    4. 'return' → logprob: -2.860506772994995
    5. ' ' → logprob: -5.485506534576416
    6. '+' → logprob: -7.110506534576416
    7. '1' → logprob: -7.485506534576416
    8. '	return' → logprob: -9.610507011413574
    9. '  ' → logprob: -9.735507011413574
    10. ' +' → logprob: -9.860507011413574

Token 694: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.017710501328110695
    2. '0' → logprob: -4.5177106857299805
    3. ' return' → logprob: -5.2677106857299805
    4. '   ' → logprob: -6.5177106857299805
    5. '	return' → logprob: -12.64271068572998
    6. ' ' → logprob: -12.76771068572998
    7. '  ' → logprob: -14.51771068572998
    8. '1' → logprob: -14.76771068572998
    9. '
' → logprob: -15.01771068572998
    10. '    ' → logprob: -15.76771068572998

Token 695: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026898697018623352
    2. 'return' (adapté à ' return') → logprob: -3.6518986225128174
    3. ' return' → logprob: -7.6518988609313965
    4. ' ' → logprob: -9.151898384094238
    5. '   ' → logprob: -11.151898384094238
    6. '  ' → logprob: -13.276898384094238
    7. '
' → logprob: -15.276898384094238
    8. 'eturn' → logprob: -15.776898384094238
    9. 'else' → logprob: -15.901898384094238
    10. '1' → logprob: -15.901898384094238

Token 696: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '00' → logprob: -18.500009536743164
    4. '０' → logprob: -19.375009536743164
    5. '۰' → logprob: -19.750009536743164
    6. '000' → logprob: -20.000009536743164
    7. '  ' → logprob: -21.000009536743164
    8. '   ' → logprob: -21.875009536743164
    9. 'O' → logprob: -22.125009536743164
    10. ' ' → logprob: -22.375009536743164

Token 697: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '０' → logprob: -18.75002670288086
    4. '۰' → logprob: -19.00002670288086
    5. '00' → logprob: -19.75002670288086
    6. '  ' → logprob: -20.62502670288086
    7. '000' → logprob: -21.50002670288086
    8. '   ' → logprob: -21.50002670288086
    9. '०' → logprob: -22.75002670288086
    10. '	' → logprob: -23.00002670288086

Token 698: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 699: ' a' (ID: 261)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3941827714443207
    2. '1' → logprob: -1.269182801246643
    3. ' ' → logprob: -4.1441826820373535
    4. '-' → logprob: -4.2691826820373535
    5. 'None' → logprob: -4.8941826820373535
    6. 'a' → logprob: -6.0191826820373535
    7. '2' → logprob: -6.3941826820373535
    8. 'c' → logprob: -7.0191826820373535
    9. ' None' → logprob: -7.0191826820373535
    10. 'col' → logprob: -7.7691826820373535

Token 700: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.45616859197616577
    2. ' ->' → logprob: -1.8311686515808105
    3. '<|end|>' → logprob: -2.0811686515808105
    4. ',' → logprob: -3.4561686515808105
    5. 'def' → logprob: -3.5811686515808105
    6. 'b' → logprob: -4.7061686515808105
    7. '#' → logprob: -5.3311686515808105
    8. ' #' → logprob: -6.7061686515808105
    9. 'return' → logprob: -6.9561686515808105
    10. '-->' → logprob: -7.3311686515808105

Token 701: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.474215567111969
    2. 'b' → logprob: -0.974215567111969
    3. ' c' → logprob: -9.349215507507324
    4. ' b' → logprob: -10.099215507507324
    5. 'a' → logprob: -11.974215507507324
    6. '0' → logprob: -13.224215507507324
    7. '
' → logprob: -14.724215507507324
    8. ' ' → logprob: -14.849215507507324
    9. '1' → logprob: -14.974215507507324
    10. '	c' → logprob: -15.349215507507324

Token 702: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.475289523601532
    2. ' ->' → logprob: -0.975289523601532
    3. 'b' → logprob: -6.850289344787598
    4. '==' → logprob: -9.975289344787598
    5. '<|end|>' → logprob: -9.975289344787598
    6. ' ==' → logprob: -11.100289344787598
    7. '<|end|>' → logprob: -11.600289344787598
    8. ')->' → logprob: -11.850289344787598
    9. '=' → logprob: -12.475289344787598
    10. '>' → logprob: -12.725289344787598

Token 703: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. '	b' → logprob: -18.37501335144043
    4. '<|end|>' → logprob: -18.87501335144043
    5. 'a' → logprob: -20.75001335144043
    6. ')b' → logprob: -21.37501335144043
    7. ' ' → logprob: -21.50001335144043
    8. '
' → logprob: -21.75001335144043
    9. '_b' → logprob: -21.87501335144043
    10. '<b' → logprob: -22.50001335144043

Token 704: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 705: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5797674655914307
    2. 'def' → logprob: -0.9547674655914307
    3. '   ' → logprob: -3.0797674655914307
    4. '
' → logprob: -5.704767227172852
    5. ')' → logprob: -6.079767227172852
    6. ' def' → logprob: -7.454767227172852
    7. ' #' → logprob: -7.454767227172852
    8. 'class' → logprob: -7.579767227172852
    9. ' ' → logprob: -7.954767227172852
    10. 'from' → logprob: -8.329767227172852

Token 706: ' p' (ID: 275)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14882047474384308
    2. '#' → logprob: -2.023820400238037
    3. 'class' → logprob: -5.898820400238037
    4. 'from' → logprob: -6.648820400238037
    5. 'import' → logprob: -7.273820400238037
    6. ' def' → logprob: -8.023820877075195
    7. '"""
' → logprob: -8.273820877075195
    8. '
' → logprob: -8.398820877075195
    9. '#!/' → logprob: -9.523820877075195
    10. '"""' → logprob: -9.711320877075195

Token 707: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07636260241270065
    2. 'oint' → logprob: -3.4513626098632812
    3. '#' → logprob: -3.9513626098632812
    4. 'r' → logprob: -5.326362609863281
    5. ' def' → logprob: -5.451362609863281
    6. 'class' → logprob: -5.576362609863281
    7. 'oints' → logprob: -6.326362609863281
    8. ' =' → logprob: -6.451362609863281
    9. 'os' → logprob: -6.951362609863281
    10. '
' → logprob: -7.076362609863281

Token 708: 'l' (ID: 75)
  Prédit: 'projection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'projection' → logprob: -0.5599883794784546
    2. 'on' → logprob: -2.184988498687744
    3. 'arg' → logprob: -2.434988498687744
    4. 'pos' → logprob: -3.184988498687744
    5. 'proj' → logprob: -3.434988498687744
    6. 'position' → logprob: -3.434988498687744
    7. 'dist' → logprob: -3.684988498687744
    8. 'distance' → logprob: -4.059988498687744
    9. 'Projection' → logprob: -4.184988498687744
    10. 'def' → logprob: -4.309988498687744

Token 709: 'への' (ID: 107871)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.9879645109176636
    2. 't' → logprob: -1.7379645109176636
    3. 'ist' → logprob: -2.737964630126953
    4. 'os' → logprob: -2.862964630126953
    5. 'osition' → logprob: -3.612964630126953
    6. 'ro' → logprob: -3.862964630126953
    7. 'ar' → logprob: -3.862964630126953
    8. '#' → logprob: -3.987964630126953
    9. '所在' → logprob: -4.112964630126953
    10. 'class' → logprob: -4.237964630126953

Token 710: '射' (ID: 32590)
  Prédit: 'projection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'projection' → logprob: -0.44361674785614014
    2. '距' → logprob: -2.0686168670654297
    3. 'proj' → logprob: -2.4436168670654297
    4. 'foot' → logprob: -2.9436168670654297
    5. '\xe5\x9e' → logprob: -3.0686168670654297
    6. 'distance' → logprob: -4.31861686706543
    7. 'closest' → logprob: -4.69361686706543
    8. '位置' → logprob: -5.31861686706543
    9. '所属' → logprob: -5.44361686706543
    10. 'pos' → logprob: -5.81861686706543

Token 711: '影' (ID: 5235)
  Prédit: '影'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '影' → logprob: -0.008282046765089035
    2. 'projection' → logprob: -6.38328218460083
    3. '射' → logprob: -6.50828218460083
    4. 't' → logprob: -7.13328218460083
    5. 'project' → logprob: -7.25828218460083
    6. '1' → logprob: -7.88328218460083
    7. '\xe5\x9e' → logprob: -8.508281707763672
    8. 'proj' → logprob: -8.633281707763672
    9. '```' → logprob: -8.633281707763672
    10. '0' → logprob: -9.008281707763672

Token 712: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.908022285439074e-05
    2. ' def' → logprob: -9.750059127807617
    3. '(def' → logprob: -14.625059127807617
    4. '
' → logprob: -16.125059127807617
    5. '(' → logprob: -16.500059127807617
    6. '(point' → logprob: -16.750059127807617
    7. '(p' → logprob: -17.500059127807617
    8. ':def' → logprob: -17.500059127807617
    9. '#' → logprob: -17.750059127807617
    10. '(Point' → logprob: -17.875059127807617

Token 713: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.250000953674316
    3. '
' → logprob: -16.875
    4. '(def' → logprob: -21.0
    5. '```' → logprob: -21.5
    6. '	def' → logprob: -21.5
    7. ':def' → logprob: -21.625
    8. '#' → logprob: -21.75
    9. 'Def' → logprob: -22.5
    10. ')' → logprob: -22.625

Token 714: ' projection' (ID: 41244)
  Prédit: 'projection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'projection' → logprob: -0.11834731698036194
    2. 'proj' → logprob: -2.868347406387329
    3. 'project' → logprob: -2.993347406387329
    4. 'Projection' → logprob: -6.24334716796875
    5. ' projection' → logprob: -6.24334716796875
    6. 'cross' → logprob: -8.24334716796875
    7. 'Project' → logprob: -8.86834716796875
    8. 'foot' → logprob: -9.24334716796875
    9. ' proj' → logprob: -9.86834716796875
    10. 'pro' → logprob: -9.86834716796875

Token 715: '(l' (ID: 4179)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.003527136752381921
    2. '(point' → logprob: -6.1285271644592285
    3. '(l' → logprob: -6.6285271644592285
    4. 'p' → logprob: -11.87852668762207
    5. '(' → logprob: -12.00352668762207
    6. '(vec' → logprob: -13.25352668762207
    7. 'point' → logprob: -13.87852668762207
    8. '(line' → logprob: -14.12852668762207
    9. '(pt' → logprob: -14.25352668762207
    10. 'l' → logprob: -15.00352668762207

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009176511666737497
    2. ':' → logprob: -7.125917434692383
    3. '(point' → logprob: -10.000917434692383
    4. '(line' → logprob: -10.875917434692383
    5. ',line' → logprob: -10.875917434692383
    6. ',l' → logprob: -12.000917434692383
    7. ' ,' → logprob: -12.125917434692383
    8. 'def' → logprob: -12.250917434692383
    9. ',p' → logprob: -12.875917434692383
    10. '(l' → logprob: -13.375917434692383

Token 717: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.107425062713446e-06
    2. ' p' → logprob: -11.875006675720215
    3. '	p' → logprob: -18.12500762939453
    4. 'point' → logprob: -18.50000762939453
    5. '   ' → logprob: -19.00000762939453
    6. '<p' → logprob: -20.50000762939453
    7. ')p' → logprob: -20.75000762939453
    8. '_p' → logprob: -21.37500762939453
    9. '```' → logprob: -21.75000762939453
    10. '
' → logprob: -22.00000762939453

Token 718: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0067345574498176575
    2. '):
' → logprob: -5.006734371185303
    3. ':' → logprob: -11.256734848022461
    4. '):
' → logprob: -12.256734848022461
    5. ')' → logprob: -14.131734848022461
    6. ' ):' → logprob: -14.506734848022461
    7. '):

' → logprob: -16.00673484802246
    8. '   ' → logprob: -16.25673484802246
    9. ',' → logprob: -17.13173484802246
    10. '():' → logprob: -17.88173484802246

Token 719: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1260558366775513
    2. 'base' → logprob: -1.2510558366775513
    3. 'vec' → logprob: -1.7510558366775513
    4. 'a' → logprob: -2.2510557174682617
    5. 'ap' → logprob: -3.1260557174682617
    6. 'v' → logprob: -4.001055717468262
    7. 't' → logprob: -4.751055717468262
    8. 'b' → logprob: -4.876055717468262
    9. 'return' → logprob: -5.001055717468262
    10. 'r' → logprob: -5.126055717468262

Token 720: ' t' (ID: 260)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.1590418964624405
    2. 'r' → logprob: -2.6590418815612793
    3. 'b' → logprob: -3.0340418815612793
    4. 'vec' → logprob: -4.159041881561279
    5. 'l' → logprob: -4.784041881561279
    6. 't' (adapté à ' t') → logprob: -6.909041881561279
    7. 'ap' → logprob: -7.159041881561279
    8. 'return' → logprob: -7.284041881561279
    9. 'a' → logprob: -7.534041881561279
    10. 'd' → logprob: -7.784041881561279

Token 721: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2859014868736267
    2. '=' → logprob: -1.4109015464782715
    3. '=(' → logprob: -5.4109015464782715
    4. '=((' → logprob: -9.035901069641113
    5. '=v' → logprob: -10.160901069641113
    6. '=t' → logprob: -11.035901069641113
    7. '=len' → logprob: -11.410901069641113
    8. '_vec' → logprob: -11.535901069641113
    9. '=l' → logprob: -11.660901069641113
    10. '=r' → logprob: -11.785901069641113

Token 722: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.004410178866237402
    2. '((' → logprob: -5.629410266876221
    3. '(dot' → logprob: -7.379410266876221
    4. ' dot' → logprob: -8.629409790039062
    5. ' ((' → logprob: -13.004409790039062
    6. '(' → logprob: -13.004409790039062
    7. '(((' → logprob: -13.629409790039062
    8. '.dot' → logprob: -15.254409790039062
    9. 'max' → logprob: -15.504409790039062
    10. '
' → logprob: -15.754409790039062

Token 723: '(l' (ID: 4179)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.023291943594813347
    2. '(l' → logprob: -3.773291826248169
    3. '((' → logprob: -10.27329158782959
    4. 'p' → logprob: -11.39829158782959
    5. 'l' → logprob: -14.64829158782959
    6. '(' → logprob: -15.52329158782959
    7. ' (' → logprob: -17.898292541503906
    8. '(
' → logprob: -18.523292541503906
    9. '	l' → logprob: -18.648292541503906
    10. '	p' → logprob: -18.773292541503906

Token 724: '.b' (ID: 1292)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.4240797758102417
    2. '(l' → logprob: -2.2990798950195312
    3. '.p' → logprob: -2.4240798950195312
    4. 'p' → logprob: -2.5490798950195312
    5. '.l' → logprob: -2.6740798950195312
    6. 'l' → logprob: -4.799079895019531
    7. '	l' → logprob: -7.674079895019531
    8. '	p' → logprob: -8.049079895019531
    9. '   ' → logprob: -8.924079895019531
    10. ' (' → logprob: -9.174079895019531

Token 725: '-l' (ID: 2887)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.13497985899448395
    2. '-' → logprob: -3.1349799633026123
    3. '-l' → logprob: -3.1349799633026123
    4. ' -' → logprob: -3.2599799633026123
    5. 'p' → logprob: -7.884979724884033
    6. '-a' → logprob: -7.884979724884033
    7. '-
' → logprob: -10.384980201721191
    8. '(p' → logprob: -10.634980201721191
    9. ' p' → logprob: -11.009980201721191
    10. '-b' → logprob: -11.759980201721191

Token 726: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.12696653604507446
    2. '.l' → logprob: -2.1269664764404297
    3. 'a' → logprob: -10.62696647644043
    4. '.' → logprob: -11.37696647644043
    5. '.b' → logprob: -14.25196647644043
    6. 'l' → logprob: -14.62696647644043
    7. '```' → logprob: -15.37696647644043
    8. '.p' → logprob: -15.50196647644043
    9. ' .' → logprob: -15.62696647644043
    10. '.i' → logprob: -15.75196647644043

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016301481809932739
    2. ',p' → logprob: -9.125163078308105
    3. ',l' → logprob: -10.250163078308105
    4. ' ,' → logprob: -11.125163078308105
    5. 'p' → logprob: -12.875163078308105
    6. ',
' → logprob: -13.750163078308105
    7. 'l' → logprob: -15.875163078308105
    8. '   ' → logprob: -16.37516212463379
    9. '(p' → logprob: -17.25016212463379
    10. ',(' → logprob: -17.50016212463379

Token 728: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.9795445849886164e-05
    2. ' p' → logprob: -9.750060081481934
    3. '(p' → logprob: -13.500060081481934
    4. '   ' → logprob: -18.750059127807617
    5. '	p' → logprob: -18.750059127807617
    6. '<p' → logprob: -19.125059127807617
    7. ' (' → logprob: -19.250059127807617
    8. ' ' → logprob: -20.750059127807617
    9. '
' → logprob: -20.875059127807617
    10. '  ' → logprob: -21.125059127807617

Token 729: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.017113160341978073
    2. ' -' → logprob: -4.142113208770752
    3. '-' → logprob: -6.892113208770752
    4. '-
' → logprob: -10.017112731933594
    5. '-p' → logprob: -11.267112731933594
    6. '-(' → logprob: -13.767112731933594
    7. 'l' → logprob: -14.017112731933594
    8. '
' → logprob: -14.142112731933594
    9. ' -
' → logprob: -14.142112731933594
    10. ' ' → logprob: -15.017112731933594

Token 730: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.00015502817404922098
    2. 'a' → logprob: -8.875155448913574
    3. '.' → logprob: -11.250155448913574
    4. '.l' → logprob: -13.125155448913574
    5. ' a' → logprob: -18.250154495239258
    6. 'l' → logprob: -18.375154495239258
    7. ')' → logprob: -18.500154495239258
    8. 'а' → logprob: -18.625154495239258
    9. '.b' → logprob: -18.875154495239258
    10. ')a' → logprob: -19.000154495239258

Token 731: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000627610192168504
    2. ')/' → logprob: -7.375627517700195
    3. ' )' → logprob: -14.500627517700195
    4. ')/(' → logprob: -15.250627517700195
    5. '   ' → logprob: -16.000627517700195
    6. ')
' → logprob: -16.250627517700195
    7. ')
/' → logprob: -18.500627517700195
    8. ')*' → logprob: -19.250627517700195
    9. '）' → logprob: -19.250627517700195
    10. '),' → logprob: -19.750627517700195

Token 732: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3192739188671112
    2. '/' → logprob: -1.3192739486694336
    3. '/d' → logprob: -5.444273948669434
    4. '   ' → logprob: -6.444273948669434
    5. '/
' → logprob: -10.444273948669434
    6. 't' → logprob: -11.194273948669434
    7. '
' → logprob: -11.319273948669434
    8. '/t' → logprob: -11.944273948669434
    9. ' /
' → logprob: -12.319273948669434
    10. '/tmp' → logprob: -12.944273948669434

Token 733: ' abs' (ID: 8443)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.5960020422935486
    2. 'abs' → logprob: -0.8460020422935486
    3. '((' → logprob: -4.096002101898193
    4. '(dot' → logprob: -6.346002101898193
    5. '(abs' → logprob: -6.596002101898193
    6. ' dot' → logprob: -9.596001625061035
    7. ' abs' → logprob: -11.346001625061035
    8. ' ((' → logprob: -12.096001625061035
    9. '(p' → logprob: -12.596001625061035
    10. 'pow' → logprob: -12.596001625061035

Token 734: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.282920129597187e-05
    2. 'l' → logprob: -11.500012397766113
    3. '((' → logprob: -13.000012397766113
    4. '(
' → logprob: -15.500012397766113
    5. '(' → logprob: -16.00001335144043
    6. '	l' → logprob: -16.87501335144043
    7. ' (' → logprob: -17.37501335144043
    8. '
' → logprob: -18.75001335144043
    9. '```' → logprob: -19.37501335144043
    10. '   ' → logprob: -19.62501335144043

Token 735: '.a' (ID: 8772)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.014035746455192566
    2. '(b' → logprob: -4.389035701751709
    3. '(l' → logprob: -6.889035701751709
    4. 'b' → logprob: -7.639035701751709
    5. '.l' → logprob: -11.639036178588867
    6. ')' → logprob: -12.139036178588867
    7. ').' → logprob: -13.014036178588867
    8. ' (' → logprob: -13.514036178588867
    9. '
' → logprob: -13.764036178588867
    10. '	b' → logprob: -13.889036178588867

Token 736: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.2769956886768341
    2. '-b' → logprob: -1.6519956588745117
    3. 'l' → logprob: -3.5269956588745117
    4. '-' → logprob: -4.776995658874512
    5. 'b' → logprob: -5.151995658874512
    6. ' -' → logprob: -5.651995658874512
    7. 'p' → logprob: -6.776995658874512
    8. '-p' → logprob: -7.151995658874512
    9. '-self' → logprob: -8.026995658874512
    10. ')' → logprob: -8.151995658874512

Token 737: '.b' (ID: 1292)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006807972211390734
    2. '.b' → logprob: -5.006807804107666
    3. '	b' → logprob: -10.131808280944824
    4. ' b' → logprob: -10.131808280944824
    5. '_b' → logprob: -12.131808280944824
    6. 'l' → logprob: -12.756808280944824
    7. 'a' → logprob: -13.881808280944824
    8. 'p' → logprob: -13.881808280944824
    9. '-b' → logprob: -14.256808280944824
    10. '```' → logprob: -14.381808280944824

Token 738: ')**' (ID: 80066)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009796110913157463
    2. ')**' → logprob: -4.634796142578125
    3. ')
' → logprob: -10.634796142578125
    4. '**' → logprob: -11.509796142578125
    5. ')

' → logprob: -13.759796142578125
    6. ' )' → logprob: -14.259796142578125
    7. '2' → logprob: -14.259796142578125
    8. ' ' → logprob: -14.384796142578125
    9. '())' → logprob: -14.884796142578125
    10. '))' → logprob: -14.884796142578125

Token 739: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023166877508629113
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -14.500231742858887
    4. '
' → logprob: -15.500231742858887
    5. '```' → logprob: -15.625231742858887
    6. '  ' → logprob: -16.12523078918457
    7. '​' → logprob: -17.50023078918457
    8. '**' → logprob: -18.00023078918457
    9. ' ' → logprob: -18.12523078918457
    10. '

' → logprob: -18.37523078918457

Token 740: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3175888955593109
    2. '   ' → logprob: -1.9425889253616333
    3. ' return' → logprob: -2.0675888061523438
    4. '	return' → logprob: -6.692588806152344
    5. 'l' → logprob: -7.692588806152344
    6. ' l' → logprob: -8.442588806152344
    7. '(l' → logprob: -9.067588806152344
    8. '(' → logprob: -10.067588806152344
    9. '	l' → logprob: -10.067588806152344
    10. ' =' → logprob: -10.317588806152344

Token 742: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.517498254776001
    2. 'l' → logprob: -1.017498254776001
    3. ' return' → logprob: -3.392498254776001
    4. ' l' → logprob: -4.892498016357422
    5. '(l' → logprob: -7.392498016357422
    6. '   ' → logprob: -7.392498016357422
    7. 'Point' → logprob: -10.517498016357422
    8. '	l' → logprob: -10.767498016357422
    9. ' (' → logprob: -11.142498016357422
    10. 'Return' → logprob: -11.392498016357422

Token 743: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003526075044646859
    2. ' l' → logprob: -5.753526210784912
    3. 'Point' → logprob: -8.128525733947754
    4. 'Line' → logprob: -10.128525733947754
    5. ' Point' → logprob: -11.503525733947754
    6. '	l' → logprob: -13.378525733947754
    7. '(l' → logprob: -13.628525733947754
    8. '   ' → logprob: -15.628525733947754
    9. 'line' → logprob: -16.12852668762207
    10. ' Line' → logprob: -16.12852668762207

Token 744: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.004095854703336954
    2. '.Point' → logprob: -6.254096031188965
    3. 'a' → logprob: -6.379096031188965
    4. '.Line' → logprob: -9.004096031188965
    5. 'Point' → logprob: -9.254096031188965
    6. ' Point' → logprob: -9.504096031188965
    7. '.' → logprob: -9.504096031188965
    8. '.__' → logprob: -10.004096031188965
    9. 'Line' → logprob: -11.254096031188965
    10. '(Point' → logprob: -11.504096031188965

Token 745: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1003417819738388
    2. ' +' → logprob: -2.350341796875
    3. '+t' → logprob: -9.100341796875
    4. '+(' → logprob: -11.475341796875
    5. '+l' → logprob: -11.850341796875
    6. '+p' → logprob: -12.850341796875
    7. '＋' → logprob: -14.100341796875
    8. '+b' → logprob: -14.975341796875
    9. '+s' → logprob: -15.225341796875
    10. '+i' → logprob: -15.475341796875

Token 746: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0005149058997631073
    2. '(L' → logprob: -8.62551498413086
    3. ' (' → logprob: -9.12551498413086
    4. '(' → logprob: -9.25051498413086
    5. '((' → logprob: -9.50051498413086
    6. '(t' → logprob: -10.25051498413086
    7. '(R' → logprob: -12.50051498413086
    8. '(p' → logprob: -12.62551498413086
    9. '(Line' → logprob: -12.62551498413086
    10. '(ll' → logprob: -12.75051498413086

Token 747: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02975824475288391
    2. '(l' → logprob: -3.5297582149505615
    3. '	l' → logprob: -13.02975845336914
    4. ' (' → logprob: -13.02975845336914
    5. ' l' → logprob: -13.27975845336914
    6. '   ' → logprob: -14.15475845336914
    7. '((' → logprob: -14.65475845336914
    8. '(' → logprob: -14.90475845336914
    9. ' ' → logprob: -18.02975845336914
    10. ',l' → logprob: -18.15475845336914

Token 748: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00020818933262489736
    2. 'b' → logprob: -8.500207901000977
    3. '(b' → logprob: -12.625207901000977
    4. '	b' → logprob: -14.375207901000977
    5. '.' → logprob: -14.750207901000977
    6. '   ' → logprob: -16.125207901000977
    7. ' .' → logprob: -16.250207901000977
    8. '```' → logprob: -16.750207901000977
    9. '*b' → logprob: -16.875207901000977
    10. '
' → logprob: -16.875207901000977

Token 749: '-l' (ID: 2887)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7246235013008118
    2. '-l' → logprob: -0.7246235013008118
    3. ' -' → logprob: -3.474623441696167
    4. '-
' → logprob: -11.599623680114746
    5. '-lfs' → logprob: -13.849623680114746
    6. '-self' → logprob: -15.224623680114746
    7. 'l' → logprob: -15.349623680114746
    8. '-lnd' → logprob: -15.474623680114746
    9. '-L' → logprob: -15.474623680114746
    10. '-il' → logprob: -15.599623680114746

Token 750: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.004626649431884289
    2. 'a' → logprob: -5.379626750946045
    3. ' a' → logprob: -13.629626274108887
    4. '.' → logprob: -13.629626274108887
    5. ' .' → logprob: -14.004626274108887
    6. '   ' → logprob: -14.004626274108887
    7. ')' → logprob: -14.254626274108887
    8. ')a' → logprob: -14.254626274108887
    9. ' ' → logprob: -15.504626274108887
    10. '	a' → logprob: -15.879626274108887

Token 751: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.313283234834671
    2. ')' → logprob: -1.3132832050323486
    3. '*t' → logprob: -11.81328296661377
    4. ')t' → logprob: -11.81328296661377
    5. ')*(' → logprob: -12.68828296661377
    6. '*' → logprob: -13.06328296661377
    7. '*)' → logprob: -13.93828296661377
    8. ' )' → logprob: -15.06328296661377
    9. ')**' → logprob: -16.188283920288086
    10. '）' → logprob: -16.938283920288086

Token 752: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -5.836499985889532e-05
    2. ' t' → logprob: -9.7500581741333
    3. '	t' → logprob: -18.250059127807617
    4. '   ' → logprob: -19.250059127807617
    5. '`t' → logprob: -20.000059127807617
    6. '(t' → logprob: -20.500059127807617
    7. ' ' → logprob: -21.500059127807617
    8. '
' → logprob: -22.500059127807617
    9. '  ' → logprob: -23.375059127807617
    10. ')t' → logprob: -23.500059127807617

Token 753: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 754: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08715963363647461
    2. '<|end|>' → logprob: -2.7121596336364746
    3. 'def' → logprob: -4.712159633636475
    4. ')' → logprob: -5.337159633636475
    5. '
' → logprob: -6.587159633636475
    6. '<|end|>' → logprob: -7.212159633636475
    7. ' #' → logprob: -8.712160110473633
    8. '.' → logprob: -8.962160110473633
    9. ' ' → logprob: -9.087160110473633
    10. '   ' → logprob: -9.337160110473633

Token 755: ' p' (ID: 275)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04433693364262581
    2. '#' → logprob: -3.169337034225464
    3. 'distance' → logprob: -7.794336795806885
    4. 'reflection' → logprob: -8.044337272644043
    5. 'reflect' → logprob: -8.169337272644043
    6. 'dist' → logprob: -9.044337272644043
    7. 'intersection' → logprob: -10.544337272644043
    8. 'from' → logprob: -10.544337272644043
    9. 'closest' → logprob: -10.669337272644043
    10. '
' → logprob: -10.669337272644043

Token 756: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.287890762090683
    2. '#' → logprob: -2.287890672683716
    3. 'p' → logprob: -2.287890672683716
    4. '
' → logprob: -5.287890911102295
    5. 'a' → logprob: -5.350390911102295
    6. 'l' → logprob: -5.725390911102295
    7. 'oint' → logprob: -5.787890911102295
    8. ' def' → logprob: -5.787890911102295
    9. 'r' → logprob: -6.037890911102295
    10. ' p' → logprob: -6.100390911102295

Token 757: 'l' (ID: 75)
  Prédit: 'reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reflection' → logprob: -0.031990643590688705
    2. 'sym' → logprob: -4.5319905281066895
    3. 'Reflection' → logprob: -5.2819905281066895
    4. 'reflect' → logprob: -5.2819905281066895
    5. 'vertical' → logprob: -5.5319905281066895
    6. 'distance' → logprob: -6.2819905281066895
    7. 'projection' → logprob: -6.6569905281066895
    8. 're' → logprob: -6.6569905281066895
    9. 'ref' → logprob: -7.0319905281066895
    10. 's' → logprob: -7.5319905281066895

Token 758: 'によ' (ID: 158777)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7606368064880371
    2. '#' → logprob: -1.385636806488037
    3. 'との' → logprob: -2.260636806488037
    4. 'への' → logprob: -3.010636806488037
    5. 'def' → logprob: -3.635636806488037
    6. 'r' → logprob: -4.385636806488037
    7. 'class' → logprob: -4.510636806488037
    8. 'から' → logprob: -4.635636806488037
    9. 'l' → logprob: -5.010636806488037
    10. 'a' → logprob: -5.260636806488037

Token 759: 'る' (ID: 6996)
  Prédit: 'る'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -0.0013597593642771244
    2. 'って' → logprob: -6.751359939575195
    3. 'def' → logprob: -9.376359939575195
    4. 'り' → logprob: -9.876359939575195
    5. 'つ' → logprob: -11.251359939575195
    6. '#' → logprob: -11.251359939575195
    7. '```' → logprob: -12.126359939575195
    8. 'う' → logprob: -12.376359939575195
    9. 'て' → logprob: -12.751359939575195
    10. '   ' → logprob: -13.751359939575195

Token 760: '反' (ID: 23004)
  Prédit: 'reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reflection' → logprob: -0.0018301078816875815
    2. 'reflect' → logprob: -6.626830101013184
    3. ' reflection' → logprob: -8.626830101013184
    4. 'ref' → logprob: -9.626830101013184
    5. 'Reflection' → logprob: -9.876830101013184
    6. 'projection' → logprob: -10.001830101013184
    7. '反' → logprob: -10.126830101013184
    8. ' Reflection' → logprob: -10.751830101013184
    9. 'mirror' → logprob: -10.876830101013184
    10. '#' → logprob: -10.876830101013184

Token 761: '射' (ID: 32590)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.06489987671375275
    2. '射' → logprob: -3.5648999214172363
    3. 'lection' → logprob: -3.6898999214172363
    4. 'sym' → logprob: -6.564899921417236
    5. 'ection' → logprob: -6.689899921417236
    6. 'reflection' → logprob: -6.689899921417236
    7. 'flex' → logprob: -6.939899921417236
    8. 'fle' → logprob: -7.689899921417236
    9. 's' → logprob: -7.814899921417236
    10. 'fl' → logprob: -7.939899921417236

Token 762: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.719917630311102e-05
    2. ' def' → logprob: -9.500077247619629
    3. '(def' → logprob: -13.250077247619629
    4. '(' → logprob: -15.375077247619629
    5. '
' → logprob: -16.250076293945312
    6. '#' → logprob: -16.750076293945312
    7. '(l' → logprob: -17.375076293945312
    8. ')' → logprob: -17.500076293945312
    9. ':def' → logprob: -17.500076293945312
    10. '(p' → logprob: -17.875076293945312

Token 763: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.491498531133402e-06
    2. ' def' → logprob: -11.625009536743164
    3. '
' → logprob: -14.500009536743164
    4. '#' → logprob: -19.500009536743164
    5. '	def' → logprob: -19.875009536743164
    6. 'reflection' → logprob: -20.000009536743164
    7. ':def' → logprob: -20.375009536743164
    8. 'Reflection' → logprob: -20.625009536743164
    9. '```' → logprob: -20.625009536743164
    10. 'reflect' → logprob: -20.750009536743164

Token 764: ' reflection' (ID: 39755)
  Prédit: 'reflection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reflection' → logprob: -0.0006793115753680468
    2. ' reflection' → logprob: -7.6256794929504395
    3. 're' → logprob: -9.000679016113281
    4. 'reflect' → logprob: -10.000679016113281
    5. 'projection' → logprob: -11.875679016113281
    6. 'Reflection' → logprob: -11.875679016113281
    7. 'ref' → logprob: -12.375679016113281
    8. 'sym' → logprob: -12.500679016113281
    9. 'def' → logprob: -14.750679016113281
    10. 's' → logprob: -16.00067901611328

Token 765: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. '(line' → logprob: -15.50000286102295
    4. 'def' → logprob: -16.250001907348633
    5. ' (' → logprob: -16.875001907348633
    6. '(L' → logprob: -19.000001907348633
    7. '(
' → logprob: -19.375001907348633
    8. 'l' → logprob: -20.125001907348633
    9. '(def' → logprob: -20.125001907348633
    10. '(p' → logprob: -20.250001907348633

Token 766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.44443862256594e-05
    2. ',p' → logprob: -10.250064849853516
    3. ' ,' → logprob: -10.875064849853516
    4. '(p' → logprob: -12.125064849853516
    5. ',
' → logprob: -13.500064849853516
    6. ',l' → logprob: -13.875064849853516
    7. 'p' → logprob: -14.000064849853516
    8. 'def' → logprob: -14.375064849853516
    9. '):
' → logprob: -15.000064849853516
    10. ' p' → logprob: -15.500064849853516

Token 767: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007099286303855479
    2. ' p' → logprob: -7.2507100105285645
    3. 'point' → logprob: -18.000709533691406
    4. '	p' → logprob: -19.375709533691406
    5. '   ' → logprob: -20.000709533691406
    6. ' ' → logprob: -20.875709533691406
    7. 'P' → logprob: -20.875709533691406
    8. ',' → logprob: -21.000709533691406
    9. 'Point' → logprob: -21.000709533691406
    10. ')' → logprob: -21.250709533691406

Token 768: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06198202446103096
    2. '):
' → logprob: -2.8119819164276123
    3. '):
' → logprob: -11.436982154846191
    4. ')' → logprob: -13.061982154846191
    5. '):

' → logprob: -14.186982154846191
    6. ' ):' → logprob: -14.686982154846191
    7. '   ' → logprob: -15.436982154846191
    8. ':' → logprob: -16.686981201171875
    9. ' ' → logprob: -18.061981201171875
    10. ')：' → logprob: -18.061981201171875

Token 769: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0012029698118567467
    2. '   ' → logprob: -7.2512030601501465
    3. ' return' → logprob: -8.001202583312988
    4. 'projection' → logprob: -9.626202583312988
    5. '2' → logprob: -9.876202583312988
    6. 'proj' → logprob: -10.751202583312988
    7. 'r' → logprob: -11.501202583312988
    8. 'pro' → logprob: -13.751202583312988
    9. 't' → logprob: -13.751202583312988
    10. ' ' → logprob: -13.876202583312988

Token 770: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008701292099431157
    2. 'proj' → logprob: -7.500870227813721
    3. 'projection' → logprob: -8.875869750976562
    4. 'pro' → logprob: -10.250869750976562
    5. 'r' → logprob: -10.375869750976562
    6. 'pr' → logprob: -10.625869750976562
    7. 'project' → logprob: -10.875869750976562
    8. 'a' → logprob: -11.375869750976562
    9. 'p' → logprob: -11.375869750976562
    10. ' return' → logprob: -11.500869750976562

Token 771: ' p' (ID: 275)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02119031734764576
    2. 'projection' → logprob: -3.8961904048919678
    3. 'p' → logprob: -7.521190166473389
    4. ' l' → logprob: -9.896190643310547
    5. 'project' → logprob: -10.896190643310547
    6. 'reflection' → logprob: -11.146190643310547
    7. 'Projection' → logprob: -11.896190643310547
    8. ' projection' → logprob: -12.146190643310547
    9. 'line' → logprob: -12.521190643310547
    10. 'proj' → logprob: -12.646190643310547

Token 772: ' +' (ID: 659)
  Prédit: 'projection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'projection' → logprob: -0.2344929277896881
    2. ' +' → logprob: -1.9844928979873657
    3. '+' → logprob: -3.3594930171966553
    4. ' projection' → logprob: -3.8594930171966553
    5. 'reflection' → logprob: -5.484492778778076
    6. 'Projection' → logprob: -6.109492778778076
    7. '_projection' → logprob: -6.609492778778076
    8. 'jection' → logprob: -6.609492778778076
    9. 'Reflection' → logprob: -6.984492778778076
    10. '*' → logprob: -7.234492778778076

Token 773: ' (' (ID: 350)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.27207472920417786
    2. '(' → logprob: -2.7720746994018555
    3. '(project' → logprob: -2.8970746994018555
    4. '(R' → logprob: -3.0220746994018555
    5. '(l' → logprob: -3.2720746994018555
    6. '(rotation' → logprob: -5.5220746994018555
    7. '(pred' → logprob: -5.5220746994018555
    8. '(result' → logprob: -5.6470746994018555
    9. '(prob' → logprob: -6.0220746994018555
    10. '(full' → logprob: -6.6470746994018555

Token 774: 'projection' (ID: 144127)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.14404474198818207
    2. 'projection' → logprob: -2.0190446376800537
    3. '(project' → logprob: -6.769044876098633
    4. 'Projection' → logprob: -9.644044876098633
    5. 'project' → logprob: -10.144044876098633
    6. ' projection' → logprob: -10.144044876098633
    7. ' (' → logprob: -10.269044876098633
    8. '_projection' → logprob: -11.394044876098633
    9. '(p' → logprob: -11.519044876098633
    10. '(' → logprob: -12.144044876098633

Token 775: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. '(line' → logprob: -17.125
    4. '(
' → logprob: -18.0
    5. '	l' → logprob: -18.0
    6. ')' → logprob: -18.5
    7. '[l' → logprob: -18.875
    8. ' (' → logprob: -18.875
    9. 'l' → logprob: -19.625
    10. ' l' → logprob: -20.0

Token 776: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.36574100604048e-06
    2. 'l' → logprob: -12.750004768371582
    3. '(' → logprob: -13.875004768371582
    4. ' (' → logprob: -15.250004768371582
    5. ')' → logprob: -16.125003814697266
    6. '(line' → logprob: -16.875003814697266
    7. '	l' → logprob: -17.375003814697266
    8. '[l' → logprob: -18.000003814697266
    9. ')(' → logprob: -18.500003814697266
    10. ' l' → logprob: -18.750003814697266

Token 777: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002309646224603057
    2. 'l' → logprob: -6.127309799194336
    3. 'projection' → logprob: -9.877309799194336
    4. '(p' → logprob: -10.502309799194336
    5. ' p' → logprob: -10.877309799194336
    6. 'Point' → logprob: -12.252309799194336
    7. 'reflection' → logprob: -12.252309799194336
    8. '2' → logprob: -12.377309799194336
    9. '(' → logprob: -13.377309799194336
    10. '(l' → logprob: -13.627309799194336

Token 778: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2677048444747925
    2. '-l' → logprob: -2.017704963684082
    3. ' -' → logprob: -2.767704963684082
    4. ')' → logprob: -3.767704963684082
    5. ')-' → logprob: -4.392704963684082
    6. 'l' → logprob: -6.392704963684082
    7. ')-(' → logprob: -7.142704963684082
    8. '-p' → logprob: -7.767704963684082
    9. '-(' → logprob: -8.267704963684082
    10. '*' → logprob: -9.517704963684082

Token 779: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40256500244140625
    2. ' -' → logprob: -1.2775650024414062
    3. '-(' → logprob: -3.4025650024414062
    4. '-l' → logprob: -4.652565002441406
    5. '-p' → logprob: -4.652565002441406
    6. ' -(' → logprob: -8.902565002441406
    7. '*' → logprob: -9.152565002441406
    8. '-s' → logprob: -11.152565002441406
    9. '   ' → logprob: -11.402565002441406
    10. '-P' → logprob: -12.027565002441406

Token 780: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.014684110297821e-06
    2. ' p' → logprob: -11.625008583068848
    3. '	p' → logprob: -19.125009536743164
    4. '(p' → logprob: -21.000009536743164
    5. '<p' → logprob: -21.500009536743164
    6. '
' → logprob: -21.625009536743164
    7. ')p' → logprob: -22.125009536743164
    8. '[p' → logprob: -22.375009536743164
    9. 'projection' → logprob: -22.750009536743164
    10. '_p' → logprob: -23.875009536743164

Token 781: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.16036579012870789
    2. ')' → logprob: -1.9103658199310303
    3. ')*(' → logprob: -8.91036605834961
    4. '*' → logprob: -12.41036605834961
    5. ' )' → logprob: -13.53536605834961
    6. '）' → logprob: -14.16036605834961
    7. '   ' → logprob: -15.78536605834961
    8. '*)' → logprob: -16.28536605834961
    9. ']*' → logprob: -16.66036605834961
    10. ' ' → logprob: -16.78536605834961

Token 782: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.0219828002154827e-05
    2. 'Point' → logprob: -11.500020027160645
    3. ' ' → logprob: -12.375020027160645
    4. '(Point' → logprob: -13.125020027160645
    5. '(' → logprob: -13.250020027160645
    6. ' Point' → logprob: -14.875020027160645
    7. '*' → logprob: -14.875020027160645
    8. '２' → logprob: -15.000020027160645
    9. '	Point' → logprob: -15.125020027160645
    10. '   ' → logprob: -15.375020027160645

Token 783: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 785: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.32422611117362976
    2. 'main' → logprob: -2.199226140975952
    3. ' convex' → logprob: -2.574226140975952
    4. 'conv' → logprob: -3.324226140975952
    5. 'cc' → logprob: -5.074225902557373
    6. 'inter' → logprob: -5.199225902557373
    7. ' solve' → logprob: -5.574225902557373
    8. ' intersection' → logprob: -5.699225902557373
    9. 'intersection' → logprob: -5.699225902557373
    10. ' area' → logprob: -5.699225902557373

Token 786: 'Par' (ID: 1586)
  Prédit: '_parallel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parallel' → logprob: -0.39025649428367615
    2. '_point' → logprob: -1.8902565240859985
    3. '_inter' → logprob: -3.015256404876709
    4. 'parallel' → logprob: -3.390256404876709
    5. '_on' → logprob: -3.765256404876709
    6. 'Parallel' → logprob: -4.015256404876709
    7. '_par' → logprob: -4.890256404876709
    8. '_' → logprob: -5.140256404876709
    9. 'Point' → logprob: -5.390256404876709
    10. '_cross' → logprob: -5.640256404876709

Token 787: 'are' (ID: 644)
  Prédit: 'allel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'allel' → logprob: -0.13533683121204376
    2. '(l' → logprob: -2.1353368759155273
    3. 'al' → logprob: -4.885336875915527
    4. 'alle' → logprob: -7.885336875915527
    5. 'a' → logprob: -9.260336875915527
    6. '(' → logprob: -9.260336875915527
    7. '(line' → logprob: -9.635336875915527
    8. 'l' → logprob: -10.385336875915527
    9. 'all' → logprob: -10.385336875915527
    10. '(a' → logprob: -10.760336875915527

Token 788: 'll' (ID: 680)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005600620643235743
    2. 'll' → logprob: -7.500560283660889
    3. 'lle' → logprob: -11.87555980682373
    4. 'ls' → logprob: -17.250560760498047
    5. 'lel' → logprob: -17.375560760498047
    6. 'л' → logprob: -17.625560760498047
    7. '```' → logprob: -18.125560760498047
    8. 'lse' → logprob: -19.500560760498047
    9. 'lf' → logprob: -20.125560760498047
    10. 'лл' → logprob: -20.125560760498047

Token 789: '(l' (ID: 4179)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.981667537620524e-06
    2. '(l' → logprob: -13.750001907348633
    3. 'll' → logprob: -14.125001907348633
    4. '```' → logprob: -16.375001907348633
    5. 'л' → logprob: -17.625001907348633
    6. '(' → logprob: -18.250001907348633
    7. '[l' → logprob: -19.375001907348633
    8. ' l' → logprob: -19.500001907348633
    9. 'ls' → logprob: -19.625001907348633
    10. '	l' → logprob: -19.750001907348633

Token 790: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.153795766294934e-06
    2. 'll' → logprob: -12.250005722045898
    3. '(l' → logprob: -13.625005722045898
    4. 'л' → logprob: -17.3750057220459
    5. '```' → logprob: -17.3750057220459
    6. '	l' → logprob: -18.2500057220459
    7. '(' → logprob: -18.3750057220459
    8. 'lel' → logprob: -18.3750057220459
    9. '1' → logprob: -18.7500057220459
    10. '[l' → logprob: -19.0000057220459

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5761845707893372
    2. 'l' → logprob: -0.8261845707893372
    3. ',l' → logprob: -9.076184272766113
    4. '(l' → logprob: -9.576184272766113
    5. 'll' → logprob: -9.951184272766113
    6. 's' → logprob: -12.701184272766113
    7. '[l' → logprob: -12.701184272766113
    8. 'al' → logprob: -13.326184272766113
    9. '1' → logprob: -13.451184272766113
    10. 'lf' → logprob: -13.451184272766113

Token 792: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3484518527984619
    2. ' l' → logprob: -1.223451852798462
    3. '	l' → logprob: -13.098451614379883
    4. '   ' → logprob: -13.223451614379883
    5. ' ' → logprob: -13.723451614379883
    6. ')' → logprob: -14.473451614379883
    7. '(l' → logprob: -15.098451614379883
    8. ' ' → logprob: -15.223451614379883
    9. 'def' → logprob: -15.348451614379883
    10. '):
' → logprob: -15.348451614379883

Token 793: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17239415645599365
    2. '1' → logprob: -1.9223941564559937
    3. 'ine' → logprob: -4.422394275665283
    4. 'ne' → logprob: -10.422393798828125
    5. ',' → logprob: -11.547393798828125
    6. 'l' → logprob: -11.797393798828125
    7. ')' → logprob: -11.922393798828125
    8. '   ' → logprob: -11.922393798828125
    9. 'i' → logprob: -12.547393798828125
    10. 'ist' → logprob: -12.672393798828125

Token 794: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47439053654670715
    2. '):' → logprob: -0.9743905067443848
    3. '):
' → logprob: -8.224390983581543
    4. ')' → logprob: -10.474390983581543
    5. '):

' → logprob: -11.599390983581543
    6. 'l' → logprob: -12.724390983581543
    7. ' ):' → logprob: -13.974390983581543
    8. '(l' → logprob: -13.974390983581543
    9. '   ' → logprob: -14.224390983581543
    10. ' ):
' → logprob: -14.474390983581543

Token 795: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8361063003540039
    2. 'return' → logprob: -0.8361063003540039
    3. 'eturn' → logprob: -2.336106300354004
    4. 'abs' → logprob: -3.461106300354004
    5. ' return' → logprob: -5.336106300354004
    6. ' abs' → logprob: -9.211106300354004
    7. '(abs' → logprob: -9.836106300354004
    8. '	return' → logprob: -10.086106300354004
    9. ' ' → logprob: -10.961106300354004
    10. '
' → logprob: -10.961106300354004

Token 796: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00428508035838604
    2. ' return' → logprob: -5.879284858703613
    3. 'abs' → logprob: -6.754284858703613
    4. 'eq' → logprob: -8.504284858703613
    5. '   ' → logprob: -9.379284858703613
    6. 'def' → logprob: -11.129284858703613
    7. 'eturn' → logprob: -12.879284858703613
    8. '
' → logprob: -13.129284858703613
    9. '	return' → logprob: -13.129284858703613
    10. ' abs' → logprob: -13.754284858703613

Token 797: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.4293988347053528
    2. 'abs' → logprob: -1.054398775100708
    3. '(eq' → logprob: -8.304398536682129
    4. ' abs' → logprob: -8.429398536682129
    5. ' eq' → logprob: -8.804398536682129
    6. '(abs' → logprob: -10.054398536682129
    7. 'cross' → logprob: -11.929398536682129
    8. '(' → logprob: -12.179398536682129
    9. 'cc' → logprob: -12.429398536682129
    10. 'bool' → logprob: -12.429398536682129

Token 798: '(c' (ID: 2410)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.15433838963508606
    2. '(c' → logprob: -2.5293383598327637
    3. '(abs' → logprob: -2.9043383598327637
    4. '(((' → logprob: -4.904338359832764
    5. '(l' → logprob: -7.654338359832764
    6. '(' → logprob: -7.904338359832764
    7. 'abs' → logprob: -8.654338836669922
    8. '(s' → logprob: -9.904338836669922
    9. '((((' → logprob: -11.279338836669922
    10. 'cross' → logprob: -12.029338836669922

Token 799: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.00022165567497722805
    2. 'cross' → logprob: -8.500221252441406
    3. 'oss' → logprob: -11.625221252441406
    4. 'ros' → logprob: -11.750221252441406
    5. ' ross' → logprob: -15.000221252441406
    6. '#' → logprob: -15.250221252441406
    7. 'r' → logprob: -15.375221252441406
    8. '(' → logprob: -16.125221252441406
    9. 'lass' → logprob: -16.375221252441406
    10. ' cross' → logprob: -16.500221252441406

Token 800: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0017544300062581897
    2. 'l' → logprob: -6.376754283905029
    3. '((' → logprob: -10.001754760742188
    4. '(' → logprob: -12.751754760742188
    5. '	l' → logprob: -13.001754760742188
    6. ' (' → logprob: -14.876754760742188
    7. ',l' → logprob: -15.001754760742188
    8. '(
' → logprob: -15.251754760742188
    9. '   ' → logprob: -15.751754760742188
    10. ' l' → logprob: -16.001754760742188

Token 801: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08946248888969421
    2. '(l' → logprob: -2.9644625186920166
    3. '1' → logprob: -3.4644625186920166
    4. ' l' → logprob: -6.0894622802734375
    5. '-l' → logprob: -8.464462280273438
    6. '	l' → logprob: -9.464462280273438
    7. '(' → logprob: -9.839462280273438
    8. ' (' → logprob: -11.089462280273438
    9. ')' → logprob: -11.214462280273438
    10. ',l' → logprob: -11.464462280273438

Token 802: '.a' (ID: 8772)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02424931339919567
    2. '(l' → logprob: -3.774249315261841
    3. '.l' → logprob: -7.149249076843262
    4. '1' → logprob: -9.524249076843262
    5. ' l' → logprob: -9.649249076843262
    6. '(' → logprob: -10.024249076843262
    7. '	l' → logprob: -11.774249076843262
    8. ' (' → logprob: -11.899249076843262
    9. '   ' → logprob: -11.899249076843262
    10. 'b' → logprob: -12.524249076843262

Token 803: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.08751651644706726
    2. 'l' → logprob: -2.9625165462493896
    3. ' -' → logprob: -3.8375165462493896
    4. '-' → logprob: -4.5875163078308105
    5. ' l' → logprob: -8.837516784667969
    6. ',' → logprob: -9.462516784667969
    7. '(l' → logprob: -9.837516784667969
    8. '
' → logprob: -10.587516784667969
    9. ' ' → logprob: -11.337516784667969
    10. '-
' → logprob: -11.837516784667969

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5017760992050171
    2. '.l' → logprob: -1.251776099205017
    3. 'l' → logprob: -2.2517762184143066
    4. '.b' → logprob: -6.626776218414307
    5. 'b' → logprob: -7.251776218414307
    6. '	l' → logprob: -7.376776218414307
    7. ' l' → logprob: -9.001775741577148
    8. '.ll' → logprob: -9.126775741577148
    9. '.line' → logprob: -9.751775741577148
    10. '.' → logprob: -9.751775741577148

Token 805: '.b' (ID: 1292)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1285436749458313
    2. 'l' → logprob: -2.5035436153411865
    3. '.b' → logprob: -3.5035436153411865
    4. '.l' → logprob: -4.753543853759766
    5. ' b' → logprob: -10.378543853759766
    6. '	l' → logprob: -10.378543853759766
    7. ' l' → logprob: -10.628543853759766
    8. '	b' → logprob: -11.253543853759766
    9. '-b' → logprob: -11.878543853759766
    10. '   ' → logprob: -12.253543853759766

Token 806: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007275633979588747
    2. ',l' → logprob: -7.375727653503418
    3. ' ,' → logprob: -9.625727653503418
    4. 'l' → logprob: -11.125727653503418
    5. ',
' → logprob: -11.750727653503418
    6. '(l' → logprob: -12.750727653503418
    7. ' l' → logprob: -12.875727653503418
    8. '(),' → logprob: -12.875727653503418
    9. '   ' → logprob: -13.250727653503418
    10. '),' → logprob: -14.625727653503418

Token 807: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.003179855877533555
    2. ' l' → logprob: -5.753180027008057
    3. '	l' → logprob: -13.628179550170898
    4. '   ' → logprob: -14.753179550170898
    5. '(l' → logprob: -15.128179550170898
    6. ')' → logprob: -16.0031795501709
    7. ' л' → logprob: -16.5031795501709
    8. '<|end|>' → logprob: -16.5031795501709
    9. ' ' → logprob: -17.3781795501709
    10. '-l' → logprob: -17.6281795501709

Token 808: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.125000953674316
    3. 'l' → logprob: -15.625000953674316
    4. ' ' → logprob: -17.250001907348633
    5. '```' → logprob: -17.625001907348633
    6. ' l' → logprob: -18.000001907348633
    7. '.l' → logprob: -18.812501907348633
    8. '
' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.187501907348633
    10. '.' → logprob: -19.250001907348633

Token 809: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.00023452966706827283
    2. 'a' → logprob: -8.375234603881836
    3. '.' → logprob: -13.500234603881836
    4. '#a' → logprob: -13.875234603881836
    5. '
' → logprob: -14.125234603881836
    6. ' .' → logprob: -14.375234603881836
    7. '1' → logprob: -16.250234603881836
    8. '<|end|>' → logprob: -17.000234603881836
    9. ').' → logprob: -17.125234603881836
    10. '	a' → logprob: -17.125234603881836

Token 810: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.0002993544621858746
    2. ' -' → logprob: -8.750299453735352
    3. '-' → logprob: -9.000299453735352
    4. 'l' → logprob: -11.500299453735352
    5. '-
' → logprob: -12.375299453735352
    6. ' l' → logprob: -13.875299453735352
    7. '-lfs' → logprob: -14.125299453735352
    8. '	l' → logprob: -14.250299453735352
    9. '' → logprob: -15.625299453735352
    10. ' ' → logprob: -16.00029945373535

Token 811: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007547161658294499
    2. '.' → logprob: -7.6257548332214355
    3. '1' → logprob: -8.625754356384277
    4. '.l' → logprob: -10.000754356384277
    5. '```' → logprob: -11.250754356384277
    6. '<|end|>' → logprob: -12.125754356384277
    7. '.py' → logprob: -13.375754356384277
    8. '.s' → logprob: -13.500754356384277
    9. '.m' → logprob: -13.500754356384277
    10. 'l' → logprob: -13.625754356384277

Token 812: '.b' (ID: 1292)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.051315806806087494
    2. '.b' → logprob: -3.0513157844543457
    3. '-b' → logprob: -5.926315784454346
    4. '	b' → logprob: -10.801316261291504
    5. 'a' → logprob: -11.176316261291504
    6. ')b' → logprob: -12.176316261291504
    7. '```' → logprob: -12.926316261291504
    8. '.' → logprob: -13.176316261291504
    9. ',b' → logprob: -13.301316261291504
    10. '>b' → logprob: -13.301316261291504

Token 813: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030077552422881126
    2. '),' → logprob: -3.5300774574279785
    3. ' ,' → logprob: -8.780077934265137
    4. ')' → logprob: -9.405077934265137
    5. '(),' → logprob: -9.905077934265137
    6. ' ),' → logprob: -11.155077934265137
    7. '   ' → logprob: -11.405077934265137
    8. ')),' → logprob: -12.030077934265137
    9. ',l' → logprob: -13.155077934265137
    10. ',),' → logprob: -13.530077934265137

Token 814: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '  ' → logprob: -20.250001907348633
    5. ')' → logprob: -20.375001907348633
    6. '۰' → logprob: -21.250001907348633
    7. '０' → logprob: -21.500001907348633
    8. '
' → logprob: -21.625001907348633
    9. 'zero' → logprob: -21.625001907348633
    10. '00' → logprob: -21.750001907348633

Token 815: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.125001907348633
    4. '  ' → logprob: -20.125001907348633
    5. ')' → logprob: -20.750001907348633
    6. '1' → logprob: -21.250001907348633
    7. 'zero' → logprob: -21.625001907348633
    8. '	' → logprob: -21.750001907348633
    9. '۰' → logprob: -21.875001907348633
    10. '０' → logprob: -22.000001907348633

Token 816: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '))' → logprob: -14.625000953674316
    3. ' )' → logprob: -14.625000953674316
    4. ')
' → logprob: -15.250000953674316
    5. '())' → logprob: -16.375001907348633
    6. '()' → logprob: -18.000001907348633
    7. '})' → logprob: -18.375001907348633
    8. '),' → logprob: -18.500001907348633
    9. ')}' → logprob: -18.500001907348633
    10. ')return' → logprob: -18.750001907348633

Token 817: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16952145099639893
    2. 'd' → logprob: -2.6695213317871094
    3. 'f' → logprob: -3.1695213317871094
    4. ' ' → logprob: -4.294521331787109
    5. '_' → logprob: -4.419521331787109
    6. 'e' → logprob: -5.044521331787109
    7. 'n' → logprob: -6.044521331787109
    8. 'r' → logprob: -6.169521331787109
    9. '#' → logprob: -6.419521331787109
    10. ')' → logprob: -6.919521331787109

Token 818: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0676056370139122
    2. 'inter' → logprob: -3.06760573387146
    3. ' is' → logprob: -4.567605495452881
    4. 'intersection' → logprob: -5.067605495452881
    5. 'cross' → logprob: -7.192605495452881
    6. 'cc' → logprob: -7.942605495452881
    7. 'line' → logprob: -8.692605972290039
    8. ' intersect' → logprob: -8.942605972290039
    9. ' intersection' → logprob: -9.317605972290039
    10. 'get' → logprob: -9.442605972290039

Token 819: 'Vertical' (ID: 25466)
  Prédit: 'Orth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Orth' → logprob: -0.12128549814224243
    2. 'Parallel' → logprob: -2.7462854385375977
    3. 'Intersect' → logprob: -3.9962854385375977
    4. 'Per' → logprob: -4.371285438537598
    5. 'On' → logprob: -5.246285438537598
    6. 'Par' → logprob: -5.871285438537598
    7. 'Cross' → logprob: -5.996285438537598
    8. 'Point' → logprob: -5.996285438537598
    9. 'orth' → logprob: -6.871285438537598
    10. 'Intersection' → logprob: -6.871285438537598

Token 820: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.3464544432936236e-05
    2. '(' → logprob: -10.125043869018555
    3. '(L' → logprob: -13.250043869018555
    4. '(line' → logprob: -14.125043869018555
    5. '(lambda' → logprob: -14.750043869018555
    6. ' (' → logprob: -15.750043869018555
    7. 'def' → logprob: -16.500043869018555
    8. '(ll' → logprob: -16.875043869018555
    9. '(a' → logprob: -16.875043869018555
    10. '(s' → logprob: -17.250043869018555

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00697549432516098
    2. '(l' → logprob: -5.1319756507873535
    3. '2' → logprob: -6.8819756507873535
    4. '(' → logprob: -12.131975173950195
    5. 'ine' → logprob: -12.381975173950195
    6. 'inear' → logprob: -12.756975173950195
    7. '(line' → logprob: -13.381975173950195
    8. ' (' → logprob: -13.881975173950195
    9. ')' → logprob: -13.881975173950195
    10. 'inel' → logprob: -14.131975173950195

Token 822: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010044663213193417
    2. ',l' → logprob: -7.126004695892334
    3. '(l' → logprob: -8.876004219055176
    4. ' ,' → logprob: -9.876004219055176
    5. '(' → logprob: -12.626004219055176
    6. ',
' → logprob: -13.001004219055176
    7. 'l' → logprob: -13.876004219055176
    8. ')' → logprob: -14.126004219055176
    9. '   ' → logprob: -15.251004219055176
    10. '1' → logprob: -15.376004219055176

Token 823: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008051026379689574
    2. ' l' → logprob: -7.125804901123047
    3. '	l' → logprob: -15.125804901123047
    4. 'def' → logprob: -16.250804901123047
    5. '(l' → logprob: -16.375804901123047
    6. ')' → logprob: -16.625804901123047
    7. '   ' → logprob: -17.250804901123047
    8. ' л' → logprob: -18.000804901123047
    9. 'lambda' → logprob: -18.125804901123047
    10. '<|end|>' → logprob: -18.625804901123047

Token 824: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0026071679312735796
    2. '2' → logprob: -6.002607345581055
    3. ',l' → logprob: -9.627607345581055
    4. ',' → logprob: -10.377607345581055
    5. 'l' → logprob: -11.127607345581055
    6. '(l' → logprob: -11.252607345581055
    7. '.l' → logprob: -13.002607345581055
    8. '```' → logprob: -13.502607345581055
    9. '(' → logprob: -14.752607345581055
    10. 'b' → logprob: -15.002607345581055

Token 825: '):
' (ID: 1883)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.005900353193283081
    2. ',' → logprob: -5.6309003829956055
    3. '):' → logprob: -6.1309003829956055
    4. ',l' → logprob: -9.755900382995605
    5. '):
' → logprob: -10.880900382995605
    6. '(' → logprob: -11.005900382995605
    7. ')' → logprob: -11.380900382995605
    8. ' (' → logprob: -11.755900382995605
    9. '   ' → logprob: -12.130900382995605
    10. ' l' → logprob: -13.505900382995605

Token 826: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02531316503882408
    2. ' return' → logprob: -4.275313377380371
    3. 'def' → logprob: -4.775313377380371
    4. '   ' → logprob: -6.025313377380371
    5. '	return' → logprob: -9.025313377380371
    6. 'eturn' → logprob: -9.275313377380371
    7. ' def' → logprob: -11.400313377380371
    8. ' ' → logprob: -12.025313377380371
    9. 'eq' → logprob: -13.025313377380371
    10. '
' → logprob: -14.525313377380371

Token 827: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00041363044874742627
    2. ' return' → logprob: -8.00041389465332
    3. 'def' → logprob: -10.25041389465332
    4. '   ' → logprob: -10.75041389465332
    5. 'eq' → logprob: -10.87541389465332
    6. '	return' → logprob: -13.87541389465332
    7. 'eturn' → logprob: -14.37541389465332
    8. '
' → logprob: -14.87541389465332
    9. ' ' → logprob: -15.25041389465332
    10. '  ' → logprob: -15.87541389465332

Token 828: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0005968777113594115
    2. 'abs' → logprob: -7.50059700012207
    3. ' eq' → logprob: -10.25059700012207
    4. 'is' → logprob: -11.75059700012207
    5. 'dot' → logprob: -15.25059700012207
    6. '(eq' → logprob: -15.37559700012207
    7. ' abs' → logprob: -15.87559700012207
    8. 'not' → logprob: -16.25059700012207
    9. 'lambda' → logprob: -17.62559700012207
    10. 'cross' → logprob: -17.87559700012207

Token 829: '(dot' (ID: 151841)
  Prédit: '(dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dot' → logprob: -0.0002354832977289334
    2. 'dot' → logprob: -8.750235557556152
    3. '(abs' → logprob: -9.750235557556152
    4. '(c' → logprob: -11.250235557556152
    5. 'abs' → logprob: -12.250235557556152
    6. '((' → logprob: -14.750235557556152
    7. '(' → logprob: -14.875235557556152
    8. '_dot' → logprob: -16.375234603881836
    9. ' dot' → logprob: -17.250234603881836
    10. 'Dot' → logprob: -17.375234603881836

Token 830: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -13.00000286102295
    3. 'l' → logprob: -15.37500286102295
    4. '((' → logprob: -15.75000286102295
    5. '(line' → logprob: -15.87500286102295
    6. '(
' → logprob: -16.250003814697266
    7. ' (' → logprob: -16.625003814697266
    8. ',l' → logprob: -17.000003814697266
    9. '	l' → logprob: -18.500003814697266
    10. '<|end|>' → logprob: -18.750003814697266

Token 831: '1' (ID: 16)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.06203770637512207
    2. '1' → logprob: -2.812037706375122
    3. '(' → logprob: -9.812037467956543
    4. 'l' → logprob: -11.812037467956543
    5. ',l' → logprob: -13.062037467956543
    6. '	l' → logprob: -13.437037467956543
    7. '-l' → logprob: -13.937037467956543
    8. '(
' → logprob: -14.062037467956543
    9. ' (' → logprob: -14.562037467956543
    10. '[l' → logprob: -15.062037467956543

Token 832: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00842722225934267
    2. '(a' → logprob: -5.383427143096924
    3. '(l' → logprob: -6.258427143096924
    4. '.a' → logprob: -6.508427143096924
    5. 'l' → logprob: -8.758427619934082
    6. ' a' → logprob: -8.883427619934082
    7. '   ' → logprob: -10.758427619934082
    8. '(' → logprob: -10.883427619934082
    9. '	a' → logprob: -11.133427619934082
    10. '-a' → logprob: -11.258427619934082

Token 833: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.0004533142491709441
    2. '-' → logprob: -8.500452995300293
    3. 'l' → logprob: -8.625452995300293
    4. ' -' → logprob: -9.625452995300293
    5. '	l' → logprob: -13.125452995300293
    6. ' l' → logprob: -13.625452995300293
    7. '-
' → logprob: -15.000452995300293
    8. ' ' → logprob: -15.750452995300293
    9. '   ' → logprob: -16.12545394897461
    10. '-lfs' → logprob: -16.25045394897461

Token 834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024913568049669266
    2. 'l' → logprob: -6.002491474151611
    3. ' l' → logprob: -12.127490997314453
    4. '.l' → logprob: -12.127490997314453
    5. '<|end|>' → logprob: -14.002490997314453
    6. '(l' → logprob: -14.252490997314453
    7. '	l' → logprob: -14.502490997314453
    8. '-l' → logprob: -14.502490997314453
    9. '```' → logprob: -14.877490997314453
    10. '.' → logprob: -15.502490997314453

Token 835: '.b' (ID: 1292)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061879951506853104
    2. '.l' → logprob: -3.311879873275757
    3. 'l' → logprob: -4.186880111694336
    4. '.b' → logprob: -5.186880111694336
    5. '-b' → logprob: -5.936880111694336
    6. ' l' → logprob: -9.811880111694336
    7. '	l' → logprob: -10.561880111694336
    8. '-l' → logprob: -10.686880111694336
    9. '.' → logprob: -11.686880111694336
    10. '(l' → logprob: -12.186880111694336

Token 836: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006765736034139991
    2. ',l' → logprob: -7.37567663192749
    3. ' ,' → logprob: -10.750676155090332
    4. 'l' → logprob: -11.250676155090332
    5. '(l' → logprob: -11.375676155090332
    6. ',
' → logprob: -12.875676155090332
    7. ' l' → logprob: -14.000676155090332
    8. '	l' → logprob: -15.500676155090332
    9. '(' → logprob: -15.750676155090332
    10. '(),' → logprob: -16.00067710876465

Token 837: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.011198020540177822
    2. ' l' → logprob: -4.511198043823242
    3. '   ' → logprob: -8.886198043823242
    4. '	l' → logprob: -11.636198043823242
    5. '  ' → logprob: -13.636198043823242
    6. ' ' → logprob: -14.136198043823242
    7. '    ' → logprob: -14.511198043823242
    8. '(l' → logprob: -15.136198043823242
    9. ')' → logprob: -16.636198043823242
    10. ' л' → logprob: -17.011198043823242

Token 838: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017877520294860005
    2. 'l' → logprob: -6.6267876625061035
    3. '1' → logprob: -7.7517876625061035
    4. '.l' → logprob: -10.626788139343262
    5. '(l' → logprob: -12.876788139343262
    6. ' l' → logprob: -12.876788139343262
    7. '	l' → logprob: -13.626788139343262
    8. ',l' → logprob: -14.876788139343262
    9. '-l' → logprob: -15.376788139343262
    10. '   ' → logprob: -16.001787185668945

Token 839: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0010355490958318114
    2. 'a' → logprob: -6.876035690307617
    3. '1' → logprob: -13.876035690307617
    4. '.l' → logprob: -14.126035690307617
    5. '.' → logprob: -14.251035690307617
    6. '#a' → logprob: -16.001035690307617
    7. '(a' → logprob: -16.501035690307617
    8. ' a' → logprob: -16.876035690307617
    9. ',a' → logprob: -17.001035690307617
    10. ' .' → logprob: -17.126035690307617

Token 840: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -2.451116051815916e-05
    2. ' -' → logprob: -11.125024795532227
    3. '-' → logprob: -12.000024795532227
    4. 'l' → logprob: -12.875024795532227
    5. '-
' → logprob: -14.625024795532227
    6. '	l' → logprob: -15.000024795532227
    7. ' ' → logprob: -17.000024795532227
    8. ' l' → logprob: -17.375024795532227
    9. '1' → logprob: -17.625024795532227
    10. '   ' → logprob: -17.750024795532227

Token 841: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8255473971366882
    2. 'b' → logprob: -0.8255473971366882
    3. '.l' → logprob: -2.450547456741333
    4. 'l' → logprob: -4.325547218322754
    5. '-b' → logprob: -4.450547218322754
    6. '.b' → logprob: -4.450547218322754
    7. '1' → logprob: -7.825547218322754
    8. '.' → logprob: -8.325547218322754
    9. '-l' → logprob: -8.825547218322754
    10. '	l' → logprob: -9.325547218322754

Token 842: '.b' (ID: 1292)
  Prédit: '-b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.01959640346467495
    2. '.b' → logprob: -4.519596576690674
    3. 'b' → logprob: -4.769596576690674
    4. '	b' → logprob: -11.269596099853516
    5. '1' → logprob: -12.269596099853516
    6. '-' → logprob: -12.769596099853516
    7. '_b' → logprob: -13.269596099853516
    8. '```' → logprob: -13.394596099853516
    9. '-б' → logprob: -13.644596099853516
    10. ')' → logprob: -14.269596099853516

Token 843: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -11.000032424926758
    3. '(),' → logprob: -11.250032424926758
    4. '),' → logprob: -12.875032424926758
    5. ',
' → logprob: -16.000032424926758
    6. ')' → logprob: -17.125032424926758
    7. '   ' → logprob: -17.500032424926758
    8. '0' → logprob: -17.750032424926758
    9. '1' → logprob: -18.250032424926758
    10. ' ' → logprob: -19.125032424926758

Token 844: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.250009536743164
    4. ')' → logprob: -19.250009536743164
    5. '  ' → logprob: -21.000009536743164
    6. '۰' → logprob: -22.625009536743164
    7. '00' → logprob: -22.875009536743164
    8. '    ' → logprob: -22.875009536743164
    9. ',' → logprob: -23.875009536743164
    10. '),' → logprob: -24.125009536743164

Token 845: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -17.75
    4. ')' → logprob: -20.75
    5. '  ' → logprob: -21.25
    6. '00' → logprob: -21.875
    7. '۰' → logprob: -22.125
    8. '    ' → logprob: -23.5
    9. '<|end|>' → logprob: -23.5
    10. 'zero' → logprob: -24.125

Token 846: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.75
    3. '))' → logprob: -16.875
    4. ' )' → logprob: -17.875
    5. '())' → logprob: -19.0
    6. '()' → logprob: -19.0
    7. ')return' → logprob: -19.25
    8. ')}' → logprob: -19.375
    9. '   ' → logprob: -19.5
    10. '}' → logprob: -19.75

Token 847: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9216819405555725
    2. '#' → logprob: -1.1716818809509277
    3. ' ' → logprob: -2.1716818809509277
    4. '<|end|>' → logprob: -2.7966818809509277
    5. 'd' → logprob: -3.7966818809509277
    6. ')' → logprob: -4.171681880950928
    7. '   ' → logprob: -4.171681880950928
    8. '
' → logprob: -4.546681880950928
    9. ' #' → logprob: -4.921681880950928
    10. ' 
' → logprob: -5.046681880950928

Token 848: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.9095987677574158
    2. 'inter' → logprob: -1.1595988273620605
    3. 'intersection' → logprob: -1.7845988273620605
    4. 'distance' → logprob: -3.1595988273620605
    5. 'line' → logprob: -3.9095988273620605
    6. 'cc' → logprob: -4.5345988273620605
    7. 'get' → logprob: -4.6595988273620605
    8. 'cross' → logprob: -4.9095988273620605
    9. 'dist' → logprob: -5.0345988273620605
    10. 'main' → logprob: -5.6595988273620605

Token 849: 'Intersect' (ID: 134565)
  Prédit: 'Par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Par' → logprob: -0.5317105650901794
    2. 'Parallel' → logprob: -2.281710624694824
    3. 'On' → logprob: -2.406710624694824
    4. 'Intersect' → logprob: -2.406710624694824
    5. 'Point' → logprob: -3.031710624694824
    6. 'Cross' → logprob: -3.656710624694824
    7. 'Orth' → logprob: -4.281710624694824
    8. 'Intersection' → logprob: -4.781710624694824
    9. 'Inside' → logprob: -4.781710624694824
    10. 'Inter' → logprob: -5.531710624694824

Token 850: '_lp' (ID: 174192)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.002249580342322588
    2. '(line' → logprob: -6.252249717712402
    3. '(' → logprob: -8.127249717712402
    4. '(Line' → logprob: -11.502249717712402
    5. '(a' → logprob: -12.127249717712402
    6. '(s' → logprob: -13.127249717712402
    7. 'ing' → logprob: -13.502249717712402
    8. ' (' → logprob: -13.502249717712402
    9. '(ll' → logprob: -13.752249717712402
    10. 'Line' → logprob: -13.752249717712402

Token 851: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0236950796097517
    2. '(line' → logprob: -3.7736949920654297
    3. '(Line' → logprob: -8.39869499206543
    4. '(L' → logprob: -9.02369499206543
    5. '(' → logprob: -9.52369499206543
    6. '(a' → logprob: -11.77369499206543
    7. '(lp' → logprob: -12.27369499206543
    8. '(lines' → logprob: -12.64869499206543
    9. '(p' → logprob: -12.89869499206543
    10. '(li' → logprob: -13.14869499206543

Token 852: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03654584288597107
    2. '(l' → logprob: -3.786545753479004
    3. 'l' → logprob: -4.661545753479004
    4. 'def' → logprob: -6.036545753479004
    5. '(line' → logprob: -7.911545753479004
    6. 'ine' → logprob: -8.036545753479004
    7. ')' → logprob: -8.911545753479004
    8. '):' → logprob: -9.161545753479004
    9. ' l' → logprob: -10.036545753479004
    10. '(Line' → logprob: -10.161545753479004

Token 853: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.012570394203066826
    2. 'c' → logprob: -4.387570381164551
    3. 's' → logprob: -10.63757038116455
    4. 'a' → logprob: -10.88757038116455
    5. ' p' → logprob: -11.76257038116455
    6. 'r' → logprob: -12.76257038116455
    7. 'l' → logprob: -12.76257038116455
    8. 'seg' → logprob: -13.63757038116455
    9. '   ' → logprob: -14.38757038116455
    10. 'circle' → logprob: -14.51257038116455

Token 854: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2269393801689148
    2. '):' → logprob: -1.6019394397735596
    3. ',' → logprob: -7.1019392013549805
    4. 'oint' → logprob: -7.8519392013549805
    5. '):
' → logprob: -8.72693920135498
    6. ':' → logprob: -9.85193920135498
    7. ')' → logprob: -9.97693920135498
    8. '(p' → logprob: -11.10193920135498
    9. 'p' → logprob: -11.60193920135498
    10. '):

' → logprob: -12.22693920135498

Token 855: '   ' (ID: 271)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6520751118659973
    2. 'eq' → logprob: -0.7770751118659973
    3. 'cross' → logprob: -4.277075290679932
    4. 'cc' → logprob: -6.402075290679932
    5. 'dot' → logprob: -6.402075290679932
    6. 'min' → logprob: -6.777075290679932
    7. 'return' → logprob: -8.402074813842773
    8. '(eq' → logprob: -8.527074813842773
    9. ' abs' → logprob: -9.277074813842773
    10. 'lt' → logprob: -9.402074813842773

Token 856: ' return' (ID: 622)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.28768542408943176
    2. 'abs' → logprob: -1.4126853942871094
    3. 'cross' → logprob: -6.037685394287109
    4. 'dot' → logprob: -6.162685394287109
    5. 'min' → logprob: -6.912685394287109
    6. '(eq' → logprob: -7.912685394287109
    7. 'cc' → logprob: -9.16268539428711
    8. 'lt' → logprob: -9.28768539428711
    9. 'return' (adapté à ' return') → logprob: -9.91268539428711
    10. 'l' → logprob: -10.28768539428711

Token 857: ' abs' (ID: 8443)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.4284215271472931
    2. 'abs' → logprob: -1.1784214973449707
    3. 'min' → logprob: -4.303421497344971
    4. 'cc' → logprob: -4.678421497344971
    5. 'dot' → logprob: -4.678421497344971
    6. 'cross' → logprob: -5.303421497344971
    7. 'not' → logprob: -6.303421497344971
    8. '(eq' → logprob: -7.053421497344971
    9. '(dot' → logprob: -8.803421974182129
    10. '0' → logprob: -8.928421974182129

Token 858: '(cc' (ID: 70624)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018313119187951088
    2. '(l' → logprob: -4.268312931060791
    3. '(dot' → logprob: -6.643312931060791
    4. '(pro' → logprob: -7.018312931060791
    5. '((' → logprob: -7.268312931060791
    6. '(p' → logprob: -7.643312931060791
    7. 'cross' → logprob: -8.26831340789795
    8. '(abs' → logprob: -8.39331340789795
    9. '(cc' → logprob: -9.26831340789795
    10. '(line' → logprob: -9.89331340789795

Token 859: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -7.896309739408025e-07
    2. 'p' → logprob: -14.875000953674316
    3. '
' → logprob: -15.750000953674316
    4. 'ｗ' → logprob: -16.625
    5. 'cw' → logprob: -17.25
    6. '

' → logprob: -18.375
    7. 'v' → logprob: -18.875
    8. 'wp' → logprob: -19.375
    9. '(p' → logprob: -19.5
    10. '```' → logprob: -19.8125

Token 860: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.002320937579497695
    2. 'l' → logprob: -6.252320766448975
    3. '(p' → logprob: -8.002321243286133
    4. '(' → logprob: -11.002321243286133
    5. '	l' → logprob: -11.627321243286133
    6. ')' → logprob: -11.752321243286133
    7. 'p' → logprob: -12.377321243286133
    8. '[l' → logprob: -12.502321243286133
    9. ' l' → logprob: -12.877321243286133
    10. '((' → logprob: -13.377321243286133

Token 861: '.a' (ID: 8772)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.47499921917915344
    2. '.a' → logprob: -0.974999189376831
    3. '(l' → logprob: -7.34999942779541
    4. '.' → logprob: -9.09999942779541
    5. '.p' → logprob: -9.72499942779541
    6. 'a' → logprob: -10.47499942779541
    7. ').' → logprob: -10.84999942779541
    8. '.b' → logprob: -10.97499942779541
    9. ' .' → logprob: -10.97499942779541
    10. '(a' → logprob: -12.47499942779541

Token 862: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.956338107585907
    2. 'l' → logprob: -0.956338107585907
    3. 'p' → logprob: -2.3313381671905518
    4. '(l' → logprob: -2.3313381671905518
    5. ',l' → logprob: -3.8313381671905518
    6. '.l' → logprob: -5.206337928771973
    7. '   ' → logprob: -6.331337928771973
    8. ')' → logprob: -6.456337928771973
    9. '(p' → logprob: -6.706337928771973
    10. '-l' → logprob: -6.956337928771973

Token 863: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00013727048644796014
    2. ' l' → logprob: -9.000137329101562
    3. '   ' → logprob: -11.750137329101562
    4. '	l' → logprob: -12.875137329101562
    5. 'p' → logprob: -13.125137329101562
    6. '  ' → logprob: -14.875137329101562
    7. ' ' → logprob: -15.500137329101562
    8. '    ' → logprob: -15.500137329101562
    9. '       ' → logprob: -16.375137329101562
    10. '
' → logprob: -16.375137329101562

Token 864: '.b' (ID: 1292)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7195190787315369
    2. 'l' → logprob: -1.2195191383361816
    3. '.l' → logprob: -1.9695191383361816
    4. '.b' → logprob: -2.5945191383361816
    5. 'p' → logprob: -6.469519138336182
    6. 'a' → logprob: -6.469519138336182
    7. '(l' → logprob: -8.969518661499023
    8. '.p' → logprob: -9.344518661499023
    9. '.a' → logprob: -9.719518661499023
    10. '.' → logprob: -10.719518661499023

Token 865: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016464581713080406
    2. 'p' → logprob: -4.141464710235596
    3. ',p' → logprob: -8.016464233398438
    4. ' ,' → logprob: -10.141464233398438
    5. ' p' → logprob: -10.766464233398438
    6. ',
' → logprob: -11.266464233398438
    7. '   ' → logprob: -11.516464233398438
    8. '(p' → logprob: -12.141464233398438
    9. ')' → logprob: -12.391464233398438
    10. '(),' → logprob: -13.141464233398438

Token 866: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.176947600673884e-05
    2. ' p' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.500021934509277
    4. '	p' → logprob: -16.87502098083496
    5. '<p' → logprob: -16.87502098083496
    6. '(p' → logprob: -17.00002098083496
    7. '  ' → logprob: -17.87502098083496
    8. ' ' → logprob: -18.12502098083496
    9. 'point' → logprob: -18.50002098083496
    10. 'Point' → logprob: -18.62502098083496

Token 867: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07602978497743607
    2. '))' → logprob: -2.7010297775268555
    3. '())' → logprob: -5.8260297775268555
    4. ')!=' → logprob: -6.3260297775268555
    5. '(p' → logprob: -8.326029777526855
    6. 'a' → logprob: -8.451029777526855
    7. ')==' → logprob: -8.826029777526855
    8. 'p' → logprob: -8.951029777526855
    9. '   ' → logprob: -8.951029777526855
    10. '(' → logprob: -9.576029777526855

Token 868: ' !=' (ID: 1666)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.051482491195201874
    2. ' <=' → logprob: -4.051482677459717
    3. '()' → logprob: -4.426482677459717
    4. '==' → logprob: -4.676482677459717
    5. '<' → logprob: -4.926482677459717
    6. '()<' → logprob: -6.426482677459717
    7. '!=' → logprob: -6.676482677459717
    8. ')<=' → logprob: -8.301482200622559
    9. ' <' → logprob: -8.801482200622559
    10. '()==' → logprob: -8.926482200622559

Token 869: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12780888378620148
    2. '0' → logprob: -2.1278088092803955
    3. '1' → logprob: -7.127809047698975
    4. ' ' → logprob: -9.502808570861816
    5. '3' → logprob: -13.252808570861816
    6. '   ' → logprob: -14.252808570861816
    7. '  ' → logprob: -14.877808570861816
    8. '+' → logprob: -15.877808570861816
    9. '{' → logprob: -16.127809524536133
    10. '    ' → logprob: -16.502809524536133

Token 870: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12863193452358246
    2. '2' → logprob: -2.128631830215454
    3. '1' → logprob: -6.378632068634033
    4. '3' → logprob: -12.753631591796875
    5. ' ' → logprob: -14.128631591796875
    6. '``' → logprob: -14.378631591796875
    7. '{' → logprob: -15.003631591796875
    8. '
' → logprob: -15.378631591796875
    9. '```' → logprob: -16.753631591796875
    10. '

' → logprob: -17.253631591796875

Token 871: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 872: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 873: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.014394429512321949
    2. ' is' → logprob: -4.764394283294678
    3. 'def' → logprob: -5.889394283294678
    4. 'inter' → logprob: -7.014394283294678
    5. 'cross' → logprob: -7.264394283294678
    6. 'cc' → logprob: -7.639394283294678
    7. 'eq' → logprob: -8.639394760131836
    8. 'abs' → logprob: -8.764394760131836
    9. 'intersection' → logprob: -8.764394760131836
    10. '#' → logprob: -9.764394760131836

Token 874: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.01234953198581934
    2. 'inter' → logprob: -4.887349605560303
    3. 'Parallel' → logprob: -6.637349605560303
    4. 'Cross' → logprob: -7.637349605560303
    5. 'Intersection' → logprob: -7.887349605560303
    6. 'Inter' → logprob: -8.012349128723145
    7. 'Segment' → logprob: -8.012349128723145
    8. '_inter' → logprob: -8.512349128723145
    9. 'Par' → logprob: -8.637349128723145
    10. 'SS' → logprob: -8.887349128723145

Token 875: '_ll' (ID: 105142)
  Prédit: '_ll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ll' → logprob: -0.8589708209037781
    2. '_lp' → logprob: -1.7339708805084229
    3. '_ss' → logprob: -1.9839708805084229
    4. '_ls' → logprob: -2.358970880508423
    5. '(l' → logprob: -2.858970880508423
    6. '_l' → logprob: -3.983970880508423
    7. '(ls' → logprob: -4.108970642089844
    8. '(ll' → logprob: -4.483970642089844
    9. '_sl' → logprob: -4.483970642089844
    10. '_' → logprob: -4.733970642089844

Token 876: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. '(line' → logprob: -16.875
    4. '(a' → logprob: -17.25
    5. '(ll' → logprob: -17.625
    6. 'l' → logprob: -17.875
    7. '	l' → logprob: -18.875
    8. '(L' → logprob: -19.125
    9. '(
' → logprob: -19.5
    10. ' (' → logprob: -19.5

Token 877: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07744667679071426
    2. ',' → logprob: -2.702446699142456
    3. '(l' → logprob: -5.452446460723877
    4. ',l' → logprob: -6.327446460723877
    5. '2' → logprob: -7.452446460723877
    6. ')' → logprob: -7.827446460723877
    7. '):' → logprob: -9.077446937561035
    8. '):
' → logprob: -9.327446937561035
    9. '(' → logprob: -10.202446937561035
    10. '),' → logprob: -10.452446937561035

Token 878: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.727905979962088e-05
    2. ',l' → logprob: -10.12504768371582
    3. ' ,' → logprob: -11.87504768371582
    4. ',
' → logprob: -15.62504768371582
    5. '(l' → logprob: -17.50004768371582
    6. 'l' → logprob: -17.62504768371582
    7. ',ll' → logprob: -17.62504768371582
    8. ' l' → logprob: -18.25004768371582
    9. '1' → logprob: -18.37504768371582
    10. '，' → logprob: -19.12504768371582

Token 879: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0005569627974182367
    2. ' l' → logprob: -7.500556945800781
    3. '	l' → logprob: -13.125556945800781
    4. 'def' → logprob: -13.875556945800781
    5. '   ' → logprob: -15.000556945800781
    6. '```' → logprob: -16.00055694580078
    7. '(l' → logprob: -16.25055694580078
    8. '):
' → logprob: -16.25055694580078
    9. 'lambda' → logprob: -16.50055694580078
    10. '
' → logprob: -16.62555694580078

Token 880: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11291410028934479
    2. '1' → logprob: -2.2379140853881836
    3. ',' → logprob: -9.487914085388184
    4. ' ' → logprob: -12.112914085388184
    5. 'l' → logprob: -12.237914085388184
    6. 'ine' → logprob: -14.362914085388184
    7. '```' → logprob: -14.362914085388184
    8. '_' → logprob: -14.487914085388184
    9. 'inear' → logprob: -14.862914085388184
    10. ')' → logprob: -14.862914085388184

Token 881: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014199234545230865
    2. '):
' → logprob: -4.264199256896973
    3. ')' → logprob: -10.889199256896973
    4. '(l' → logprob: -12.264199256896973
    5. ':' → logprob: -12.514199256896973
    6. '):
' → logprob: -12.889199256896973
    7. '):

' → logprob: -13.264199256896973
    8. 'def' → logprob: -13.389199256896973
    9. '(' → logprob: -13.764199256896973
    10. ' ):' → logprob: -14.764199256896973

Token 882: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0630054697394371
    2. 'return' → logprob: -3.3130054473876953
    3. 'def' → logprob: -3.8130054473876953
    4. 'if' → logprob: -6.563005447387695
    5. 'd' → logprob: -7.938005447387695
    6. ' return' → logprob: -8.188005447387695
    7. 'cross' → logprob: -8.938005447387695
    8. 'abs' → logprob: -9.188005447387695
    9. 'not' → logprob: -9.563005447387695
    10. 'c' → logprob: -10.188005447387695

Token 883: ' return' (ID: 622)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.11354267597198486
    2. 'abs' → logprob: -2.3635425567626953
    3. 'eq' → logprob: -5.363542556762695
    4. 'cross' → logprob: -5.863542556762695
    5. ' not' → logprob: -6.238542556762695
    6. '(not' → logprob: -6.363542556762695
    7. 'is' → logprob: -6.988542556762695
    8. '(abs' → logprob: -7.988542556762695
    9. '(eq' → logprob: -8.238542556762695
    10. 'True' → logprob: -8.488542556762695

Token 884: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01863177679479122
    2. 'abs' → logprob: -4.518631935119629
    3. '(not' → logprob: -6.018631935119629
    4. 'eq' → logprob: -6.393631935119629
    5. ' not' → logprob: -6.518631935119629
    6. 'is' → logprob: -6.643631935119629
    7. 'cross' → logprob: -8.143631935119629
    8. 'True' → logprob: -9.268631935119629
    9. '(eq' → logprob: -9.518631935119629
    10. '!' → logprob: -9.768631935119629

Token 885: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011356787756085396
    2. '(is' → logprob: -4.511356830596924
    3. ' is' → logprob: -8.261356353759766
    4. 'eq' → logprob: -10.761356353759766
    5. '(' → logprob: -11.636356353759766
    6. '(eq' → logprob: -12.011356353759766
    7. '(
' → logprob: -12.261356353759766
    8. ' (' → logprob: -12.761356353759766
    9. '((' → logprob: -13.011356353759766
    10. 'bool' → logprob: -13.636356353759766

Token 886: 'Par' (ID: 1586)
  Prédit: 'Par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Par' → logprob: -1.2352385965641588e-05
    2. 'Parallel' → logprob: -11.875012397766113
    3. 'is' → logprob: -12.625012397766113
    4. 'Vertical' → logprob: -13.625012397766113
    5. ' Par' → logprob: -14.125012397766113
    6. '(is' → logprob: -17.000011444091797
    7. 'Intersect' → logprob: -17.250011444091797
    8. '
' → logprob: -17.375011444091797
    9. '_par' → logprob: -17.625011444091797
    10. 'Per' → logprob: -18.625011444091797

Token 887: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.07996697723865509
    2. 'rell' → logprob: -3.4549670219421387
    3. 'allel' → logprob: -4.454967021942139
    4. 'all' → logprob: -4.579967021942139
    5. 'rel' → logprob: -4.829967021942139
    6. 'ell' → logprob: -4.954967021942139
    7. 're' → logprob: -6.079967021942139
    8. 'ar' → logprob: -6.329967021942139
    9. 'alle' → logprob: -6.579967021942139
    10. 'ral' → logprob: -6.954967021942139

Token 888: 'll' (ID: 680)
  Prédit: 'll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -2.165027217415627e-05
    2. 'l' → logprob: -11.125021934509277
    3. 'lle' → logprob: -12.250021934509277
    4. 'lll' → logprob: -13.750021934509277
    5. 'лл' → logprob: -13.875021934509277
    6. 'llll' → logprob: -17.62502098083496
    7. 'lld' → logprob: -18.00002098083496
    8. 'llt' → logprob: -18.12502098083496
    9. 'llo' → logprob: -18.12502098083496
    10. 'lles' → logprob: -19.25002098083496

Token 889: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.2378600735682994e-05
    2. 'l' → logprob: -10.375032424926758
    3. '(' → logprob: -14.625032424926758
    4. '(ll' → logprob: -15.125032424926758
    5. 'll' → logprob: -15.750032424926758
    6. ' (' → logprob: -17.375032424926758
    7. '(
' → logprob: -17.500032424926758
    8. '	l' → logprob: -18.750032424926758
    9. '[l' → logprob: -18.750032424926758
    10. '((' → logprob: -19.375032424926758

Token 890: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7476143836975098
    2. 'l' → logprob: -0.7476143836975098
    3. 'll' → logprob: -2.9976143836975098
    4. '2' → logprob: -6.37261438369751
    5. '(l' → logprob: -7.37261438369751
    6. 'r' → logprob: -7.74761438369751
    7. ' l' → logprob: -9.122613906860352
    8. '(ll' → logprob: -10.997613906860352
    9. 'el' → logprob: -11.122613906860352
    10. 'rl' → logprob: -11.122613906860352

Token 891: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0037245419807732105
    2. ',' → logprob: -5.878724575042725
    3. ',l' → logprob: -7.003724575042725
    4. ')' → logprob: -12.503724098205566
    5. '(' → logprob: -13.003724098205566
    6. ' (' → logprob: -13.378724098205566
    7. 'l' → logprob: -13.503724098205566
    8. ' ,' → logprob: -14.378724098205566
    9. ' l' → logprob: -14.753724098205566
    10. '1' → logprob: -15.253724098205566

Token 892: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0087516784551553e-05
    2. ' l' → logprob: -11.62501049041748
    3. '   ' → logprob: -14.87501049041748
    4. '(l' → logprob: -15.12501049041748
    5. ')' → logprob: -15.50001049041748
    6. '	l' → logprob: -15.75001049041748
    7. '
' → logprob: -17.750009536743164
    8. '```' → logprob: -18.000009536743164
    9. '[l' → logprob: -18.000009536743164
    10. '       ' → logprob: -18.250009536743164

Token 893: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '1' → logprob: -14.375000953674316
    3. 'l' → logprob: -15.000000953674316
    4. ' ' → logprob: -16.687501907348633
    5. ')' → logprob: -17.562501907348633
    6. '۲' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '２' → logprob: -17.875001907348633
    9. '(' → logprob: -17.937501907348633
    10. '(l' → logprob: -18.187501907348633

Token 894: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ' )' → logprob: -12.000024795532227
    3. ' and' → logprob: -12.125024795532227
    4. 'and' → logprob: -12.375024795532227
    5. '())' → logprob: -12.500024795532227
    6. ')
' → logprob: -12.625024795532227
    7. ')#' → logprob: -14.500024795532227
    8. '   ' → logprob: -14.750024795532227
    9. '<|end|>' → logprob: -15.125024795532227
    10. '()' → logprob: -15.375024795532227

Token 895: ' or' (ID: 503)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 896: ' is' (ID: 382)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.56241375207901
    2. 'is' → logprob: -1.3124136924743652
    3. '(l' → logprob: -2.3124136924743652
    4. 'l' → logprob: -3.3124136924743652
    5. '(' → logprob: -5.062413692474365
    6. '(eq' → logprob: -5.062413692474365
    7. '(any' → logprob: -5.562413692474365
    8. '(False' → logprob: -5.937413692474365
    9. '(
' → logprob: -6.312413692474365
    10. '((' → logprob: -6.562413692474365

Token 897: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -1.0587830543518066
    2. 'Par' → logprob: -1.3087830543518066
    3. 'll' → logprob: -1.5587830543518066
    4. 'is' → logprob: -2.5587830543518066
    5. 'eq' → logprob: -2.9337830543518066
    6. 'l' → logprob: -4.183783054351807
    7. 'Vertical' → logprob: -4.308783054351807
    8. 'Intersection' → logprob: -5.308783054351807
    9. 'Parallel' → logprob: -5.808783054351807
    10. 'cc' → logprob: -7.058783054351807

Token 898: '_lp' (ID: 174192)
  Prédit: '_lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lp' → logprob: -0.008490468375384808
    2. 'lp' → logprob: -5.258490562438965
    3. '_ll' → logprob: -5.758490562438965
    4. 'll' → logprob: -9.883490562438965
    5. '(lp' → logprob: -10.508490562438965
    6. '_l' → logprob: -12.133490562438965
    7. 'p' → logprob: -12.883490562438965
    8. '_pp' → logprob: -13.383490562438965
    9. 'l' → logprob: -13.383490562438965
    10. '	lp' → logprob: -13.758490562438965

Token 899: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.250005722045898
    3. '(line' → logprob: -14.500005722045898
    4. ' (' → logprob: -16.5000057220459
    5. '(
' → logprob: -17.0000057220459
    6. '(L' → logprob: -17.1250057220459
    7. 'l' → logprob: -17.6250057220459
    8. 'def' → logprob: -17.7500057220459
    9. '(ll' → logprob: -17.8750057220459
    10. ',l' → logprob: -18.1250057220459

Token 900: '1' (ID: 16)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -8.41866585687967e-06
    2. '(line' → logprob: -12.375008583068848
    3. '(' → logprob: -14.000008583068848
    4. ' l' → logprob: -14.250008583068848
    5. 'l' → logprob: -14.375008583068848
    6. '[l' → logprob: -14.375008583068848
    7. '(
' → logprob: -14.750008583068848
    8. '1' → logprob: -15.250008583068848
    9. ')' → logprob: -15.750008583068848
    10. ',l' → logprob: -15.750008583068848

Token 901: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.011532033793628216
    2. ',' → logprob: -4.511531829833984
    3. 'l' → logprob: -8.261531829833984
    4. ',l' → logprob: -8.636531829833984
    5. ')' → logprob: -10.636531829833984
    6. ' l' → logprob: -11.761531829833984
    7. '(' → logprob: -12.511531829833984
    8. ' (' → logprob: -12.636531829833984
    9. '
' → logprob: -13.136531829833984
    10. '),' → logprob: -13.886531829833984

Token 902: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.008129963040119e-06
    2. ' l' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.875003814697266
    4. 'Point' → logprob: -16.750003814697266
    5. 'Line' → logprob: -16.875003814697266
    6. ')' → logprob: -17.000003814697266
    7. '(l' → logprob: -17.625003814697266
    8. 'p' → logprob: -18.250003814697266
    9. '	l' → logprob: -18.875003814697266
    10. '  ' → logprob: -19.000003814697266

Token 903: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022116350010037422
    2. 'a' → logprob: -6.502211570739746
    3. '.b' → logprob: -8.377211570739746
    4. 'b' → logprob: -8.502211570739746
    5. '.a' → logprob: -8.627211570739746
    6. '```' → logprob: -10.127211570739746
    7. '1' → logprob: -10.627211570739746
    8. '   ' → logprob: -11.877211570739746
    9. ')' → logprob: -12.252211570739746
    10. '.p' → logprob: -12.252211570739746

Token 904: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.6679325699806213
    2. ')' → logprob: -1.4179325103759766
    3. '.b' → logprob: -1.4179325103759766
    4. '.l' → logprob: -6.292932510375977
    5. '.p' → logprob: -7.417932510375977
    6. 'a' → logprob: -8.542932510375977
    7. '))' → logprob: -10.167932510375977
    8. ')a' → logprob: -10.292932510375977
    9. 'b' → logprob: -10.542932510375977
    10. '.s' → logprob: -11.292932510375977

Token 905: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.927930654550437e-05
    2. ' or' → logprob: -11.000029563903809
    3. ')
' → logprob: -12.375029563903809
    4. 'or' → logprob: -13.125029563903809
    5. ' )' → logprob: -13.250029563903809
    6. '())' → logprob: -14.250029563903809
    7. ')return' → logprob: -14.500029563903809
    8. '))' → logprob: -14.500029563903809
    9. ')#' → logprob: -14.500029563903809
    10. ' ' → logprob: -15.250029563903809

Token 906: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 907: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.15095111727714539
    2. ' is' → logprob: -2.0259511470794678
    3. 'def' → logprob: -5.650950908660889
    4. 's' → logprob: -6.150950908660889
    5. 'cross' → logprob: -6.900950908660889
    6. 'abs' → logprob: -8.150951385498047
    7. 't' → logprob: -8.775951385498047
    8. ' def' → logprob: -8.775951385498047
    9. ' cross' → logprob: -9.025951385498047
    10. 'cc' → logprob: -9.650951385498047

Token 908: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.10011619329452515
    2. 'Par' → logprob: -3.35011625289917
    3. 'inter' → logprob: -3.85011625289917
    4. 'Segment' → logprob: -3.97511625289917
    5. 'Parallel' → logprob: -5.22511625289917
    6. 'Seg' → logprob: -6.22511625289917
    7. 'Inside' → logprob: -6.35011625289917
    8. 'Point' → logprob: -6.60011625289917
    9. 'on' → logprob: -6.85011625289917
    10. 'Intersection' → logprob: -6.85011625289917

Token 909: '_sp' (ID: 18491)
  Prédit: '_ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ls' → logprob: -0.08096197247505188
    2. 'ls' → logprob: -3.3309619426727295
    3. '_sl' → logprob: -4.455962181091309
    4. 'LS' → logprob: -4.830962181091309
    5. '(ls' → logprob: -5.455962181091309
    6. '_ll' → logprob: -5.705962181091309
    7. 'sl' → logprob: -5.955962181091309
    8. 's' → logprob: -6.705962181091309
    9. '(Line' → logprob: -6.705962181091309
    10. 'Segment' → logprob: -6.830962181091309

Token 910: '(s' (ID: 1858)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.32031217217445374
    2. 'eg' → logprob: -1.9453121423721313
    3. '(s' → logprob: -2.695312261581421
    4. 'egment' → logprob: -3.570312261581421
    5. '(seg' → logprob: -3.820312261581421
    6. '(segment' → logprob: -4.820312023162842
    7. 'ec' → logprob: -6.070312023162842
    8. '(a' → logprob: -6.820312023162842
    9. '(S' → logprob: -7.445312023162842
    10. '(line' → logprob: -7.695312023162842

Token 911: ',' (ID: 11)
  Prédit: 'egment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'egment' → logprob: -0.410237193107605
    2. ',' → logprob: -1.160237193107605
    3. 'eg' → logprob: -4.1602373123168945
    4. '(s' → logprob: -5.5352373123168945
    5. '1' → logprob: -6.1602373123168945
    6. ',s' → logprob: -7.2852373123168945
    7. ')' → logprob: -9.160237312316895
    8. '   ' → logprob: -9.535237312316895
    9. 't' → logprob: -9.660237312316895
    10. '):
' → logprob: -9.785237312316895

Token 912: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.729906196298543e-06
    2. 't' → logprob: -12.250009536743164
    3. ' p' → logprob: -12.625009536743164
    4. 'point' → logprob: -14.250009536743164
    5. 'a' → logprob: -14.500009536743164
    6. '   ' → logprob: -16.375009536743164
    7. 'l' → logprob: -16.375009536743164
    8. 'q' → logprob: -16.750009536743164
    9. '``' → logprob: -17.500009536743164
    10. 'pt' → logprob: -17.625009536743164

Token 913: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6932246685028076
    2. '):' → logprob: -0.6932246685028076
    3. '):
' → logprob: -9.568224906921387
    4. ')' → logprob: -12.693224906921387
    5. '):

' → logprob: -13.193224906921387
    6. ':' → logprob: -13.818224906921387
    7. 't' → logprob: -14.068224906921387
    8. ',' → logprob: -14.693224906921387
    9. 'def' → logprob: -16.56822395324707
    10. '   ' → logprob: -17.06822395324707

Token 914: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2662838399410248
    2. 'cc' → logprob: -2.5162837505340576
    3. 'min' → logprob: -3.0162837505340576
    4. 'eq' → logprob: -3.0162837505340576
    5. 'def' → logprob: -3.6412837505340576
    6. 'dot' → logprob: -3.7662837505340576
    7. ' return' → logprob: -5.516283988952637
    8. '
' → logprob: -7.766283988952637
    9. '   ' → logprob: -7.766283988952637
    10. '(eq' → logprob: -9.391283988952637

Token 915: ' return' (ID: 622)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.27964448928833
    2. 'min' → logprob: -1.65464448928833
    3. 'return' (adapté à ' return') → logprob: -1.65464448928833
    4. 'def' → logprob: -1.77964448928833
    5. 'eq' → logprob: -2.77964448928833
    6. 'dot' → logprob: -2.77964448928833
    7. 'lambda' → logprob: -3.52964448928833
    8. 'cross' → logprob: -5.02964448928833
    9. '   ' → logprob: -6.15464448928833
    10. ' return' → logprob: -6.77964448928833

Token 916: ' cc' (ID: 22988)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0773169994354248
    2. 'cc' → logprob: -1.4523169994354248
    3. 'abs' → logprob: -1.5773169994354248
    4. 'dot' → logprob: -2.452316999435425
    5. 'eq' → logprob: -2.452316999435425
    6. '(cc' → logprob: -4.452317237854004
    7. '(dot' → logprob: -4.702317237854004
    8. '(eq' → logprob: -4.702317237854004
    9. '(min' → logprob: -4.952317237854004
    10. 'cross' → logprob: -5.077317237854004

Token 917: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: 0.0
    2. 'p' → logprob: -17.75
    3. 'ws' → logprob: -17.875
    4. '
' → logprob: -19.0
    5. 'ｗ' → logprob: -19.25
    6. 's' → logprob: -19.5
    7. '(s' → logprob: -19.75
    8. 'cw' → logprob: -19.875
    9. 'W' → logprob: -20.25
    10. 'v' → logprob: -20.375

Token 918: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00016027313540689647
    2. 's' → logprob: -8.750160217285156
    3. '(' → logprob: -14.000160217285156
    4. '(p' → logprob: -14.125160217285156
    5. 'p' → logprob: -16.250160217285156
    6. '{s' → logprob: -16.750160217285156
    7. '(
' → logprob: -17.625160217285156
    8. '((' → logprob: -17.875160217285156
    9. '0' → logprob: -17.875160217285156
    10. '   ' → logprob: -18.250160217285156

Token 919: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.5760855078697205
    2. '.s' → logprob: -0.8260855078697205
    3. 'a' → logprob: -9.076085090637207
    4. '(s' → logprob: -10.576085090637207
    5. '.p' → logprob: -13.201085090637207
    6. '.' → logprob: -13.326085090637207
    7. '(a' → logprob: -13.576085090637207
    8. '.b' → logprob: -14.576085090637207
    9. '(' → logprob: -15.076085090637207
    10. 's' → logprob: -15.201085090637207

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09832509607076645
    2. 's' → logprob: -2.84832501411438
    3. ',s' → logprob: -3.97332501411438
    4. '(s' → logprob: -4.723325252532959
    5. '.s' → logprob: -5.223325252532959
    6. ' s' → logprob: -6.848325252532959
    7. ')' → logprob: -7.598325252532959
    8. ' ,' → logprob: -7.848325252532959
    9. 'a' → logprob: -8.0983247756958
    10. '<s' → logprob: -9.0983247756958

Token 921: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00041208078619092703
    2. ' s' → logprob: -8.375411987304688
    3. 'p' → logprob: -8.625411987304688
    4. '   ' → logprob: -13.625411987304688
    5. ' p' → logprob: -15.500411987304688
    6. '	s' → logprob: -15.500411987304688
    7. '{s' → logprob: -16.375411987304688
    8. '    ' → logprob: -16.875411987304688
    9. '(s' → logprob: -16.875411987304688
    10. ' ' → logprob: -17.000411987304688

Token 922: '.b' (ID: 1292)
  Prédit: '.a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.31791284680366516
    2. '.p' → logprob: -1.8179128170013428
    3. 'a' → logprob: -2.6929128170013428
    4. '.b' → logprob: -3.6929128170013428
    5. 'p' → logprob: -4.067913055419922
    6. 'b' → logprob: -8.692913055419922
    7. '.s' → logprob: -9.442913055419922
    8. '.' → logprob: -11.692913055419922
    9. '.c' → logprob: -12.692913055419922
    10. 's' → logprob: -12.817913055419922

Token 923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06001197174191475
    2. 's' → logprob: -2.935011863708496
    3. 'a' → logprob: -5.810011863708496
    4. ',s' → logprob: -6.560011863708496
    5. ',a' → logprob: -8.435011863708496
    6. 'p' → logprob: -8.435011863708496
    7. ',p' → logprob: -9.060011863708496
    8. '.s' → logprob: -10.060011863708496
    9. ' s' → logprob: -10.310011863708496
    10. ')' → logprob: -10.435011863708496

Token 924: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. ' p' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '<p' → logprob: -18.375001907348633
    5. '	p' → logprob: -20.125001907348633
    6. '
' → logprob: -20.375001907348633
    7. 'point' → logprob: -20.875001907348633
    8. 'Point' → logprob: -21.125001907348633
    9. '[p' → logprob: -21.250001907348633
    10. 's' → logprob: -21.250001907348633

Token 925: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010681778658181429
    2. ')==' → logprob: -7.376068115234375
    3. ')<=' → logprob: -8.501068115234375
    4. ')!=' → logprob: -9.001068115234375
    5. ')*' → logprob: -9.251068115234375
    6. '0' → logprob: -12.376068115234375
    7. ')>=' → logprob: -12.501068115234375
    8. '())' → logprob: -13.376068115234375
    9. 'p' → logprob: -13.751068115234375
    10. '   ' → logprob: -13.876068115234375

Token 926: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32169604301452637
    2. '0' → logprob: -1.9466960430145264
    3. '<=' → logprob: -2.4466960430145264
    4. '>=' → logprob: -4.6966962814331055
    5. '!=' → logprob: -4.8216962814331055
    6. 'in' → logprob: -5.0716962814331055
    7. '()==' → logprob: -5.3216962814331055
    8. '=' → logprob: -5.6966962814331055
    9. ')' → logprob: -5.9466962814331055
    10. '()' → logprob: -6.0716962814331055

Token 927: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '
' → logprob: -17.125011444091797
    4. '０' → logprob: -17.875011444091797
    5. '۰' → logprob: -18.125011444091797
    6. '   ' → logprob: -18.125011444091797
    7. '	' → logprob: -18.687511444091797
    8. ' ' → logprob: -19.187511444091797
    9. '=' → logprob: -19.437511444091797
    10. '+' → logprob: -19.437511444091797

Token 928: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -17.000009536743164
    4. '۰' → logprob: -17.875009536743164
    5. '０' → logprob: -17.875009536743164
    6. '   ' → logprob: -18.000009536743164
    7. '  ' → logprob: -18.812509536743164
    8. '	' → logprob: -18.812509536743164
    9. ' ' → logprob: -18.937509536743164
    10. '०' → logprob: -19.062509536743164

Token 929: '

' (ID: 279)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.0110511165112257
    2. ' and' → logprob: -4.511051177978516
    3. '   ' → logprob: -12.761051177978516
    4. '    ' → logprob: -15.511051177978516
    5. '	and' → logprob: -15.761051177978516
    6. ' ' → logprob: -16.761051177978516
    7. '  ' → logprob: -16.886051177978516
    8. ')' → logprob: -16.886051177978516
    9. 'def' → logprob: -17.386051177978516
    10. '#' → logprob: -17.636051177978516

Token 930: 'def' (ID: 1314)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04877312481403351
    2. 'and' → logprob: -3.0487730503082275
    3. '<|end|>' → logprob: -9.423772811889648
    4. '   ' → logprob: -10.173772811889648
    5. ' or' → logprob: -10.423772811889648
    6. ' ' → logprob: -10.673772811889648
    7. 'def' → logprob: -12.298772811889648
    8. '  ' → logprob: -12.548772811889648
    9. '	and' → logprob: -13.298772811889648
    10. 'or' → logprob: -13.923772811889648

Token 931: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.018153805285692215
    2. 'def' → logprob: -4.518153667449951
    3. ' is' → logprob: -5.143153667449951
    4. 'cc' → logprob: -8.26815414428711
    5. 'cross' → logprob: -8.26815414428711
    6. 'lambda' → logprob: -8.89315414428711
    7. ' def' → logprob: -9.14315414428711
    8. 'dot' → logprob: -9.39315414428711
    9. 's' → logprob: -9.51815414428711
    10. 'inter' → logprob: -9.89315414428711

Token 932: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.0008279714384116232
    2. 'n' → logprob: -8.00082778930664
    3. 'Interact' → logprob: -8.12582778930664
    4. 'Segment' → logprob: -10.00082778930664
    5. 'Inter' → logprob: -10.12582778930664
    6. 'inter' → logprob: -10.50082778930664
    7. 'In' → logprob: -11.25082778930664
    8. 'Intersection' → logprob: -11.25082778930664
    9. 'Point' → logprob: -11.50082778930664
    10. 'Iter' → logprob: -11.75082778930664

Token 933: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.1396699994802475
    2. 'ss' → logprob: -2.139669895172119
    3. 'SS' → logprob: -5.139669895172119
    4. '_ls' → logprob: -6.264669895172119
    5. '_se' → logprob: -6.764669895172119
    6. 's' → logprob: -7.014669895172119
    7. '_sl' → logprob: -7.139669895172119
    8. '_ll' → logprob: -7.514669895172119
    9. '(ss' → logprob: -7.889669895172119
    10. '_s' → logprob: -8.389670372009277

Token 934: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.723352049040841e-06
    2. 's' → logprob: -13.125004768371582
    3. '(a' → logprob: -13.625004768371582
    4. '(seg' → logprob: -13.625004768371582
    5. '(segment' → logprob: -16.250003814697266
    6. '(ss' → logprob: -16.500003814697266
    7. '(sa' → logprob: -16.875003814697266
    8. '(' → logprob: -17.750003814697266
    9. '(S' → logprob: -18.250003814697266
    10. 'def' → logprob: -18.625003814697266

Token 935: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002946559339761734
    2. ',s' → logprob: -7.127946376800537
    3. '(s' → logprob: -7.502946376800537
    4. 'a' → logprob: -7.752946376800537
    5. ',a' → logprob: -8.127946853637695
    6. ' s' → logprob: -8.502946853637695
    7. '.s' → logprob: -8.502946853637695
    8. 's' → logprob: -8.877946853637695
    9. '(a' → logprob: -9.752946853637695
    10. '.a' → logprob: -9.877946853637695

Token 936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015908108616713434
    2. ',s' → logprob: -9.00015926361084
    3. 's' → logprob: -10.62515926361084
    4. '(s' → logprob: -12.37515926361084
    5. ' ,' → logprob: -12.50015926361084
    6. ' s' → logprob: -12.62515926361084
    7. ',
' → logprob: -17.125158309936523
    8. 'a' → logprob: -17.875158309936523
    9. 'def' → logprob: -18.250158309936523
    10. '<|end|>' → logprob: -18.625158309936523

Token 937: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00010914575977949426
    2. ' s' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.12510871887207
    4. 'def' → logprob: -16.87510871887207
    5. '```' → logprob: -17.37510871887207
    6. ' ' → logprob: -17.50010871887207
    7. ')' → logprob: -17.50010871887207
    8. ',' → logprob: -18.37510871887207
    9. '  ' → logprob: -18.50010871887207
    10. '
' → logprob: -18.93760871887207

Token 938: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03845488280057907
    2. '2' → logprob: -3.28845477104187
    3. 's' → logprob: -8.41345500946045
    4. ',' → logprob: -9.28845500946045
    5. ' ' → logprob: -10.53845500946045
    6. '```' → logprob: -10.66345500946045
    7. '   ' → logprob: -11.03845500946045
    8. 'def' → logprob: -11.66345500946045
    9. 'class' → logprob: -12.03845500946045
    10. ' s' → logprob: -12.16345500946045

Token 939: '):
' (ID: 1883)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01598626747727394
    2. ',' → logprob: -4.265986442565918
    3. '):' → logprob: -6.640986442565918
    4. '):
' → logprob: -7.765986442565918
    5. 's' → logprob: -10.265986442565918
    6. ' s' → logprob: -11.140986442565918
    7. ',s' → logprob: -11.265986442565918
    8. ')' → logprob: -11.890986442565918
    9. 'def' → logprob: -12.265986442565918
    10. '   ' → logprob: -12.265986442565918

Token 940: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3770536482334137
    2. 'return' → logprob: -1.6270536184310913
    3. '   ' → logprob: -2.252053737640381
    4. 'cc' → logprob: -5.627053737640381
    5. 'res' → logprob: -6.252053737640381
    6. 'ret' → logprob: -6.377053737640381
    7. ' return' → logprob: -6.502053737640381
    8. 'd' → logprob: -6.877053737640381
    9. 'r' → logprob: -7.127053737640381
    10. 'c' → logprob: -7.752053737640381

Token 941: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08283742517232895
    2. 'def' → logprob: -2.5828373432159424
    3. 'cc' → logprob: -6.0828375816345215
    4. 'if' → logprob: -7.8328375816345215
    5. 'c' → logprob: -7.9578375816345215
    6. ' return' → logprob: -8.582837104797363
    7. 'd' → logprob: -8.707837104797363
    8. 'r' → logprob: -9.207837104797363
    9. '   ' → logprob: -9.332837104797363
    10. 'a' → logprob: -9.707837104797363

Token 942: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.28402116894721985
    2. 'max' → logprob: -1.7840211391448975
    3. '(cc' → logprob: -3.0340211391448975
    4. '(max' → logprob: -3.9090211391448975
    5. 'is' → logprob: -5.159021377563477
    6. '(is' → logprob: -6.284021377563477
    7. '(' → logprob: -6.659021377563477
    8. 'cross' → logprob: -7.909021377563477
    9. 'eq' → logprob: -8.159021377563477
    10. ' cc' → logprob: -8.284021377563477

Token 943: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.635164754698053e-05
    2. 'cw' → logprob: -10.375066757202148
    3. 'ww' → logprob: -12.375066757202148
    4. 'ws' → logprob: -12.812566757202148
    5. '
' → logprob: -13.250066757202148
    6. 'wd' → logprob: -13.437566757202148
    7. 'wc' → logprob: -13.625066757202148
    8. 'max' → logprob: -13.750066757202148
    9. 'W' → logprob: -13.750066757202148
    10. 'c' → logprob: -13.937566757202148

Token 944: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0019291093340143561
    2. 's' → logprob: -6.25192928314209
    3. '(' → logprob: -15.12692928314209
    4. 'def' → logprob: -16.501928329467773
    5. '(
' → logprob: -17.001928329467773
    6. ' s' → logprob: -17.126928329467773
    7. '#' → logprob: -17.501928329467773
    8. '<|end|>' → logprob: -17.876928329467773
    9. '<|end|>' → logprob: -18.001928329467773
    10. '   ' → logprob: -18.001928329467773

Token 945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003491705865599215
    2. 's' → logprob: -8.000349044799805
    3. ' s' → logprob: -11.875349044799805
    4. '.s' → logprob: -12.125349044799805
    5. 'a' → logprob: -14.125349044799805
    6. ' ' → logprob: -15.250349044799805
    7. '.a' → logprob: -15.750349044799805
    8. '```' → logprob: -17.125349044799805
    9. '１' → logprob: -17.250349044799805
    10. '.' → logprob: -17.375349044799805

Token 946: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0004699954588431865
    2. '.s' → logprob: -7.750470161437988
    3. 'a' → logprob: -10.250470161437988
    4. '.b' → logprob: -12.625470161437988
    5. '.' → logprob: -14.625470161437988
    6. ' .' → logprob: -16.250469207763672
    7. '(a' → logprob: -16.875469207763672
    8. '#a' → logprob: -17.500469207763672
    9. '   ' → logprob: -17.625469207763672
    10. 's' → logprob: -17.750469207763672

Token 947: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06003016605973244
    2. '(s' → logprob: -3.435030221939087
    3. 's' → logprob: -4.060029983520508
    4. ',s' → logprob: -5.310029983520508
    5. ' s' → logprob: -5.685029983520508
    6. ' ,' → logprob: -8.310029983520508
    7. '   ' → logprob: -9.685029983520508
    8. '(' → logprob: -10.060029983520508
    9. ')' → logprob: -10.185029983520508
    10. ' ' → logprob: -11.310029983520508

Token 948: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0052350712940096855
    2. ' s' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.380234718322754
    4. '<|end|>' → logprob: -14.630234718322754
    5. ' ' → logprob: -16.25523567199707
    6. '  ' → logprob: -16.75523567199707
    7. ')' → logprob: -17.00523567199707
    8. '    ' → logprob: -17.50523567199707
    9. '(s' → logprob: -17.88023567199707
    10. '...' → logprob: -18.25523567199707

Token 949: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04043882340192795
    2. 'a' → logprob: -3.2904388904571533
    3. 's' → logprob: -6.165438652038574
    4. '.b' → logprob: -8.290438652038574
    5. ' b' → logprob: -11.665438652038574
    6. ',b' → logprob: -11.915438652038574
    7. '_b' → logprob: -12.040438652038574
    8. '   ' → logprob: -12.040438652038574
    9. '.a' → logprob: -12.040438652038574
    10. '	b' → logprob: -13.040438652038574

Token 950: '.b' (ID: 1292)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3452659845352173
    2. 'b' → logprob: -1.3452659845352173
    3. '.a' → logprob: -4.095265865325928
    4. '.b' → logprob: -4.220265865325928
    5. '   ' → logprob: -10.220266342163086
    6. ',b' → logprob: -10.845266342163086
    7. 's' → logprob: -11.220266342163086
    8. ',' → logprob: -11.220266342163086
    9. ',a' → logprob: -11.220266342163086
    10. ' ' → logprob: -11.345266342163086

Token 951: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002719991374760866
    2. 's' → logprob: -6.127719879150391
    3. ',s' → logprob: -8.12771987915039
    4. ' ,' → logprob: -8.62771987915039
    5. ' s' → logprob: -9.87771987915039
    6. ')' → logprob: -12.25271987915039
    7. '   ' → logprob: -13.12771987915039
    8. '(s' → logprob: -14.25271987915039
    9. '(),' → logprob: -15.25271987915039
    10. '),' → logprob: -15.62771987915039

Token 952: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00038479414070025086
    2. ' s' → logprob: -7.87538480758667
    3. '   ' → logprob: -12.375384330749512
    4. ' ' → logprob: -15.375384330749512
    5. '  ' → logprob: -16.750385284423828
    6. '       ' → logprob: -16.875385284423828
    7. '    ' → logprob: -17.250385284423828
    8. '	s' → logprob: -18.000385284423828
    9. '           ' → logprob: -18.250385284423828
    10. '
' → logprob: -18.375385284423828

Token 953: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04797784611582756
    2. '2' → logprob: -3.672977924346924
    3. 'a' → logprob: -4.547977924346924
    4. 's' → logprob: -4.547977924346924
    5. '.s' → logprob: -9.422977447509766
    6. '   ' → logprob: -10.047977447509766
    7. '.a' → logprob: -10.172977447509766
    8. ' s' → logprob: -10.922977447509766
    9. '.' → logprob: -11.297977447509766
    10. '-' → logprob: -11.422977447509766

Token 954: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -1.1637164789135568e-05
    2. 'a' → logprob: -11.625011444091797
    3. '.' → logprob: -13.875011444091797
    4. '.b' → logprob: -14.125011444091797
    5. ' .' → logprob: -14.750011444091797
    6. '.s' → logprob: -16.000011444091797
    7. '#a' → logprob: -16.125011444091797
    8. ').' → logprob: -16.500011444091797
    9. '   ' → logprob: -17.250011444091797
    10. ' ' → logprob: -17.750011444091797

Token 955: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.1006246879696846
    2. ')' → logprob: -2.3506247997283936
    3. ')!=' → logprob: -7.8506245613098145
    4. '   ' → logprob: -11.725625038146973
    5. ')*(' → logprob: -12.475625038146973
    6. '
' → logprob: -12.725625038146973
    7. '0' → logprob: -12.850625038146973
    8. 's' → logprob: -12.850625038146973
    9. ')==' → logprob: -13.225625038146973
    10. ')<=' → logprob: -13.475625038146973

Token 956: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -9.627176768844947e-05
    2. ' cc' → logprob: -9.250096321105957
    3. '	cc' → logprob: -17.37509536743164
    4. '   ' → logprob: -17.50009536743164
    5. '(cc' → logprob: -18.00009536743164
    6. ' ' → logprob: -19.00009536743164
    7. '
' → logprob: -19.62509536743164
    8. '  ' → logprob: -19.62509536743164
    9. 'c' → logprob: -20.00009536743164
    10. 'cw' → logprob: -20.37509536743164

Token 957: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.2007883671903983e-05
    2. 's' → logprob: -11.250021934509277
    3. 'cw' → logprob: -13.000021934509277
    4. '1' → logprob: -13.250021934509277
    5. '(s' → logprob: -13.875021934509277
    6. '
' → logprob: -14.125021934509277
    7. 'sw' → logprob: -14.750021934509277
    8. '2' → logprob: -15.125021934509277
    9. 'o' → logprob: -15.250021934509277
    10. 'ww' → logprob: -15.687521934509277

Token 958: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00012415809032972902
    2. 's' → logprob: -9.000123977661133
    3. '(' → logprob: -14.750123977661133
    4. '(
' → logprob: -15.375123977661133
    5. ' s' → logprob: -16.500123977661133
    6. ' (' → logprob: -16.500123977661133
    7. '.s' → logprob: -18.625123977661133
    8. '((' → logprob: -19.625123977661133
    9. '<|end|>' → logprob: -20.125123977661133
    10. '...' → logprob: -20.250123977661133

Token 959: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4110417664051056
    2. '.s' → logprob: -1.4110417366027832
    3. '1' → logprob: -2.411041736602783
    4. '.a' → logprob: -5.911041736602783
    5. 'a' → logprob: -7.536041736602783
    6. '.' → logprob: -9.411042213439941
    7. ' s' → logprob: -9.661042213439941
    8. '...' → logprob: -11.036042213439941
    9. '(' → logprob: -12.161042213439941
    10. '(s' → logprob: -12.661042213439941

Token 960: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.025556180626153946
    2. '.b' → logprob: -3.7755560874938965
    3. '.s' → logprob: -6.2755560874938965
    4. '.' → logprob: -8.275556564331055
    5. 'a' → logprob: -8.900556564331055
    6. ' .' → logprob: -10.650556564331055
    7. 'b' → logprob: -12.525556564331055
    8. '.c' → logprob: -12.650556564331055
    9. 's' → logprob: -13.650556564331055
    10. '<|end|>' → logprob: -14.400556564331055

Token 961: ',' (ID: 11)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.005697691813111305
    2. ',' → logprob: -5.880697727203369
    3. 's' → logprob: -6.505697727203369
    4. '.' → logprob: -6.880697727203369
    5. '(s' → logprob: -8.880697250366211
    6. '.b' → logprob: -9.505697250366211
    7. ' .' → logprob: -10.005697250366211
    8. ',s' → logprob: -10.255697250366211
    9. ' s' → logprob: -10.380697250366211
    10. '(' → logprob: -11.630697250366211

Token 962: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020520923135336488
    2. ' s' → logprob: -8.500205039978027
    3. '<|end|>' → logprob: -14.500205039978027
    4. '   ' → logprob: -15.250205039978027
    5. '```' → logprob: -15.375205039978027
    6. ' ' → logprob: -15.375205039978027
    7. ')' → logprob: -16.125205993652344
    8. ',' → logprob: -16.250205993652344
    9. '
' → logprob: -16.375205993652344
    10. '  ' → logprob: -17.125205993652344

Token 963: '1' (ID: 16)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.000853466335684061
    2. 'b' → logprob: -7.125853538513184
    3. '.' → logprob: -10.000853538513184
    4. '.s' → logprob: -12.750853538513184
    5. '1' → logprob: -15.375853538513184
    6. ' .' → logprob: -16.250852584838867
    7. '.c' → logprob: -16.250852584838867
    8. '.б' → logprob: -16.250852584838867
    9. '	b' → logprob: -16.625852584838867
    10. '_b' → logprob: -16.750852584838867

Token 964: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -1.4498052223643754e-05
    2. 'b' → logprob: -11.625014305114746
    3. '.' → logprob: -12.625014305114746
    4. ' .' → logprob: -13.500014305114746
    5. '.s' → logprob: -14.625014305114746
    6. '.c' → logprob: -15.875014305114746
    7. '.y' → logprob: -16.750015258789062
    8. '<|end|>' → logprob: -17.000015258789062
    9. '.б' → logprob: -17.375015258789062
    10. ',b' → logprob: -17.500015258789062

Token 965: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015014137607067823
    2. ',s' → logprob: -6.626501560211182
    3. 's' → logprob: -9.126501083374023
    4. ' ,' → logprob: -10.626501083374023
    5. ' s' → logprob: -10.876501083374023
    6. '(s' → logprob: -11.126501083374023
    7. '   ' → logprob: -12.126501083374023
    8. ',
' → logprob: -13.251501083374023
    9. '.s' → logprob: -14.376501083374023
    10. ' ' → logprob: -14.626501083374023

Token 966: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00861456897109747
    2. ' s' → logprob: -4.758614540100098
    3. '(s' → logprob: -17.008615493774414
    4. '   ' → logprob: -18.258615493774414
    5. '	s' → logprob: -19.258615493774414
    6. '
' → logprob: -19.758615493774414
    7. ')' → logprob: -20.383615493774414
    8. '```' → logprob: -20.508615493774414
    9. '{s' → logprob: -20.633615493774414
    10. '_s' → logprob: -20.633615493774414

Token 967: '2' (ID: 17)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.7050743699073792
    2. '2' → logprob: -0.8300743699073792
    3. 's' → logprob: -2.8300743103027344
    4. '.b' → logprob: -4.705074310302734
    5. 'b' → logprob: -6.705074310302734
    6. '.' → logprob: -8.205074310302734
    7. ' s' → logprob: -8.955074310302734
    8. '
' → logprob: -9.080074310302734
    9. '```' → logprob: -10.080074310302734
    10. 'a' → logprob: -11.580074310302734

Token 968: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -1.9623810658231378e-05
    2. 'b' → logprob: -10.875020027160645
    3. '.' → logprob: -14.625020027160645
    4. '.s' → logprob: -16.500019073486328
    5. ' .' → logprob: -16.500019073486328
    6. '   ' → logprob: -19.500019073486328
    7. '	b' → logprob: -19.875019073486328
    8. ' b' → logprob: -20.000019073486328
    9. ').' → logprob: -20.375019073486328
    10. '.
' → logprob: -20.375019073486328

Token 969: ')' (ID: 8)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16225497424602509
    2. ' <=' → logprob: -1.9122549295425415
    3. ')' → logprob: -6.912254810333252
    4. ')<=' → logprob: -6.912254810333252
    5. '<' → logprob: -10.91225528717041
    6. ']<=' → logprob: -11.53725528717041
    7. '<|end|>' → logprob: -12.91225528717041
    8. ',' → logprob: -13.53725528717041
    9. '≤' → logprob: -13.66225528717041
    10. '=' → logprob: -14.41225528717041

Token 970: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.009858200326561928
    2. ' <=' → logprob: -4.634858131408691
    3. '<' → logprob: -9.259858131408691
    4. ')<=' → logprob: -12.384858131408691
    5. '≤' → logprob: -14.009858131408691
    6. '[' → logprob: -14.384858131408691
    7. ']<=' → logprob: -14.759858131408691
    8. ',' → logprob: -15.634858131408691
    9. 'le' → logprob: -16.009859085083008
    10. ' <' → logprob: -16.009859085083008

Token 971: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.750045776367188
    4. '
' → logprob: -18.750045776367188
    5. '  ' → logprob: -19.250045776367188
    6. 'EPS' → logprob: -19.250045776367188
    7. '1' → logprob: -20.375045776367188
    8. '۰' → logprob: -21.250045776367188
    9. '    ' → logprob: -21.750045776367188
    10. '[' → logprob: -21.875045776367188

Token 972: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'EPS' → logprob: -16.37500762939453
    4. '   ' → logprob: -17.75000762939453
    5. '1' → logprob: -18.50000762939453
    6. '۰' → logprob: -18.81250762939453
    7. '  ' → logprob: -19.25000762939453
    8. '+' → logprob: -19.87500762939453
    9. '
' → logprob: -20.00000762939453
    10. '00' → logprob: -20.06250762939453

Token 973: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858941584825516
    2. 'and' → logprob: -3.0485894680023193
    3. '   ' → logprob: -13.798589706420898
    4. '<|end|>' → logprob: -14.673589706420898
    5. '	and' → logprob: -15.173589706420898
    6. ' ' → logprob: -15.673589706420898
    7. ' or' → logprob: -16.5485897064209
    8. 'def' → logprob: -16.9235897064209
    9. ',' → logprob: -17.6735897064209
    10. '  ' → logprob: -17.9235897064209

Token 974: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.03019113838672638
    2. ' cc' → logprob: -3.53019118309021
    3. '   ' → logprob: -8.155191421508789
    4. '  ' → logprob: -9.280191421508789
    5. ' ' → logprob: -10.155191421508789
    6. '	cc' → logprob: -11.405191421508789
    7. '    ' → logprob: -12.280191421508789
    8. '(cc' → logprob: -12.905191421508789
    9. '       ' → logprob: -14.280191421508789
    10. 'ccc' → logprob: -14.405191421508789

Token 975: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.2200749754119897e-06
    2. 'cw' → logprob: -13.125001907348633
    3. '
' → logprob: -16.250001907348633
    4. '1' → logprob: -17.125001907348633
    5. 'ww' → logprob: -17.250001907348633
    6. 'wc' → logprob: -17.750001907348633
    7. 'W' → logprob: -17.750001907348633
    8. 'ｗ' → logprob: -18.500001907348633
    9. 'c' → logprob: -18.875001907348633
    10. 'ws' → logprob: -19.000001907348633

Token 976: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.061054359131958e-06
    2. 's' → logprob: -11.750007629394531
    3. '(' → logprob: -16.25000762939453
    4. '(
' → logprob: -17.37500762939453
    5. ' s' → logprob: -18.12500762939453
    6. ' (' → logprob: -19.62500762939453
    7. '<|end|>' → logprob: -22.37500762939453
    8. '<s' → logprob: -22.62500762939453
    9. '((' → logprob: -22.62500762939453
    10. '_s' → logprob: -22.75000762939453

Token 977: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004518769681453705
    2. '.s' → logprob: -5.754518985748291
    3. '.a' → logprob: -7.379518985748291
    4. '2' → logprob: -7.504518985748291
    5. ' s' → logprob: -9.629518508911133
    6. 's' → logprob: -10.254518508911133
    7. '(s' → logprob: -10.879518508911133
    8. '(' → logprob: -11.004518508911133
    9. '(.' → logprob: -11.129518508911133
    10. '(a' → logprob: -11.879518508911133

Token 978: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.12781904637813568
    2. '.s' → logprob: -2.127819061279297
    3. '.' → logprob: -7.127819061279297
    4. ' .' → logprob: -10.502819061279297
    5. 'a' → logprob: -10.877819061279297
    6. '<|end|>' → logprob: -11.252819061279297
    7. '.x' → logprob: -11.502819061279297
    8. '.ai' → logprob: -12.502819061279297
    9. '.user' → logprob: -13.002819061279297
    10. '[' → logprob: -13.127819061279297

Token 979: ',' (ID: 11)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.3918428421020508
    2. ',' → logprob: -1.1418428421020508
    3. '.' → logprob: -6.516842842102051
    4. 's' → logprob: -6.641842842102051
    5. ',s' → logprob: -6.766842842102051
    6. '<|end|>' → logprob: -7.016842842102051
    7. ' s' → logprob: -10.14184284210205
    8. ' ,' → logprob: -10.51684284210205
    9. ')' → logprob: -11.14184284210205
    10. ' .' → logprob: -11.51684284210205

Token 980: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00020795092859771103
    2. ' s' → logprob: -8.500207901000977
    3. '<|end|>' → logprob: -12.625207901000977
    4. '   ' → logprob: -15.375207901000977
    5. ' ' → logprob: -16.000207901000977
    6. ',' → logprob: -16.000207901000977
    7. '```' → logprob: -16.000207901000977
    8. ')' → logprob: -16.000207901000977
    9. '`s' → logprob: -16.125207901000977
    10. '#' → logprob: -16.500207901000977

Token 981: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02361474186182022
    2. 'a' → logprob: -3.7736146450042725
    3. '.s' → logprob: -8.648614883422852
    4. 'b' → logprob: -8.773614883422852
    5. ' s' → logprob: -10.398614883422852
    6. '2' → logprob: -13.148614883422852
    7. '.' → logprob: -13.273614883422852
    8. '.a' → logprob: -13.273614883422852
    9. ' ' → logprob: -14.398614883422852
    10. '1' → logprob: -14.523614883422852

Token 982: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.14165043830871582
    2. 'b' → logprob: -2.141650438308716
    3. '.' → logprob: -5.016650199890137
    4. '.a' → logprob: -5.141650199890137
    5. 'a' → logprob: -6.391650199890137
    6. '.s' → logprob: -8.891650199890137
    7. '<|end|>' → logprob: -9.141650199890137
    8. ',' → logprob: -10.016650199890137
    9. 's' → logprob: -10.016650199890137
    10. ' .' → logprob: -10.391650199890137

Token 983: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05343140661716461
    2. 's' → logprob: -3.053431510925293
    3. '(s' → logprob: -5.553431510925293
    4. ' s' → logprob: -7.053431510925293
    5. ',s' → logprob: -10.303431510925293
    6. '   ' → logprob: -10.553431510925293
    7. ' ,' → logprob: -10.803431510925293
    8. ')' → logprob: -12.303431510925293
    9. ' ' → logprob: -12.678431510925293
    10. '<|end|>' → logprob: -13.053431510925293

Token 984: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01815146580338478
    2. ' s' → logprob: -4.01815128326416
    3. '(s' → logprob: -13.39315128326416
    4. '   ' → logprob: -16.768152236938477
    5. ' ' → logprob: -18.893152236938477
    6. '	s' → logprob: -19.643152236938477
    7. '{s' → logprob: -19.893152236938477
    8. '  ' → logprob: -20.268152236938477
    9. ')' → logprob: -20.518152236938477
    10. '_s' → logprob: -20.643152236938477

Token 985: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04146706685423851
    2. 's' → logprob: -3.2914669513702393
    3. 'a' → logprob: -5.791467189788818
    4. '.s' → logprob: -8.41646671295166
    5. '.a' → logprob: -9.41646671295166
    6. '.' → logprob: -11.16646671295166
    7. '[' → logprob: -11.16646671295166
    8. '<|end|>' → logprob: -11.66646671295166
    9. ' s' → logprob: -11.91646671295166
    10. '   ' → logprob: -12.04146671295166

Token 986: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.00011629798245849088
    2. '.' → logprob: -9.750116348266602
    3. 'a' → logprob: -9.875116348266602
    4. '.s' → logprob: -12.375116348266602
    5. '1' → logprob: -13.250116348266602
    6. ' .' → logprob: -15.125116348266602
    7. '[' → logprob: -15.875116348266602
    8. '2' → logprob: -16.3751163482666
    9. '   ' → logprob: -17.7501163482666
    10. '#a' → logprob: -17.7501163482666

Token 987: ')*' (ID: 11043)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7326685190200806
    2. ')*' → logprob: -0.8576685190200806
    3. ')' → logprob: -2.357668399810791
    4. 's' → logprob: -7.732668399810791
    5. '   ' → logprob: -9.98266887664795
    6. ')s' → logprob: -10.98266887664795
    7. '*)' → logprob: -10.98266887664795
    8. ',s' → logprob: -11.35766887664795
    9. ' ' → logprob: -11.60766887664795
    10. ']*' → logprob: -11.98266887664795

Token 988: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -1.3425219549390022e-05
    2. ' cc' → logprob: -11.50001335144043
    3. 's' → logprob: -12.75001335144043
    4. '(cc' → logprob: -15.12501335144043
    5. 'c' → logprob: -16.75001335144043
    6. '	cc' → logprob: -17.62501335144043
    7. 'cw' → logprob: -17.75001335144043
    8. 'с' → logprob: -19.87501335144043
    9. '_cc' → logprob: -20.00001335144043
    10. '
' → logprob: -20.12501335144043

Token 989: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.4378848391061183e-05
    2. '(s' → logprob: -12.000014305114746
    3. 's' → logprob: -12.500014305114746
    4. '
' → logprob: -13.875014305114746
    5. 'cw' → logprob: -14.000014305114746
    6. ' w' → logprob: -14.750014305114746
    7. '1' → logprob: -14.750014305114746
    8. 'W' → logprob: -15.375014305114746
    9. 'ｗ' → logprob: -15.812514305114746
    10. 'ws' → logprob: -15.875014305114746

Token 990: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. 's' → logprob: -16.5
    4. '(
' → logprob: -19.5
    5. ' (' → logprob: -20.125
    6. '((' → logprob: -21.5
    7. ' s' → logprob: -21.5
    8. '<|end|>' → logprob: -22.125
    9. '(os' → logprob: -23.25
    10. '...' → logprob: -23.25

Token 991: '2' (ID: 17)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05381240323185921
    2. '2' → logprob: -3.0538125038146973
    3. '(s' → logprob: -5.428812503814697
    4. '.s' → logprob: -7.303812503814697
    5. ' s' → logprob: -9.428812026977539
    6. '(' → logprob: -10.303812026977539
    7. '<|end|>' → logprob: -11.678812026977539
    8. '.' → logprob: -11.928812026977539
    9. ')s' → logprob: -12.803812026977539
    10. '...' → logprob: -12.928812026977539

Token 992: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.08013522624969482
    2. '.s' → logprob: -2.5801353454589844
    3. '<|end|>' → logprob: -7.205135345458984
    4. '.' → logprob: -7.705135345458984
    5. ' .' → logprob: -10.455135345458984
    6. 'a' → logprob: -12.330135345458984
    7. '<|end|>' → logprob: -12.330135345458984
    8. '.ai' → logprob: -12.455135345458984
    9. 's' → logprob: -13.830135345458984
    10. '```' → logprob: -13.955135345458984

Token 993: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6561530232429504
    2. '.s' → logprob: -1.1561529636383057
    3. 's' → logprob: -1.9061529636383057
    4. '.' → logprob: -4.906153202056885
    5. '<|end|>' → logprob: -5.531153202056885
    6. ',s' → logprob: -6.031153202056885
    7. ' s' → logprob: -6.031153202056885
    8. '(s' → logprob: -6.906153202056885
    9. ')' → logprob: -8.406152725219727
    10. '.S' → logprob: -8.531152725219727

Token 994: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001238004770129919
    2. ' s' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.500123977661133
    4. '<|end|>' → logprob: -17.000123977661133
    5. ' ' → logprob: -17.500123977661133
    6. '(s' → logprob: -17.875123977661133
    7. ',' → logprob: -18.000123977661133
    8. ')' → logprob: -18.125123977661133
    9. '  ' → logprob: -18.125123977661133
    10. '...' → logprob: -18.250123977661133

Token 995: '2' (ID: 17)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.10351811349391937
    2. 's' → logprob: -2.603518009185791
    3. '2' → logprob: -3.853518009185791
    4. '.b' → logprob: -6.478518009185791
    5. 'b' → logprob: -6.603518009185791
    6. ' s' → logprob: -8.47851848602295
    7. '(s' → logprob: -11.85351848602295
    8. '1' → logprob: -12.97851848602295
    9. '```' → logprob: -13.35351848602295
    10. 'a' → logprob: -13.47851848602295

Token 996: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -6.153795766294934e-06
    2. 'b' → logprob: -12.625005722045898
    3. '.' → logprob: -13.000005722045898
    4. '.s' → logprob: -15.375005722045898
    5. '.б' → logprob: -15.625005722045898
    6. ' .' → logprob: -16.6250057220459
    7. ',b' → logprob: -17.8750057220459
    8. '	b' → logprob: -18.6250057220459
    9. '```' → logprob: -18.7500057220459
    10. ''b' → logprob: -19.0000057220459

Token 997: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3008459210395813
    2. ',' → logprob: -1.5508458614349365
    3. 's' → logprob: -3.0508458614349365
    4. '(' → logprob: -8.550846099853516
    5. ' s' → logprob: -8.675846099853516
    6. ',s' → logprob: -10.550846099853516
    7. ')' → logprob: -11.425846099853516
    8. '.s' → logprob: -11.925846099853516
    9. ' (' → logprob: -12.425846099853516
    10. '(
' → logprob: -12.550846099853516

Token 998: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.061983373016119
    2. ' s' → logprob: -2.811983346939087
    3. '   ' → logprob: -11.311983108520508
    4. '       ' → logprob: -13.186983108520508
    5. ' ' → logprob: -14.811983108520508
    6. '  ' → logprob: -15.186983108520508
    7. '    ' → logprob: -15.186983108520508
    8. '           ' → logprob: -15.311983108520508
    9. '     ' → logprob: -16.061983108520508
    10. '      ' → logprob: -16.561983108520508

Token 999: '1' (ID: 16)
  Prédit: '.b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.17523202300071716
    2. '1' → logprob: -1.9252320528030396
    3. 'b' → logprob: -4.30023193359375
    4. '.s' → logprob: -6.80023193359375
    5. '.a' → logprob: -8.92523193359375
    6. 's' → logprob: -9.67523193359375
    7. '.' → logprob: -11.42523193359375
    8. 'a' → logprob: -12.17523193359375
    9. '(b' → logprob: -14.42523193359375
    10. '	b' → logprob: -14.42523193359375

Token 1000: '.b' (ID: 1292)
  Prédit: '.a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -5.180879816180095e-05
    2. 'a' → logprob: -10.250051498413086
    3. '.b' → logprob: -11.375051498413086
    4. '.' → logprob: -12.875051498413086
    5. ' .' → logprob: -14.125051498413086
    6. '1' → logprob: -14.375051498413086
    7. '.c' → logprob: -15.125051498413086
    8. '.s' → logprob: -15.250051498413086
    9. '   ' → logprob: -15.500051498413086
    10. '```' → logprob: -15.750051498413086

Token 1001: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8248249292373657
    2. ')<=' → logprob: -1.4498249292373657
    3. ' <=' → logprob: -1.8248249292373657
    4. '<=' → logprob: -2.324824810028076
    5. '()' → logprob: -2.699824810028076
    6. ']<=' → logprob: -7.699824810028076
    7. '(s' → logprob: -9.199825286865234
    8. '())' → logprob: -9.699825286865234
    9. ' )' → logprob: -9.824825286865234
    10. '   ' → logprob: -10.324825286865234

Token 1002: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.052489157766103745
    2. ' <=' → logprob: -3.1774890422821045
    3. '()' → logprob: -4.677489280700684
    4. ')<=' → logprob: -9.052489280700684
    5. ']<=' → logprob: -11.177489280700684
    6. ')' → logprob: -12.552489280700684
    7. '(' → logprob: -13.052489280700684
    8. '   ' → logprob: -13.302489280700684
    9. '≤' → logprob: -13.802489280700684
    10. '()<' → logprob: -14.552489280700684

Token 1003: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008051026379689574
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -14.750804901123047
    4. '
' → logprob: -16.625804901123047
    5. '  ' → logprob: -17.500804901123047
    6. 'EPS' → logprob: -18.125804901123047
    7. '	' → logprob: -19.250804901123047
    8. '<|end|>' → logprob: -19.500804901123047
    9. '۰' → logprob: -19.750804901123047
    10. '    ' → logprob: -20.063304901123047

Token 1004: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -17.0000057220459
    4. '
' → logprob: -17.2500057220459
    5. 'EPS' → logprob: -17.8750057220459
    6. '00' → logprob: -18.6250057220459
    7. 'import' → logprob: -19.3125057220459
    8. '۰' → logprob: -19.4375057220459
    9. '  ' → logprob: -19.8750057220459
    10. '	' → logprob: -20.3750057220459

Token 1005: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1006: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.449663519859314
    2. ' ' → logprob: -1.574663519859314
    3. 'def' → logprob: -1.824663519859314
    4. ')' → logprob: -1.949663519859314
    5. '   ' → logprob: -2.8246636390686035
    6. '<|end|>' → logprob: -3.0746636390686035
    7. '(' → logprob: -3.5746636390686035
    8. '
' → logprob: -3.8246636390686035
    9. ':' → logprob: -4.1996636390686035
    10. 'd' → logprob: -4.6996636390686035

Token 1007: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.11650243401527405
    2. 'main' → logprob: -3.366502523422241
    3. 'inter' → logprob: -3.991502523422241
    4. 'distance' → logprob: -4.241502285003662
    5. 'cc' → logprob: -4.616502285003662
    6. 'dist' → logprob: -5.241502285003662
    7. 'intersection' → logprob: -5.616502285003662
    8. 'get' → logprob: -5.741502285003662
    9. 'cross' → logprob: -5.741502285003662
    10. 'line' → logprob: -5.741502285003662

Token 1008: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.020776262506842613
    2. 'Par' → logprob: -4.895776271820068
    3. 'Point' → logprob: -5.145776271820068
    4. 'Parallel' → logprob: -6.770776271820068
    5. 'Overlap' → logprob: -6.895776271820068
    6. 'Segment' → logprob: -7.270776271820068
    7. 'Intersection' → logprob: -7.395776271820068
    8. 'Inside' → logprob: -7.770776271820068
    9. 'inter' → logprob: -7.770776271820068
    10. 'Inter' → logprob: -8.02077579498291

Token 1009: '_ls' (ID: 136088)
  Prédit: '_sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sl' → logprob: -0.6724187731742859
    2. '_ls' → logprob: -0.7974187731742859
    3. '_ll' → logprob: -3.9224188327789307
    4. 'sl' → logprob: -4.922418594360352
    5. '_ss' → logprob: -5.422418594360352
    6. 'Sl' → logprob: -6.172418594360352
    7. '_cs' → logprob: -6.797418594360352
    8. '_sc' → logprob: -7.047418594360352
    9. '_l' → logprob: -7.672418594360352
    10. '(ls' → logprob: -7.922418594360352

Token 1010: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.014915294013917446
    2. '(s' → logprob: -4.264915466308594
    3. '(line' → logprob: -7.389915466308594
    4. '(' → logprob: -9.139915466308594
    5. '(Line' → logprob: -11.139915466308594
    6. 'l' → logprob: -12.264915466308594
    7. '(L' → logprob: -12.264915466308594
    8. 's' → logprob: -14.264915466308594
    9. '(li' → logprob: -14.389915466308594
    10. '(a' → logprob: -14.389915466308594

Token 1011: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4229927659034729
    2. 's' → logprob: -1.1729927062988281
    3. 'l' → logprob: -3.672992706298828
    4. '(s' → logprob: -5.547992706298828
    5. 'ine' → logprob: -6.422992706298828
    6. '(l' → logprob: -6.672992706298828
    7. '1' → logprob: -6.797992706298828
    8. '):
' → logprob: -7.172992706298828
    9. ',l' → logprob: -7.672992706298828
    10. ',s' → logprob: -8.797992706298828

Token 1012: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.729906196298543e-06
    2. ' s' → logprob: -11.750009536743164
    3. 'segment' → logprob: -14.750009536743164
    4. 'p' → logprob: -15.250009536743164
    5. 'def' → logprob: -15.250009536743164
    6. 'l' → logprob: -15.250009536743164
    7. '   ' → logprob: -15.625009536743164
    8. '```' → logprob: -15.875009536743164
    9. 'Segment' → logprob: -16.125009536743164
    10. ')' → logprob: -16.625009536743164

Token 1013: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05558696389198303
    2. '):' → logprob: -2.93058705329895
    3. 'def' → logprob: -7.555586814880371
    4. ')' → logprob: -9.680586814880371
    5. '):
' → logprob: -10.430586814880371
    6. 's' → logprob: -10.930586814880371
    7. '):

' → logprob: -11.430586814880371
    8. ':
' → logprob: -11.430586814880371
    9. '(s' → logprob: -11.555586814880371
    10. ',' → logprob: -12.180586814880371

Token 1014: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7536453604698181
    2. ' return' → logprob: -1.003645420074463
    3. 'cc' → logprob: -2.378645420074463
    4. '   ' → logprob: -2.753645420074463
    5. ' cc' → logprob: -5.253645420074463
    6. 'def' → logprob: -7.503645420074463
    7. '(cc' → logprob: -8.378644943237305
    8. ' ' → logprob: -8.628644943237305
    9. '  ' → logprob: -9.878644943237305
    10. ' is' → logprob: -10.128644943237305

Token 1015: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12824581563472748
    2. 'cc' → logprob: -2.5032458305358887
    3. 'is' → logprob: -4.003245830535889
    4. 'def' → logprob: -4.253245830535889
    5. ' return' → logprob: -6.003245830535889
    6. 'eq' → logprob: -6.628245830535889
    7. 'cross' → logprob: -7.128245830535889
    8. '(cc' → logprob: -7.378245830535889
    9. 'not' → logprob: -7.878245830535889
    10. '(is' → logprob: -8.62824535369873

Token 1016: ' cross' (ID: 8088)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.20035208761692047
    2. 'is' → logprob: -1.9503520727157593
    3. 'cross' → logprob: -4.075352191925049
    4. 'eq' → logprob: -4.450352191925049
    5. 'abs' → logprob: -4.575352191925049
    6. ' cc' → logprob: -9.20035171508789
    7. '(cc' → logprob: -9.20035171508789
    8. ' is' → logprob: -10.32535171508789
    9. 'not' → logprob: -10.32535171508789
    10. 'min' → logprob: -10.45035171508789

Token 1017: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0005846070707775652
    2. '(s' → logprob: -7.500584602355957
    3. 'l' → logprob: -10.875584602355957
    4. '((' → logprob: -12.375584602355957
    5. '(is' → logprob: -12.625584602355957
    6. '(ls' → logprob: -13.375584602355957
    7. 's' → logprob: -13.750584602355957
    8. '(abs' → logprob: -14.125584602355957
    9. '(c' → logprob: -14.250584602355957
    10. '(' → logprob: -15.000584602355957

Token 1018: '.b' (ID: 1292)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.410189688205719
    2. '(l' → logprob: -1.9101896286010742
    3. '.s' → logprob: -2.160189628601074
    4. '(s' → logprob: -2.660189628601074
    5. 's' → logprob: -5.910189628601074
    6. 'l' → logprob: -7.910189628601074
    7. '.a' → logprob: -9.660189628601074
    8. '.' → logprob: -11.410189628601074
    9. '.b' → logprob: -12.035189628601074
    10. '	l' → logprob: -12.410189628601074

Token 1019: ' -' (ID: 533)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.12135571241378784
    2. '-s' → logprob: -2.2463557720184326
    3. '-' → logprob: -4.8713555335998535
    4. 's' → logprob: -7.9963555335998535
    5. ' -' → logprob: -8.621356010437012
    6. '<|end|>' → logprob: -8.746356010437012
    7. '-lfs' → logprob: -9.871356010437012
    8. '.l' → logprob: -9.996356010437012
    9. '(l' → logprob: -11.246356010437012
    10. '-b' → logprob: -11.621356010437012

Token 1020: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.792751032160595e-05
    2. 's' → logprob: -9.37508773803711
    3. ' l' → logprob: -13.12508773803711
    4. '	l' → logprob: -14.25008773803711
    5. '<|end|>' → logprob: -14.87508773803711
    6. '<|end|>' → logprob: -16.87508773803711
    7. '   ' → logprob: -18.37508773803711
    8. '(l' → logprob: -18.87508773803711
    9. ' s' → logprob: -19.00008773803711
    10. ' ' → logprob: -19.87508773803711

Token 1021: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3868752717971802
    2. '.a' → logprob: -1.1368752717971802
    3. '	a' → logprob: -13.38687515258789
    4. ' a' → logprob: -13.51187515258789
    5. '.' → logprob: -14.38687515258789
    6. '#a' → logprob: -15.26187515258789
    7. '.b' → logprob: -15.76187515258789
    8. 'а' → logprob: -16.51187515258789
    9. 'b' → logprob: -17.01187515258789
    10. ''a' → logprob: -17.01187515258789

Token 1022: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012220942415297031
    2. ',s' → logprob: -4.512220859527588
    3. '(s' → logprob: -7.012220859527588
    4. 's' → logprob: -9.012221336364746
    5. ' ,' → logprob: -9.637221336364746
    6. ',
' → logprob: -10.512221336364746
    7. ',l' → logprob: -10.887221336364746
    8. ' s' → logprob: -11.637221336364746
    9. '<s' → logprob: -11.762221336364746
    10. '(l' → logprob: -12.262221336364746

Token 1023: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.180879816180095e-05
    2. ' s' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.125051498413086
    4. '(s' → logprob: -16.625051498413086
    5. '	s' → logprob: -16.875051498413086
    6. 'l' → logprob: -17.000051498413086
    7. '{s' → logprob: -18.000051498413086
    8. 'max' → logprob: -18.375051498413086
    9. ' ' → logprob: -18.500051498413086
    10. 'min' → logprob: -18.875051498413086

Token 1024: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0017153972294181585
    2. '.b' → logprob: -6.376715183258057
    3. 'a' → logprob: -11.376715660095215
    4. '.' → logprob: -14.376715660095215
    5. '.s' → logprob: -14.501715660095215
    6. '.p' → logprob: -15.501715660095215
    7. '	a' → logprob: -16.3767147064209
    8. 'b' → logprob: -16.3767147064209
    9. '
' → logprob: -16.7517147064209
    10. '(a' → logprob: -17.1267147064209

Token 1025: ' -' (ID: 533)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.48230573534965515
    2. '-' → logprob: -1.7323057651519775
    3. ' -' → logprob: -2.1073057651519775
    4. ')' → logprob: -2.4823057651519775
    5. 'l' → logprob: -9.107305526733398
    6. ')<' → logprob: -9.482305526733398
    7. ')<=' → logprob: -9.607305526733398
    8. '),' → logprob: -9.607305526733398
    9. '-s' → logprob: -10.107305526733398
    10. '-(' → logprob: -10.482305526733398

Token 1026: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0001422770437784493
    2. ' l' → logprob: -8.875142097473145
    3. '	l' → logprob: -13.750142097473145
    4. '   ' → logprob: -14.625142097473145
    5. ' ' → logprob: -15.375142097473145
    6. '[l' → logprob: -16.00014305114746
    7. '[' → logprob: -16.12514305114746
    8. 's' → logprob: -16.31264305114746
    9. '  ' → logprob: -16.56264305114746
    10. ')' → logprob: -16.62514305114746

Token 1027: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.002807013690471649
    2. 'a' → logprob: -5.877807140350342
    3. '.' → logprob: -14.252806663513184
    4. '.b' → logprob: -14.502806663513184
    5. ' a' → logprob: -15.252806663513184
    6. '.l' → logprob: -15.877806663513184
    7. 'b' → logprob: -16.0028076171875
    8. '	a' → logprob: -16.1278076171875
    9. '   ' → logprob: -16.7528076171875
    10. 'A' → logprob: -17.1278076171875

Token 1028: ')' (ID: 8)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.20142561197280884
    2. ')' → logprob: -1.701425552368164
    3. ')==' → logprob: -11.951425552368164
    4. ')<=' → logprob: -12.951425552368164
    5. ')*(' → logprob: -13.326425552368164
    6. ')>=' → logprob: -14.076425552368164
    7. ')**' → logprob: -14.451425552368164
    8. '   ' → logprob: -15.451425552368164
    9. ')+' → logprob: -16.076425552368164
    10. ')
' → logprob: -16.076425552368164

Token 1029: ' *' (ID: 425)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.11350180208683014
    2. '*' → logprob: -2.613501787185669
    3. '()*' → logprob: -4.113502025604248
    4. ')' → logprob: -4.863502025604248
    5. 'cross' → logprob: -5.863502025604248
    6. '0' → logprob: -6.488502025604248
    7. '==' → logprob: -6.738502025604248
    8. ']*' → logprob: -7.113502025604248
    9. '
' → logprob: -7.488502025604248
    10. '#' → logprob: -7.488502025604248

Token 1030: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.005380553193390369
    2. ' cross' → logprob: -5.255380630493164
    3. '   ' → logprob: -8.880380630493164
    4. '       ' → logprob: -12.505380630493164
    5. '           ' → logprob: -13.380380630493164
    6. '  ' → logprob: -14.005380630493164
    7. '    ' → logprob: -14.880380630493164
    8. ' ' → logprob: -15.380380630493164
    9. '.cross' → logprob: -15.380380630493164
    10. '               ' → logprob: -15.880380630493164

Token 1031: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.625
    3. 'l' → logprob: -16.0
    4. '(
' → logprob: -16.625
    5. ' (' → logprob: -19.125
    6. '	l' → logprob: -19.25
    7. '((' → logprob: -20.25
    8. '(line' → logprob: -20.875
    9. '(s' → logprob: -21.375
    10. '   ' → logprob: -21.875

Token 1032: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0013954727910459042
    2. '.' → logprob: -6.7513957023620605
    3. ' .' → logprob: -9.126395225524902
    4. 'b' → logprob: -9.626395225524902
    5. '.l' → logprob: -10.251395225524902
    6. '   ' → logprob: -11.751395225524902
    7. '(b' → logprob: -13.126395225524902
    8. '(' → logprob: -14.001395225524902
    9. '.B' → logprob: -14.126395225524902
    10. ' ' → logprob: -14.501395225524902

Token 1033: ' -' (ID: 533)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.23294289410114288
    2. ' -' → logprob: -2.232942819595337
    3. '-' → logprob: -2.357942819595337
    4. '(' → logprob: -5.607943058013916
    5. '-l' → logprob: -6.982943058013916
    6. 'l' → logprob: -7.107943058013916
    7. ' l' → logprob: -8.232942581176758
    8. '(-' → logprob: -8.607942581176758
    9. ' (' → logprob: -10.982942581176758
    10. '(s' → logprob: -11.232942581176758

Token 1034: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.008615161292254925
    2. ' l' → logprob: -4.758615016937256
    3. '	l' → logprob: -15.508615493774414
    4. '<|end|>' → logprob: -15.508615493774414
    5. ' л' → logprob: -16.883615493774414
    6. 'line' → logprob: -17.008615493774414
    7. ' ' → logprob: -17.258615493774414
    8. ',' → logprob: -17.383615493774414
    9. '   ' → logprob: -17.508615493774414
    10. 's' → logprob: -17.508615493774414

Token 1035: '.a' (ID: 8772)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.14555542171001434
    2. '.a' → logprob: -2.7705554962158203
    3. 'l' → logprob: -3.1455554962158203
    4. 'a' → logprob: -3.5205554962158203
    5. '.' → logprob: -9.64555549621582
    6. ' l' → logprob: -9.89555549621582
    7. '...' → logprob: -10.89555549621582
    8. 'b' → logprob: -11.27055549621582
    9. '.b' → logprob: -11.64555549621582
    10. '..' → logprob: -12.02055549621582

Token 1036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001177012687548995
    2. ',l' → logprob: -7.126176834106445
    3. '(l' → logprob: -8.001176834106445
    4. ' ,' → logprob: -11.251176834106445
    5. 's' → logprob: -11.751176834106445
    6. ',
' → logprob: -11.876176834106445
    7. ' l' → logprob: -12.501176834106445
    8. 'l' → logprob: -12.626176834106445
    9. '(' → logprob: -14.376176834106445
    10. '(s' → logprob: -14.751176834106445

Token 1037: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004078878089785576
    2. ' s' → logprob: -5.5040788650512695
    3. '(s' → logprob: -14.62907886505127
    4. '{s' → logprob: -18.004079818725586
    5. '   ' → logprob: -18.754079818725586
    6. '	s' → logprob: -19.379079818725586
    7. '<|end|>' → logprob: -19.879079818725586
    8. '`s' → logprob: -20.879079818725586
    9. '<s' → logprob: -21.004079818725586
    10. '_s' → logprob: -21.379079818725586

Token 1038: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.10914113372564316
    2. '.s' → logprob: -2.3591411113739014
    3. '.' → logprob: -4.9841413497924805
    4. '.a' → logprob: -6.2341413497924805
    5. 'b' → logprob: -9.48414134979248
    6. '   ' → logprob: -12.73414134979248
    7. ' .' → logprob: -12.98414134979248
    8. ' ' → logprob: -13.10914134979248
    9. 's' → logprob: -13.60914134979248
    10. ' -' → logprob: -13.98414134979248

Token 1039: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1427711695432663
    2. '-' → logprob: -2.0177712440490723
    3. '-l' → logprob: -9.392770767211914
    4. ' ' → logprob: -12.267770767211914
    5. 's' → logprob: -13.017770767211914
    6. ' l' → logprob: -13.267770767211914
    7. ' -
' → logprob: -13.767770767211914
    8. ' s' → logprob: -14.017770767211914
    9. 'l' → logprob: -14.517770767211914
    10. '-
' → logprob: -14.767770767211914

Token 1040: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0009126556105911732
    2. ' l' → logprob: -7.000912666320801
    3. '	l' → logprob: -15.1259126663208
    4. '   ' → logprob: -15.8759126663208
    5. ')' → logprob: -16.000911712646484
    6. '.l' → logprob: -16.375911712646484
    7. '(l' → logprob: -16.375911712646484
    8. '-l' → logprob: -16.500911712646484
    9. '[l' → logprob: -16.750911712646484
    10. 's' → logprob: -17.000911712646484

Token 1041: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.008802471682429314
    2. 'a' → logprob: -4.75880241394043
    3. '.l' → logprob: -9.38380241394043
    4. '-a' → logprob: -10.50880241394043
    5. '.' → logprob: -10.63380241394043
    6. '-' → logprob: -11.50880241394043
    7. '```' → logprob: -11.50880241394043
    8. 'l' → logprob: -11.63380241394043
    9. ' a' → logprob: -12.50880241394043
    10. '   ' → logprob: -13.00880241394043

Token 1042: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034380643046461046
    2. ')<=' → logprob: -8.125344276428223
    3. ' )' → logprob: -10.875344276428223
    4. ',' → logprob: -11.125344276428223
    5. '<=' → logprob: -11.875344276428223
    6. ')<' → logprob: -12.625344276428223
    7. ')
' → logprob: -14.125344276428223
    8. ' <=' → logprob: -14.250344276428223
    9. ')>=' → logprob: -14.375344276428223
    10. '()' → logprob: -15.125344276428223

Token 1043: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.01115687657147646
    2. ' <=' → logprob: -4.511157035827637
    3. '<' → logprob: -9.136157035827637
    4. ' <' → logprob: -14.511157035827637
    5. '≤' → logprob: -14.761157035827637
    6. ')<=' → logprob: -15.011157035827637
    7. '   ' → logprob: -15.886157035827637
    8. '>=' → logprob: -16.88615608215332
    9. ']<=' → logprob: -17.26115608215332
    10. '=' → logprob: -17.26115608215332

Token 1044: ' EPS' (ID: 66979)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5306920409202576
    2. 'EPS' → logprob: -1.5306921005249023
    3. '=' → logprob: -1.6556921005249023
    4. ' EPS' → logprob: -6.780692100524902
    5. '1' → logprob: -6.905692100524902
    6. ' ' → logprob: -6.905692100524902
    7. '-E' → logprob: -7.280692100524902
    8. '-' → logprob: -7.655692100524902
    9. '+' → logprob: -9.405692100524902
    10. 'eps' → logprob: -10.780692100524902

Token 1045: '

' (ID: 279)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2235381156206131
    2. 'and' → logprob: -1.8485381603240967
    3. '<|end|>' → logprob: -3.2235381603240967
    4. ' or' → logprob: -5.848537921905518
    5. '<|end|>' → logprob: -9.223538398742676
    6. 'or' → logprob: -10.598538398742676
    7. '#' → logprob: -11.473538398742676
    8. 'def' → logprob: -11.723538398742676
    9. '
' → logprob: -13.723538398742676
    10. ' ' → logprob: -14.098538398742676

Token 1046: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1047: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0044708275236189365
    2. 'abs' → logprob: -6.6294708251953125
    3. 'def' → logprob: -6.7544708251953125
    4. 'cross' → logprob: -6.7544708251953125
    5. 'eq' → logprob: -8.254470825195312
    6. 'cc' → logprob: -8.379470825195312
    7. ' is' → logprob: -9.754470825195312
    8. 'not' → logprob: -10.129470825195312
    9. 'Cross' → logprob: -10.254470825195312
    10. 'len' → logprob: -10.379470825195312

Token 1048: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.031723327934741974
    2. 'Segment' → logprob: -4.156723499298096
    3. 'Par' → logprob: -4.781723499298096
    4. 'Parallel' → logprob: -5.906723499298096
    5. 'ss' → logprob: -6.531723499298096
    6. 'cc' → logprob: -7.156723499298096
    7. 'Cross' → logprob: -8.406723022460938
    8. 'is' → logprob: -8.531723022460938
    9. 'Intersection' → logprob: -8.531723022460938
    10. 'Overlap' → logprob: -8.531723022460938

Token 1049: '_cp' (ID: 96857)
  Prédit: '_ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ls' → logprob: -0.23676234483718872
    2. '_ss' → logprob: -1.861762285232544
    3. '_sl' → logprob: -3.111762285232544
    4. 'ss' → logprob: -5.611762523651123
    5. 'ls' → logprob: -5.736762523651123
    6. '_ll' → logprob: -6.486762523651123
    7. '(ls' → logprob: -6.736762523651123
    8. 'sl' → logprob: -7.736762523651123
    9. '(ss' → logprob: -8.736762046813965
    10. '_s' → logprob: -9.111762046813965

Token 1050: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0011886836728081107
    2. '(circle' → logprob: -7.5011887550354
    3. '(C' → logprob: -7.5011887550354
    4. '(' → logprob: -10.251188278198242
    5. 'def' → logprob: -10.376188278198242
    6. 'c' → logprob: -12.501188278198242
    7. '(l' → logprob: -12.626188278198242
    8. ')' → logprob: -13.376188278198242
    9. '(p' → logprob: -13.376188278198242
    10. '()' → logprob: -13.626188278198242

Token 1051: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.2619501054286957
    2. ',' → logprob: -2.3869500160217285
    3. 'c' → logprob: -2.3869500160217285
    4. 'p' → logprob: -3.7619500160217285
    5. ')' → logprob: -4.8869500160217285
    6. 'def' → logprob: -5.3869500160217285
    7. ',c' → logprob: -5.5119500160217285
    8. '):
' → logprob: -6.3869500160217285
    9. '(' → logprob: -6.6369500160217285
    10. '(p' → logprob: -7.0119500160217285

Token 1052: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00040123690268956125
    2. 's' → logprob: -8.500401496887207
    3. 'l' → logprob: -9.500401496887207
    4. ' p' → logprob: -10.625401496887207
    5. 'def' → logprob: -10.625401496887207
    6. 'Point' → logprob: -10.625401496887207
    7. 'c' → logprob: -10.875401496887207
    8. 'point' → logprob: -11.875401496887207
    9. 'Circle' → logprob: -11.875401496887207
    10. 'circle' → logprob: -12.500401496887207

Token 1053: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06727466732263565
    2. '(c' → logprob: -3.192274570465088
    3. '):' → logprob: -3.817274570465088
    4. '(p' → logprob: -7.192274570465088
    5. 'def' → logprob: -7.192274570465088
    6. ')' → logprob: -9.692275047302246
    7. '):
' → logprob: -9.817275047302246
    8. ':' → logprob: -9.817275047302246
    9. 'c' → logprob: -10.067275047302246
    10. 'p' → logprob: -10.067275047302246

Token 1054: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06459595263004303
    2. 'abs' → logprob: -3.064595937728882
    3. 'def' → logprob: -4.689596176147461
    4. '   ' → logprob: -5.314596176147461
    5. 'eq' → logprob: -7.064596176147461
    6. ' return' → logprob: -7.689596176147461
    7. '(abs' → logprob: -8.564596176147461
    8. '(eq' → logprob: -9.439596176147461
    9. '(c' → logprob: -9.814596176147461
    10. '
' → logprob: -10.064596176147461

Token 1055: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13635335862636566
    2. 'abs' → logprob: -2.1363532543182373
    3. 'eq' → logprob: -5.136353492736816
    4. ' return' → logprob: -6.511353492736816
    5. '(abs' → logprob: -6.636353492736816
    6. '(eq' → logprob: -7.761353492736816
    7. '   ' → logprob: -9.261353492736816
    8. ' abs' → logprob: -9.886353492736816
    9. '((' → logprob: -11.011353492736816
    10. '(return' → logprob: -11.011353492736816

Token 1056: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.15574119985103607
    2. 'eq' → logprob: -2.0307412147521973
    3. '(abs' → logprob: -4.905741214752197
    4. '(eq' → logprob: -5.280741214752197
    5. ' abs' → logprob: -8.405740737915039
    6. '(c' → logprob: -8.905740737915039
    7. '((' → logprob: -10.030740737915039
    8. ' eq' → logprob: -10.905740737915039
    9. '(' → logprob: -11.030740737915039
    10. '(p' → logprob: -11.155740737915039

Token 1057: '(abs' (ID: 71957)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.01131577417254448
    2. '(p' → logprob: -4.511315822601318
    3. '((' → logprob: -8.26131534576416
    4. '(abs' → logprob: -11.76131534576416
    5. '(' → logprob: -14.51131534576416
    6. 'c' → logprob: -14.76131534576416
    7. '(((' → logprob: -14.88631534576416
    8. '(point' → logprob: -16.636316299438477
    9. '(a' → logprob: -16.761316299438477
    10. '(s' → logprob: -16.886316299438477

Token 1058: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10021551698446274
    2. '(p' → logprob: -2.350215435028076
    3. '((' → logprob: -12.225215911865234
    4. 'c' → logprob: -12.975215911865234
    5. '(' → logprob: -13.975215911865234
    6. 'p' → logprob: -14.350215911865234
    7. '(
' → logprob: -16.350215911865234
    8. '	c' → logprob: -17.350215911865234
    9. ' (' → logprob: -17.475215911865234
    10. '(point' → logprob: -18.350215911865234

Token 1059: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00024631983251310885
    2. 'p' → logprob: -8.375246047973633
    3. '.' → logprob: -11.500246047973633
    4. '.r' → logprob: -13.750246047973633
    5. '	p' → logprob: -14.125246047973633
    6. ' .' → logprob: -14.375246047973633
    7. '<p' → logprob: -14.500246047973633
    8. ' p' → logprob: -14.750246047973633
    9. ').' → logprob: -14.875246047973633
    10. '(p' → logprob: -14.875246047973633

Token 1060: ' -' (ID: 533)
  Prédit: '-p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.01858684979379177
    2. 'p' → logprob: -4.3935866355896
    3. '-' → logprob: -5.2685866355896
    4. ' -' → logprob: -7.0185866355896
    5. ' ' → logprob: -12.268587112426758
    6. ' p' → logprob: -12.268587112426758
    7. '   ' → logprob: -13.768587112426758
    8. '	p' → logprob: -14.018587112426758
    9. '  ' → logprob: -14.393587112426758
    10. '+' → logprob: -14.893587112426758

Token 1061: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5332478142227046e-05
    2. ' p' → logprob: -11.125015258789062
    3. 'Point' → logprob: -15.875015258789062
    4. '   ' → logprob: -16.000015258789062
    5. 'point' → logprob: -16.000015258789062
    6. '	p' → logprob: -16.750015258789062
    7. ' ' → logprob: -17.250015258789062
    8. '
' → logprob: -17.875015258789062
    9. '(p' → logprob: -18.000015258789062
    10. 'abs' → logprob: -18.125015258789062

Token 1062: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01493325736373663
    2. ')<=' → logprob: -5.264933109283447
    3. ')-' → logprob: -5.514933109283447
    4. '()' → logprob: -5.889933109283447
    5. '())' → logprob: -6.014933109283447
    6. '()-' → logprob: -8.389933586120605
    7. '-' → logprob: -10.014933586120605
    8. ')<' → logprob: -10.389933586120605
    9. 'p' → logprob: -10.639933586120605
    10. ' -' → logprob: -11.014933586120605

Token 1063: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023732682690024376
    2. '()-' → logprob: -4.648732662200928
    3. '()' → logprob: -5.398732662200928
    4. ' -' → logprob: -5.398732662200928
    5. ')' → logprob: -6.148732662200928
    6. '-c' → logprob: -7.023732662200928
    7. '-p' → logprob: -7.648732662200928
    8. ')<=' → logprob: -7.773732662200928
    9. '<=' → logprob: -8.023733139038086
    10. '-self' → logprob: -8.148733139038086

Token 1064: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00023274161503650248
    2. ' c' → logprob: -8.375232696533203
    3. '   ' → logprob: -13.625232696533203
    4. '	c' → logprob: -14.625232696533203
    5. '  ' → logprob: -16.250232696533203
    6. ' ' → logprob: -16.750232696533203
    7. '0' → logprob: -17.000232696533203
    8. '    ' → logprob: -17.375232696533203
    9. '
' → logprob: -17.500232696533203
    10. ')c' → logprob: -17.625232696533203

Token 1065: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0001254693343071267
    2. 'r' → logprob: -9.000125885009766
    3. '.' → logprob: -13.250125885009766
    4. ' r' → logprob: -16.000125885009766
    5. '	r' → logprob: -16.125125885009766
    6. ',r' → logprob: -17.875125885009766
    7. ' .' → logprob: -18.250125885009766
    8. '=r' → logprob: -19.000125885009766
    9. '[r' → logprob: -19.375125885009766
    10. '.p' → logprob: -19.875125885009766

Token 1066: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002076386474072933
    2. ')<=' → logprob: -6.252076148986816
    3. '())' → logprob: -9.627076148986816
    4. '<=' → logprob: -9.627076148986816
    5. '()' → logprob: -12.127076148986816
    6. ' )' → logprob: -12.627076148986816
    7. '）' → logprob: -12.752076148986816
    8. ' <=' → logprob: -13.627076148986816
    9. ')<' → logprob: -14.127076148986816
    10. '')' → logprob: -14.127076148986816

Token 1067: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.006926715839654207
    2. ' <=' → logprob: -5.006926536560059
    3. '<' → logprob: -8.506926536560059
    4. ')<=' → logprob: -12.256926536560059
    5. '()' → logprob: -13.256926536560059
    6. '<E' → logprob: -13.881926536560059
    7. ' <' → logprob: -14.631926536560059
    8. ')' → logprob: -14.881926536560059
    9. ']<=' → logprob: -15.131926536560059
    10. ' ' → logprob: -15.506926536560059

Token 1068: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -4.60414821645827e-06
    2. ' EPS' → logprob: -12.375004768371582
    3. '10' → logprob: -16.750003814697266
    4. '1' → logprob: -17.125003814697266
    5. 'ESP' → logprob: -17.500003814697266
    6. ' ' → logprob: -17.625003814697266
    7. '=' → logprob: -17.625003814697266
    8. 'EP' → logprob: -17.750003814697266
    9. 'ES' → logprob: -18.000003814697266
    10. '   ' → logprob: -18.000003814697266

Token 1069: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08916030824184418
    2. '<|end|>' → logprob: -2.464160203933716
    3. '
' → logprob: -8.964159965515137
    4. ')' → logprob: -9.714159965515137
    5. '```' → logprob: -11.589159965515137
    6. '#' → logprob: -11.714159965515137
    7. '<|end|>' → logprob: -12.214159965515137
    8. ' def' → logprob: -12.839159965515137
    9. 'return' → logprob: -13.339159965515137
    10. 'and' → logprob: -13.339159965515137

Token 1070: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00023858259373810142
    2. '<|end|>' → logprob: -8.375238418579102
    3. '#' → logprob: -12.250238418579102
    4. '```' → logprob: -13.750238418579102
    5. '<|end|>' → logprob: -14.125238418579102
    6. ')' → logprob: -14.375238418579102
    7. '
' → logprob: -14.875238418579102
    8. ' def' → logprob: -15.500238418579102
    9. 'from' → logprob: -16.8752384185791
    10. 'The' → logprob: -17.1252384185791

Token 1071: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.013613899238407612
    2. 'def' → logprob: -5.013613700866699
    3. ' is' → logprob: -5.138613700866699
    4. 'abs' → logprob: -7.138613700866699
    5. 'not' → logprob: -9.3886137008667
    6. 'eq' → logprob: -10.3886137008667
    7. ' def' → logprob: -11.2636137008667
    8. 'cross' → logprob: -11.2636137008667
    9. '#' → logprob: -11.6386137008667
    10. '
' → logprob: -11.7636137008667

Token 1072: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.0044174171052873135
    2. 'Point' → logprob: -6.754417419433594
    3. 'Inside' → logprob: -6.879417419433594
    4. 'Interact' → logprob: -7.129417419433594
    5. 'In' → logprob: -8.129417419433594
    6. 'inter' → logprob: -8.504417419433594
    7. 'n' → logprob: -8.629417419433594
    8. 'Inter' → logprob: -9.254417419433594
    9. 'Par' → logprob: -9.504417419433594
    10. 'nt' → logprob: -9.629417419433594

Token 1073: '_cl' (ID: 11209)
  Prédit: '_cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cc' → logprob: -0.4015273153781891
    2. 'cc' → logprob: -1.1515272855758667
    3. '_cp' → logprob: -5.526527404785156
    4. 'CC' → logprob: -5.776527404785156
    5. '_c' → logprob: -6.651527404785156
    6. '_ll' → logprob: -6.776527404785156
    7. '_pp' → logprob: -6.901527404785156
    8. 'll' → logprob: -6.901527404785156
    9. 'cp' → logprob: -7.276527404785156
    10. 'pp' → logprob: -7.776527404785156

Token 1074: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -3.173704271830502e-06
    2. '(circle' → logprob: -13.75000286102295
    3. '(l' → logprob: -14.00000286102295
    4. '(C' → logprob: -15.50000286102295
    5. '	c' → logprob: -15.75000286102295
    6. '(' → logprob: -16.250003814697266
    7. '(cl' → logprob: -16.375003814697266
    8. 'ircle' → logprob: -16.375003814697266
    9. 'c' → logprob: -16.500003814697266
    10. '   ' → logprob: -16.625003814697266

Token 1075: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004571103490889072
    2. ',c' → logprob: -5.879570960998535
    3. '(c' → logprob: -6.379570960998535
    4. ' ,' → logprob: -11.129570960998535
    5. 'c' → logprob: -11.129570960998535
    6. '.c' → logprob: -11.254570960998535
    7. 'p' → logprob: -12.379570960998535
    8. '):
' → logprob: -12.879570960998535
    9. ',
' → logprob: -12.879570960998535
    10. ',p' → logprob: -13.004570960998535

Token 1076: ' l' (ID: 305)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34444767236709595
    2. 'l' → logprob: -1.4694476127624512
    3. ' c' → logprob: -3.219447612762451
    4. ' l' → logprob: -3.969447612762451
    5. 'def' → logprob: -6.594447612762451
    6. 'lambda' → logprob: -7.719447612762451
    7. ')' → logprob: -8.71944808959961
    8. '(c' → logprob: -8.84444808959961
    9. ' lambda' → logprob: -9.09444808959961
    10. 'cl' → logprob: -9.59444808959961

Token 1077: '):
' (ID: 1883)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.393722802400589
    2. '):
' → logprob: -1.1437227725982666
    3. '):' → logprob: -5.393723011016846
    4. '   ' → logprob: -7.268723011016846
    5. 'def' → logprob: -7.268723011016846
    6. ')' → logprob: -7.893723011016846
    7. 'c' → logprob: -9.143722534179688
    8. ',' → logprob: -9.143722534179688
    9. ':
' → logprob: -9.393722534179688
    10. ':' → logprob: -10.143722534179688

Token 1078: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.042241476476192474
    2. 'd' → logprob: -4.04224157333374
    3. 'def' → logprob: -4.16724157333374
    4. 'abs' → logprob: -5.16724157333374
    5. 'a' → logprob: -7.66724157333374
    6. 'diff' → logprob: -7.79224157333374
    7. 'r' → logprob: -7.91724157333374
    8. 'dist' → logprob: -7.91724157333374
    9. 'dx' → logprob: -9.042241096496582
    10. 'return' → logprob: -9.042241096496582

Token 1079: ' return' (ID: 622)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0016773181268945336
    2. 'dist' → logprob: -7.001677513122559
    3. 'return' (adapté à ' return') → logprob: -8.501677513122559
    4. 'abs' → logprob: -8.876677513122559
    5. 'a' → logprob: -9.376677513122559
    6. '   ' → logprob: -9.501677513122559
    7. 'diff' → logprob: -9.501677513122559
    8. 'def' → logprob: -9.751677513122559
    9. 'dis' → logprob: -11.001677513122559
    10. 't' → logprob: -11.251677513122559

Token 1080: ' distance' (ID: 9324)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02482941932976246
    2. 'cross' → logprob: -4.024829387664795
    3. '(abs' → logprob: -5.899829387664795
    4. '(c' → logprob: -6.024829387664795
    5. 'c' → logprob: -7.274829387664795
    6. 'is' → logprob: -8.774829864501953
    7. ' abs' → logprob: -8.774829864501953
    8. 'min' → logprob: -8.899829864501953
    9. 'dot' → logprob: -9.899829864501953
    10. 'cc' → logprob: -10.024829864501953

Token 1081: '_lp' (ID: 174192)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0014628577046096325
    2. '(cl' → logprob: -7.376462936401367
    3. ' =' → logprob: -8.001462936401367
    4. '((' → logprob: -9.001462936401367
    5. '=' → logprob: -9.251462936401367
    6. '=c' → logprob: -9.751462936401367
    7. 'def' → logprob: -10.001462936401367
    8. 's' → logprob: -10.251462936401367
    9. 'c' → logprob: -10.501462936401367
    10. 'cl' → logprob: -10.501462936401367

Token 1082: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.034135911613702774
    2. '(c' → logprob: -3.4091358184814453
    3. '(' → logprob: -8.159135818481445
    4. 'def' → logprob: -9.784135818481445
    5. '((' → logprob: -9.909135818481445
    6. ' (' → logprob: -10.784135818481445
    7. ' =' → logprob: -11.409135818481445
    8. '=' → logprob: -11.534135818481445
    9. '(line' → logprob: -11.909135818481445
    10. 'c' → logprob: -12.034135818481445

Token 1083: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002819851040840149
    2. ',c' → logprob: -7.127820014953613
    3. 'c' → logprob: -7.377820014953613
    4. ',' → logprob: -7.377820014953613
    5. ')' → logprob: -8.127820014953613
    6. '=c' → logprob: -8.752820014953613
    7. 'def' → logprob: -10.002820014953613
    8. '.c' → logprob: -10.127820014953613
    9. '
' → logprob: -10.252820014953613
    10. '#' → logprob: -10.252820014953613

Token 1084: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00010318557906430215
    2. 'Circle' → logprob: -9.875102996826172
    3. 'Point' → logprob: -10.250102996826172
    4. 'l' → logprob: -12.000102996826172
    5. ' c' → logprob: -12.000102996826172
    6. '(c' → logprob: -13.375102996826172
    7. 'circle' → logprob: -13.750102996826172
    8. ')' → logprob: -14.875102996826172
    9. '(Point' → logprob: -15.250102996826172
    10. ')c' → logprob: -15.250102996826172

Token 1085: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.023286588490009308
    2. ')' → logprob: -3.7732865810394287
    3. '.' → logprob: -11.648286819458008
    4. 'p' → logprob: -12.023286819458008
    5. '#' → logprob: -12.398286819458008
    6. ',' → logprob: -12.398286819458008
    7. '.l' → logprob: -12.523286819458008
    8. ').' → logprob: -13.148286819458008
    9. ')p' → logprob: -13.523286819458008
    10. '),' → logprob: -13.648286819458008

Token 1086: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010353106772527099
    2. ')<=' → logprob: -7.626035213470459
    3. '()' → logprob: -7.751035213470459
    4. '())' → logprob: -10.251035690307617
    5. '<=' → logprob: -10.251035690307617
    6. ')<' → logprob: -10.626035690307617
    7. '   ' → logprob: -11.501035690307617
    8. '")' → logprob: -13.376035690307617
    9. ' <=' → logprob: -13.501035690307617
    10. '）' → logprob: -13.501035690307617

Token 1087: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5825117826461792
    2. '()' → logprob: -0.8325117826461792
    3. ' <=' → logprob: -5.207511901855469
    4. '()<' → logprob: -7.207511901855469
    5. '(c' → logprob: -9.332511901855469
    6. '   ' → logprob: -9.457511901855469
    7. 'def' → logprob: -9.957511901855469
    8. '<' → logprob: -10.457511901855469
    9. 'return' → logprob: -10.582511901855469
    10. '<c' → logprob: -10.957511901855469

Token 1088: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.988221684878226e-06
    2. ' c' → logprob: -11.875006675720215
    3. '	c' → logprob: -17.37500762939453
    4. 'circle' → logprob: -18.25000762939453
    5. 'cir' → logprob: -19.37500762939453
    6. ')c' → logprob: -19.50000762939453
    7. '   ' → logprob: -20.12500762939453
    8. 'cl' → logprob: -20.37500762939453
    9. '(c' → logprob: -20.75000762939453
    10. '
' → logprob: -20.87500762939453

Token 1089: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00043353010551072657
    2. 'r' → logprob: -7.750433444976807
    3. '.' → logprob: -12.875433921813965
    4. '	r' → logprob: -15.625433921813965
    5. ' r' → logprob: -16.62543296813965
    6. '
' → logprob: -17.12543296813965
    7. '_r' → logprob: -17.50043296813965
    8. '0' → logprob: -18.62543296813965
    9. '*r' → logprob: -18.62543296813965
    10. '[r' → logprob: -18.87543296813965

Token 1090: ' +' (ID: 659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005427984986454248
    2. '
' → logprob: -5.255427837371826
    3. '#' → logprob: -8.630428314208984
    4. 'from' → logprob: -11.880428314208984
    5. '

' → logprob: -13.130428314208984
    6. '  
' → logprob: -13.380428314208984
    7. 'import' → logprob: -13.380428314208984
    8. '    
' → logprob: -13.505428314208984
    9. 'EPS' → logprob: -14.005428314208984
    10. '
' → logprob: -14.505428314208984

Token 1091: ' EPS' (ID: 66979)
  Prédit: 'EPS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -2.935296834039036e-06
    2. ' EPS' → logprob: -12.75000286102295
    3. '1' → logprob: -17.250003814697266
    4. '10' → logprob: -19.125003814697266
    5. '   ' → logprob: -19.250003814697266
    6. ' ' → logprob: -19.375003814697266
    7. 'ES' → logprob: -20.125003814697266
    8. 'EOS' → logprob: -20.500003814697266
    9. '
' → logprob: -20.625003814697266
    10. 'EP' → logprob: -20.750003814697266

Token 1092: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004893350414931774
    2. '
' → logprob: -5.3798933029174805
    3. '<|end|>' → logprob: -8.62989330291748
    4. '#' → logprob: -9.75489330291748
    5. '  
' → logprob: -10.75489330291748
    6. '    
' → logprob: -12.62989330291748
    7. 'from' → logprob: -12.87989330291748
    8. '
' → logprob: -13.12989330291748
    9. '

' → logprob: -13.12989330291748
    10. ' 
' → logprob: -13.75489330291748

Token 1093: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001266613689949736
    2. '#' → logprob: -9.000126838684082
    3. '
' → logprob: -13.125126838684082
    4. 'from' → logprob: -14.125126838684082
    5. ' def' → logprob: -15.375126838684082
    6. 'import' → logprob: -15.500126838684082
    7. '```' → logprob: -17.500125885009766
    8. '0' → logprob: -18.125125885009766
    9. ':def' → logprob: -18.750125885009766
    10. 'EPS' → logprob: -18.875125885009766

Token 1094: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6791303157806396
    2. 'distance' → logprob: -0.8041303157806396
    3. 'is' → logprob: -3.5541303157806396
    4. '#' → logprob: -5.054130554199219
    5. 'ef' → logprob: -5.554130554199219
    6. ' distance' → logprob: -6.179130554199219
    7. 'abs' → logprob: -6.804130554199219
    8. 'istance' → logprob: -7.304130554199219
    9. 'cross' → logprob: -7.929130554199219
    10. ' def' → logprob: -7.929130554199219

Token 1095: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.0059182471595704556
    2. 'Parallel' → logprob: -6.630918025970459
    3. 'inter' → logprob: -6.880918025970459
    4. 'distance' → logprob: -7.005918025970459
    5. 'Distance' → logprob: -7.630918025970459
    6. 'nt' → logprob: -8.130918502807617
    7. 'Inter' → logprob: -8.755918502807617
    8. 'Point' → logprob: -8.880918502807617
    9. 'Intersection' → logprob: -9.005918502807617
    10. 'instance' → logprob: -9.255918502807617

Token 1096: '_cs' (ID: 82698)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.03441249579191208
    2. 'cl' → logprob: -3.784412384033203
    3. 'cs' → logprob: -5.034412384033203
    4. 'c' → logprob: -6.909412384033203
    5. '_cc' → logprob: -7.159412384033203
    6. 'Circle' → logprob: -7.284412384033203
    7. 'lc' → logprob: -7.409412384033203
    8. 'cp' → logprob: -7.409412384033203
    9. 'll' → logprob: -7.909412384033203
    10. 'ss' → logprob: -9.159412384033203

Token 1097: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.455048449221067e-05
    2. 'def' → logprob: -10.125054359436035
    3. '(' → logprob: -11.375054359436035
    4. 'c' → logprob: -14.000054359436035
    5. '(C' → logprob: -14.750054359436035
    6. '(
' → logprob: -14.875054359436035
    7. '=c' → logprob: -15.125054359436035
    8. ' (' → logprob: -15.250054359436035
    9. '#' → logprob: -15.875054359436035
    10. '	c' → logprob: -16.00005531311035

Token 1098: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003385414369404316
    2. ',c' → logprob: -5.878385543823242
    3. '(c' → logprob: -7.878385543823242
    4. 'c' → logprob: -9.128385543823242
    5. ' ,' → logprob: -10.378385543823242
    6. ',
' → logprob: -10.503385543823242
    7. 's' → logprob: -11.128385543823242
    8. 'def' → logprob: -12.628385543823242
    9. ')' → logprob: -12.878385543823242
    10. '.c' → logprob: -13.253385543823242

Token 1099: ' s' (ID: 265)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.47757811343763e-05
    2. 'def' → logprob: -10.500044822692871
    3. ' c' → logprob: -11.375044822692871
    4. '(c' → logprob: -12.375044822692871
    5. '	c' → logprob: -14.750044822692871
    6. 's' → logprob: -15.000044822692871
    7. ')' → logprob: -15.375044822692871
    8. 'class' → logprob: -15.625044822692871
    9. 'cs' → logprob: -15.625044822692871
    10. ')c' → logprob: -16.375043869018555

Token 1100: '):
' (ID: 1883)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.01977384276688099
    2. '):
' → logprob: -5.144773960113525
    3. 'c' → logprob: -5.894773960113525
    4. ',c' → logprob: -5.894773960113525
    5. 'def' → logprob: -6.269773960113525
    6. ',' → logprob: -6.394773960113525
    7. ')c' → logprob: -7.019773960113525
    8. ')' → logprob: -7.144773960113525
    9. '=c' → logprob: -7.394773960113525
    10. '(s' → logprob: -7.519773960113525

Token 1101: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07350780814886093
    2. 'def' → logprob: -2.698507785797119
    3. ' return' → logprob: -5.948507785797119
    4. '   ' → logprob: -7.073507785797119
    5. '#' → logprob: -10.323508262634277
    6. 'distance' → logprob: -10.698508262634277
    7. 'd' → logprob: -11.698508262634277
    8. 'is' → logprob: -11.698508262634277
    9. '
' → logprob: -12.073508262634277
    10. '	return' → logprob: -12.448508262634277

Token 1102: ' pass' (ID: 1853)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005180035717785358
    2. 'def' → logprob: -5.3801798820495605
    3. ' return' → logprob: -7.5051798820495605
    4. 'distance' → logprob: -12.755180358886719
    5. '   ' → logprob: -12.880180358886719
    6. 'is' → logprob: -13.880180358886719
    7. '#' → logprob: -14.005180358886719
    8. 'lambda' → logprob: -14.130180358886719
    9. '
' → logprob: -15.005180358886719
    10. 'd' → logprob: -15.130180358886719

Token 1103: '

' (ID: 279)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01582084409892559
    2. '   ' → logprob: -4.8908209800720215
    3. 'd' → logprob: -5.3908209800720215
    4. 'def' → logprob: -5.7658209800720215
    5. 't' → logprob: -8.890820503234863
    6. 'dist' → logprob: -9.140820503234863
    7. '#' → logprob: -9.390820503234863
    8. 'distance' → logprob: -9.515820503234863
    9. ' return' → logprob: -10.140820503234863
    10. 'v' → logprob: -11.890820503234863

Token 1104: 'def' (ID: 1314)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44110316038131714
    2. '   ' → logprob: -1.066103219985962
    3. 'd' → logprob: -4.941102981567383
    4. 'def' → logprob: -5.941102981567383
    5. 'c' → logprob: -7.191102981567383
    6. 't' → logprob: -7.441102981567383
    7. 'distance' → logprob: -8.816102981567383
    8. 'dist' → logprob: -8.941102981567383
    9. 'vec' → logprob: -9.066102981567383
    10. 'v' → logprob: -9.066102981567383

Token 1105: ' intersect' (ID: 64353)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1003260388970375
    2. 'c' → logprob: -2.8503260612487793
    3. 'def' → logprob: -4.100326061248779
    4. ' is' → logprob: -4.225326061248779
    5. 'cs' → logprob: -5.600326061248779
    6. 'cl' → logprob: -7.100326061248779
    7. 's' → logprob: -7.725326061248779
    8. ' c' → logprob: -7.850326061248779
    9. '#' → logprob: -7.975326061248779
    10. 'distance' → logprob: -8.100325584411621

Token 1106: '_cc' (ID: 69524)
  Prédit: '_cs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cs' → logprob: -0.001926374970935285
    2. '_c' → logprob: -7.376926422119141
    3. '_ss' → logprob: -8.00192642211914
    4. 'ion' → logprob: -8.25192642211914
    5. '_cc' → logprob: -8.25192642211914
    6. '_circle' → logprob: -9.12692642211914
    7. '(cs' → logprob: -9.12692642211914
    8. 'cs' → logprob: -9.87692642211914
    9. '_ll' → logprob: -10.25192642211914
    10. '_' → logprob: -10.62692642211914

Token 1107: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.478889215737581e-05
    2. '(' → logprob: -10.250054359436035
    3. 'def' → logprob: -11.125054359436035
    4. '(s' → logprob: -13.000054359436035
    5. 's' → logprob: -14.125054359436035
    6. '(a' → logprob: -14.625054359436035
    7. 'c' → logprob: -15.000054359436035
    8. '(C' → logprob: -15.500054359436035
    9. '```' → logprob: -16.12505531311035
    10. '(
' → logprob: -16.37505531311035

Token 1108: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6769763231277466
    2. '1' → logprob: -1.0519763231277466
    3. ',c' → logprob: -2.551976203918457
    4. ',' → logprob: -2.801976203918457
    5. '_c' → logprob: -5.801976203918457
    6. '_,' → logprob: -8.176976203918457
    7. '(c' → logprob: -8.551976203918457
    8. '_' → logprob: -9.426976203918457
    9. ')' → logprob: -9.426976203918457
    10. '):' → logprob: -9.676976203918457

Token 1109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035489860456436872
    2. ',c' → logprob: -5.878549098968506
    3. 'c' → logprob: -7.253549098968506
    4. '(c' → logprob: -11.003548622131348
    5. ' ,' → logprob: -11.128548622131348
    6. ' c' → logprob: -13.128548622131348
    7. '):' → logprob: -14.253548622131348
    8. 'def' → logprob: -14.503548622131348
    9. '_,' → logprob: -14.753548622131348
    10. '```' → logprob: -15.378548622131348

Token 1110: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008090290939435363
    2. ' c' → logprob: -7.125809192657471
    3. 'def' → logprob: -12.375808715820312
    4. '	c' → logprob: -16.000808715820312
    5. '   ' → logprob: -16.625808715820312
    6. '```' → logprob: -16.875808715820312
    7. '<|end|>' → logprob: -17.500808715820312
    8. 'class' → logprob: -17.500808715820312
    9. '):
' → logprob: -17.750808715820312
    10. '#' → logprob: -17.750808715820312

Token 1111: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01694861799478531
    2. '2' → logprob: -4.141948699951172
    3. 'c' → logprob: -7.016948699951172
    4. 'ont' → logprob: -12.016948699951172
    5. '```' → logprob: -12.641948699951172
    6. 'def' → logprob: -12.891948699951172
    7. 'ircle' → logprob: -13.266948699951172
    8. ' c' → logprob: -13.641948699951172
    9. '):' → logprob: -14.391948699951172
    10. ',c' → logprob: -14.766948699951172

Token 1112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13001856207847595
    2. '):
' → logprob: -2.130018472671509
    3. '(c' → logprob: -5.880018711090088
    4. '):
' → logprob: -8.63001823425293
    5. ',' → logprob: -10.25501823425293
    6. '):

' → logprob: -10.63001823425293
    7. 'c' → logprob: -11.25501823425293
    8. ')' → logprob: -11.25501823425293
    9. '   ' → logprob: -11.25501823425293
    10. ':' → logprob: -11.75501823425293

Token 1113: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19726967811584473
    2. '   ' → logprob: -1.8222696781158447
    3. 'def' → logprob: -4.072269439697266
    4. 'dx' → logprob: -9.447269439697266
    5. '```' → logprob: -9.447269439697266
    6. 'dist' → logprob: -9.822269439697266
    7. ' d' → logprob: -10.322269439697266
    8. 'import' → logprob: -10.697269439697266
    9. 'if' → logprob: -10.822269439697266
    10. '#' → logprob: -11.697269439697266

Token 1114: ' if' (ID: 538)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005015624337829649
    2. 'def' → logprob: -8.75050163269043
    3. 'pass' → logprob: -9.25050163269043
    4. 'import' → logprob: -9.87550163269043
    5. '   ' → logprob: -9.87550163269043
    6. '#' → logprob: -10.00050163269043
    7. 'dist' → logprob: -11.00050163269043
    8. 'if' (adapté à ' if') → logprob: -11.37550163269043
    9. '```' → logprob: -11.62550163269043
    10. 'L' → logprob: -11.62550163269043

Token 1115: ' c' (ID: 274)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4484582245349884
    2. 'c' → logprob: -1.948458194732666
    3. 'eq' → logprob: -1.948458194732666
    4. 'is' → logprob: -3.573458194732666
    5. 'not' → logprob: -3.948458194732666
    6. 'cross' → logprob: -3.948458194732666
    7. '(c' → logprob: -5.323458194732666
    8. '(abs' → logprob: -6.573458194732666
    9. 'False' → logprob: -7.073458194732666
    10. '(eq' → logprob: -7.323458194732666

Token 1116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21350185573101044
    2. 'r' → logprob: -2.4635019302368164
    3. 'p' → logprob: -2.8385019302368164
    4. 'def' → logprob: -4.088501930236816
    5. 'pass' → logprob: -4.838501930236816
    6. '.r' → logprob: -4.963501930236816
    7. '.p' → logprob: -5.088501930236816
    8. '2' → logprob: -5.963501930236816
    9. 's' → logprob: -6.713501930236816
    10. 'import' → logprob: -6.713501930236816

Token 1117: '.r' (ID: 2951)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.3724953234195709
    2. 'p' → logprob: -1.6224952936172485
    3. '==' → logprob: -2.497495412826538
    4. '.r' → logprob: -4.247495174407959
    5. ' ==' → logprob: -4.372495174407959
    6. 'r' → logprob: -5.497495174407959
    7. ' is' → logprob: -9.747495651245117
    8. '```' → logprob: -9.747495651245117
    9. '==
' → logprob: -10.372495651245117
    10. '=' → logprob: -11.122495651245117

Token 1118: ' <' (ID: 464)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.02812918834388256
    2. '==' → logprob: -3.7781291007995605
    3. '.r' → logprob: -5.9031291007995605
    4. 'p' → logprob: -7.0281291007995605
    5. ' ==' → logprob: -7.5281291007995605
    6. '+' → logprob: -8.028129577636719
    7. '+r' → logprob: -8.903129577636719
    8. ' r' → logprob: -9.278129577636719
    9. ' +' → logprob: -10.028129577636719
    10. '>' → logprob: -10.528129577636719

Token 1119: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11171544343233109
    2. 'abs' → logprob: -2.73671555519104
    3. '0' → logprob: -3.61171555519104
    4. 'EPS' → logprob: -4.361715316772461
    5. '1' → logprob: -7.986715316772461
    6. '(c' → logprob: -8.486715316772461
    7. ' c' → logprob: -8.861715316772461
    8. ' abs' → logprob: -9.236715316772461
    9. 'eps' → logprob: -9.361715316772461
    10. ' EPS' → logprob: -9.861715316772461

Token 1120: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5326869487762451
    2. '1' → logprob: -1.7826869487762451
    3. '.c' → logprob: -2.157686948776245
    4. 'r' → logprob: -2.407686948776245
    5. '2' → logprob: -4.407687187194824
    6. '.r' → logprob: -4.657687187194824
    7. 'EPS' → logprob: -5.282687187194824
    8. ' c' → logprob: -5.907687187194824
    9. '>' → logprob: -6.282687187194824
    10. '==' → logprob: -6.782687187194824

Token 1121: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.22544896602630615
    2. 'r' → logprob: -1.6004489660263062
    3. 'pass' → logprob: -10.850448608398438
    4. '	r' → logprob: -12.725448608398438
    5. '```' → logprob: -13.350448608398438
    6. ' r' → logprob: -13.600448608398438
    7. '+r' → logprob: -13.600448608398438
    8. 's' → logprob: -13.850448608398438
    9. '*r' → logprob: -14.100448608398438
    10. '   ' → logprob: -14.225448608398438

Token 1122: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9250721335411072
    2. ':' → logprob: -1.300072193145752
    3. 'return' → logprob: -2.675072193145752
    4. '       ' → logprob: -2.925072193145752
    5. ':return' → logprob: -3.175072193145752
    6. ' +' → logprob: -3.300072193145752
    7. ':
' → logprob: -3.550072193145752
    8. '+' → logprob: -3.800072193145752
    9. 'def' → logprob: -3.925072193145752
    10. 'r' → logprob: -4.175072193145752

Token 1123: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22006002068519592
    2. '       ' → logprob: -2.345060110092163
    3. 'return' → logprob: -2.845060110092163
    4. ' return' → logprob: -3.720060110092163
    5. ':return' → logprob: -5.470059871673584
    6. 'def' → logprob: -5.595059871673584
    7. 'c' → logprob: -5.720059871673584
    8. ' c' → logprob: -5.845059871673584
    9. '```' → logprob: -7.095059871673584
    10. ')' → logprob: -7.345059871673584

Token 1124: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.02127901092171669
    2. 'return' → logprob: -3.8962790966033936
    3. ' c' → logprob: -7.8962788581848145
    4. '   ' → logprob: -8.271279335021973
    5. 'inter' → logprob: -9.521279335021973
    6. ' return' → logprob: -10.646279335021973
    7. '       ' → logprob: -11.521279335021973
    8. '	c' → logprob: -14.396279335021973
    9. '#' → logprob: -15.271279335021973
    10. '(c' → logprob: -15.521279335021973

Token 1125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12745621800422668
    2. '2' → logprob: -2.1274561882019043
    3. 'return' → logprob: -8.252456665039062
    4. ',' → logprob: -8.752456665039062
    5. ' =' → logprob: -10.127456665039062
    6. 'ont' → logprob: -10.752456665039062
    7. 'lass' → logprob: -11.377456665039062
    8. '=' → logprob: -12.127456665039062
    9. 'c' → logprob: -12.377456665039062
    10. 'r' → logprob: -12.377456665039062

Token 1126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010395983699709177
    2. ',c' → logprob: -6.876039505004883
    3. 'c' → logprob: -12.626039505004883
    4. ',r' → logprob: -13.751039505004883
    5. ' ,' → logprob: -13.876039505004883
    6. ',
' → logprob: -14.501039505004883
    7. 'r' → logprob: -15.626039505004883
    8. ' c' → logprob: -16.001039505004883
    9. ',p' → logprob: -16.001039505004883
    10. '1' → logprob: -16.126039505004883

Token 1127: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002613358374219388
    2. ' c' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.875261306762695
    4. '	c' → logprob: -19.625261306762695
    5. '       ' → logprob: -20.625261306762695
    6. ' ' → logprob: -23.000261306762695
    7. '    ' → logprob: -23.000261306762695
    8. '_c' → logprob: -23.125261306762695
    9. '  ' → logprob: -23.250261306762695
    10. '#' → logprob: -23.500261306762695

Token 1128: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. 'c' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.5
    4. '   ' → logprob: -18.125
    5. 'def' → logprob: -18.5
    6. '２' → logprob: -19.125
    7. ' c' → logprob: -19.5
    8. '```' → logprob: -20.0
    9. '       ' → logprob: -20.625
    10. 'import' → logprob: -21.0

Token 1129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0076286387629806995
    2. ' =' → logprob: -4.882628440856934
    3. '=c' → logprob: -11.257628440856934
    4. '=
' → logprob: -11.757628440856934
    5. 'c' → logprob: -14.007628440856934
    6. ',' → logprob: -15.007628440856934
    7. '=

' → logprob: -16.38262939453125
    8. '=cut' → logprob: -16.63262939453125
    9. '=}' → logprob: -16.75762939453125
    10. '.=' → logprob: -16.88262939453125

Token 1130: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007123126997612417
    2. ' c' → logprob: -7.2507123947143555
    3. '   ' → logprob: -13.000712394714355
    4. '	c' → logprob: -16.12571144104004
    5. ' ' → logprob: -17.37571144104004
    6. '       ' → logprob: -18.87571144104004
    7. '  ' → logprob: -19.25071144104004
    8. 'inter' → logprob: -20.50071144104004
    9. 'cc' → logprob: -21.00071144104004
    10. '(c' → logprob: -21.12571144104004

Token 1131: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018804390856530517
    2. 'c' → logprob: -8.625187873840332
    3. 'def' → logprob: -12.750187873840332
    4. '   ' → logprob: -13.375187873840332
    5. ' c' → logprob: -13.750187873840332
    6. 'import' → logprob: -14.125187873840332
    7. '1' → logprob: -14.250187873840332
    8. '(c' → logprob: -14.750187873840332
    9. '       ' → logprob: -15.625187873840332
    10. ' ' → logprob: -15.625187873840332

Token 1132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036993662361055613
    2. ',c' → logprob: -5.62869930267334
    3. 'c' → logprob: -9.37869930267334
    4. ' ,' → logprob: -11.87869930267334
    5. 'def' → logprob: -12.75369930267334
    6. ' c' → logprob: -14.00369930267334
    7. '1' → logprob: -14.12869930267334
    8. 'import' → logprob: -14.12869930267334
    9. ',user' → logprob: -15.00369930267334
    10. '   ' → logprob: -15.12869930267334

Token 1133: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009115827269852161
    2. ' c' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.625911712646484
    4. '	c' → logprob: -18.375911712646484
    5. '       ' → logprob: -20.250911712646484
    6. ' ' → logprob: -21.250911712646484
    7. '    ' → logprob: -21.625911712646484
    8. '  ' → logprob: -21.875911712646484
    9. ')c' → logprob: -22.750911712646484
    10. '
' → logprob: -23.000911712646484

Token 1134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'c' → logprob: -15.375
    3. 'r' → logprob: -16.75
    4. '
' → logprob: -18.0
    5. '```' → logprob: -18.25
    6. 's' → logprob: -18.625
    7. '   ' → logprob: -18.625
    8. '１' → logprob: -18.75
    9. 'def' → logprob: -18.75
    10. ' ' → logprob: -19.375

Token 1135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10786058008670807
    2. 'd' → logprob: -2.357860565185547
    3. '
' → logprob: -5.357860565185547
    4. 'dx' → logprob: -6.607860565185547
    5. ' d' → logprob: -7.607860565185547
    6. 'r' → logprob: -7.732860565185547
    7. '    
' → logprob: -8.232860565185547
    8. '#' → logprob: -8.982860565185547
    9. 'dist' → logprob: -9.857860565185547
    10. 'diff' → logprob: -10.732860565185547

Token 1136: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6335566639900208
    2. '   ' → logprob: -0.7585566639900208
    3. ' d' → logprob: -7.758556842803955
    4. '
' → logprob: -8.883556365966797
    5. '```' → logprob: -9.133556365966797
    6. '#' → logprob: -9.258556365966797
    7. 'dist' → logprob: -10.133556365966797
    8. '    
' → logprob: -10.133556365966797
    9. 'dx' → logprob: -10.383556365966797
    10. 'def' → logprob: -10.383556365966797

Token 1137: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.00506166834384203
    2. 'diff' → logprob: -6.630061626434326
    3. '   ' → logprob: -6.755061626434326
    4. 'vec' → logprob: -7.380061626434326
    5. 'dist' → logprob: -7.505061626434326
    6. '#' → logprob: -7.880061626434326
    7. 'dx' → logprob: -9.005062103271484
    8. 'O' → logprob: -9.130062103271484
    9. 'center' → logprob: -9.505062103271484
    10. 'dc' → logprob: -9.630062103271484

Token 1138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16025052964687347
    2. ' =' → logprob: -1.9102505445480347
    3. '=p' → logprob: -11.535250663757324
    4. 'ist' → logprob: -12.160250663757324
    5. '=c' → logprob: -13.035250663757324
    6. '＝' → logprob: -13.410250663757324
    7. '=d' → logprob: -13.535250663757324
    8. 'istance' → logprob: -13.535250663757324
    9. 'x' → logprob: -14.035250663757324
    10. 'p' → logprob: -14.035250663757324

Token 1139: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0012541614705696702
    2. '(abs' → logprob: -6.751254081726074
    3. ' abs' → logprob: -10.251254081726074
    4. 'c' → logprob: -10.251254081726074
    5. '(c' → logprob: -11.376254081726074
    6. '((' → logprob: -13.626254081726074
    7. '(' → logprob: -15.126254081726074
    8. 'sqrt' → logprob: -16.50125503540039
    9. 'Abs' → logprob: -16.62625503540039
    10. 'Point' → logprob: -16.75125503540039

Token 1140: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.20141607522964478
    2. 'c' → logprob: -1.701416015625
    3. ' c' → logprob: -13.951416015625
    4. ')c' → logprob: -14.201416015625
    5. '(
' → logprob: -14.701416015625
    6. '(' → logprob: -14.826416015625
    7. '	c' → logprob: -15.451416015625
    8. '
' → logprob: -17.076416015625
    9. ' (' → logprob: -17.326416015625
    10. '```' → logprob: -17.826416015625

Token 1141: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14355774223804474
    2. '1' → logprob: -2.0185577869415283
    3. '(c' → logprob: -8.01855754852295
    4. ' c' → logprob: -8.26855754852295
    5. '.c' → logprob: -8.51855754852295
    6. 'p' → logprob: -9.76855754852295
    7. ')c' → logprob: -11.76855754852295
    8. '	c' → logprob: -12.26855754852295
    9. '   ' → logprob: -12.39355754852295
    10. '
' → logprob: -12.76855754852295

Token 1142: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00123023078776896
    2. 'p' → logprob: -6.751230239868164
    3. '.c' → logprob: -9.876230239868164
    4. '1' → logprob: -12.876230239868164
    5. 'c' → logprob: -13.126230239868164
    6. '.' → logprob: -13.501230239868164
    7. ' p' → logprob: -14.126230239868164
    8. '(p' → logprob: -14.376230239868164
    9. '```' → logprob: -15.376230239868164
    10. '
' → logprob: -15.376230239868164

Token 1143: ' -' (ID: 533)
  Prédit: '-c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.10159695893526077
    2. '-' → logprob: -2.3515970706939697
    3. ' -' → logprob: -6.601596832275391
    4. '-p' → logprob: -10.60159683227539
    5. 'c' → logprob: -12.22659683227539
    6. '-
' → logprob: -14.47659683227539
    7. ' ' → logprob: -14.85159683227539
    8. '-C' → logprob: -15.35159683227539
    9. 'p' → logprob: -16.35159683227539
    10. '   ' → logprob: -16.60159683227539

Token 1144: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.872261317563243e-05
    2. ' c' → logprob: -9.750059127807617
    3. '   ' → logprob: -15.375059127807617
    4. '	c' → logprob: -15.625059127807617
    5. ')c' → logprob: -17.000059127807617
    6. '       ' → logprob: -18.750059127807617
    7. '(c' → logprob: -19.750059127807617
    8. '  ' → logprob: -20.000059127807617
    9. 'с' → logprob: -20.500059127807617
    10. ')' → logprob: -20.500059127807617

Token 1145: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03344523906707764
    2. '2' → logprob: -3.908445358276367
    3. 'p' → logprob: -4.408445358276367
    4. '.c' → logprob: -7.408445358276367
    5. '.p' → logprob: -10.908445358276367
    6. ' c' → logprob: -11.158445358276367
    7. '	c' → logprob: -12.533445358276367
    8. ' p' → logprob: -13.783445358276367
    9. ' ' → logprob: -14.408445358276367
    10. '   ' → logprob: -14.533445358276367

Token 1146: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.01105442550033331
    2. 'p' → logprob: -4.511054515838623
    3. ' p' → logprob: -13.511054039001465
    4. '```' → logprob: -13.761054039001465
    5. 'c' → logprob: -14.136054039001465
    6. '<p' → logprob: -14.261054039001465
    7. '.' → logprob: -14.386054039001465
    8. '	p' → logprob: -14.386054039001465
    9. ')' → logprob: -14.886054039001465
    10. '   ' → logprob: -15.386054039001465

Token 1147: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23325391113758087
    2. ')
' → logprob: -1.6082539558410645
    3. '   ' → logprob: -4.8582539558410645
    4. ')
' → logprob: -11.108253479003906
    5. 'def' → logprob: -11.483253479003906
    6. ')

' → logprob: -12.358253479003906
    7. ' ' → logprob: -12.983253479003906
    8. ' )' → logprob: -13.233253479003906
    9. '()' → logprob: -13.358253479003906
    10. '):
' → logprob: -13.358253479003906

Token 1148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00032926726271398365
    2. 'if' → logprob: -8.12532901763916
    3. 'def' → logprob: -11.37532901763916
    4. '```' → logprob: -11.37532901763916
    5. ' if' → logprob: -11.62532901763916
    6. '
' → logprob: -14.25032901763916
    7. '	if' → logprob: -15.75032901763916
    8. 'd' → logprob: -16.000329971313477
    9. 'If' → logprob: -16.125329971313477
    10. '    
' → logprob: -16.250329971313477

Token 1149: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007549128029495478
    2. '   ' → logprob: -5.007549285888672
    3. '```' → logprob: -7.257549285888672
    4. ' if' → logprob: -9.007549285888672
    5. '``' → logprob: -12.632549285888672
    6. '#' → logprob: -13.882549285888672
    7. 'def' → logprob: -14.007549285888672
    8. '	if' → logprob: -14.507549285888672
    9. '
' → logprob: -15.007549285888672
    10. '       ' → logprob: -16.007549285888672

Token 1150: ' eq' (ID: 18955)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3144509196281433
    2. 'd' → logprob: -1.314450979232788
    3. 'eq' → logprob: -7.064450740814209
    4. ' c' → logprob: -8.814451217651367
    5. ' d' → logprob: -9.564451217651367
    6. '   ' → logprob: -10.439451217651367
    7. 'not' → logprob: -10.564451217651367
    8. 'abs' → logprob: -10.689451217651367
    9. '(c' → logprob: -11.564451217651367
    10. 'is' → logprob: -11.689451217651367

Token 1151: '(c' (ID: 2410)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.018289826810359955
    2. '(c' → logprob: -4.018290042877197
    3. 'd' → logprob: -8.893289566040039
    4. '(' → logprob: -13.643289566040039
    5. 'c' → logprob: -14.143289566040039
    6. '(
' → logprob: -14.768289566040039
    7. '((' → logprob: -16.01828956604004
    8. '(abs' → logprob: -16.26828956604004
    9. '   ' → logprob: -17.14328956604004
    10. '(distance' → logprob: -17.51828956604004

Token 1152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006529859383590519
    2. 'd' → logprob: -8.375653266906738
    3. 'r' → logprob: -8.500653266906738
    4. 'p' → logprob: -9.250653266906738
    5. '.r' → logprob: -9.875653266906738
    6. '.p' → logprob: -10.750653266906738
    7. '.d' → logprob: -11.500653266906738
    8. '```' → logprob: -11.625653266906738
    9. 'c' → logprob: -12.250653266906738
    10. 's' → logprob: -12.500653266906738

Token 1153: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.009348726831376553
    2. 'r' → logprob: -5.1343488693237305
    3. '.p' → logprob: -5.8843488693237305
    4. 'p' → logprob: -7.3843488693237305
    5. '
' → logprob: -13.38434886932373
    6. '.' → logprob: -13.63434886932373
    7. '   ' → logprob: -13.75934886932373
    8. '```' → logprob: -13.88434886932373
    9. '	r' → logprob: -14.00934886932373
    10. ').' → logprob: -14.13434886932373

Token 1154: ' +' (ID: 659)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.6461750268936157
    2. 'r' → logprob: -1.2711750268936157
    3. '.c' → logprob: -2.646174907684326
    4. '+r' → logprob: -2.896174907684326
    5. '+c' → logprob: -3.646174907684326
    6. '-r' → logprob: -4.271174907684326
    7. ' +' → logprob: -4.396174907684326
    8. ',' → logprob: -4.896174907684326
    9. '+' → logprob: -5.396174907684326
    10. '```' → logprob: -7.146174907684326

Token 1155: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.3438327843905427e-05
    2. ' c' → logprob: -11.00002384185791
    3. 'd' → logprob: -12.62502384185791
    4. ')c' → logprob: -13.75002384185791
    5. '
' → logprob: -14.12502384185791
    6. '(c' → logprob: -14.50002384185791
    7. ' ' → logprob: -15.00002384185791
    8. '```' → logprob: -15.62502384185791
    9. '	c' → logprob: -15.75002384185791
    10. '   ' → logprob: -15.87502384185791

Token 1156: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3818540573120117
    2. 'r' → logprob: -1.5068540573120117
    3. 'c' → logprob: -2.3818540573120117
    4. 'p' → logprob: -6.381854057312012
    5. '.c' → logprob: -6.881854057312012
    6. '.r' → logprob: -7.381854057312012
    7. '```' → logprob: -10.381854057312012
    8. '   ' → logprob: -11.631854057312012
    9. '#' → logprob: -12.131854057312012
    10. 'o' → logprob: -12.381854057312012

Token 1157: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.020641976967453957
    2. 'r' → logprob: -3.895642042160034
    3. '.p' → logprob: -9.520642280578613
    4. '	r' → logprob: -11.895642280578613
    5. 'p' → logprob: -12.020642280578613
    6. '
' → logprob: -12.145642280578613
    7. '```' → logprob: -13.145642280578613
    8. ' r' → logprob: -13.520642280578613
    9. '.' → logprob: -14.020642280578613
    10. '-r' → logprob: -14.395642280578613

Token 1158: ',' (ID: 11)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00912997405976057
    2. '.p' → logprob: -5.009130001068115
    3. ',' → logprob: -6.259130001068115
    4. 'r' → logprob: -8.384129524230957
    5. '.' → logprob: -9.759129524230957
    6. '.c' → logprob: -10.009129524230957
    7. '.d' → logprob: -10.009129524230957
    8. ' .' → logprob: -10.259129524230957
    9. ',r' → logprob: -11.009129524230957
    10. '```' → logprob: -11.259129524230957

Token 1159: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0023155955132097006
    2. ' d' → logprob: -6.252315521240234
    3. '0' → logprob: -7.877315521240234
    4. ' ' → logprob: -12.502315521240234
    5. '   ' → logprob: -13.127315521240234
    6. '	d' → logprob: -13.752315521240234
    7. 'c' → logprob: -14.252315521240234
    8. '  ' → logprob: -17.002315521240234
    9. ')d' → logprob: -17.627315521240234
    10. '>d' → logprob: -17.752315521240234

Token 1160: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5299965143203735
    2. ')' → logprob: -0.9049965143203735
    3. '):
' → logprob: -5.029996395111084
    4. '):
' → logprob: -8.779996871948242
    5. ' ):' → logprob: -10.279996871948242
    6. '   ' → logprob: -10.279996871948242
    7. ' )' → logprob: -11.279996871948242
    8. ')==' → logprob: -11.279996871948242
    9. ' ' → logprob: -11.779996871948242
    10. '=' → logprob: -11.904996871948242

Token 1161: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0709235742688179
    2. '   ' → logprob: -2.8209235668182373
    3. ' return' → logprob: -5.195923805236816
    4. 'return' → logprob: -5.695923805236816
    5. '	return' → logprob: -12.570923805236816
    6. '    ' → logprob: -12.820923805236816
    7. '```' → logprob: -13.445923805236816
    8. '#' → logprob: -13.820923805236816
    9. ':return' → logprob: -13.820923805236816
    10. ' s' → logprob: -13.945923805236816

Token 1162: ' ' (ID: 220)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.002227098448202014
    2. '[' → logprob: -6.377227306365967
    3. 'Point' → logprob: -8.252226829528809
    4. '[(' → logprob: -9.002226829528809
    5. '[C' → logprob: -10.002226829528809
    6. 'return' → logprob: -10.377226829528809
    7. 'c' → logprob: -11.502226829528809
    8. '[s' → logprob: -11.502226829528809
    9. ' [' → logprob: -12.127226829528809
    10. '(c' → logprob: -12.127226829528809

Token 1163: '3' (ID: 18)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.023855261504650116
    2. '[' → logprob: -3.773855209350586
    3. 'Point' → logprob: -7.898855209350586
    4. '[(' → logprob: -10.023855209350586
    5. '[s' → logprob: -10.023855209350586
    6. 'c' → logprob: -10.273855209350586
    7. '(Point' → logprob: -10.523855209350586
    8. '(c' → logprob: -10.648855209350586
    9. '[p' → logprob: -10.898855209350586
    10. 'Circle' → logprob: -11.773855209350586

Token 1164: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000332485738908872
    2. '    
' → logprob: -9.125332832336426
    3. '#' → logprob: -9.750332832336426
    4. '
' → logprob: -9.875332832336426
    5. '<|end|>' → logprob: -10.125332832336426
    6. 'def' → logprob: -10.625332832336426
    7. ' if' → logprob: -11.625332832336426
    8. ',' → logprob: -11.625332832336426
    9. 'elif' → logprob: -12.375332832336426
    10. ' #' → logprob: -12.500332832336426

Token 1165: ' 内' (ID: 68956)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0724082738161087
    2. '2' → logprob: -3.3224081993103027
    3. 'return' → logprob: -3.4474081993103027
    4. 'c' → logprob: -7.322408199310303
    5. '0' → logprob: -7.947408199310303
    6. '[' → logprob: -8.322408676147461
    7. 'def' → logprob: -8.947408676147461
    8. 'd' → logprob: -8.947408676147461
    9. '[c' → logprob: -8.947408676147461
    10. '   ' → logprob: -9.822408676147461

Token 1166: '接' (ID: 9878)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11022596061229706
    2. 'return' → logprob: -2.9852259159088135
    3. '1' → logprob: -3.9852259159088135
    4. 't' → logprob: -4.610226154327393
    5. '2' → logprob: -5.360226154327393
    6. '側' → logprob: -5.360226154327393
    7. '```' → logprob: -5.860226154327393
    8. 'r' → logprob: -5.985226154327393
    9. '   ' → logprob: -6.485226154327393
    10. '接' → logprob: -6.860226154327393

Token 1167: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012807807885110378
    2. 'def' → logprob: -4.387807846069336
    3. '#' → logprob: -9.887807846069336
    4. 'return' → logprob: -10.012807846069336
    5. '    
' → logprob: -10.387807846069336
    6. 'if' → logprob: -10.387807846069336
    7. ' def' → logprob: -10.512807846069336
    8. ' if' → logprob: -10.637807846069336
    9. '
' → logprob: -10.887807846069336
    10. '<|end|>' → logprob: -11.262807846069336

Token 1168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013266648165881634
    2. 'if' → logprob: -7.001326560974121
    3. 'def' → logprob: -7.876326560974121
    4. ' if' → logprob: -11.001326560974121
    5. '
' → logprob: -11.876326560974121
    6. 'return' → logprob: -12.626326560974121
    7. '#' → logprob: -13.126326560974121
    8. '    
' → logprob: -13.501326560974121
    9. '```' → logprob: -13.501326560974121
    10. '<|end|>' → logprob: -13.626326560974121

Token 1169: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3150610327720642
    2. '   ' → logprob: -1.315061092376709
    3. ' if' → logprob: -6.440061092376709
    4. 'return' → logprob: -9.06506061553955
    5. 'elif' → logprob: -10.31506061553955
    6. '```' → logprob: -10.69006061553955
    7. ' ' → logprob: -12.19006061553955
    8. '	if' → logprob: -12.31506061553955
    9. 'def' → logprob: -12.69006061553955
    10. 'If' → logprob: -12.94006061553955

Token 1170: ' eq' (ID: 18955)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.937502920627594
    2. 'eq' → logprob: -0.937502920627594
    3. 'c' → logprob: -1.5625028610229492
    4. ' d' → logprob: -5.562502861022949
    5. ' c' → logprob: -6.062502861022949
    6. ' eq' → logprob: -7.187502861022949
    7. '(eq' → logprob: -9.18750286102295
    8. 'not' → logprob: -10.56250286102295
    9. ' ' → logprob: -10.81250286102295
    10. '   ' → logprob: -10.93750286102295

Token 1171: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00043376852408982813
    2. 'c' → logprob: -7.750433921813965
    3. '(' → logprob: -13.375433921813965
    4. '0' → logprob: -14.875433921813965
    5. 'd' → logprob: -15.125433921813965
    6. '((' → logprob: -15.750433921813965
    7. '(abs' → logprob: -15.750433921813965
    8. 'def' → logprob: -15.875433921813965
    9. 'abs' → logprob: -16.12543296813965
    10. '(d' → logprob: -16.12543296813965

Token 1172: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12744414806365967
    2. '1' → logprob: -2.127444267272949
    3. '(c' → logprob: -8.87744426727295
    4. 'd' → logprob: -9.25244426727295
    5. '.c' → logprob: -9.25244426727295
    6. ' c' → logprob: -9.62744426727295
    7. 'r' → logprob: -10.87744426727295
    8. 'import' → logprob: -11.12744426727295
    9. '#' → logprob: -11.50244426727295
    10. '
' → logprob: -11.62744426727295

Token 1173: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0028851181268692017
    2. 'r' → logprob: -5.877885341644287
    3. '.p' → logprob: -9.877884864807129
    4. 'p' → logprob: -11.502884864807129
    5. '.' → logprob: -12.502884864807129
    6. '#' → logprob: -12.627884864807129
    7. '	r' → logprob: -13.377884864807129
    8. '
' → logprob: -13.752884864807129
    9. ' r' → logprob: -13.752884864807129
    10. '   ' → logprob: -14.002884864807129

Token 1174: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1751136779785156
    2. 'r' → logprob: -1.3001136779785156
    3. ' +' → logprob: -1.5501136779785156
    4. '.r' → logprob: -2.0501136779785156
    5. '+r' → logprob: -2.6751136779785156
    6. '   ' → logprob: -6.050113677978516
    7. '-r' → logprob: -6.050113677978516
    8. ' ' → logprob: -6.675113677978516
    9. '-' → logprob: -7.300113677978516
    10. '+c' → logprob: -8.175113677978516

Token 1175: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018200397491455078
    2. ' c' → logprob: -4.018200397491455
    3. '(c' → logprob: -10.143199920654297
    4. ' ' → logprob: -12.643199920654297
    5. '   ' → logprob: -13.018199920654297
    6. ' (' → logprob: -13.643199920654297
    7. '	c' → logprob: -13.768199920654297
    8. '
' → logprob: -14.018199920654297
    9. '3' → logprob: -14.143199920654297
    10. '2' → logprob: -14.955699920654297

Token 1176: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004723106976598501
    2. 'r' → logprob: -5.379723072052002
    3. 'c' → logprob: -9.25472354888916
    4. '.r' → logprob: -13.00472354888916
    5. '.c' → logprob: -13.87972354888916
    6. '_r' → logprob: -14.62972354888916
    7. '２' → logprob: -14.62972354888916
    8. '1' → logprob: -15.00472354888916
    9. '```' → logprob: -15.00472354888916
    10. ' ' → logprob: -15.37972354888916

Token 1177: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0009942257311195135
    2. ',' → logprob: -7.5009942054748535
    3. 'r' → logprob: -7.8759942054748535
    4. ',r' → logprob: -10.125994682312012
    5. ' ' → logprob: -11.625994682312012
    6. '.' → logprob: -13.000994682312012
    7. '2' → logprob: -13.500994682312012
    8. '	r' → logprob: -13.750994682312012
    9. '.c' → logprob: -13.750994682312012
    10. ' r' → logprob: -13.750994682312012

Token 1178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001352379797026515
    2. ',d' → logprob: -6.751352310180664
    3. ' ,' → logprob: -8.876352310180664
    4. 'd' → logprob: -10.251352310180664
    5. '(d' → logprob: -12.626352310180664
    6. ' d' → logprob: -13.376352310180664
    7. '   ' → logprob: -14.001352310180664
    8. ',r' → logprob: -15.251352310180664
    9. ',c' → logprob: -15.376352310180664
    10. ' ' → logprob: -15.751352310180664

Token 1179: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003184363478794694
    2. ' d' → logprob: -5.7531843185424805
    3. '0' → logprob: -13.00318431854248
    4. '   ' → logprob: -13.00318431854248
    5. ' ' → logprob: -13.25318431854248
    6. '	d' → logprob: -15.75318431854248
    7. '  ' → logprob: -16.128185272216797
    8. 'abs' → logprob: -16.753185272216797
    9. '    ' → logprob: -17.628185272216797
    10. ')' → logprob: -17.878185272216797

Token 1180: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007710324716754258
    2. '   ' → logprob: -7.5007710456848145
    3. '):
' → logprob: -9.000770568847656
    4. ')' → logprob: -9.875770568847656
    5. ' ):' → logprob: -11.125770568847656
    6. '       ' → logprob: -11.750770568847656
    7. ':' → logprob: -12.500770568847656
    8. 'return' → logprob: -12.875770568847656
    9. ')==' → logprob: -13.250770568847656
    10. '):
' → logprob: -13.250770568847656

Token 1181: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5243660807609558
    2. ' ' → logprob: -2.0243661403656006
    3. '   ' → logprob: -2.2743661403656006
    4. '4' → logprob: -2.7743661403656006
    5. 'return' → logprob: -2.7743661403656006
    6. '2' → logprob: -3.7743661403656006
    7. '3' → logprob: -4.5243659019470215
    8. '1' → logprob: -4.7743659019470215
    9. '0' → logprob: -5.5243659019470215
    10. '       ' → logprob: -6.6493659019470215

Token 1182: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.20433180034160614
    2. '2' → logprob: -2.329331874847412
    3. '3' → logprob: -3.079331874847412
    4. '1' → logprob: -3.204331874847412
    5. '0' → logprob: -7.329331874847412
    6. '5' → logprob: -8.954331398010254
    7. ' ' → logprob: -9.954331398010254
    8. '-' → logprob: -10.704331398010254
    9. '6' → logprob: -12.329331398010254
    10. '   ' → logprob: -12.579331398010254

Token 1183: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.09168481826782227
    2. '3' → logprob: -2.8416848182678223
    3. '2' → logprob: -3.5916848182678223
    4. '1' → logprob: -6.466684818267822
    5. '0' → logprob: -9.341684341430664
    6. '5' → logprob: -9.716684341430664
    7. '-' → logprob: -10.716684341430664
    8. '6' → logprob: -14.154184341430664
    9. '
' → logprob: -14.591684341430664
    10. ' ' → logprob: -14.966684341430664

Token 1184: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0060003711842000484
    2. '#' → logprob: -5.256000518798828
    3. ' #' → logprob: -7.881000518798828
    4. '0' → logprob: -8.881000518798828
    5. '<|end|>' → logprob: -9.506000518798828
    6. ' ' → logprob: -9.756000518798828
    7. ' if' → logprob: -10.756000518798828
    8. '  ' → logprob: -11.006000518798828
    9. '1' → logprob: -11.131000518798828
    10. '3' → logprob: -11.131000518798828

Token 1185: ' 外' (ID: 89976)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01268433965742588
    2. '0' → logprob: -4.637684345245361
    3. '#' → logprob: -6.637684345245361
    4. '1' → logprob: -7.012684345245361
    5. '4' → logprob: -8.012683868408203
    6. 'return' → logprob: -9.262683868408203
    7. '内' → logprob: -9.637683868408203
    8. 't' → logprob: -9.762683868408203
    9. '-' → logprob: -10.262683868408203
    10. ' ' → logprob: -10.262683868408203

Token 1186: '接' (ID: 9878)
  Prédit: '接'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '接' → logprob: -0.24794165790081024
    2. '2' → logprob: -2.747941732406616
    3. 't' → logprob: -3.247941732406616
    4. 'con' → logprob: -4.372941493988037
    5. 'contact' → logprob: -4.497941493988037
    6. 'd' → logprob: -4.622941493988037
    7. '0' → logprob: -4.622941493988037
    8. 'touch' → logprob: -4.747941493988037
    9. '1' → logprob: -4.997941493988037
    10. '内' → logprob: -5.122941493988037

Token 1187: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0075854407623410225
    2. 'def' → logprob: -5.132585525512695
    3. ':' → logprob: -6.757585525512695
    4. ':
' → logprob: -8.632585525512695
    5. ' def' → logprob: -10.257585525512695
    6. '```' → logprob: -10.382585525512695
    7. '    ' → logprob: -10.757585525512695
    8. 'd' → logprob: -10.882585525512695
    9. '    
' → logprob: -10.882585525512695
    10. ':return' → logprob: -10.882585525512695

Token 1188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000332485738908872
    2. 'if' → logprob: -8.625332832336426
    3. 'def' → logprob: -9.000332832336426
    4. '#' → logprob: -11.500332832336426
    5. '```' → logprob: -12.000332832336426
    6. ' if' → logprob: -12.125332832336426
    7. '<|end|>' → logprob: -13.000332832336426
    8. 'return' → logprob: -13.500332832336426
    9. '    ' → logprob: -14.375332832336426
    10. '...' → logprob: -14.375332832336426

Token 1189: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1168522909283638
    2. '   ' → logprob: -2.241852283477783
    3. 'return' → logprob: -5.741852283477783
    4. ' if' → logprob: -7.366852283477783
    5. '#' → logprob: -9.491852760314941
    6. '```' → logprob: -9.491852760314941
    7. 'def' → logprob: -11.491852760314941
    8. '	if' → logprob: -12.116852760314941
    9. 'elif' → logprob: -12.491852760314941
    10. ' ' → logprob: -13.366852760314941

Token 1190: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007842378690838814
    2. ' d' → logprob: -5.507842540740967
    3. 'c' → logprob: -5.632842540740967
    4. 'not' → logprob: -9.382842063903809
    5. 'eq' → logprob: -10.257842063903809
    6. ' c' → logprob: -10.507842063903809
    7. '   ' → logprob: -11.507842063903809
    8. '3' → logprob: -12.257842063903809
    9. ' not' → logprob: -12.257842063903809
    10. ' ' → logprob: -13.257842063903809

Token 1191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002174766268581152
    2. '.r' → logprob: -6.5021748542785645
    3. 'r' → logprob: -7.5021748542785645
    4. 'abs' → logprob: -9.877174377441406
    5. '2' → logprob: -10.002174377441406
    6. '#' → logprob: -12.502174377441406
    7. 'd' → logprob: -12.627174377441406
    8. 'ross' → logprob: -13.002174377441406
    9. ' ' → logprob: -13.627174377441406
    10. 'c' → logprob: -14.002174377441406

Token 1192: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0059449137188494205
    2. 'r' → logprob: -5.130944728851318
    3. '_r' → logprob: -12.630945205688477
    4. 'import' → logprob: -12.880945205688477
    5. '	r' → logprob: -13.005945205688477
    6. '.p' → logprob: -13.130945205688477
    7. ' r' → logprob: -13.255945205688477
    8. '#' → logprob: -13.630945205688477
    9. 'p' → logprob: -14.755945205688477
    10. 'abs' → logprob: -14.880945205688477

Token 1193: ' +' (ID: 659)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.43038976192474365
    2. ' +' → logprob: -1.8053897619247437
    3. '+' → logprob: -2.180389881134033
    4. '.r' → logprob: -3.180389881134033
    5. '+r' → logprob: -4.055389881134033
    6. '   ' → logprob: -4.805389881134033
    7. '.' → logprob: -6.430389881134033
    8. ' r' → logprob: -6.930389881134033
    9. '-r' → logprob: -7.305389881134033
    10. '<' → logprob: -7.680389881134033

Token 1194: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004079112783074379
    2. ' c' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.62907886505127
    4. '
' → logprob: -16.129079818725586
    5. ' ' → logprob: -16.504079818725586
    6. '	c' → logprob: -17.379079818725586
    7. '  ' → logprob: -18.754079818725586
    8. '
' → logprob: -19.254079818725586
    9. '(c' → logprob: -19.879079818725586
    10. '_c' → logprob: -20.504079818725586

Token 1195: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20949293673038483
    2. '2' → logprob: -1.8344929218292236
    3. '.r' → logprob: -3.7094929218292236
    4. 'c' → logprob: -5.584493160247803
    5. '.c' → logprob: -8.084492683410645
    6. 'd' → logprob: -8.334492683410645
    7. '#' → logprob: -9.209492683410645
    8. 't' → logprob: -9.334492683410645
    9. '```' → logprob: -9.459492683410645
    10. '.' → logprob: -10.209492683410645

Token 1196: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.023474669083952904
    2. 'r' → logprob: -3.89847469329834
    3. '.' → logprob: -5.89847469329834
    4. '2' → logprob: -8.77347469329834
    5. ' r' → logprob: -11.77347469329834
    6. '	r' → logprob: -11.89847469329834
    7. '.c' → logprob: -12.27347469329834
    8. 'c' → logprob: -13.52347469329834
    9. '>' → logprob: -13.77347469329834
    10. '<' → logprob: -13.77347469329834

Token 1197: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6938275694847107
    2. ' <' → logprob: -0.6938275694847107
    3. ',' → logprob: -8.318827629089355
    4. '>' → logprob: -8.818827629089355
    5. '   ' → logprob: -9.318827629089355
    6. ' >' → logprob: -9.318827629089355
    7. ' ' → logprob: -10.693827629089355
    8. '<=' → logprob: -10.943827629089355
    9. ' <=' → logprob: -11.193827629089355
    10. ')' → logprob: -11.318827629089355

Token 1198: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5769129991531372
    2. 'd' → logprob: -0.8269129991531372
    3. 'c' → logprob: -7.576912879943848
    4. ' c' → logprob: -8.201912879943848
    5. 'abs' → logprob: -8.826912879943848
    6. ' abs' → logprob: -11.076912879943848
    7. ' ' → logprob: -11.201912879943848
    8. '(d' → logprob: -12.951912879943848
    9. '(c' → logprob: -13.326912879943848
    10. ' (' → logprob: -13.326912879943848

Token 1199: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04005763307213783
    2. ':return' → logprob: -3.66505765914917
    3. '   ' → logprob: -4.41505765914917
    4. ':
' → logprob: -7.16505765914917
    5. 'return' → logprob: -8.290057182312012
    6. '       ' → logprob: -8.665057182312012
    7. ' :' → logprob: -8.665057182312012
    8. ' return' → logprob: -9.040057182312012
    9. '):' → logprob: -10.540057182312012
    10. '  ' → logprob: -11.665057182312012

Token 1200: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6029852628707886
    2. ' return' → logprob: -1.7279852628707886
    3. '0' → logprob: -1.8529852628707886
    4. '   ' → logprob: -2.852985382080078
    5. ' ' → logprob: -3.352985382080078
    6. 'return' → logprob: -3.727985382080078
    7. '3' → logprob: -7.602985382080078
    8. '2' → logprob: -8.102985382080078
    9. '1' → logprob: -8.227985382080078
    10. '    ' → logprob: -8.227985382080078

Token 1201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004867994866799563
    2. '2' → logprob: -7.875486850738525
    3. '4' → logprob: -9.750486373901367
    4. ' ' → logprob: -10.000486373901367
    5. '-' → logprob: -13.375486373901367
    6. '1' → logprob: -14.500486373901367
    7. '   ' → logprob: -14.500486373901367
    8. '
' → logprob: -15.750486373901367
    9. 'False' → logprob: -16.625486373901367
    10. ' -' → logprob: -16.875486373901367

Token 1202: '4' (ID: 19)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002070087008178234
    2. '4' → logprob: -6.37706995010376
    3. '2' → logprob: -8.002070426940918
    4. '-' → logprob: -10.377070426940918
    5. ' ' → logprob: -14.377070426940918
    6. '
' → logprob: -14.502070426940918
    7. '1' → logprob: -15.377070426940918
    8. '5' → logprob: -15.627070426940918
    9. '3' → logprob: -15.752070426940918
    10. '   ' → logprob: -15.752070426940918

Token 1203: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003421375877223909
    2. '<|end|>' → logprob: -9.37534236907959
    3. 'return' → logprob: -9.62534236907959
    4. 'def' → logprob: -9.75034236907959
    5. ' return' → logprob: -9.87534236907959
    6. '#' → logprob: -11.50034236907959
    7. '	return' → logprob: -11.62534236907959
    8. ')' → logprob: -11.62534236907959
    9. ' if' → logprob: -11.75034236907959
    10. '  ' → logprob: -11.75034236907959

Token 1204: ' �' (ID: 11197)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025304758455604315
    2. '0' → logprob: -6.252530574798584
    3. ' ' → logprob: -8.002530097961426
    4. '4' → logprob: -9.127530097961426
    5. '   ' → logprob: -9.627530097961426
    6. '3' → logprob: -9.627530097961426
    7. '1' → logprob: -11.502530097961426
    8. '5' → logprob: -12.002530097961426
    9. 'return' → logprob: -12.252530097961426
    10. '  ' → logprob: -13.002530097961426

Token 1205: '�' (ID: 104)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7065697908401489
    2. 'return' → logprob: -1.331569790840149
    3. ' return' → logprob: -2.3315696716308594
    4. '0' → logprob: -2.8315696716308594
    5. '   ' → logprob: -3.4565696716308594
    6. 'def' → logprob: -3.5815696716308594
    7. 'False' → logprob: -4.081569671630859
    8. '1' → logprob: -5.581569671630859
    9. ' ' → logprob: -6.456569671630859
    10. 'eturn' → logprob: -6.831569671630859

Token 1206: 'ま' (ID: 5042)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.41181033849716187
    2. '   ' → logprob: -1.9118103981018066
    3. ' return' → logprob: -1.9118103981018066
    4. 'def' → logprob: -3.4118103981018066
    5. '0' → logprob: -5.911810398101807
    6. '2' → logprob: -6.661810398101807
    7. '1' → logprob: -7.286810398101807
    8. ' ' → logprob: -7.411810398101807
    9. '  ' → logprob: -7.536810398101807
    10. 'EPS' → logprob: -7.786810398101807

Token 1207: 'れて' (ID: 185887)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8739789724349976
    2. '   ' → logprob: -1.6239789724349976
    3. 'def' → logprob: -1.8739789724349976
    4. ' return' → logprob: -2.623979091644287
    5. 'EPS' → logprob: -3.123979091644287
    6. 'b' → logprob: -3.623979091644287
    7. 'eturn' → logprob: -3.998979091644287
    8. '0' → logprob: -4.373979091644287
    9. 'd' → logprob: -4.498979091644287
    10. 'False' → logprob: -4.748979091644287

Token 1208: 'る' (ID: 6996)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1053847074508667
    2. ' return' → logprob: -3.1053848266601562
    3. 'def' → logprob: -3.4803848266601562
    4. '   ' → logprob: -4.355384826660156
    5. '0' → logprob: -5.980384826660156
    6. 'False' → logprob: -6.105384826660156
    7. 'True' → logprob: -6.605384826660156
    8. '1' → logprob: -6.605384826660156
    9. 'abs' → logprob: -7.105384826660156
    10. '4' → logprob: -7.105384826660156

Token 1209: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011661415919661522
    2. 'def' → logprob: -4.636661529541016
    3. 'return' → logprob: -7.136661529541016
    4. ' if' → logprob: -7.886661529541016
    5. 'if' → logprob: -7.886661529541016
    6. ' return' → logprob: -8.636661529541016
    7. '#' → logprob: -10.511661529541016
    8. '  ' → logprob: -10.886661529541016
    9. '    ' → logprob: -11.136661529541016
    10. ')' → logprob: -11.136661529541016

Token 1210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023989591281861067
    2. 'def' → logprob: -6.87739896774292
    3. 'return' → logprob: -6.87739896774292
    4. 'if' → logprob: -9.627398490905762
    5. '```' → logprob: -9.627398490905762
    6. ')' → logprob: -9.877398490905762
    7. ' return' → logprob: -10.377398490905762
    8. ':return' → logprob: -10.627398490905762
    9. '<|end|>' → logprob: -10.877398490905762
    10. '#' → logprob: -11.002398490905762

Token 1211: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41407352685928345
    2. 'if' (adapté à ' if') → logprob: -1.4140734672546387
    3. 'return' → logprob: -2.4140734672546387
    4. '#' → logprob: -5.789073467254639
    5. 'def' → logprob: -5.789073467254639
    6. ' if' → logprob: -9.414073944091797
    7. '```' → logprob: -9.914073944091797
    8. '
' → logprob: -10.414073944091797
    9. 'distance' → logprob: -10.539073944091797
    10. 't' → logprob: -10.539073944091797

Token 1212: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1640634387731552
    2. 'c' → logprob: -2.1640634536743164
    3. ' d' → logprob: -3.9140634536743164
    4. 'eq' → logprob: -5.039063453674316
    5. ' c' → logprob: -5.664063453674316
    6. 'not' → logprob: -5.914063453674316
    7. ' not' → logprob: -6.914063453674316
    8. 'abs' → logprob: -6.914063453674316
    9. '4' → logprob: -7.039063453674316
    10. ' eq' → logprob: -8.664063453674316

Token 1213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003539132419973612
    2. 'r' → logprob: -6.628539085388184
    3. '.r' → logprob: -6.878539085388184
    4. '2' → logprob: -7.253539085388184
    5. 'eq' → logprob: -8.128539085388184
    6. 'd' → logprob: -9.753539085388184
    7. 'c' → logprob: -10.128539085388184
    8. '#' → logprob: -10.878539085388184
    9. 'abs' → logprob: -11.003539085388184
    10. 'pi' → logprob: -12.503539085388184

Token 1214: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.004809129983186722
    2. 'r' → logprob: -5.3798089027404785
    3. '#' → logprob: -10.004809379577637
    4. '.p' → logprob: -10.129809379577637
    5. '
' → logprob: -10.379809379577637
    6. 'p' → logprob: -11.254809379577637
    7. '1' → logprob: -11.879809379577637
    8. 'class' → logprob: -11.879809379577637
    9. 'def' → logprob: -12.254809379577637
    10. '.' → logprob: -12.254809379577637

Token 1215: ' -' (ID: 533)
  Prédit: '.r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.3322867155075073
    2. 'r' → logprob: -1.4572867155075073
    3. '.p' → logprob: -3.582286834716797
    4. 'p' → logprob: -4.582286834716797
    5. '+' → logprob: -4.957286834716797
    6. ' +' → logprob: -6.082286834716797
    7. '+r' → logprob: -6.832286834716797
    8. '-r' → logprob: -7.832286834716797
    9. ' -' → logprob: -7.957286834716797
    10. '+p' → logprob: -9.207286834716797

Token 1216: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3132821023464203
    2. ' c' → logprob: -1.3132821321487427
    3. ' ' → logprob: -11.938282012939453
    4. '	c' → logprob: -12.813282012939453
    5. '   ' → logprob: -13.188282012939453
    6. '#' → logprob: -13.938282012939453
    7. '  ' → logprob: -14.063282012939453
    8. '[' → logprob: -14.250782012939453
    9. 'def' → logprob: -14.250782012939453
    10. '(c' → logprob: -14.625782012939453

Token 1217: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01120874285697937
    2. '2' → logprob: -4.511208534240723
    3. 'r' → logprob: -9.136208534240723
    4. ' c' → logprob: -9.886208534240723
    5. ' ' → logprob: -14.261208534240723
    6. '.c' → logprob: -14.386208534240723
    7. '	c' → logprob: -14.761208534240723
    8. '   ' → logprob: -15.511208534240723
    9. 'cc' → logprob: -16.01120948791504
    10. '  ' → logprob: -16.01120948791504

Token 1218: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.09208238869905472
    2. 'c' → logprob: -3.3420825004577637
    3. '.r' → logprob: -3.8420825004577637
    4. '2' → logprob: -3.9670825004577637
    5. '.c' → logprob: -4.467082500457764
    6. '	r' → logprob: -8.592082023620605
    7. '   ' → logprob: -8.717082023620605
    8. 'ら' → logprob: -9.467082023620605
    9. ' r' → logprob: -9.842082023620605
    10. '[' → logprob: -10.217082023620605

Token 1219: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.8952783346176147
    2. ' <' → logprob: -1.2702783346176147
    3. '>' → logprob: -1.5202783346176147
    4. '<' → logprob: -2.3952784538269043
    5. '   ' → logprob: -7.270278453826904
    6. 'd' → logprob: -9.645277976989746
    7. ' ' → logprob: -9.770277976989746
    8. ',' → logprob: -10.270277976989746
    9. ':' → logprob: -10.895277976989746
    10. '#' → logprob: -11.145277976989746

Token 1220: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07015182822942734
    2. ' d' → logprob: -2.6951518058776855
    3. '0' → logprob: -8.695152282714844
    4. ' ' → logprob: -10.695152282714844
    5. '   ' → logprob: -11.570152282714844
    6. ' -' → logprob: -13.070152282714844
    7. 'abs' → logprob: -13.195152282714844
    8. '4' → logprob: -13.695152282714844
    9. 'c' → logprob: -13.695152282714844
    10. '-' → logprob: -13.695152282714844

Token 1221: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01433026883751154
    2. '4' → logprob: -5.6393303871154785
    3. ' :' → logprob: -5.6393303871154785
    4. '   ' → logprob: -5.6393303871154785
    5. ':return' → logprob: -6.3893303871154785
    6. ' return' → logprob: -7.6393303871154785
    7. ':
' → logprob: -8.01432991027832
    8. '):' → logprob: -8.38932991027832
    9. ' ' → logprob: -8.76432991027832
    10. 'return' → logprob: -9.38932991027832

Token 1222: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7701317667961121
    2. ' return' → logprob: -1.5201318264007568
    3. 'return' → logprob: -2.020131826400757
    4. '0' → logprob: -2.395131826400757
    5. '2' → logprob: -2.895131826400757
    6. '4' → logprob: -4.270131587982178
    7. '5' → logprob: -4.895131587982178
    8. '3' → logprob: -5.270131587982178
    9. ' ' → logprob: -5.270131587982178
    10. '1' → logprob: -5.645131587982178

Token 1223: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003978992172051221
    2. '0' → logprob: -8.000397682189941
    3. '5' → logprob: -9.750397682189941
    4. ' ' → logprob: -12.625397682189941
    5. '3' → logprob: -14.750397682189941
    6. '   ' → logprob: -15.750397682189941
    7. '6' → logprob: -16.500398635864258
    8. '２' → logprob: -16.750398635864258
    9. '#' → logprob: -16.875398635864258
    10. '4' → logprob: -17.125398635864258

Token 1224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000730781932361424
    2. '0' → logprob: -7.875730991363525
    3. '5' → logprob: -8.000730514526367
    4. '3' → logprob: -11.250730514526367
    5. '4' → logprob: -13.250730514526367
    6. ' ' → logprob: -15.000730514526367
    7. '6' → logprob: -15.000730514526367
    8. '1' → logprob: -17.375730514526367
    9. '#' → logprob: -18.125730514526367
    10. '２' → logprob: -18.125730514526367

Token 1225: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.698579728603363
    2. '   ' → logprob: -0.823579728603363
    3. '#' → logprob: -2.948579788208008
    4. ' return' → logprob: -5.073579788208008
    5. ' ' → logprob: -6.198579788208008
    6. '4' → logprob: -6.573579788208008
    7. '0' → logprob: -7.323579788208008
    8. 'return' → logprob: -8.448579788208008
    9. '1' → logprob: -8.573579788208008
    10. '  ' → logprob: -8.823579788208008

Token 1226: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5008120536804199
    2. '   ' → logprob: -1.87581205368042
    3. 'return' → logprob: -1.87581205368042
    4. '#' → logprob: -2.87581205368042
    5. '4' → logprob: -4.00081205368042
    6. ' return' → logprob: -5.25081205368042
    7. '0' → logprob: -6.37581205368042
    8. '1' → logprob: -6.62581205368042
    9. '
' → logprob: -7.00081205368042
    10. '2' → logprob: -7.37581205368042

Token 1227: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7882188558578491
    2. '0' → logprob: -1.4132188558578491
    3. '4' → logprob: -2.0382189750671387
    4. '1' → logprob: -2.2882189750671387
    5. '3' → logprob: -3.5382189750671387
    6. 'def' → logprob: -3.7882189750671387
    7. 'return' → logprob: -4.538218975067139
    8. '#' → logprob: -5.788218975067139
    9. 'True' → logprob: -5.788218975067139
    10. '5' → logprob: -7.413218975067139

Token 1228: '交' (ID: 10130)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5120726823806763
    2. '   ' → logprob: -1.5120726823806763
    3. 'return' → logprob: -2.5120725631713867
    4. '#' → logprob: -3.1370725631713867
    5. ')' → logprob: -3.8870725631713867
    6. '<|end|>' → logprob: -5.137072563171387
    7. 'points' → logprob: -5.512072563171387
    8. ' return' → logprob: -6.012072563171387
    9. '
' → logprob: -6.262072563171387
    10. ' points' → logprob: -6.637072563171387

Token 1229: '点' (ID: 8300)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36165526509284973
    2. '   ' → logprob: -1.2366552352905273
    3. ')' → logprob: -4.486655235290527
    4. 't' → logprob: -7.736655235290527
    5. 'return' → logprob: -8.486655235290527
    6. ' def' → logprob: -8.611655235290527
    7. '#' → logprob: -8.861655235290527
    8. '  ' → logprob: -8.861655235290527
    9. 'd' → logprob: -9.361655235290527
    10. ' ' → logprob: -9.736655235290527

Token 1230: '持' (ID: 17592)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31596803665161133
    2. '   ' → logprob: -1.3159680366516113
    3. ' def' → logprob: -6.940968036651611
    4. '
' → logprob: -7.190968036651611
    5. '#' → logprob: -8.065967559814453
    6. ')' → logprob: -8.190967559814453
    7. '<|end|>' → logprob: -8.690967559814453
    8. '    
' → logprob: -9.815967559814453
    9. 'd' → logprob: -9.940967559814453
    10. '    ' → logprob: -10.440967559814453

Token 1231: 'つ' (ID: 18290)
  Prédit: 'つ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'つ' → logprob: -0.005941832438111305
    2. 'って' → logprob: -6.005941867828369
    3. 'ち' → logprob: -6.755941867828369
    4. 'た' → logprob: -7.255941867828369
    5. '```' → logprob: -7.505941867828369
    6. 'て' → logprob: -7.630941867828369
    7. '#' → logprob: -8.505941390991211
    8. 'る' → logprob: -8.755941390991211
    9. '�' → logprob: -10.505941390991211
    10. '0' → logprob: -10.630941390991211

Token 1232: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1561681628227234
    2. ')' → logprob: -2.906168222427368
    3. 'def' → logprob: -3.531168222427368
    4. '<|end|>' → logprob: -3.656168222427368
    5. ':' → logprob: -4.156167984008789
    6. '#' → logprob: -5.031167984008789
    7. '    ' → logprob: -5.781167984008789
    8. ' ' → logprob: -6.281167984008789
    9. 'd' → logprob: -6.656167984008789
    10. '  ' → logprob: -6.781167984008789

Token 1233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045682329684495926
    2. 'def' → logprob: -3.420682430267334
    3. '```' → logprob: -4.670682430267334
    4. 'return' → logprob: -6.920682430267334
    5. 'r' → logprob: -7.045682430267334
    6. 'd' → logprob: -8.920681953430176
    7. '#' → logprob: -8.920681953430176
    8. 'R' → logprob: -9.045681953430176
    9. '``' → logprob: -9.170681953430176
    10. 'if' → logprob: -10.045681953430176

Token 1234: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.09425664693117142
    2. '   ' → logprob: -2.969256639480591
    3. 'if' → logprob: -3.344256639480591
    4. ' return' → logprob: -6.09425687789917
    5. '#' → logprob: -7.71925687789917
    6. 'def' → logprob: -7.71925687789917
    7. ' if' → logprob: -9.469256401062012
    8. ' ' → logprob: -10.719256401062012
    9. '	return' → logprob: -10.844256401062012
    10. '0' → logprob: -11.219256401062012

Token 1235: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0110511165112257
    2. '5' → logprob: -4.511051177978516
    3. ' ' → logprob: -13.136051177978516
    4. '4' → logprob: -14.136051177978516
    5. '#' → logprob: -16.136051177978516
    6. 'None' → logprob: -16.136051177978516
    7. '3' → logprob: -16.261051177978516
    8. '-' → logprob: -16.511051177978516
    9. '1' → logprob: -16.761051177978516
    10. '```' → logprob: -17.261051177978516

Token 1236: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008058178937062621
    2. '5' → logprob: -7.125805854797363
    3. '4' → logprob: -13.875805854797363
    4. ' ' → logprob: -15.125805854797363
    5. 'None' → logprob: -16.500804901123047
    6. '```' → logprob: -17.125804901123047
    7. '   ' → logprob: -17.750804901123047
    8. '#' → logprob: -17.875804901123047
    9. '3' → logprob: -18.250804901123047
    10. '-' → logprob: -18.375804901123047

Token 1237: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8840747475624084
    2. 'def' → logprob: -1.0090746879577637
    3. 'd' → logprob: -1.7590746879577637
    4. 'return' → logprob: -3.7590746879577637
    5. 'c' → logprob: -4.884074687957764
    6. 'r' → logprob: -5.384074687957764
    7. 's' → logprob: -5.634074687957764
    8. 'p' → logprob: -6.259074687957764
    9. '```' → logprob: -6.384074687957764
    10. 't' → logprob: -6.884074687957764

Token 1238: ' �' (ID: 37586)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.11406780779361725
    2. 'def' → logprob: -2.614067792892456
    3. '(abs' → logprob: -4.364068031311035
    4. 'None' → logprob: -5.239068031311035
    5. 'return' → logprob: -5.364068031311035
    6. 'max' → logprob: -5.739068031311035
    7. 'c' → logprob: -6.364068031311035
    8. '(' → logprob: -6.614068031311035
    9. ' abs' → logprob: -6.989068031311035
    10. '   ' → logprob: -7.114068031311035

Token 1239: '�' (ID: 95)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11230835318565369
    2. '   ' → logprob: -3.3623082637786865
    3. 'return' → logprob: -3.4873082637786865
    4. 'd' → logprob: -4.112308502197266
    5. 'r' → logprob: -4.487308502197266
    6. '#' → logprob: -5.112308502197266
    7. 'c' → logprob: -5.362308502197266
    8. 's' → logprob: -7.362308502197266
    9. '```' → logprob: -7.987308502197266
    10. 'dist' → logprob: -8.112308502197266

Token 1240: 'れて' (ID: 185887)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04367793723940849
    2. '   ' → logprob: -3.543678045272827
    3. 'return' → logprob: -5.418677806854248
    4. 'd' → logprob: -5.668677806854248
    5. 'c' → logprob: -5.918677806854248
    6. 's' → logprob: -6.293677806854248
    7. '#' → logprob: -7.043677806854248
    8. 'r' → logprob: -9.043678283691406
    9. '
' → logprob: -9.168678283691406
    10. ' def' → logprob: -10.168678283691406

Token 1241: 'る' (ID: 6996)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018636930733919144
    2. 'return' → logprob: -5.268636703491211
    3. 'c' → logprob: -5.393636703491211
    4. 'None' → logprob: -6.018636703491211
    5. 'False' → logprob: -6.268636703491211
    6. '
' → logprob: -6.768636703491211
    7. 's' → logprob: -7.393636703491211
    8. '   ' → logprob: -7.643636703491211
    9. '0' → logprob: -7.768636703491211
    10. '#' → logprob: -7.893636703491211

Token 1242: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3016873598098755
    2. 'd' → logprob: -1.5516873598098755
    3. 'return' → logprob: -3.176687240600586
    4. '   ' → logprob: -5.551687240600586
    5. 't' → logprob: -7.176687240600586
    6. 'r' → logprob: -7.676687240600586
    7. 'h' → logprob: -7.676687240600586
    8. 'dist' → logprob: -7.801687240600586
    9. 'l' → logprob: -8.551687240600586
    10. 'diff' → logprob: -8.926687240600586

Token 1243: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6668283343315125
    2. '   ' → logprob: -1.1668283939361572
    3. 'return' → logprob: -2.6668283939361572
    4. 'd' → logprob: -2.7918283939361572
    5. 'c' → logprob: -3.4168283939361572
    6. '```' → logprob: -5.166828155517578
    7. 's' → logprob: -6.291828155517578
    8. 'r' → logprob: -6.916828155517578
    9. '``' → logprob: -7.291828155517578
    10. 'cp' → logprob: -7.541828155517578

Token 1244: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.10065389424562454
    2. 'def' → logprob: -2.350653886795044
    3. ' distance' → logprob: -8.225653648376465
    4. '
' → logprob: -9.350653648376465
    5. '#' → logprob: -9.725653648376465
    6. ' def' → logprob: -10.725653648376465
    7. 'is' → logprob: -12.100653648376465
    8. 'dist' → logprob: -13.475653648376465
    9. 'abs' → logprob: -14.600653648376465
    10. 'd' → logprob: -14.850653648376465

Token 1245: '_pp' (ID: 77591)
  Prédit: '_lp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lp' → logprob: -0.0077075352892279625
    2. 'def' → logprob: -5.507707595825195
    3. 'lp' → logprob: -5.632707595825195
    4. '(lp' → logprob: -10.757707595825195
    5. '#' → logprob: -11.882707595825195
    6. 'l' → logprob: -13.007707595825195
    7. '(' → logprob: -13.257707595825195
    8. 'distance' → logprob: -13.382707595825195
    9. '```' → logprob: -13.507707595825195
    10. '_l' → logprob: -13.757707595825195

Token 1246: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.31328821182250977
    2. '(a' → logprob: -1.3132882118225098
    3. 'def' → logprob: -11.813287734985352
    4. 'p' → logprob: -12.438287734985352
    5. '(l' → logprob: -12.438287734985352
    6. '(point' → logprob: -12.563287734985352
    7. '(' → logprob: -12.688287734985352
    8. 'a' → logprob: -13.563287734985352
    9. ' (' → logprob: -14.563287734985352
    10. '(A' → logprob: -14.938287734985352

Token 1247: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08292553573846817
    2. 'p' → logprob: -2.70792555809021
    3. '(p' → logprob: -4.957925319671631
    4. ',p' → logprob: -5.332925319671631
    5. 'a' → logprob: -7.832925319671631
    6. '1' → logprob: -8.082925796508789
    7. ' p' → logprob: -8.832925796508789
    8. ')' → logprob: -9.582925796508789
    9. '):' → logprob: -9.957925796508789
    10. '):
' → logprob: -10.457925796508789

Token 1248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013810492237098515
    2. ',p' → logprob: -9.000138282775879
    3. ' ,' → logprob: -11.250138282775879
    4. 'p' → logprob: -13.625138282775879
    5. ' p' → logprob: -15.750138282775879
    6. ',
' → logprob: -16.500137329101562
    7. '):
' → logprob: -16.750137329101562
    8. ' ' → logprob: -17.000137329101562
    9. '<|end|>' → logprob: -17.250137329101562
    10. '<|end|>' → logprob: -17.500137329101562

Token 1249: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.130576806142926e-05
    2. ' p' → logprob: -10.375031471252441
    3. '	p' → logprob: -18.500030517578125
    4. '   ' → logprob: -19.125030517578125
    5. ',' → logprob: -19.625030517578125
    6. '<|end|>' → logprob: -19.625030517578125
    7. ' ' → logprob: -19.875030517578125
    8. '
' → logprob: -19.875030517578125
    9. ')' → logprob: -20.125030517578125
    10. 'Point' → logprob: -20.500030517578125

Token 1250: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.566264295950532e-05
    2. 'p' → logprob: -9.375085830688477
    3. ' p' → logprob: -14.875085830688477
    4. ',' → logprob: -15.500085830688477
    5. '):
' → logprob: -16.375085830688477
    6. 'oint' → logprob: -16.500085830688477
    7. '1' → logprob: -17.375085830688477
    8. ',p' → logprob: -17.625085830688477
    9. '２' → logprob: -18.000085830688477
    10. ')' → logprob: -18.375085830688477

Token 1251: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01286123227328062
    2. ',' → logprob: -4.512861251831055
    3. '(p' → logprob: -7.012861251831055
    4. '):
' → logprob: -7.137861251831055
    5. ')' → logprob: -9.887861251831055
    6. 'p' → logprob: -10.387861251831055
    7. ',p' → logprob: -10.762861251831055
    8. ':' → logprob: -12.762861251831055
    9. '(' → logprob: -12.887861251831055
    10. '):
' → logprob: -12.887861251831055

Token 1252: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12955883145332336
    2. '   ' → logprob: -2.129558801651001
    3. ' return' → logprob: -6.37955904006958
    4. 'abs' → logprob: -7.50455904006958
    5. '(p' → logprob: -8.629558563232422
    6. 'def' → logprob: -9.004558563232422
    7. '(abs' → logprob: -9.879558563232422
    8. '	return' → logprob: -10.754558563232422
    9. ' abs' → logprob: -13.004558563232422
    10. 'p' → logprob: -14.004558563232422

Token 1253: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.005248344969004393
    2. 'return' (adapté à ' return') → logprob: -5.255248546600342
    3. ' abs' → logprob: -11.505248069763184
    4. '(abs' → logprob: -12.755248069763184
    5. ' return' → logprob: -14.630248069763184
    6. '   ' → logprob: -15.005248069763184
    7. 'p' → logprob: -15.380248069763184
    8. 'def' → logprob: -15.380248069763184
    9. '
' → logprob: -16.0052490234375
    10. '_abs' → logprob: -16.5052490234375

Token 1254: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01919245533645153
    2. '(abs' → logprob: -4.019192218780518
    3. '((' → logprob: -7.019192218780518
    4. ' abs' → logprob: -9.144192695617676
    5. '(p' → logprob: -10.144192695617676
    6. 'sqrt' → logprob: -15.269192695617676
    7. '.abs' → logprob: -15.644192695617676
    8. '(Point' → logprob: -15.644192695617676
    9. ' (' → logprob: -15.769192695617676
    10. ' ((' → logprob: -16.01919174194336

Token 1255: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0005530327325686812
    2. 'p' → logprob: -7.500553131103516
    3. '(' → logprob: -17.875553131103516
    4. '	p' → logprob: -18.125553131103516
    5. ' p' → logprob: -18.750553131103516
    6. '(
' → logprob: -18.750553131103516
    7. '((' → logprob: -19.625553131103516
    8. ' (' → logprob: -19.875553131103516
    9. '<p' → logprob: -20.250553131103516
    10. '```' → logprob: -20.875553131103516

Token 1256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022205570712685585
    2. '2' → logprob: -6.502220630645752
    3. 'p' → logprob: -7.252220630645752
    4. ' p' → logprob: -12.252220153808594
    5. '-p' → logprob: -12.877220153808594
    6. 's' → logprob: -14.377220153808594
    7. '(p' → logprob: -14.877220153808594
    8. ' ' → logprob: -15.252220153808594
    9. ')' → logprob: -15.627220153808594
    10. ' -' → logprob: -16.002220153808594

Token 1257: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.28408095240592957
    2. '-' → logprob: -1.784080982208252
    3. ' -' → logprob: -2.534080982208252
    4. 'p' → logprob: -12.284080505371094
    5. '-
' → logprob: -13.534080505371094
    6. '-п' → logprob: -14.284080505371094
    7. '-P' → logprob: -14.534080505371094
    8. ' p' → logprob: -14.784080505371094
    9. ' ' → logprob: -15.784080505371094
    10. ' -
' → logprob: -16.159080505371094

Token 1258: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0430099181830883
    2. 'p' → logprob: -3.1680099964141846
    3. ' p' → logprob: -11.668009757995605
    4. ' ' → logprob: -13.293009757995605
    5. '   ' → logprob: -15.918009757995605
    6. '	p' → logprob: -17.043010711669922
    7. '.p' → logprob: -17.293010711669922
    8. '<p' → logprob: -17.418010711669922
    9. '  ' → logprob: -17.543010711669922
    10. ')' → logprob: -17.543010711669922

Token 1259: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ')
' → logprob: -14.125001907348633
    3. ')p' → logprob: -15.000001907348633
    4. ')#' → logprob: -15.125001907348633
    5. ' )' → logprob: -15.250001907348633
    6. 'def' → logprob: -15.500001907348633
    7. '())' → logprob: -16.375001907348633
    8. ')

' → logprob: -16.875001907348633
    9. ')return' → logprob: -17.000001907348633
    10. '),' → logprob: -17.250001907348633

Token 1260: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.739826181321405e-05
    2. '
' → logprob: -11.00004768371582
    3. '```' → logprob: -11.00004768371582
    4. '#' → logprob: -11.37504768371582
    5. ' def' → logprob: -13.25004768371582
    6. '-def' → logprob: -15.25004768371582
    7. '``' → logprob: -15.37504768371582
    8. ':def' → logprob: -15.50004768371582
    9. '(def' → logprob: -17.50004768371582
    10. '	def' → logprob: -17.87504768371582

Token 1261: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0004046938265673816
    2. 'def' → logprob: -7.8754048347473145
    3. ' distance' → logprob: -11.250404357910156
    4. 'abs' → logprob: -11.875404357910156
    5. 'cross' → logprob: -13.375404357910156
    6. '#' → logprob: -13.750404357910156
    7. 'is' → logprob: -14.125404357910156
    8. '(distance' → logprob: -14.625404357910156
    9. 'dot' → logprob: -16.125404357910156
    10. 'p' → logprob: -16.250404357910156

Token 1262: '_lp' (ID: 174192)
  Prédit: '_lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lp' → logprob: -0.20176608860492706
    2. 'lp' → logprob: -1.7017661333084106
    3. '_ls' → logprob: -9.451766014099121
    4. 'def' → logprob: -9.576766014099121
    5. '```' → logprob: -9.826766014099121
    6. '_ll' → logprob: -10.201766014099121
    7. 'll' → logprob: -10.326766014099121
    8. '_pp' → logprob: -10.951766014099121
    9. 'pp' → logprob: -11.326766014099121
    10. 'l' → logprob: -11.326766014099121

Token 1263: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.875015258789062
    3. '(line' → logprob: -12.625015258789062
    4. 'def' → logprob: -12.750015258789062
    5. 'l' → logprob: -14.625015258789062
    6. '(lp' → logprob: -14.625015258789062
    7. '#' → logprob: -15.000015258789062
    8. '=l' → logprob: -15.250015258789062
    9. '	l' → logprob: -15.500015258789062
    10. '(L' → logprob: -16.250015258789062

Token 1264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027822578325867653
    2. '):
' → logprob: -4.527822494506836
    3. ')' → logprob: -4.902822494506836
    4. '):' → logprob: -5.277822494506836
    5. ',l' → logprob: -6.152822494506836
    6. '(l' → logprob: -7.152822494506836
    7. 'p' → logprob: -8.652822494506836
    8. 'l' → logprob: -8.652822494506836
    9. 'def' → logprob: -8.902822494506836
    10. '(p' → logprob: -9.027822494506836

Token 1265: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.107425062713446e-06
    2. ' p' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.00000762939453
    4. ')' → logprob: -18.25000762939453
    5. '	p' → logprob: -20.50000762939453
    6. 'point' → logprob: -20.87500762939453
    7. ')p' → logprob: -20.87500762939453
    8. 'l' → logprob: -21.50000762939453
    9. '  ' → logprob: -21.50000762939453
    10. ' ' → logprob: -21.87500762939453

Token 1266: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02084338665008545
    2. '):' → logprob: -3.895843505859375
    3. 'def' → logprob: -8.270843505859375
    4. '):
' → logprob: -10.270843505859375
    5. '   ' → logprob: -12.395843505859375
    6. ')' → logprob: -13.145843505859375
    7. ':
' → logprob: -13.520843505859375
    8. '):

' → logprob: -13.770843505859375
    9. ':' → logprob: -14.020843505859375
    10. '(p' → logprob: -15.145843505859375

Token 1267: '   ' (ID: 271)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00011331788846291602
    2. '   ' → logprob: -9.750113487243652
    3. 'return' → logprob: -10.250113487243652
    4. ' abs' → logprob: -10.875113487243652
    5. '(abs' → logprob: -14.750113487243652
    6. 'def' → logprob: -15.750113487243652
    7. 'cross' → logprob: -17.000112533569336
    8. '
' → logprob: -17.750112533569336
    9. '    
' → logprob: -18.750112533569336
    10. ' return' → logprob: -18.875112533569336

Token 1268: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -4.23917081207037e-05
    2. 'return' (adapté à ' return') → logprob: -10.250041961669922
    3. ' abs' → logprob: -12.625041961669922
    4. '(abs' → logprob: -12.875041961669922
    5. 'cross' → logprob: -14.875041961669922
    6. 'def' → logprob: -14.875041961669922
    7. '   ' → logprob: -15.250041961669922
    8. '
' → logprob: -16.750041961669922
    9. '```' → logprob: -17.250041961669922
    10. '    
' → logprob: -19.000041961669922

Token 1269: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.8074162653647363e-05
    2. '(abs' → logprob: -11.500018119812012
    3. ' abs' → logprob: -11.750018119812012
    4. '   ' → logprob: -18.125017166137695
    5. 'fabs' → logprob: -19.625017166137695
    6. '.abs' → logprob: -19.875017166137695
    7. '_abs' → logprob: -20.375017166137695
    8. '
' → logprob: -20.375017166137695
    9. 'Abs' → logprob: -21.000017166137695
    10. 'ABS' → logprob: -21.375017166137695

Token 1270: '(pro' (ID: 7092)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0009277798235416412
    2. '(c' → logprob: -7.000927925109863
    3. ' cross' → logprob: -11.750927925109863
    4. '((' → logprob: -12.500927925109863
    5. 'c' → logprob: -13.500927925109863
    6. 'projection' → logprob: -13.500927925109863
    7. 'abs' → logprob: -14.250927925109863
    8. 'Cross' → logprob: -14.625927925109863
    9. '.cross' → logprob: -15.375927925109863
    10. '(p' → logprob: -16.125926971435547

Token 1271: 'jection' (ID: 11533)
  Prédit: 'jection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jection' → logprob: -6.511406809295295e-06
    2. 'ject' → logprob: -13.375006675720215
    3. 'j' → logprob: -13.500006675720215
    4. '(' → logprob: -13.625006675720215
    5. '``' → logprob: -14.375006675720215
    6. '```' → logprob: -14.500006675720215
    7. 'projection' → logprob: -15.250006675720215
    8. '(l' → logprob: -15.375006675720215
    9. 'JECTION' → logprob: -16.1250057220459
    10. 'jected' → logprob: -16.2500057220459

Token 1272: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -5.200166469876422e-06
    2. ')' → logprob: -12.875004768371582
    3. '(line' → logprob: -14.125004768371582
    4. 'l' → logprob: -14.125004768371582
    5. '(' → logprob: -14.500004768371582
    6. '[l' → logprob: -15.750004768371582
    7. ' l' → logprob: -15.750004768371582
    8. '	l' → logprob: -16.6250057220459
    9. '(
' → logprob: -16.6250057220459
    10. ',l' → logprob: -16.8750057220459

Token 1273: ',p' (ID: 14835)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.23587878048419952
    2. '(p' → logprob: -1.985878825187683
    3. ',' → logprob: -2.8608787059783936
    4. ')' → logprob: -5.110878944396973
    5. 'l' → logprob: -5.110878944396973
    6. 'p' → logprob: -5.985878944396973
    7. ' l' → logprob: -7.610878944396973
    8. ',l' → logprob: -8.985878944396973
    9. '),' → logprob: -9.110878944396973
    10. ' p' → logprob: -9.360878944396973

Token 1274: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006192679982632399
    2. ')-' → logprob: -5.131192684173584
    3. 'p' → logprob: -9.131192207336426
    4. '(p' → logprob: -10.006192207336426
    5. ' )' → logprob: -10.131192207336426
    6. ')p' → logprob: -10.631192207336426
    7. '))' → logprob: -11.256192207336426
    8. 'l' → logprob: -12.006192207336426
    9. ' p' → logprob: -12.131192207336426
    10. '(l' → logprob: -12.506192207336426

Token 1275: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.935296834039036e-06
    2. ' p' → logprob: -12.75000286102295
    3. '	p' → logprob: -20.500003814697266
    4. '<p' → logprob: -21.750003814697266
    5. '   ' → logprob: -23.625003814697266
    6. ')p' → logprob: -23.625003814697266
    7. 'point' → logprob: -25.125003814697266
    8. '
' → logprob: -25.375003814697266
    9. 'п' → logprob: -25.500003814697266
    10. '{' → logprob: -25.500003814697266

Token 1276: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. '())' → logprob: -13.500003814697266
    3. ')
' → logprob: -13.750003814697266
    4. ')#' → logprob: -15.625003814697266
    5. ')return' → logprob: -15.875003814697266
    6. ')p' → logprob: -15.875003814697266
    7. ' )' → logprob: -16.000003814697266
    8. 'def' → logprob: -16.375003814697266
    9. ')

' → logprob: -16.375003814697266
    10. '))' → logprob: -16.625003814697266

Token 1277: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.455048449221067e-05
    2. '   ' → logprob: -9.875054359436035
    3. '```' → logprob: -13.625054359436035
    4. ' def' → logprob: -14.000054359436035
    5. 'return' → logprob: -14.125054359436035
    6. 's' → logprob: -16.75005531311035
    7. '#' → logprob: -16.87505531311035
    8. '
' → logprob: -17.37505531311035
    9. 'd' → logprob: -17.50005531311035
    10. '``' → logprob: -17.75005531311035

Token 1278: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.8312570318812504e-05
    2. 'is' → logprob: -12.000018119812012
    3. ' distance' → logprob: -12.125018119812012
    4. 'def' → logprob: -13.000018119812012
    5. 'length' → logprob: -13.500018119812012
    6. 'cross' → logprob: -14.000018119812012
    7. 'segment' → logprob: -14.875018119812012
    8. 'intersection' → logprob: -15.125018119812012
    9. '#' → logprob: -15.250018119812012
    10. '
' → logprob: -15.750018119812012

Token 1279: '_ll' (ID: 105142)
  Prédit: '_ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ls' → logprob: -0.20420517027378082
    2. '_ss' → logprob: -1.7042051553726196
    3. '_sp' → logprob: -6.45420503616333
    4. '_sl' → logprob: -8.079205513000488
    5. 'ls' → logprob: -8.204205513000488
    6. 'ss' → logprob: -8.329205513000488
    7. '_ps' → logprob: -8.579205513000488
    8. '_ll' → logprob: -9.329205513000488
    9. '_cs' → logprob: -10.454205513000488
    10. '```' → logprob: -10.579205513000488

Token 1280: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. 'def' → logprob: -15.500000953674316
    4. ' (' → logprob: -16.875001907348633
    5. '(ll' → logprob: -17.375001907348633
    6. 'l' → logprob: -18.250001907348633
    7. '(line' → logprob: -18.625001907348633
    8. '(L' → logprob: -18.875001907348633
    9. '(
' → logprob: -19.000001907348633
    10. '	l' → logprob: -19.125001907348633

Token 1281: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49674931168556213
    2. '(l' → logprob: -0.9967492818832397
    3. 'l' → logprob: -4.746749401092529
    4. ',l' → logprob: -4.996749401092529
    5. 'def' → logprob: -5.621749401092529
    6. ')' → logprob: -5.996749401092529
    7. '):
' → logprob: -8.371748924255371
    8. ' l' → logprob: -8.371748924255371
    9. '(' → logprob: -8.871748924255371
    10. '1' → logprob: -9.871748924255371

Token 1282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013035668234806508
    2. ',l' → logprob: -9.000130653381348
    3. ' ,' → logprob: -12.125130653381348
    4. ',
' → logprob: -15.000130653381348
    5. 'l' → logprob: -15.125130653381348
    6. '):
' → logprob: -15.375130653381348
    7. ',ll' → logprob: -15.750130653381348
    8. ' l' → logprob: -16.37512969970703
    9. ',line' → logprob: -16.37512969970703
    10. '(l' → logprob: -16.50012969970703

Token 1283: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -5.5577775128767826e-06
    2. ' l' → logprob: -12.125005722045898
    3. '	l' → logprob: -17.1250057220459
    4. '   ' → logprob: -17.7500057220459
    5. '```' → logprob: -21.2500057220459
    6. 'def' → logprob: -21.8750057220459
    7. ' л' → logprob: -22.0000057220459
    8. '  ' → logprob: -22.3750057220459
    9. ' ' → logprob: -22.3750057220459
    10. '):
' → logprob: -22.7500057220459

Token 1284: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05622320994734764
    2. 'l' → logprob: -3.431223154067993
    3. '1' → logprob: -3.806223154067993
    4. ' l' → logprob: -10.556222915649414
    5. '):
' → logprob: -10.806222915649414
    6. 'def' → logprob: -11.556222915649414
    7. '	l' → logprob: -11.806222915649414
    8. ')' → logprob: -11.931222915649414
    9. '   ' → logprob: -12.181222915649414
    10. ',' → logprob: -12.806222915649414

Token 1285: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3869387209415436
    2. '):' → logprob: -1.1369386911392212
    3. '   ' → logprob: -10.63693904876709
    4. 'def' → logprob: -11.01193904876709
    5. '):
' → logprob: -11.63693904876709
    6. ',' → logprob: -12.38693904876709
    7. '(l' → logprob: -12.38693904876709
    8. ')' → logprob: -12.63693904876709
    9. '):

' → logprob: -12.63693904876709
    10. ' ):' → logprob: -13.63693904876709

Token 1286: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8865489363670349
    2. '   ' → logprob: -1.1365489959716797
    3. 'if' → logprob: -1.7615489959716797
    4. 'def' → logprob: -2.7615489959716797
    5. 'v' → logprob: -4.76154899597168
    6. 'd' → logprob: -4.88654899597168
    7. 'p' → logprob: -5.51154899597168
    8. 'a' → logprob: -5.51154899597168
    9. 'vec' → logprob: -5.51154899597168
    10. 't' → logprob: -6.13654899597168

Token 1287: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17995575070381165
    2. 'if' → logprob: -2.0549557209014893
    3. 'def' → logprob: -3.9299557209014893
    4. 'abs' → logprob: -4.179955959320068
    5. 'cross' → logprob: -7.429955959320068
    6. '   ' → logprob: -7.679955959320068
    7. '0' → logprob: -8.80495548248291
    8. 'p' → logprob: -9.17995548248291
    9. ' return' → logprob: -9.30495548248291
    10. 'd' → logprob: -9.92995548248291

Token 1288: ' ' (ID: 220)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00022475497098639607
    2. '0' → logprob: -8.500225067138672
    3. 'distance' → logprob: -11.875225067138672
    4. 'max' → logprob: -12.250225067138672
    5. ' abs' → logprob: -12.500225067138672
    6. 'min' → logprob: -12.500225067138672
    7. '(abs' → logprob: -13.875225067138672
    8. 'cross' → logprob: -14.000225067138672
    9. '
' → logprob: -16.000225067138672
    10. 'float' → logprob: -16.375225067138672

Token 1289: '0' (ID: 15)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.15524344146251678
    2. '0' → logprob: -2.030243396759033
    3. 'distance' → logprob: -4.405243396759033
    4. 'min' → logprob: -8.655243873596191
    5. ' abs' → logprob: -10.405243873596191
    6. 'max' → logprob: -10.905243873596191
    7. '(abs' → logprob: -11.405243873596191
    8. 'cross' → logprob: -11.530243873596191
    9. 'float' → logprob: -11.780243873596191
    10. '
' → logprob: -12.405243873596191

Token 1290: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03440777584910393
    2. '<|end|>' → logprob: -3.7844078540802
    3. '#' → logprob: -5.034407615661621
    4. '
' → logprob: -5.534407615661621
    5. '<|end|>' → logprob: -8.034407615661621
    6. ' def' → logprob: -9.159407615661621
    7. ')' → logprob: -10.284407615661621
    8. 'if' → logprob: -10.409407615661621
    9. '   ' → logprob: -10.784407615661621
    10. ' ' → logprob: -11.159407615661621

Token 1291: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0002666999935172498
    2. 'eq' → logprob: -8.750267028808594
    3. 'not' → logprob: -10.375267028808594
    4. ' is' → logprob: -10.625267028808594
    5. '(is' → logprob: -10.625267028808594
    6. 'abs' → logprob: -11.000267028808594
    7. 'cross' → logprob: -12.375267028808594
    8. '(' → logprob: -13.000267028808594
    9. 'l' → logprob: -13.375267028808594
    10. '(eq' → logprob: -13.625267028808594

Token 1292: 'Intersect' (ID: 134565)
  Prédit: 'Par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Par' → logprob: -0.0002370329457335174
    2. 'is' → logprob: -9.125237464904785
    3. 'Parallel' → logprob: -9.500237464904785
    4. 'Vertical' → logprob: -10.500237464904785
    5. 'Intersect' → logprob: -11.250237464904785
    6. 'l' → logprob: -12.375237464904785
    7. ' Par' → logprob: -13.375237464904785
    8. 'par' → logprob: -13.625237464904785
    9. '_par' → logprob: -14.000237464904785
    10. 'Inter' → logprob: -14.125237464904785

Token 1293: '_ll' (ID: 105142)
  Prédit: '_ll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ll' → logprob: -0.20908032357692719
    2. 'll' → logprob: -1.7090803384780884
    3. '_lp' → logprob: -4.959080219268799
    4. 'lp' → logprob: -7.584080219268799
    5. 'Par' → logprob: -9.959080696105957
    6. '(ll' → logprob: -10.084080696105957
    7. 'LL' → logprob: -12.709080696105957
    8. '(lp' → logprob: -12.709080696105957
    9. '_par' → logprob: -12.709080696105957
    10. '	ll' → logprob: -12.834080696105957

Token 1294: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.875
    3. ' (' → logprob: -17.375
    4. 'l' → logprob: -18.5
    5. '	l' → logprob: -18.875
    6. '(
' → logprob: -19.0
    7. '```' → logprob: -19.25
    8. '   ' → logprob: -19.375
    9. '[l' → logprob: -19.375
    10. '(line' → logprob: -19.625

Token 1295: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. '(l' → logprob: -12.250014305114746
    3. 'def' → logprob: -12.500014305114746
    4. 'l' → logprob: -13.125014305114746
    5. '2' → logprob: -13.625014305114746
    6. ')' → logprob: -14.125014305114746
    7. ',' → logprob: -14.750014305114746
    8. '   ' → logprob: -14.875014305114746
    9. '#' → logprob: -15.375014305114746
    10. '```' → logprob: -15.500014305114746

Token 1296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005294477101415396
    2. ',l' → logprob: -5.255294322967529
    3. ' ,' → logprob: -9.880294799804688
    4. '(l' → logprob: -11.755294799804688
    5. '   ' → logprob: -14.755294799804688
    6. 'l' → logprob: -14.880294799804688
    7. ',
' → logprob: -15.255294799804688
    8. ',ll' → logprob: -16.005294799804688
    9. ' l' → logprob: -16.130294799804688
    10. '	l' → logprob: -16.630294799804688

Token 1297: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1517960956552997e-05
    2. ' l' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.875011444091797
    4. '	l' → logprob: -15.125011444091797
    5. '  ' → logprob: -16.625011444091797
    6. '       ' → logprob: -17.500011444091797
    7. '    ' → logprob: -17.750011444091797
    8. ' ' → logprob: -18.000011444091797
    9. ')' → logprob: -18.250011444091797
    10. '           ' → logprob: -18.500011444091797

Token 1298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00523837935179472
    2. 'l' → logprob: -5.2552385330200195
    3. '1' → logprob: -12.50523853302002
    4. ' l' → logprob: -14.88023853302002
    5. '   ' → logprob: -15.00523853302002
    6. '(l' → logprob: -16.380237579345703
    7. 'def' → logprob: -16.505237579345703
    8. '	l' → logprob: -17.130237579345703
    9. ' ' → logprob: -17.755237579345703
    10. '_l' → logprob: -18.380237579345703

Token 1299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. 'else' → logprob: -11.875018119812012
    3. 'l' → logprob: -12.375018119812012
    4. '   ' → logprob: -12.625018119812012
    5. ' )' → logprob: -13.500018119812012
    6. '())' → logprob: -14.375018119812012
    7. ')
' → logprob: -14.625018119812012
    8. ' else' → logprob: -14.750018119812012
    9. ')return' → logprob: -15.000018119812012
    10. ' ' → logprob: -16.000019073486328

Token 1300: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2522646486759186
    2. ' else' → logprob: -1.5022646188735962
    3. '   ' → logprob: -8.002264976501465
    4. '	else' → logprob: -15.127264976501465
    5. ' ' → logprob: -16.00226402282715
    6. 'return' → logprob: -16.12726402282715
    7. '    
' → logprob: -16.37726402282715
    8. 'def' → logprob: -16.62726402282715
    9. '_else' → logprob: -17.37726402282715
    10. '       ' → logprob: -18.12726402282715

Token 1301: ' distance' (ID: 9324)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06428904086351395
    2. 'min' → logprob: -2.814289093017578
    3. 'distance' → logprob: -6.439289093017578
    4. '(abs' → logprob: -7.439289093017578
    5. '(min' → logprob: -10.064289093017578
    6. ' abs' → logprob: -10.189289093017578
    7. 'max' → logprob: -10.814289093017578
    8. '   ' → logprob: -11.439289093017578
    9. 'cross' → logprob: -11.689289093017578
    10. 'projection' → logprob: -12.314289093017578

Token 1302: '_lp' (ID: 174192)
  Prédit: '_lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lp' → logprob: -0.1271572858095169
    2. 'lp' → logprob: -2.127157211303711
    3. '_ll' → logprob: -8.877157211303711
    4. '_pp' → logprob: -10.252157211303711
    5. 'll' → logprob: -10.377157211303711
    6. 'pp' → logprob: -11.252157211303711
    7. 'line' → logprob: -12.627157211303711
    8. '_l' → logprob: -13.502157211303711
    9. 'l' → logprob: -13.502157211303711
    10. '(lp' → logprob: -13.877157211303711

Token 1303: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.451116051815916e-05
    2. 'l' → logprob: -10.875024795532227
    3. '(' → logprob: -12.625024795532227
    4. '(line' → logprob: -13.625024795532227
    5. 'def' → logprob: -14.625024795532227
    6. '	l' → logprob: -15.750024795532227
    7. 'll' → logprob: -16.250024795532227
    8. '(lambda' → logprob: -16.875024795532227
    9. ';l' → logprob: -17.125024795532227
    10. 'line' → logprob: -17.250024795532227

Token 1304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006636978592723608
    2. 'l' → logprob: -5.131637096405029
    3. '2' → logprob: -7.256637096405029
    4. '
' → logprob: -14.131636619567871
    5. '(l' → logprob: -14.381636619567871
    6. ' l' → logprob: -14.506636619567871
    7. '```' → logprob: -15.631636619567871
    8. '	l' → logprob: -15.881636619567871
    9. ')' → logprob: -16.006637573242188
    10. '(' → logprob: -16.256637573242188

Token 1305: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.07134824246168137
    2. ',' → logprob: -2.696348190307617
    3. 'l' → logprob: -7.321348190307617
    4. ',l' → logprob: -7.321348190307617
    5. ')' → logprob: -10.571348190307617
    6. ' (' → logprob: -10.821348190307617
    7. ' l' → logprob: -11.196348190307617
    8. '(' → logprob: -11.321348190307617
    9. '(line' → logprob: -12.571348190307617
    10. 's' → logprob: -12.821348190307617

Token 1306: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.981667537620524e-06
    2. ' l' → logprob: -13.875001907348633
    3. 'Line' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '
' → logprob: -16.375001907348633
    6. 'line' → logprob: -17.000001907348633
    7. 'Point' → logprob: -17.375001907348633
    8. '	l' → logprob: -17.625001907348633
    9. 'p' → logprob: -19.250001907348633
    10. '  ' → logprob: -19.375001907348633

Token 1307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.625000953674316
    3. 'a' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.375
    5. 's' → logprob: -16.875
    6. 'l' → logprob: -17.375
    7. '```' → logprob: -17.375
    8. 'p' → logprob: -17.875
    9. ' ' → logprob: -18.0
    10. '
' → logprob: -18.5

Token 1308: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0004973902832716703
    2. '.b' → logprob: -7.750497341156006
    3. 'a' → logprob: -9.625497817993164
    4. '.p' → logprob: -15.125497817993164
    5. '.s' → logprob: -15.375497817993164
    6. '.l' → logprob: -16.250497817993164
    7. ')' → logprob: -16.750497817993164
    8. 'b' → logprob: -17.125497817993164
    9. '#a' → logprob: -17.875497817993164
    10. '(a' → logprob: -18.500497817993164

Token 1309: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2233183042553719e-05
    2. 'def' → logprob: -11.875012397766113
    3. ')
' → logprob: -13.375012397766113
    4. ')*' → logprob: -14.000012397766113
    5. ')#' → logprob: -14.250012397766113
    6. '())' → logprob: -14.375012397766113
    7. ')+' → logprob: -14.875012397766113
    8. '()' → logprob: -15.625012397766113
    9. ')return' → logprob: -15.625012397766113
    10. '   ' → logprob: -15.750012397766113

Token 1310: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05232071131467819
    2. '   ' → logprob: -3.177320718765259
    3. ' def' → logprob: -5.55232048034668
    4. 'd' → logprob: -5.92732048034668
    5. '#' → logprob: -6.92732048034668
    6. ' ' → logprob: -8.42732048034668
    7. '    
' → logprob: -8.55232048034668
    8. '    ' → logprob: -8.67732048034668
    9. '
' → logprob: -8.80232048034668
    10. 'c' → logprob: -8.80232048034668

Token 1311: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -4.656383680412546e-05
    2. 'def' → logprob: -10.125046730041504
    3. ' distance' → logprob: -12.250046730041504
    4. 'is' → logprob: -13.750046730041504
    5. '#' → logprob: -16.000045776367188
    6. '
' → logprob: -16.375045776367188
    7. 'segment' → logprob: -16.500045776367188
    8. 'length' → logprob: -17.000045776367188
    9. '(distance' → logprob: -17.000045776367188
    10. 'istance' → logprob: -17.250045776367188

Token 1312: '_sp' (ID: 18491)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.1007687896490097
    2. '_ls' → logprob: -2.350768804550171
    3. 'sp' → logprob: -7.975768566131592
    4. '(ls' → logprob: -8.97576904296875
    5. 'ss' → logprob: -10.72576904296875
    6. ' ls' → logprob: -10.97576904296875
    7. 'LS' → logprob: -11.35076904296875
    8. 'sl' → logprob: -11.85076904296875
    9. 'll' → logprob: -11.97576904296875
    10. '```' → logprob: -12.10076904296875

Token 1313: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007779825944453478
    2. 's' → logprob: -4.882779598236084
    3. 'def' → logprob: -9.007780075073242
    4. '(p' → logprob: -10.257780075073242
    5. '(lambda' → logprob: -11.757780075073242
    6. 'p' → logprob: -12.382780075073242
    7. ' s' → logprob: -14.007780075073242
    8. '(
' → logprob: -14.257780075073242
    9. '   ' → logprob: -14.257780075073242
    10. '(' → logprob: -15.382780075073242

Token 1314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017094480572268367
    2. ',s' → logprob: -7.001709461212158
    3. 's' → logprob: -7.751709461212158
    4. '(s' → logprob: -8.251708984375
    5. ')' → logprob: -9.751708984375
    6. ' s' → logprob: -10.751708984375
    7. ' ,' → logprob: -12.001708984375
    8. 'def' → logprob: -12.251708984375
    9. ',
' → logprob: -12.626708984375
    10. '(' → logprob: -13.001708984375

Token 1315: ' p' (ID: 275)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25205713510513306
    2. 'p' → logprob: -1.5020570755004883
    3. ' s' → logprob: -9.752057075500488
    4. 'def' → logprob: -10.252057075500488
    5. ' p' → logprob: -10.377057075500488
    6. '(s' → logprob: -14.127057075500488
    7. '(p' → logprob: -14.377057075500488
    8. '   ' → logprob: -14.377057075500488
    9. ')' → logprob: -14.752057075500488
    10. '```' → logprob: -15.127057075500488

Token 1316: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6086947917938232
    2. '):' → logprob: -1.1086947917938232
    3. '(s' → logprob: -2.4836947917938232
    4. 'def' → logprob: -3.4836947917938232
    5. ')' → logprob: -5.108695030212402
    6. '   ' → logprob: -6.233695030212402
    7. 's' → logprob: -6.233695030212402
    8. '(p' → logprob: -7.358695030212402
    9. '(' → logprob: -7.858695030212402
    10. '=' → logprob: -8.608695030212402

Token 1317: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17474396526813507
    2. 'def' → logprob: -1.9247440099716187
    3. '   ' → logprob: -4.299744129180908
    4. ' return' → logprob: -7.549744129180908
    5. 'if' → logprob: -8.42474365234375
    6. 'min' → logprob: -9.92474365234375
    7. '```' → logprob: -10.79974365234375
    8. '	return' → logprob: -11.54974365234375
    9. 'abs' → logprob: -12.54974365234375
    10. 'from' → logprob: -13.04974365234375

Token 1318: ' r' (ID: 428)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0084854364395142
    2. 'if' → logprob: -1.1334854364395142
    3. 'def' → logprob: -1.3834854364395142
    4. 't' → logprob: -3.1334853172302246
    5. 'd' → logprob: -4.758485317230225
    6. 'abs' → logprob: -6.258485317230225
    7. '   ' → logprob: -6.758485317230225
    8. 'v' → logprob: -6.883485317230225
    9. 'vec' → logprob: -6.883485317230225
    10. 'ap' → logprob: -7.008485317230225

Token 1319: ' =' (ID: 314)
  Prédit: 'eturn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eturn' → logprob: -0.00475264573469758
    2. 'et' → logprob: -5.5047526359558105
    3. '=' → logprob: -7.8797526359558105
    4. ' =' → logprob: -9.379753112792969
    5. 'def' → logprob: -9.754753112792969
    6. 'etur' → logprob: -9.879753112792969
    7. '   ' → logprob: -10.504753112792969
    8. 'e' → logprob: -10.629753112792969
    9. 'es' → logprob: -11.504753112792969
    10. 'ef' → logprob: -11.879753112792969

Token 1320: ' projection' (ID: 41244)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.5898306369781494
    2. 'abs' → logprob: -1.4648306369781494
    3. 'min' → logprob: -2.0898306369781494
    4. 'max' → logprob: -3.2148306369781494
    5. '(dot' → logprob: -4.58983039855957
    6. 'cc' → logprob: -4.83983039855957
    7. 'projection' → logprob: -5.21483039855957
    8. 'proj' → logprob: -5.33983039855957
    9. '(s' → logprob: -5.46483039855957
    10. 'cross' → logprob: -5.58983039855957

Token 1321: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007486884482204914
    2. 's' → logprob: -5.632486820220947
    3. '(Line' → logprob: -5.882486820220947
    4. 'def' → logprob: -8.257487297058105
    5. 'Segment' → logprob: -8.507487297058105
    6. 'r' → logprob: -8.507487297058105
    7. 'Line' → logprob: -8.757487297058105
    8. '(S' → logprob: -9.507487297058105
    9. 'return' → logprob: -9.757487297058105
    10. '(' → logprob: -11.007487297058105

Token 1322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02483627013862133
    2. '(p' → logprob: -4.52483606338501
    3. '(s' → logprob: -5.27483606338501
    4. 'def' → logprob: -5.89983606338501
    5. ',p' → logprob: -6.02483606338501
    6. 's' → logprob: -7.02483606338501
    7. ')' → logprob: -7.52483606338501
    8. 'p' → logprob: -7.64983606338501
    9. ',s' → logprob: -8.399836540222168
    10. '.p' → logprob: -8.649836540222168

Token 1323: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2664456789934775e-06
    2. ' p' → logprob: -13.625000953674316
    3. '	p' → logprob: -20.125001907348633
    4. '
' → logprob: -21.375001907348633
    5. '<p' → logprob: -21.375001907348633
    6. '   ' → logprob: -21.750001907348633
    7. ')p' → logprob: -23.250001907348633
    8. 'п' → logprob: -24.625001907348633
    9. '_p' → logprob: -24.750001907348633
    10. '[p' → logprob: -25.125001907348633

Token 1324: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09980713576078415
    2. ')' → logprob: -3.599807024002075
    3. 'p' → logprob: -3.599807024002075
    4. 's' → logprob: -4.724807262420654
    5. '   ' → logprob: -4.849807262420654
    6. 'def' → logprob: -4.974807262420654
    7. 'return' → logprob: -5.224807262420654
    8. '-' → logprob: -5.349807262420654
    9. '-s' → logprob: -6.224807262420654
    10. 'r' → logprob: -7.099807262420654

Token 1325: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25226807594299316
    2. 'if' → logprob: -1.5022680759429932
    3. ' if' → logprob: -8.127267837524414
    4. 'return' → logprob: -10.877267837524414
    5. '	if' → logprob: -11.252267837524414
    6. 'r' → logprob: -12.002267837524414
    7. 'def' → logprob: -12.627267837524414
    8. 'from' → logprob: -14.752267837524414
    9. 'd' → logprob: -15.002267837524414
    10. '#' → logprob: -15.127267837524414

Token 1326: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017074400093406439
    2. 'vec' → logprob: -7.001707553863525
    3. 'return' → logprob: -7.626707553863525
    4. 't' → logprob: -8.626707077026367
    5. '   ' → logprob: -10.501707077026367
    6. 'from' → logprob: -10.751707077026367
    7. 'v' → logprob: -10.876707077026367
    8. 'def' → logprob: -11.001707077026367
    9. 'd' → logprob: -11.251707077026367
    10. 'dir' → logprob: -11.751707077026367

Token 1327: ' is' (ID: 382)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.24976782500743866
    2. 'cc' → logprob: -1.874767780303955
    3. 'dot' → logprob: -2.874767780303955
    4. '(not' → logprob: -5.624767780303955
    5. 'is' → logprob: -6.124767780303955
    6. 'eq' → logprob: -6.374767780303955
    7. '(dot' → logprob: -6.499767780303955
    8. ' not' → logprob: -7.249767780303955
    9. 'abs' → logprob: -7.374767780303955
    10. '(cc' → logprob: -8.124768257141113

Token 1328: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.0019691966008394957
    2. 'Par' → logprob: -6.626969337463379
    3. 'Inside' → logprob: -8.001969337463379
    4. 'Segment' → logprob: -9.251969337463379
    5. 'Intersection' → logprob: -9.251969337463379
    6. 'par' → logprob: -10.626969337463379
    7. 'Interact' → logprob: -11.251969337463379
    8. 'In' → logprob: -11.376969337463379
    9. 'On' → logprob: -11.501969337463379
    10. 'cc' → logprob: -11.626969337463379

Token 1329: '_sp' (ID: 18491)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -1.1538381576538086
    2. 'ss' → logprob: -1.2788381576538086
    3. 's' → logprob: -1.5288381576538086
    4. '_sp' → logprob: -1.9038381576538086
    5. '(s' → logprob: -3.6538381576538086
    6. '_ss' → logprob: -4.653838157653809
    7. 'Segment' → logprob: -6.778838157653809
    8. 'll' → logprob: -7.153838157653809
    9. 'ls' → logprob: -7.528838157653809
    10. '(sp' → logprob: -8.028838157653809

Token 1330: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -3.79811754100956e-05
    2. 'r' → logprob: -10.625038146972656
    3. '(r' → logprob: -12.125038146972656
    4. 's' → logprob: -12.875038146972656
    5. 'return' → logprob: -13.500038146972656
    6. ' (' → logprob: -14.000038146972656
    7. '
' → logprob: -14.250038146972656
    8. '   ' → logprob: -14.750038146972656
    9. '(' → logprob: -15.000038146972656
    10. ')' → logprob: -15.250038146972656

Token 1331: ',' (ID: 11)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.010119748301804066
    2. ',' → logprob: -5.260119915008545
    3. '(s' → logprob: -6.135119915008545
    4. 'r' → logprob: -6.135119915008545
    5. '(p' → logprob: -9.260119438171387
    6. 's' → logprob: -9.510119438171387
    7. ',r' → logprob: -9.635119438171387
    8. '   ' → logprob: -9.885119438171387
    9. ')' → logprob: -9.885119438171387
    10. '(' → logprob: -10.010119438171387

Token 1332: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.56233171664644e-05
    2. 'p' → logprob: -10.375055313110352
    3. 'Point' → logprob: -10.875055313110352
    4. 's' → logprob: -12.500055313110352
    5. '
' → logprob: -13.875055313110352
    6. ' r' → logprob: -14.500055313110352
    7. '   ' → logprob: -15.875055313110352
    8. '
' → logprob: -17.87505531311035
    9. '	r' → logprob: -18.00005531311035
    10. '#' → logprob: -18.25005531311035

Token 1333: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1441953331232071
    2. '):
' → logprob: -2.019195318222046
    3. ')' → logprob: -7.019195556640625
    4. ')==' → logprob: -8.644195556640625
    5. '   ' → logprob: -8.769195556640625
    6. '):
' → logprob: -9.144195556640625
    7. 'return' → logprob: -9.144195556640625
    8. '==' → logprob: -10.769195556640625
    9. '       ' → logprob: -11.144195556640625
    10. '):

' → logprob: -11.769195556640625

Token 1334: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030693797394633293
    2. 'return' → logprob: -3.530693769454956
    3. '   ' → logprob: -7.030694007873535
    4. ' return' → logprob: -9.780694007873535
    5. '	return' → logprob: -13.530694007873535
    6. '           ' → logprob: -15.280694007873535
    7. '
' → logprob: -15.780694007873535
    8. ' ' → logprob: -15.905694007873535
    9. '     ' → logprob: -15.905694007873535
    10. '      ' → logprob: -16.15569305419922

Token 1335: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0003676324849948287
    2. 'distance' → logprob: -8.500367164611816
    3. 'min' → logprob: -8.750367164611816
    4. '   ' → logprob: -12.750367164611816
    5. ' abs' → logprob: -12.875367164611816
    6. '       ' → logprob: -16.750368118286133
    7. '0' → logprob: -16.750368118286133
    8. '(abs' → logprob: -16.875368118286133
    9. '
' → logprob: -17.375368118286133
    10. ' min' → logprob: -17.750368118286133

Token 1336: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.03819652274250984
    2. '(p' → logprob: -3.288196563720703
    3. 'r' → logprob: -9.538196563720703
    4. '(s' → logprob: -9.538196563720703
    5. 'p' → logprob: -11.538196563720703
    6. '(' → logprob: -14.788196563720703
    7. '((' → logprob: -15.288196563720703
    8. '	r' → logprob: -15.788196563720703
    9. 's' → logprob: -16.038196563720703
    10. '(pro' → logprob: -16.038196563720703

Token 1337: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.011194474063813686
    2. '-' → logprob: -4.636194705963135
    3. ' -' → logprob: -6.636194705963135
    4. 'p' → logprob: -9.011194229125977
    5. '   ' → logprob: -13.636194229125977
    6. ' p' → logprob: -13.761194229125977
    7. '	p' → logprob: -14.261194229125977
    8. ' ' → logprob: -15.386194229125977
    9. '	' → logprob: -16.886194229125977
    10. '-п' → logprob: -16.886194229125977

Token 1338: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07542329281568527
    2. ')' → logprob: -3.200423240661621
    3. '   ' → logprob: -3.450423240661621
    4. 's' → logprob: -9.950423240661621
    5. 'return' → logprob: -10.075423240661621
    6. ')
' → logprob: -10.450423240661621
    7. '
' → logprob: -11.200423240661621
    8. 'p' → logprob: -11.825423240661621
    9. 'else' → logprob: -12.075423240661621
    10. '       ' → logprob: -12.450423240661621

Token 1339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00282924622297287
    2. 'return' → logprob: -6.377829074859619
    3. 'if' → logprob: -6.877829074859619
    4. 'else' → logprob: -10.252829551696777
    5. 'p' → logprob: -10.377829551696777
    6. 'a' → logprob: -12.252829551696777
    7. '
' → logprob: -13.002829551696777
    8. '#' → logprob: -13.002829551696777
    9. 'px' → logprob: -13.377829551696777
    10. '       ' → logprob: -13.377829551696777

Token 1340: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07466543465852737
    2. 'if' → logprob: -2.9496655464172363
    3. '   ' → logprob: -4.324665546417236
    4. 'else' → logprob: -5.824665546417236
    5. 'd' → logprob: -5.949665546417236
    6. 'dist' → logprob: -8.324665069580078
    7. 'elif' → logprob: -9.074665069580078
    8. ' return' → logprob: -9.324665069580078
    9. 'x' → logprob: -9.699665069580078
    10. 'dx' → logprob: -10.074665069580078

Token 1341: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -7.822646693966817e-06
    2. '(min' → logprob: -12.875007629394531
    3. ' min' → logprob: -13.250007629394531
    4. '
' → logprob: -13.625007629394531
    5. 'abs' → logprob: -13.750007629394531
    6. '[min' → logprob: -14.375007629394531
    7. '	min' → logprob: -15.000007629394531
    8. '   ' → logprob: -15.250007629394531
    9. 'minimum' → logprob: -18.37500762939453
    10. ',min' → logprob: -18.75000762939453

Token 1342: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -2.045823566731997e-05
    2. '((' → logprob: -11.000020027160645
    3. '(distance' → logprob: -12.625020027160645
    4. '([' → logprob: -15.250020027160645
    5. 'abs' → logprob: -15.750020027160645
    6. '([(' → logprob: -17.00002098083496
    7. '(
' → logprob: -17.25002098083496
    8. '(' → logprob: -18.50002098083496
    9. '(dist' → logprob: -18.87502098083496
    10. ' abs' → logprob: -19.87502098083496

Token 1343: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.019013971090316772
    2. '(p' → logprob: -4.01901388168335
    3. '(r' → logprob: -7.64401388168335
    4. '(abs' → logprob: -7.89401388168335
    5. 's' → logprob: -11.894014358520508
    6. '((' → logprob: -12.394014358520508
    7. 'abs' → logprob: -14.519014358520508
    8. 'p' → logprob: -15.394014358520508
    9. 'r' → logprob: -17.644014358520508
    10. '(a' → logprob: -17.894014358520508

Token 1344: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -1.7835754988482222e-05
    2. 'a' → logprob: -11.125018119812012
    3. '.' → logprob: -13.875018119812012
    4. '.s' → logprob: -14.000018119812012
    5. '#a' → logprob: -15.250018119812012
    6. '.b' → logprob: -15.875018119812012
    7. ').' → logprob: -15.875018119812012
    8. '```' → logprob: -16.000017166137695
    9. ' .' → logprob: -16.125017166137695
    10. '
' → logprob: -16.250017166137695

Token 1345: '-p' (ID: 3161)
  Prédit: '-p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-p' → logprob: -0.0005048964521847665
    2. ' -' → logprob: -7.625504970550537
    3. '-' → logprob: -11.500504493713379
    4. 'p' → logprob: -12.375504493713379
    5. '-r' → logprob: -13.125504493713379
    6. '	p' → logprob: -16.000505447387695
    7. ',' → logprob: -16.375505447387695
    8. ' p' → logprob: -16.500505447387695
    9. '(p' → logprob: -16.625505447387695
    10. ',p' → logprob: -16.625505447387695

Token 1346: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -1.5213274309644476e-05
    2. ',' → logprob: -12.000015258789062
    3. '),
' → logprob: -12.500015258789062
    4. ')' → logprob: -12.750015258789062
    5. ' ),' → logprob: -13.500015258789062
    6. '   ' → logprob: -15.125015258789062
    7. 'r' → logprob: -16.000015258789062
    8. ' ' → logprob: -16.375015258789062
    9. ')、' → logprob: -16.500015258789062
    10. ')，' → logprob: -16.500015258789062

Token 1347: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.00012368128227535635
    2. ' abs' → logprob: -9.000123977661133
    3. '(abs' → logprob: -15.750123977661133
    4. '   ' → logprob: -16.375123977661133
    5. '.abs' → logprob: -18.625123977661133
    6. 's' → logprob: -19.000123977661133
    7. '  ' → logprob: -20.000123977661133
    8. '       ' → logprob: -21.375123977661133
    9. '    ' → logprob: -21.375123977661133
    10. '
' → logprob: -21.750123977661133

Token 1348: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.25194910168647766
    2. 's' → logprob: -1.5019490718841553
    3. ' s' → logprob: -11.501949310302734
    4. 'abs' → logprob: -12.501949310302734
    5. '(abs' → logprob: -12.751949310302734
    6. '(' → logprob: -13.126949310302734
    7. ' (' → logprob: -14.751949310302734
    8. '{s' → logprob: -15.126949310302734
    9. '	s' → logprob: -15.501949310302734
    10. '(
' → logprob: -15.751949310302734

Token 1349: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.023705322295427322
    2. '.s' → logprob: -3.773705244064331
    3. 'b' → logprob: -7.77370548248291
    4. 's' → logprob: -10.39870548248291
    5. '(b' → logprob: -12.39870548248291
    6. '.' → logprob: -13.02370548248291
    7. '	b' → logprob: -14.02370548248291
    8. '-b' → logprob: -14.52370548248291
    9. '
' → logprob: -15.52370548248291
    10. '(s' → logprob: -15.64870548248291

Token 1350: '-p' (ID: 3161)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08414699882268906
    2. ')' → logprob: -2.8341469764709473
    3. '-p' → logprob: -4.584146976470947
    4. 'p' → logprob: -4.834146976470947
    5. ')p' → logprob: -6.084146976470947
    6. '))
' → logprob: -6.834146976470947
    7. '),' → logprob: -8.584147453308105
    8. ')))' → logprob: -9.709147453308105
    9. '))

' → logprob: -10.459147453308105
    10. ')
' → logprob: -10.459147453308105

Token 1351: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.372294698550832e-06
    2. ')
' → logprob: -12.000009536743164
    3. ' )' → logprob: -13.875009536743164
    4. ')p' → logprob: -14.500009536743164
    5. ')}' → logprob: -14.750009536743164
    6. '))' → logprob: -14.875009536743164
    7. '   ' → logprob: -15.125009536743164
    8. '())' → logprob: -15.375009536743164
    9. ')

' → logprob: -15.750009536743164
    10. '}' → logprob: -16.250009536743164

Token 1352: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. '#' → logprob: -18.0
    3. '   ' → logprob: -18.125
    4. ' def' → logprob: -18.375
    5. 'return' → logprob: -18.875
    6. '
' → logprob: -20.5
    7. '```' → logprob: -20.875
    8. 'pass' → logprob: -22.625
    9. '``' → logprob: -23.75
    10. '\' → logprob: -24.0

Token 1353: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.0008446489810012281
    2. 'is' → logprob: -7.125844478607178
    3. 'cross' → logprob: -11.125844955444336
    4. ' distance' → logprob: -12.000844955444336
    5. 'def' → logprob: -12.500844955444336
    6. '#' → logprob: -12.625844955444336
    7. 'intersection' → logprob: -12.625844955444336
    8. 'length' → logprob: -13.500844955444336
    9. 'segment' → logprob: -13.625844955444336
    10. 'cc' → logprob: -14.125844955444336

Token 1354: '_ss' (ID: 61028)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.33370018005371094
    2. 'll' → logprob: -1.833700180053711
    3. '_ls' → logprob: -2.583700180053711
    4. 'ss' → logprob: -3.083700180053711
    5. '_ll' → logprob: -6.208700180053711
    6. '_ss' → logprob: -8.458700180053711
    7. '(ls' → logprob: -8.833700180053711
    8. 'lp' → logprob: -9.208700180053711
    9. 'sl' → logprob: -9.583700180053711
    10. 'l' → logprob: -9.958700180053711

Token 1355: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.0921942703134846e-05
    2. 'def' → logprob: -11.50001049041748
    3. 's' → logprob: -14.12501049041748
    4. '(
' → logprob: -18.875011444091797
    5. '```' → logprob: -19.125011444091797
    6. '(' → logprob: -19.250011444091797
    7. ' def' → logprob: -19.750011444091797
    8. '(a' → logprob: -19.750011444091797
    9. '(sa' → logprob: -20.375011444091797
    10. ' (' → logprob: -20.750011444091797

Token 1356: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18376459181308746
    2. '(s' → logprob: -2.058764696121216
    3. 's' → logprob: -3.308764696121216
    4. ' s' → logprob: -6.683764457702637
    5. 'def' → logprob: -6.808764457702637
    6. ',s' → logprob: -7.183764457702637
    7. '1' → logprob: -7.808764457702637
    8. ' ,' → logprob: -9.558764457702637
    9. ')' → logprob: -10.558764457702637
    10. 't' → logprob: -11.433764457702637

Token 1357: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011802274966612458
    2. ',s' → logprob: -6.876180171966553
    3. ' ,' → logprob: -9.876180648803711
    4. 's' → logprob: -10.126180648803711
    5. '(s' → logprob: -10.376180648803711
    6. ' s' → logprob: -10.626180648803711
    7. ',
' → logprob: -15.376180648803711
    8. 'def' → logprob: -16.12618064880371
    9. '<|end|>' → logprob: -17.00118064880371
    10. '```' → logprob: -17.37618064880371

Token 1358: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005238140933215618
    2. ' s' → logprob: -5.255238056182861
    3. 'def' → logprob: -12.50523853302002
    4. ' def' → logprob: -14.88023853302002
    5. '(s' → logprob: -15.00523853302002
    6. '   ' → logprob: -18.005237579345703
    7. ' ' → logprob: -18.380237579345703
    8. ',' → logprob: -18.880237579345703
    9. '	s' → logprob: -19.630237579345703
    10. ')' → logprob: -19.880237579345703

Token 1359: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12747615575790405
    2. 's' → logprob: -2.127476215362549
    3. '1' → logprob: -8.00247573852539
    4. 'def' → logprob: -8.87747573852539
    5. '(s' → logprob: -10.50247573852539
    6. ' ' → logprob: -11.25247573852539
    7. ' s' → logprob: -11.25247573852539
    8. '   ' → logprob: -11.75247573852539
    9. '```' → logprob: -12.00247573852539
    10. ',' → logprob: -13.62747573852539

Token 1360: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13264435529708862
    2. '(s' → logprob: -2.1326444149017334
    3. '):' → logprob: -5.757644176483154
    4. 'def' → logprob: -6.507644176483154
    5. 's' → logprob: -7.382644176483154
    6. '):

' → logprob: -8.757644653320312
    7. ')' → logprob: -9.007644653320312
    8. '):
' → logprob: -9.632644653320312
    9. '   ' → logprob: -9.757644653320312
    10. ')
' → logprob: -11.257644653320312

Token 1361: '   ' (ID: 271)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.40063804388046265
    2. '   ' → logprob: -2.0256381034851074
    3. 'def' → logprob: -2.5256381034851074
    4. 'return' → logprob: -2.9006381034851074
    5. 'min' → logprob: -3.5256381034851074
    6. 'a' → logprob: -4.400638103485107
    7. 'if' → logprob: -4.775638103485107
    8. 'd' → logprob: -5.275638103485107
    9. 'max' → logprob: -5.650638103485107
    10. 'p' → logprob: -6.150638103485107

Token 1362: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4486057460308075
    2. 'min' → logprob: -1.5736057758331299
    3. 'res' → logprob: -2.19860577583313
    4. 'd' → logprob: -3.44860577583313
    5. 'r' → logprob: -5.573605537414551
    6. 'dist' → logprob: -5.698605537414551
    7. 'if' (adapté à ' if') → logprob: -6.698605537414551
    8. 'ans' → logprob: -6.948605537414551
    9. 'def' → logprob: -7.448605537414551
    10. 'ret' → logprob: -7.573605537414551

Token 1363: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -5.800739018013701e-05
    2. 'distance' → logprob: -10.6250581741333
    3. 'cc' → logprob: -10.8750581741333
    4. ' is' → logprob: -11.8750581741333
    5. 's' → logprob: -12.6250581741333
    6. 'not' → logprob: -13.0000581741333
    7. '(is' → logprob: -13.5000581741333
    8. 'inter' → logprob: -15.3750581741333
    9. 'cross' → logprob: -16.375057220458984
    10. 'len' → logprob: -16.375057220458984

Token 1364: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.00016551809676457196
    2. 'Interact' → logprob: -9.375165939331055
    3. 'is' → logprob: -10.500165939331055
    4. 'ss' → logprob: -10.625165939331055
    5. 's' → logprob: -12.125165939331055
    6. 'Segment' → logprob: -12.250165939331055
    7. 'Intersection' → logprob: -12.375165939331055
    8. 'inter' → logprob: -12.500165939331055
    9. 'cc' → logprob: -13.875165939331055
    10. 'Overlap' → logprob: -14.375165939331055

Token 1365: '_ss' (ID: 61028)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.0005031120381318033
    2. '_ss' → logprob: -8.375503540039062
    3. 's' → logprob: -8.500503540039062
    4. '(s' → logprob: -10.500503540039062
    5. 'sp' → logprob: -10.625503540039062
    6. '(ss' → logprob: -11.250503540039062
    7. ' ss' → logprob: -13.000503540039062
    8. 'sss' → logprob: -13.875503540039062
    9. 'Ss' → logprob: -15.000503540039062
    10. 'SS' → logprob: -15.500503540039062

Token 1366: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.2200749754119897e-06
    2. 's' → logprob: -13.500001907348633
    3. '(' → logprob: -14.875001907348633
    4. ' (' → logprob: -15.750001907348633
    5. '```' → logprob: -16.000001907348633
    6. 'def' → logprob: -16.250001907348633
    7. '(
' → logprob: -17.375001907348633
    8. '#' → logprob: -17.875001907348633
    9. '
' → logprob: -18.625001907348633
    10. '[s' → logprob: -18.625001907348633

Token 1367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006090069655328989
    2. '(s' → logprob: -5.13109016418457
    3. 's' → logprob: -8.75609016418457
    4. '(' → logprob: -13.63109016418457
    5. ' s' → logprob: -14.13109016418457
    6. '   ' → logprob: -14.75609016418457
    7. '2' → logprob: -14.75609016418457
    8. 'def' → logprob: -14.88109016418457
    9. '#' → logprob: -15.13109016418457
    10. ',' → logprob: -15.25609016418457

Token 1368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016838706796988845
    2. 's' → logprob: -7.251683712005615
    3. ',s' → logprob: -7.501683712005615
    4. '(s' → logprob: -7.876683712005615
    5. ' ,' → logprob: -10.501684188842773
    6. ' s' → logprob: -12.001684188842773
    7. 'def' → logprob: -12.626684188842773
    8. '   ' → logprob: -14.126684188842773
    9. ',
' → logprob: -14.126684188842773
    10. '```' → logprob: -14.626684188842773

Token 1369: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.2961512513575144e-05
    2. ' s' → logprob: -10.750022888183594
    3. '   ' → logprob: -13.500022888183594
    4. '(s' → logprob: -17.125022888183594
    5. ')' → logprob: -17.750022888183594
    6. '       ' → logprob: -18.250022888183594
    7. '  ' → logprob: -18.500022888183594
    8. ',' → logprob: -18.625022888183594
    9. ' ' → logprob: -18.750022888183594
    10. '
' → logprob: -18.875022888183594

Token 1370: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04431869089603424
    2. '2' → logprob: -3.169318675994873
    3. ',' → logprob: -7.294318675994873
    4. 's' → logprob: -7.669318675994873
    5. ')' → logprob: -10.044319152832031
    6. 'def' → logprob: -10.044319152832031
    7. '   ' → logprob: -10.919319152832031
    8. '```' → logprob: -11.544319152832031
    9. '),' → logprob: -11.669319152832031
    10. '_,' → logprob: -12.481819152832031

Token 1371: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6391699314117432
    2. '):
' → logprob: -1.5141699314117432
    3. '(s' → logprob: -1.5141699314117432
    4. 's' → logprob: -4.514169692993164
    5. '   ' → logprob: -4.764169692993164
    6. 'return' → logprob: -5.264169692993164
    7. '       ' → logprob: -5.389169692993164
    8. ',' → logprob: -6.514169692993164
    9. ' return' → logprob: -7.639169692993164
    10. ' s' → logprob: -8.014169692993164

Token 1372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5774096250534058
    2. '   ' → logprob: -0.8274096250534058
    3. '       ' → logprob: -6.952409744262695
    4. ' return' → logprob: -7.702409744262695
    5. '	return' → logprob: -10.577409744262695
    6. '0' → logprob: -11.452409744262695
    7. '
' → logprob: -11.452409744262695
    8. '           ' → logprob: -11.827409744262695
    9. ':return' → logprob: -12.577409744262695
    10. '               ' → logprob: -13.952409744262695

Token 1373: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.00000286102295
    4. '  ' → logprob: -20.375001907348633
    5. '    ' → logprob: -21.000001907348633
    6. '     ' → logprob: -21.875001907348633
    7. '1' → logprob: -22.000001907348633
    8. '           ' → logprob: -22.125001907348633
    9. '`' → logprob: -22.250001907348633
    10. '(' → logprob: -22.250001907348633

Token 1374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -16.250001907348633
    4. '1' → logprob: -20.375001907348633
    5. '    ' → logprob: -21.125001907348633
    6. 'float' → logprob: -21.375001907348633
    7. '000' → logprob: -21.625001907348633
    8. '  ' → logprob: -21.625001907348633
    9. 'd' → logprob: -21.812501907348633
    10. '     ' → logprob: -21.875001907348633

Token 1375: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032282178290188313
    2. '
' → logprob: -6.003228187561035
    3. '    
' → logprob: -7.378228187561035
    4. 'r' → logprob: -10.253228187561035
    5. 's' → logprob: -10.253228187561035
    6. 'return' → logprob: -11.378228187561035
    7. '
' → logprob: -11.753228187561035
    8. 'd' → logprob: -11.878228187561035
    9. 'a' → logprob: -12.003228187561035
    10. 'if' → logprob: -12.253228187561035

Token 1376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001398929744027555
    2. '
' → logprob: -9.125140190124512
    3. '    
' → logprob: -10.500140190124512
    4. 'r' → logprob: -13.000140190124512
    5. 's' → logprob: -15.250140190124512
    6. '
' → logprob: -15.250140190124512
    7. 'def' → logprob: -15.625140190124512
    8. 'return' → logprob: -16.000139236450195
    9. 'd' → logprob: -16.875139236450195
    10. 'a' → logprob: -16.875139236450195

Token 1377: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02355373650789261
    2. 'd' → logprob: -4.148553848266602
    3. 'r' → logprob: -6.023553848266602
    4. 'res' → logprob: -6.023553848266602
    5. 'a' → logprob: -7.023553848266602
    6. '   ' → logprob: -7.273553848266602
    7. 'c' → logprob: -8.023553848266602
    8. 'ans' → logprob: -8.273553848266602
    9. 'ret' → logprob: -8.773553848266602
    10. 'dist' → logprob: -8.898553848266602

Token 1378: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.91732100979425e-05
    2. ' min' → logprob: -10.250039100646973
    3. '	min' → logprob: -13.000039100646973
    4. '   ' → logprob: -13.500039100646973
    5. 'max' → logprob: -17.25004005432129
    6. 'minimum' → logprob: -17.87504005432129
    7. '(min' → logprob: -18.87504005432129
    8. '  ' → logprob: -20.25004005432129
    9. ' ' → logprob: -20.25004005432129
    10. '
' → logprob: -21.37504005432129

Token 1379: '([' (ID: 5194)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.0011481947731226683
    2. '(
' → logprob: -7.501148223876953
    3. '(' → logprob: -7.876148223876953
    4. '(min' → logprob: -9.376148223876953
    5. 'distance' → logprob: -9.376148223876953
    6. '([' → logprob: -10.501148223876953
    7. '([
' → logprob: -11.001148223876953
    8. '((' → logprob: -14.876148223876953
    9. '(
' → logprob: -15.001148223876953
    10. '(max' → logprob: -15.251148223876953

Token 1380: 'distance' (ID: 40614)
  Prédit: 'distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -3.531315314830863e-06
    2. ' distance' → logprob: -13.000003814697266
    3. '
' → logprob: -14.125003814697266
    4. '   ' → logprob: -14.500003814697266
    5. '(distance' → logprob: -17.375003814697266
    6. ' ' → logprob: -17.625003814697266
    7. '    
' → logprob: -19.375003814697266
    8. '[
' → logprob: -19.500003814697266
    9. '
' → logprob: -20.375003814697266
    10. '  ' → logprob: -20.500003814697266

Token 1381: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.003221445018425584
    2. 'sp' → logprob: -5.75322151184082
    3. '_ss' → logprob: -10.12822151184082
    4. 'ss' → logprob: -13.25322151184082
    5. '(sp' → logprob: -13.50322151184082
    6. 's' → logprob: -15.50322151184082
    7. 'ssp' → logprob: -16.37822151184082
    8. '_lp' → logprob: -16.62822151184082
    9. '	sp' → logprob: -16.75322151184082
    10. 'Sp' → logprob: -17.12822151184082

Token 1382: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.125
    3. ' (' → logprob: -15.75
    4. '(' → logprob: -18.25
    5. '](' → logprob: -18.75
    6. '   ' → logprob: -18.875
    7. '```' → logprob: -18.875
    8. '
' → logprob: -19.625
    9. '(
' → logprob: -20.25
    10. ' ' → logprob: -20.875

Token 1383: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02677730657160282
    2. '(s' → logprob: -3.7767772674560547
    3. 's' → logprob: -5.651777267456055
    4. ' s' → logprob: -11.901777267456055
    5. '(' → logprob: -12.776777267456055
    6. 'r' → logprob: -13.901777267456055
    7. ')' → logprob: -14.276777267456055
    8. '   ' → logprob: -14.276777267456055
    9. 'def' → logprob: -14.776777267456055
    10. ',' → logprob: -14.776777267456055

Token 1384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014684381894767284
    2. '(s' → logprob: -4.514684200286865
    3. ',s' → logprob: -5.889684200286865
    4. 's' → logprob: -7.139684200286865
    5. ' ,' → logprob: -9.639684677124023
    6. '(' → logprob: -13.389684677124023
    7. '   ' → logprob: -14.139684677124023
    8. ' s' → logprob: -14.889684677124023
    9. ' (' → logprob: -15.014684677124023
    10. '#' → logprob: -15.514684677124023

Token 1385: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5213274309644476e-05
    2. ' s' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.125015258789062
    4. '
' → logprob: -16.000015258789062
    5. ' ' → logprob: -18.375015258789062
    6. '`s' → logprob: -18.625015258789062
    7. '       ' → logprob: -18.750015258789062
    8. '  ' → logprob: -18.875015258789062
    9. '```' → logprob: -19.125015258789062
    10. '{s' → logprob: -19.375015258789062

Token 1386: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.572941179503687e-05
    2. '1' → logprob: -10.000045776367188
    3. '.s' → logprob: -15.500045776367188
    4. 's' → logprob: -19.250045776367188
    5. '
' → logprob: -19.500045776367188
    6. '(s' → logprob: -20.000045776367188
    7. '２' → logprob: -20.000045776367188
    8. ' ' → logprob: -20.000045776367188
    9. '.' → logprob: -20.875045776367188
    10. '```' → logprob: -21.250045776367188

Token 1387: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.006803472060710192
    2. '.s' → logprob: -5.006803512573242
    3. 'a' → logprob: -9.756803512573242
    4. '.' → logprob: -11.256803512573242
    5. 's' → logprob: -11.381803512573242
    6. '1' → logprob: -12.756803512573242
    7. '.b' → logprob: -13.631803512573242
    8. ' .' → logprob: -13.756803512573242
    9. '.i' → logprob: -15.131803512573242
    10. ').' → logprob: -15.756803512573242

Token 1388: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00031627772841602564
    2. '),
' → logprob: -8.500316619873047
    3. '(s' → logprob: -9.500316619873047
    4. '   ' → logprob: -10.500316619873047
    5. ' ),' → logprob: -12.875316619873047
    6. ' ' → logprob: -13.125316619873047
    7. ')' → logprob: -13.375316619873047
    8. '()),' → logprob: -13.875316619873047
    9. 's' → logprob: -14.000316619873047
    10. '),
' → logprob: -14.125316619873047

Token 1389: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -3.054500666621607e-06
    2. ' distance' → logprob: -12.75000286102295
    3. '   ' → logprob: -16.000003814697266
    4. '       ' → logprob: -17.625003814697266
    5. '           ' → logprob: -18.750003814697266
    6. '         ' → logprob: -19.000003814697266
    7. '          ' → logprob: -19.250003814697266
    8. '     ' → logprob: -19.625003814697266
    9. '      ' → logprob: -19.875003814697266
    10. '
' → logprob: -19.875003814697266

Token 1390: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.2025483250617981
    2. 'sp' → logprob: -1.7025482654571533
    3. 's' → logprob: -6.827548503875732
    4. 'ss' → logprob: -10.452548027038574
    5. '(s' → logprob: -12.077548027038574
    6. 'Sp' → logprob: -12.202548027038574
    7. '_s' → logprob: -12.327548027038574
    8. '_ss' → logprob: -12.327548027038574
    9. '(sp' → logprob: -14.202548027038574
    10. '	sp' → logprob: -14.327548027038574

Token 1391: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.896309739408025e-07
    2. 's' → logprob: -14.125000953674316
    3. '(' → logprob: -17.375
    4. '   ' → logprob: -18.0
    5. ' (' → logprob: -18.0
    6. '(
' → logprob: -19.375
    7. 'def' → logprob: -21.5
    8. '[s' → logprob: -21.625
    9. '#' → logprob: -22.0
    10. '(S' → logprob: -22.25

Token 1392: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1980576515197754
    2. '1' → logprob: -2.1980576515197754
    3. 's' → logprob: -2.6980576515197754
    4. '(s' → logprob: -6.698057651519775
    5. ' s' → logprob: -9.573057174682617
    6. '   ' → logprob: -12.448057174682617
    7. '(' → logprob: -12.823057174682617
    8. ' ' → logprob: -12.948057174682617
    9. 'def' → logprob: -13.698057174682617
    10. '```' → logprob: -13.698057174682617

Token 1393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012142390012741089
    2. 's' → logprob: -5.012142181396484
    3. '.s' → logprob: -5.512142181396484
    4. ',s' → logprob: -6.887142181396484
    5. ' s' → logprob: -9.012142181396484
    6. '   ' → logprob: -9.512142181396484
    7. '(s' → logprob: -9.637142181396484
    8. ' ,' → logprob: -9.762142181396484
    9. '),' → logprob: -12.012142181396484
    10. '[' → logprob: -12.137142181396484

Token 1394: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0026221470907330513
    2. ' s' → logprob: -6.002622127532959
    3. '   ' → logprob: -8.877622604370117
    4. ' ' → logprob: -13.127622604370117
    5. '  ' → logprob: -13.752622604370117
    6. '       ' → logprob: -14.002622604370117
    7. '	s' → logprob: -14.127622604370117
    8. '    ' → logprob: -14.502622604370117
    9. '`s' → logprob: -14.502622604370117
    10. '(s' → logprob: -15.127622604370117

Token 1395: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02326364815235138
    2. '1' → logprob: -3.773263692855835
    3. 'b' → logprob: -11.523263931274414
    4. '.b' → logprob: -11.773263931274414
    5. '
' → logprob: -15.148263931274414
    6. '.s' → logprob: -16.835763931274414
    7. ' ' → logprob: -16.960763931274414
    8. '	b' → logprob: -17.273263931274414
    9. '```' → logprob: -17.398263931274414
    10. '２' → logprob: -17.773263931274414

Token 1396: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.06236513704061508
    2. '.s' → logprob: -3.5623650550842285
    3. 'b' → logprob: -3.6873650550842285
    4. '.a' → logprob: -5.6873650550842285
    5. 'a' → logprob: -6.6873650550842285
    6. ',' → logprob: -6.9373650550842285
    7. '1' → logprob: -7.6873650550842285
    8. 's' → logprob: -7.8123650550842285
    9. '   ' → logprob: -8.562365531921387
    10. ',b' → logprob: -8.687365531921387

Token 1397: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.008438336662948132
    2. ')])' → logprob: -5.1334381103515625
    3. ')]' → logprob: -7.1334381103515625
    4. 's' → logprob: -7.5084381103515625
    5. '(s' → logprob: -7.5084381103515625
    6. ',' → logprob: -8.508438110351562
    7. ')' → logprob: -8.508438110351562
    8. ' s' → logprob: -10.133438110351562
    9. ')])
' → logprob: -10.258438110351562
    10. '),
' → logprob: -10.258438110351562

Token 1398: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.2531253695487976
    2. ' distance' → logprob: -1.5031254291534424
    3. '   ' → logprob: -6.753125190734863
    4. '       ' → logprob: -11.628125190734863
    5. '    ' → logprob: -11.628125190734863
    6. ' ' → logprob: -12.753125190734863
    7. '  ' → logprob: -13.003125190734863
    8. '      ' → logprob: -13.753125190734863
    9. '           ' → logprob: -13.753125190734863
    10. '(distance' → logprob: -14.003125190734863

Token 1399: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -2.935296834039036e-06
    2. '_ss' → logprob: -13.00000286102295
    3. 'sp' → logprob: -14.75000286102295
    4. '(sp' → logprob: -15.25000286102295
    5. 'Sp' → logprob: -18.500003814697266
    6. '_ps' → logprob: -19.000003814697266
    7. '	sp' → logprob: -19.125003814697266
    8. '_s' → logprob: -19.750003814697266
    9. '.sp' → logprob: -21.500003814697266
    10. '_ts' → logprob: -21.500003814697266

Token 1400: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.320199877838604e-07
    2. 's' → logprob: -15.75
    3. '(' → logprob: -16.25
    4. ' (' → logprob: -16.375
    5. '(
' → logprob: -19.875
    6. '#' → logprob: -20.375
    7. 'def' → logprob: -20.75
    8. '```' → logprob: -21.0
    9. '(S' → logprob: -21.75
    10. '   ' → logprob: -22.0

Token 1401: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00407923199236393
    2. '2' → logprob: -5.504079341888428
    3. '(s' → logprob: -14.50407886505127
    4. 's' → logprob: -15.12907886505127
    5. '(' → logprob: -17.004079818725586
    6. ' s' → logprob: -18.504079818725586
    7. '```' → logprob: -19.816579818725586
    8. '１' → logprob: -19.941579818725586
    9. ')' → logprob: -20.629079818725586
    10. '
' → logprob: -20.691579818725586

Token 1402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.081020787358284
    2. '(s' → logprob: -2.5810208320617676
    3. ',s' → logprob: -6.706020832061768
    4. 's' → logprob: -7.206020832061768
    5. '(' → logprob: -8.83102035522461
    6. ' ,' → logprob: -12.45602035522461
    7. ')' → logprob: -12.58102035522461
    8. ' s' → logprob: -12.95602035522461
    9. '#' → logprob: -13.58102035522461
    10. '```' → logprob: -13.58102035522461

Token 1403: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.5491004129871726e-05
    2. ' s' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.000045776367188
    4. ' ' → logprob: -21.125045776367188
    5. '  ' → logprob: -21.625045776367188
    6. '1' → logprob: -21.625045776367188
    7. '`s' → logprob: -21.625045776367188
    8. '	s' → logprob: -22.875045776367188
    9. '{s' → logprob: -22.875045776367188
    10. '       ' → logprob: -23.000045776367188

Token 1404: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. 's' → logprob: -14.375000953674316
    3. '2' → logprob: -15.875000953674316
    4. '
' → logprob: -16.187501907348633
    5. '１' → logprob: -16.437501907348633
    6. '.s' → logprob: -16.687501907348633
    7. 'a' → logprob: -17.187501907348633
    8. '```' → logprob: -17.875001907348633
    9. ')' → logprob: -18.062501907348633
    10. 'l' → logprob: -18.250001907348633

Token 1405: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -1.27099974633893e-05
    2. '.s' → logprob: -12.250012397766113
    3. 'a' → logprob: -12.875012397766113
    4. ')' → logprob: -13.250012397766113
    5. '.b' → logprob: -13.375012397766113
    6. '),' → logprob: -13.750012397766113
    7. ')]' → logprob: -14.625012397766113
    8. ')])' → logprob: -15.625012397766113
    9. '   ' → logprob: -16.37501335144043
    10. ' .' → logprob: -16.62501335144043

Token 1406: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04354749992489815
    2. ')])' → logprob: -3.1685473918914795
    3. ')]' → logprob: -8.543547630310059
    4. ',' → logprob: -8.668547630310059
    5. ')' → logprob: -9.668547630310059
    6. ')])
' → logprob: -10.043547630310059
    7. ')])

' → logprob: -10.418547630310059
    8. '),
' → logprob: -11.543547630310059
    9. '()),' → logprob: -11.668547630310059
    10. ' ),' → logprob: -11.918547630310059

Token 1407: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.02367085963487625
    2. ' distance' → logprob: -3.7736709117889404
    3. '   ' → logprob: -7.773670673370361
    4. '       ' → logprob: -13.14867115020752
    5. '    ' → logprob: -13.52367115020752
    6. ' ' → logprob: -14.27367115020752
    7. '  ' → logprob: -14.89867115020752
    8. 's' → logprob: -16.148670196533203
    9. '     ' → logprob: -16.648670196533203
    10. '      ' → logprob: -16.773670196533203

Token 1408: '_sp' (ID: 18491)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0013427316443994641
    2. '(s' → logprob: -7.3763427734375
    3. ' s' → logprob: -7.6263427734375
    4. '   ' → logprob: -9.3763427734375
    5. 'sp' → logprob: -9.7513427734375
    6. '1' → logprob: -10.1263427734375
    7. '_sp' → logprob: -10.5013427734375
    8. '_s' → logprob: -11.5013427734375
    9. '.s' → logprob: -13.0013427734375
    10. '
' → logprob: -13.7513427734375

Token 1409: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014171971939504147
    2. 's' → logprob: -4.264172077178955
    3. '(' → logprob: -12.014171600341797
    4. ' s' → logprob: -13.889171600341797
    5. ' (' → logprob: -14.139171600341797
    6. '(
' → logprob: -15.389171600341797
    7. '   ' → logprob: -15.889171600341797
    8. '1' → logprob: -16.014171600341797
    9. ')' → logprob: -16.389171600341797
    10. '```' → logprob: -16.889171600341797

Token 1410: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048698872327804565
    2. '2' → logprob: -3.048698902130127
    3. 's' → logprob: -9.173698425292969
    4. '.s' → logprob: -12.548698425292969
    5. '(s' → logprob: -13.298698425292969
    6. ' s' → logprob: -14.048698425292969
    7. ' ' → logprob: -14.173698425292969
    8. '
' → logprob: -15.548698425292969
    9. '(' → logprob: -15.798698425292969
    10. '#' → logprob: -16.04869842529297

Token 1411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00561778899282217
    2. '.s' → logprob: -5.505617618560791
    3. '.b' → logprob: -7.505617618560791
    4. ',s' → logprob: -8.50561809539795
    5. ',b' → logprob: -9.00561809539795
    6. ')]' → logprob: -9.00561809539795
    7. '),' → logprob: -9.00561809539795
    8. '.a' → logprob: -9.13061809539795
    9. 's' → logprob: -9.50561809539795
    10. 'a' → logprob: -9.63061809539795

Token 1412: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02975974604487419
    2. ' s' → logprob: -3.529759645462036
    3. '   ' → logprob: -11.779759407043457
    4. ' ' → logprob: -14.029759407043457
    5. '
' → logprob: -15.529759407043457
    6. '1' → logprob: -15.529759407043457
    7. ')' → logprob: -15.529759407043457
    8. '  ' → logprob: -16.654760360717773
    9. '       ' → logprob: -16.904760360717773
    10. 'self' → logprob: -17.029760360717773

Token 1413: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02526981756091118
    2. '1' → logprob: -3.7752697467803955
    3. '.b' → logprob: -6.275269985198975
    4. 'a' → logprob: -9.025269508361816
    5. 's' → logprob: -11.275269508361816
    6. ' b' → logprob: -13.275269508361816
    7. '	b' → logprob: -13.775269508361816
    8. '.a' → logprob: -13.900269508361816
    9. '_b' → logprob: -14.150269508361816
    10. ')b' → logprob: -14.275269508361816

Token 1414: '.b' (ID: 1292)
  Prédit: '.a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.38846418261528015
    2. '.b' → logprob: -1.1384642124176025
    3. 'a' → logprob: -6.763463973999023
    4. 'b' → logprob: -7.763463973999023
    5. ' .' → logprob: -13.013463973999023
    6. ').' → logprob: -13.138463973999023
    7. '.' → logprob: -13.138463973999023
    8. '```' → logprob: -13.263463973999023
    9. '   ' → logprob: -13.388463973999023
    10. ')' → logprob: -13.763463973999023

Token 1415: ')])

' (ID: 182226)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0760333240032196
    2. '])' → logprob: -2.701033353805542
    3. ')' → logprob: -5.326033115386963
    4. ')]' → logprob: -7.076033115386963
    5. '))' → logprob: -8.701033592224121
    6. ']))' → logprob: -9.076033592224121
    7. '   ' → logprob: -10.326033592224121
    8. '()' → logprob: -11.326033592224121
    9. ' ])' → logprob: -11.451033592224121
    10. ')])
' → logprob: -11.576033592224121

Token 1416: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17091868817806244
    2. '   ' → logprob: -1.9209187030792236
    3. 'return' → logprob: -4.5459184646606445
    4. '#' → logprob: -10.670918464660645
    5. ' return' → logprob: -13.795918464660645
    6. '
' → logprob: -14.545918464660645
    7. 'if' → logprob: -14.545918464660645
    8. 'd' → logprob: -14.795918464660645
    9. ' def' → logprob: -14.920918464660645
    10. '```' → logprob: -15.170918464660645

Token 1417: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.20246362686157227
    2. 'is' → logprob: -2.0774636268615723
    3. 'main' → logprob: -3.9524636268615723
    4. 'inter' → logprob: -4.202463626861572
    5. 'cc' → logprob: -5.327463626861572
    6. 'cross' → logprob: -5.702463626861572
    7. 'intersection' → logprob: -6.077463626861572
    8. 'angle' → logprob: -6.327463626861572
    9. 'circle' → logprob: -6.577463626861572
    10. 'area' → logprob: -6.952463626861572

Token 1418: '_ls' (ID: 136088)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' → logprob: -0.13242551684379578
    2. '_ls' → logprob: -2.132425546646118
    3. 'lp' → logprob: -6.007425308227539
    4. 'sl' → logprob: -6.007425308227539
    5. '_lp' → logprob: -8.507425308227539
    6. 'll' → logprob: -8.507425308227539
    7. '(ls' → logprob: -9.382425308227539
    8. '_sl' → logprob: -11.257425308227539
    9. ' ls' → logprob: -11.257425308227539
    10. 'cs' → logprob: -11.382425308227539

Token 1419: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.664371848164592e-05
    2. '(s' → logprob: -11.375016212463379
    3. '(line' → logprob: -12.500016212463379
    4. 'def' → logprob: -14.250016212463379
    5. '(ls' → logprob: -14.250016212463379
    6. '(' → logprob: -17.500017166137695
    7. '(Line' → logprob: -17.625017166137695
    8. '[l' → logprob: -17.625017166137695
    9. '	l' → logprob: -18.000017166137695
    10. ' l' → logprob: -18.250017166137695

Token 1420: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33174651861190796
    2. ',' → logprob: -1.9567465782165527
    3. '(s' → logprob: -2.5817465782165527
    4. 'def' → logprob: -2.9567465782165527
    5. '(l' → logprob: -5.706746578216553
    6. 'l' → logprob: -5.956746578216553
    7. '):
' → logprob: -6.331746578216553
    8. ')' → logprob: -6.581746578216553
    9. '   ' → logprob: -6.706746578216553
    10. ' s' → logprob: -7.581746578216553

Token 1421: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.288163083605468e-05
    2. ' s' → logprob: -9.875052452087402
    3. ')' → logprob: -14.375052452087402
    4. '(s' → logprob: -14.500052452087402
    5. 'def' → logprob: -15.750052452087402
    6. '   ' → logprob: -16.75005340576172
    7. ')s' → logprob: -18.00005340576172
    8. ',' → logprob: -18.87505340576172
    9. 'p' → logprob: -19.00005340576172
    10. 'l' → logprob: -19.12505340576172

Token 1422: '):
' (ID: 1883)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.5139241814613342
    2. '(s' → logprob: -1.0139241218566895
    3. 'def' → logprob: -3.8889241218566895
    4. '):
' → logprob: -4.7639241218566895
    5. 's' → logprob: -5.0139241218566895
    6. '):' → logprob: -6.5139241218566895
    7. ',' → logprob: -7.0139241218566895
    8. ')' → logprob: -7.2639241218566895
    9. '(' → logprob: -9.638924598693848
    10. '   ' → logprob: -10.013924598693848

Token 1423: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5506018400192261
    2. 'return' → logprob: -1.050601840019226
    3. 'min' → logprob: -3.0506019592285156
    4. 'def' → logprob: -4.425601959228516
    5. ' return' → logprob: -4.550601959228516
    6. 'if' → logprob: -6.425601959228516
    7. ' min' → logprob: -6.800601959228516
    8. 'max' → logprob: -7.300601959228516
    9. 'distance' → logprob: -8.550601959228516
    10. ' if' → logprob: -9.800601959228516

Token 1424: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2825855612754822
    2. 'min' → logprob: -1.532585620880127
    3. 'def' → logprob: -4.282585620880127
    4. 'if' (adapté à ' if') → logprob: -4.407585620880127
    5. 'distance' → logprob: -5.907585620880127
    6. '   ' → logprob: -7.032585620880127
    7. 'max' → logprob: -8.032585144042969
    8. ' return' → logprob: -9.407585144042969
    9. '0' → logprob: -9.782585144042969
    10. 'r' → logprob: -9.907585144042969

Token 1425: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00019066639652010053
    2. ' is' → logprob: -9.625190734863281
    3. 'cross' → logprob: -9.875190734863281
    4. 'not' → logprob: -10.250190734863281
    5. 'distance' → logprob: -10.875190734863281
    6. 'cc' → logprob: -11.875190734863281
    7. 'l' → logprob: -12.750190734863281
    8. '   ' → logprob: -13.000190734863281
    9. 'abs' → logprob: -13.125190734863281
    10. 'eq' → logprob: -13.750190734863281

Token 1426: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -7.982165698194876e-05
    2. 'is' → logprob: -10.500080108642578
    3. 'Interact' → logprob: -11.125080108642578
    4. 'inter' → logprob: -11.375080108642578
    5. 'Segment' → logprob: -12.000080108642578
    6. 'Intersection' → logprob: -12.125080108642578
    7. 'ss' → logprob: -13.000080108642578
    8. 'Inter' → logprob: -13.250080108642578
    9. 'Par' → logprob: -13.625080108642578
    10. 'Intercept' → logprob: -13.875080108642578

Token 1427: '_ls' (ID: 136088)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -1.0102070569992065
    2. 'lp' → logprob: -1.2602070569992065
    3. '_ll' → logprob: -1.7602070569992065
    4. '_lp' → logprob: -2.385207176208496
    5. 'ls' → logprob: -3.010207176208496
    6. '_ls' → logprob: -3.260207176208496
    7. '(ls' → logprob: -8.635207176208496
    8. '(lp' → logprob: -8.885207176208496
    9. '(ll' → logprob: -10.135207176208496
    10. 'ss' → logprob: -10.260207176208496

Token 1428: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -8.77627644513268e-06
    2. '(s' → logprob: -12.250008583068848
    3. 'l' → logprob: -12.750008583068848
    4. '(' → logprob: -14.875008583068848
    5. 's' → logprob: -15.125008583068848
    6. ' l' → logprob: -16.500009536743164
    7. '	l' → logprob: -16.625009536743164
    8. '[l' → logprob: -16.625009536743164
    9. ',l' → logprob: -17.750009536743164
    10. '=l' → logprob: -18.000009536743164

Token 1429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09980768710374832
    2. '(s' → logprob: -2.8498077392578125
    3. '(l' → logprob: -3.5998077392578125
    4. 's' → logprob: -4.7248077392578125
    5. ',l' → logprob: -7.5998077392578125
    6. ',s' → logprob: -8.349807739257812
    7. ')' → logprob: -9.599807739257812
    8. 'l' → logprob: -9.849807739257812
    9. ' s' → logprob: -10.349807739257812
    10. ' ,' → logprob: -11.349807739257812

Token 1430: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03806788846850395
    2. 'l' → logprob: -3.2880678176879883
    3. ' s' → logprob: -10.663067817687988
    4. ' l' → logprob: -13.163067817687988
    5. '   ' → logprob: -15.163067817687988
    6. '
' → logprob: -15.288067817687988
    7. 'ls' → logprob: -16.163068771362305
    8. ' ' → logprob: -16.288068771362305
    9. '	s' → logprob: -16.538068771362305
    10. '```' → logprob: -16.663068771362305

Token 1431: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027718110010027885
    2. '):
' → logprob: -3.9027180671691895
    3. '(s' → logprob: -5.2777180671691895
    4. '   ' → logprob: -7.1527180671691895
    5. 'return' → logprob: -7.4027180671691895
    6. 's' → logprob: -8.402718544006348
    7. ',' → logprob: -8.527718544006348
    8. ' return' → logprob: -9.777718544006348
    9. ')' → logprob: -10.277718544006348
    10. '(l' → logprob: -10.277718544006348

Token 1432: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.48769620060920715
    2. 'return' → logprob: -1.2376961708068848
    3. '   ' → logprob: -2.4876961708068848
    4. ' return' → logprob: -4.362696170806885
    5. ' ' → logprob: -9.987696647644043
    6. '	return' → logprob: -11.487696647644043
    7. '       ' → logprob: -12.112696647644043
    8. '    ' → logprob: -14.237696647644043
    9. '  ' → logprob: -14.737696647644043
    10. '     ' → logprob: -15.362696647644043

Token 1433: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.375001907348633
    4. 'abs' → logprob: -16.750001907348633
    5. 'min' → logprob: -17.125001907348633
    6. 'distance' → logprob: -18.375001907348633
    7. '(' → logprob: -19.125001907348633
    8. 'max' → logprob: -19.500001907348633
    9. 'cross' → logprob: -19.875001907348633
    10. '
' → logprob: -20.125001907348633

Token 1434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.125006675720215
    4. 'distance' → logprob: -14.625006675720215
    5. 'min' → logprob: -15.875006675720215
    6. 'abs' → logprob: -16.25000762939453
    7. '  ' → logprob: -17.75000762939453
    8. 'd' → logprob: -17.93750762939453
    9. '０' → logprob: -18.06250762939453
    10. '(' → logprob: -18.25000762939453

Token 1435: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.927930654550437e-05
    2. 'return' → logprob: -10.500029563903809
    3. 'def' → logprob: -13.750029563903809
    4. '       ' → logprob: -15.500029563903809
    5. '
' → logprob: -15.875029563903809
    6. ' return' → logprob: -16.375028610229492
    7. '    
' → logprob: -16.500028610229492
    8. 's' → logprob: -17.000028610229492
    9. 'if' → logprob: -17.750028610229492
    10. 'else' → logprob: -18.625028610229492

Token 1436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009982962161302567
    2. 'return' → logprob: -4.634983062744141
    3. 'if' → logprob: -8.88498306274414
    4. 'r' → logprob: -9.63498306274414
    5. '```' → logprob: -11.75998306274414
    6. '
' → logprob: -12.88498306274414
    7. 'p' → logprob: -12.88498306274414
    8. '    
' → logprob: -13.13498306274414
    9. 'd' → logprob: -13.13498306274414
    10. 's' → logprob: -13.25998306274414

Token 1437: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000643095700070262
    2. '   ' → logprob: -7.375643253326416
    3. 'if' → logprob: -12.250642776489258
    4. ' return' → logprob: -12.250642776489258
    5. 'r' → logprob: -12.875642776489258
    6. 'def' → logprob: -13.250642776489258
    7. 'a' → logprob: -13.750642776489258
    8. '	return' → logprob: -14.500642776489258
    9. 'd' → logprob: -15.125642776489258
    10. 'ret' → logprob: -15.750642776489258

Token 1438: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0002072357019642368
    2. ' min' → logprob: -8.50020694732666
    3. '   ' → logprob: -13.12520694732666
    4. '	min' → logprob: -13.75020694732666
    5. 'distance' → logprob: -15.00020694732666
    6. '[min' → logprob: -15.50020694732666
    7. '(min' → logprob: -15.75020694732666
    8. 'minimum' → logprob: -17.250207901000977
    9. 'max' → logprob: -17.375207901000977
    10. '
' → logprob: -18.125207901000977

Token 1439: '(distance' (ID: 105203)
  Prédit: '(distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.0025006290525197983
    2. '([' → logprob: -6.002500534057617
    3. 'distance' → logprob: -11.002500534057617
    4. '(' → logprob: -12.252500534057617
    5. '([
' → logprob: -13.002500534057617
    6. '(
' → logprob: -14.002500534057617
    7. '[' → logprob: -15.127500534057617
    8. '((' → logprob: -16.752500534057617
    9. '(dist' → logprob: -17.127500534057617
    10. ' distance' → logprob: -17.877500534057617

Token 1440: '_lp' (ID: 174192)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.16026200354099274
    2. 'sp' → logprob: -1.9102619886398315
    3. '_lp' → logprob: -11.035262107849121
    4. 'lp' → logprob: -11.410262107849121
    5. 's' → logprob: -12.535262107849121
    6. '(sp' → logprob: -13.160262107849121
    7. '_ss' → logprob: -13.160262107849121
    8. 'ss' → logprob: -13.285262107849121
    9. 'ssp' → logprob: -14.785262107849121
    10. 'Sp' → logprob: -15.285262107849121

Token 1441: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00865499209612608
    2. '(s' → logprob: -4.758655071258545
    3. 's' → logprob: -10.383654594421387
    4. 'l' → logprob: -11.633654594421387
    5. '	l' → logprob: -15.508654594421387
    6. '(' → logprob: -15.633654594421387
    7. '(lp' → logprob: -16.258655548095703
    8. 'distance' → logprob: -17.008655548095703
    9. '   ' → logprob: -17.008655548095703
    10. ')' → logprob: -17.508655548095703

Token 1442: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11992496252059937
    2. '(s' → logprob: -2.369925022125244
    3. '(l' → logprob: -4.119925022125244
    4. 's' → logprob: -6.119925022125244
    5. ',l' → logprob: -7.369925022125244
    6. ',s' → logprob: -7.994925022125244
    7. '(' → logprob: -9.244924545288086
    8. 'l' → logprob: -11.744924545288086
    9. ' ,' → logprob: -12.994924545288086
    10. '```' → logprob: -13.244924545288086

Token 1443: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.570319702499546e-05
    2. ' s' → logprob: -10.625025749206543
    3. '   ' → logprob: -13.875025749206543
    4. '(s' → logprob: -15.625025749206543
    5. 'l' → logprob: -16.000024795532227
    6. ')' → logprob: -17.250024795532227
    7. '	s' → logprob: -17.375024795532227
    8. '{s' → logprob: -17.750024795532227
    9. ')s' → logprob: -18.125024795532227
    10. ' ' → logprob: -18.250024795532227

Token 1444: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -3.8889261304575484e-06
    2. 'a' → logprob: -12.750003814697266
    3. '.s' → logprob: -14.625003814697266
    4. '.' → logprob: -14.875003814697266
    5. ' .' → logprob: -16.875003814697266
    6. '.b' → logprob: -17.750003814697266
    7. '   ' → logprob: -17.750003814697266
    8. ').' → logprob: -18.125003814697266
    9. '#a' → logprob: -18.625003814697266
    10. ' ' → logprob: -19.375003814697266

Token 1445: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -2.4987974029500037e-05
    2. ',' → logprob: -11.125024795532227
    3. '),
' → logprob: -12.250024795532227
    4. '   ' → logprob: -13.125024795532227
    5. ' ),' → logprob: -13.125024795532227
    6. ')' → logprob: -14.500024795532227
    7. ',),' → logprob: -15.500024795532227
    8. 'def' → logprob: -15.625024795532227
    9. '()),' → logprob: -16.250024795532227
    10. ')),' → logprob: -16.500024795532227

Token 1446: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -3.5597102396423e-05
    2. ' distance' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. '(distance' → logprob: -20.250036239624023
    5. '       ' → logprob: -22.250036239624023
    6. '.distance' → logprob: -22.750036239624023
    7. '  ' → logprob: -23.625036239624023
    8. '
' → logprob: -23.875036239624023
    9. ' ' → logprob: -24.000036239624023
    10. '    ' → logprob: -24.000036239624023

Token 1447: '_lp' (ID: 174192)
  Prédit: '_lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lp' → logprob: -0.004223116673529148
    2. 'lp' → logprob: -5.504223346710205
    3. '_sp' → logprob: -8.879222869873047
    4. 'sp' → logprob: -13.129222869873047
    5. '.lp' → logprob: -13.629222869873047
    6. '_ls' → logprob: -14.379222869873047
    7. 's' → logprob: -14.754222869873047
    8. 'l' → logprob: -14.879222869873047
    9. '	lp' → logprob: -15.129222869873047
    10. 'LP' → logprob: -16.004222869873047

Token 1448: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.7968066206085496e-05
    2. 'l' → logprob: -11.000027656555176
    3. '(' → logprob: -11.750027656555176
    4. '(s' → logprob: -12.750027656555176
    5. '	l' → logprob: -15.500027656555176
    6. 's' → logprob: -16.750028610229492
    7. ' l' → logprob: -16.875028610229492
    8. ' (' → logprob: -17.875028610229492
    9. '(
' → logprob: -18.000028610229492
    10. '   ' → logprob: -18.625028610229492

Token 1449: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019472026033326983
    2. '.s' → logprob: -6.501947402954102
    3. ',s' → logprob: -8.376947402954102
    4. 's' → logprob: -8.751947402954102
    5. ' ,' → logprob: -10.751947402954102
    6. ',b' → logprob: -11.376947402954102
    7. 'b' → logprob: -12.251947402954102
    8. '.b' → logprob: -12.251947402954102
    9. '   ' → logprob: -12.626947402954102
    10. ')' → logprob: -12.751947402954102

Token 1450: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004082554951310158
    2. ' s' → logprob: -5.504082679748535
    3. '   ' → logprob: -12.629082679748535
    4. ' ' → logprob: -15.004082679748535
    5. '	s' → logprob: -15.754082679748535
    6. '{s' → logprob: -15.754082679748535
    7. '  ' → logprob: -16.50408172607422
    8. '    ' → logprob: -16.87908172607422
    9. ')' → logprob: -17.00408172607422
    10. '(s' → logprob: -17.25408172607422

Token 1451: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.0011734402505680919
    2. 'b' → logprob: -6.751173496246338
    3. '.' → logprob: -13.37617301940918
    4. '	b' → logprob: -14.00117301940918
    5. '   ' → logprob: -15.62617301940918
    6. ')b' → logprob: -15.62617301940918
    7. ')' → logprob: -16.12617301940918
    8. ',b' → logprob: -16.62617301940918
    9. '
' → logprob: -16.87617301940918
    10. ').' → logprob: -17.00117301940918

Token 1452: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.9153885558771435e-06
    2. '   ' → logprob: -12.875005722045898
    3. ')
' → logprob: -13.750005722045898
    4. '))' → logprob: -13.875005722045898
    5. '())' → logprob: -14.125005722045898
    6. ')}' → logprob: -15.625005722045898
    7. ' )' → logprob: -15.750005722045898
    8. '}' → logprob: -17.2500057220459
    9. '})' → logprob: -17.3750057220459
    10. ')s' → logprob: -17.5000057220459

Token 1453: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49065136909484863
    2. 'def' → logprob: -0.9906513690948486
    3. 'return' → logprob: -4.1156511306762695
    4. ' return' → logprob: -9.61565113067627
    5. 'if' → logprob: -10.49065113067627
    6. ' def' → logprob: -11.74065113067627
    7. 'd' → logprob: -12.49065113067627
    8. '#' → logprob: -12.49065113067627
    9. 'c' → logprob: -12.61565113067627
    10. '```' → logprob: -12.61565113067627

Token 1454: ' cross' (ID: 8088)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3527614176273346
    2. 'distance' → logprob: -1.2277613878250122
    3. 'def' → logprob: -5.977761268615723
    4. 'cross' → logprob: -7.352761268615723
    5. 'intersection' → logprob: -7.727761268615723
    6. 'inter' → logprob: -7.977761268615723
    7. ' is' → logprob: -10.102761268615723
    8. 'cc' → logprob: -10.227761268615723
    9. 'length' → logprob: -10.227761268615723
    10. '#' → logprob: -10.602761268615723

Token 1455: 'point' (ID: 4859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6364026665687561
    2. '(' → logprob: -1.8864026069641113
    3. '(Point' → logprob: -2.7614026069641113
    4. '<|end|>' → logprob: -2.8864026069641113
    5. '(vec' → logprob: -3.7614026069641113
    6. '(Vector' → logprob: -3.8864026069641113
    7. '(Line' → logprob: -3.8864026069641113
    8. '_point' → logprob: -4.011402606964111
    9. '(line' → logprob: -4.136402606964111
    10. '<|end|>' → logprob: -4.261402606964111

Token 1456: '_ll' (ID: 105142)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.07717722654342651
    2. '_ll' → logprob: -2.9521772861480713
    3. '(ll' → logprob: -4.202177047729492
    4. '(' → logprob: -6.827177047729492
    5. 'def' → logprob: -6.827177047729492
    6. '_cc' → logprob: -6.827177047729492
    7. '_lp' → logprob: -6.827177047729492
    8. '_l' → logprob: -7.202177047729492
    9. '(s' → logprob: -7.327177047729492
    10. '(line' → logprob: -8.202177047729492

Token 1457: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.054500666621607e-06
    2. 'def' → logprob: -13.25000286102295
    3. '(' → logprob: -14.25000286102295
    4. '(s' → logprob: -15.62500286102295
    5. ' (' → logprob: -16.625003814697266
    6. '(line' → logprob: -16.625003814697266
    7. '(
' → logprob: -16.750003814697266
    8. 'l' → logprob: -17.000003814697266
    9. '	l' → logprob: -17.250003814697266
    10. '(a' → logprob: -17.250003814697266

Token 1458: '1' (ID: 16)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.25492599606513977
    2. '1' → logprob: -1.5049259662628174
    3. '(' → logprob: -6.8799262046813965
    4. ')' → logprob: -7.2549262046813965
    5. 'l' → logprob: -8.254925727844238
    6. ',' → logprob: -8.629925727844238
    7. 'def' → logprob: -8.629925727844238
    8. '):' → logprob: -9.129925727844238
    9. ',l' → logprob: -9.379925727844238
    10. ' (' → logprob: -9.629925727844238

Token 1459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030381038784980774
    2. '(l' → logprob: -3.530380964279175
    3. ',l' → logprob: -7.780381202697754
    4. ')' → logprob: -8.905381202697754
    5. ' ,' → logprob: -10.405381202697754
    6. 'l' → logprob: -11.405381202697754
    7. 'def' → logprob: -11.655381202697754
    8. '),' → logprob: -12.280381202697754
    9. '):
' → logprob: -13.155381202697754
    10. '(' → logprob: -13.155381202697754

Token 1460: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.842555426876061e-06
    2. ' l' → logprob: -12.250004768371582
    3. '	l' → logprob: -19.3750057220459
    4. 'line' → logprob: -20.5000057220459
    5. '   ' → logprob: -22.0000057220459
    6. ' л' → logprob: -23.5000057220459
    7. 'll' → logprob: -23.8750057220459
    8. 'def' → logprob: -23.8750057220459
    9. ' line' → logprob: -24.0000057220459
    10. 'Line' → logprob: -24.0000057220459

Token 1461: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6340269446372986
    2. '2' → logprob: -0.7590269446372986
    3. 'l' → logprob: -6.634027004241943
    4. 'ine' → logprob: -10.009026527404785
    5. '```' → logprob: -10.134026527404785
    6. 'def' → logprob: -11.884026527404785
    7. '   ' → logprob: -12.259026527404785
    8. 'inear' → logprob: -13.134026527404785
    9. 'ambda' → logprob: -13.634026527404785
    10. ' ' → logprob: -13.884026527404785

Token 1462: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.26107707619667053
    2. '(l' → logprob: -1.5110770463943481
    3. '):
' → logprob: -4.761076927185059
    4. 'def' → logprob: -8.511076927185059
    5. '(' → logprob: -9.011076927185059
    6. ':' → logprob: -9.636076927185059
    7. '():' → logprob: -10.136076927185059
    8. ')' → logprob: -10.261076927185059
    9. '(p' → logprob: -10.511076927185059
    10. '(s' → logprob: -11.636076927185059

Token 1463: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.39276638627052307
    2. 'd' → logprob: -1.2677663564682007
    3. 'a' → logprob: -4.14276647567749
    4. 'den' → logprob: -4.76776647567749
    5. '   ' → logprob: -4.76776647567749
    6. 'v' → logprob: -5.89276647567749
    7. 'base' → logprob: -6.26776647567749
    8. 'p' → logprob: -6.26776647567749
    9. 'b' → logprob: -6.76776647567749
    10. 'vec' → logprob: -7.14276647567749

Token 1464: ' A' (ID: 355)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.26551327109336853
    2. 'a' → logprob: -2.3905131816864014
    3. 'base' → logprob: -3.3905131816864014
    4. 'p' → logprob: -3.5155131816864014
    5. 't' → logprob: -3.7655131816864014
    6. 'b' → logprob: -4.3905134201049805
    7. 'vec' → logprob: -4.6405134201049805
    8. 'v' → logprob: -4.6405134201049805
    9. 'den' → logprob: -5.3905134201049805
    10. 'def' → logprob: -5.8905134201049805

Token 1465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6464155316352844
    2. ' =' → logprob: -0.7714155316352844
    3. 'x' → logprob: -4.521415710449219
    4. '=B' → logprob: -7.021415710449219
    5. '=A' → logprob: -7.271415710449219
    6. '=(' → logprob: -8.021415710449219
    7. '_x' → logprob: -8.271415710449219
    8. ',' → logprob: -9.396415710449219
    9. '=
' → logprob: -9.646415710449219
    10. 'B' → logprob: -9.646415710449219

Token 1466: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.5555559396743774
    2. 'l' → logprob: -0.9305559396743774
    3. '(l' → logprob: -3.930555820465088
    4. '-(' → logprob: -5.805555820465088
    5. '((' → logprob: -6.055555820465088
    6. '(c' → logprob: -6.305555820465088
    7. 'cos' → logprob: -6.555555820465088
    8. 'sin' → logprob: -7.430555820465088
    9. '(-(' → logprob: -7.555555820465088
    10. 'Cross' → logprob: -8.180556297302246

Token 1467: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0010420980397611856
    2. 'l' → logprob: -6.876041889190674
    3. '((' → logprob: -12.501042366027832
    4. '	l' → logprob: -12.876042366027832
    5. '(' → logprob: -13.501042366027832
    6. '(
' → logprob: -13.626042366027832
    7. ' (' → logprob: -15.376042366027832
    8. ' l' → logprob: -16.001041412353516
    9. '   ' → logprob: -17.001041412353516
    10. '(line' → logprob: -17.126041412353516

Token 1468: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0007430415134876966
    2. '(l' → logprob: -7.2507429122924805
    3. '   ' → logprob: -10.75074291229248
    4. ' l' → logprob: -12.12574291229248
    5. '1' → logprob: -13.00074291229248
    6. '	l' → logprob: -13.87574291229248
    7. '(' → logprob: -14.00074291229248
    8. ' (' → logprob: -14.00074291229248
    9. 'Point' → logprob: -14.75074291229248
    10. '(
' → logprob: -16.000743865966797

Token 1469: '.b' (ID: 1292)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0012672555167227983
    2. '(l' → logprob: -6.751267433166504
    3. '.l' → logprob: -10.251267433166504
    4. '(' → logprob: -10.376267433166504
    5. '1' → logprob: -11.251267433166504
    6. '	l' → logprob: -12.001267433166504
    7. '   ' → logprob: -12.251267433166504
    8. ' l' → logprob: -12.376267433166504
    9. ' (' → logprob: -13.876267433166504
    10. '
' → logprob: -16.001266479492188

Token 1470: ' -' (ID: 533)
  Prédit: '-l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.08700764924287796
    2. ' -' → logprob: -3.087007761001587
    3. '-' → logprob: -3.712007761001587
    4. 'l' → logprob: -4.337007522583008
    5. '
' → logprob: -9.587007522583008
    6. '-
' → logprob: -9.712007522583008
    7. '-A' → logprob: -10.587007522583008
    8. '   ' → logprob: -11.837007522583008
    9. ' ' → logprob: -12.212007522583008
    10. '	l' → logprob: -12.462007522583008

Token 1471: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.7014437364414334e-05
    2. '(l' → logprob: -11.62502670288086
    3. '   ' → logprob: -11.75002670288086
    4. ' l' → logprob: -11.87502670288086
    5. '(' → logprob: -13.37502670288086
    6. '	l' → logprob: -14.87502670288086
    7. 'line' → logprob: -15.25002670288086
    8. ' (' → logprob: -15.37502670288086
    9. '  ' → logprob: -15.50002670288086
    10. '    ' → logprob: -15.87502670288086

Token 1472: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02640584483742714
    2. '1' → logprob: -3.6514058113098145
    3. 'a' → logprob: -9.901406288146973
    4. '.l' → logprob: -10.151406288146973
    5. ' l' → logprob: -11.526406288146973
    6. '	l' → logprob: -12.276406288146973
    7. ' л' → logprob: -14.401406288146973
    8. '   ' → logprob: -15.026406288146973
    9. 'll' → logprob: -15.401406288146973
    10. 'point' → logprob: -15.526406288146973

Token 1473: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0067682997323572636
    2. '.a' → logprob: -5.006768226623535
    3. 'l' → logprob: -9.881768226623535
    4. '.l' → logprob: -14.131768226623535
    5. ' a' → logprob: -14.256768226623535
    6. '1' → logprob: -15.881768226623535
    7. '	a' → logprob: -16.00676918029785
    8. 'A' → logprob: -16.63176918029785
    9. '   ' → logprob: -17.25676918029785
    10. '_a' → logprob: -17.63176918029785

Token 1474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0711853876709938
    2. 'l' → logprob: -2.696185350418091
    3. ',l' → logprob: -6.82118558883667
    4. '(l' → logprob: -9.696185111999512
    5. ' ,' → logprob: -10.321185111999512
    6. 'A' → logprob: -10.571185111999512
    7. ',
' → logprob: -11.321185111999512
    8. ' l' → logprob: -11.696185111999512
    9. ',A' → logprob: -11.946185111999512
    10. '   ' → logprob: -12.946185111999512

Token 1475: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.842555426876061e-06
    2. ' l' → logprob: -12.500004768371582
    3. '(l' → logprob: -14.500004768371582
    4. '   ' → logprob: -15.125004768371582
    5. '	l' → logprob: -15.375004768371582
    6. '  ' → logprob: -17.5000057220459
    7. '
' → logprob: -17.7500057220459
    8. '(' → logprob: -18.7500057220459
    9. 'line' → logprob: -19.1250057220459
    10. ' ' → logprob: -19.1250057220459

Token 1476: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004306692280806601
    2. '1' → logprob: -7.750430583953857
    3. 'l' → logprob: -17.125431060791016
    4. 'a' → logprob: -17.875431060791016
    5. '２' → logprob: -18.875431060791016
    6. '.l' → logprob: -19.375431060791016
    7. '۲' → logprob: -20.187931060791016
    8. '₂' → logprob: -20.250431060791016
    9. '_' → logprob: -21.000431060791016
    10. '```' → logprob: -21.375431060791016

Token 1477: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.1269678920507431
    2. '.a' → logprob: -2.1269679069519043
    3. 'b' → logprob: -10.626967430114746
    4. 'a' → logprob: -11.126967430114746
    5. '.' → logprob: -15.126967430114746
    6. '	b' → logprob: -16.001968383789062
    7. '_b' → logprob: -16.251968383789062
    8. '.p' → logprob: -16.376968383789062
    9. '#a' → logprob: -17.001968383789062
    10. '(b' → logprob: -17.626968383789062

Token 1478: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.575944721698761
    2. '-' → logprob: -0.825944721698761
    3. '-l' → logprob: -12.450944900512695
    4. '-
' → logprob: -14.825944900512695
    5. ' ' → logprob: -15.075944900512695
    6. '<|end|>' → logprob: -15.200944900512695
    7. '<|end|>' → logprob: -15.825944900512695
    8. ' -
' → logprob: -16.075944900512695
    9. 'l' → logprob: -17.075944900512695
    10. '−' → logprob: -17.575944900512695

Token 1479: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.2020991056924686e-05
    2. ' l' → logprob: -10.375032424926758
    3. '	l' → logprob: -15.625032424926758
    4. ' л' → logprob: -16.375032424926758
    5. '<|end|>' → logprob: -16.375032424926758
    6. '<|end|>' → logprob: -16.625032424926758
    7. 'л' → logprob: -16.875032424926758
    8. 'll' → logprob: -16.875032424926758
    9. '   ' → logprob: -17.062532424926758
    10. ' ' → logprob: -17.187532424926758

Token 1480: '2' (ID: 17)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004331372212618589
    2. '2' → logprob: -5.879331588745117
    3. '1' → logprob: -6.879331588745117
    4. 'a' → logprob: -7.629331588745117
    5. ' l' → logprob: -12.254331588745117
    6. '.l' → logprob: -13.504331588745117
    7. 'л' → logprob: -13.754331588745117
    8. 'll' → logprob: -14.754331588745117
    9. ' л' → logprob: -14.879331588745117
    10. '	l' → logprob: -14.879331588745117

Token 1481: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5637203454971313
    2. 'l' → logprob: -1.0637203454971313
    3. '.l' → logprob: -2.563720226287842
    4. '.a' → logprob: -5.188720226287842
    5. '2' → logprob: -5.813720226287842
    6. '1' → logprob: -9.313720703125
    7. '.' → logprob: -10.063720703125
    8. '	l' → logprob: -12.063720703125
    9. '```' → logprob: -13.063720703125
    10. ' l' → logprob: -13.188720703125

Token 1482: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5844890475273132
    2. 'def' → logprob: -1.959489107131958
    3. '   ' → logprob: -2.334489107131958
    4. 'cross' → logprob: -2.709489107131958
    5. ')
' → logprob: -3.209489107131958
    6. 'return' → logprob: -3.459489107131958
    7. ',' → logprob: -4.084488868713379
    8. '*' → logprob: -4.084488868713379
    9. ')*' → logprob: -4.959488868713379
    10. ')/' → logprob: -5.084488868713379

Token 1483: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15014158189296722
    2. ' if' → logprob: -2.150141477584839
    3. 'if' → logprob: -4.150141716003418
    4. 'B' → logprob: -5.400141716003418
    5. 'p' → logprob: -6.900141716003418
    6. ',' → logprob: -7.900141716003418
    7. ' B' → logprob: -8.525141716003418
    8. 'A' → logprob: -8.900141716003418
    9. ')' → logprob: -9.025141716003418
    10. '0' → logprob: -9.400141716003418

Token 1484: ' B' (ID: 418)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03625766187906265
    2. '0' → logprob: -3.536257743835449
    3. 'B' (adapté à ' B') → logprob: -5.661257743835449
    4. 'return' → logprob: -6.911257743835449
    5. '   ' → logprob: -7.161257743835449
    6. 'EPS' → logprob: -7.286257743835449
    7. ' if' → logprob: -8.03625774383545
    8. 'assert' → logprob: -10.03625774383545
    9. 'A' → logprob: -10.28625774383545
    10. 't' → logprob: -10.53625774383545

Token 1485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234832875430584
    2. ' =' → logprob: -5.255234718322754
    3. '=
' → logprob: -14.255234718322754
    4. '=c' → logprob: -15.005234718322754
    5. '＝' → logprob: -18.38023567199707
    6. '=cut' → logprob: -19.00523567199707
    7. '=A' → logprob: -19.25523567199707
    8. '=

' → logprob: -19.50523567199707
    9. ' ' → logprob: -20.38023567199707
    10. '=B' → logprob: -20.63023567199707

Token 1486: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -4.36574100604048e-06
    2. ' cross' → logprob: -12.375004768371582
    3. 'A' → logprob: -17.750003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '
' → logprob: -18.500003814697266
    6. 'Cross' → logprob: -18.750003814697266
    7. 'c' → logprob: -18.750003814697266
    8. '-cross' → logprob: -19.000003814697266
    9. 'Point' → logprob: -20.625003814697266
    10. '.cross' → logprob: -20.750003814697266

Token 1487: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0010360259329900146
    2. 'l' → logprob: -6.876036167144775
    3. '	l' → logprob: -13.501035690307617
    4. '(
' → logprob: -13.751035690307617
    5. '(' → logprob: -14.626035690307617
    6. '((' → logprob: -15.126035690307617
    7. '(A' → logprob: -16.876035690307617
    8. '[l' → logprob: -17.501035690307617
    9. 'A' → logprob: -17.626035690307617
    10. ' (' → logprob: -18.001035690307617

Token 1488: '1' (ID: 16)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.033655378967523575
    2. '(l' → logprob: -3.4086554050445557
    3. '	l' → logprob: -12.533655166625977
    4. '(
' → logprob: -12.908655166625977
    5. 'line' → logprob: -14.033655166625977
    6. ' l' → logprob: -14.408655166625977
    7. ' (' → logprob: -14.658655166625977
    8. '(' → logprob: -15.283655166625977
    9. '
' → logprob: -15.408655166625977
    10. '1' → logprob: -15.533655166625977

Token 1489: '.b' (ID: 1292)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3341797590255737
    2. '.b' → logprob: -1.4591797590255737
    3. '1' → logprob: -1.5841797590255737
    4. '.l' → logprob: -1.7091797590255737
    5. 'b' → logprob: -2.3341798782348633
    6. 'a' → logprob: -4.584179878234863
    7. '2' → logprob: -4.709179878234863
    8. '.a' → logprob: -6.834179878234863
    9. '(l' → logprob: -7.459179878234863
    10. '(b' → logprob: -8.459179878234863

Token 1490: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03226515278220177
    2. ' -' → logprob: -3.5322651863098145
    3. '-l' → logprob: -6.1572651863098145
    4. 'l' → logprob: -8.407264709472656
    5. '_' → logprob: -10.032264709472656
    6. '-
' → logprob: -10.032264709472656
    7. '-a' → logprob: -10.907264709472656
    8. '1' → logprob: -11.532264709472656
    9. ' l' → logprob: -11.532264709472656
    10. 'a' → logprob: -11.782264709472656

Token 1491: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -8.006006828509271e-05
    2. ' l' → logprob: -9.875080108642578
    3. '<|end|>' → logprob: -10.875080108642578
    4. '<|end|>' → logprob: -11.750080108642578
    5. 'll' → logprob: -14.375080108642578
    6. '...' → logprob: -14.625080108642578
    7. 'line' → logprob: -15.875080108642578
    8. '	l' → logprob: -16.375080108642578
    9. '_l' → logprob: -16.500080108642578
    10. '(l' → logprob: -16.625080108642578

Token 1492: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2519739270210266
    2. 'l' → logprob: -1.5019738674163818
    3. ' l' → logprob: -11.126974105834961
    4. 'll' → logprob: -11.126974105834961
    5. '.l' → logprob: -12.501974105834961
    6. '```' → logprob: -12.751974105834961
    7. '2' → logprob: -13.501974105834961
    8. '	l' → logprob: -13.939474105834961
    9. 'a' → logprob: -14.064474105834961
    10. '_l' → logprob: -14.439474105834961

Token 1493: '.a' (ID: 8772)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3376452922821045
    2. '.l' → logprob: -1.8376452922821045
    3. 'l' → logprob: -2.8376452922821045
    4. '.a' → logprob: -2.9626452922821045
    5. '1' → logprob: -4.087645530700684
    6. ' l' → logprob: -8.962645530700684
    7. 'b' → logprob: -9.212645530700684
    8. '   ' → logprob: -11.462645530700684
    9. '_a' → logprob: -11.837645530700684
    10. '```' → logprob: -11.837645530700684

Token 1494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08193523436784744
    2. '(l' → logprob: -2.581935167312622
    3. ',l' → logprob: -6.206935405731201
    4. 'l' → logprob: -8.081934928894043
    5. ',
' → logprob: -8.206934928894043
    6. '(' → logprob: -8.956934928894043
    7. ' (' → logprob: -9.081934928894043
    8. ')' → logprob: -9.831934928894043
    9. ' ,' → logprob: -10.706934928894043
    10. ' -' → logprob: -10.706934928894043

Token 1495: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.0564331205387134e-05
    2. ' l' → logprob: -11.50001049041748
    3. '(l' → logprob: -16.250011444091797
    4. '	l' → logprob: -16.375011444091797
    5. '   ' → logprob: -16.750011444091797
    6. '
' → logprob: -18.500011444091797
    7. '  ' → logprob: -18.875011444091797
    8. ' ' → logprob: -20.000011444091797
    9. '[l' → logprob: -20.500011444091797
    10. '(' → logprob: -20.625011444091797

Token 1496: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5610640048980713
    2. '2' → logprob: -0.9360640048980713
    3. 'l' → logprob: -3.3110640048980713
    4. '(l' → logprob: -7.436063766479492
    5. '.l' → logprob: -8.936063766479492
    6. ' l' → logprob: -10.936063766479492
    7. '_l' → logprob: -12.311063766479492
    8. '	l' → logprob: -13.186063766479492
    9. '(' → logprob: -13.686063766479492
    10. '{' → logprob: -13.686063766479492

Token 1497: '.b' (ID: 1292)
  Prédit: '.a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.009110254235565662
    2. 'a' → logprob: -4.759110450744629
    3. '1' → logprob: -8.134110450744629
    4. '.b' → logprob: -9.134110450744629
    5. '.l' → logprob: -9.384110450744629
    6. 'l' → logprob: -12.509110450744629
    7. '2' → logprob: -12.634110450744629
    8. 'b' → logprob: -14.009110450744629
    9. '#a' → logprob: -14.259110450744629
    10. '	a' → logprob: -14.884110450744629

Token 1498: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13052871823310852
    2. ' -' → logprob: -2.130528688430786
    3. '-l' → logprob: -5.630528926849365
    4. '-
' → logprob: -12.255528450012207
    5. 'l' → logprob: -13.880528450012207
    6. ' l' → logprob: -14.505528450012207
    7. ' ' → logprob: -14.880528450012207
    8. ' -
' → logprob: -14.880528450012207
    9. '-point' → logprob: -15.380528450012207
    10. '-
' → logprob: -16.130529403686523

Token 1499: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.2200749754119897e-06
    2. '	l' → logprob: -13.500001907348633
    3. 'Point' → logprob: -15.750001907348633
    4. '$l' → logprob: -15.875001907348633
    5. '(l' → logprob: -16.125001907348633
    6. ' l' → logprob: -16.125001907348633
    7. '_l' → logprob: -16.375001907348633
    8. '```' → logprob: -17.000001907348633
    9. '-l' → logprob: -17.125001907348633
    10. '
' → logprob: -17.375001907348633

Token 1500: '2' (ID: 17)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5242689847946167
    2. '1' → logprob: -0.8992689847946167
    3. 'a' → logprob: -7.024269104003906
    4. '2' → logprob: -8.649269104003906
    5. '.l' → logprob: -10.274269104003906
    6. ' l' → logprob: -10.649269104003906
    7. '	l' → logprob: -12.336769104003906
    8. 'll' → logprob: -12.336769104003906
    9. '```' → logprob: -13.211769104003906
    10. 'л' → logprob: -13.524269104003906

Token 1501: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.012733661569654942
    2. '.b' → logprob: -4.387733459472656
    3. '.l' → logprob: -9.012733459472656
    4. '.' → logprob: -9.512733459472656
    5. 'a' → logprob: -10.762733459472656
    6. 'b' → logprob: -13.137733459472656
    7. '2' → logprob: -13.387733459472656
    8. '1' → logprob: -13.512733459472656
    9. '.p' → logprob: -13.637733459472656
    10. '.c' → logprob: -15.637733459472656

Token 1502: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07273054122924805
    2. ')
' → logprob: -2.697730541229248
    3. '   ' → logprob: -5.947730541229248
    4. ')/' → logprob: -9.322731018066406
    5. ')
' → logprob: -9.697731018066406
    6. ')-' → logprob: -12.447731018066406
    7. ' ' → logprob: -12.447731018066406
    8. ')#' → logprob: -12.572731018066406
    9. 'A' → logprob: -13.572731018066406
    10. ')+' → logprob: -13.697731018066406

Token 1503: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018915491178631783
    2. ' return' → logprob: -4.76891565322876
    3. 'return' → logprob: -4.89391565322876
    4. 'x' → logprob: -6.51891565322876
    5. ' if' → logprob: -6.89391565322876
    6. 'if' → logprob: -8.893915176391602
    7. ' x' → logprob: -10.018915176391602
    8. '	return' → logprob: -11.268915176391602
    9. ',' → logprob: -11.518915176391602
    10. 'n' → logprob: -11.768915176391602

Token 1504: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.87424635887146
    2. '   ' → logprob: -0.99924635887146
    3. 'x' → logprob: -1.99924635887146
    4. 'if' (adapté à ' if') → logprob: -2.99924635887146
    5. ' return' → logprob: -3.87424635887146
    6. ' if' → logprob: -5.624246597290039
    7. 't' → logprob: -5.749246597290039
    8. ' x' → logprob: -7.124246597290039
    9. '0' → logprob: -7.249246597290039
    10. ' t' → logprob: -9.249246597290039

Token 1505: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.22630976140499115
    2. 'abs' → logprob: -1.6013097763061523
    3. ' abs' → logprob: -8.226309776306152
    4. 'not' → logprob: -8.226309776306152
    5. 'A' → logprob: -8.601309776306152
    6. ' eq' → logprob: -8.851309776306152
    7. '(eq' → logprob: -10.601309776306152
    8. '(abs' → logprob: -12.851309776306152
    9. 'is' → logprob: -13.601309776306152
    10. 'Eq' → logprob: -13.726309776306152

Token 1506: '(abs' (ID: 71957)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0002467966405674815
    2. '(abs' → logprob: -8.75024700164795
    3. 'A' → logprob: -9.62524700164795
    4. '(' → logprob: -11.50024700164795
    5. '(B' → logprob: -12.25024700164795
    6. 'abs' → logprob: -12.50024700164795
    7. '(a' → logprob: -13.87524700164795
    8. '0' → logprob: -14.37524700164795
    9. '
' → logprob: -14.50024700164795
    10. 'Abs' → logprob: -14.75024700164795

Token 1507: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0001818489981815219
    2. 'A' → logprob: -8.750182151794434
    3. '(B' → logprob: -10.750182151794434
    4. '
' → logprob: -14.375182151794434
    5. '(' → logprob: -14.875182151794434
    6. 'B' → logprob: -15.250182151794434
    7. '(
' → logprob: -15.250182151794434
    8. '(a' → logprob: -15.750182151794434
    9. '[A' → logprob: -16.625181198120117
    10. '{' → logprob: -16.750181198120117

Token 1508: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6374785304069519
    2. '(A' → logprob: -0.8874785304069519
    3. 'A' → logprob: -3.2624785900115967
    4. ',' → logprob: -4.137478351593018
    5. '(' → logprob: -5.887478351593018
    6. '(B' → logprob: -6.387478351593018
    7. '(),' → logprob: -8.137478828430176
    8. ',A' → logprob: -8.387478828430176
    9. '()),' → logprob: -8.887478828430176
    10. ')' → logprob: -9.262478828430176

Token 1509: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.625003814697266
    4. '۰' → logprob: -19.875003814697266
    5. ')' → logprob: -21.250003814697266
    6. '０' → logprob: -22.250003814697266
    7. '<|end|>' → logprob: -22.625003814697266
    8. '০' → logprob: -22.750003814697266
    9. '  ' → logprob: -22.875003814697266
    10. '00' → logprob: -23.000003814697266

Token 1510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -14.750019073486328
    4. ')' → logprob: -18.750019073486328
    5. '  ' → logprob: -19.125019073486328
    6. '۰' → logprob: -19.500019073486328
    7. '    ' → logprob: -19.625019073486328
    8. 'EPS' → logprob: -20.000019073486328
    9. '       ' → logprob: -20.500019073486328
    10. '(' → logprob: -20.750019073486328

Token 1511: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22569365799427032
    2. '):
' → logprob: -1.600693702697754
    3. '   ' → logprob: -8.725693702697754
    4. '):
' → logprob: -9.725693702697754
    5. ')' → logprob: -10.225693702697754
    6. '       ' → logprob: -11.975693702697754
    7. ':' → logprob: -12.225693702697754
    8. ' ' → logprob: -12.350693702697754
    9. ':return' → logprob: -13.475693702697754
    10. ':
' → logprob: -13.600693702697754

Token 1512: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7598904967308044
    2. ':
' → logprob: -0.7598904967308044
    3. ':' → logprob: -3.009890556335449
    4. ':return' → logprob: -4.259890556335449
    5. '       ' → logprob: -7.134890556335449
    6. 'return' → logprob: -9.13489055633545
    7. '==' → logprob: -9.13489055633545
    8. ':
' → logprob: -9.88489055633545
    9. '):
' → logprob: -10.88489055633545
    10. '=' → logprob: -11.88489055633545

Token 1513: ' eq' (ID: 18955)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0031443238258361816
    2. 'abs' → logprob: -6.128144264221191
    3. 'not' → logprob: -7.253144264221191
    4. '(eq' → logprob: -8.628144264221191
    5. ' eq' → logprob: -10.253144264221191
    6. 'is' → logprob: -10.503144264221191
    7. '(not' → logprob: -13.128144264221191
    8. '(abs' → logprob: -13.128144264221191
    9. '   ' → logprob: -14.378144264221191
    10. '
' → logprob: -14.378144264221191

Token 1514: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -2.081584716506768e-05
    2. 'abs' → logprob: -10.875020980834961
    3. '(A' → logprob: -14.375020980834961
    4. '(' → logprob: -14.500020980834961
    5. '(B' → logprob: -14.875020980834961
    6. 'B' → logprob: -16.62502098083496
    7. '(ab' → logprob: -16.62502098083496
    8. 'A' → logprob: -16.75002098083496
    9. '((' → logprob: -17.00002098083496
    10. '(
' → logprob: -17.25002098083496

Token 1515: '(B' (ID: 8409)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.38712450861930847
    2. '(B' → logprob: -1.1371245384216309
    3. 'abs' → logprob: -8.387124061584473
    4. '(A' → logprob: -11.887124061584473
    5. '(' → logprob: -12.137124061584473
    6. '(c' → logprob: -12.262124061584473
    7. 'B' → logprob: -12.637124061584473
    8. '((' → logprob: -13.262124061584473
    9. 'cross' → logprob: -14.137124061584473
    10. '(
' → logprob: -14.262124061584473

Token 1516: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001995250815525651
    2. '),' → logprob: -6.626995086669922
    3. '(),' → logprob: -7.376995086669922
    4. '(' → logprob: -10.376995086669922
    5. ' ,' → logprob: -12.501995086669922
    6. 's' → logprob: -13.751995086669922
    7. '(abs' → logprob: -13.876995086669922
    8. '(B' → logprob: -14.376995086669922
    9. '):' → logprob: -14.501995086669922
    10. 'return' → logprob: -14.501995086669922

Token 1517: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.756989700486884e-05
    2. ' ' → logprob: -9.37508773803711
    3. '   ' → logprob: -13.12508773803711
    4. '(' → logprob: -14.50008773803711
    5. 'abs' → logprob: -16.00008773803711
    6. ')' → logprob: -17.25008773803711
    7. '    ' → logprob: -17.50008773803711
    8. '  ' → logprob: -17.50008773803711
    9. '(abs' → logprob: -17.75008773803711
    10. '1' → logprob: -18.25008773803711

Token 1518: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016241880075540394
    2. ' ' → logprob: -8.750162124633789
    3. '   ' → logprob: -13.000162124633789
    4. ')' → logprob: -14.000162124633789
    5. '(' → logprob: -15.500162124633789
    6. ',' → logprob: -16.18766212463379
    7. '  ' → logprob: -16.75016212463379
    8. '),' → logprob: -16.93766212463379
    9. '    ' → logprob: -17.00016212463379
    10. '۰' → logprob: -17.25016212463379

Token 1519: '):' (ID: 3127)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3870408833026886
    2. ':
' → logprob: -1.7620408535003662
    3. '   ' → logprob: -2.387040853500366
    4. '):' → logprob: -3.387040853500366
    5. '):
' → logprob: -3.887040853500366
    6. ':return' → logprob: -6.012041091918945
    7. '       ' → logprob: -8.137041091918945
    8. ')' → logprob: -9.512041091918945
    9. ' :' → logprob: -9.637041091918945
    10. 'return' → logprob: -10.512041091918945

Token 1520: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08271187543869019
    2. 'return' → logprob: -2.582711935043335
    3. ' return' → logprob: -5.582711696624756
    4. 'raise' → logprob: -11.207712173461914
    5. '	return' → logprob: -11.707712173461914
    6. '       ' → logprob: -11.707712173461914
    7. '  ' → logprob: -11.832712173461914
    8. ' ' → logprob: -12.207712173461914
    9. '#' → logprob: -12.707712173461914
    10. '    ' → logprob: -12.957712173461914

Token 1521: ' l' (ID: 305)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.638296365737915
    2. 'l' → logprob: -0.763296365737915
    3. '[]' → logprob: -5.888296127319336
    4. '(None' → logprob: -6.763296127319336
    5. '[l' → logprob: -7.638296127319336
    6. '(l' → logprob: -8.388296127319336
    7. '[' → logprob: -8.638296127319336
    8. '[]
' → logprob: -8.763296127319336
    9. '"' → logprob: -8.888296127319336
    10. 'Line' → logprob: -9.013296127319336

Token 1522: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032050427980720997
    2. '2' → logprob: -5.753204822540283
    3. 'Line' → logprob: -12.128205299377441
    4. '.Point' → logprob: -12.128205299377441
    5. 'Point' → logprob: -12.253205299377441
    6. 'ine' → logprob: -12.503205299377441
    7. '.Line' → logprob: -13.253205299377441
    8. '(Line' → logprob: -13.753205299377441
    9. '(Point' → logprob: -14.128205299377441
    10. 'a' → logprob: -14.253205299377441

Token 1523: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.004307395778596401
    2. 'a' → logprob: -5.504307270050049
    3. '<|end|>' → logprob: -9.004307746887207
    4. '#a' → logprob: -10.129307746887207
    5. '.b' → logprob: -10.879307746887207
    6. 'return' → logprob: -11.629307746887207
    7. '1' → logprob: -11.879307746887207
    8. '  ' → logprob: -12.129307746887207
    9. '<|end|>' → logprob: -12.254307746887207
    10. '
' → logprob: -12.504307746887207

Token 1524: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029829293489456177
    2. 'return' → logprob: -5.877983093261719
    3. '
' → logprob: -9.752983093261719
    4. ' return' → logprob: -10.252983093261719
    5. 'if' → logprob: -10.627983093261719
    6. '#' → logprob: -11.127983093261719
    7. '    
' → logprob: -11.627983093261719
    8. 'def' → logprob: -12.127983093261719
    9. 'None' → logprob: -12.127983093261719
    10. 'A' → logprob: -12.627983093261719

Token 1525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006909078918397427
    2. 'if' → logprob: -5.006908893585205
    3. ' if' → logprob: -9.131909370422363
    4. 'return' → logprob: -9.506909370422363
    5. 'A' → logprob: -13.006909370422363
    6. '    
' → logprob: -13.256909370422363
    7. 'elif' → logprob: -13.381909370422363
    8. ' return' → logprob: -14.006909370422363
    9. 'def' → logprob: -14.006909370422363
    10. 'B' → logprob: -14.131909370422363

Token 1526: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5138296484947205
    2. 't' → logprob: -1.5138297080993652
    3. 'if' → logprob: -2.1388297080993652
    4. '   ' → logprob: -2.8888297080993652
    5. 'x' → logprob: -4.888829708099365
    6. ' return' → logprob: -9.013829231262207
    7. 'else' → logprob: -9.263829231262207
    8. 'u' → logprob: -9.388829231262207
    9. 'ratio' → logprob: -9.513829231262207
    10. 'elif' → logprob: -9.763829231262207

Token 1527: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -4.596781946020201e-05
    2. 'Point' → logprob: -10.125045776367188
    3. ' l' → logprob: -12.625045776367188
    4. 'Line' → logprob: -13.500045776367188
    5. 'line' → logprob: -13.750045776367188
    6. '   ' → logprob: -16.375045776367188
    7. '	l' → logprob: -17.625045776367188
    8. ' Point' → logprob: -17.875045776367188
    9. '(l' → logprob: -18.000045776367188
    10. 'lin' → logprob: -19.875045776367188

Token 1528: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4028724730014801
    2. '1' → logprob: -1.1528724431991577
    3. '.Point' → logprob: -4.652872562408447
    4. 'Point' → logprob: -5.152872562408447
    5. '.l' → logprob: -8.027872085571289
    6. 'l' → logprob: -9.277872085571289
    7. '(Point' → logprob: -9.527872085571289
    8. '.Line' → logprob: -10.902872085571289
    9. 'Line' → logprob: -11.402872085571289
    10. ' Point' → logprob: -11.652872085571289

Token 1529: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -9.448370838072151e-05
    2. 'a' → logprob: -9.500094413757324
    3. '.l' → logprob: -12.500094413757324
    4. 'return' → logprob: -12.500094413757324
    5. '.Point' → logprob: -12.875094413757324
    6. '.b' → logprob: -13.000094413757324
    7. 'Point' → logprob: -13.250094413757324
    8. ' .' → logprob: -13.625094413757324
    9. '.' → logprob: -13.875094413757324
    10. 'point' → logprob: -14.750094413757324

Token 1530: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06202280893921852
    2. ' +' → logprob: -2.8120229244232178
    3. '+(' → logprob: -10.312023162841797
    4. '+
' → logprob: -11.687023162841797
    5. '+A' → logprob: -12.062023162841797
    6. 'A' → logprob: -13.062023162841797
    7. '+B' → logprob: -13.687023162841797
    8. '＋' → logprob: -14.187023162841797
    9. '+l' → logprob: -14.312023162841797
    10. '+\' → logprob: -14.687023162841797

Token 1531: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.010422050021588802
    2. '((' → logprob: -4.760422229766846
    3. '(' → logprob: -7.135422229766846
    4. '(Point' → logprob: -7.135422229766846
    5. 'Point' → logprob: -9.010421752929688
    6. ' (' → logprob: -9.510421752929688
    7. '(L' → logprob: -12.510421752929688
    8. '(x' → logprob: -12.635421752929688
    9. '(((' → logprob: -12.760421752929688
    10. '(ll' → logprob: -13.385421752929688

Token 1532: 'l' (ID: 75)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.22722959518432617
    2. 'l' → logprob: -1.6022295951843262
    3. '((' → logprob: -6.352229595184326
    4. '(' → logprob: -10.227230072021484
    5. ' (' → logprob: -10.977230072021484
    6. 'Point' → logprob: -12.352230072021484
    7. '	l' → logprob: -12.352230072021484
    8. '(((' → logprob: -12.602230072021484
    9. '(Point' → logprob: -13.227230072021484
    10. '   ' → logprob: -13.977230072021484

Token 1533: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0052354102954268456
    2. 'b' → logprob: -6.005235195159912
    3. '1' → logprob: -6.255235195159912
    4. 'l' → logprob: -8.00523567199707
    5. '(l' → logprob: -8.75523567199707
    6. '.b' → logprob: -9.00523567199707
    7. '.l' → logprob: -9.75523567199707
    8. '
' → logprob: -9.88023567199707
    9. '(' → logprob: -10.25523567199707
    10. '(b' → logprob: -10.63023567199707

Token 1534: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -4.60414821645827e-06
    2. 'b' → logprob: -13.125004768371582
    3. '.a' → logprob: -13.375004768371582
    4. '
' → logprob: -14.875004768371582
    5. '	b' → logprob: -15.500004768371582
    6. 'a' → logprob: -15.875004768371582
    7. '```' → logprob: -16.375003814697266
    8. '.' → logprob: -17.125003814697266
    9. 'A' → logprob: -17.375003814697266
    10. '(b' → logprob: -17.750003814697266

Token 1535: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28411251306533813
    2. ' -' → logprob: -1.7841124534606934
    3. '-l' → logprob: -2.5341124534606934
    4. 'l' → logprob: -10.534112930297852
    5. ' ' → logprob: -12.284112930297852
    6. '-
' → logprob: -12.784112930297852
    7. '   ' → logprob: -13.034112930297852
    8. '-p' → logprob: -14.659112930297852
    9. ' l' → logprob: -14.659112930297852
    10. '-b' → logprob: -15.159112930297852

Token 1536: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.173704271830502e-06
    2. ' l' → logprob: -13.00000286102295
    3. '	l' → logprob: -14.87500286102295
    4. '   ' → logprob: -15.25000286102295
    5. '  ' → logprob: -17.125003814697266
    6. 'л' → logprob: -17.750003814697266
    7. ' ' → logprob: -17.812503814697266
    8. '
' → logprob: -18.062503814697266
    9. '       ' → logprob: -18.062503814697266
    10. ' л' → logprob: -18.312503814697266

Token 1537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003630481194704771
    2. 'l' → logprob: -5.628630638122559
    3. 'a' → logprob: -10.753630638122559
    4. '1' → logprob: -12.128630638122559
    5. ' l' → logprob: -13.128630638122559
    6. '.l' → logprob: -14.753630638122559
    7. ' ' → logprob: -15.128630638122559
    8. '	l' → logprob: -15.628630638122559
    9. '２' → logprob: -16.628629684448242
    10. ''l' → logprob: -16.816129684448242

Token 1538: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -5.204720582696609e-05
    2. 'a' → logprob: -9.875052452087402
    3. '.l' → logprob: -15.125052452087402
    4. '.b' → logprob: -16.000051498413086
    5. ')a' → logprob: -16.375051498413086
    6. '	a' → logprob: -17.500051498413086
    7. '.' → logprob: -17.750051498413086
    8. ''a' → logprob: -18.250051498413086
    9. '#a' → logprob: -18.500051498413086
    10. '1' → logprob: -18.625051498413086

Token 1539: ')' (ID: 8)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17295314371585846
    2. '*(' → logprob: -2.0479531288146973
    3. ')' → logprob: -4.172953128814697
    4. ')*' → logprob: -4.422953128814697
    5. ')*(' → logprob: -6.297953128814697
    6. '*((' → logprob: -8.172953605651855
    7. '*A' → logprob: -8.922953605651855
    8. '*)' → logprob: -9.172953605651855
    9. ' *' → logprob: -10.172953605651855
    10. '**' → logprob: -11.922953605651855

Token 1540: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07972858101129532
    2. '*(' → logprob: -2.579728603363037
    3. '*((' → logprob: -7.204728603363037
    4. ' *' → logprob: -9.454728126525879
    5. '*A' → logprob: -11.704728126525879
    6. '```' → logprob: -12.204728126525879
    7. '*(-' → logprob: -13.954728126525879
    8. '**' → logprob: -14.454728126525879
    9. '()*' → logprob: -15.329728126525879
    10. '*b' → logprob: -15.704728126525879

Token 1541: ' B' (ID: 418)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.008630049414932728
    2. 'B' → logprob: -4.758630275726318
    3. '(' → logprob: -12.38362979888916
    4. '(c' → logprob: -12.50862979888916
    5. 'cross' → logprob: -12.63362979888916
    6. 'float' → logprob: -13.63362979888916
    7. ' (' → logprob: -13.75862979888916
    8. '(float' → logprob: -14.38362979888916
    9. '((' → logprob: -15.00862979888916
    10. 'c' → logprob: -15.25862979888916

Token 1542: ' /' (ID: 820)
  Prédit: '/B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/B' → logprob: -0.22697965800762177
    2. '/A' → logprob: -1.7269796133041382
    3. '/' → logprob: -3.8519797325134277
    4. 'A' → logprob: -6.351979732513428
    5. ' /' → logprob: -7.351979732513428
    6. '(A' → logprob: -7.976979732513428
    7. '/(' → logprob: -8.10197925567627
    8. '(' → logprob: -8.22697925567627
    9. '/
' → logprob: -9.10197925567627
    10. '/usr' → logprob: -9.10197925567627

Token 1543: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: 0.0
    2. ' A' → logprob: -19.25
    3. '	A' → logprob: -21.0
    4. '-A' → logprob: -22.875
    5. '-' → logprob: -23.25
    6. 'float' → logprob: -24.0
    7. 'Ａ' → logprob: -24.0
    8. '(A' → logprob: -24.625
    9. 'a' → logprob: -24.75
    10. '>A' → logprob: -25.0

Token 1544: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08447767794132233
    2. '<|end|>' → logprob: -2.834477663040161
    3. ')' → logprob: -3.959477663040161
    4. '#' → logprob: -6.20947790145874
    5. '<|end|>' → logprob: -7.58447790145874
    6. '```' → logprob: -8.959477424621582
    7. ' def' → logprob: -8.959477424621582
    8. '
' → logprob: -9.334477424621582
    9. '[' → logprob: -10.084477424621582
    10. '.' → logprob: -10.084477424621582

Token 1545: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '#' → logprob: -17.0
    3. 'return' → logprob: -17.25
    4. '
' → logprob: -17.625
    5. ' def' → logprob: -19.0
    6. '   ' → logprob: -21.0
    7. 'pass' → logprob: -22.25
    8. 'from' → logprob: -22.375
    9. '```' → logprob: -22.375
    10. '0' → logprob: -22.875

Token 1546: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0032159762922674417
    2. 'is' → logprob: -6.628215789794922
    3. 'inter' → logprob: -7.378215789794922
    4. 'distance' → logprob: -7.503215789794922
    5. 'intersection' → logprob: -7.628215789794922
    6. 'cc' → logprob: -9.628215789794922
    7. 'projection' → logprob: -10.128215789794922
    8. ' cross' → logprob: -10.253215789794922
    9. 'line' → logprob: -11.003215789794922
    10. 'circle' → logprob: -11.753215789794922

Token 1547: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -3.7697225252486533e-06
    2. 'points' → logprob: -13.000003814697266
    3. 'line' → logprob: -14.000003814697266
    4. '_point' → logprob: -16.125003814697266
    5. 'po' → logprob: -16.250003814697266
    6. 'product' → logprob: -16.500003814697266
    7. '(point' → logprob: -16.625003814697266
    8. '
' → logprob: -17.000003814697266
    9. 'vector' → logprob: -17.125003814697266
    10. 'pair' → logprob: -17.500003814697266

Token 1548: '_ss' (ID: 61028)
  Prédit: '_ll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ll' → logprob: -0.21349385380744934
    2. '_ls' → logprob: -2.213493824005127
    3. '_ss' → logprob: -2.713493824005127
    4. 'll' → logprob: -4.963493824005127
    5. 'ss' → logprob: -5.588493824005127
    6. '_lp' → logprob: -5.963493824005127
    7. '_cc' → logprob: -6.713493824005127
    8. 'ls' → logprob: -7.213493824005127
    9. '_sp' → logprob: -7.463493824005127
    10. '_cl' → logprob: -7.963493824005127

Token 1549: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.2664456789934775e-06
    2. 's' → logprob: -14.250000953674316
    3. 'def' → logprob: -14.625000953674316
    4. '(
' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '(' → logprob: -18.250001907348633
    7. '(S' → logprob: -19.375001907348633
    8. ' (' → logprob: -19.375001907348633
    9. '#' → logprob: -19.625001907348633
    10. '(a' → logprob: -19.625001907348633

Token 1550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02604341320693493
    2. '(s' → logprob: -3.77604341506958
    3. 's' → logprob: -5.90104341506958
    4. ' s' → logprob: -10.526042938232422
    5. ',' → logprob: -10.776042938232422
    6. '```' → logprob: -12.651042938232422
    7. 'def' → logprob: -13.401042938232422
    8. ',s' → logprob: -13.526042938232422
    9. '):
' → logprob: -14.276042938232422
    10. '(S' → logprob: -14.651042938232422

Token 1551: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47424647212028503
    2. '(s' → logprob: -0.9742465019226074
    3. 's' → logprob: -9.09924602508545
    4. ',s' → logprob: -10.22424602508545
    5. ' s' → logprob: -10.97424602508545
    6. ' ,' → logprob: -13.22424602508545
    7. ')' → logprob: -14.59924602508545
    8. 'def' → logprob: -14.84924602508545
    9. '#' → logprob: -15.22424602508545
    10. ' (' → logprob: -15.34924602508545

Token 1552: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.4849443838757e-06
    2. ' s' → logprob: -12.375004768371582
    3. '(s' → logprob: -15.875004768371582
    4. 'ss' → logprob: -19.875003814697266
    5. '   ' → logprob: -20.000003814697266
    6. 'def' → logprob: -20.625003814697266
    7. ')' → logprob: -20.875003814697266
    8. '```' → logprob: -21.500003814697266
    9. '`s' → logprob: -21.500003814697266
    10. '	s' → logprob: -21.750003814697266

Token 1553: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.947715832618997e-05
    2. '2' → logprob: -9.375089645385742
    3. '```' → logprob: -13.000089645385742
    4. 's' → logprob: -13.875089645385742
    5. 'def' → logprob: -15.000089645385742
    6. ' ' → logprob: -15.375089645385742
    7. ' s' → logprob: -15.375089645385742
    8. '(s' → logprob: -16.250089645385742
    9. ',' → logprob: -16.375089645385742
    10. '{
' → logprob: -16.875089645385742

Token 1554: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2519921064376831
    2. '):' → logprob: -1.501992106437683
    3. '):
' → logprob: -10.376992225646973
    4. ')' → logprob: -11.126992225646973
    5. '):

' → logprob: -11.126992225646973
    6. '():
' → logprob: -14.126992225646973
    7. '(s' → logprob: -14.501992225646973
    8. '   ' → logprob: -15.001992225646973
    9. 'def' → logprob: -15.251992225646973
    10. '(' → logprob: -15.251992225646973

Token 1555: '   ' (ID: 271)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5990856289863586
    2. 'if' → logprob: -0.9740856289863586
    3. 'return' → logprob: -3.349085569381714
    4. 'p' → logprob: -3.474085569381714
    5. '   ' → logprob: -6.099085807800293
    6. 'a' → logprob: -6.599085807800293
    7. 'A' → logprob: -6.724085807800293
    8. 'cp' → logprob: -7.599085807800293
    9. 'c' → logprob: -7.724085807800293
    10. 'd' → logprob: -8.349085807800293

Token 1556: ' return' (ID: 622)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9701403975486755
    2. 'return' (adapté à ' return') → logprob: -1.3451404571533203
    3. 'p' → logprob: -1.4701404571533203
    4. 'cp' → logprob: -3.0951404571533203
    5. 'if' → logprob: -3.3451404571533203
    6. 'a' → logprob: -4.09514045715332
    7. 'c' → logprob: -4.72014045715332
    8. 'd' → logprob: -4.84514045715332
    9. 'A' → logprob: -5.34514045715332
    10. 'cross' → logprob: -5.47014045715332

Token 1557: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0005355171160772443
    2. ' cross' → logprob: -7.625535488128662
    3. 'None' → logprob: -10.62553596496582
    4. '   ' → logprob: -12.12553596496582
    5. 'Cross' → logprob: -12.25053596496582
    6. 'Segment' → logprob: -12.87553596496582
    7. 'Point' → logprob: -13.25053596496582
    8. 'is' → logprob: -13.37553596496582
    9. 's' → logprob: -13.62553596496582
    10. 'intersection' → logprob: -14.12553596496582

Token 1558: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.11046531051397324
    2. '(s' → logprob: -2.3604652881622314
    3. 's' → logprob: -4.6104655265808105
    4. 'Point' → logprob: -9.235465049743652
    5. '(' → logprob: -10.360465049743652
    6. 'points' → logprob: -10.985465049743652
    7. '_point' → logprob: -11.110465049743652
    8. '1' → logprob: -11.235465049743652
    9. 'product' → logprob: -11.360465049743652
    10. 'line' → logprob: -11.485465049743652

Token 1559: '_ll' (ID: 105142)
  Prédit: '_ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.3201301097869873
    2. '(s' → logprob: -1.5701301097869873
    3. '_ll' → logprob: -2.8201301097869873
    4. '_s' → logprob: -6.070130348205566
    5. 'ss' → logprob: -6.445130348205566
    6. 's' → logprob: -6.820130348205566
    7. '(ss' → logprob: -8.195130348205566
    8. '(l' → logprob: -8.320130348205566
    9. '(' → logprob: -8.570130348205566
    10. '_ls' → logprob: -8.570130348205566

Token 1560: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0015473603270947933
    2. '(' → logprob: -6.501547336578369
    3. '<|end|>' → logprob: -10.876547813415527
    4. '(S' → logprob: -11.126547813415527
    5. 's' → logprob: -12.126547813415527
    6. '(Line' → logprob: -13.376547813415527
    7. ' (' → logprob: -13.751547813415527
    8. '(Point' → logprob: -14.126547813415527
    9. '(Token' → logprob: -14.251547813415527
    10. '(
' → logprob: -14.376547813415527

Token 1561: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 's' → logprob: -17.375
    3. '１' → logprob: -17.5
    4. '```' → logprob: -18.5
    5. '(s' → logprob: -19.0
    6. 'def' → logprob: -19.0
    7. ' ' → logprob: -19.0
    8. 'egment' → logprob: -19.5
    9. 'class' → logprob: -20.1875
    10. '...' → logprob: -20.1875

Token 1562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005971454083919525
    2. ',s' → logprob: -5.505971431732178
    3. '.s' → logprob: -6.630971431732178
    4. 's' → logprob: -8.130971908569336
    5. ',b' → logprob: -8.880971908569336
    6. ',a' → logprob: -10.130971908569336
    7. 'a' → logprob: -10.630971908569336
    8. 'b' → logprob: -11.005971908569336
    9. '.b' → logprob: -11.255971908569336
    10. ' ,' → logprob: -11.505971908569336

Token 1563: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8624639324116288e-06
    2. ' s' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '(s' → logprob: -21.375001907348633
    5. '	s' → logprob: -22.000001907348633
    6. ')' → logprob: -22.250001907348633
    7. '<s' → logprob: -22.250001907348633
    8. '{s' → logprob: -22.875001907348633
    9. '`s' → logprob: -23.125001907348633
    10. '_s' → logprob: -23.375001907348633

Token 1564: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -14.375000953674316
    3. 'def' → logprob: -18.625
    4. '```' → logprob: -19.5
    5. 't' → logprob: -19.625
    6. 'return' → logprob: -20.0
    7. '   ' → logprob: -20.25
    8. 'c' → logprob: -20.5
    9. '۲' → logprob: -20.5
    10. '[' → logprob: -20.625

Token 1565: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017159747949335724
    2. 's' → logprob: -9.125171661376953
    3. ')s' → logprob: -10.750171661376953
    4. ').' → logprob: -11.750171661376953
    5. '(s' → logprob: -11.750171661376953
    6. ')
' → logprob: -11.875171661376953
    7. ')(' → logprob: -12.750171661376953
    8. '())' → logprob: -13.000171661376953
    9. ').__' → logprob: -13.125171661376953
    10. ')[' → logprob: -13.250171661376953

Token 1566: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.5577775128767826e-06
    2. 'return' → logprob: -12.250005722045898
    3. ' def' → logprob: -14.875005722045898
    4. '   ' → logprob: -15.750005722045898
    5. 'c' → logprob: -16.6250057220459
    6. '
' → logprob: -16.8750057220459
    7. '```' → logprob: -16.8750057220459
    8. '#' → logprob: -17.7500057220459
    9. 's' → logprob: -17.8750057220459
    10. 'if' → logprob: -19.0000057220459

Token 1567: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.06452957540750504
    2. 'is' → logprob: -3.5645296573638916
    3. 'distance' → logprob: -3.5645296573638916
    4. 'inter' → logprob: -6.0645294189453125
    5. 'intersection' → logprob: -6.1895294189453125
    6. 'cc' → logprob: -7.1895294189453125
    7. ' cross' → logprob: -9.314529418945312
    8. 'line' → logprob: -9.314529418945312
    9. 'projection' → logprob: -9.314529418945312
    10. ' is' → logprob: -10.064529418945312

Token 1568: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -8.2994620242971e-06
    2. 'points' → logprob: -12.500008583068848
    3. 'line' → logprob: -13.250008583068848
    4. 'product' → logprob: -13.875008583068848
    5. '_point' → logprob: -15.000008583068848
    6. 'p' → logprob: -15.000008583068848
    7. 'po' → logprob: -15.625008583068848
    8. 's' → logprob: -15.875008583068848
    9. '
' → logprob: -15.875008583068848
    10. '```' → logprob: -15.875008583068848

Token 1569: '_l' (ID: 1478)
  Prédit: '_ls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ls' → logprob: -0.02407919242978096
    2. 'ls' → logprob: -3.7740790843963623
    3. '_ll' → logprob: -7.399079322814941
    4. '_sl' → logprob: -9.649079322814941
    5. '(ls' → logprob: -9.774079322814941
    6. 'LS' → logprob: -10.649079322814941
    7. 'sl' → logprob: -10.899079322814941
    8. 'll' → logprob: -11.024079322814941
    9. 'Line' → logprob: -11.399079322814941
    10. '```' → logprob: -12.024079322814941

Token 1570: 'c' (ID: 66)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02335553802549839
    2. 'l' → logprob: -3.773355484008789
    3. 'p' → logprob: -9.398355484008789
    4. 'ine' → logprob: -11.398355484008789
    5. 'ls' → logprob: -12.148355484008789
    6. '1' → logprob: -13.023355484008789
    7. '
' → logprob: -13.398355484008789
    8. 'sp' → logprob: -13.648355484008789
    9. 'ist' → logprob: -13.773355484008789
    10. 'lp' → logprob: -13.898355484008789

Token 1571: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -8.41866585687967e-06
    2. '(line' → logprob: -12.500008583068848
    3. '(' → logprob: -12.875008583068848
    4. 'def' → logprob: -13.625008583068848
    5. 'l' → logprob: -14.875008583068848
    6. '(c' → logprob: -15.875008583068848
    7. '(s' → logprob: -16.12500762939453
    8. 'c' → logprob: -16.50000762939453
    9. '(p' → logprob: -17.12500762939453
    10. '()' → logprob: -17.62500762939453

Token 1572: ',' (ID: 11)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02524377964437008
    2. 'l' → logprob: -4.275243759155273
    3. ',' → logprob: -4.650243759155273
    4. '(l' → logprob: -7.400243759155273
    5. 'def' → logprob: -7.900243759155273
    6. ')' → logprob: -8.525243759155273
    7. '(c' → logprob: -9.150243759155273
    8. '):
' → logprob: -10.275243759155273
    9. ' c' → logprob: -10.400243759155273
    10. ',l' → logprob: -10.525243759155273

Token 1573: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.7432603272027336e-06
    2. ' c' → logprob: -13.375001907348633
    3. 'circle' → logprob: -16.125001907348633
    4. '   ' → logprob: -18.500001907348633
    5. '(c' → logprob: -18.500001907348633
    6. '	c' → logprob: -19.000001907348633
    7. 'def' → logprob: -19.875001907348633
    8. 'cir' → logprob: -20.000001907348633
    9. ')c' → logprob: -20.375001907348633
    10. ')' → logprob: -20.625001907348633

Token 1574: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2985337972640991
    2. '):' → logprob: -1.4235337972640991
    3. '(c' → logprob: -4.173533916473389
    4. ')' → logprob: -7.423533916473389
    5. 'def' → logprob: -7.673533916473389
    6. '(p' → logprob: -8.42353343963623
    7. ':' → logprob: -8.54853343963623
    8. 'c' → logprob: -9.54853343963623
    9. '):
' → logprob: -9.54853343963623
    10. '):

' → logprob: -9.79853343963623

Token 1575: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3044224679470062
    2. 'p' → logprob: -1.6794224977493286
    3. 'a' → logprob: -3.304422378540039
    4. 't' → logprob: -3.929422378540039
    5. '   ' → logprob: -4.929422378540039
    6. 'dp' → logprob: -5.804422378540039
    7. 'h' → logprob: -6.429422378540039
    8. 'vec' → logprob: -6.429422378540039
    9. 'b' → logprob: -6.554422378540039
    10. 'q' → logprob: -7.304422378540039

Token 1576: ' p' (ID: 275)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.07561374455690384
    2. 'a' → logprob: -3.3256137371063232
    3. 'p' (adapté à ' p') → logprob: -3.8256137371063232
    4. 'dp' → logprob: -5.950613975524902
    5. 'q' → logprob: -6.075613975524902
    6. 'h' → logprob: -6.200613975524902
    7. 't' → logprob: -6.325613975524902
    8. 'vec' → logprob: -6.700613975524902
    9. 'r' → logprob: -7.200613975524902
    10. 'b' → logprob: -7.700613975524902

Token 1577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9123784303665161
    2. 'ro' → logprob: -1.2873784303665161
    3. ' =' → logprob: -1.4123784303665161
    4. 'roj' → logprob: -3.1623783111572266
    5. 'r' → logprob: -3.4123783111572266
    6. 'a' → logprob: -6.662378311157227
    7. 'l' → logprob: -7.787378311157227
    8. '   ' → logprob: -7.912378311157227
    9. 'p' → logprob: -8.162378311157227
    10. '=l' → logprob: -8.287378311157227

Token 1578: ' projection' (ID: 41244)
  Prédit: 'projection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'projection' → logprob: -0.0003728774609044194
    2. 'l' → logprob: -8.125372886657715
    3. 'Projection' → logprob: -10.250372886657715
    4. ' projection' → logprob: -10.500372886657715
    5. 'project' → logprob: -12.000372886657715
    6. 'reflection' → logprob: -12.875372886657715
    7. 'cross' → logprob: -13.625372886657715
    8. 'proj' → logprob: -13.750372886657715
    9. 'c' → logprob: -14.250372886657715
    10. 'closest' → logprob: -14.500372886657715

Token 1579: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.0683535037969705e-05
    2. 'l' → logprob: -11.50001049041748
    3. '[l' → logprob: -15.87501049041748
    4. '(' → logprob: -16.250011444091797
    5. '(line' → logprob: -16.625011444091797
    6. '	l' → logprob: -16.750011444091797
    7. '(
' → logprob: -18.375011444091797
    8. 'line' → logprob: -19.000011444091797
    9. ' l' → logprob: -19.500011444091797
    10. 'c' → logprob: -19.625011444091797

Token 1580: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02242821455001831
    2. '(l' → logprob: -4.022428035736084
    3. 'def' → logprob: -7.272428035736084
    4. '(p' → logprob: -7.272428035736084
    5. ',l' → logprob: -7.272428035736084
    6. '(c' → logprob: -7.522428035736084
    7. ')' → logprob: -7.647428035736084
    8. 'p' → logprob: -8.147428512573242
    9. 'c' → logprob: -8.272428512573242
    10. ' l' → logprob: -8.897428512573242

Token 1581: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.896309739408025e-07
    2. ' c' → logprob: -14.625000953674316
    3. 'Point' → logprob: -15.875000953674316
    4. 'l' → logprob: -16.25
    5. '	c' → logprob: -17.625
    6. '(c' → logprob: -19.25
    7. ')c' → logprob: -19.875
    8. 'Circle' → logprob: -20.0
    9. '[c' → logprob: -20.125
    10. 'circle' → logprob: -20.625

Token 1582: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.6240566083070007e-06
    2. 'p' → logprob: -13.375001907348633
    3. '.' → logprob: -16.875001907348633
    4. '<p' → logprob: -18.000001907348633
    5. '
' → logprob: -19.750001907348633
    6. '	p' → logprob: -20.125001907348633
    7. '(p' → logprob: -20.125001907348633
    8. ').' → logprob: -20.500001907348633
    9. '```' → logprob: -20.750001907348633
    10. ' .' → logprob: -20.750001907348633

Token 1583: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5516840219497681
    2. ')
' → logprob: -1.426684021949768
    3. '   ' → logprob: -1.926684021949768
    4. 'def' → logprob: -3.5516839027404785
    5. 'return' → logprob: -5.5516839027404785
    6. 'l' → logprob: -6.3016839027404785
    7. ' l' → logprob: -6.5516839027404785
    8. 'p' → logprob: -7.3016839027404785
    9. '(l' → logprob: -7.6766839027404785
    10. ' return' → logprob: -7.9266839027404785

Token 1584: '   ' (ID: 271)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.7893289923667908
    2. 'd' → logprob: -1.2893290519714355
    3. 'e' → logprob: -1.4143290519714355
    4. 'q' → logprob: -3.9143290519714355
    5. '   ' → logprob: -6.0393290519714355
    6. 'dt' → logprob: -6.5393290519714355
    7. 'dp' → logprob: -7.2893290519714355
    8. 'dist' → logprob: -7.4143290519714355
    9. 't' → logprob: -8.039328575134277
    10. 'r' → logprob: -8.039328575134277

Token 1585: ' if' (ID: 538)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.023527763783931732
    2. 'h' → logprob: -4.0235276222229
    3. 'base' → logprob: -6.1485276222229
    4. 'd' → logprob: -6.6485276222229
    5. 'len' → logprob: -7.5235276222229
    6. 'if' (adapté à ' if') → logprob: -8.398528099060059
    7. 'dis' → logprob: -8.898528099060059
    8. 'ab' → logprob: -8.898528099060059
    9. 'length' → logprob: -9.023528099060059
    10. 't' → logprob: -9.148528099060059

Token 1586: ' eq' (ID: 18955)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.2721853256225586
    2. 'distance' → logprob: -1.6471853256225586
    3. 'eq' → logprob: -3.3971853256225586
    4. 'is' → logprob: -4.647185325622559
    5. 'c' → logprob: -6.147185325622559
    6. '(abs' → logprob: -8.522185325622559
    7. ' abs' → logprob: -10.022185325622559
    8. '(eq' → logprob: -10.022185325622559
    9. 'not' → logprob: -10.147185325622559
    10. '(c' → logprob: -10.397185325622559

Token 1587: '(distance' (ID: 105203)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.20191046595573425
    2. '(distance' → logprob: -1.7019104957580566
    3. 'abs' → logprob: -8.076910018920898
    4. 'distance' → logprob: -8.951910018920898
    5. '(c' → logprob: -9.951910018920898
    6. '(p' → logprob: -13.326910018920898
    7. '(dist' → logprob: -13.326910018920898
    8. '((' → logprob: -13.451910018920898
    9. '(' → logprob: -13.701910018920898
    10. '(d' → logprob: -14.076910018920898

Token 1588: '_lp' (ID: 174192)
  Prédit: '_lp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lp' → logprob: -0.07890091091394424
    2. 'lp' → logprob: -2.5789008140563965
    3. '_pp' → logprob: -12.453901290893555
    4. 'pp' → logprob: -13.078901290893555
    5. '(lp' → logprob: -13.578901290893555
    6. 'LP' → logprob: -13.953901290893555
    7. '	lp' → logprob: -14.453901290893555
    8. '_cp' → logprob: -14.828901290893555
    9. '_ll' → logprob: -14.828901290893555
    10. '_pc' → logprob: -14.828901290893555

Token 1589: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -8.537868779967539e-06
    2. 'l' → logprob: -11.750008583068848
    3. '(' → logprob: -15.125008583068848
    4. '	l' → logprob: -16.62500762939453
    5. '[l' → logprob: -17.12500762939453
    6. 'def' → logprob: -17.75000762939453
    7. ',l' → logprob: -18.12500762939453
    8. '(line' → logprob: -18.62500762939453
    9. ' (' → logprob: -18.62500762939453
    10. ')' → logprob: -18.75000762939453

Token 1590: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011607808992266655
    2. ',p' → logprob: -5.261607646942139
    3. 'p' → logprob: -6.011607646942139
    4. '(p' → logprob: -6.136607646942139
    5. ',l' → logprob: -6.761607646942139
    6. '(l' → logprob: -7.636607646942139
    7. ',c' → logprob: -10.636608123779297
    8. ' ,' → logprob: -10.886608123779297
    9. '(' → logprob: -10.886608123779297
    10. 'l' → logprob: -11.136608123779297

Token 1591: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00015217094914987683
    2. ' c' → logprob: -9.125152587890625
    3. 'p' → logprob: -10.250152587890625
    4. '
' → logprob: -12.750152587890625
    5. 'Point' → logprob: -13.375152587890625
    6. '   ' → logprob: -14.000152587890625
    7. '(c' → logprob: -14.125152587890625
    8. '	c' → logprob: -14.375152587890625
    9. '[c' → logprob: -14.500152587890625
    10. ')c' → logprob: -15.875152587890625

Token 1592: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.286852345103398e-05
    2. ')' → logprob: -10.375042915344238
    3. 'p' → logprob: -12.500042915344238
    4. '.' → logprob: -12.875042915344238
    5. '),' → logprob: -12.875042915344238
    6. '```' → logprob: -14.500042915344238
    7. ' .' → logprob: -14.625042915344238
    8. '
' → logprob: -14.875042915344238
    9. ').' → logprob: -15.375042915344238
    10. ',' → logprob: -15.500042915344238

Token 1593: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.20685353875160217
    2. ',' → logprob: -2.3318536281585693
    3. '(),' → logprob: -2.5818536281585693
    4. '(p' → logprob: -4.95685338973999
    5. 'p' → logprob: -6.20685338973999
    6. '()),' → logprob: -6.20685338973999
    7. ')' → logprob: -6.70685338973999
    8. '()' → logprob: -7.20685338973999
    9. '(c' → logprob: -7.95685338973999
    10. '   ' → logprob: -7.95685338973999

Token 1594: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.017113160341978073
    2. '0' → logprob: -4.142113208770752
    3. ' c' → logprob: -6.892113208770752
    4. ' ' → logprob: -10.267112731933594
    5. '	c' → logprob: -12.142112731933594
    6. '   ' → logprob: -12.142112731933594
    7. 'abs' → logprob: -12.392112731933594
    8. ')c' → logprob: -12.517112731933594
    9. 'None' → logprob: -13.267112731933594
    10. '1' → logprob: -13.767112731933594

Token 1595: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00011343709047650918
    2. 'r' → logprob: -9.125113487243652
    3. '.' → logprob: -12.750113487243652
    4. ' r' → logprob: -14.375113487243652
    5. '	r' → logprob: -14.375113487243652
    6. '.p' → logprob: -16.125112533569336
    7. '
' → logprob: -16.250112533569336
    8. ',r' → logprob: -16.750112533569336
    9. ' .' → logprob: -17.250112533569336
    10. ' ' → logprob: -17.875112533569336

Token 1596: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023050954565405846
    2. '):
' → logprob: -3.8980510234832764
    3. ')' → logprob: -6.148050785064697
    4. '+' → logprob: -8.648051261901855
    5. '):
' → logprob: -9.523051261901855
    6. '   ' → logprob: -10.148051261901855
    7. ' ):' → logprob: -10.273051261901855
    8. '0' → logprob: -11.898051261901855
    9. '()' → logprob: -12.273051261901855
    10. ' ' → logprob: -12.273051261901855

Token 1597: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38760125637054443
    2. 'return' → logprob: -1.1376012563705444
    3. ' return' → logprob: -7.637601375579834
    4. '       ' → logprob: -8.387600898742676
    5. '	return' → logprob: -11.262600898742676
    6. ' ' → logprob: -12.637600898742676
    7. '  ' → logprob: -13.012600898742676
    8. '    ' → logprob: -14.637600898742676
    9. '
' → logprob: -15.012600898742676
    10. '   ' → logprob: -15.137600898742676

Token 1598: ' [' (ID: 723)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31824782490730286
    2. '[p' → logprob: -1.3182477951049805
    3. '[' → logprob: -5.3182477951049805
    4. 'Point' → logprob: -10.06824779510498
    5. '[c' → logprob: -11.56824779510498
    6. ' [' → logprob: -12.31824779510498
    7. '[(' → logprob: -12.44324779510498
    8. '[
' → logprob: -12.44324779510498
    9. '(p' → logprob: -12.94324779510498
    10. '[]
' → logprob: -13.56824779510498

Token 1599: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.6240566083070007e-06
    2. 'projection' → logprob: -13.750001907348633
    3. ' p' → logprob: -15.125001907348633
    4. '[p' → logprob: -16.625001907348633
    5. '[' → logprob: -17.250001907348633
    6. 'Point' → logprob: -17.625001907348633
    7. '
' → logprob: -17.875001907348633
    8. '	p' → logprob: -18.000001907348633
    9. 'cross' → logprob: -18.375001907348633
    10. 'point' → logprob: -18.625001907348633

Token 1600: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5428184866905212
    2. ',' → logprob: -1.042818546295166
    3. ']
' → logprob: -2.917818546295166
    4. ',p' → logprob: -4.417818546295166
    5. '   ' → logprob: -8.542818069458008
    6. ']
' → logprob: -10.417818069458008
    7. ']

' → logprob: -10.542818069458008
    8. ' ]' → logprob: -11.042818069458008
    9. ' ,' → logprob: -11.167818069458008
    10. ' ' → logprob: -11.792818069458008

Token 1601: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030578780570067465
    2. 'd' → logprob: -8.625306129455566
    3. '
' → logprob: -10.250306129455566
    4. 'if' → logprob: -10.500306129455566
    5. 'return' → logprob: -11.125306129455566
    6. '    
' → logprob: -11.375306129455566
    7. 't' → logprob: -11.625306129455566
    8. 'r' → logprob: -12.000306129455566
    9. ' if' → logprob: -12.750306129455566
    10. 'v' → logprob: -12.875306129455566

Token 1602: ' e' (ID: 319)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.028363168239593506
    2. 'if' → logprob: -4.403363227844238
    3. 't' → logprob: -5.278363227844238
    4. 'h' → logprob: -5.528363227844238
    5. 'else' → logprob: -5.903363227844238
    6. 'elif' → logprob: -6.278363227844238
    7. 'dist' → logprob: -8.153363227844238
    8. 'l' → logprob: -8.153363227844238
    9. 'e' (adapté à ' e') → logprob: -8.278363227844238
    10. 'dis' → logprob: -8.528363227844238

Token 1603: ' =' (ID: 314)
  Prédit: 'psilon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'psilon' → logprob: -0.9507148861885071
    2. 'ps' → logprob: -1.7007148265838623
    3. 'x' → logprob: -2.2007148265838623
    4. 'm' → logprob: -3.4507148265838623
    5. 'p' → logprob: -3.4507148265838623
    6. 's' → logprob: -3.7007148265838623
    7. 'rr' → logprob: -3.8257148265838623
    8. '=' → logprob: -4.075715065002441
    9. 'dx' → logprob: -4.200715065002441
    10. 'lse' → logprob: -4.325715065002441

Token 1604: ' (' (ID: 350)
  Prédit: 'Rotation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rotation' → logprob: -0.2979918420314789
    2. '(R' → logprob: -1.7979918718338013
    3. '(l' → logprob: -2.5479917526245117
    4. '(s' → logprob: -4.797991752624512
    5. '((' → logprob: -6.047991752624512
    6. '(Point' → logprob: -7.047991752624512
    7. '(c' → logprob: -7.172991752624512
    8. '(math' → logprob: -8.172991752624512
    9. '(Line' → logprob: -8.422991752624512
    10. '(p' → logprob: -8.547991752624512

Token 1605: 'l' (ID: 75)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.998947024345398
    2. '(l' → logprob: -1.123947024345398
    3. 'c' → logprob: -1.748947024345398
    4. '(Point' → logprob: -2.7489471435546875
    5. 'l' → logprob: -2.9989471435546875
    6. 'Point' → logprob: -5.1239471435546875
    7. '(p' → logprob: -5.4989471435546875
    8. '((' → logprob: -5.7489471435546875
    9. 'p' → logprob: -6.2489471435546875
    10. '(Line' → logprob: -6.6239471435546875

Token 1606: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.00032521432149223983
    2. '.a' → logprob: -8.125325202941895
    3. 'b' → logprob: -10.500325202941895
    4. 'a' → logprob: -14.375325202941895
    5. '.' → logprob: -14.375325202941895
    6. '
' → logprob: -15.625325202941895
    7. '   ' → logprob: -16.25032615661621
    8. ' .' → logprob: -16.50032615661621
    9. '_b' → logprob: -17.50032615661621
    10. '	b' → logprob: -17.75032615661621

Token 1607: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.45306238532066345
    2. ' -' → logprob: -1.7030624151229858
    3. '-l' → logprob: -1.7030624151229858
    4. '-p' → logprob: -9.828062057495117
    5. '-
' → logprob: -11.453062057495117
    6. ' ' → logprob: -12.953062057495117
    7. '   ' → logprob: -13.078062057495117
    8. '-e' → logprob: -14.328062057495117
    9. 'l' → logprob: -14.828062057495117
    10. ' -
' → logprob: -15.203062057495117

Token 1608: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.392202976712724e-06
    2. ' l' → logprob: -12.000006675720215
    3. '	l' → logprob: -15.750006675720215
    4. '   ' → logprob: -16.7500057220459
    5. '<|end|>' → logprob: -17.7500057220459
    6. '  ' → logprob: -19.3750057220459
    7. '(l' → logprob: -19.3750057220459
    8. ' ' → logprob: -19.7500057220459
    9. ' ' → logprob: -20.1250057220459
    10. 'л' → logprob: -20.5000057220459

Token 1609: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.006716913543641567
    2. 'a' → logprob: -5.006716728210449
    3. '.b' → logprob: -14.50671672821045
    4. '.l' → logprob: -15.00671672821045
    5. '	a' → logprob: -15.50671672821045
    6. ' a' → logprob: -16.131717681884766
    7. '#a' → logprob: -16.256717681884766
    8. 'b' → logprob: -17.006717681884766
    9. '.' → logprob: -17.131717681884766
    10. 'l' → logprob: -17.381717681884766

Token 1610: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10751409083604813
    2. ')*(' → logprob: -2.3575141429901123
    3. ').' → logprob: -5.482513904571533
    4. ')*' → logprob: -5.857513904571533
    5. ')/' → logprob: -8.482514381408691
    6. '*(' → logprob: -10.482514381408691
    7. ')/(' → logprob: -10.857514381408691
    8. ')
' → logprob: -12.982514381408691
    9. '   ' → logprob: -13.107514381408691
    10. ').__' → logprob: -13.732514381408691

Token 1611: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.015021235682070255
    2. ' /' → logprob: -5.140021324157715
    3. '*(' → logprob: -5.515021324157715
    4. '   ' → logprob: -6.265021324157715
    5. '*' → logprob: -7.015021324157715
    6. '/d' → logprob: -7.390021324157715
    7. '
' → logprob: -8.265021324157715
    8. ')' → logprob: -8.390021324157715
    9. 'p' → logprob: -8.515021324157715
    10. '/(' → logprob: -8.515021324157715

Token 1612: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -5.347765181795694e-05
    2. '(abs' → logprob: -10.000053405761719
    3. ' abs' → logprob: -11.750053405761719
    4. '(' → logprob: -17.25005340576172
    5. 'eq' → logprob: -17.75005340576172
    6. 'sqrt' → logprob: -18.37505340576172
    7. '.abs' → logprob: -18.75005340576172
    8. '((' → logprob: -19.12505340576172
    9. 'ab' → logprob: -19.62505340576172
    10. '_abs' → logprob: -19.87505340576172

Token 1613: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.001191775663755834
    2. 'l' → logprob: -6.75119161605835
    3. '(abs' → logprob: -11.501192092895508
    4. ' (' → logprob: -12.001192092895508
    5. 'abs' → logprob: -13.251192092895508
    6. '((' → logprob: -13.626192092895508
    7. '(' → logprob: -14.001192092895508
    8. '	l' → logprob: -14.126192092895508
    9. '(
' → logprob: -14.876192092895508
    10. '   ' → logprob: -16.126192092895508

Token 1614: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.5762353539466858
    2. '.l' → logprob: -0.8262353539466858
    3. 'b' → logprob: -8.7012357711792
    4. 'l' → logprob: -9.3262357711792
    5. '1' → logprob: -11.2012357711792
    6. '(l' → logprob: -11.5762357711792
    7. '.a' → logprob: -12.0762357711792
    8. '(b' → logprob: -12.9512357711792
    9. '	l' → logprob: -13.0762357711792
    10. '```' → logprob: -13.5762357711792

Token 1615: '-l' (ID: 2887)
  Prédit: '-l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-l' → logprob: -0.5765745043754578
    2. '-' → logprob: -0.8265745043754578
    3. ' -' → logprob: -7.451574325561523
    4. 'l' → logprob: -10.576574325561523
    5. '-
' → logprob: -10.951574325561523
    6. '-lfs' → logprob: -12.576574325561523
    7. ' ' → logprob: -12.826574325561523
    8. '-n' → logprob: -14.201574325561523
    9. '-lnd' → logprob: -14.701574325561523
    10. ' l' → logprob: -14.701574325561523

Token 1616: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.028729498386383057
    2. '.l' → logprob: -4.028729438781738
    3. 'a' → logprob: -4.653729438781738
    4. 'l' → logprob: -7.153729438781738
    5. '1' → logprob: -8.528729438781738
    6. '   ' → logprob: -12.028729438781738
    7. ' l' → logprob: -12.778729438781738
    8. '```' → logprob: -12.778729438781738
    9. '.' → logprob: -13.653729438781738
    10. '#a' → logprob: -14.403729438781738

Token 1617: ')
' (ID: 446)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0663646459579468
    2. ')' → logprob: -1.3163646459579468
    3. '*' → logprob: -1.4413646459579468
    4. '()*' → logprob: -2.4413647651672363
    5. '*c' → logprob: -2.9413647651672363
    6. ')*' → logprob: -4.816364765167236
    7. ' *' → logprob: -7.066364765167236
    8. '*(' → logprob: -7.191364765167236
    9. '(c' → logprob: -8.066364288330078
    10. '*r' → logprob: -8.441364288330078

Token 1618: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6562117338180542
    2. '   ' → logprob: -1.1562117338180542
    3. 't' → logprob: -2.7812118530273438
    4. 'q' → logprob: -2.7812118530273438
    5. 'v' → logprob: -4.531211853027344
    6. ' d' → logprob: -4.656211853027344
    7. 'k' → logprob: -5.531211853027344
    8. 'f' → logprob: -5.906211853027344
    9. 'dp' → logprob: -6.031211853027344
    10. ' t' → logprob: -6.281211853027344

Token 1619: ' dis' (ID: 829)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3420301079750061
    2. 'q' → logprob: -1.9670300483703613
    3. 'd' → logprob: -3.0920300483703613
    4. 'h' → logprob: -3.4670300483703613
    5. 'e' → logprob: -3.8420300483703613
    6. 'ret' → logprob: -4.217030048370361
    7. 'f' → logprob: -4.592030048370361
    8. 'dt' → logprob: -5.342030048370361
    9. 'tmp' → logprob: -5.342030048370361
    10. 'dp' → logprob: -5.717030048370361

Token 1620: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.016378141939640045
    2. '=' → logprob: -4.141377925872803
    3. ' =' → logprob: -8.641378402709961
    4. 'tan' → logprob: -10.141378402709961
    5. '_t' → logprob: -10.641378402709961
    6. ' t' → logprob: -11.141378402709961
    7. 'placement' → logprob: -11.141378402709961
    8. 'p' → logprob: -11.391378402709961
    9. '=t' → logprob: -11.391378402709961
    10. '_' → logprob: -11.891378402709961

Token 1621: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.050838131457567215
    2. '(abs' → logprob: -3.0508382320404053
    3. '(pi' → logprob: -6.800837993621826
    4. '(' → logprob: -8.175838470458984
    5. '(s' → logprob: -8.800838470458984
    6. 'abs' → logprob: -8.925838470458984
    7. '((' → logprob: -9.050838470458984
    8. '(dist' → logprob: -9.300838470458984
    9. '(dis' → logprob: -9.675838470458984
    10. '(round' → logprob: -9.800838470458984

Token 1622: 'c' (ID: 66)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.009725278243422508
    2. 'c' → logprob: -5.259725093841553
    3. 'abs' → logprob: -5.759725093841553
    4. '(abs' → logprob: -7.259725093841553
    5. '((' → logprob: -7.634725093841553
    6. 'max' → logprob: -9.634725570678711
    7. ' (' → logprob: -11.384725570678711
    8. '(e' → logprob: -11.384725570678711
    9. '(' → logprob: -11.509725570678711
    10. '(p' → logprob: -11.759725570678711

Token 1623: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.43328821659088135
    2. 'r' → logprob: -1.0582882165908813
    3. '.p' → logprob: -5.808288097381592
    4. 'p' → logprob: -6.683288097381592
    5. '
' → logprob: -8.68328857421875
    6. '#' → logprob: -11.05828857421875
    7. 's' → logprob: -11.05828857421875
    8. '```' → logprob: -11.05828857421875
    9. '	r' → logprob: -11.18328857421875
    10. '.' → logprob: -11.30828857421875

Token 1624: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -2.868328920158092e-05
    2. '*' → logprob: -11.000028610229492
    3. ' **' → logprob: -11.875028610229492
    4. '
' → logprob: -12.750028610229492
    5. '2' → logprob: -13.875028610229492
    6. ')' → logprob: -15.500028610229492
    7. 'from' → logprob: -15.750028610229492
    8. 'p' → logprob: -16.000028610229492
    9. '#' → logprob: -16.375028610229492
    10. ')**' → logprob: -16.375028610229492

Token 1625: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.666993507067673e-05
    2. ' ' → logprob: -10.500036239624023
    3. '
' → logprob: -11.875036239624023
    4. '```' → logprob: -14.500036239624023
    5. '**' → logprob: -15.000036239624023
    6. '   ' → logprob: -15.250036239624023
    7. '
' → logprob: -15.812536239624023
    8. '​' → logprob: -16.187536239624023
    9. '２' → logprob: -16.187536239624023
    10. '(' → logprob: -16.625036239624023

Token 1626: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04920128360390663
    2. ' -' → logprob: -3.049201250076294
    3. '-dis' → logprob: -7.424201488494873
    4. '-p' → logprob: -11.174201011657715
    5. '-distance' → logprob: -13.299201011657715
    6. '-c' → logprob: -15.174201011657715
    7. '-disc' → logprob: -15.174201011657715
    8. '-d' → logprob: -15.424201011657715
    9. '-(' → logprob: -15.674201011657715
    10. '-s' → logprob: -15.799201011657715

Token 1627: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.011003135703504086
    2. '(abs' → logprob: -4.636003017425537
    3. '(p' → logprob: -7.261003017425537
    4. 'distance' → logprob: -7.761003017425537
    5. '(distance' → logprob: -9.886003494262695
    6. '((' → logprob: -10.636003494262695
    7. ' abs' → logprob: -10.761003494262695
    8. '(c' → logprob: -10.886003494262695
    9. '(pro' → logprob: -14.511003494262695
    10. 'ab' → logprob: -14.511003494262695

Token 1628: '(p' (ID: 2407)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0992623567581177
    2. '(p' → logprob: -1.0992623567581177
    3. '(c' → logprob: -1.3492623567581177
    4. 'p' → logprob: -2.599262237548828
    5. '((' → logprob: -13.474262237548828
    6. '(' → logprob: -13.974262237548828
    7. '	c' → logprob: -14.474262237548828
    8. ' (' → logprob: -14.599262237548828
    9. ' c' → logprob: -14.599262237548828
    10. '
' → logprob: -14.849262237548828

Token 1629: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.13342159986495972
    2. 'c' → logprob: -2.6334216594696045
    3. '-' → logprob: -3.6334216594696045
    4. ' -' → logprob: -4.008421421051025
    5. '(c' → logprob: -5.383421421051025
    6. 'p' → logprob: -6.258421421051025
    7. '-p' → logprob: -6.508421421051025
    8. ' ' → logprob: -9.383421897888184
    9. '(' → logprob: -9.758421897888184
    10. '-(' → logprob: -9.758421897888184

Token 1630: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.03521392197581e-05
    2. '.c' → logprob: -10.750030517578125
    3. 'p' → logprob: -12.000030517578125
    4. 'c' → logprob: -14.250030517578125
    5. '.' → logprob: -14.375030517578125
    6. '<p' → logprob: -14.500030517578125
    7. '```' → logprob: -14.875030517578125
    8. ')' → logprob: -15.000030517578125
    9. '	p' → logprob: -16.750030517578125
    10. '(p' → logprob: -16.875030517578125

Token 1631: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.2472226321697235
    2. ')' → logprob: -2.122222661972046
    3. '(p' → logprob: -2.872222661972046
    4. '()' → logprob: -3.497222661972046
    5. '**' → logprob: -5.122222423553467
    6. '())' → logprob: -5.497222423553467
    7. '(' → logprob: -6.497222423553467
    8. '(c' → logprob: -8.372222900390625
    9. '(e' → logprob: -8.997222900390625
    10. ' )' → logprob: -9.122222900390625

Token 1632: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.1318875446449965e-05
    2. ' ' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.625041007995605
    4. '
' → logprob: -15.625041007995605
    5. '**' → logprob: -15.875041007995605
    6. '  ' → logprob: -16.500041961669922
    7. '２' → logprob: -16.625041961669922
    8. '```' → logprob: -16.625041961669922
    9. '	' → logprob: -16.812541961669922
    10. ' ' → logprob: -17.500041961669922

Token 1633: ')**' (ID: 80066)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0737880989909172
    2. ')**' → logprob: -2.8237881660461426
    3. ')' → logprob: -4.448788166046143
    4. '
' → logprob: -10.198787689208984
    5. '**)' → logprob: -11.448787689208984
    6. ' **' → logprob: -13.198787689208984
    7. ')*' → logprob: -13.323787689208984
    8. '*' → logprob: -13.323787689208984
    9. '**
' → logprob: -13.823787689208984
    10. '0' → logprob: -13.948787689208984

Token 1634: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.070975071750581e-05
    2. '(' → logprob: -11.125030517578125
    3. '.' → logprob: -11.125030517578125
    4. ' ' → logprob: -13.875030517578125
    5. '05' → logprob: -17.125030517578125
    6. '{' → logprob: -17.250030517578125
    7. '   ' → logprob: -17.625030517578125
    8. '5' → logprob: -18.125030517578125
    9. '
' → logprob: -18.250030517578125
    10. '```' → logprob: -18.250030517578125

Token 1635: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26297804713249207
    2. '5' → logprob: -1.5129780769348145
    3. '0' → logprob: -4.5129780769348145
    4. '```' → logprob: -11.887977600097656
    5. '(' → logprob: -12.137977600097656
    6. '{' → logprob: -12.887977600097656
    7. '   ' → logprob: -13.137977600097656
    8. '..' → logprob: -13.387977600097656
    9. ' ' → logprob: -14.387977600097656
    10. '.
' → logprob: -14.637977600097656

Token 1636: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.3856492842023727e-06
    2. '```' → logprob: -14.500000953674316
    3. '0' → logprob: -15.125000953674316
    4. '.' → logprob: -16.125001907348633
    5. '   ' → logprob: -16.937501907348633
    6. '{' → logprob: -17.062501907348633
    7. '05' → logprob: -17.250001907348633
    8. 'half' → logprob: -17.625001907348633
    9. 'value' → logprob: -17.812501907348633
    10. '`' → logprob: -17.812501907348633

Token 1637: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15037381649017334
    2. 'return' → logprob: -2.025373935699463
    3. ' return' → logprob: -5.525373935699463
    4. 'f' → logprob: -6.650373935699463
    5. 'e' → logprob: -6.775373935699463
    6. '	return' → logprob: -7.650373935699463
    7. 'v' → logprob: -8.275373458862305
    8. 't' → logprob: -9.025373458862305
    9. 'd' → logprob: -9.275373458862305
    10. 'r' → logprob: -9.650373458862305

Token 1638: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.026684921234846115
    2. '[' → logprob: -4.151684761047363
    3. '[p' → logprob: -5.651684761047363
    4. '[
' → logprob: -5.651684761047363
    5. '   ' → logprob: -6.526684761047363
    6. ' return' → logprob: -6.651684761047363
    7. '[e' → logprob: -8.026684761047363
    8. 'e' → logprob: -9.526684761047363
    9. '[]
' → logprob: -9.651684761047363
    10. '[r' → logprob: -9.901684761047363

Token 1639: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011254525743424892
    2. 'res' → logprob: -8.00112533569336
    3. 'e' → logprob: -8.75112533569336
    4. 'v' → logprob: -8.75112533569336
    5. 'ret' → logprob: -8.87612533569336
    6. 'p' → logprob: -9.25112533569336
    7. 'ans' → logprob: -9.75112533569336
    8. 'r' → logprob: -10.25112533569336
    9. 'result' → logprob: -10.37612533569336
    10. 't' → logprob: -10.87612533569336

Token 1640: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0001126026691053994
    2. ' [' → logprob: -9.500112533569336
    3. '[' → logprob: -10.625112533569336
    4. '[
' → logprob: -11.250112533569336
    5. '[(' → logprob: -15.625112533569336
    6. '   ' → logprob: -16.375112533569336
    7. '[e' → logprob: -16.750112533569336
    8. '[P' → logprob: -17.750112533569336
    9. '[u' → logprob: -17.875112533569336
    10. '[c' → logprob: -18.250112533569336

Token 1641: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -6.749814019713085e-06
    2. ' p' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.875006675720215
    4. 'Point' → logprob: -16.62500762939453
    5. '	p' → logprob: -17.37500762939453
    6. '(p' → logprob: -18.25000762939453
    7. '  ' → logprob: -19.00000762939453
    8. '
' → logprob: -19.00000762939453
    9. '<p' → logprob: -19.25000762939453
    10. ' ' → logprob: -19.50000762939453

Token 1642: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010354088619351387
    2. ' +' → logprob: -4.885354042053223
    3. '-' → logprob: -6.385354042053223
    4. '-e' → logprob: -7.010354042053223
    5. ' -' → logprob: -9.135354042053223
    6. '+(' → logprob: -10.760354042053223
    7. ' ' → logprob: -11.260354042053223
    8. '   ' → logprob: -12.135354042053223
    9. '+
' → logprob: -12.260354042053223
    10. 'e' → logprob: -13.760354042053223

Token 1643: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0028228238224983215
    2. ' e' → logprob: -5.8778228759765625
    3. '(e' → logprob: -11.252822875976562
    4. '   ' → logprob: -12.627822875976562
    5. '	e' → logprob: -13.877822875976562
    6. '(' → logprob: -14.877822875976562
    7. ' ' → logprob: -15.252822875976562
    8. ' (' → logprob: -16.127822875976562
    9. '  ' → logprob: -16.252822875976562
    10. '    ' → logprob: -17.752822875976562

Token 1644: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00029756641015410423
    2. '*(' → logprob: -8.125297546386719
    3. ' *' → logprob: -14.250297546386719
    4. '(dis' → logprob: -14.625297546386719
    5. '**' → logprob: -15.750297546386719
    6. '*object' → logprob: -16.25029754638672
    7. '*sin' → logprob: -16.50029754638672
    8. 'dis' → logprob: -17.50029754638672
    9. '*Math' → logprob: -17.50029754638672
    10. '*cos' → logprob: -18.00029754638672

Token 1645: 'dis' (ID: 4220)
  Prédit: 'dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -1.6405310816480778e-05
    2. ' dis' → logprob: -11.125016212463379
    3. '-dis' → logprob: -13.875016212463379
    4. '(dis' → logprob: -14.625016212463379
    5. 'd' → logprob: -16.375017166137695
    6. '	dis' → logprob: -17.375017166137695
    7. '+' → logprob: -17.625017166137695
    8. '-' → logprob: -17.875017166137695
    9. '(-' → logprob: -18.000017166137695
    10. 'di' → logprob: -18.125017166137695

Token 1646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033135272096842527
    2. ',p' → logprob: -5.7533135414123535
    3. ',
' → logprob: -9.628313064575195
    4. ' ,' → logprob: -10.378313064575195
    5. '   ' → logprob: -10.878313064575195
    6. 'p' → logprob: -10.878313064575195
    7. '(p' → logprob: -14.253313064575195
    8. ',e' → logprob: -15.753313064575195
    9. ' p' → logprob: -16.878313064575195
    10. ',-' → logprob: -17.003313064575195

Token 1647: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015051016816869378
    2. ' p' → logprob: -6.501504898071289
    3. '   ' → logprob: -12.876504898071289
    4. '	p' → logprob: -16.12650489807129
    5. '  ' → logprob: -16.37650489807129
    6. '    ' → logprob: -16.87650489807129
    7. ' ' → logprob: -17.50150489807129
    8. ' ' → logprob: -18.25150489807129
    9. '       ' → logprob: -18.37650489807129
    10. '     ' → logprob: -19.00150489807129

Token 1648: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.009775806218385696
    2. ' -' → logprob: -4.634775638580322
    3. '-e' → logprob: -10.88477611541748
    4. '*' → logprob: -14.00977611541748
    5. '-
' → logprob: -15.50977611541748
    6. '+' → logprob: -17.134775161743164
    7. 'e' → logprob: -17.509775161743164
    8. ' ' → logprob: -17.759775161743164
    9. '-es' → logprob: -18.134775161743164
    10. '-е' → logprob: -18.384775161743164

Token 1649: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002636006975080818
    2. 'dis' → logprob: -8.250263214111328
    3. ' e' → logprob: -13.000263214111328
    4. '	e' → logprob: -19.125263214111328
    5. '   ' → logprob: -19.625263214111328
    6. '(e' → logprob: -19.625263214111328
    7. '(dis' → logprob: -20.250263214111328
    8. 'dist' → logprob: -20.500263214111328
    9. ' dis' → logprob: -21.000263214111328
    10. 'Dis' → logprob: -21.500263214111328

Token 1650: '*' (ID: 9)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.16024452447891235
    2. '*' → logprob: -1.9102444648742676
    3. '(dis' → logprob: -10.910244941711426
    4. '[' → logprob: -14.535244941711426
    5. '	dis' → logprob: -14.660244941711426
    6. 'Dis' → logprob: -14.785244941711426
    7. ' dis' → logprob: -15.285244941711426
    8. '-dis' → logprob: -15.785244941711426
    9. 'dist' → logprob: -16.03524398803711
    10. '_dis' → logprob: -16.16024398803711

Token 1651: 'dis' (ID: 4220)
  Prédit: 'dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -1.9361264946837764e-07
    2. ' dis' → logprob: -16.125
    3. '	dis' → logprob: -17.875
    4. '(dis' → logprob: -18.0
    5. 'dist' → logprob: -19.5
    6. '   ' → logprob: -20.625
    7. 'cross' → logprob: -21.25
    8. 'distance' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. 'd' → logprob: -21.5

Token 1652: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5690089639974758e-05
    2. ' ]' → logprob: -11.750015258789062
    3. '   ' → logprob: -12.625015258789062
    4. ')]' → logprob: -13.250015258789062
    5. ']
' → logprob: -13.750015258789062
    6. '()]' → logprob: -14.000015258789062
    7. ')' → logprob: -14.500015258789062
    8. '])' → logprob: -16.000015258789062
    9. ']
' → logprob: -16.625015258789062
    10. ']()' → logprob: -17.625015258789062

Token 1653: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -13.875000953674316
    3. ' def' → logprob: -15.750000953674316
    4. '``' → logprob: -18.000001907348633
    5. '
' → logprob: -18.500001907348633
    6. '@' → logprob: -18.750001907348633
    7. 'return' → logprob: -18.750001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '#' → logprob: -20.125001907348633
    10. 'ndef' → logprob: -20.500001907348633

Token 1654: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.030425438657402992
    2. 'is' → logprob: -4.030425548553467
    3. 'inter' → logprob: -5.030425548553467
    4. 'intersection' → logprob: -6.280425548553467
    5. 'distance' → logprob: -6.905425548553467
    6. 'circle' → logprob: -7.030425548553467
    7. 't' → logprob: -7.530425548553467
    8. 'cc' → logprob: -8.530425071716309
    9. 'def' → logprob: -8.530425071716309
    10. 'circ' → logprob: -8.905425071716309

Token 1655: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -2.129266067640856e-05
    2. 'points' → logprob: -11.125020980834961
    3. 'circle' → logprob: -13.000020980834961
    4. 'section' → logprob: -13.375020980834961
    5. 'p' → logprob: -14.000020980834961
    6. 'product' → logprob: -14.250020980834961
    7. '_point' → logprob: -14.625020980834961
    8. 'line' → logprob: -16.12502098083496
    9. 'pc' → logprob: -16.37502098083496
    10. 'circ' → logprob: -16.87502098083496

Token 1656: '_sc' (ID: 29726)
  Prédit: '_cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -0.005270991940051317
    2. 'cc' → logprob: -5.255270957946777
    3. '(cc' → logprob: -11.505270957946777
    4. 'CC' → logprob: -12.005270957946777
    5. '```' → logprob: -12.255270957946777
    6. '_cs' → logprob: -12.630270957946777
    7. '	cc' → logprob: -12.630270957946777
    8. '``' → logprob: -13.005270957946777
    9. 'Cc' → logprob: -13.005270957946777
    10. '_sc' → logprob: -14.005270957946777

Token 1657: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.033915385603904724
    2. 's' → logprob: -4.0339155197143555
    3. 'def' → logprob: -4.1589155197143555
    4. '#' → logprob: -12.408915519714355
    5. ' s' → logprob: -12.658915519714355
    6. 't' → logprob: -13.033915519714355
    7. 'c' → logprob: -13.283915519714355
    8. 'l' → logprob: -13.408915519714355
    9. ' def' → logprob: -14.533915519714355
    10. '(' → logprob: -14.533915519714355

Token 1658: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013614130206406116
    2. '(s' → logprob: -4.513614177703857
    3. 'c' → logprob: -6.013614177703857
    4. 'def' → logprob: -10.2636137008667
    5. ' s' → logprob: -10.7636137008667
    6. ',' → logprob: -11.1386137008667
    7. '1' → logprob: -11.1386137008667
    8. '```' → logprob: -11.2636137008667
    9. 'l' → logprob: -11.3886137008667
    10. 'sc' → logprob: -13.2636137008667

Token 1659: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -9.491498531133402e-06
    2. ' c' → logprob: -11.625009536743164
    3. 'l' → logprob: -14.875009536743164
    4. 's' → logprob: -15.875009536743164
    5. '```' → logprob: -18.875009536743164
    6. '_c' → logprob: -19.750009536743164
    7. '	c' → logprob: -19.875009536743164
    8. 'circle' → logprob: -20.250009536743164
    9. '(c' → logprob: -20.375009536743164
    10. '   ' → logprob: -20.500009536743164

Token 1660: '):
' (ID: 1883)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0005320638883858919
    2. 's' → logprob: -8.375532150268555
    3. 'def' → logprob: -8.875532150268555
    4. ')' → logprob: -9.125532150268555
    5. '):' → logprob: -10.625532150268555
    6. '):
' → logprob: -10.750532150268555
    7. ')
' → logprob: -13.000532150268555
    8. '   ' → logprob: -13.500532150268555
    9. '(l' → logprob: -13.875532150268555
    10. ' s' → logprob: -14.750532150268555

Token 1661: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.3510757684707642
    2. 'res' → logprob: -1.3510757684707642
    3. '   ' → logprob: -1.6010757684707642
    4. 'def' → logprob: -2.3510756492614746
    5. 'r' → logprob: -3.1010756492614746
    6. 'l' → logprob: -3.1010756492614746
    7. 'return' → logprob: -3.1010756492614746
    8. 'points' → logprob: -4.226075649261475
    9. 'pts' → logprob: -4.726075649261475
    10. 'ret' → logprob: -4.976075649261475

Token 1662: ' pass' (ID: 1853)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8496581315994263
    2. 'points' → logprob: -1.5996581315994263
    3. 'p' → logprob: -2.0996580123901367
    4. 'pts' → logprob: -2.5996580123901367
    5. 'ret' → logprob: -2.7246580123901367
    6. 'r' → logprob: -2.8496580123901367
    7. 'ps' → logprob: -3.7246580123901367
    8. 'l' → logprob: -5.099658012390137
    9. 'tmp' → logprob: -5.349658012390137
    10. 'lst' → logprob: -5.974658012390137

Token 1663: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7792587876319885
    2. '   ' → logprob: -1.4042587280273438
    3. 'r' → logprob: -1.7792587280273438
    4. 'p' → logprob: -2.9042587280273438
    5. 'd' → logprob: -3.0292587280273438
    6. 'def' → logprob: -5.029258728027344
    7. 't' → logprob: -5.279258728027344
    8. 'dis' → logprob: -6.154258728027344
    9. 'res' → logprob: -6.279258728027344
    10. 'return' → logprob: -6.779258728027344

Token 1664: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11773568391799927
    2. 'def' → logprob: -2.2427356243133545
    3. 'if' → logprob: -5.867735862731934
    4. 'd' → logprob: -6.867735862731934
    5. 'r' → logprob: -7.367735862731934
    6. 'return' → logprob: -8.867735862731934
    7. 's' → logprob: -9.242735862731934
    8. 't' → logprob: -9.867735862731934
    9. '#' → logprob: -10.492735862731934
    10. 'p' → logprob: -11.242735862731934

Token 1665: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.02100297622382641
    2. 'def' → logprob: -4.021002769470215
    3. 'sc' → logprob: -6.521002769470215
    4. 'is' → logprob: -7.646002769470215
    5. 's' → logprob: -7.771002769470215
    6. ' cross' → logprob: -8.521002769470215
    7. '#' → logprob: -9.146002769470215
    8. 'c' → logprob: -9.521002769470215
    9. '
' → logprob: -11.896002769470215
    10. '__' → logprob: -12.021002769470215

Token 1666: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -9.968312951968983e-06
    2. 'points' → logprob: -12.000009536743164
    3. 'p' → logprob: -12.625009536743164
    4. 'po' → logprob: -14.875009536743164
    5. 'poi' → logprob: -17.125009536743164
    6. 'oint' → logprob: -17.625009536743164
    7. '_point' → logprob: -17.750009536743164
    8. 'pointer' → logprob: -17.875009536743164
    9. 'position' → logprob: -18.000009536743164
    10. 'product' → logprob: -18.125009536743164

Token 1667: '_cc' (ID: 69524)
  Prédit: '_sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sc' → logprob: -0.3339158296585083
    2. '_cc' → logprob: -1.5839158296585083
    3. '_ss' → logprob: -3.3339157104492188
    4. '_ll' → logprob: -3.3339157104492188
    5. '_cl' → logprob: -5.708915710449219
    6. '_ls' → logprob: -6.083915710449219
    7. '_l' → logprob: -6.708915710449219
    8. '_cs' → logprob: -8.333915710449219
    9. '_sl' → logprob: -8.708915710449219
    10. 'sc' → logprob: -9.083915710449219

Token 1668: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.5107177862082608e-05
    2. '(' → logprob: -10.750024795532227
    3. 'def' → logprob: -12.750024795532227
    4. '(s' → logprob: -14.750024795532227
    5. '(
' → logprob: -16.750024795532227
    6. ' (' → logprob: -17.125024795532227
    7. '(def' → logprob: -17.375024795532227
    8. '(...)' → logprob: -17.625024795532227
    9. 'c' → logprob: -17.750024795532227
    10. '(ci' → logprob: -18.000024795532227

Token 1669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. 'c' → logprob: -11.875011444091797
    3. ',' → logprob: -13.625011444091797
    4. ',c' → logprob: -13.875011444091797
    5. '(c' → logprob: -14.125011444091797
    6. '```' → logprob: -14.750011444091797
    7. 'sc' → logprob: -15.375011444091797
    8. '１' → logprob: -16.000011444091797
    9. ')' → logprob: -16.000011444091797
    10. ' c' → logprob: -16.125011444091797

Token 1670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006990921101532876
    2. ',c' → logprob: -7.500699043273926
    3. 'c' → logprob: -8.875699043273926
    4. ' ,' → logprob: -12.375699043273926
    5. ' c' → logprob: -14.000699043273926
    6. '<|end|>' → logprob: -14.500699043273926
    7. 's' → logprob: -15.500699043273926
    8. ',
' → logprob: -15.875699043273926
    9. '(c' → logprob: -16.375699996948242
    10. '_,' → logprob: -16.625699996948242

Token 1671: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.623244553338736e-05
    2. ' c' → logprob: -9.625065803527832
    3. 'def' → logprob: -17.25006675720215
    4. '	c' → logprob: -18.37506675720215
    5. '<|end|>' → logprob: -18.75006675720215
    6. '(c' → logprob: -19.75006675720215
    7. '```' → logprob: -19.87506675720215
    8. '   ' → logprob: -20.00006675720215
    9. ')c' → logprob: -20.37506675720215
    10. '_c' → logprob: -20.50006675720215

Token 1672: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5716304410016164e-05
    2. 'c' → logprob: -10.250035285949707
    3. ' c' → logprob: -16.250036239624023
    4. '```' → logprob: -16.500036239624023
    5. '1' → logprob: -16.875036239624023
    6. '   ' → logprob: -17.125036239624023
    7. ' ' → logprob: -17.875036239624023
    8. ',' → logprob: -18.125036239624023
    9. '	c' → logprob: -18.125036239624023
    10. '  ' → logprob: -18.625036239624023

Token 1673: '):
' (ID: 1883)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.1706080585718155
    2. '):
' → logprob: -2.1706080436706543
    3. '):' → logprob: -3.1706080436706543
    4. ')' → logprob: -7.795608043670654
    5. 'def' → logprob: -8.420608520507812
    6. '):
' → logprob: -9.795608520507812
    7. '   ' → logprob: -10.920608520507812
    8. 'c' → logprob: -11.045608520507812
    9. ')
' → logprob: -11.170608520507812
    10. '):

' → logprob: -11.545608520507812

Token 1674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16050408780574799
    2. 'd' → logprob: -1.9105041027069092
    3. ' d' → logprob: -8.910504341125488
    4. '```' → logprob: -9.160504341125488
    5. 'p' → logprob: -10.910504341125488
    6. '	d' → logprob: -11.660504341125488
    7. 'if' → logprob: -11.910504341125488
    8. 'import' → logprob: -13.035504341125488
    9. '#' → logprob: -14.535504341125488
    10. '       ' → logprob: -14.910504341125488

Token 1675: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.008001337759196758
    2. 'p' → logprob: -5.258001327514648
    3. 'if' → logprob: -6.258001327514648
    4. '   ' → logprob: -7.383001327514648
    5. 'def' → logprob: -9.258001327514648
    6. '```' → logprob: -10.508001327514648
    7. 'import' → logprob: -11.008001327514648
    8. '#' → logprob: -11.258001327514648
    9. 'vec' → logprob: -11.383001327514648
    10. 'q' → logprob: -11.508001327514648

Token 1676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519368827342987
    2. ' =' → logprob: -1.501936912536621
    3. '=
' → logprob: -13.251936912536621
    4. '＝' → logprob: -13.251936912536621
    5. '   ' → logprob: -13.626936912536621
    6. '=d' → logprob: -14.376936912536621
    7. '=p' → logprob: -15.126936912536621
    8. '=(' → logprob: -15.376936912536621
    9. '=`' → logprob: -15.501936912536621
    10. '=float' → logprob: -15.751936912536621

Token 1677: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0001789881061995402
    2. 'c' → logprob: -9.375179290771484
    3. ' abs' → logprob: -9.375179290771484
    4. '(abs' → logprob: -11.625179290771484
    5. '(c' → logprob: -15.250179290771484
    6. ' c' → logprob: -16.750179290771484
    7. 'ab' → logprob: -18.000179290771484
    8. '.abs' → logprob: -18.500179290771484
    9. '
' → logprob: -19.250179290771484
    10. '   ' → logprob: -19.500179290771484

Token 1678: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.10020710527896881
    2. 'c' → logprob: -2.3502070903778076
    3. '	c' → logprob: -15.225207328796387
    4. ')c' → logprob: -16.10020637512207
    5. ' c' → logprob: -16.72520637512207
    6. '(
' → logprob: -18.22520637512207
    7. '(' → logprob: -18.35020637512207
    8. '$c' → logprob: -18.97520637512207
    9. '```' → logprob: -18.97520637512207
    10. '[c' → logprob: -19.22520637512207

Token 1679: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015955790877342224
    2. 'c' → logprob: -8.75015926361084
    3. 'p' → logprob: -14.75015926361084
    4. ' c' → logprob: -15.12515926361084
    5. '2' → logprob: -15.37515926361084
    6. '```' → logprob: -17.000160217285156
    7. ' ' → logprob: -18.000160217285156
    8. '   ' → logprob: -18.125160217285156
    9. '.c' → logprob: -18.375160217285156
    10. '(c' → logprob: -19.000160217285156

Token 1680: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00021271906734909862
    2. 'p' → logprob: -8.500212669372559
    3. '1' → logprob: -12.625212669372559
    4. '```' → logprob: -12.625212669372559
    5. '(p' → logprob: -14.750212669372559
    6. '.c' → logprob: -14.750212669372559
    7. '.' → logprob: -14.875212669372559
    8. '<p' → logprob: -15.500212669372559
    9. '   ' → logprob: -15.625212669372559
    10. '_p' → logprob: -15.750212669372559

Token 1681: '-c' (ID: 3452)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1284174621105194
    2. '-c' → logprob: -2.128417491912842
    3. '-p' → logprob: -6.628417491912842
    4. ' -' → logprob: -8.753417015075684
    5. 'c' → logprob: -12.128417015075684
    6. 'p' → logprob: -13.003417015075684
    7. '-
' → logprob: -14.628417015075684
    8. ' ' → logprob: -17.37841796875
    9. '−' → logprob: -17.37841796875
    10. '   ' → logprob: -17.87841796875

Token 1682: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.911954500945285e-05
    2. 'c' → logprob: -9.375088691711426
    3. '1' → logprob: -12.625088691711426
    4. 'p' → logprob: -14.125088691711426
    5. '２' → logprob: -15.750088691711426
    6. 'oint' → logprob: -18.000089645385742
    7. 'd' → logprob: -18.500089645385742
    8. '.c' → logprob: -18.875089645385742
    9. '```' → logprob: -19.000089645385742
    10. '	c' → logprob: -19.750089645385742

Token 1683: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.008623793721199036
    2. 'p' → logprob: -4.7586236000061035
    3. '```' → logprob: -12.258624076843262
    4. '.' → logprob: -13.508624076843262
    5. ' p' → logprob: -13.883624076843262
    6. '<p' → logprob: -14.383624076843262
    7. '	p' → logprob: -14.758624076843262
    8. ' .' → logprob: -15.008624076843262
    9. '
' → logprob: -15.258624076843262
    10. ')' → logprob: -15.758624076843262

Token 1684: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.008752127178013325
    2. ')' → logprob: -4.758752346038818
    3. '   ' → logprob: -9.25875186920166
    4. ')
' → logprob: -10.13375186920166
    5. 'd' → logprob: -13.38375186920166
    6. 'if' → logprob: -15.63375186920166
    7. ')

' → logprob: -15.63375186920166
    8. ')d' → logprob: -15.63375186920166
    9. 'def' → logprob: -16.258752822875977
    10. ')`
' → logprob: -16.258752822875977

Token 1685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6873285174369812
    2. 'if' → logprob: -0.9373285174369812
    3. 'r' → logprob: -2.312328577041626
    4. ' if' → logprob: -5.187328338623047
    5. '```' → logprob: -7.812328338623047
    6. ' r' → logprob: -8.562328338623047
    7. 'R' → logprob: -9.312328338623047
    8. 'p' → logprob: -10.937328338623047
    9. '#' → logprob: -10.937328338623047
    10. 'import' → logprob: -11.062328338623047

Token 1686: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013224111869931221
    2. 'r' → logprob: -4.388224124908447
    3. '   ' → logprob: -8.138223648071289
    4. 'a' → logprob: -8.513223648071289
    5. 'R' → logprob: -9.013223648071289
    6. 'l' → logprob: -11.013223648071289
    7. 'def' → logprob: -11.013223648071289
    8. '```' → logprob: -11.638223648071289
    9. 't' → logprob: -11.763223648071289
    10. 'q' → logprob: -11.888223648071289

Token 1687: ' not' (ID: 625)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003001358127221465
    2. 'eq' → logprob: -6.0030012130737305
    3. ' d' → logprob: -8.25300121307373
    4. 'c' → logprob: -9.00300121307373
    5. 'not' → logprob: -9.62800121307373
    6. 'abs' → logprob: -10.37800121307373
    7. 'is' → logprob: -11.00300121307373
    8. '0' → logprob: -11.62800121307373
    9. '   ' → logprob: -11.62800121307373
    10. 'cross' → logprob: -12.87800121307373

Token 1688: ' abs' (ID: 8443)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7781336903572083
    2. '(eq' → logprob: -1.4031336307525635
    3. 'eq' → logprob: -1.6531336307525635
    4. '(c' → logprob: -3.0281336307525635
    5. '0' → logprob: -3.7781336307525635
    6. 'd' → logprob: -4.153133869171143
    7. '(d' → logprob: -4.528133869171143
    8. 'c' → logprob: -6.153133869171143
    9. 'is' → logprob: -6.403133869171143
    10. ' (' → logprob: -7.778133869171143

Token 1689: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018377965316176414
    2. '(d' → logprob: -4.018377780914307
    3. '(eq' → logprob: -8.893378257751465
    4. 'eq' → logprob: -10.393378257751465
    5. '((' → logprob: -11.143378257751465
    6. 'd' → logprob: -11.643378257751465
    7. '(abs' → logprob: -11.643378257751465
    8. 'c' → logprob: -12.268378257751465
    9. '(diff' → logprob: -12.268378257751465
    10. '(' → logprob: -12.518378257751465

Token 1690: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.388769103679806e-05
    2. '2' → logprob: -10.000093460083008
    3. 'c' → logprob: -10.625093460083008
    4. 'd' → logprob: -10.875093460083008
    5. 'p' → logprob: -13.750093460083008
    6. 'o' → logprob: -13.875093460083008
    7. 'ont' → logprob: -14.250093460083008
    8. '(c' → logprob: -14.500093460083008
    9. '#' → logprob: -15.125093460083008
    10. 'ircle' → logprob: -15.250093460083008

Token 1691: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.5783511400222778
    2. 'r' → logprob: -0.8283511400222778
    3. 'p' → logprob: -6.703351020812988
    4. '1' → logprob: -7.078351020812988
    5. '.p' → logprob: -8.328351020812988
    6. '-r' → logprob: -10.328351020812988
    7. '#' → logprob: -11.328351020812988
    8. '```' → logprob: -11.453351020812988
    9. '_r' → logprob: -11.828351020812988
    10. '2' → logprob: -12.078351020812988

Token 1692: '-c' (ID: 3452)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38749960064888
    2. '-r' → logprob: -1.5124995708465576
    3. ' -' → logprob: -2.5124995708465576
    4. '-c' → logprob: -4.012499809265137
    5. 'r' → logprob: -6.387499809265137
    6. '-p' → logprob: -11.137499809265137
    7. ' ' → logprob: -11.762499809265137
    8. 'c' → logprob: -11.887499809265137
    9. '-
' → logprob: -12.637499809265137
    10. '+' → logprob: -12.762499809265137

Token 1693: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.576494038105011
    2. '1' → logprob: -0.826494038105011
    3. 'c' → logprob: -8.201494216918945
    4. 'r' → logprob: -8.201494216918945
    5. 'p' → logprob: -12.826494216918945
    6. 'o' → logprob: -14.076494216918945
    7. '```' → logprob: -14.576494216918945
    8. ' c' → logprob: -14.701494216918945
    9. '/c' → logprob: -15.326494216918945
    10. '(c' → logprob: -15.451494216918945

Token 1694: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.017951028421521187
    2. 'r' → logprob: -4.392951011657715
    3. '.p' → logprob: -5.267951011657715
    4. 'p' → logprob: -8.267951011657715
    5. '```' → logprob: -12.267951011657715
    6. '1' → logprob: -13.142951011657715
    7. '	r' → logprob: -13.142951011657715
    8. '.' → logprob: -13.392951011657715
    9. ')' → logprob: -14.017951011657715
    10. '-r' → logprob: -14.517951011657715

Token 1695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016928698867559433
    2. ')>' → logprob: -4.516928672790527
    3. ')<' → logprob: -6.391928672790527
    4. 'r' → logprob: -6.516928672790527
    5. ')==' → logprob: -7.141928672790527
    6. 'p' → logprob: -7.516928672790527
    7. 'd' → logprob: -7.766928672790527
    8. '),' → logprob: -8.016928672790527
    9. ')>=' → logprob: -9.141928672790527
    10. ')<=' → logprob: -9.391928672790527

Token 1696: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6292120814323425
    2. '<' → logprob: -1.5042121410369873
    3. ' >' → logprob: -1.8792121410369873
    4. ' <' → logprob: -2.5042121410369873
    5. '>=' → logprob: -5.629211902618408
    6. ' >=' → logprob: -6.629211902618408
    7. '==' → logprob: -6.629211902618408
    8. '>d' → logprob: -6.879211902618408
    9. '<=' → logprob: -7.129211902618408
    10. ':' → logprob: -7.129211902618408

Token 1697: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005293169524520636
    2. 'EPS' → logprob: -5.255293369293213
    3. ' d' → logprob: -10.255292892456055
    4. '1' → logprob: -12.005292892456055
    5. ' EPS' → logprob: -12.130292892456055
    6. '10' → logprob: -12.380292892456055
    7. '0' → logprob: -13.005292892456055
    8. '
' → logprob: -13.505292892456055
    9. 'c' → logprob: -13.880292892456055
    10. 'eps' → logprob: -14.630292892456055

Token 1698: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5843902230262756
    2. ' <' → logprob: -1.5843901634216309
    3. '<=' → logprob: -2.209390163421631
    4. ' <=' → logprob: -2.834390163421631
    5. ' and' → logprob: -3.209390163421631
    6. ':' → logprob: -3.834390163421631
    7. 'and' → logprob: -6.084390163421631
    8. ':
' → logprob: -6.209390163421631
    9. '   ' → logprob: -7.959390163421631
    10. ':return' → logprob: -8.084390640258789

Token 1699: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00031139038037508726
    2. '(c' → logprob: -8.125311851501465
    3. ' c' → logprob: -11.125311851501465
    4. '   ' → logprob: -15.250311851501465
    5. '
' → logprob: -16.12531089782715
    6. ' (' → logprob: -16.12531089782715
    7. '(' → logprob: -16.37531089782715
    8. ' ' → logprob: -17.25031089782715
    9. '	c' → logprob: -17.37531089782715
    10. '```' → logprob: -18.25031089782715

Token 1700: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002170601626858115
    2. '(c' → logprob: -6.252170562744141
    3. ' c' → logprob: -8.62717056274414
    4. '(' → logprob: -10.62717056274414
    5. '1' → logprob: -10.75217056274414
    6. '   ' → logprob: -11.50217056274414
    7. ' (' → logprob: -12.25217056274414
    8. '
' → logprob: -14.62717056274414
    9. '	c' → logprob: -14.62717056274414
    10. ' ' → logprob: -15.00217056274414

Token 1701: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0046264105476439
    2. 'r' → logprob: -5.379626274108887
    3. '.' → logprob: -13.129626274108887
    4. '1' → logprob: -14.004626274108887
    5. '	r' → logprob: -14.254626274108887
    6. ' r' → logprob: -14.629626274108887
    7. '
' → logprob: -14.879626274108887
    8. '+.' → logprob: -15.629626274108887
    9. '+r' → logprob: -15.629626274108887
    10. '```' → logprob: -15.754626274108887

Token 1702: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.01603190414607525
    2. '+' → logprob: -4.391031742095947
    3. 'c' → logprob: -5.766031742095947
    4. '+r' → logprob: -8.141032218933105
    5. ' +' → logprob: -9.516032218933105
    6. '+
' → logprob: -12.016032218933105
    7. 'r' → logprob: -12.016032218933105
    8. '++' → logprob: -13.266032218933105
    9. ' c' → logprob: -13.891032218933105
    10. '+s' → logprob: -14.641032218933105

Token 1703: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07988718152046204
    2. 'r' → logprob: -2.5798871517181396
    3. 'c' → logprob: -6.954887390136719
    4. '```' → logprob: -10.829887390136719
    5. '1' → logprob: -10.954887390136719
    6. '
' → logprob: -13.579887390136719
    7. '_r' → logprob: -13.829887390136719
    8. 'pi' → logprob: -14.204887390136719
    9. '   ' → logprob: -14.329887390136719
    10. '``' → logprob: -14.954887390136719

Token 1704: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.016081295907497406
    2. 'r' → logprob: -4.1410813331604
    3. '```' → logprob: -11.016080856323242
    4. '.' → logprob: -11.766080856323242
    5. '   ' → logprob: -12.016080856323242
    6. '	r' → logprob: -12.391080856323242
    7. '.p' → logprob: -13.016080856323242
    8. '(r' → logprob: -13.141080856323242
    9. ' r' → logprob: -13.266080856323242
    10. '-r' → logprob: -13.641080856323242

Token 1705: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10244487226009369
    2. ':' → logprob: -2.352444887161255
    3. '   ' → logprob: -7.352444648742676
    4. ':return' → logprob: -7.977444648742676
    5. '       ' → logprob: -8.102444648742676
    6. ':
' → logprob: -8.227444648742676
    7. ' and' → logprob: -8.227444648742676
    8. ' :
' → logprob: -8.977444648742676
    9. '):
' → logprob: -9.227444648742676
    10. ':

' → logprob: -10.227444648742676

Token 1706: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3663943111896515
    2. '       ' → logprob: -1.491394281387329
    3. ':' → logprob: -2.616394281387329
    4. ':
' → logprob: -5.116394519805908
    5. ':return' → logprob: -7.241394519805908
    6. ' :' → logprob: -7.616394519805908
    7. ' and' → logprob: -7.741394519805908
    8. ' or' → logprob: -7.991394519805908
    9. '):
' → logprob: -8.99139404296875
    10. '):' → logprob: -9.24139404296875

Token 1707: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13546238839626312
    2. '[]' → logprob: -2.1354622840881348
    3. '   ' → logprob: -5.135462284088135
    4. ' return' → logprob: -6.135462284088135
    5. '[]
' → logprob: -8.135462760925293
    6. '	return' → logprob: -8.885462760925293
    7. 'None' → logprob: -12.010462760925293
    8. ':return' → logprob: -12.635462760925293
    9. '[' → logprob: -13.385462760925293
    10. '{return' → logprob: -14.135462760925293

Token 1708: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.002148834988474846
    2. '[]
' → logprob: -6.252148628234863
    3. '[]

' → logprob: -8.627148628234863
    4. 'None' → logprob: -10.252148628234863
    5. ' []' → logprob: -12.502148628234863
    6. '[' → logprob: -13.752148628234863
    7. '[])' → logprob: -14.752148628234863
    8. '[],' → logprob: -15.627148628234863
    9. '[]"' → logprob: -15.877148628234863
    10. '[]}' → logprob: -16.12714958190918

Token 1709: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025871701654978096
    2. '
' → logprob: -9.375258445739746
    3. '    
' → logprob: -9.375258445739746
    4. 'd' → logprob: -10.250258445739746
    5. 'if' → logprob: -10.875258445739746
    6. '```' → logprob: -11.250258445739746
    7. 'p' → logprob: -11.750258445739746
    8. '[]
' → logprob: -13.000258445739746
    9. 'n' → logprob: -13.250258445739746
    10. ' if' → logprob: -13.500258445739746

Token 1710: ' mid' (ID: 6959)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.652604341506958
    2. 't' → logprob: -1.652604341506958
    3. 'a' → logprob: -1.902604341506958
    4. 'p' → logprob: -2.652604341506958
    5. 'ex' → logprob: -3.652604341506958
    6. 'mid' (adapté à ' mid') → logprob: -3.902604341506958
    7. 'base' → logprob: -5.277604103088379
    8. 'h' → logprob: -5.652604103088379
    9. '   ' → logprob: -5.902604103088379
    10. 'q' → logprob: -5.902604103088379

Token 1711: '_p' (ID: 1359)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011917894706130028
    2. '=' → logprob: -4.511918067932129
    3. 'd' → logprob: -7.886918067932129
    4. 'p' → logprob: -8.136918067932129
    5. 'point' → logprob: -9.261918067932129
    6. '_point' → logprob: -9.761918067932129
    7. '=(' → logprob: -11.511918067932129
    8. 'P' → logprob: -11.761918067932129
    9. 'x' → logprob: -12.011918067932129
    10. 'Point' → logprob: -12.261918067932129

Token 1712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759474635124207
    2. ' =' → logprob: -0.8259474635124207
    3. 'oint' → logprob: -12.575947761535645
    4. '=(' → logprob: -13.200947761535645
    5. '＝' → logprob: -14.575947761535645
    6. '=p' → logprob: -14.825947761535645
    7. 'oints' → logprob: -14.950947761535645
    8. ',' → logprob: -14.950947761535645
    9. ' =(' → logprob: -15.450947761535645
    10. '=((' → logprob: -15.700947761535645

Token 1713: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.002245177049189806
    2. 'c' → logprob: -6.12724494934082
    3. ' (' → logprob: -10.62724494934082
    4. '(' → logprob: -11.12724494934082
    5. 'Point' → logprob: -11.25224494934082
    6. '((' → logprob: -12.50224494934082
    7. '(Point' → logprob: -13.37724494934082
    8. 'Circle' → logprob: -13.87724494934082
    9. '   ' → logprob: -15.00224494934082
    10. ' c' → logprob: -15.12724494934082

Token 1714: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000627610192168504
    2. '(c' → logprob: -7.375627517700195
    3. ' c' → logprob: -14.500627517700195
    4. '   ' → logprob: -14.875627517700195
    5. '	c' → logprob: -16.375627517700195
    6. ')c' → logprob: -16.875627517700195
    7. 'circle' → logprob: -17.625627517700195
    8. ' (' → logprob: -17.625627517700195
    9. '```' → logprob: -18.625627517700195
    10. '(' → logprob: -18.875627517700195

Token 1715: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4289054572582245
    2. 'c' → logprob: -1.0539054870605469
    3. 'oint' → logprob: -8.928905487060547
    4. '(c' → logprob: -10.678905487060547
    5. 'Point' → logprob: -11.053905487060547
    6. ' c' → logprob: -11.303905487060547
    7. 'oints' → logprob: -12.428905487060547
    8. 'Circle' → logprob: -12.678905487060547
    9. '(' → logprob: -13.178905487060547
    10. 'circle' → logprob: -13.178905487060547

Token 1716: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.5107177862082608e-05
    2. 'p' → logprob: -10.625024795532227
    3. '```' → logprob: -15.375024795532227
    4. ' .' → logprob: -15.875024795532227
    5. '.' → logprob: -16.625024795532227
    6. '<p' → logprob: -16.750024795532227
    7. ').' → logprob: -16.875024795532227
    8. '
' → logprob: -17.375024795532227
    9. '1' → logprob: -17.375024795532227
    10. '   ' → logprob: -17.500024795532227

Token 1717: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14201755821704865
    2. '+c' → logprob: -2.6420176029205322
    3. '-' → logprob: -3.5170176029205322
    4. ' +' → logprob: -4.017017364501953
    5. '-c' → logprob: -4.767017364501953
    6. '*' → logprob: -5.892017364501953
    7. ' -' → logprob: -6.267017364501953
    8. 'c' → logprob: -8.892017364501953
    9. '*c' → logprob: -9.142017364501953
    10. '+
' → logprob: -10.767017364501953

Token 1718: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.37438786029815674
    2. 'c' → logprob: -1.4993878602981567
    3. '1' → logprob: -2.624387741088867
    4. '0' → logprob: -4.374387741088867
    5. ' c' → logprob: -6.874387741088867
    6. ' (' → logprob: -7.124387741088867
    7. '((' → logprob: -7.124387741088867
    8. '(' → logprob: -7.249387741088867
    9. ' ' → logprob: -7.999387741088867
    10. '(
' → logprob: -9.999387741088867

Token 1719: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00011963568249484524
    2. '(c' → logprob: -9.12511920928955
    3. ' c' → logprob: -11.50011920928955
    4. '(' → logprob: -15.50011920928955
    5. '1' → logprob: -16.000120162963867
    6. '```' → logprob: -16.500120162963867
    7. ')c' → logprob: -16.625120162963867
    8. '
' → logprob: -17.250120162963867
    9. '   ' → logprob: -17.500120162963867
    10. '	c' → logprob: -17.875120162963867

Token 1720: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.16628001630306244
    2. 'c' → logprob: -2.0412800312042236
    3. '1' → logprob: -3.7912800312042236
    4. '.r' → logprob: -7.5412797927856445
    5. '.c' → logprob: -9.166279792785645
    6. '```' → logprob: -10.291279792785645
    7. ' c' → logprob: -10.791279792785645
    8. '[' → logprob: -10.916279792785645
    9. '(c' → logprob: -11.291279792785645
    10. '(' → logprob: -11.291279792785645

Token 1721: '.r' (ID: 2951)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.06199827790260315
    2. '.r' → logprob: -2.8119983673095703
    3. '1' → logprob: -11.31199836730957
    4. 'p' → logprob: -12.06199836730957
    5. '```' → logprob: -12.31199836730957
    6. ' r' → logprob: -12.68699836730957
    7. '.p' → logprob: -13.18699836730957
    8. '	r' → logprob: -13.81199836730957
    9. '   ' → logprob: -14.81199836730957
    10. '_r' → logprob: -14.93699836730957

Token 1722: '**' (ID: 410)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06102337688207626
    2. '**' → logprob: -3.061023473739624
    3. 'c' → logprob: -4.811023235321045
    4. '(' → logprob: -6.811023235321045
    5. ' +' → logprob: -7.436023235321045
    6. ' ' → logprob: -7.811023235321045
    7. '(c' → logprob: -7.936023235321045
    8. '+c' → logprob: -7.936023235321045
    9. '^' → logprob: -8.061023712158203
    10. '²' → logprob: -8.186023712158203

Token 1723: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.750008583068848
    3. '
' → logprob: -14.125008583068848
    4. '   ' → logprob: -16.000009536743164
    5. '```' → logprob: -16.000009536743164
    6. '۲' → logprob: -17.125009536743164
    7. '²' → logprob: -18.062509536743164
    8. '２' → logprob: -18.062509536743164
    9. '٢' → logprob: -18.437509536743164
    10. '२' → logprob: -19.437509536743164

Token 1724: '-c' (ID: 3452)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2984987497329712
    2. '-' → logprob: -2.0484986305236816
    3. ' +' → logprob: -2.1734986305236816
    4. ' -' → logprob: -4.673498630523682
    5. '+c' → logprob: -5.173498630523682
    6. '-c' → logprob: -8.42349910736084
    7. '+
' → logprob: -9.67349910736084
    8. '+(' → logprob: -10.54849910736084
    9. ' ' → logprob: -11.29849910736084
    10. ')' → logprob: -11.79849910736084

Token 1725: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6950491666793823
    2. 'r' → logprob: -0.6950491666793823
    3. '.r' → logprob: -6.695049285888672
    4. '1' → logprob: -7.445049285888672
    5. '_r' → logprob: -10.820049285888672
    6. '```' → logprob: -11.445049285888672
    7. '**' → logprob: -11.570049285888672
    8. '-r' → logprob: -11.945049285888672
    9. ' r' → logprob: -12.070049285888672
    10. '+r' → logprob: -12.195049285888672

Token 1726: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00718216085806489
    2. 'r' → logprob: -5.0071821212768555
    3. 'p' → logprob: -8.257182121276855
    4. '.p' → logprob: -8.507182121276855
    5. '2' → logprob: -13.882182121276855
    6. ' r' → logprob: -14.132182121276855
    7. '	r' → logprob: -14.132182121276855
    8. '.' → logprob: -14.632182121276855
    9. '```' → logprob: -14.882182121276855
    10. '_r' → logprob: -15.507182121276855

Token 1727: '**' (ID: 410)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02681317925453186
    2. '.r' → logprob: -4.15181303024292
    3. 'r' → logprob: -5.02681303024292
    4. 'p' → logprob: -6.02681303024292
    5. '**' → logprob: -7.65181303024292
    6. ')' → logprob: -7.65181303024292
    7. '²' → logprob: -9.151813507080078
    8. '+' → logprob: -9.276813507080078
    9. '.p' → logprob: -9.526813507080078
    10. '+r' → logprob: -9.651813507080078

Token 1728: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '```' → logprob: -14.750032424926758
    4. 'r' → logprob: -14.875032424926758
    5. '   ' → logprob: -15.500032424926758
    6. 'p' → logprob: -15.625032424926758
    7. '(' → logprob: -15.875032424926758
    8. '
' → logprob: -16.750032424926758
    9. 'def' → logprob: -17.000032424926758
    10. '²' → logprob: -17.375032424926758

Token 1729: '+d' (ID: 127807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06369796395301819
    2. ' +' → logprob: -2.8136980533599854
    3. '+c' → logprob: -6.563697814941406
    4. '+
' → logprob: -8.563697814941406
    5. ')' → logprob: -9.938697814941406
    6. '+p' → logprob: -10.438697814941406
    7. '+d' → logprob: -11.313697814941406
    8. '+)' → logprob: -11.938697814941406
    9. ' +
' → logprob: -12.063697814941406
    10. 'import' → logprob: -12.438697814941406

Token 1730: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.05645386502146721
    2. '2' → logprob: -2.9314539432525635
    3. ')' → logprob: -6.681453704833984
    4. '*' → logprob: -8.681453704833984
    5. '²' → logprob: -9.681453704833984
    6. '
' → logprob: -10.431453704833984
    7. '```' → logprob: -11.806453704833984
    8. '[' → logprob: -11.931453704833984
    9. '^' → logprob: -12.181453704833984
    10. '),' → logprob: -12.306453704833984

Token 1731: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.845798710244708e-05
    2. '(' → logprob: -11.375038146972656
    3. ' ' → logprob: -11.625038146972656
    4. '
' → logprob: -12.000038146972656
    5. '```' → logprob: -12.000038146972656
    6. '**' → logprob: -13.375038146972656
    7. '   ' → logprob: -13.750038146972656
    8. '*' → logprob: -13.875038146972656
    9. '``' → logprob: -14.375038146972656
    10. '/' → logprob: -15.437538146972656

Token 1732: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09258770942687988
    2. ' +' → logprob: -2.59258770942688
    3. '+c' → logprob: -4.592587471008301
    4. '+d' → logprob: -5.717587471008301
    5. '+(' → logprob: -9.4675874710083
    6. '+p' → logprob: -10.2175874710083
    7. '   ' → logprob: -10.8425874710083
    8. '+
' → logprob: -11.3425874710083
    9. '```' → logprob: -11.7175874710083
    10. '＋' → logprob: -12.0925874710083

Token 1733: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.187754288315773
    2. ' +' → logprob: -1.8127542734146118
    3. '+c' → logprob: -4.937754154205322
    4. '+d' → logprob: -7.812754154205322
    5. '+
' → logprob: -8.31275463104248
    6. '+(' → logprob: -9.56275463104248
    7. '+p' → logprob: -10.81275463104248
    8. '-' → logprob: -10.93775463104248
    9. ' -' → logprob: -11.31275463104248
    10. '   ' → logprob: -11.81275463104248

Token 1734: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018382536247372627
    2. ' c' → logprob: -4.018382549285889
    3. '(c' → logprob: -8.39338207244873
    4. '   ' → logprob: -13.01838207244873
    5. ' (' → logprob: -13.51838207244873
    6. '	c' → logprob: -13.64338207244873
    7. '    ' → logprob: -14.89338207244873
    8. ' ' → logprob: -14.89338207244873
    9. '  ' → logprob: -15.14338207244873
    10. ')c' → logprob: -15.89338207244873

Token 1735: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06372134387493134
    2. '1' → logprob: -2.8137214183807373
    3. ' c' → logprob: -6.438721179962158
    4. '(c' → logprob: -9.813721656799316
    5. '   ' → logprob: -10.063721656799316
    6. '.c' → logprob: -10.813721656799316
    7. '	c' → logprob: -11.313721656799316
    8. ')c' → logprob: -11.438721656799316
    9. '(' → logprob: -12.313721656799316
    10. ':c' → logprob: -12.938721656799316

Token 1736: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0003049570368602872
    2. 'p' → logprob: -8.12530517578125
    3. '.' → logprob: -13.00030517578125
    4. '
' → logprob: -13.75030517578125
    5. '<p' → logprob: -14.00030517578125
    6. '```' → logprob: -14.00030517578125
    7. '(p' → logprob: -14.25030517578125
    8. '	p' → logprob: -14.62530517578125
    9. '   ' → logprob: -15.12530517578125
    10. '#' → logprob: -15.25030517578125

Token 1737: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11168837547302246
    2. '*' → logprob: -2.3616883754730225
    3. '*(' → logprob: -4.486688613891602
    4. ' ' → logprob: -10.236688613891602
    5. '   ' → logprob: -10.986688613891602
    6. ' *(' → logprob: -10.986688613891602
    7. ')' → logprob: -11.111688613891602
    8. ' (' → logprob: -11.611688613891602
    9. '*((' → logprob: -11.611688613891602
    10. '*p' → logprob: -11.861688613891602

Token 1738: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.008829887956380844
    2. ' (' → logprob: -4.7588300704956055
    3. '((' → logprob: -8.508830070495605
    4. '(' → logprob: -12.133830070495605
    5. '(s' → logprob: -13.633830070495605
    6. '2' → logprob: -13.633830070495605
    7. '(d' → logprob: -13.758830070495605
    8. 'c' → logprob: -13.883830070495605
    9. '   ' → logprob: -14.258830070495605
    10. '  ' → logprob: -14.508830070495605

Token 1739: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002667926950380206
    2. ' c' → logprob: -6.2526679039001465
    3. '(c' → logprob: -7.5026679039001465
    4. '2' → logprob: -9.002668380737305
    5. ' (' → logprob: -10.252668380737305
    6. 'd' → logprob: -11.627668380737305
    7. '   ' → logprob: -12.127668380737305
    8. ' ' → logprob: -12.627668380737305
    9. '  ' → logprob: -13.127668380737305
    10. '-c' → logprob: -13.502668380737305

Token 1740: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005115038249641657
    2. 'r' → logprob: -5.505115032196045
    3. '.r' → logprob: -7.255115032196045
    4. '1' → logprob: -9.005115509033203
    5. '(' → logprob: -10.005115509033203
    6. '```' → logprob: -10.380115509033203
    7. '[' → logprob: -10.505115509033203
    8. '
' → logprob: -11.005115509033203
    9. 'p' → logprob: -11.255115509033203
    10. ' ' → logprob: -11.380115509033203

Token 1741: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0003192578151356429
    2. 'r' → logprob: -8.125319480895996
    3. '.p' → logprob: -10.875319480895996
    4. 'p' → logprob: -13.125319480895996
    5. ' r' → logprob: -14.000319480895996
    6. '.' → logprob: -14.375319480895996
    7. '```' → logprob: -15.375319480895996
    8. '	r' → logprob: -15.875319480895996
    9. 'class' → logprob: -16.50031852722168
    10. '
' → logprob: -16.62531852722168

Token 1742: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.48913002014160156
    2. '.r' → logprob: -1.1141300201416016
    3. '²' → logprob: -3.4891300201416016
    4. '^' → logprob: -3.9891300201416016
    5. '2' → logprob: -5.614130020141602
    6. '.x' → logprob: -6.114130020141602
    7. '```' → logprob: -6.614130020141602
    8. 'r' → logprob: -7.114130020141602
    9. '#' → logprob: -8.614130020141602
    10. ' r' → logprob: -8.989130020141602

Token 1743: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.375041007995605
    3. '(' → logprob: -13.125041007995605
    4. '```' → logprob: -13.125041007995605
    5. '   ' → logprob: -13.375041007995605
    6. '²' → logprob: -14.250041007995605
    7. '
' → logprob: -14.750041007995605
    8. '۲' → logprob: -15.125041007995605
    9. '{-#' → logprob: -15.500041007995605
    10. '-' → logprob: -15.625041007995605

Token 1744: '-c' (ID: 3452)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0006828876794315875
    2. '-' → logprob: -7.875682830810547
    3. ' -' → logprob: -9.000682830810547
    4. '```' → logprob: -9.375682830810547
    5. 'def' → logprob: -10.125682830810547
    6. '[' → logprob: -11.375682830810547
    7. '(' → logprob: -11.750682830810547
    8. '2' → logprob: -11.750682830810547
    9. ' **' → logprob: -12.375682830810547
    10. ')**' → logprob: -12.500682830810547

Token 1745: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.39012232422828674
    2. '2' → logprob: -1.1401222944259644
    3. 'p' → logprob: -6.140122413635254
    4. 'c' → logprob: -7.890122413635254
    5. '```' → logprob: -8.265122413635254
    6. 'r' → logprob: -8.640122413635254
    7. '.p' → logprob: -9.265122413635254
    8. '.' → logprob: -9.640122413635254
    9. '.c' → logprob: -10.952622413635254
    10. '
' → logprob: -11.265122413635254

Token 1746: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.034162990748882294
    2. '.p' → logprob: -3.409162998199463
    3. 'p' → logprob: -8.534162521362305
    4. '2' → logprob: -8.659162521362305
    5. 'r' → logprob: -9.159162521362305
    6. '```' → logprob: -10.659162521362305
    7. '
' → logprob: -12.409162521362305
    8. '.' → logprob: -12.659162521362305
    9. '**' → logprob: -12.659162521362305
    10. ' .' → logprob: -12.909162521362305

Token 1747: '**' (ID: 410)
  Prédit: '.p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.4644172489643097
    2. '**' → logprob: -1.5894172191619873
    3. '2' → logprob: -1.9644172191619873
    4. '.r' → logprob: -3.7144172191619873
    5. '²' → logprob: -6.464417457580566
    6. '.s' → logprob: -7.589417457580566
    7. 'p' → logprob: -7.964417457580566
    8. 'r' → logprob: -8.839417457580566
    9. '```' → logprob: -8.964417457580566
    10. ' ' → logprob: -10.339417457580566

Token 1748: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010640094988048077
    2. '**' → logprob: -6.876063823699951
    3. '
' → logprob: -11.00106430053711
    4. ' ' → logprob: -12.12606430053711
    5. '²' → logprob: -12.50106430053711
    6. 'c' → logprob: -12.87606430053711
    7. '^' → logprob: -14.25106430053711
    8. '```' → logprob: -14.75106430053711
    9. 'r' → logprob: -14.87606430053711
    10. '(' → logprob: -15.25106430053711

Token 1749: '+d' (ID: 127807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6083687543869019
    2. '+d' → logprob: -1.1083687543869019
    3. '**' → logprob: -2.9833688735961914
    4. '-' → logprob: -3.3583688735961914
    5. ' +' → logprob: -3.8583688735961914
    6. 'd' → logprob: -4.483368873596191
    7. '+(' → logprob: -5.858368873596191
    8. ' -' → logprob: -6.108368873596191
    9. ')' → logprob: -7.233368873596191
    10. '
' → logprob: -7.733368873596191

Token 1750: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02492070011794567
    2. '2' → logprob: -3.774920701980591
    3. '²' → logprob: -6.524920463562012
    4. '^' → logprob: -9.274920463562012
    5. '```' → logprob: -10.024920463562012
    6. 'p' → logprob: -10.524920463562012
    7. '.p' → logprob: -11.149920463562012
    8. '*' → logprob: -12.274920463562012
    9. 'import' → logprob: -12.399920463562012
    10. '[' → logprob: -12.524920463562012

Token 1751: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -11.875022888183594
    3. '(' → logprob: -12.125022888183594
    4. '
' → logprob: -12.375022888183594
    5. '**' → logprob: -12.750022888183594
    6. '```' → logprob: -13.625022888183594
    7. '22' → logprob: -15.250022888183594
    8. '[' → logprob: -15.375022888183594
    9. '²' → logprob: -15.375022888183594
    10. '۲' → logprob: -16.000022888183594

Token 1752: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006949441507458687
    2. ' )' → logprob: -5.381949424743652
    3. ')/(' → logprob: -6.631949424743652
    4. ')/' → logprob: -7.881949424743652
    5. '-' → logprob: -8.131949424743652
    6. ' -' → logprob: -8.256949424743652
    7. '   ' → logprob: -11.006949424743652
    8. ' ' → logprob: -11.506949424743652
    9. ')
' → logprob: -11.881949424743652
    10. ')-(' → logprob: -12.131949424743652

Token 1753: ' /' (ID: 820)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03954601660370827
    2. ')/(' → logprob: -3.914546012878418
    3. ')/' → logprob: -4.539546012878418
    4. ' )' → logprob: -5.539546012878418
    5. '*' → logprob: -6.789546012878418
    6. ' *' → logprob: -7.164546012878418
    7. ' /' → logprob: -7.414546012878418
    8. 'def' → logprob: -7.914546012878418
    9. '
' → logprob: -7.914546012878418
    10. ')
' → logprob: -8.539546012878418

Token 1754: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028224563226103783
    2. '((' → logprob: -3.778224468231201
    3. '2' → logprob: -5.653224468231201
    4. '(d' → logprob: -7.278224468231201
    5. '(c' → logprob: -8.27822494506836
    6. '(Point' → logprob: -8.27822494506836
    7. '(abs' → logprob: -8.90322494506836
    8. ' (' → logprob: -9.90322494506836
    9. 'Point' → logprob: -11.52822494506836
    10. '(
' → logprob: -11.77822494506836

Token 1755: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31337273120880127
    2. '2' → logprob: -1.3133727312088013
    3. ' (' → logprob: -10.188372611999512
    4. '((' → logprob: -10.688372611999512
    5. 'd' → logprob: -10.813372611999512
    6. '(d' → logprob: -11.063372611999512
    7. ' ' → logprob: -11.438372611999512
    8. '4' → logprob: -13.438372611999512
    9. '   ' → logprob: -13.938372611999512
    10. '```' → logprob: -15.438372611999512

Token 1756: '*d' (ID: 81685)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5806857347488403
    2. '(c' → logprob: -0.8306857347488403
    3. 'd' → logprob: -6.080685615539551
    4. '(' → logprob: -7.080685615539551
    5. '(
' → logprob: -7.080685615539551
    6. '((' → logprob: -7.455685615539551
    7. ' (' → logprob: -9.33068561553955
    8. '(abs' → logprob: -9.70568561553955
    9. '
' → logprob: -10.58068561553955
    10. 'abs' → logprob: -12.58068561553955

Token 1757: '**' (ID: 410)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2493780255317688
    2. '**' → logprob: -1.749377965927124
    3. 'd' → logprob: -3.249377965927124
    4. '2' → logprob: -6.499378204345703
    5. '<|end|>' → logprob: -6.624378204345703
    6. 'def' → logprob: -6.749378204345703
    7. ')
' → logprob: -7.124378204345703
    8. ')d' → logprob: -7.374378204345703
    9. ' d' → logprob: -7.624378204345703
    10. '[' → logprob: -7.749378204345703

Token 1758: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.000006675720215
    3. '
' → logprob: -15.000006675720215
    4. '(' → logprob: -15.250006675720215
    5. '```' → logprob: -16.75000762939453
    6. '   ' → logprob: -17.37500762939453
    7. '۲' → logprob: -18.25000762939453
    8. '3' → logprob: -18.25000762939453
    9. '２' → logprob: -18.62500762939453
    10. 'd' → logprob: -18.81250762939453

Token 1759: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045440301299095154
    2. '<|end|>' → logprob: -3.795440196990967
    3. ' -' → logprob: -4.670440196990967
    4. '   ' → logprob: -5.295440196990967
    5. '-' → logprob: -5.670440196990967
    6. '<|end|>' → logprob: -6.795440196990967
    7. ' )' → logprob: -7.795440196990967
    8. '[' → logprob: -8.045440673828125
    9. ' ' → logprob: -8.045440673828125
    10. '
' → logprob: -8.420440673828125

Token 1760: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1644169092178345
    2. 'v' → logprob: -1.2894169092178345
    3. 'e' → logprob: -2.289416790008545
    4. 't' → logprob: -3.039416790008545
    5. 'h' → logprob: -3.164416790008545
    6. 'import' → logprob: -3.414416790008545
    7. '+' → logprob: -3.539416790008545
    8. 'mid' → logprob: -3.664416790008545
    9. 'd' → logprob: -4.039416790008545
    10. 'q' → logprob: -4.289416790008545

Token 1761: ' tan' (ID: 8323)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.4629402160644531
    2. 'e' → logprob: -2.212940216064453
    3. 't' → logprob: -2.212940216064453
    4. 'base' → logprob: -3.462940216064453
    5. 'p' → logprob: -3.587940216064453
    6. 'vec' → logprob: -3.712940216064453
    7. 'v' → logprob: -3.962940216064453
    8. 'per' → logprob: -4.337940216064453
    9. 'd' → logprob: -5.212940216064453
    10. 'q' → logprob: -5.587940216064453

Token 1762: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.6614270210266113
    2. '_vec' → logprob: -1.5364270210266113
    3. ' =' → logprob: -2.4114270210266113
    4. '=' → logprob: -2.9114270210266113
    5. 'v' → logprob: -3.1614270210266113
    6. '_v' → logprob: -3.2864270210266113
    7. '_dir' → logprob: -4.411427021026611
    8. 'dir' → logprob: -4.786427021026611
    9. '_p' → logprob: -4.911427021026611
    10. 'Vec' → logprob: -5.661427021026611

Token 1763: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933577060699463
    2. ' =' → logprob: -0.6933577060699463
    3. '=c' → logprob: -9.193357467651367
    4. '=(' → logprob: -10.318357467651367
    5. 'c' → logprob: -10.443357467651367
    6. 's' → logprob: -10.818357467651367
    7. '(c' → logprob: -11.943357467651367
    8. '(s' → logprob: -12.443357467651367
    9. '=s' → logprob: -12.693357467651367
    10. '<|end|>' → logprob: -12.818357467651367

Token 1764: ' Rotation' (ID: 98033)
  Prédit: 'Rotation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rotation' → logprob: -0.006054640281945467
    2. 'Point' → logprob: -5.756054878234863
    3. '(c' → logprob: -6.381054878234863
    4. '(Point' → logprob: -7.006054878234863
    5. ' Rotation' → logprob: -8.631054878234863
    6. 'c' → logprob: -10.506054878234863
    7. '(' → logprob: -10.631054878234863
    8. 'rotation' → logprob: -11.756054878234863
    9. '((' → logprob: -11.881054878234863
    10. ' (' → logprob: -12.006054878234863

Token 1765: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00034595211036503315
    2. 'c' → logprob: -8.500346183776855
    3. '((' → logprob: -9.125346183776855
    4. '(Point' → logprob: -10.500346183776855
    5. '(mid' → logprob: -12.250346183776855
    6. '(' → logprob: -14.500346183776855
    7. 'Point' → logprob: -15.000346183776855
    8. 'mid' → logprob: -16.12534523010254
    9. '(Line' → logprob: -16.37534523010254
    10. '(m' → logprob: -16.50034523010254

Token 1766: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4751793444156647
    2. '2' → logprob: -0.9751793146133423
    3. '(c' → logprob: -6.975179195404053
    4. 'c' → logprob: -8.850179672241211
    5. 'Point' → logprob: -11.475179672241211
    6. 'ircle' → logprob: -12.350179672241211
    7. '(p' → logprob: -12.975179672241211
    8. 'p' → logprob: -13.475179672241211
    9. 'mid' → logprob: -14.225179672241211
    10. '(' → logprob: -14.350179672241211

Token 1767: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.29161494970321655
    2. 'c' → logprob: -2.0416150093078613
    3. '.p' → logprob: -2.2916150093078613
    4. '(p' → logprob: -4.666615009307861
    5. '.c' → logprob: -4.791615009307861
    6. '(c' → logprob: -5.541615009307861
    7. '1' → logprob: -9.291614532470703
    8. '(' → logprob: -9.291614532470703
    9. '-p' → logprob: -9.666614532470703
    10. 'class' → logprob: -10.166614532470703

Token 1768: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.017721863463521004
    2. '-' → logprob: -4.767721652984619
    3. 'c' → logprob: -5.267721652984619
    4. '-(' → logprob: -5.642721652984619
    5. ' -' → logprob: -9.017722129821777
    6. '(c' → logprob: -9.017722129821777
    7. '-
' → logprob: -9.267722129821777
    8. '-p' → logprob: -11.142722129821777
    9. ')-(' → logprob: -12.767722129821777
    10. ' c' → logprob: -13.392722129821777

Token 1769: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00028576893964782357
    2. 'c' → logprob: -8.250286102294922
    3. '1' → logprob: -11.000286102294922
    4. 'p' → logprob: -11.875286102294922
    5. 'o' → logprob: -14.375286102294922
    6. 'r' → logprob: -15.375286102294922
    7. '２' → logprob: -16.875286102294922
    8. 'oint' → logprob: -17.000286102294922
    9. 't' → logprob: -17.875286102294922
    10. 'Point' → logprob: -18.125286102294922

Token 1770: '.p' (ID: 1201)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12934938073158264
    2. 'c' → logprob: -2.12934947013855
    3. '-p' → logprob: -6.629349231719971
    4. '.p' → logprob: -7.504349231719971
    5. '(c' → logprob: -8.504349708557129
    6. '.c' → logprob: -8.879349708557129
    7. '-c' → logprob: -8.879349708557129
    8. '-' → logprob: -10.879349708557129
    9. '```' → logprob: -11.629349708557129
    10. ' c' → logprob: -12.129349708557129

Token 1771: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000708501785993576
    2. ',(' → logprob: -8.12570858001709
    3. ' ,' → logprob: -9.00070858001709
    4. '(c' → logprob: -9.37570858001709
    5. ',c' → logprob: -9.62570858001709
    6. '(pi' → logprob: -9.62570858001709
    7. '(' → logprob: -10.25070858001709
    8. '(Point' → logprob: -11.62570858001709
    9. ',
' → logprob: -11.87570858001709
    10. '90' → logprob: -12.25070858001709

Token 1772: ' pi' (ID: 6404)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.002505386248230934
    2. '(pi' → logprob: -6.127505302429199
    3. ' pi' → logprob: -8.2525053024292
    4. 'atan' → logprob: -10.2525053024292
    5. '(' → logprob: -11.8775053024292
    6. 'math' → logprob: -12.3775053024292
    7. '/pi' → logprob: -12.5025053024292
    8. '.pi' → logprob: -12.8775053024292
    9. '+' → logprob: -13.0025053024292
    10. '*pi' → logprob: -14.0025053024292

Token 1773: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -4.246537173457909e-06
    2. ' /' → logprob: -13.000003814697266
    3. '()/' → logprob: -13.625003814697266
    4. ')' → logprob: -15.500003814697266
    5. '90' → logprob: -15.625003814697266
    6. ')/' → logprob: -16.375003814697266
    7. '2' → logprob: -16.500003814697266
    8. 'pi' → logprob: -17.125003814697266
    9. '*' → logprob: -17.250003814697266
    10. '/pi' → logprob: -17.375003814697266

Token 1774: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015252856246661395
    2. '/' → logprob: -8.875152587890625
    3. '0' → logprob: -11.500152587890625
    4. 'pi' → logprob: -13.750152587890625
    5. ' ' → logprob: -14.125152587890625
    6. '   ' → logprob: -15.500152587890625
    7. '-' → logprob: -15.625152587890625
    8. '1' → logprob: -16.125152587890625
    9. '90' → logprob: -17.000152587890625
    10. 'float' → logprob: -17.250152587890625

Token 1775: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001529501867480576
    2. ')*' → logprob: -7.751529693603516
    3. ')*(' → logprob: -7.876529693603516
    4. ',' → logprob: -8.001529693603516
    5. ')
' → logprob: -8.251529693603516
    6. ' )' → logprob: -10.001529693603516
    7. ').' → logprob: -10.501529693603516
    8. ')/' → logprob: -12.251529693603516
    9. '   ' → logprob: -12.376529693603516
    10. '(d' → logprob: -12.501529693603516

Token 1776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03826984018087387
    2. 't' → logprob: -3.6632697582244873
    3. 'length' → logprob: -6.038269996643066
    4. 'h' → logprob: -6.163269996643066
    5. 'v' → logprob: -6.538269996643066
    6. 'return' → logprob: -6.663269996643066
    7. ' t' → logprob: -7.163269996643066
    8. 'e' → logprob: -7.413269996643066
    9. ' length' → logprob: -7.788269996643066
    10. 'vec' → logprob: -7.788269996643066

Token 1777: ' return' (ID: 622)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7060297131538391
    2. 'tan' → logprob: -1.5810296535491943
    3. 'h' → logprob: -1.7060296535491943
    4. 'import' → logprob: -3.8310296535491943
    5. 'return' (adapté à ' return') → logprob: -4.206029891967773
    6. 'tmp' → logprob: -4.581029891967773
    7. 'vec' → logprob: -4.831029891967773
    8. 'q' → logprob: -4.956029891967773
    9. 'len' → logprob: -5.081029891967773
    10. 'length' → logprob: -5.456029891967773

Token 1778: ' cross' (ID: 8088)
  Prédit: '[mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.060063835233449936
    2. '[
' → logprob: -3.0600638389587402
    3. '[m' → logprob: -4.56006383895874
    4. '[' → logprob: -7.06006383895874
    5. '[t' → logprob: -10.060063362121582
    6. ' [' → logprob: -10.685063362121582
    7. '[min' → logprob: -11.310063362121582
    8. '[left' → logprob: -12.935063362121582
    9. '[max' → logprob: -13.060063362121582
    10. '[(' → logprob: -13.310063362121582

Token 1779: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.05698763579130173
    2. '[' → logprob: -3.3069875240325928
    3. '[
' → logprob: -4.681987762451172
    4. '[mid' → logprob: -4.931987762451172
    5. '[m' → logprob: -6.681987762451172
    6. 'points' → logprob: -7.681987762451172
    7. '[p' → logprob: -7.931987762451172
    8. '[int' → logprob: -9.931987762451172
    9. '[c' → logprob: -10.431987762451172
    10. 'mid' → logprob: -10.806987762451172

Token 1780: '_l' (ID: 1478)
  Prédit: '_cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -0.04976968839764595
    2. '_l' → logprob: -3.674769639968872
    3. '_ll' → logprob: -3.799769639968872
    4. '_sc' → logprob: -8.424769401550293
    5. 'cc' → logprob: -8.799769401550293
    6. '(cc' → logprob: -9.674769401550293
    7. '(l' → logprob: -9.674769401550293
    8. '_lp' → logprob: -9.924769401550293
    9. '_c' → logprob: -10.174769401550293
    10. '_line' → logprob: -10.549769401550293

Token 1781: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07089126110076904
    2. 'l' → logprob: -3.0708913803100586
    3. 'lc' → logprob: -3.8208913803100586
    4. 'cc' → logprob: -8.945891380310059
    5. 'line' → logprob: -11.570891380310059
    6. '_line' → logprob: -13.070891380310059
    7. 'p' → logprob: -13.320891380310059
    8. 'Line' → logprob: -13.570891380310059
    9. '_l' → logprob: -14.070891380310059
    10. '_c' → logprob: -14.570891380310059

Token 1782: '(Line' (ID: 170362)
  Prédit: '(Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Line' → logprob: -0.027195502072572708
    2. 'Line' → logprob: -3.652195453643799
    3. '(C' → logprob: -7.652195453643799
    4. 'Circle' → logprob: -8.527195930480957
    5. 'mid' → logprob: -9.902195930480957
    6. '(
' → logprob: -10.527195930480957
    7. '(c' → logprob: -10.652195930480957
    8. '```' → logprob: -11.152195930480957
    9. '(L' → logprob: -11.402195930480957
    10. '(' → logprob: -11.402195930480957

Token 1783: '(mid' (ID: 121498)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.47638413310050964
    2. '(mid' → logprob: -0.976384162902832
    3. '(Point' → logprob: -6.476384162902832
    4. 'Point' → logprob: -7.976384162902832
    5. '(Line' → logprob: -8.851384162902832
    6. '(
' → logprob: -9.351384162902832
    7. 'Circle' → logprob: -9.351384162902832
    8. '(c' → logprob: -9.976384162902832
    9. '(C' → logprob: -11.351384162902832
    10. 'Line' → logprob: -11.476384162902832

Token 1784: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.010795723646879196
    2. 'p' → logprob: -5.010795593261719
    3. 'mid' → logprob: -5.510795593261719
    4. 'c' → logprob: -12.010795593261719
    5. 'Point' → logprob: -12.635795593261719
    6. 'point' → logprob: -12.760795593261719
    7. 'vec' → logprob: -12.760795593261719
    8. '```' → logprob: -13.885795593261719
    9. '(mid' → logprob: -13.885795593261719
    10. '(p' → logprob: -14.010795593261719

Token 1785: ',' (ID: 11)
  Prédit: '(mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -0.23323145508766174
    2. 'mid' → logprob: -2.233231544494629
    3. '(t' → logprob: -2.483231544494629
    4. ',' → logprob: -5.233231544494629
    5. '(c' → logprob: -5.358231544494629
    6. 't' → logprob: -6.233231544494629
    7. 'tan' → logprob: -6.358231544494629
    8. '(Point' → logprob: -6.483231544494629
    9. '(p' → logprob: -7.733231544494629
    10. '(' → logprob: -7.983231544494629

Token 1786: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -7.147740689106286e-05
    2. 'Point' → logprob: -9.75007152557373
    3. 'Line' → logprob: -11.62507152557373
    4. ' mid' → logprob: -12.50007152557373
    5. '(mid' → logprob: -15.25007152557373
    6. '   ' → logprob: -16.250070571899414
    7. 'line' → logprob: -17.250070571899414
    8. '[mid' → logprob: -18.125070571899414
    9. ' Point' → logprob: -18.250070571899414
    10. '  ' → logprob: -18.625070571899414

Token 1787: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.318681188422488e-05
    2. 'p' → logprob: -11.62501335144043
    3. 'vec' → logprob: -13.62501335144043
    4. 'mid' → logprob: -13.75001335144043
    5. 'vector' → logprob: -15.62501335144043
    6. 't' → logprob: -15.62501335144043
    7. '```' → logprob: -15.87501335144043
    8. 'pm' → logprob: -15.87501335144043
    9. 'tan' → logprob: -15.87501335144043
    10. '<p' → logprob: -16.37501335144043

Token 1788: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00401452649384737
    2. ' +' → logprob: -5.629014492034912
    3. '+t' → logprob: -7.879014492034912
    4. 'tan' → logprob: -11.25401496887207
    5. '+(' → logprob: -12.37901496887207
    6. '＋' → logprob: -12.62901496887207
    7. '+p' → logprob: -12.62901496887207
    8. ',' → logprob: -13.00401496887207
    9. '   ' → logprob: -13.25401496887207
    10. '+
' → logprob: -13.37901496887207

Token 1789: 'tan' (ID: 47318)
  Prédit: 'tan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tan' → logprob: -2.816093228830141e-06
    2. ' tan' → logprob: -13.37500286102295
    3. 'tam' → logprob: -14.37500286102295
    4. 't' → logprob: -15.37500286102295
    5. 'tant' → logprob: -15.50000286102295
    6. '   ' → logprob: -16.250001907348633
    7. '(t' → logprob: -17.875001907348633
    8. ' ' → logprob: -18.250001907348633
    9. '	t' → logprob: -18.250001907348633
    10. 'atan' → logprob: -18.875001907348633

Token 1790: 'vec' (ID: 3192)
  Prédit: 'vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: 0.0
    2. 've' → logprob: -16.875
    3. 'v' → logprob: -18.875
    4. '_vec' → logprob: -19.25
    5. 'vect' → logprob: -19.25
    6. ' vec' → logprob: -19.75
    7. 'vector' → logprob: -20.25
    8. 'tan' → logprob: -20.25
    9. '
' → logprob: -20.75
    10. '	vec' → logprob: -20.875

Token 1791: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2617560029029846
    2. '(t' → logprob: -2.01175594329834
    3. '(' → logprob: -2.38675594329834
    4. ',' → logprob: -6.51175594329834
    5. '(-' → logprob: -7.01175594329834
    6. '(pi' → logprob: -7.26175594329834
    7. '))' → logprob: -8.38675594329834
    8. '(p' → logprob: -8.51175594329834
    9. '((' → logprob: -8.51175594329834
    10. '())' → logprob: -8.88675594329834

Token 1792: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04958173260092735
    2. 'Circle' → logprob: -3.04958176612854
    3. 'Line' → logprob: -7.174581527709961
    4. ' c' → logprob: -9.174581527709961
    5. ' Circle' → logprob: -9.799581527709961
    6. '[c' → logprob: -10.799581527709961
    7. 'circle' → logprob: -11.424581527709961
    8. '(c' → logprob: -11.924581527709961
    9. 'Point' → logprob: -12.174581527709961
    10. '(Line' → logprob: -12.424581527709961

Token 1793: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. '2' → logprob: -9.37508487701416
    3. '１' → logprob: -16.875085830688477
    4. '```' → logprob: -19.187585830688477
    5. '
' → logprob: -20.375085830688477
    6. ')' → logprob: -20.687585830688477
    7. '১' → logprob: -20.812585830688477
    8. 'l' → logprob: -21.000085830688477
    9. 's' → logprob: -21.187585830688477
    10. '۱' → logprob: -21.187585830688477

Token 1794: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. ')c' → logprob: -11.625025749206543
    3. ')
' → logprob: -11.750025749206543
    4. '())' → logprob: -13.750025749206543
    5. ')[' → logprob: -13.875025749206543
    6. '))' → logprob: -14.125025749206543
    7. ')#' → logprob: -14.125025749206543
    8. ')}' → logprob: -14.375025749206543
    9. ')p' → logprob: -14.500025749206543
    10. ')return' → logprob: -14.625025749206543

Token 1795: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -17.875
    3. '
' → logprob: -20.5
    4. '	def' → logprob: -22.0
    5. '#' → logprob: -22.125
    6. ':def' → logprob: -22.625
    7. 'from' → logprob: -23.125
    8. 'return' → logprob: -23.5
    9. '```' → logprob: -23.625
    10. 'ndef' → logprob: -24.25

Token 1796: ' p' (ID: 275)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.320199877838604e-07
    2. 'return' → logprob: -15.0
    3. '
' → logprob: -17.125
    4. ' def' → logprob: -17.875
    5. '#' → logprob: -18.125
    6. '   ' → logprob: -20.25
    7. 'from' → logprob: -21.625
    8. 'pass' → logprob: -21.75
    9. '```' → logprob: -22.125
    10. ':def' → logprob: -22.625

Token 1797: 'から' (ID: 27500)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7811371088027954
    2. ' =' → logprob: -1.5311371088027954
    3. '#' → logprob: -1.6561371088027954
    4. 'r' → logprob: -2.781136989593506
    5. 'ass' → logprob: -3.906136989593506
    6. '=' → logprob: -5.156136989593506
    7. ':' → logprob: -5.406136989593506
    8. 'assing' → logprob: -5.406136989593506
    9. 'oints' → logprob: -5.531136989593506
    10. '<|end|>' → logprob: -5.656136989593506

Token 1798: 'の' (ID: 3385)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.64347904920578
    2. 'l' → logprob: -0.89347904920578
    3. 'def' → logprob: -3.018479108810425
    4. '#' → logprob: -4.893478870391846
    5. 's' → logprob: -5.268478870391846
    6. 'p' → logprob: -6.018478870391846
    7. 'Circle' → logprob: -8.393479347229004
    8. 'cl' → logprob: -8.643479347229004
    9. 'Line' → logprob: -8.768479347229004
    10. 'line' → logprob: -8.893479347229004

Token 1799: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1272532939910889
    2. 'def' → logprob: -1.6272532939910889
    3. 'c' → logprob: -1.7522532939910889
    4. 'p' → logprob: -1.8772532939910889
    5. '#' → logprob: -2.502253293991089
    6. 'closest' → logprob: -4.002253532409668
    7. 'circle' → logprob: -4.752253532409668
    8. 'projection' → logprob: -4.877253532409668
    9. 'point' → logprob: -5.252253532409668
    10. 'l' → logprob: -5.377253532409668

Token 1800: 'の' (ID: 3385)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16287842392921448
    2. 'lass' → logprob: -2.1628785133361816
    3. '#' → logprob: -3.5378785133361816
    4. 'ircle' → logprob: -6.162878513336182
    5. 'class' → logprob: -7.162878513336182
    6. 'p' → logprob: -7.162878513336182
    7. 'l' → logprob: -7.537878513336182
    8. 'lassical' → logprob: -7.787878513336182
    9. 'ross' → logprob: -7.912878513336182
    10. 'd' → logprob: -7.912878513336182

Token 1801: '接' (ID: 9878)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0013820211170241237
    2. '接' → logprob: -7.001381874084473
    3. '#' → logprob: -8.626381874084473
    4. 'r' → logprob: -9.376381874084473
    5. 'tan' → logprob: -10.126381874084473
    6. 'def' → logprob: -10.626381874084473
    7. 'distance' → logprob: -11.001381874084473
    8. '_t' → logprob: -11.126381874084473
    9. 'external' → logprob: -11.251381874084473
    10. '外' → logprob: -11.376381874084473

Token 1802: '点' (ID: 8300)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6021814942359924
    2. '点' → logprob: -1.2271814346313477
    3. 'def' → logprob: -2.6021814346313477
    4. '線' → logprob: -3.3521814346313477
    5. 'point' → logprob: -3.3521814346313477
    6. '触' → logprob: -5.602181434631348
    7. 'line' → logprob: -5.977181434631348
    8. 'lines' → logprob: -6.102181434631348
    9. 'points' → logprob: -6.477181434631348
    10. 'tan' → logprob: -6.852181434631348

Token 1803: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.512236498361744e-07
    2. ' def' → logprob: -14.625000953674316
    3. '#' → logprob: -17.0
    4. '```' → logprob: -18.375
    5. '	def' → logprob: -20.75
    6. '``' → logprob: -20.875
    7. '
' → logprob: -21.0
    8. '(def' → logprob: -21.25
    9. ':def' → logprob: -21.25
    10. 'import' → logprob: -21.375

Token 1804: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. '```' → logprob: -14.625000953674316
    3. ' def' → logprob: -15.500000953674316
    4. '
' → logprob: -18.25
    5. '``' → logprob: -19.75
    6. '#' → logprob: -19.75
    7. '	def' → logprob: -19.875
    8. 'from' → logprob: -20.5
    9. ':def' → logprob: -20.75
    10. '`' → logprob: -22.0

Token 1805: ' tangent' (ID: 149281)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0010465048253536224
    2. 'get' → logprob: -7.626046657562256
    3. 'cross' → logprob: -7.876046657562256
    4. 'tan' → logprob: -9.501046180725098
    5. 'contact' → logprob: -9.626046180725098
    6. 'touch' → logprob: -11.501046180725098
    7. 'T' → logprob: -11.626046180725098
    8. 'point' → logprob: -12.501046180725098
    9. 'polar' → logprob: -12.626046180725098
    10. ' tangent' → logprob: -12.876046180725098

Token 1806: '_cp' (ID: 96857)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4762134253978729
    2. '(c' → logprob: -1.4762134552001953
    3. '_points' → logprob: -2.6012134552001953
    4. 'def' → logprob: -3.2262134552001953
    5. 'points' → logprob: -4.476213455200195
    6. '_c' → logprob: -4.976213455200195
    7. 's' → logprob: -5.601213455200195
    8. 'c' → logprob: -5.851213455200195
    9. 'Points' → logprob: -5.976213455200195
    10. '_p' → logprob: -6.226213455200195

Token 1807: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00011033779446734115
    2. '(p' → logprob: -9.875110626220703
    3. '(l' → logprob: -10.125110626220703
    4. 'def' → logprob: -11.250110626220703
    5. 'c' → logprob: -13.125110626220703
    6. '(' → logprob: -13.375110626220703
    7. '#' → logprob: -14.500110626220703
    8. '(circle' → logprob: -14.625110626220703
    9. '(point' → logprob: -15.375110626220703
    10. ' (' → logprob: -15.500110626220703

Token 1808: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0013083330122753978
    2. '):' → logprob: -7.376308441162109
    3. '(p' → logprob: -7.751308441162109
    4. '(' → logprob: -8.87630844116211
    5. ',' → logprob: -10.00130844116211
    6. ')' → logprob: -11.00130844116211
    7. 'def' → logprob: -11.25130844116211
    8. ')(' → logprob: -11.87630844116211
    9. 'c' → logprob: -12.00130844116211
    10. 'p' → logprob: -12.00130844116211

Token 1809: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.42911496758461
    2. 'c' → logprob: -1.0541149377822876
    3. 'Point' → logprob: -9.179115295410156
    4. ' p' → logprob: -9.679115295410156
    5. ')' → logprob: -9.929115295410156
    6. ' c' → logprob: -10.179115295410156
    7. 'def' → logprob: -10.179115295410156
    8. 'point' → logprob: -10.554115295410156
    9. 't' → logprob: -11.491615295410156
    10. '
' → logprob: -11.554115295410156

Token 1810: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12055040895938873
    2. '):
' → logprob: -2.9955503940582275
    3. '(c' → logprob: -2.9955503940582275
    4. '(p' → logprob: -4.370550632476807
    5. '(l' → logprob: -7.745550632476807
    6. 'def' → logprob: -8.620550155639648
    7. ':' → logprob: -8.870550155639648
    8. ')' → logprob: -9.870550155639648
    9. '(' → logprob: -10.620550155639648
    10. '   ' → logprob: -10.745550155639648

Token 1811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7610691785812378
    2. 'vec' → logprob: -1.5110691785812378
    3. 'v' → logprob: -1.8860691785812378
    4. 'if' → logprob: -2.0110692977905273
    5. 'd' → logprob: -5.136069297790527
    6. 'r' → logprob: -5.386069297790527
    7. 'op' → logprob: -5.386069297790527
    8. 'pass' → logprob: -5.511069297790527
    9. 'oc' → logprob: -6.636069297790527
    10. 'vp' → logprob: -6.886069297790527

Token 1812: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.922555685043335
    2. 'd' → logprob: -1.797555685043335
    3. 'l' → logprob: -2.172555685043335
    4. 'vec' → logprob: -2.422555685043335
    5. 'h' → logprob: -2.672555685043335
    6. 'q' → logprob: -2.797555685043335
    7. 'dp' → logprob: -3.672555685043335
    8. 'if' → logprob: -4.547555923461914
    9. 'rp' → logprob: -4.547555923461914
    10. 'dis' → logprob: -5.172555923461914

Token 1813: ' cross' (ID: 8088)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05828456953167915
    2. 'cross' → logprob: -3.6832845211029053
    3. '[c' → logprob: -4.558284759521484
    4. 'None' → logprob: -4.683284759521484
    5. '[]
' → logprob: -5.308284759521484
    6. '[' → logprob: -5.933284759521484
    7. '[p' → logprob: -6.933284759521484
    8. '[t' → logprob: -7.558284759521484
    9. ' []' → logprob: -7.683284759521484
    10. '(c' → logprob: -7.933284759521484

Token 1814: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.7120533811976202e-05
    2. 'points' → logprob: -11.125017166137695
    3. 'cross' → logprob: -13.250017166137695
    4. '```' → logprob: -16.000017166137695
    5. '[]' → logprob: -16.125017166137695
    6. '(point' → logprob: -17.125017166137695
    7. 'po' → logprob: -17.375017166137695
    8. 'circle' → logprob: -17.750017166137695
    9. 'product' → logprob: -17.875017166137695
    10. '_point' → logprob: -17.875017166137695

Token 1815: '_cc' (ID: 69524)
  Prédit: '_cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -0.3289729654788971
    2. '_l' → logprob: -2.0789730548858643
    3. '_cl' → logprob: -2.2039730548858643
    4. '_cp' → logprob: -3.4539730548858643
    5. '_ll' → logprob: -5.078972816467285
    6. '_lp' → logprob: -5.203972816467285
    7. '_c' → logprob: -7.078972816467285
    8. '_circle' → logprob: -7.703972816467285
    9. '(l' → logprob: -9.828972816467285
    10. '_tc' → logprob: -10.328972816467285

Token 1816: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.23851440846920013
    2. '(C' → logprob: -1.6135144233703613
    3. 'Circle' → logprob: -4.738514423370361
    4. 'c' → logprob: -5.488514423370361
    5. 't' → logprob: -9.488513946533203
    6. '(' → logprob: -11.113513946533203
    7. ' Circle' → logprob: -11.488513946533203
    8. '```' → logprob: -11.613513946533203
    9. 'circle' → logprob: -12.863513946533203
    10. '(t' → logprob: -12.863513946533203

Token 1817: ',' (ID: 11)
  Prédit: '(C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.023979226127266884
    2. '(c' → logprob: -3.8989791870117188
    3. 'Circle' → logprob: -5.773979187011719
    4. 'c' → logprob: -8.523979187011719
    5. ' Circle' → logprob: -10.523979187011719
    6. ')' → logprob: -10.773979187011719
    7. '(Point' → logprob: -11.023979187011719
    8. ',' → logprob: -11.148979187011719
    9. 't' → logprob: -11.773979187011719
    10. 'p' → logprob: -11.898979187011719

Token 1818: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -6.704273118884885e-07
    2. ' Circle' → logprob: -14.750000953674316
    3. 'Cir' → logprob: -16.625
    4. 'circle' → logprob: -18.125
    5. 'Point' → logprob: -18.75
    6. 'Line' → logprob: -19.0
    7. 'Circ' → logprob: -20.5
    8. 'C' → logprob: -21.125
    9. 'Segment' → logprob: -21.25
    10. 'c' → logprob: -21.5

Token 1819: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.005736083257943392
    2. '(Point' → logprob: -5.380735874176025
    3. 'p' → logprob: -6.880735874176025
    4. 'Point' → logprob: -9.630736351013184
    5. '(' → logprob: -11.630736351013184
    6. '(c' → logprob: -12.255736351013184
    7. '(point' → logprob: -13.505736351013184
    8. 'Circle' → logprob: -14.005736351013184
    9. '(C' → logprob: -14.005736351013184
    10. '(Line' → logprob: -14.130736351013184

Token 1820: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2682017385959625
    2. 'p' → logprob: -1.7682017087936401
    3. ',' → logprob: -2.7682018280029297
    4. '   ' → logprob: -7.64320182800293
    5. ',p' → logprob: -8.01820182800293
    6. '(' → logprob: -8.39320182800293
    7. ')' → logprob: -8.51820182800293
    8. 'Point' → logprob: -8.64320182800293
    9. ' p' → logprob: -9.14320182800293
    10. '),' → logprob: -9.51820182800293

Token 1821: ' (' (ID: 350)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.015911655500531197
    2. '(pi' → logprob: -4.51591157913208
    3. 'abs' → logprob: -5.39091157913208
    4. '(' → logprob: -8.390912055969238
    5. '(s' → logprob: -10.640912055969238
    6. '(c' → logprob: -10.890912055969238
    7. '(p' → logprob: -11.765912055969238
    8. 'pi' → logprob: -12.390912055969238
    9. ' (' → logprob: -12.390912055969238
    10. ' abs' → logprob: -13.390912055969238

Token 1822: 'abs' (ID: 6071)
  Prédit: 'abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.4016251862049103
    2. '(abs' → logprob: -1.151625156402588
    3. '(p' → logprob: -4.401625156402588
    4. '(c' → logprob: -6.526625156402588
    5. '((' → logprob: -7.401625156402588
    6. ' abs' → logprob: -8.901625633239746
    7. '(P' → logprob: -10.776625633239746
    8. '(distance' → logprob: -10.776625633239746
    9. '(Point' → logprob: -10.776625633239746
    10. '(' → logprob: -10.901625633239746

Token 1823: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5933752655982971
    2. 'c' → logprob: -1.5933752059936523
    3. '(c' → logprob: -1.5933752059936523
    4. 'p' → logprob: -3.2183752059936523
    5. '((' → logprob: -7.593375205993652
    6. '(abs' → logprob: -7.968375205993652
    7. '(' → logprob: -9.343375205993652
    8. 'abs' → logprob: -10.218375205993652
    9. '
' → logprob: -10.968375205993652
    10. ' (' → logprob: -11.968375205993652

Token 1824: '-c' (ID: 3452)
  Prédit: '-c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-c' → logprob: -0.06889211386442184
    2. '-' → logprob: -2.818892002105713
    3. ' -' → logprob: -5.568892002105713
    4. 'c' → logprob: -5.818892002105713
    5. '-p' → logprob: -9.193892478942871
    6. ' c' → logprob: -12.193892478942871
    7. ' ' → logprob: -12.318892478942871
    8. '	c' → logprob: -13.693892478942871
    9. '  ' → logprob: -14.818892478942871
    10. '   ' → logprob: -15.068892478942871

Token 1825: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.02343321219086647
    2. 'p' → logprob: -3.773433208465576
    3. ')' → logprob: -8.898433685302734
    4. '))' → logprob: -11.273433685302734
    5. '.' → logprob: -11.398433685302734
    6. '	p' → logprob: -12.773433685302734
    7. ').' → logprob: -12.773433685302734
    8. '
' → logprob: -12.773433685302734
    9. '<p' → logprob: -12.898433685302734
    10. ')p' → logprob: -12.898433685302734

Token 1826: ')**' (ID: 80066)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05224965885281563
    2. ')' → logprob: -3.5522496700286865
    3. '-r' → logprob: -4.677249431610107
    4. 'c' → logprob: -5.052249431610107
    5. ')-' → logprob: -6.177249431610107
    6. '-' → logprob: -6.677249431610107
    7. '.r' → logprob: -7.177249431610107
    8. ')c' → logprob: -7.177249431610107
    9. '-c' → logprob: -7.427249431610107
    10. ' -' → logprob: -8.427249908447266

Token 1827: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.656383680412546e-05
    2. ' ' → logprob: -10.250046730041504
    3. '**' → logprob: -13.250046730041504
    4. '
' → logprob: -13.687546730041504
    5. '２' → logprob: -14.000046730041504
    6. '22' → logprob: -14.000046730041504
    7. '(' → logprob: -14.125046730041504
    8. '```' → logprob: -14.187546730041504
    9. '   ' → logprob: -14.250046730041504
    10. '"' → logprob: -14.812546730041504

Token 1828: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027714168652892113
    2. ' -' → logprob: -3.652714252471924
    3. '-p' → logprob: -6.902714252471924
    4. '-c' → logprob: -8.027713775634766
    5. '   ' → logprob: -9.777713775634766
    6. '-
' → logprob: -12.402713775634766
    7. ' ' → logprob: -12.402713775634766
    8. '-s' → logprob: -13.152713775634766
    9. '
' → logprob: -13.277713775634766
    10. '-t' → logprob: -13.402713775634766

Token 1829: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005406403914093971
    2. '(c' → logprob: -5.380406379699707
    3. '0' → logprob: -7.755406379699707
    4. 'abs' → logprob: -8.505406379699707
    5. '(abs' → logprob: -10.255406379699707
    6. ' c' → logprob: -10.380406379699707
    7. '(' → logprob: -10.505406379699707
    8. '((' → logprob: -11.005406379699707
    9. '(p' → logprob: -11.130406379699707
    10. 'pi' → logprob: -11.505406379699707

Token 1830: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.0014384465757757425
    2. 'r' → logprob: -7.126438617706299
    3. '.' → logprob: -7.376438617706299
    4. ' r' → logprob: -12.62643814086914
    5. '	r' → logprob: -12.87643814086914
    6. '(r' → logprob: -14.25143814086914
    7. ' .' → logprob: -15.25143814086914
    8. '.p' → logprob: -15.87643814086914
    9. '-r' → logprob: -16.00143814086914
    10. '
' → logprob: -16.00143814086914

Token 1831: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2713858485221863
    2. '2' → logprob: -1.521385908126831
    3. '**' → logprob: -4.646385669708252
    4. ')' → logprob: -5.521385669708252
    5. ' ' → logprob: -5.521385669708252
    6. '.' → logprob: -7.271385669708252
    7. ')**' → logprob: -8.52138614654541
    8. '   ' → logprob: -8.64638614654541
    9. '
' → logprob: -8.89638614654541
    10. '*' → logprob: -8.89638614654541

Token 1832: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.00001335144043
    4. '```' → logprob: -16.75001335144043
    5. '２' → logprob: -18.12501335144043
    6. '
' → logprob: -18.12501335144043
    7. '²' → logprob: -18.37501335144043
    8. '**' → logprob: -18.37501335144043
    9. '^' → logprob: -19.06251335144043
    10. '۲' → logprob: -19.37501335144043

Token 1833: ')**' (ID: 80066)
  Prédit: ')**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')**' → logprob: -0.00024263552040793002
    2. ')' → logprob: -8.375242233276367
    3. ' )' → logprob: -11.750242233276367
    4. '**' → logprob: -13.250242233276367
    5. '   ' → logprob: -13.375242233276367
    6. '0' → logprob: -14.750242233276367
    7. '))' → logprob: -16.000242233276367
    8. ')^' → logprob: -16.250242233276367
    9. ')
' → logprob: -17.125242233276367
    10. '  ' → logprob: -17.125242233276367

Token 1834: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.619311974034645e-05
    2. '(' → logprob: -10.500036239624023
    3. ' ' → logprob: -12.625036239624023
    4. '.' → logprob: -13.125036239624023
    5. '{' → logprob: -13.750036239624023
    6. '**' → logprob: -14.625036239624023
    7. '
' → logprob: -14.750036239624023
    8. '   ' → logprob: -14.875036239624023
    9. '05' → logprob: -15.625036239624023
    10. '０' → logprob: -15.875036239624023

Token 1835: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12906767427921295
    2. '0' → logprob: -2.1290676593780518
    3. '-' → logprob: -6.879067897796631
    4. '5' → logprob: -7.004067897796631
    5. '/' → logprob: -9.504067420959473
    6. '1' → logprob: -10.879067420959473
    7. '2' → logprob: -11.004067420959473
    8. '(-' → logprob: -11.004067420959473
    9. '.-' → logprob: -11.379067420959473
    10. '(' → logprob: -11.379067420959473

Token 1836: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.822646693966817e-06
    2. '0' → logprob: -12.750007629394531
    3. '.' → logprob: -13.000007629394531
    4. '```' → logprob: -13.750007629394531
    5. ' ' → logprob: -14.625007629394531
    6. 's' → logprob: -15.500007629394531
    7. '05' → logprob: -15.625007629394531
    8. '{' → logprob: -16.00000762939453
    9. '   ' → logprob: -16.00000762939453
    10. '4' → logprob: -16.68750762939453

Token 1837: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20142541825771332
    2. '))' → logprob: -1.7014254331588745
    3. ')))' → logprob: -11.951425552368164
    4. '   ' → logprob: -13.326425552368164
    5. ' )' → logprob: -13.701425552368164
    6. ')
' → logprob: -14.201425552368164
    7. '))
' → logprob: -14.451425552368164
    8. '())' → logprob: -14.701425552368164
    9. ' ))' → logprob: -14.826425552368164
    10. ')}' → logprob: -15.701425552368164

Token 1838: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003944229334592819
    2. '<|end|>' → logprob: -6.253944396972656
    3. ' def' → logprob: -6.628944396972656
    4. '#' → logprob: -7.628944396972656
    5. '   ' → logprob: -10.378944396972656
    6. '[' → logprob: -10.378944396972656
    7. '...' → logprob: -10.628944396972656
    8. ':def' → logprob: -11.003944396972656
    9. ':' → logprob: -11.378944396972656
    10. '(def' → logprob: -11.503944396972656

Token 1839: ' sys' (ID: 12228)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.004142626188695431
    2. ' math' → logprob: -5.504142761230469
    3. 'cmath' → logprob: -10.129142761230469
    4. 'sys' → logprob: -10.879142761230469
    5. 'heap' → logprob: -12.504142761230469
    6. ' sys' → logprob: -14.129142761230469
    7. 'bis' → logprob: -14.629142761230469
    8. '(math' → logprob: -16.00414276123047
    9. '_math' → logprob: -16.12914276123047
    10. 'collections' → logprob: -16.12914276123047

Token 1840: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.771655115589965e-05
    2. '
' → logprob: -11.250018119812012
    3. '```' → logprob: -12.750018119812012
    4. ' def' → logprob: -13.875018119812012
    5. '@' → logprob: -15.250018119812012
    6. '#' → logprob: -15.875018119812012
    7. '\' → logprob: -16.000017166137695
    8. 'return' → logprob: -16.125017166137695
    9. '``' → logprob: -16.375017166137695
    10. '   ' → logprob: -16.500017166137695

Token 1841: 'input' (ID: 2586)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.694766489090398e-05
    2. '#' → logprob: -9.875066757202148
    3. 'from' → logprob: -11.750066757202148
    4. 'import' → logprob: -13.125066757202148
    5. 'EPS' → logprob: -13.125066757202148
    6. 'class' → logprob: -13.625066757202148
    7. '
' → logprob: -14.125066757202148
    8. 'sys' → logprob: -14.875066757202148
    9. ' def' → logprob: -15.375066757202148
    10. '@' → logprob: -15.625066757202148

Token 1842: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5189273953437805
    2. ' =' → logprob: -1.2689273357391357
    3. '=' → logprob: -2.1439273357391357
    4. 'data' → logprob: -6.393927574157715
    5. '_line' → logprob: -7.018927574157715
    6. 'line' → logprob: -7.143927574157715
    7. '().' → logprob: -7.143927574157715
    8. '.readline' → logprob: -7.518927574157715
    9. '_data' → logprob: -7.643927574157715
    10. '_' → logprob: -8.643927574157715

Token 1843: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0009143244242295623
    2. ' sys' → logprob: -7.000914096832275
    3. '=sys' → logprob: -13.500914573669434
    4. 'lambda' → logprob: -14.000914573669434
    5. '
' → logprob: -15.000914573669434
    6. 'input' → logprob: -15.375914573669434
    7. '	sys' → logprob: -16.250913619995117
    8. '(sys' → logprob: -16.500913619995117
    9. 'system' → logprob: -17.750913619995117
    10. 'stdin' → logprob: -18.750913619995117

Token 1844: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4853936433792114
    2. '().' → logprob: -1.6103936433792114
    3. '.readline' → logprob: -1.8603936433792114
    4. '.' → logprob: -3.860393524169922
    5. '()' → logprob: -5.985393524169922
    6. '().__' → logprob: -6.485393524169922
    7. '.stdout' → logprob: -7.110393524169922
    8. 'stdin' → logprob: -7.235393524169922
    9. '.read' → logprob: -7.735393524169922
    10. '.__' → logprob: -7.860393524169922

Token 1845: '.readline' (ID: 74673)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.353987455368042
    2. 'read' → logprob: -1.228987455368042
    3. '.readline' → logprob: -5.478987693786621
    4. 'input' → logprob: -8.603987693786621
    5. 'r' → logprob: -8.728987693786621
    6. 'std' → logprob: -8.728987693786621
    7. 'rea' → logprob: -8.853987693786621
    8. 'readonly' → logprob: -8.978987693786621
    9. '.stdin' → logprob: -8.978987693786621
    10. 'reader' → logprob: -9.353987693786621

Token 1846: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.25
    3. ' def' → logprob: -17.25
    4. '   ' → logprob: -17.75
    5. '#' → logprob: -17.875
    6. 'return' → logprob: -19.375
    7. '```' → logprob: -20.375
    8. ':def' → logprob: -21.75
    9. '	def' → logprob: -22.125
    10. '\' → logprob: -22.375

Token 1847: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.75
    3. '#' → logprob: -19.125
    4. ':def' → logprob: -19.875
    5. '   ' → logprob: -20.625
    6. '	def' → logprob: -20.75
    7. '
' → logprob: -21.25
    8. 'return' → logprob: -21.5
    9. '```' → logprob: -22.0
    10. 'ndef' → logprob: -22.875

Token 1848: ' verify' (ID: 14866)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6933270692825317
    2. 'main' → logprob: -0.6933270692825317
    3. 'solve' → logprob: -8.943326950073242
    4. '	main' → logprob: -10.443326950073242
    5. ' solve' → logprob: -11.193326950073242
    6. '_main' → logprob: -13.318326950073242
    7. 'is' → logprob: -13.568326950073242
    8. 'resolve' → logprob: -14.193326950073242
    9. ' is' → logprob: -14.318326950073242
    10. '__' → logprob: -15.068326950073242

Token 1849: '_' (ID: 62)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -1.1981306076049805
    2. '(l' → logprob: -1.3231306076049805
    3. '(' → logprob: -1.9481306076049805
    4. '(s' → logprob: -2.0731306076049805
    5. '(line' → logprob: -2.9481306076049805
    6. '(p' → logprob: -3.5731306076049805
    7. ':' → logprob: -3.8231306076049805
    8. '(lines' → logprob: -4.6981306076049805
    9. '):' → logprob: -5.1981306076049805
    10. 'def' → logprob: -5.4481306076049805

Token 1850: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.8656129837036133
    2. '():' → logprob: -2.2406129837036133
    3. 'is' → logprob: -2.7406129837036133
    4. 's' → logprob: -2.8656129837036133
    5. 'cs' → logprob: -2.8656129837036133
    6. 'c' → logprob: -2.9906129837036133
    7. 'par' → logprob: -2.9906129837036133
    8. 'inter' → logprob: -3.1156129837036133
    9. 'def' → logprob: -3.2406129837036133
    10. 'lines' → logprob: -3.2406129837036133

Token 1851: 'A' (ID: 32)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.17699672281742096
    2. '(s' → logprob: -2.8019967079162598
    3. '():
' → logprob: -3.0519967079162598
    4. '(l' → logprob: -3.5519967079162598
    5. '(line' → logprob: -4.30199670791626
    6. '0' → logprob: -5.55199670791626
    7. '(p' → logprob: -6.17699670791626
    8. 's' → logprob: -7.05199670791626
    9. '(' → logprob: -7.17699670791626
    10. '_' → logprob: -7.30199670791626

Token 1852: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.028888512402772903
    2. '():
' → logprob: -3.903888463973999
    3. '(s' → logprob: -6.403888702392578
    4. 'C' → logprob: -6.778888702392578
    5. 'c' → logprob: -7.028888702392578
    6. '(l' → logprob: -7.403888702392578
    7. '(line' → logprob: -7.528888702392578
    8. '()' → logprob: -7.653888702392578
    9. 'A' → logprob: -7.653888702392578
    10. '0' → logprob: -7.903888702392578

Token 1853: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.1424973713001236e-05
    2. 'def' → logprob: -11.375031471252441
    3. '	pass' → logprob: -11.500031471252441
    4. '   ' → logprob: -13.500031471252441
    5. 'pass' → logprob: -13.625031471252441
    6. '    
' → logprob: -13.625031471252441
    7. 'a' → logprob: -13.875031471252441
    8. '	line' → logprob: -14.250031471252441
    9. '	a' → logprob: -14.500031471252441
    10. '    ' → logprob: -14.500031471252441

Token 1854: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.440214067697525
    2. '   ' → logprob: -1.5652140378952026
    3. 'a' → logprob: -2.690214157104492
    4. 'c' → logprob: -3.315214157104492
    5. 'x' → logprob: -4.690214157104492
    6. 'P' → logprob: -5.065214157104492
    7. 'r' → logprob: -5.315214157104492
    8. 'n' → logprob: -5.440214157104492
    9. 'pass' → logprob: -5.690214157104492
    10. 'A' → logprob: -5.815214157104492

Token 1855: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12669245898723602
    2. '1' → logprob: -2.376692533493042
    3. '=' → logprob: -4.126692295074463
    4. '0' → logprob: -5.376692295074463
    5. 'r' → logprob: -5.501692295074463
    6. 'def' → logprob: -8.251692771911621
    7. '   ' → logprob: -8.376692771911621
    8. 'oints' → logprob: -8.876692771911621
    9. 'nt' → logprob: -9.126692771911621
    10. '=int' → logprob: -9.126692771911621

Token 1856: 'x' (ID: 87)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23745901882648468
    2. '=' → logprob: -1.7374590635299683
    3. ',' → logprob: -3.3624589443206787
    4. ',p' → logprob: -8.112459182739258
    5. '1' → logprob: -8.737459182739258
    6. '   ' → logprob: -9.112459182739258
    7. ' ' → logprob: -9.612459182739258
    8. ' ,' → logprob: -10.237459182739258
    9. 'p' → logprob: -10.862459182739258
    10. '=p' → logprob: -11.487459182739258

Token 1857: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11827678233385086
    2. '=' → logprob: -3.368276834487915
    3. ' =' → logprob: -3.618276834487915
    4. ',p' → logprob: -3.993276834487915
    5. ' ,' → logprob: -4.243276596069336
    6. ')' → logprob: -4.493276596069336
    7. '   ' → logprob: -6.243276596069336
    8. ',
' → logprob: -7.118276596069336
    9. ' p' → logprob: -7.368276596069336
    10. 'def' → logprob: -7.868276596069336

Token 1858: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.598092684522271e-05
    2. ' p' → logprob: -9.875056266784668
    3. '<|end|>' → logprob: -12.375056266784668
    4. '<|end|>' → logprob: -15.500056266784668
    5. 'user' → logprob: -17.37505531311035
    6. '	p' → logprob: -18.00005531311035
    7. ' ' → logprob: -18.12505531311035
    8. '   ' → logprob: -18.50005531311035
    9. '_p' → logprob: -18.87505531311035
    10. '  ' → logprob: -19.00005531311035

Token 1859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.034384969621896744
    2. 'y' → logprob: -3.7843849658966064
    3. ',' → logprob: -4.9093852043151855
    4. 'p' → logprob: -6.1593852043151855
    5. '=' → logprob: -7.4093852043151855
    6. ',y' → logprob: -7.4093852043151855
    7. '```' → logprob: -8.784384727478027
    8. ' =' → logprob: -9.284384727478027
    9. '=p' → logprob: -10.784384727478027
    10. ',p' → logprob: -10.909384727478027

Token 1860: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.028493398800492287
    2. ',' → logprob: -4.153493404388428
    3. '=' → logprob: -5.278493404388428
    4. 'p' → logprob: -5.903493404388428
    5. ',y' → logprob: -6.028493404388428
    6. ' =' → logprob: -6.403493404388428
    7. '1' → logprob: -7.778493404388428
    8. ' y' → logprob: -11.40349292755127
    9. '_y' → logprob: -11.90349292755127
    10. ')' → logprob: -11.90349292755127

Token 1861: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.135746031999588
    2. '=' → logprob: -2.1357460021972656
    3. ' =' → logprob: -4.885746002197266
    4. ',p' → logprob: -6.760746002197266
    5. ' ,' → logprob: -10.135746002197266
    6. '=p' → logprob: -11.010746002197266
    7. 'p' → logprob: -12.010746002197266
    8. '=input' → logprob: -13.760746002197266
    9. ' ' → logprob: -14.135746002197266
    10. ' p' → logprob: -14.385746002197266

Token 1862: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004946522531099617
    2. ' p' → logprob: -7.875494480133057
    3. 'c' → logprob: -9.375494956970215
    4. '   ' → logprob: -10.875494956970215
    5. '  ' → logprob: -12.750494956970215
    6. ' ' → logprob: -13.250494956970215
    7. 's' → logprob: -13.375494956970215
    8. 'r' → logprob: -14.375494956970215
    9. 't' → logprob: -14.375494956970215
    10. 'q' → logprob: -14.937994956970215

Token 1863: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012141639599576592
    2. '2' → logprob: -6.751214027404785
    3. '=' → logprob: -10.251214027404785
    4. 'p' → logprob: -12.251214027404785
    5. ' =' → logprob: -13.126214027404785
    6. '=p' → logprob: -13.751214027404785
    7. '```' → logprob: -15.376214027404785
    8. ',' → logprob: -15.501214027404785
    9. '
' → logprob: -16.0012149810791
    10. '=None' → logprob: -16.2512149810791

Token 1864: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005712636047974229
    2. ',' → logprob: -7.500571250915527
    3. '=' → logprob: -11.500571250915527
    4. ' =' → logprob: -12.125571250915527
    5. '1' → logprob: -13.625571250915527
    6. ',x' → logprob: -14.000571250915527
    7. 'z' → logprob: -16.125572204589844
    8. '```' → logprob: -16.250572204589844
    9. ' x' → logprob: -16.625572204589844
    10. '_x' → logprob: -16.875572204589844

Token 1865: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003005464968737215
    2. ',p' → logprob: -8.125300407409668
    3. ' ,' → logprob: -12.625300407409668
    4. '=' → logprob: -14.625300407409668
    5. 'p' → logprob: -15.500300407409668
    6. ',line' → logprob: -15.625300407409668
    7. ',input' → logprob: -16.375301361083984
    8. ',user' → logprob: -16.500301361083984
    9. ',
' → logprob: -17.000301361083984
    10. ' =' → logprob: -17.125301361083984

Token 1866: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004620241466909647
    2. ' p' → logprob: -5.37962007522583
    3. ' ' → logprob: -18.504619598388672
    4. '<|end|>' → logprob: -18.879619598388672
    5. '...' → logprob: -19.379619598388672
    6. '   ' → logprob: -20.004619598388672
    7. '	p' → logprob: -20.004619598388672
    8. '  ' → logprob: -20.004619598388672
    9. '
' → logprob: -20.004619598388672
    10. '    ' → logprob: -20.129619598388672

Token 1867: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0023371162824332714
    2. '1' → logprob: -6.1273369789123535
    3. 'p' → logprob: -9.127337455749512
    4. 'y' → logprob: -10.127337455749512
    5. '```' → logprob: -13.627337455749512
    6. '<|end|>' → logprob: -13.877337455749512
    7. '=' → logprob: -14.752337455749512
    8. '   ' → logprob: -16.127336502075195
    9. '3' → logprob: -16.252336502075195
    10. '続きを' → logprob: -16.752336502075195

Token 1868: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004026673559565097
    2. ',' → logprob: -8.375402450561523
    3. 'p' → logprob: -9.000402450561523
    4. '1' → logprob: -10.250402450561523
    5. '2' → logprob: -11.625402450561523
    6. ',y' → logprob: -13.125402450561523
    7. '=' → logprob: -14.375402450561523
    8. '   ' → logprob: -14.500402450561523
    9. 'x' → logprob: -15.125402450561523
    10. ' y' → logprob: -15.125402450561523

Token 1869: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08047141134738922
    2. ' =' → logprob: -2.5804715156555176
    3. ',' → logprob: -6.455471515655518
    4. ',p' → logprob: -11.95547103881836
    5. '=p' → logprob: -14.08047103881836
    6. ' ' → logprob: -14.70547103881836
    7. 'p' → logprob: -15.08047103881836
    8. '   ' → logprob: -15.58047103881836
    9. '＝' → logprob: -16.33047103881836
    10. ' ,' → logprob: -16.58047103881836

Token 1870: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0005557744298130274
    2. ' map' → logprob: -7.500555992126465
    3. 'list' → logprob: -13.125555992126465
    4. '   ' → logprob: -14.500555992126465
    5. '[' → logprob: -15.500555992126465
    6. '	map' → logprob: -17.25055503845215
    7. 'm' → logprob: -17.87555503845215
    8. '
' → logprob: -18.00055503845215
    9. ' ' → logprob: -18.50055503845215
    10. '(map' → logprob: -19.50055503845215

Token 1871: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002416799543425441
    2. 'int' → logprob: -6.502416610717773
    3. '(float' → logprob: -7.002416610717773
    4. 'float' → logprob: -12.877416610717773
    5. '(str' → logprob: -14.127416610717773
    6. '[int' → logprob: -14.502416610717773
    7. ',int' → logprob: -15.377416610717773
    8. '(' → logprob: -16.002416610717773
    9. '=int' → logprob: -16.252416610717773
    10. '<int' → logprob: -17.127416610717773

Token 1872: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.17052724957466125
    2. 'input' → logprob: -2.170527219772339
    3. ',' → logprob: -3.170527219772339
    4. '(input' → logprob: -7.420527458190918
    5. ' input' → logprob: -9.670527458190918
    6. '=input' → logprob: -12.170527458190918
    7. ' ,' → logprob: -12.545527458190918
    8. '_input' → logprob: -13.170527458190918
    9. '(),' → logprob: -13.545527458190918
    10. ',
' → logprob: -13.545527458190918

Token 1873: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -9.615255839889869e-05
    2. ' input' → logprob: -9.250096321105957
    3. 'p' → logprob: -18.50009536743164
    4. 'sys' → logprob: -21.00009536743164
    5. 'Input' → logprob: -21.50009536743164
    6. '<input' → logprob: -21.62509536743164
    7. ' ' → logprob: -21.87509536743164
    8. '	input' → logprob: -22.37509536743164
    9. '   ' → logprob: -22.50009536743164
    10. '
' → logprob: -22.62509536743164

Token 1874: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0087516784551553e-05
    2. '()' → logprob: -11.75001049041748
    3. '())' → logprob: -13.25001049041748
    4. ')' → logprob: -15.87501049041748
    5. '   ' → logprob: -16.375009536743164
    6. '()
' → logprob: -16.500009536743164
    7. '.split' → logprob: -17.250009536743164
    8. '(' → logprob: -18.250009536743164
    9. '()[' → logprob: -18.750009536743164
    10. ' ().' → logprob: -18.875009536743164

Token 1875: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00081963452976197
    2. 'strip' → logprob: -7.125819683074951
    3. 'rstrip' → logprob: -11.750819206237793
    4. '().' → logprob: -12.500819206237793
    5. 'str' → logprob: -13.375819206237793
    6. ' split' → logprob: -13.625819206237793
    7. '(split' → logprob: -15.375819206237793
    8. 'spl' → logprob: -15.500819206237793
    9. 'read' → logprob: -15.875819206237793
    10. 's' → logprob: -16.25082015991211

Token 1876: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009959959425032139
    2. ')' → logprob: -4.759960174560547
    3. '()' → logprob: -7.259960174560547
    4. '())
' → logprob: -7.384960174560547
    5. '(' → logprob: -12.009960174560547
    6. '()
' → logprob: -12.759960174560547
    7. '()))' → logprob: -12.884960174560547
    8. '())
' → logprob: -12.884960174560547
    9. ')
' → logprob: -13.009960174560547
    10. '   ' → logprob: -13.384960174560547

Token 1877: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05543563514947891
    2. 'p' → logprob: -2.9304356575012207
    3. ' p' → logprob: -7.680435657501221
    4. 's' → logprob: -10.430435180664062
    5. '    
' → logprob: -10.680435180664062
    6. 'a' → logprob: -11.430435180664062
    7. '
' → logprob: -11.555435180664062
    8. '	p' → logprob: -11.680435180664062
    9. 'def' → logprob: -12.805435180664062
    10. ',' → logprob: -13.680435180664062

Token 1878: ' l' (ID: 305)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.32624736428260803
    2. 'c' → logprob: -1.3262473344802856
    3. '   ' → logprob: -4.826247215270996
    4. 'a' → logprob: -6.576247215270996
    5. 's' → logprob: -6.701247215270996
    6. 'l' (adapté à ' l') → logprob: -7.201247215270996
    7. 'r' → logprob: -7.451247215270996
    8. 'print' → logprob: -8.951247215270996
    9. 'x' → logprob: -8.951247215270996
    10. 'return' → logprob: -9.326247215270996

Token 1879: ' =' (ID: 314)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009246084839105606
    2. 'ine' → logprob: -5.509245872497559
    3. 'a' → logprob: -6.634245872497559
    4. 'Line' → logprob: -7.134245872497559
    5. '_a' → logprob: -7.134245872497559
    6. 'p' → logprob: -7.509245872497559
    7. ' =' → logprob: -7.759245872497559
    8. '(Line' → logprob: -8.134245872497559
    9. '   ' → logprob: -8.509245872497559
    10. 'def' → logprob: -8.634245872497559

Token 1880: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.001173917087726295
    2. 'Segment' → logprob: -6.751173973083496
    3. ' Line' → logprob: -12.501173973083496
    4. '(Line' → logprob: -17.75117301940918
    5. 'Seg' → logprob: -19.00117301940918
    6. ' Segment' → logprob: -19.00117301940918
    7. 'Point' → logprob: -19.50117301940918
    8. '.Line' → logprob: -20.87617301940918
    9. '_Line' → logprob: -21.12617301940918
    10. 'L' → logprob: -21.37617301940918

Token 1881: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0052384985610842705
    2. 'Point' → logprob: -5.2552385330200195
    3. '(
' → logprob: -13.25523853302002
    4. ' Point' → logprob: -13.50523853302002
    5. '(p' → logprob: -14.25523853302002
    6. '	Point' → logprob: -14.25523853302002
    7. '(' → logprob: -15.13023853302002
    8. 'p' → logprob: -17.130237579345703
    9. '<Point' → logprob: -17.130237579345703
    10. '.Point' → logprob: -17.505237579345703

Token 1882: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0010234013898298144
    2. '(Point' → logprob: -7.501023292541504
    3. 'Point' → logprob: -8.376023292541504
    4. 'p' → logprob: -8.376023292541504
    5. '(
' → logprob: -12.126023292541504
    6. '(' → logprob: -12.626023292541504
    7. ' p' → logprob: -15.626023292541504
    8. '(x' → logprob: -15.751023292541504
    9. '	p' → logprob: -16.12602424621582
    10. '   ' → logprob: -16.12602424621582

Token 1883: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '(p' → logprob: -12.750005722045898
    3. 'p' → logprob: -12.875005722045898
    4. 'int' → logprob: -14.875005722045898
    5. 'oint' → logprob: -15.875005722045898
    6. 'x' → logprob: -16.8750057220459
    7. 'oints' → logprob: -16.8750057220459
    8. ' p' → logprob: -17.5000057220459
    9. 'l' → logprob: -17.6250057220459
    10. '   ' → logprob: -17.7500057220459

Token 1884: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009646998951211572
    2. '(p' → logprob: -7.625964641571045
    3. '1' → logprob: -7.750964641571045
    4. 'p' → logprob: -10.750965118408203
    5. '(x' → logprob: -11.375965118408203
    6. 'int' → logprob: -12.500965118408203
    7. ')' → logprob: -13.250965118408203
    8. '(' → logprob: -13.875965118408203
    9. 'user' → logprob: -14.000965118408203
    10. ',' → logprob: -14.000965118408203

Token 1885: ',' (ID: 11)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2677654027938843
    2. ',' → logprob: -1.5177654027938843
    3. 'p' → logprob: -4.642765522003174
    4. ',p' → logprob: -5.142765522003174
    5. '(' → logprob: -9.017765045166016
    6. ' p' → logprob: -10.017765045166016
    7. ' ,' → logprob: -10.142765045166016
    8. '),' → logprob: -11.892765045166016
    9. '<p' → logprob: -11.892765045166016
    10. ',
' → logprob: -12.267765045166016

Token 1886: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00038014890742488205
    2. ' p' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.62537956237793
    4. '	p' → logprob: -17.87537956237793
    5. '(p' → logprob: -18.37537956237793
    6. 'Point' → logprob: -19.00037956237793
    7. '<p' → logprob: -19.00037956237793
    8. '
' → logprob: -19.25037956237793
    9. ' ' → logprob: -19.37537956237793
    10. '    
' → logprob: -19.50037956237793

Token 1887: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.061676347395405e-05
    2. 'y' → logprob: -10.25005054473877
    3. 'p' → logprob: -11.37505054473877
    4. 'x' → logprob: -13.50005054473877
    5. 'py' → logprob: -13.62505054473877
    6. '2' → logprob: -14.75005054473877
    7. 'ay' → logprob: -15.75005054473877
    8. '
' → logprob: -15.87505054473877
    9. '```' → logprob: -16.937551498413086
    10. 'l' → logprob: -17.250051498413086

Token 1888: 'y' (ID: 88)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.59128338098526
    2. 'y' → logprob: -0.84128338098526
    3. '1' → logprob: -4.341283321380615
    4. 'py' → logprob: -6.341283321380615
    5. ' p' → logprob: -8.716283798217773
    6. 'x' → logprob: -8.966283798217773
    7. ')' → logprob: -10.341283798217773
    8. '),' → logprob: -10.841283798217773
    9. '
' → logprob: -10.966283798217773
    10. '   ' → logprob: -11.216283798217773

Token 1889: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.38716360926628113
    2. ',' → logprob: -1.1371636390686035
    3. '   ' → logprob: -8.387163162231445
    4. '),
' → logprob: -10.762163162231445
    5. ',p' → logprob: -10.887163162231445
    6. ' ,' → logprob: -12.262163162231445
    7. 'p' → logprob: -12.387163162231445
    8. ',
' → logprob: -12.762163162231445
    9. ')' → logprob: -13.137163162231445
    10. ' ),' → logprob: -13.262163162231445

Token 1890: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.004078401252627373
    2. ' Point' → logprob: -5.504078388214111
    3. '	Point' → logprob: -18.379077911376953
    4. '(Point' → logprob: -19.004077911376953
    5. '   ' → logprob: -19.754077911376953
    6. 'Line' → logprob: -19.879077911376953
    7. '<Point' → logprob: -22.629077911376953
    8. '_Point' → logprob: -22.754077911376953
    9. '_point' → logprob: -22.879077911376953
    10. ' ' → logprob: -23.504077911376953

Token 1891: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.375
    3. 'p' → logprob: -18.0
    4. '(
' → logprob: -18.5
    5. ' (' → logprob: -18.625
    6. '((' → logprob: -19.875
    7. '(x' → logprob: -20.5
    8. '(int' → logprob: -20.75
    9. '(point' → logprob: -21.25
    10. '(P' → logprob: -21.75

Token 1892: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. 'x' → logprob: -12.375004768371582
    3. '1' → logprob: -16.000003814697266
    4. 'ex' → logprob: -17.250003814697266
    5. 'p' → logprob: -17.750003814697266
    6. '```' → logprob: -18.000003814697266
    7. '
' → logprob: -18.250003814697266
    8. '２' → logprob: -18.625003814697266
    9. ' ' → logprob: -19.000003814697266
    10. 's' → logprob: -19.000003814697266

Token 1893: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. '
' → logprob: -18.0
    3. 'y' → logprob: -18.0
    4. '(x' → logprob: -18.0
    5. ' x' → logprob: -18.375
    6. 'p' → logprob: -18.625
    7. '2' → logprob: -18.6875
    8. '1' → logprob: -18.75
    9. ',' → logprob: -19.0
    10. '   ' → logprob: -19.375

Token 1894: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017821642104536295
    2. 'p' → logprob: -6.501781940460205
    3. ',p' → logprob: -8.251782417297363
    4. ' p' → logprob: -11.251782417297363
    5. ' ,' → logprob: -12.251782417297363
    6. '(p' → logprob: -13.751782417297363
    7. ',
' → logprob: -15.876782417297363
    8. '   ' → logprob: -18.001781463623047
    9. 'import' → logprob: -19.251781463623047
    10. '[p' → logprob: -19.626781463623047

Token 1895: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002805110299959779
    2. ' p' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.502805709838867
    4. '   ' → logprob: -16.752805709838867
    5. '	p' → logprob: -17.877805709838867
    6. '
' → logprob: -17.877805709838867
    7. ',' → logprob: -18.377805709838867
    8. '0' → logprob: -18.627805709838867
    9. '<p' → logprob: -18.627805709838867
    10. '(p' → logprob: -19.127805709838867

Token 1896: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5055452585220337
    2. '2' → logprob: -1.0055452585220337
    3. 'p' → logprob: -3.505545139312744
    4. 'x' → logprob: -7.005545139312744
    5. 'y' → logprob: -11.380545616149902
    6. ' p' → logprob: -11.505545616149902
    7. '
' → logprob: -11.755545616149902
    8. 'py' → logprob: -12.755545616149902
    9. 'l' → logprob: -13.130545616149902
    10. '   ' → logprob: -13.380545616149902

Token 1897: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08821024000644684
    2. 'x' → logprob: -2.838210344314575
    3. '1' → logprob: -3.838210344314575
    4. '2' → logprob: -6.338210105895996
    5. ',' → logprob: -6.713210105895996
    6. '   ' → logprob: -6.713210105895996
    7. 'm' → logprob: -9.588210105895996
    8. ')' → logprob: -10.588210105895996
    9. '```' → logprob: -10.713210105895996
    10. ' ' → logprob: -10.963210105895996

Token 1898: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5763202905654907
    2. '))' → logprob: -0.8263202905654907
    3. '   ' → logprob: -7.951320171356201
    4. ')))' → logprob: -11.32632064819336
    5. ')
' → logprob: -12.32632064819336
    6. '))
' → logprob: -12.57632064819336
    7. ' ))' → logprob: -12.82632064819336
    8. ' )' → logprob: -13.45132064819336
    9. '()))' → logprob: -14.07632064819336
    10. '())' → logprob: -14.20132064819336

Token 1899: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022266218438744545
    2. 'p' → logprob: -6.127226829528809
    3. 'def' → logprob: -11.002226829528809
    4. ' p' → logprob: -11.377226829528809
    5. '    
' → logprob: -12.502226829528809
    6. '<|end|>' → logprob: -13.127226829528809
    7. '```' → logprob: -13.252226829528809
    8. '  ' → logprob: -13.752226829528809
    9. 'return' → logprob: -14.377226829528809
    10. '
' → logprob: -14.502226829528809

Token 1900: ' Q' (ID: 1486)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.13997133076190948
    2. '   ' → logprob: -2.7649712562561035
    3. 'print' → logprob: -3.8899712562561035
    4. 'x' → logprob: -4.1399712562561035
    5. 'q' → logprob: -4.8899712562561035
    6. 'def' → logprob: -5.2649712562561035
    7. 'px' → logprob: -5.2649712562561035
    8. 'r' → logprob: -5.7649712562561035
    9. 'l' → logprob: -5.8899712562561035
    10. 'for' → logprob: -6.5149712562561035

Token 1901: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010000666603446007
    2. '=' → logprob: -4.760000705718994
    3. '=int' → logprob: -7.010000705718994
    4. 'Q' → logprob: -8.885000228881836
    5. 'u' → logprob: -9.010000228881836
    6. 'q' → logprob: -10.010000228881836
    7. 'n' → logprob: -10.135000228881836
    8. '   ' → logprob: -10.510000228881836
    9. 'int' → logprob: -10.885000228881836
    10. 'ue' → logprob: -11.135000228881836

Token 1902: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0012720199301838875
    2. '[int' → logprob: -6.876272201538086
    3. 'Point' → logprob: -8.876272201538086
    4. '(int' → logprob: -10.251272201538086
    5. '[]
' → logprob: -10.251272201538086
    6. ' int' → logprob: -11.626272201538086
    7. '[]' → logprob: -12.251272201538086
    8. '
' → logprob: -12.376272201538086
    9. '[' → logprob: -12.876272201538086
    10. '   ' → logprob: -13.251272201538086

Token 1903: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00043102685594931245
    2. 'input' → logprob: -7.750431060791016
    3. '=input' → logprob: -16.000431060791016
    4. ' input' → logprob: -16.250431060791016
    5. '()' → logprob: -16.500431060791016
    6. '(' → logprob: -16.750431060791016
    7. ',input' → logprob: -17.500431060791016
    8. '	input' → logprob: -17.625431060791016
    9. '(
' → logprob: -17.875431060791016
    10. '<input' → logprob: -18.500431060791016

Token 1904: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14446361362934113
    2. '())
' → logprob: -2.394463539123535
    3. '()' → logprob: -3.144463539123535
    4. '()
' → logprob: -8.894463539123535
    5. '())
' → logprob: -10.144463539123535
    6. ')' → logprob: -11.394463539123535
    7. '().' → logprob: -11.769463539123535
    8. '(' → logprob: -12.894463539123535
    9. '())

' → logprob: -13.144463539123535
    10. '();)' → logprob: -14.769463539123535

Token 1905: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030705220997333527
    2. 'for' → logprob: -5.87807035446167
    3. ' for' → logprob: -8.503070831298828
    4. '	for' → logprob: -10.628070831298828
    5. 'def' → logprob: -11.003070831298828
    6. '```' → logprob: -11.128070831298828
    7. '<|end|>' → logprob: -12.628070831298828
    8. '``' → logprob: -14.003070831298828
    9. '    
' → logprob: -14.128070831298828
    10. '[' → logprob: -14.878070831298828

Token 1906: ' Query' (ID: 18574)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014289145357906818
    2. '   ' → logprob: -4.264289379119873
    3. ' for' → logprob: -9.014288902282715
    4. '	for' → logprob: -12.764288902282715
    5. 'while' → logprob: -13.889288902282715
    6. '
' → logprob: -16.63928985595703
    7. 'def' → logprob: -17.26428985595703
    8. 'result' → logprob: -17.76428985595703
    9. '    
' → logprob: -18.38928985595703
    10. '  ' → logprob: -18.51428985595703

Token 1907: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14604708552360535
    2. ' =' → logprob: -2.5210471153259277
    3. '=' → logprob: -2.8960471153259277
    4. '=[]' → logprob: -9.14604663848877
    5. 'for' → logprob: -9.52104663848877
    6. 'u' → logprob: -10.89604663848877
    7. '=[]
' → logprob: -11.77104663848877
    8. 'ues' → logprob: -11.77104663848877
    9. '   ' → logprob: -12.14604663848877
    10. ' ' → logprob: -12.14604663848877

Token 1908: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05366745591163635
    2. '[input' → logprob: -3.3036675453186035
    3. '[int' → logprob: -4.5536675453186035
    4. '[list' → logprob: -5.5536675453186035
    5. '[List' → logprob: -7.9286675453186035
    6. '[]
' → logprob: -8.303667068481445
    7. '[]' → logprob: -8.428667068481445
    8. '[line' → logprob: -9.553667068481445
    9. '[str' → logprob: -10.303667068481445
    10. '[array' → logprob: -10.303667068481445

Token 1909: 'list' (ID: 2641)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0025005098432302475
    2. 'tuple' → logprob: -6.502500534057617
    3. 'list' → logprob: -7.002500534057617
    4. '(Point' → logprob: -9.877500534057617
    5. ' Point' → logprob: -10.627500534057617
    6. 'Line' → logprob: -12.127500534057617
    7. 'List' → logprob: -13.377500534057617
    8. ' tuple' → logprob: -13.502500534057617
    9. 'Tuple' → logprob: -14.252500534057617
    10. '[]' → logprob: -14.252500534057617

Token 1910: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000433291686931625
    2. 'map' → logprob: -7.750433444976807
    3. '(' → logprob: -14.125432968139648
    4. '(input' → logprob: -14.125432968139648
    5. '(int' → logprob: -15.375432968139648
    6. '
' → logprob: -15.500432968139648
    7. '=' → logprob: -16.00043296813965
    8. '	map' → logprob: -16.00043296813965
    9. '(range' → logprob: -16.00043296813965
    10. '(
' → logprob: -16.37543296813965

Token 1911: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20143437385559082
    2. '(int' → logprob: -1.7014343738555908
    3. 'input' → logprob: -11.076434135437012
    4. 'lambda' → logprob: -13.576434135437012
    5. '[int' → logprob: -13.826434135437012
    6. '=int' → logprob: -13.826434135437012
    7. ',int' → logprob: -14.076434135437012
    8. ' int' → logprob: -14.326434135437012
    9. ']int' → logprob: -15.326434135437012
    10. '(input' → logprob: -15.826434135437012

Token 1912: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.5881451368331909
    2. ',' → logprob: -1.088145136833191
    3. 'input' → logprob: -2.7131452560424805
    4. '(input' → logprob: -3.2131452560424805
    5. '   ' → logprob: -7.3381452560424805
    6. '(' → logprob: -8.58814525604248
    7. '
' → logprob: -9.21314525604248
    8. ' ,' → logprob: -9.58814525604248
    9. ' ' → logprob: -10.08814525604248
    10. '=input' → logprob: -10.33814525604248

Token 1913: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.1888679839321412e-05
    2. ' input' → logprob: -10.750021934509277
    3. 'lambda' → logprob: -14.750021934509277
    4. ')' → logprob: -17.87502098083496
    5. 'sys' → logprob: -18.50002098083496
    6. '(input' → logprob: -18.75002098083496
    7. '
' → logprob: -19.37502098083496
    8. 'range' → logprob: -19.87502098083496
    9. '=input' → logprob: -20.00002098083496
    10. 'int' → logprob: -20.25002098083496

Token 1914: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -15.625000953674316
    3. '   ' → logprob: -15.750000953674316
    4. '.split' → logprob: -16.0
    5. ' ().' → logprob: -16.625
    6. '()))' → logprob: -18.125
    7. '(' → logprob: -18.25
    8. '.' → logprob: -18.375
    9. '))' → logprob: -18.375
    10. 'split' → logprob: -18.5

Token 1915: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6240566083070007e-06
    2. 'strip' → logprob: -13.500001907348633
    3. ' split' → logprob: -16.125001907348633
    4. '(split' → logprob: -16.750001907348633
    5. '.split' → logprob: -19.875001907348633
    6. 'rstrip' → logprob: -20.125001907348633
    7. 'spl' → logprob: -20.250001907348633
    8. 'plit' → logprob: -20.625001907348633
    9. '_split' → logprob: -22.250001907348633
    10. ')' → logprob: -22.250001907348633

Token 1916: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3905887305736542
    2. '))' → logprob: -1.1405887603759766
    3. '()' → logprob: -5.640588760375977
    4. '())' → logprob: -9.390588760375977
    5. '(' → logprob: -10.640588760375977
    6. '()))
' → logprob: -11.140588760375977
    7. '()[' → logprob: -11.265588760375977
    8. '()
' → logprob: -11.890588760375977
    9. ')]' → logprob: -12.515588760375977
    10. ')' → logprob: -12.640588760375977

Token 1917: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6987747550010681
    2. ' for' → logprob: -1.198774814605713
    3. '()' → logprob: -1.698774814605713
    4. '   ' → logprob: -4.698774814605713
    5. ')' → logprob: -4.823774814605713
    6. ']' → logprob: -7.198774814605713
    7. '()]' → logprob: -9.198774337768555
    8. '(' → logprob: -9.573774337768555
    9. ')]' → logprob: -9.573774337768555
    10. '	for' → logprob: -9.698774337768555

Token 1918: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -7.32654589228332e-05
    2. '_i' → logprob: -10.000073432922363
    3. '_q' → logprob: -11.875073432922363
    4. '_range' → logprob: -11.875073432922363
    5. '_lambda' → logprob: -12.375073432922363
    6. '_in' → logprob: -13.375073432922363
    7. '_
' → logprob: -13.625073432922363
    8. '_Q' → logprob: -13.750073432922363
    9. '_x' → logprob: -14.125073432922363
    10. 'i' → logprob: -14.625073432922363

Token 1919: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4884401559829712
    2. 'range' → logprob: -1.4884401559829712
    3. 'Q' → logprob: -2.4884400367736816
    4. ' in' → logprob: -2.6134400367736816
    5. ' range' → logprob: -5.738440036773682
    6. '(Q' → logprob: -7.363440036773682
    7. '_Q' → logprob: -8.73844051361084
    8. '
' → logprob: -9.86344051361084
    9. ',Q' → logprob: -9.98844051361084
    10. '_' → logprob: -10.11344051361084

Token 1920: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.200166469876422e-06
    2. ' range' → logprob: -12.250004768371582
    3. 'Q' → logprob: -15.625004768371582
    4. '(range' → logprob: -15.875004768371582
    5. '
' → logprob: -17.1250057220459
    6. '	range' → logprob: -19.0000057220459
    7. '[' → logprob: -19.7500057220459
    8. '   ' → logprob: -19.7500057220459
    9. '.range' → logprob: -20.3750057220459
    10. ')' → logprob: -21.5000057220459

Token 1921: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.6240566083070007e-06
    2. 'Q' → logprob: -13.375001907348633
    3. '(' → logprob: -18.500001907348633
    4. '	Q' → logprob: -19.625001907348633
    5. '(
' → logprob: -20.125001907348633
    6. '
' → logprob: -21.000001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '(Qt' → logprob: -21.875001907348633
    9. ' (' → logprob: -22.000001907348633
    10. '(q' → logprob: -22.500001907348633

Token 1922: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.25590312480926514
    2. ']' → logprob: -1.5059031248092651
    3. ')' → logprob: -5.630903244018555
    4. '   ' → logprob: -8.005903244018555
    5. '()]' → logprob: -11.255903244018555
    6. '])' → logprob: -11.380903244018555
    7. ']
' → logprob: -11.880903244018555
    8. ' ]' → logprob: -12.255903244018555
    9. '])]' → logprob: -12.380903244018555
    10. ')]
' → logprob: -12.755903244018555

Token 1923: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.670925358776003e-05
    2. 'for' → logprob: -9.875066757202148
    3. ' for' → logprob: -11.500066757202148
    4. 'def' → logprob: -13.125066757202148
    5. 'result' → logprob: -14.125066757202148
    6. '    
' → logprob: -14.625066757202148
    7. 'results' → logprob: -14.625066757202148
    8. '```' → logprob: -14.875066757202148
    9. '       ' → logprob: -15.125066757202148
    10. 'outputs' → logprob: -15.875066757202148

Token 1924: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.015370752662420273
    2. '   ' → logprob: -4.890370845794678
    3. 'res' → logprob: -5.265370845794678
    4. 'ans' → logprob: -6.890370845794678
    5. 'answer' → logprob: -8.01537036895752
    6. 'result' → logprob: -8.01537036895752
    7. 'results' → logprob: -8.26537036895752
    8. 'r' → logprob: -8.64037036895752
    9. 'ret' → logprob: -8.89037036895752
    10. 'answers' → logprob: -9.51537036895752

Token 1925: ' px' (ID: 27003)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.08408212661743164
    2. 'x' → logprob: -3.5840821266174316
    3. 'qx' → logprob: -3.8340821266174316
    4. 'query' → logprob: -3.9590821266174316
    5. 'i' → logprob: -5.834082126617432
    6. 'a' → logprob: -5.959082126617432
    7. 'p' → logprob: -6.459082126617432
    8. 'ql' → logprob: -7.334082126617432
    9. 't' → logprob: -7.584082126617432
    10. '_q' → logprob: -7.709082126617432

Token 1926: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.225939872208983e-05
    2. ',y' → logprob: -10.625032424926758
    3. 'y' → logprob: -12.375032424926758
    4. ' ,' → logprob: -13.625032424926758
    5. '_,' → logprob: -13.875032424926758
    6. 'py' → logprob: -14.500032424926758
    7. ',p' → logprob: -14.750032424926758
    8. '_py' → logprob: -15.000032424926758
    9. 'p' → logprob: -16.750032424926758
    10. 'in' → logprob: -17.375032424926758

Token 1927: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0005000127712264657
    2. ' py' → logprob: -7.625500202178955
    3. 'p' → logprob: -11.625499725341797
    4. 'ply' → logprob: -13.875499725341797
    5. 'ppy' → logprob: -14.125499725341797
    6. '_py' → logprob: -14.375499725341797
    7. 'px' → logprob: -14.875499725341797
    8. 'pty' → logprob: -15.625499725341797
    9. '(py' → logprob: -16.125499725341797
    10. '.py' → logprob: -16.125499725341797

Token 1928: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806031122803688
    2. 'in' → logprob: -3.288060426712036
    3. '   ' → logprob: -11.538060188293457
    4. ',' → logprob: -11.788060188293457
    5. '    ' → logprob: -14.413060188293457
    6. ' ' → logprob: -14.913060188293457
    7. '
' → logprob: -15.788060188293457
    8. '	in' → logprob: -15.788060188293457
    9. '  ' → logprob: -16.538061141967773
    10. 'In' → logprob: -16.663061141967773

Token 1929: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -2.546478935983032e-05
    2. ' Query' → logprob: -10.625025749206543
    3. '[' → logprob: -14.625025749206543
    4. '(Query' → logprob: -15.250025749206543
    5. '	Query' → logprob: -15.625025749206543
    6. '   ' → logprob: -16.375024795532227
    7. 'Input' → logprob: -16.625024795532227
    8. 'input' → logprob: -17.125024795532227
    9. '<Query' → logprob: -17.125024795532227
    10. '.Query' → logprob: -17.250024795532227

Token 1930: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.58084636926651
    2. ':' → logprob: -0.83084636926651
    3. '   ' → logprob: -6.080846309661865
    4. '       ' → logprob: -6.080846309661865
    5. '):
' → logprob: -8.705846786499023
    6. ',' → logprob: -9.830846786499023
    7. '():
' → logprob: -10.455846786499023
    8. ':
' → logprob: -10.455846786499023
    9. ':

' → logprob: -10.955846786499023
    10. '):' → logprob: -11.705846786499023

Token 1931: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.843177233240567e-05
    2. '        
' → logprob: -12.875018119812012
    3. '   ' → logprob: -13.125018119812012
    4. '#line' → logprob: -13.250018119812012
    5. ' line' → logprob: -13.500018119812012
    6. '```' → logprob: -13.750018119812012
    7. ' point' → logprob: -13.875018119812012
    8. ',' → logprob: -13.875018119812012
    9. '	' → logprob: -13.875018119812012
    10. ' l' → logprob: -13.875018119812012

Token 1932: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.9363535046577454
    2. 'print' → logprob: -0.9363535046577454
    3. '       ' → logprob: -1.6863534450531006
    4. 'point' → logprob: -4.31135368347168
    5. ' print' → logprob: -5.31135368347168
    6. ' p' → logprob: -5.31135368347168
    7. 'q' → logprob: -6.56135368347168
    8. 'r' → logprob: -6.56135368347168
    9. 'res' → logprob: -6.81135368347168
    10. '   ' → logprob: -6.93635368347168

Token 1933: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01314952690154314
    2. '=' → logprob: -4.763149738311768
    3. 'oint' → logprob: -5.513149738311768
    4. '   ' → logprob: -8.38814926147461
    5. '       ' → logprob: -8.38814926147461
    6. '=p' → logprob: -11.26314926147461
    7. '=int' → logprob: -11.76314926147461
    8. 'point' → logprob: -12.63814926147461
    9. ' ' → logprob: -13.13814926147461
    10. '      ' → logprob: -13.76314926147461

Token 1934: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0007100477814674377
    2. ' Point' → logprob: -7.2507100105285645
    3. '	Point' → logprob: -18.000709533691406
    4. '_point' → logprob: -21.750709533691406
    5. '(Point' → logprob: -22.750709533691406
    6. '_Point' → logprob: -22.875709533691406
    7. 'point' → logprob: -23.625709533691406
    8. '.Point' → logprob: -24.125709533691406
    9. '<Point' → logprob: -24.875709533691406
    10. '   ' → logprob: -25.250709533691406

Token 1935: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.125000953674316
    3. '(py' → logprob: -15.250000953674316
    4. '(
' → logprob: -15.750000953674316
    5. 'px' → logprob: -17.625
    6. ':px' → logprob: -17.75
    7. '(cx' → logprob: -17.875
    8. '(mx' → logprob: -19.0
    9. '(x' → logprob: -19.0
    10. '(p' → logprob: -19.25

Token 1936: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2471589798224159e-05
    2. ' ,' → logprob: -12.000012397766113
    3. ',p' → logprob: -12.500012397766113
    4. ',
' → logprob: -13.375012397766113
    5. '<|end|>' → logprob: -15.000012397766113
    6. ',y' → logprob: -15.875012397766113
    7. '<|end|>' → logprob: -16.50001335144043
    8. '.py' → logprob: -16.62501335144043
    9. ',user' → logprob: -17.00001335144043
    10. '(py' → logprob: -17.25001335144043

Token 1937: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0009125363430939615
    2. ' py' → logprob: -7.000912666320801
    3. '(py' → logprob: -14.1259126663208
    4. '_py' → logprob: -15.1259126663208
    5. '.py' → logprob: -17.125911712646484
    6. 'ply' → logprob: -17.625911712646484
    7. 'px' → logprob: -19.000911712646484
    8. 'pty' → logprob: -19.875911712646484
    9. 'Py' → logprob: -20.000911712646484
    10. 'ppy' → logprob: -20.000911712646484

Token 1938: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3680618703365326
    2. '       ' → logprob: -1.493061900138855
    3. ')' → logprob: -2.4930617809295654
    4. ')
' → logprob: -8.118062019348145
    5. '):
' → logprob: -8.368062019348145
    6. ':
' → logprob: -11.243062019348145
    7. '
' → logprob: -11.993062019348145
    8. ' )
' → logprob: -12.368062019348145
    9. '):' → logprob: -12.618062019348145
    10. '=' → logprob: -12.618062019348145

Token 1939: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.698698704596609e-05
    2. '<|end|>' → logprob: -9.375097274780273
    3. '<|end|>' → logprob: -12.375097274780273
    4. '```' → logprob: -12.750097274780273
    5. '   ' → logprob: -14.000097274780273
    6. '        
' → logprob: -14.125097274780273
    7. '           ' → logprob: -14.500097274780273
    8. '#' → logprob: -14.625097274780273
    9. '	   ' → logprob: -14.750097274780273
    10. '{
' → logprob: -15.000097274780273

Token 1940: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0432853065431118
    2. '       ' → logprob: -3.168285369873047
    3. 'if' → logprob: -9.043285369873047
    4. ' print' → logprob: -9.168285369873047
    5. 'res' → logprob: -10.418285369873047
    6. '   ' → logprob: -10.543285369873047
    7. 'result' → logprob: -13.168285369873047
    8. '	print' → logprob: -13.543285369873047
    9. 'ans' → logprob: -14.168285369873047
    10. 'r' → logprob: -14.543285369873047

Token 1941: '(pro' (ID: 7092)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.19704240560531616
    2. '("' → logprob: -2.447042465209961
    3. '(int' → logprob: -3.572042465209961
    4. '(' → logprob: -3.697042465209961
    5. '(l' → logprob: -4.322042465209961
    6. 'is' → logprob: -4.822042465209961
    7. '(ref' → logprob: -5.447042465209961
    8. '(c' → logprob: -6.072042465209961
    9. '(abs' → logprob: -6.072042465209961
    10. '('' → logprob: -6.322042465209961

Token 1942: 'jection' (ID: 11533)
  Prédit: 'jection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jection' → logprob: -5.319370302458992e-06
    2. 'ject' → logprob: -13.250005722045898
    3. '``' → logprob: -13.750005722045898
    4. 'f' → logprob: -14.750005722045898
    5. 'tection' → logprob: -14.750005722045898
    6. 'j' → logprob: -15.000005722045898
    7. 'lection' → logprob: -15.625005722045898
    8. '```' → logprob: -15.750005722045898
    9. 'projection' → logprob: -15.875005722045898
    10. 'JECTION' → logprob: -16.3750057220459

Token 1943: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -7.703443770878948e-06
    2. ')' → logprob: -12.500007629394531
    3. '(' → logprob: -12.875007629394531
    4. '(line' → logprob: -14.250007629394531
    5. ',l' → logprob: -14.500007629394531
    6. '(
' → logprob: -17.00000762939453
    7. '(L' → logprob: -18.00000762939453
    8. '	l' → logprob: -18.00000762939453
    9. ',' → logprob: -18.12500762939453
    10. ' (' → logprob: -18.12500762939453

Token 1944: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022082125360611826
    2. ',l' → logprob: -8.750221252441406
    3. ',p' → logprob: -9.875221252441406
    4. '(p' → logprob: -12.250221252441406
    5. '(l' → logprob: -13.250221252441406
    6. ' ,' → logprob: -13.375221252441406
    7. 'l' → logprob: -13.875221252441406
    8. ',
' → logprob: -14.125221252441406
    9. 'p' → logprob: -14.750221252441406
    10. ')' → logprob: -14.750221252441406

Token 1945: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001234428636962548
    2. ' p' → logprob: -9.000123023986816
    3. '	p' → logprob: -20.375123977661133
    4. '<p' → logprob: -20.625123977661133
    5. '(p' → logprob: -21.000123977661133
    6. '
' → logprob: -21.250123977661133
    7. ')p' → logprob: -21.750123977661133
    8. '[p' → logprob: -22.500123977661133
    9. '   ' → logprob: -23.000123977661133
    10. ')' → logprob: -23.250123977661133

Token 1946: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.003474509110674262
    2. ')' → logprob: -6.753474712371826
    3. ',' → logprob: -6.878474712371826
    4. '(p' → logprob: -7.378474712371826
    5. '),' → logprob: -8.378474235534668
    6. ').' → logprob: -8.503474235534668
    7. '(l' → logprob: -9.003474235534668
    8. '))
' → logprob: -9.753474235534668
    9. ' ))' → logprob: -11.628474235534668
    10. '   ' → logprob: -11.878474235534668

Token 1947: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6240566083070007e-06
    2. ' def' → logprob: -13.875001907348633
    3. '   ' → logprob: -15.125001907348633
    4. 'return' → logprob: -15.625001907348633
    5. '```' → logprob: -16.875001907348633
    6. '
' → logprob: -17.000001907348633
    7. '#' → logprob: -17.750001907348633
    8. '	def' → logprob: -19.500001907348633
    9. '``' → logprob: -19.875001907348633
    10. 'from' → logprob: -20.000001907348633

Token 1948: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.12149560451507568
    2. 'main' → logprob: -2.2464957237243652
    3. '__' → logprob: -5.121495723724365
    4. ' verify' → logprob: -6.871495723724365
    5. 'solve' → logprob: -6.996495723724365
    6. ' main' → logprob: -7.996495723724365
    7. 'run' → logprob: -9.246495246887207
    8. 'test' → logprob: -9.746495246887207
    9. 'validate' → logprob: -10.121495246887207
    10. '_main' → logprob: -10.621495246887207

Token 1949: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.9875325708417222e-05
    2. '__' → logprob: -11.375029563903809
    3. ' _' → logprob: -12.125029563903809
    4. '()' → logprob: -12.500029563903809
    5. 'def' → logprob: -13.000029563903809
    6. '1' → logprob: -13.250029563903809
    7. '```' → logprob: -13.625029563903809
    8. '(' → logprob: -14.000029563903809
    9. '＿' → logprob: -14.375029563903809
    10. '_
' → logprob: -14.750029563903809

Token 1950: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19135138392448425
    2. '1' → logprob: -1.8163514137268066
    3. '3' → logprob: -4.816351413726807
    4. 'l' → logprob: -6.566351413726807
    5. '4' → logprob: -7.441351413726807
    6. '0' → logprob: -8.191350936889648
    7. '_' → logprob: -8.191350936889648
    8. 'lp' → logprob: -8.191350936889648
    9. '5' → logprob: -8.441350936889648
    10. 'par' → logprob: -10.191350936889648

Token 1951: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.08117391169071198
    2. 'B' → logprob: -2.581173896789551
    3. 'C' → logprob: -6.581173896789551
    4. 'L' → logprob: -7.831173896789551
    5. 'S' → logprob: -9.08117389678955
    6. 'a' → logprob: -9.95617389678955
    7. 'P' → logprob: -10.08117389678955
    8. 'D' → logprob: -10.33117389678955
    9. 'def' → logprob: -10.45617389678955
    10. 'c' → logprob: -10.70617389678955

Token 1952: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.02325526252388954
    2. '():
' → logprob: -3.7732553482055664
    3. '():
' → logprob: -11.648255348205566
    4. ' ():' → logprob: -14.273255348205566
    5. 'def' → logprob: -15.023255348205566
    6. '():

' → logprob: -16.39825439453125
    7. '()' → logprob: -17.89825439453125
    8. '(' → logprob: -19.64825439453125
    9. '()>' → logprob: -20.14825439453125
    10. '()):
' → logprob: -21.14825439453125

Token 1953: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023697635158896446
    2. 'p' → logprob: -3.7736976146698
    3. ' p' → logprob: -7.898697853088379
    4. 'def' → logprob: -9.523697853088379
    5. '	p' → logprob: -12.398697853088379
    6. 'print' → logprob: -14.023697853088379
    7. 'n' → logprob: -14.398697853088379
    8. 'pass' → logprob: -14.898697853088379
    9. ' def' → logprob: -15.398697853088379
    10. '  ' → logprob: -15.523697853088379

Token 1954: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0028987822588533163
    2. '   ' → logprob: -5.877898693084717
    3. 'pass' → logprob: -10.252899169921875
    4. 'import' → logprob: -11.127899169921875
    5. 'print' → logprob: -11.252899169921875
    6. ' p' → logprob: -11.752899169921875
    7. 'def' → logprob: -11.752899169921875
    8. 'Q' → logprob: -12.877899169921875
    9. 'px' → logprob: -13.377899169921875
    10. 'q' → logprob: -13.377899169921875

Token 1955: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011653638648567721
    2. 'def' → logprob: -9.750116348266602
    3. 't' → logprob: -11.375116348266602
    4. 'r' → logprob: -11.625116348266602
    5. '2' → logprob: -11.750116348266602
    6. 'oint' → logprob: -12.125116348266602
    7. 'x' → logprob: -12.125116348266602
    8. '#' → logprob: -12.375116348266602
    9. 'p' → logprob: -12.500116348266602
    10. '
' → logprob: -13.125116348266602

Token 1956: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.166338137816638e-05
    2. ',' → logprob: -10.750031471252441
    3. 'y' → logprob: -11.875031471252441
    4. '1' → logprob: -13.250031471252441
    5. '#' → logprob: -15.000031471252441
    6. 'def' → logprob: -15.500031471252441
    7. ' =' → logprob: -15.625031471252441
    8. '   ' → logprob: -16.375032424926758
    9. 'px' → logprob: -16.625032424926758
    10. 'p' → logprob: -16.625032424926758

Token 1957: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ',p' → logprob: -11.500011444091797
    3. ' ,' → logprob: -13.500011444091797
    4. 'p' → logprob: -16.250011444091797
    5. ',
' → logprob: -18.250011444091797
    6. '_,' → logprob: -18.750011444091797
    7. '=' → logprob: -19.000011444091797
    8. ' p' → logprob: -19.125011444091797
    9. ' =' → logprob: -20.000011444091797
    10. '1' → logprob: -20.125011444091797

Token 1958: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002475777640938759
    2. ' p' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.50247573852539
    4. ' ' → logprob: -20.87747573852539
    5. '_p' → logprob: -21.00247573852539
    6. '  ' → logprob: -21.37747573852539
    7. '	p' → logprob: -21.50247573852539
    8. '<p' → logprob: -22.00247573852539
    9. '<|end|>' → logprob: -22.25247573852539
    10. '    ' → logprob: -22.37747573852539

Token 1959: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025128775741904974
    2. 'p' → logprob: -6.0025129318237305
    3. 'y' → logprob: -10.25251293182373
    4. 'py' → logprob: -13.87751293182373
    5. ' p' → logprob: -15.12751293182373
    6. '2' → logprob: -15.25251293182373
    7. ',' → logprob: -16.502511978149414
    8. '```' → logprob: -17.002511978149414
    9. '<p' → logprob: -17.127511978149414
    10. 'def' → logprob: -17.127511978149414

Token 1960: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00013035668234806508
    2. ',' → logprob: -9.625130653381348
    3. 'p' → logprob: -9.750130653381348
    4. 'x' → logprob: -12.500130653381348
    5. '   ' → logprob: -13.875130653381348
    6. '1' → logprob: -14.000130653381348
    7. 'py' → logprob: -15.250130653381348
    8. ' y' → logprob: -17.00012969970703
    9. ',y' → logprob: -17.12512969970703
    10. 'def' → logprob: -17.37512969970703

Token 1961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.968312951968983e-06
    2. ',p' → logprob: -12.125009536743164
    3. 'p' → logprob: -13.125009536743164
    4. ' ,' → logprob: -13.375009536743164
    5. '   ' → logprob: -14.375009536743164
    6. '=' → logprob: -15.875009536743164
    7. ',
' → logprob: -16.625009536743164
    8. 'def' → logprob: -16.750009536743164
    9. '_,' → logprob: -17.250009536743164
    10. ' =' → logprob: -17.750009536743164

Token 1962: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024774393532425165
    2. ' p' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.252477645874023
    4. ' ' → logprob: -17.002477645874023
    5. '  ' → logprob: -17.752477645874023
    6. '    ' → logprob: -19.002477645874023
    7. '
' → logprob: -19.377477645874023
    8. '	p' → logprob: -20.002477645874023
    9. '<p' → logprob: -20.064977645874023
    10. 'px' → logprob: -20.377477645874023

Token 1963: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006451508495956659
    2. '1' → logprob: -5.506451606750488
    3. 'p' → logprob: -6.881451606750488
    4. 'x' → logprob: -6.881451606750488
    5. 'y' → logprob: -8.131451606750488
    6. ',' → logprob: -11.006451606750488
    7. '3' → logprob: -13.381451606750488
    8. 'py' → logprob: -13.506451606750488
    9. '#' → logprob: -13.756451606750488
    10. 'm' → logprob: -14.756451606750488

Token 1964: 'x' (ID: 87)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023764224722981453
    2. 'x' → logprob: -3.773764133453369
    3. ',p' → logprob: -8.023764610290527
    4. 'y' → logprob: -8.898764610290527
    5. ' ,' → logprob: -10.648764610290527
    6. 'p' → logprob: -11.398764610290527
    7. ',y' → logprob: -12.023764610290527
    8. '_,' → logprob: -12.023764610290527
    9. ',x' → logprob: -13.023764610290527
    10. '   ' → logprob: -13.398764610290527

Token 1965: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011999329581158236
    2. ',p' → logprob: -10.000120162963867
    3. ' ,' → logprob: -10.500120162963867
    4. '=' → logprob: -10.750120162963867
    5. ' =' → logprob: -10.750120162963867
    6. '   ' → logprob: -13.125120162963867
    7. 'p' → logprob: -14.125120162963867
    8. ',input' → logprob: -14.625120162963867
    9. ',y' → logprob: -14.875120162963867
    10. ',line' → logprob: -15.000120162963867

Token 1966: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0015024791937321424
    2. ' p' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.75150203704834
    4. ' ' → logprob: -17.376502990722656
    5. 'input' → logprob: -18.126502990722656
    6. '(p' → logprob: -18.376502990722656
    7. '  ' → logprob: -19.001502990722656
    8. '    ' → logprob: -19.001502990722656
    9. 'def' → logprob: -19.001502990722656
    10. '	p' → logprob: -19.251502990722656

Token 1967: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0006288022268563509
    2. '2' → logprob: -8.000628471374512
    3. '1' → logprob: -8.625628471374512
    4. 'p' → logprob: -9.750628471374512
    5. 'x' → logprob: -10.250628471374512
    6. 'py' → logprob: -11.000628471374512
    7. '```' → logprob: -13.250628471374512
    8. '#' → logprob: -15.500628471374512
    9. '.py' → logprob: -15.500628471374512
    10. ',' → logprob: -15.625628471374512

Token 1968: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.0126840758603066e-05
    2. 'x' → logprob: -10.500040054321289
    3. '2' → logprob: -12.500040054321289
    4. ',' → logprob: -13.125040054321289
    5. '1' → logprob: -13.625040054321289
    6. '   ' → logprob: -13.625040054321289
    7. '3' → logprob: -13.750040054321289
    8. 'p' → logprob: -14.000040054321289
    9. ' y' → logprob: -14.375040054321289
    10. 'py' → logprob: -14.375040054321289

Token 1969: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062004204839468
    2. ' =' → logprob: -2.8120040893554688
    3. '   ' → logprob: -10.312004089355469
    4. ',' → logprob: -12.812004089355469
    5. ' ' → logprob: -15.437004089355469
    6. '    ' → logprob: -15.437004089355469
    7. '=input' → logprob: -16.43700408935547
    8. '  ' → logprob: -16.68700408935547
    9. '=list' → logprob: -17.31200408935547
    10. '=
' → logprob: -17.56200408935547

Token 1970: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889419049024582
    2. ' map' → logprob: -2.5788941383361816
    3. '    ' → logprob: -12.70389461517334
    4. '   ' → logprob: -13.70389461517334
    5. '	map' → logprob: -16.078893661499023
    6. ' ' → logprob: -16.578893661499023
    7. '  ' → logprob: -17.328893661499023
    8. 'list' → logprob: -17.328893661499023
    9. '        ' → logprob: -18.453893661499023
    10. '(map' → logprob: -18.578893661499023

Token 1971: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.20142874121665955
    2. 'int' → logprob: -1.701428771018982
    3. '[int' → logprob: -11.576428413391113
    4. '=int' → logprob: -12.326428413391113
    5. ',int' → logprob: -14.201428413391113
    6. '<int' → logprob: -15.201428413391113
    7. ' int' → logprob: -15.201428413391113
    8. '   ' → logprob: -16.07642936706543
    9. '	int' → logprob: -16.45142936706543
    10. 'Point' → logprob: -16.57642936706543

Token 1972: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.37500709295272827
    2. ',' → logprob: -1.375007152557373
    3. '(input' → logprob: -2.875007152557373
    4. '=input' → logprob: -6.125007152557373
    5. 'input' → logprob: -7.125007152557373
    6. '(),' → logprob: -9.000006675720215
    7. '   ' → logprob: -9.500006675720215
    8. ' input' → logprob: -9.625006675720215
    9. ' ,' → logprob: -9.875006675720215
    10. '.input' → logprob: -10.125006675720215

Token 1973: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.7848862373502925e-05
    2. ' input' → logprob: -10.500027656555176
    3. 'int' → logprob: -15.250027656555176
    4. '<input' → logprob: -19.125028610229492
    5. 'import' → logprob: -19.375028610229492
    6. '(input' → logprob: -19.625028610229492
    7. '   ' → logprob: -20.875028610229492
    8. ' ' → logprob: -21.375028610229492
    9. 'output' → logprob: -21.625028610229492
    10. '=input' → logprob: -22.125028610229492

Token 1974: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '.split' → logprob: -15.625
    3. '()' → logprob: -16.625
    4. ').' → logprob: -17.75
    5. '()
' → logprob: -18.5
    6. '()).' → logprob: -18.75
    7. '.' → logprob: -18.875
    8. ' ().' → logprob: -19.125
    9. '().
' → logprob: -20.0
    10. '>().' → logprob: -20.5

Token 1975: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.625
    3. 'spl' → logprob: -17.25
    4. '(split' → logprob: -18.875
    5. '.split' → logprob: -19.125
    6. 'strip' → logprob: -19.75
    7. 'skip' → logprob: -21.875
    8. 'sl' → logprob: -22.25
    9. 'plit' → logprob: -22.5
    10. '
' → logprob: -22.875

Token 1976: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.14757601916790009
    2. ')
' → logprob: -2.022576093673706
    3. '())' → logprob: -6.022575855255127
    4. '   ' → logprob: -6.647575855255127
    5. ')' → logprob: -7.272575855255127
    6. '()' → logprob: -8.522576332092285
    7. '()
' → logprob: -8.897576332092285
    8. '())
' → logprob: -9.897576332092285
    9. 'def' → logprob: -10.147576332092285
    10. ')
' → logprob: -11.397576332092285

Token 1977: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017725196667015553
    2. 'l' → logprob: -6.376772403717041
    3. 'Q' → logprob: -10.8767728805542
    4. 'def' → logprob: -11.0017728805542
    5. ' l' → logprob: -11.0017728805542
    6. 's' → logprob: -12.2517728805542
    7. '```' → logprob: -12.6267728805542
    8. '   ' → logprob: -13.1267728805542
    9. '	l' → logprob: -13.3767728805542
    10. 'p' → logprob: -13.5017728805542

Token 1978: ' l' (ID: 305)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.09796425700187683
    2. 'l' (adapté à ' l') → logprob: -2.472964286804199
    3. '   ' → logprob: -5.222964286804199
    4. 'p' → logprob: -6.222964286804199
    5. 'q' → logprob: -7.472964286804199
    6. 'r' → logprob: -7.847964286804199
    7. ' Q' → logprob: -8.9729642868042
    8. 'def' → logprob: -9.0979642868042
    9. 'n' → logprob: -9.7229642868042
    10. 'a' → logprob: -9.8479642868042

Token 1979: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06257355213165283
    2. '=' → logprob: -2.8125734329223633
    3. '   ' → logprob: -7.437573432922363
    4. 'def' → logprob: -11.687573432922363
    5. ' ' → logprob: -14.187573432922363
    6. 'p' → logprob: -14.312573432922363
    7. '       ' → logprob: -14.312573432922363
    8. 'a' → logprob: -14.437573432922363
    9. '=l' → logprob: -14.562573432922363
    10. '=line' → logprob: -14.937573432922363

Token 1980: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -9.729906196298543e-06
    2. 'Segment' → logprob: -12.500009536743164
    3. ' Line' → logprob: -12.625009536743164
    4. 'Point' → logprob: -12.875009536743164
    5. '   ' → logprob: -17.000009536743164
    6. '(Line' → logprob: -17.125009536743164
    7. 'L' → logprob: -19.750009536743164
    8. 'Length' → logprob: -19.875009536743164
    9. '_line' → logprob: -20.125009536743164
    10. ' ' → logprob: -20.125009536743164

Token 1981: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.011077186092734337
    2. 'Point' → logprob: -4.511077404022217
    3. ' Point' → logprob: -11.636076927185059
    4. '	Point' → logprob: -11.761076927185059
    5. 'Segment' → logprob: -12.261076927185059
    6. '   ' → logprob: -12.511076927185059
    7. '(Line' → logprob: -13.386076927185059
    8. '.Point' → logprob: -13.886076927185059
    9. '<Point' → logprob: -14.261076927185059
    10. 'p' → logprob: -15.386076927185059

Token 1982: '(p' (ID: 2407)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.2519543766975403
    2. '(Point' → logprob: -1.5019543170928955
    3. '	Point' → logprob: -11.376954078674316
    4. ' Point' → logprob: -11.626954078674316
    5. 'p' → logprob: -13.376954078674316
    6. '.Point' → logprob: -13.501954078674316
    7. '(p' → logprob: -14.501954078674316
    8. '<Point' → logprob: -14.751954078674316
    9. '(' → logprob: -15.251954078674316
    10. '   ' → logprob: -15.376954078674316

Token 1983: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. 'p' → logprob: -11.37501335144043
    3. '(p' → logprob: -14.12501335144043
    4. '2' → logprob: -15.75001335144043
    5. 'x' → logprob: -16.00001335144043
    6. '```' → logprob: -16.25001335144043
    7. ' p' → logprob: -16.31251335144043
    8. 'oint' → logprob: -16.50001335144043
    9. 'l' → logprob: -16.93751335144043
    10. 'def' → logprob: -17.00001335144043

Token 1984: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.38691821694374084
    2. '1' → logprob: -1.1369181871414185
    3. 'p' → logprob: -10.261918067932129
    4. '(p' → logprob: -13.511918067932129
    5. 'y' → logprob: -13.636918067932129
    6. '2' → logprob: -13.636918067932129
    7. '```' → logprob: -13.886918067932129
    8. 'mx' → logprob: -14.386918067932129
    9. '(x' → logprob: -14.386918067932129
    10. 'px' → logprob: -14.636918067932129

Token 1985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006937315920367837
    2. ',p' → logprob: -7.7506937980651855
    3. 'p' → logprob: -8.375693321228027
    4. '   ' → logprob: -11.375693321228027
    5. ' ,' → logprob: -11.500693321228027
    6. ',l' → logprob: -11.750693321228027
    7. 'l' → logprob: -13.375693321228027
    8. ' p' → logprob: -14.125693321228027
    9. ',y' → logprob: -14.875693321228027
    10. '(p' → logprob: -15.375693321228027

Token 1986: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008045066497288644
    2. ' p' → logprob: -7.125804424285889
    3. '   ' → logprob: -18.125804901123047
    4. ' ' → logprob: -18.875804901123047
    5. '	p' → logprob: -19.250804901123047
    6. 'py' → logprob: -19.750804901123047
    7. '<p' → logprob: -20.000804901123047
    8. '    ' → logprob: -21.250804901123047
    9. '_p' → logprob: -21.375804901123047
    10. '  ' → logprob: -21.375804901123047

Token 1987: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.43181130290031433
    2. '1' → logprob: -1.0568113327026367
    3. 'p' → logprob: -5.806811332702637
    4. 'py' → logprob: -9.556811332702637
    5. 'ay' → logprob: -11.931811332702637
    6. '
' → logprob: -12.931811332702637
    7. '2' → logprob: -12.931811332702637
    8. '   ' → logprob: -13.181811332702637
    9. ' p' → logprob: -13.556811332702637
    10. 'ey' → logprob: -13.556811332702637

Token 1988: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4418171455617994e-05
    2. ',' → logprob: -10.250044822692871
    3. '1' → logprob: -12.375044822692871
    4. '   ' → logprob: -13.000044822692871
    5. 'p' → logprob: -13.750044822692871
    6. 'py' → logprob: -14.625044822692871
    7. '
' → logprob: -14.875044822692871
    8. ' y' → logprob: -16.000043869018555
    9. ',y' → logprob: -16.125043869018555
    10. '2' → logprob: -16.875043869018555

Token 1989: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005078765680082142
    2. '),' → logprob: -8.250508308410645
    3. '   ' → logprob: -9.125508308410645
    4. ',p' → logprob: -9.625508308410645
    5. 'p' → logprob: -10.250508308410645
    6. '(p' → logprob: -11.125508308410645
    7. '(),' → logprob: -11.500508308410645
    8. ' ,' → logprob: -11.625508308410645
    9. ' p' → logprob: -15.000508308410645
    10. '(' → logprob: -15.000508308410645

Token 1990: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.002476016292348504
    2. ' Point' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.37747573852539
    4. '(Point' → logprob: -16.37747573852539
    5. '	Point' → logprob: -17.00247573852539
    6. 'p' → logprob: -18.50247573852539
    7. 'point' → logprob: -19.62747573852539
    8. '_point' → logprob: -19.87747573852539
    9. ' ' → logprob: -20.00247573852539
    10. '_Point' → logprob: -20.25247573852539

Token 1991: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02325083687901497
    2. 'Point' → logprob: -3.7732508182525635
    3. '(p' → logprob: -12.398250579833984
    4. '(Point' → logprob: -14.523250579833984
    5. ' Point' → logprob: -14.648250579833984
    6. ' p' → logprob: -15.273250579833984
    7. 'point' → logprob: -17.148250579833984
    8. '2' → logprob: -17.523250579833984
    9. '
' → logprob: -18.023250579833984
    10. '   ' → logprob: -18.148250579833984

Token 1992: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007016571704298258
    2. 'x' → logprob: -5.007016658782959
    3. '1' → logprob: -8.7570161819458
    4. 'p' → logprob: -9.2570161819458
    5. 'y' → logprob: -10.0070161819458
    6. 'py' → logprob: -12.8820161819458
    7. 'px' → logprob: -15.1320161819458
    8. '```' → logprob: -16.132017135620117
    9. '
' → logprob: -16.382017135620117
    10. ' p' → logprob: -16.507017135620117

Token 1993: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007507824921049178
    2. 'y' → logprob: -7.37575101852417
    3. '2' → logprob: -9.000750541687012
    4. '1' → logprob: -14.875750541687012
    5. '   ' → logprob: -15.625750541687012
    6. '5' → logprob: -16.000751495361328
    7. '```' → logprob: -16.500751495361328
    8. '#' → logprob: -17.000751495361328
    9. ' x' → logprob: -17.125751495361328
    10. '       ' → logprob: -17.438251495361328

Token 1994: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053840186446905136
    2. 'p' → logprob: -3.053840160369873
    3. ',p' → logprob: -5.303840160369873
    4. '   ' → logprob: -9.303840637207031
    5. ' ,' → logprob: -9.303840637207031
    6. 'y' → logprob: -10.178840637207031
    7. ',y' → logprob: -10.803840637207031
    8. ' p' → logprob: -11.428840637207031
    9. 'py' → logprob: -12.053840637207031
    10. '(p' → logprob: -13.803840637207031

Token 1995: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010926496179308742
    2. ' p' → logprob: -9.125109672546387
    3. '   ' → logprob: -15.500109672546387
    4. '
' → logprob: -16.75010871887207
    5. '
' → logprob: -17.50010871887207
    6. ' ' → logprob: -17.50010871887207
    7. '```' → logprob: -18.12510871887207
    8. '	p' → logprob: -18.25010871887207
    9. '(p' → logprob: -18.62510871887207
    10. '<p' → logprob: -18.62510871887207

Token 1996: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0008764470112510026
    2. '1' → logprob: -7.125876426696777
    3. 'py' → logprob: -9.750876426696777
    4. 'p' → logprob: -12.000876426696777
    5. 'x' → logprob: -13.375876426696777
    6. 'ay' → logprob: -13.875876426696777
    7. '2' → logprob: -14.250876426696777
    8. '
' → logprob: -14.375876426696777
    9. '#' → logprob: -15.125876426696777
    10. 'def' → logprob: -15.375876426696777

Token 1997: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.4849443838757e-06
    2. '   ' → logprob: -14.000004768371582
    3. '1' → logprob: -14.125004768371582
    4. 'x' → logprob: -14.250004768371582
    5. '
' → logprob: -14.750004768371582
    6. ' y' → logprob: -15.000004768371582
    7. '```' → logprob: -15.625004768371582
    8. '	y' → logprob: -16.000003814697266
    9. '

' → logprob: -16.312503814697266
    10. ')' → logprob: -16.375003814697266

Token 1998: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07946215569972992
    2. ')
' → logprob: -2.5794620513916016
    3. '   ' → logprob: -8.079462051391602
    4. ')
' → logprob: -8.704462051391602
    5. 'def' → logprob: -10.329462051391602
    6. '())' → logprob: -10.954462051391602
    7. '))' → logprob: -11.079462051391602
    8. ')

' → logprob: -11.704462051391602
    9. '),' → logprob: -11.954462051391602
    10. '())
' → logprob: -12.079462051391602

Token 1999: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.6934776306152344
    2. '   ' → logprob: -0.6934776306152344
    3. ' Q' → logprob: -8.318477630615234
    4. 'def' → logprob: -10.443477630615234
    5. '	Q' → logprob: -10.568477630615234
    6. 'q' → logprob: -10.693477630615234
    7. ' ' → logprob: -12.943477630615234
    8. '```' → logprob: -13.193477630615234
    9. '
' → logprob: -14.318477630615234
    10. '   ' → logprob: -14.443477630615234

Token 2000: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.0017281336477026343
    2. 'q' → logprob: -6.626728057861328
    3. '   ' → logprob: -7.876728057861328
    4. ' Q' → logprob: -11.626728057861328
    5. 'def' → logprob: -11.876728057861328
    6. 'n' → logprob: -12.751728057861328
    7. 'N' → logprob: -13.876728057861328
    8. '	Q' → logprob: -14.501728057861328
    9. 'for' → logprob: -15.126728057861328
    10. ' ' → logprob: -15.251728057861328

Token 2001: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32365313172340393
    2. ' =' → logprob: -1.3236531019210815
    3. '   ' → logprob: -4.573653221130371
    4. 'for' → logprob: -11.823653221130371
    5. '=
' → logprob: -13.073653221130371
    6. '    ' → logprob: -13.448653221130371
    7. '=int' → logprob: -13.698653221130371
    8. 'def' → logprob: -13.698653221130371
    9. '  ' → logprob: -14.198653221130371
    10. ' ' → logprob: -14.573653221130371

Token 2002: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.2729995988775045e-06
    2. ' int' → logprob: -12.000006675720215
    3. '(int' → logprob: -17.0000057220459
    4. '   ' → logprob: -18.1250057220459
    5. '[int' → logprob: -20.5000057220459
    6. '=int' → logprob: -21.6250057220459
    7. '	int' → logprob: -23.1250057220459
    8. 'Q' → logprob: -23.2500057220459
    9. '
' → logprob: -23.2500057220459
    10. '    ' → logprob: -23.7500057220459

Token 2003: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759562253952026
    2. '(input' → logprob: -0.8259562253952026
    3. '=input' → logprob: -11.450956344604492
    4. ' input' → logprob: -12.950956344604492
    5. 'import' → logprob: -14.075956344604492
    6. 'for' → logprob: -14.200956344604492
    7. ',input' → logprob: -14.450956344604492
    8. '[input' → logprob: -14.575956344604492
    9. '()' → logprob: -14.700956344604492
    10. '	input' → logprob: -15.450956344604492

Token 2004: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7865691184997559
    2. '())
' → logprob: -0.7865691184997559
    3. '()
' → logprob: -2.536569118499756
    4. '())' → logprob: -4.911569118499756
    5. ')
' → logprob: -6.036569118499756
    6. ')' → logprob: -8.286569595336914
    7. '())
' → logprob: -10.411569595336914
    8. '()
' → logprob: -12.036569595336914
    9. '()}
' → logprob: -13.036569595336914
    10. '()>' → logprob: -13.161569595336914

Token 2005: '   ' (ID: 271)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.07538758218288422
    2. '   ' → logprob: -2.825387477874756
    3. 'for' → logprob: -4.325387477874756
    4. '	Query' → logprob: -9.825387954711914
    5. '```' → logprob: -11.575387954711914
    6. ' for' → logprob: -12.075387954711914
    7. 'query' → logprob: -12.325387954711914
    8. '_Query' → logprob: -12.450387954711914
    9. ' Query' → logprob: -12.450387954711914
    10. 'For' → logprob: -12.825387954711914

Token 2006: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' (adapté à ' Query') → logprob: -0.01822076365351677
    2. 'for' → logprob: -4.018220901489258
    3. 'query' → logprob: -9.893220901489258
    4. '   ' → logprob: -11.268220901489258
    5. 'Queries' → logprob: -12.893220901489258
    6. 'queries' → logprob: -13.518220901489258
    7. 'Point' → logprob: -14.268220901489258
    8. ' Query' → logprob: -14.518220901489258
    9. 'Segment' → logprob: -15.018220901489258
    10. '	Query' → logprob: -15.018220901489258

Token 2007: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759788155555725
    2. ' =' → logprob: -0.8259788155555725
    3. '   ' → logprob: -10.325979232788086
    4. 'for' → logprob: -12.825979232788086
    5. '=
' → logprob: -13.950979232788086
    6. 'def' → logprob: -14.450979232788086
    7. '=[' → logprob: -14.450979232788086
    8. '＝' → logprob: -14.700979232788086
    9. '=[]' → logprob: -14.700979232788086
    10. '=query' → logprob: -15.075979232788086

Token 2008: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.00382217182777822
    2. '[' → logprob: -5.753822326660156
    3. '[List' → logprob: -7.628822326660156
    4. '[int' → logprob: -9.003822326660156
    5. ' [' → logprob: -11.503822326660156
    6. '[[' → logprob: -11.878822326660156
    7. '[input' → logprob: -11.878822326660156
    8. '[l' → logprob: -12.878822326660156
    9. '[p' → logprob: -13.128822326660156
    10. '[line' → logprob: -13.253822326660156

Token 2009: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.9361264946837764e-07
    2. '[list' → logprob: -16.5
    3. 'tuple' → logprob: -17.5
    4. ' list' → logprob: -17.5
    5. '(list' → logprob: -18.625
    6. 'map' → logprob: -22.125
    7. '	list' → logprob: -22.375
    8. '[' → logprob: -22.5
    9. '=list' → logprob: -22.75
    10. '
' → logprob: -23.0

Token 2010: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07894520461559296
    2. 'map' → logprob: -2.5789451599121094
    3. ',map' → logprob: -10.70394515991211
    4. '	map' → logprob: -11.20394515991211
    5. ' map' → logprob: -12.32894515991211
    6. 'int' → logprob: -12.57894515991211
    7. 'import' → logprob: -12.82894515991211
    8. '.map' → logprob: -13.07894515991211
    9. 'maps' → logprob: -13.45394515991211
    10. '(int' → logprob: -13.57894515991211

Token 2011: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38747209310531616
    2. '(int' → logprob: -1.137472152709961
    3. '[int' → logprob: -7.887472152709961
    4. '=int' → logprob: -9.387472152709961
    5. '<int' → logprob: -9.512472152709961
    6. ',int' → logprob: -10.387472152709961
    7. ']int' → logprob: -11.012472152709961
    8. ':int' → logprob: -11.637472152709961
    9. 'input' → logprob: -12.262472152709961
    10. ' int' → logprob: -12.512472152709961

Token 2012: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.028190376237034798
    2. ',int' → logprob: -3.9031903743743896
    3. 'int' → logprob: -5.278190612792969
    4. '<int' → logprob: -6.778190612792969
    5. '=int' → logprob: -7.403190612792969
    6. '[int' → logprob: -8.403190612792969
    7. ',' → logprob: -8.528190612792969
    8. '(input' → logprob: -8.653190612792969
    9. ']int' → logprob: -9.153190612792969
    10. ',input' → logprob: -10.153190612792969

Token 2013: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10023632645606995
    2. 'int' → logprob: -2.350236415863037
    3. 'range' → logprob: -10.600235939025879
    4. ' input' → logprob: -12.475235939025879
    5. 'sys' → logprob: -14.975235939025879
    6. 'lambda' → logprob: -15.725235939025879
    7. '(int' → logprob: -15.850235939025879
    8. 'import' → logprob: -15.850235939025879
    9. '(input' → logprob: -16.725236892700195
    10. '0' → logprob: -16.725236892700195

Token 2014: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.58101487159729
    2. '.split' → logprob: -0.83101487159729
    3. 'split' → logprob: -5.706014633178711
    4. '()' → logprob: -7.956014633178711
    5. '.sort' → logprob: -8.706014633178711
    6. '.' → logprob: -8.956014633178711
    7. ').' → logprob: -8.956014633178711
    8. ')' → logprob: -9.206014633178711
    9. 'for' → logprob: -9.331014633178711
    10. '(split' → logprob: -9.331014633178711

Token 2015: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.040457421680912e-05
    2. 'range' → logprob: -9.625070571899414
    3. 'spl' → logprob: -13.500070571899414
    4. 'input' → logprob: -14.250070571899414
    5. ' split' → logprob: -14.375070571899414
    6. 'strip' → logprob: -14.500070571899414
    7. 'read' → logprob: -15.125070571899414
    8. 'sys' → logprob: -15.500070571899414
    9. 'int' → logprob: -16.000070571899414
    10. '_split' → logprob: -16.125070571899414

Token 2016: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00028290803311392665
    2. '))' → logprob: -8.250283241271973
    3. '()' → logprob: -11.375283241271973
    4. '())' → logprob: -12.250283241271973
    5. '()[' → logprob: -13.250283241271973
    6. '()))
' → logprob: -13.250283241271973
    7. '   ' → logprob: -14.750283241271973
    8. '())).' → logprob: -14.750283241271973
    9. '(' → logprob: -15.375283241271973
    10. '()
' → logprob: -15.875283241271973

Token 2017: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.475907564163208
    2. 'for' → logprob: -0.975907564163208
    3. '   ' → logprob: -6.725907325744629
    4. ')' → logprob: -8.225907325744629
    5. '()' → logprob: -8.350907325744629
    6. '	for' → logprob: -9.100907325744629
    7. '       ' → logprob: -11.600907325744629
    8. 'def' → logprob: -13.975907325744629
    9. '    ' → logprob: -13.975907325744629
    10. '
' → logprob: -14.600907325744629

Token 2018: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04446020722389221
    2. '_Q' → logprob: -4.044460296630859
    3. 'range' → logprob: -4.294460296630859
    4. 'Q' → logprob: -5.294460296630859
    5. '_range' → logprob: -5.294460296630859
    6. ' range' → logprob: -6.169460296630859
    7. '(Q' → logprob: -9.16946029663086
    8. '_q' → logprob: -10.54446029663086
    9. '(range' → logprob: -11.16946029663086
    10. '_
' → logprob: -11.16946029663086

Token 2019: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26991382241249084
    2. '_' → logprob: -2.019913911819458
    3. ' range' → logprob: -2.269913911819458
    4. '_range' → logprob: -7.894913673400879
    5. ' in' → logprob: -8.644913673400879
    6. 'in' → logprob: -11.644913673400879
    7. '(range' → logprob: -12.269913673400879
    8. ' _' → logprob: -12.644913673400879
    9. '	range' → logprob: -15.019913673400879
    10. '_
' → logprob: -15.144913673400879

Token 2020: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0011740362970158458
    2. ' range' → logprob: -6.751173973083496
    3. 'Q' → logprob: -12.751173973083496
    4. '(range' → logprob: -14.126173973083496
    5. '
' → logprob: -15.751173973083496
    6. 'Range' → logprob: -17.001174926757812
    7. '_range' → logprob: -17.626174926757812
    8. '_Q' → logprob: -18.751174926757812
    9. '	range' → logprob: -18.751174926757812
    10. '(Q' → logprob: -18.876174926757812

Token 2021: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.2415771782398224
    2. 'Q' → logprob: -2.2415771484375
    3. 'range' → logprob: -2.2415771484375
    4. ' range' → logprob: -6.2415771484375
    5. '_Q' → logprob: -10.6165771484375
    6. 'Range' → logprob: -10.8665771484375
    7. '
' → logprob: -10.9915771484375
    8. '(range' → logprob: -11.2415771484375
    9. '_range' → logprob: -12.6165771484375
    10. '(' → logprob: -12.9915771484375

Token 2022: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21293050050735474
    2. ')]' → logprob: -1.71293044090271
    3. ')]
' → logprob: -5.212930679321289
    4. '   ' → logprob: -6.087930679321289
    5. ']' → logprob: -6.462930679321289
    6. ')
' → logprob: -6.962930679321289
    7. 'for' → logprob: -7.212930679321289
    8. ' for' → logprob: -8.962930679321289
    9. 'def' → logprob: -9.212930679321289
    10. ']
' → logprob: -9.837930679321289

Token 2023: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5762932300567627
    2. '   ' → logprob: -0.8262932300567627
    3. ' for' → logprob: -8.451292991638184
    4. 'def' → logprob: -9.076292991638184
    5. '	for' → logprob: -11.076292991638184
    6. '```' → logprob: -11.951292991638184
    7. '
' → logprob: -13.826292991638184
    8. '    
' → logprob: -13.951292991638184
    9. 'For' → logprob: -14.201292991638184
    10. '       ' → logprob: -14.451292991638184

Token 2024: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004095854703336954
    2. '   ' → logprob: -5.504096031188965
    3. 'def' → logprob: -11.629096031188965
    4. ' for' → logprob: -12.004096031188965
    5. '	for' → logprob: -13.504096031188965
    6. 'For' → logprob: -14.879096031188965
    7. '```' → logprob: -14.879096031188965
    8. 'from' → logprob: -16.00409507751465
    9. '
' → logprob: -16.37909507751465
    10. '       ' → logprob: -16.50409507751465

Token 2025: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.008129647001624107
    2. 'qx' → logprob: -5.383129596710205
    3. ' px' → logprob: -6.758129596710205
    4. 'tx' → logprob: -7.133129596710205
    5. '   ' → logprob: -7.383129596710205
    6. '_px' → logprob: -8.383130073547363
    7. 'x' → logprob: -8.383130073547363
    8. '(px' → logprob: -8.508130073547363
    9. 'q' → logprob: -10.133130073547363
    10. 'sx' → logprob: -10.258130073547363

Token 2026: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',p' → logprob: -15.62500286102295
    4. ',
' → logprob: -16.000003814697266
    5. 'y' → logprob: -19.250003814697266
    6. '_,' → logprob: -19.375003814697266
    7. 'p' → logprob: -19.375003814697266
    8. '‌,' → logprob: -19.500003814697266
    9. ' in' → logprob: -19.625003814697266
    10. 'py' → logprob: -19.750003814697266

Token 2027: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0002619318547658622
    2. ' py' → logprob: -8.250262260437012
    3. 'ply' → logprob: -15.500262260437012
    4. '(py' → logprob: -15.500262260437012
    5. '.py' → logprob: -16.125261306762695
    6. 'px' → logprob: -16.625261306762695
    7. 'ppy' → logprob: -17.000261306762695
    8. '_py' → logprob: -17.375261306762695
    9. 'p' → logprob: -17.750261306762695
    10. 'python' → logprob: -18.375261306762695

Token 2028: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11758118122816086
    2. 'in' → logprob: -2.2425811290740967
    3. ',' → logprob: -5.617581367492676
    4. '       ' → logprob: -7.117581367492676
    5. '   ' → logprob: -8.242581367492676
    6. ',p' → logprob: -11.242581367492676
    7. ':
' → logprob: -12.117581367492676
    8. ':' → logprob: -12.367581367492676
    9. ' ,' → logprob: -13.117581367492676
    10. 'p' → logprob: -13.117581367492676

Token 2029: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.049288444221019745
    2. 'input' → logprob: -4.299288272857666
    3. ' Query' → logprob: -4.424288272857666
    4. 'Point' → logprob: -4.549288272857666
    5. 'map' → logprob: -5.424288272857666
    6. 'list' → logprob: -5.924288272857666
    7. ' input' → logprob: -6.549288272857666
    8. ' map' → logprob: -7.299288272857666
    9. 'query' → logprob: -7.799288272857666
    10. '[' → logprob: -8.049288749694824

Token 2030: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14986248314380646
    2. ':
' → logprob: -2.52486252784729
    3. ':' → logprob: -2.89986252784729
    4. '<|end|>' → logprob: -6.399862289428711
    5. ',' → logprob: -6.774862289428711
    6. '   ' → logprob: -7.774862289428711
    7. '<|end|>' → logprob: -8.274862289428711
    8. '        
' → logprob: -9.274862289428711
    9. '):
' → logprob: -9.274862289428711
    10. ',p' → logprob: -9.399862289428711

Token 2031: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002680771518498659
    2. '```' → logprob: -7.252680778503418
    3. '<|end|>' → logprob: -7.377680778503418
    4. '   ' → logprob: -7.502680778503418
    5. '#' → logprob: -8.877680778503418
    6. '<|end|>' → logprob: -8.877680778503418
    7. 'p' → logprob: -9.877680778503418
    8. ':' → logprob: -10.002680778503418
    9. '' → logprob: -10.002680778503418
    10. '' → logprob: -10.627680778503418

Token 2032: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.00865215715020895
    2. ' p' → logprob: -5.383652210235596
    3. '       ' → logprob: -5.633652210235596
    4. '   ' → logprob: -8.008651733398438
    5. '	p' → logprob: -9.508651733398438
    6. '```' → logprob: -10.383651733398438
    7. '(p' → logprob: -12.508651733398438
    8. '``' → logprob: -13.633651733398438
    9. 'a' → logprob: -14.258651733398438
    10. ' ' → logprob: -14.508651733398438

Token 2033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5231910347938538
    2. ' =' → logprob: -0.8981910347938538
    3. '=
' → logprob: -10.023191452026367
    4. ' =
' → logprob: -11.773191452026367
    5. '   ' → logprob: -12.023191452026367
    6. ' ' → logprob: -13.398191452026367
    7. ':' → logprob: -13.523191452026367
    8. '=p' → logprob: -13.523191452026367
    9. '	' → logprob: -13.898191452026367
    10. ',' → logprob: -14.273191452026367

Token 2034: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.004080301150679588
    2. ' Point' → logprob: -5.504080295562744
    3. '	Point' → logprob: -13.254080772399902
    4. '   ' → logprob: -16.504079818725586
    5. '_point' → logprob: -16.879079818725586
    6. '.Point' → logprob: -17.504079818725586
    7. '_Point' → logprob: -18.004079818725586
    8. ' ' → logprob: -18.129079818725586
    9. 'p' → logprob: -18.254079818725586
    10. '(Point' → logprob: -18.379079818725586

Token 2035: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -1.1994775377388578e-05
    2. '(py' → logprob: -11.375012397766113
    3. ':px' → logprob: -15.750012397766113
    4. '(' → logprob: -15.875012397766113
    5. '(cx' → logprob: -16.875011444091797
    6. '(p' → logprob: -17.125011444091797
    7. '(pm' → logprob: -17.625011444091797
    8. 'px' → logprob: -17.625011444091797
    9. '(
' → logprob: -18.125011444091797
    10. ' (' → logprob: -18.375011444091797

Token 2036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ',p' → logprob: -10.000051498413086
    3. ' ,' → logprob: -12.500051498413086
    4. ',
' → logprob: -13.875051498413086
    5. 'p' → logprob: -14.375051498413086
    6. ',y' → logprob: -15.500051498413086
    7. '[' → logprob: -16.125051498413086
    8. 'py' → logprob: -16.625051498413086
    9. '.py' → logprob: -17.250051498413086
    10. '       ' → logprob: -17.375051498413086

Token 2037: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0024763736873865128
    2. ' py' → logprob: -6.002476215362549
    3. '(py' → logprob: -15.002476692199707
    4. '_py' → logprob: -16.12747573852539
    5. 'px' → logprob: -16.37747573852539
    6. 'ply' → logprob: -17.62747573852539
    7. '.py' → logprob: -17.87747573852539
    8. 'p' → logprob: -18.12747573852539
    9. '   ' → logprob: -18.62747573852539
    10. ' ' → logprob: -19.12747573852539

Token 2038: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008498270064592361
    2. 'print' → logprob: -5.508498191833496
    3. ')
' → logprob: -6.133498191833496
    4. ')' → logprob: -6.258498191833496
    5. ' print' → logprob: -8.633498191833496
    6. '):
' → logprob: -10.758498191833496
    7. '<|end|>' → logprob: -10.758498191833496
    8. '   ' → logprob: -11.008498191833496
    9. ',' → logprob: -11.258498191833496
    10. '=' → logprob: -11.258498191833496

Token 2039: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002010718220844865
    2. 'print' → logprob: -6.502010822296143
    3. '   ' → logprob: -8.002010345458984
    4. '```' → logprob: -9.502010345458984
    5. '<|end|>' → logprob: -10.502010345458984
    6. 'def' → logprob: -11.377010345458984
    7. '        
' → logprob: -11.377010345458984
    8. '	' → logprob: -11.877010345458984
    9. 'p' → logprob: -12.377010345458984
    10. '	   ' → logprob: -12.627010345458984

Token 2040: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0017695431597530842
    2. '       ' → logprob: -6.376769542694092
    3. ' print' → logprob: -10.00177001953125
    4. 'r' → logprob: -11.50177001953125
    5. 'p' → logprob: -12.12677001953125
    6. '	print' → logprob: -13.12677001953125
    7. '   ' → logprob: -13.25177001953125
    8. 'pr' → logprob: -13.37677001953125
    9. 'result' → logprob: -14.37677001953125
    10. 'd' → logprob: -16.12677001953125

Token 2041: '(ref' (ID: 27813)
  Prédit: '(ref'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ref' → logprob: -0.002645217813551426
    2. 'reflection' → logprob: -6.252645015716553
    3. '(pro' → logprob: -7.752645015716553
    4. 'ref' → logprob: -8.252645492553711
    5. 'Reflection' → logprob: -10.877645492553711
    6. 'projection' → logprob: -13.002645492553711
    7. '(' → logprob: -13.877645492553711
    8. '(rotation' → logprob: -14.002645492553711
    9. '(re' → logprob: -14.252645492553711
    10. ' reflection' → logprob: -14.627645492553711

Token 2042: 'lection' (ID: 1659)
  Prédit: 'lection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lection' → logprob: -0.0002831464516930282
    2. 'reflection' → logprob: -8.500283241271973
    3. 'ection' → logprob: -9.875283241271973
    4. '(' → logprob: -12.000283241271973
    5. 'lect' → logprob: -12.125283241271973
    6. 'rection' → logprob: -12.625283241271973
    7. 'le' → logprob: -13.000283241271973
    8. '#' → logprob: -13.375283241271973
    9. '[' → logprob: -13.500283241271973
    10. '``' → logprob: -13.625283241271973

Token 2043: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. '(line' → logprob: -16.500009536743164
    4. ' (' → logprob: -16.500009536743164
    5. ')' → logprob: -16.875009536743164
    6. '(
' → logprob: -17.000009536743164
    7. '(L' → logprob: -17.500009536743164
    8. '(ll' → logprob: -18.625009536743164
    9. '(

' → logprob: -20.000009536743164
    10. '(li' → logprob: -20.250009536743164

Token 2044: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003472633252386004
    2. '(l' → logprob: -8.250347137451172
    3. ',l' → logprob: -9.625347137451172
    4. ',p' → logprob: -11.500347137451172
    5. '(p' → logprob: -11.875347137451172
    6. ' ,' → logprob: -13.250347137451172
    7. '(' → logprob: -14.875347137451172
    8. ')' → logprob: -15.125347137451172
    9. ',
' → logprob: -15.500347137451172
    10. '   ' → logprob: -16.000347137451172

Token 2045: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00033546582562848926
    2. ' p' → logprob: -8.000335693359375
    3. ')p' → logprob: -18.875335693359375
    4. '(p' → logprob: -19.625335693359375
    5. '
' → logprob: -20.250335693359375
    6. ')' → logprob: -20.375335693359375
    7. '<p' → logprob: -20.625335693359375
    8. '	p' → logprob: -20.875335693359375
    9. 'py' → logprob: -21.250335693359375
    10. '[p' → logprob: -22.000335693359375

Token 2046: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002486476907506585
    2. '))' → logprob: -6.002486705780029
    3. '())' → logprob: -12.252486228942871
    4. ')
' → logprob: -12.377486228942871
    5. '       ' → logprob: -13.877486228942871
    6. '   ' → logprob: -15.752486228942871
    7. ')p' → logprob: -16.002487182617188
    8. ')

' → logprob: -16.002487182617188
    9. ' )' → logprob: -16.252487182617188
    10. ')))' → logprob: -16.252487182617188

Token 2047: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010349531657993793
    2. '   ' → logprob: -7.251034736633301
    3. 'return' → logprob: -8.6260347366333
    4. ' def' → logprob: -9.3760347366333
    5. 'c' → logprob: -10.7510347366333
    6. 'd' → logprob: -11.2510347366333
    7. '#' → logprob: -11.6260347366333
    8. ' ' → logprob: -12.2510347366333
    9. ' return' → logprob: -12.6260347366333
    10. 'x' → logprob: -13.1260347366333

Token 2048: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.22863705456256866
    2. 'main' → logprob: -1.6036370992660522
    3. 'is' → logprob: -6.853637218475342
    4. '__' → logprob: -6.978637218475342
    5. 'solve' → logprob: -7.853637218475342
    6. 'distance' → logprob: -8.228636741638184
    7. 'inter' → logprob: -9.478636741638184
    8. 'intersection' → logprob: -9.603636741638184
    9. 'rotate' → logprob: -9.853636741638184
    10. 'cross' → logprob: -10.353636741638184

Token 2049: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.664371848164592e-05
    2. 'def' → logprob: -11.125016212463379
    3. '(' → logprob: -14.375016212463379
    4. '()' → logprob: -14.625016212463379
    5. ' def' → logprob: -16.125017166137695
    6. '():' → logprob: -16.250017166137695
    7. '_def' → logprob: -16.375017166137695
    8. '_
' → logprob: -16.625017166137695
    9. ' _' → logprob: -16.750017166137695
    10. '```' → logprob: -16.875017166137695

Token 2050: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14610230922698975
    2. '_' → logprob: -2.7711024284362793
    3. '2' → logprob: -2.8961024284362793
    4. '3' → logprob: -4.271102428436279
    5. '4' → logprob: -6.521102428436279
    6. '0' → logprob: -6.771102428436279
    7. '5' → logprob: -7.396102428436279
    8. '6' → logprob: -8.146101951599121
    9. '9' → logprob: -8.646101951599121
    10. '7' → logprob: -8.896101951599121

Token 2051: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.35073378682136536
    2. 'A' → logprob: -1.225733757019043
    3. 'B' → logprob: -6.725733757019043
    4. 'D' → logprob: -7.350733757019043
    5. 'c' → logprob: -9.100733757019043
    6. 'E' → logprob: -9.350733757019043
    7. '0' → logprob: -9.725733757019043
    8. '():' → logprob: -9.975733757019043
    9. 'def' → logprob: -10.350733757019043
    10. 'a' → logprob: -10.475733757019043

Token 2052: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0002978048287332058
    2. '():
' → logprob: -8.125297546386719
    3. ' ():' → logprob: -13.500297546386719
    4. '()' → logprob: -15.125297546386719
    5. '():
' → logprob: -16.87529754638672
    6. 'def' → logprob: -17.00029754638672
    7. '():

' → logprob: -18.62529754638672
    8. '();' → logprob: -19.25029754638672
    9. '()>' → logprob: -19.50029754638672
    10. '()
' → logprob: -20.37529754638672

Token 2053: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004023069050163031
    2. 'p' → logprob: -5.75402307510376
    3. ' p' → logprob: -7.62902307510376
    4. 'def' → logprob: -8.629022598266602
    5. 'c' → logprob: -9.379022598266602
    6. ' c' → logprob: -10.754022598266602
    7. '(p' → logprob: -11.129022598266602
    8. 'pass' → logprob: -11.379022598266602
    9. ' def' → logprob: -11.754022598266602
    10. ' pass' → logprob: -11.754022598266602

Token 2054: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.027141785249114037
    2. '   ' → logprob: -4.027141571044922
    3. ' p' → logprob: -4.777141571044922
    4. 'def' → logprob: -8.402141571044922
    5. 'px' → logprob: -9.277141571044922
    6. 'print' → logprob: -9.902141571044922
    7. 'pass' → logprob: -9.902141571044922
    8. 'x' → logprob: -10.902141571044922
    9. 'r' → logprob: -11.027141571044922
    10. '	p' → logprob: -11.527141571044922

Token 2055: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004940562648698688
    2. 'x' → logprob: -8.000494003295898
    3. 'def' → logprob: -9.375494003295898
    4. 'r' → logprob: -10.875494003295898
    5. '#' → logprob: -11.250494003295898
    6. 't' → logprob: -11.375494003295898
    7. 'p' → logprob: -11.875494003295898
    8. 'a' → logprob: -12.250494003295898
    9. 'oint' → logprob: -13.125494003295898
    10. '2' → logprob: -13.250494003295898

Token 2056: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.286852345103398e-05
    2. ',' → logprob: -11.125042915344238
    3. 'y' → logprob: -11.250042915344238
    4. 'def' → logprob: -11.375042915344238
    5. '1' → logprob: -13.375042915344238
    6. '#' → logprob: -14.375042915344238
    7. '   ' → logprob: -14.750042915344238
    8. 'class' → logprob: -15.500042915344238
    9. '```' → logprob: -15.750042915344238
    10. '0' → logprob: -16.625041961669922

Token 2057: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.8961017202818766e-05
    2. ',p' → logprob: -9.750059127807617
    3. ' ,' → logprob: -14.750059127807617
    4. 'p' → logprob: -15.625059127807617
    5. ',
' → logprob: -17.375059127807617
    6. 'def' → logprob: -18.625059127807617
    7. ',user' → logprob: -19.000059127807617
    8. '=' → logprob: -19.000059127807617
    9. ' p' → logprob: -19.125059127807617
    10. '‌,' → logprob: -19.750059127807617

Token 2058: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07889143377542496
    2. ' p' → logprob: -2.5788915157318115
    3. '   ' → logprob: -13.45389175415039
    4. '    ' → logprob: -16.57889175415039
    5. '  ' → logprob: -16.57889175415039
    6. '<|end|>' → logprob: -16.95389175415039
    7. ' ' → logprob: -17.07889175415039
    8. 'py' → logprob: -17.70389175415039
    9. '<p' → logprob: -17.95389175415039
    10. ',' → logprob: -17.95389175415039

Token 2059: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4947888255119324
    2. 'y' → logprob: -1.1197888851165771
    3. 'x' → logprob: -2.869788885116577
    4. 'p' → logprob: -4.994788646697998
    5. 'py' → logprob: -7.869788646697998
    6. '```' → logprob: -11.244789123535156
    7. 'yx' → logprob: -11.494789123535156
    8. 'px' → logprob: -11.619789123535156
    9. '2' → logprob: -11.744789123535156
    10. 'oint' → logprob: -11.869789123535156

Token 2060: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.024716032668948174
    2. ',' → logprob: -3.8997161388397217
    3. 'p' → logprob: -5.524715900421143
    4. 'py' → logprob: -8.8997163772583
    5. ',y' → logprob: -10.8997163772583
    6. 'x' → logprob: -11.7747163772583
    7. 'def' → logprob: -12.3997163772583
    8. '   ' → logprob: -12.5247163772583
    9. ',p' → logprob: -12.8997163772583
    10. ' y' → logprob: -13.8997163772583

Token 2061: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016063073417171836
    2. ',p' → logprob: -8.750160217285156
    3. ' ,' → logprob: -13.750160217285156
    4. 'p' → logprob: -14.000160217285156
    5. ',
' → logprob: -15.875160217285156
    6. 'def' → logprob: -17.125160217285156
    7. '=' → logprob: -17.625160217285156
    8. '   ' → logprob: -18.000160217285156
    9. ',l' → logprob: -18.000160217285156
    10. '_,' → logprob: -18.250160217285156

Token 2062: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0028202086687088013
    2. ' p' → logprob: -5.877820014953613
    3. '   ' → logprob: -11.627820014953613
    4. 'px' → logprob: -12.627820014953613
    5. 'l' → logprob: -14.877820014953613
    6. '    ' → logprob: -15.002820014953613
    7. '  ' → logprob: -15.252820014953613
    8. ' ' → logprob: -15.377820014953613
    9. 'def' → logprob: -15.502820014953613
    10. 'a' → logprob: -15.627820014953613

Token 2063: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7022550106048584
    2. 'x' → logprob: -0.7022550106048584
    3. ',' → logprob: -5.2022552490234375
    4. 'p' → logprob: -5.7022552490234375
    5. '1' → logprob: -8.827255249023438
    6. 'y' → logprob: -11.202255249023438
    7. ',p' → logprob: -11.452255249023438
    8. '   ' → logprob: -12.077255249023438
    9. '```' → logprob: -12.202255249023438
    10. '#' → logprob: -12.202255249023438

Token 2064: 'x' (ID: 87)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018804390856530517
    2. ',p' → logprob: -8.625187873840332
    3. 'p' → logprob: -12.125187873840332
    4. ' ,' → logprob: -13.500187873840332
    5. 'x' → logprob: -14.125187873840332
    6. ',
' → logprob: -15.500187873840332
    7. 'def' → logprob: -16.12518882751465
    8. '=' → logprob: -16.50018882751465
    9. '_,' → logprob: -16.50018882751465
    10. '<|end|>' → logprob: -16.87518882751465

Token 2065: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ',p' → logprob: -9.625085830688477
    3. '=' → logprob: -11.375085830688477
    4. 'p' → logprob: -11.750085830688477
    5. ' ,' → logprob: -14.250085830688477
    6. ' =' → logprob: -16.375085830688477
    7. 'def' → logprob: -16.750085830688477
    8. '   ' → logprob: -17.250085830688477
    9. ',
' → logprob: -18.000085830688477
    10. ' p' → logprob: -18.250085830688477

Token 2066: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019288709154352546
    2. ' p' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.001928329467773
    4. ',' → logprob: -16.501928329467773
    5. '	p' → logprob: -18.126928329467773
    6. '<p' → logprob: -18.251928329467773
    7. ',p' → logprob: -18.376928329467773
    8. ' ' → logprob: -18.376928329467773
    9. 'py' → logprob: -19.126928329467773
    10. 'def' → logprob: -19.251928329467773

Token 2067: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10451747477054596
    2. 'p' → logprob: -2.3545174598693848
    3. ',' → logprob: -5.854517459869385
    4. 'py' → logprob: -7.104517459869385
    5. '2' → logprob: -7.729517459869385
    6. '.py' → logprob: -9.979517936706543
    7. '
' → logprob: -10.854517936706543
    8. '```' → logprob: -11.104517936706543
    9. ',y' → logprob: -11.354517936706543
    10. '1' → logprob: -11.479517936706543

Token 2068: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004647504829335958
    2. ',' → logprob: -8.25046443939209
    3. 'p' → logprob: -9.00046443939209
    4. 'x' → logprob: -10.25046443939209
    5. '   ' → logprob: -11.00046443939209
    6. ' y' → logprob: -11.37546443939209
    7. 'def' → logprob: -12.12546443939209
    8. '2' → logprob: -12.75046443939209
    9. ',y' → logprob: -13.12546443939209
    10. 'py' → logprob: -13.87546443939209

Token 2069: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16035716235637665
    2. ' =' → logprob: -1.910357117652893
    3. ',' → logprob: -9.535357475280762
    4. '   ' → logprob: -9.785357475280762
    5. '=
' → logprob: -13.660357475280762
    6. 'def' → logprob: -14.035357475280762
    7. ' ' → logprob: -14.660357475280762
    8. ')' → logprob: -14.785357475280762
    9. '    ' → logprob: -15.410357475280762
    10. '＝' → logprob: -15.660357475280762

Token 2070: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.008617172949016094
    2. ' map' → logprob: -4.758617401123047
    3. '   ' → logprob: -13.258617401123047
    4. '	map' → logprob: -15.008617401123047
    5. '(map' → logprob: -15.633617401123047
    6. 'list' → logprob: -15.758617401123047
    7. '    ' → logprob: -16.008617401123047
    8. ' ' → logprob: -16.758617401123047
    9. 'input' → logprob: -16.883617401123047
    10. 'def' → logprob: -17.383617401123047

Token 2071: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33418333530426025
    2. '(int' → logprob: -1.4591833353042603
    3. 'input' → logprob: -4.084183216094971
    4. '(input' → logprob: -4.459183216094971
    5. 'map' → logprob: -4.709183216094971
    6. 'p' → logprob: -4.834183216094971
    7. '(p' → logprob: -6.334183216094971
    8. '=int' → logprob: -6.584183216094971
    9. 'x' → logprob: -7.209183216094971
    10. '(map' → logprob: -7.834183216094971

Token 2072: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.48353782296180725
    2. ',input' → logprob: -1.6085377931594849
    3. '=input' → logprob: -1.9835377931594849
    4. ',' → logprob: -4.483537673950195
    5. '=int' → logprob: -4.608537673950195
    6. '(int' → logprob: -4.608537673950195
    7. 'input' → logprob: -5.108537673950195
    8. 'int' → logprob: -5.733537673950195
    9. '=' → logprob: -6.108537673950195
    10. ',int' → logprob: -6.608537673950195

Token 2073: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.951771421066951e-05
    2. ' input' → logprob: -10.625029563903809
    3. '(input' → logprob: -12.500029563903809
    4. 'int' → logprob: -14.000029563903809
    5. 'map' → logprob: -15.750029563903809
    6. 'import' → logprob: -16.125028610229492
    7. '   ' → logprob: -16.375028610229492
    8. '[input' → logprob: -17.625028610229492
    9. '<input' → logprob: -17.875028610229492
    10. 'output' → logprob: -17.875028610229492

Token 2074: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.000320565392030403
    2. '()' → logprob: -8.500320434570312
    3. '.split' → logprob: -9.875320434570312
    4. '()[' → logprob: -10.625320434570312
    5. 'split' → logprob: -11.375320434570312
    6. 's' → logprob: -11.500320434570312
    7. '().__' → logprob: -12.625320434570312
    8. '(split' → logprob: -13.000320434570312
    9. '(),' → logprob: -13.625320434570312
    10. '()(' → logprob: -13.875320434570312

Token 2075: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. 'spl' → logprob: -15.375
    3. 'strip' → logprob: -17.75
    4. ' split' → logprob: -18.25
    5. '(split' → logprob: -18.375
    6. 'skip' → logprob: -19.25
    7. '```' → logprob: -19.875
    8. 'read' → logprob: -20.125
    9. '.split' → logprob: -20.25
    10. 'sl' → logprob: -20.375

Token 2076: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.2849091589450836
    2. ')
' → logprob: -1.4099091291427612
    3. '())' → logprob: -6.659909248352051
    4. ')' → logprob: -7.159909248352051
    5. '()
' → logprob: -7.284909248352051
    6. '()' → logprob: -8.03490924835205
    7. '())
' → logprob: -8.40990924835205
    8. '   ' → logprob: -8.53490924835205
    9. ')
' → logprob: -8.53490924835205
    10. '(l' → logprob: -11.28490924835205

Token 2077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8161396384239197
    2. 'Q' → logprob: -1.0661396980285645
    3. 'l' → logprob: -1.5661396980285645
    4. 'p' → logprob: -5.6911396980285645
    5. 'q' → logprob: -7.1911396980285645
    6. 's' → logprob: -8.566139221191406
    7. 'def' → logprob: -8.691139221191406
    8. ' Q' → logprob: -10.066139221191406
    9. ' l' → logprob: -10.566139221191406
    10. 'L' → logprob: -10.566139221191406

Token 2078: ' p' (ID: 275)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.015876928344368935
    2. 'Q' → logprob: -5.015876770019531
    3. 'p' (adapté à ' p') → logprob: -5.140876770019531
    4. 's' → logprob: -6.140876770019531
    5. 'q' → logprob: -7.765876770019531
    6. '   ' → logprob: -8.265876770019531
    7. 'a' → logprob: -9.265876770019531
    8. 'c' → logprob: -9.640876770019531
    9. 'x' → logprob: -9.640876770019531
    10. 'r' → logprob: -9.640876770019531

Token 2079: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03856787085533142
    2. ' =' → logprob: -3.4135677814483643
    3. '3' → logprob: -6.413568019866943
    4. '=' → logprob: -7.163568019866943
    5. 'def' → logprob: -7.413568019866943
    6. 's' → logprob: -7.538568019866943
    7. 'x' → logprob: -7.788568019866943
    8. 'p' → logprob: -7.913568019866943
    9. '#' → logprob: -9.163567543029785
    10. 'a' → logprob: -9.538567543029785

Token 2080: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.46449562907218933
    2. 'y' → logprob: -1.2144956588745117
    3. ',' → logprob: -2.7144956588745117
    4. '1' → logprob: -5.339495658874512
    5. 'def' → logprob: -6.339495658874512
    6. '2' → logprob: -7.589495658874512
    7. 'p' → logprob: -7.589495658874512
    8. '   ' → logprob: -7.714495658874512
    9. ' =' → logprob: -8.839495658874512
    10. '#' → logprob: -9.714495658874512

Token 2081: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.15310683415737e-05
    2. ' Point' → logprob: -10.750021934509277
    3. 'p' → logprob: -18.37502098083496
    4. 'point' → logprob: -18.75002098083496
    5. '	Point' → logprob: -18.87502098083496
    6. '   ' → logprob: -19.62502098083496
    7. '_point' → logprob: -19.87502098083496
    8. '(Point' → logprob: -20.12502098083496
    9. '.Point' → logprob: -20.37502098083496
    10. '_Point' → logprob: -20.75002098083496

Token 2082: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00016742534353397787
    2. '(' → logprob: -8.875167846679688
    3. 'p' → logprob: -11.375167846679688
    4. '(
' → logprob: -11.875167846679688
    5. '#' → logprob: -12.625167846679688
    6. 'def' → logprob: -13.875167846679688
    7. '<|end|>' → logprob: -13.875167846679688
    8. ' (' → logprob: -14.250167846679688
    9. ',p' → logprob: -15.000167846679688
    10. '(P' → logprob: -15.125167846679688

Token 2083: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.26663053035736084
    2. '1' → logprob: -1.8916305303573608
    3. 'p' → logprob: -2.7666306495666504
    4. '(p' → logprob: -4.01663064956665
    5. 'x' → logprob: -6.26663064956665
    6. '(' → logprob: -8.266630172729492
    7. 'px' → logprob: -9.891630172729492
    8. '```' → logprob: -10.891630172729492
    9. ' p' → logprob: -11.391630172729492
    10. 'py' → logprob: -11.516630172729492

Token 2084: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008662551641464233
    2. '2' → logprob: -5.008662700653076
    3. '(p' → logprob: -6.633662700653076
    4. '1' → logprob: -7.758662700653076
    5. 'p' → logprob: -9.383662223815918
    6. ',' → logprob: -10.258662223815918
    7. '(' → logprob: -10.258662223815918
    8. 'y' → logprob: -10.758662223815918
    9. '```' → logprob: -12.008662223815918
    10. ')' → logprob: -12.258662223815918

Token 2085: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021929678041487932
    2. ',p' → logprob: -6.127192974090576
    3. 'p' → logprob: -12.377192497253418
    4. '<|end|>' → logprob: -13.377192497253418
    5. ' ,' → logprob: -13.877192497253418
    6. ',
' → logprob: -14.752192497253418
    7. '(p' → logprob: -15.002192497253418
    8. '<|end|>' → logprob: -16.127193450927734
    9. ' p' → logprob: -16.252193450927734
    10. ',P' → logprob: -16.752193450927734

Token 2086: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001702675479464233
    2. ' p' → logprob: -6.376702785491943
    3. '   ' → logprob: -15.876702308654785
    4. '<p' → logprob: -16.3767032623291
    5. 'py' → logprob: -16.7517032623291
    6. '	p' → logprob: -17.2517032623291
    7. ',' → logprob: -17.7517032623291
    8. ' ' → logprob: -17.8767032623291
    9. '-p' → logprob: -17.8767032623291
    10. '(p' → logprob: -18.1267032623291

Token 2087: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10036022216081619
    2. '1' → logprob: -2.350360155105591
    3. 'p' → logprob: -9.600359916687012
    4. 'py' → logprob: -9.850359916687012
    5. ',' → logprob: -11.475359916687012
    6. ',y' → logprob: -11.850359916687012
    7. 'x' → logprob: -12.475359916687012
    8. '```' → logprob: -13.350359916687012
    9. 'ay' → logprob: -13.600359916687012
    10. '2' → logprob: -13.850359916687012

Token 2088: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005069229518994689
    2. '1' → logprob: -8.000507354736328
    3. 'p' → logprob: -9.500507354736328
    4. ',' → logprob: -9.500507354736328
    5. 'py' → logprob: -11.250507354736328
    6. '   ' → logprob: -12.375507354736328
    7. ',y' → logprob: -12.875507354736328
    8. ' y' → logprob: -14.375507354736328
    9. 'x' → logprob: -14.500507354736328
    10. '```' → logprob: -15.375507354736328

Token 2089: ');' (ID: 2245)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012234434252604842
    2. ',p' → logprob: -6.751223564147949
    3. 'p' → logprob: -10.12622356414795
    4. '   ' → logprob: -11.75122356414795
    5. ' ,' → logprob: -13.12622356414795
    6. ')' → logprob: -13.12622356414795
    7. ',
' → logprob: -14.75122356414795
    8. ')
' → logprob: -15.50122356414795
    9. '(p' → logprob: -16.126222610473633
    10. ' p' → logprob: -16.126222610473633

Token 2090: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00021057340200059116
    2. ' p' → logprob: -8.500210762023926
    3. '   ' → logprob: -11.875210762023926
    4. '	p' → logprob: -17.87520980834961
    5. '
' → logprob: -18.25020980834961
    6. ' ' → logprob: -18.62520980834961
    7. '#' → logprob: -19.25020980834961
    8. '  ' → logprob: -19.50020980834961
    9. '_p' → logprob: -19.75020980834961
    10. '    
' → logprob: -19.75020980834961

Token 2091: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.292907877039397e-06
    2. '1' → logprob: -12.87500286102295
    3. 'r' → logprob: -15.62500286102295
    4. 'oint' → logprob: -15.75000286102295
    5. 'x' → logprob: -16.500003814697266
    6. '
' → logprob: -16.625003814697266
    7. '```' → logprob: -16.625003814697266
    8. '２' → logprob: -16.750003814697266
    9. '#' → logprob: -16.875003814697266
    10. 'print' → logprob: -17.000003814697266

Token 2092: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6441552042961121
    2. '=' → logprob: -0.7691552042961121
    3. ' =' → logprob: -5.144155025482178
    4. 'y' → logprob: -5.269155025482178
    5. 'x' → logprob: -8.519155502319336
    6. 'p' → logprob: -8.644155502319336
    7. ',p' → logprob: -10.394155502319336
    8. '=
' → logprob: -10.769155502319336
    9. ' ,' → logprob: -11.769155502319336
    10. ',y' → logprob: -11.769155502319336

Token 2093: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.8087270038668066e-05
    2. ' Point' → logprob: -10.500027656555176
    3. 'p' → logprob: -15.375027656555176
    4. '   ' → logprob: -16.125028610229492
    5. '	Point' → logprob: -16.125028610229492
    6. '.Point' → logprob: -17.875028610229492
    7. '_point' → logprob: -18.000028610229492
    8. '(Point' → logprob: -18.125028610229492
    9. '<Point' → logprob: -18.125028610229492
    10. '_Point' → logprob: -18.625028610229492

Token 2094: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0019348275382071733
    2. 'p' → logprob: -6.251935005187988
    3. '
' → logprob: -12.751935005187988
    4. '   ' → logprob: -13.501935005187988
    5. 'def' → logprob: -14.626935005187988
    6. ' p' → logprob: -14.626935005187988
    7. '(' → logprob: -15.001935005187988
    8. '(
' → logprob: -15.501935005187988
    9. ' ' → logprob: -16.001934051513672
    10. ' (' → logprob: -16.251934051513672

Token 2095: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4617256056226324e-05
    2. 'p' → logprob: -11.375014305114746
    3. '(p' → logprob: -13.750014305114746
    4. 'x' → logprob: -14.375014305114746
    5. '1' → logprob: -14.625014305114746
    6. '```' → logprob: -14.625014305114746
    7. '
' → logprob: -15.750014305114746
    8. ' p' → logprob: -16.000015258789062
    9. 'def' → logprob: -16.625015258789062
    10. 'class' → logprob: -17.000015258789062

Token 2096: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.055282801389694214
    2. '2' → logprob: -2.9302828311920166
    3. 'p' → logprob: -7.9302825927734375
    4. '(p' → logprob: -10.555282592773438
    5. 'y' → logprob: -11.555282592773438
    6. '(x' → logprob: -13.430282592773438
    7. '```' → logprob: -13.555282592773438
    8. '
' → logprob: -14.930282592773438
    9. '(' → logprob: -14.930282592773438
    10. 'py' → logprob: -15.180282592773438

Token 2097: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.046682268381118774
    2. ',' → logprob: -3.296682357788086
    3. '(p' → logprob: -5.046682357788086
    4. ',p' → logprob: -6.171682357788086
    5. ' p' → logprob: -10.671682357788086
    6. 'py' → logprob: -10.671682357788086
    7. '(' → logprob: -11.296682357788086
    8. '1' → logprob: -11.421682357788086
    9. 'y' → logprob: -12.421682357788086
    10. 'x' → logprob: -13.796682357788086

Token 2098: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.836499985889532e-05
    2. ' p' → logprob: -9.7500581741333
    3. '(p' → logprob: -17.500059127807617
    4. '   ' → logprob: -19.250059127807617
    5. '<p' → logprob: -19.750059127807617
    6. 'py' → logprob: -20.375059127807617
    7. '```' → logprob: -20.375059127807617
    8. '[p' → logprob: -20.500059127807617
    9. '	p' → logprob: -20.625059127807617
    10. ')p' → logprob: -20.750059127807617

Token 2099: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002130395034328103
    2. '1' → logprob: -6.377130508422852
    3. 'x' → logprob: -8.252130508422852
    4. '2' → logprob: -9.377130508422852
    5. 'p' → logprob: -10.377130508422852
    6. '<|end|>' → logprob: -10.877130508422852
    7. '3' → logprob: -12.377130508422852
    8. ' y' → logprob: -12.502130508422852
    9. '_y' → logprob: -12.752130508422852
    10. '	y' → logprob: -13.064630508422852

Token 2100: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001227276516146958
    2. 'x' → logprob: -9.375123023986816
    3. '1' → logprob: -10.375123023986816
    4. 'p' → logprob: -13.375123023986816
    5. ')' → logprob: -14.000123023986816
    6. ' y' → logprob: -14.000123023986816
    7. '
' → logprob: -14.125123023986816
    8. '   ' → logprob: -14.125123023986816
    9. 'z' → logprob: -14.625123023986816
    10. '2' → logprob: -15.000123023986816

Token 2101: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6443423628807068
    2. ')' → logprob: -0.7693423628807068
    3. '   ' → logprob: -5.144342422485352
    4. ');' → logprob: -5.769342422485352
    5. 'p' → logprob: -7.019342422485352
    6. ')
' → logprob: -7.269342422485352
    7. ')p' → logprob: -7.894342422485352
    8. 'l' → logprob: -8.394342422485352
    9. 's' → logprob: -9.019342422485352
    10. 'def' → logprob: -9.394342422485352

Token 2102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2614257335662842
    2. 'Q' → logprob: -1.7614257335662842
    3. 's' → logprob: -3.511425733566284
    4. 'l' → logprob: -3.886425733566284
    5. 'p' → logprob: -6.136425971984863
    6. 'q' → logprob: -6.386425971984863
    7. ' Q' → logprob: -6.386425971984863
    8. ' s' → logprob: -7.261425971984863
    9. ' l' → logprob: -7.761425971984863
    10. 'L' → logprob: -8.261425971984863

Token 2103: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.061378270387649536
    2. 'l' → logprob: -3.311378240585327
    3. '   ' → logprob: -4.436378479003906
    4. 'q' → logprob: -6.061378479003906
    5. 's' → logprob: -6.311378479003906
    6. 'a' → logprob: -6.686378479003906
    7. 'while' → logprob: -7.186378479003906
    8. 'p' → logprob: -7.311378479003906
    9. ' Q' → logprob: -7.436378479003906
    10. 'r' → logprob: -7.561378479003906

Token 2104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021479953080415726
    2. ' =' → logprob: -3.896479845046997
    3. '   ' → logprob: -7.021480083465576
    4. '=
' → logprob: -10.396479606628418
    5. '=int' → logprob: -12.146479606628418
    6. ',' → logprob: -13.271479606628418
    7. 's' → logprob: -13.521479606628418
    8. '=[]' → logprob: -13.646479606628418
    9. 'for' → logprob: -14.021479606628418
    10. '=query' → logprob: -14.396479606628418

Token 2105: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012356207298580557
    2. ' int' → logprob: -9.000123977661133
    3. '[int' → logprob: -16.875123977661133
    4. '(int' → logprob: -18.000123977661133
    5. '   ' → logprob: -19.750123977661133
    6. '=int' → logprob: -20.000123977661133
    7. '<int' → logprob: -20.125123977661133
    8. '0' → logprob: -20.750123977661133
    9. '
' → logprob: -21.500123977661133
    10. '	int' → logprob: -21.625123977661133

Token 2106: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4744550585746765
    2. 'input' → logprob: -0.9744550585746765
    3. '()' → logprob: -8.224454879760742
    4. ' input' → logprob: -9.974454879760742
    5. '[input' → logprob: -10.349454879760742
    6. '(
' → logprob: -11.224454879760742
    7. '=input' → logprob: -12.099454879760742
    8. 'for' → logprob: -12.349454879760742
    9. '```' → logprob: -13.099454879760742
    10. '(' → logprob: -13.849454879760742

Token 2107: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04886973276734352
    2. '()
' → logprob: -3.0488698482513428
    3. ')' → logprob: -8.923870086669922
    4. '())' → logprob: -9.048870086669922
    5. '())
' → logprob: -11.048870086669922
    6. '()
' → logprob: -11.298870086669922
    7. ')
' → logprob: -13.298870086669922
    8. '()\' → logprob: -14.673870086669922
    9. '   ' → logprob: -15.048870086669922
    10. '();' → logprob: -15.548870086669922

Token 2108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07021407037973404
    2. 'for' → logprob: -2.945214033126831
    3. 'Query' → logprob: -4.19521427154541
    4. ' for' → logprob: -9.32021427154541
    5. '	Query' → logprob: -11.07021427154541
    6. '	for' → logprob: -11.32021427154541
    7. 'Queries' → logprob: -11.94521427154541
    8. ' Query' → logprob: -12.57021427154541
    9. 'while' → logprob: -12.82021427154541
    10. 'For' → logprob: -12.82021427154541

Token 2109: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' (adapté à ' Query') → logprob: -0.07903255522251129
    2. 'for' → logprob: -2.5790326595306396
    3. '   ' → logprob: -9.579032897949219
    4. 'query' → logprob: -10.079032897949219
    5. ' Query' → logprob: -11.954032897949219
    6. 'queries' → logprob: -11.954032897949219
    7. 'Point' → logprob: -12.579032897949219
    8. 'points' → logprob: -12.579032897949219
    9. ' for' → logprob: -13.204032897949219
    10. 'Queries' → logprob: -13.329032897949219

Token 2110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10031180083751678
    2. ' =' → logprob: -2.350311756134033
    3. '   ' → logprob: -9.225312232971191
    4. '=
' → logprob: -12.850312232971191
    5. '=[]' → logprob: -13.600312232971191
    6. '=query' → logprob: -14.350312232971191
    7. '＝' → logprob: -14.475312232971191
    8. '=[]
' → logprob: -14.600312232971191
    9. '=[' → logprob: -14.850312232971191
    10. '=[
' → logprob: -15.850312232971191

Token 2111: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.02467125467956066
    2. '[' → logprob: -3.7746713161468506
    3. '[List' → logprob: -7.2746710777282715
    4. '[line' → logprob: -8.39967155456543
    5. '[int' → logprob: -8.64967155456543
    6. '[input' → logprob: -9.39967155456543
    7. '[len' → logprob: -10.02467155456543
    8. '[l' → logprob: -10.02467155456543
    9. '[t' → logprob: -10.89967155456543
    10. '[array' → logprob: -10.89967155456543

Token 2112: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.958325295476243e-05
    2. '[list' → logprob: -9.500079154968262
    3. ' list' → logprob: -12.625079154968262
    4. '[' → logprob: -14.375079154968262
    5. 'tuple' → logprob: -15.000079154968262
    6. '(list' → logprob: -15.375079154968262
    7. '[p' → logprob: -15.500079154968262
    8. ' [' → logprob: -17.750080108642578
    9. '
' → logprob: -17.750080108642578
    10. '	list' → logprob: -18.625080108642578

Token 2113: '(map' (ID: 16946)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.8166125416755676
    2. '(map' → logprob: -1.0666124820709229
    3. 'map' → logprob: -2.441612482070923
    4. 'list' → logprob: -2.816612482070923
    5. 'int' → logprob: -3.191612482070923
    6. '(int' → logprob: -3.691612482070923
    7. 'tuple' → logprob: -7.691612720489502
    8. '(tuple' → logprob: -8.066612243652344
    9. 'def' → logprob: -9.566612243652344
    10. '(lambda' → logprob: -9.691612243652344

Token 2114: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16034598648548126
    2. '(int' → logprob: -1.9103460311889648
    3. 'def' → logprob: -9.910346031188965
    4. '[int' → logprob: -10.535346031188965
    5. '=int' → logprob: -11.160346031188965
    6. '<int' → logprob: -11.410346031188965
    7. 'lambda' → logprob: -12.160346031188965
    8. ' int' → logprob: -12.660346031188965
    9. ',int' → logprob: -12.785346031188965
    10. '```' → logprob: -12.785346031188965

Token 2115: ',' (ID: 11)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1695948988199234
    2. '(int' → logprob: -1.9195948839187622
    3. 'input' → logprob: -5.669594764709473
    4. ',int' → logprob: -5.794594764709473
    5. '[int' → logprob: -7.544594764709473
    6. '<int' → logprob: -7.794594764709473
    7. '=int' → logprob: -8.044594764709473
    8. 'def' → logprob: -8.169594764709473
    9. '(lambda' → logprob: -8.419594764709473
    10. '(input' → logprob: -8.544594764709473

Token 2116: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001314295077463612
    2. 'int' → logprob: -9.000131607055664
    3. ' input' → logprob: -11.750131607055664
    4. '(input' → logprob: -18.125131607055664
    5. '<input' → logprob: -19.250131607055664
    6. ',input' → logprob: -19.875131607055664
    7. '=input' → logprob: -19.875131607055664
    8. '   ' → logprob: -20.500131607055664
    9. '[input' → logprob: -21.125131607055664
    10. 'import' → logprob: -21.375131607055664

Token 2117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3155052959918976
    2. '.split' → logprob: -1.3155052661895752
    3. ').' → logprob: -6.815505504608154
    4. 'split' → logprob: -7.940505504608154
    5. '```' → logprob: -8.690505027770996
    6. '__.' → logprob: -9.315505027770996
    7. '].' → logprob: -9.690505027770996
    8. '.' → logprob: -9.690505027770996
    9. '   ' → logprob: -9.815505027770996
    10. '()' → logprob: -9.940505027770996

Token 2118: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.431207682704553e-05
    2. 'range' → logprob: -9.875054359436035
    3. 'spl' → logprob: -14.375054359436035
    4. '_split' → logprob: -14.500054359436035
    5. '(split' → logprob: -14.500054359436035
    6. ' split' → logprob: -15.125054359436035
    7. 'input' → logprob: -15.875054359436035
    8. 'strip' → logprob: -15.875054359436035
    9. 'read' → logprob: -16.25005340576172
    10. '
' → logprob: -16.25005340576172

Token 2119: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00011343709047650918
    2. '()' → logprob: -10.125113487243652
    3. '())' → logprob: -10.375113487243652
    4. '))' → logprob: -10.375113487243652
    5. '()[' → logprob: -11.750113487243652
    6. '()
' → logprob: -13.875113487243652
    7. '()))
' → logprob: -14.000113487243652
    8. '(' → logprob: -15.000113487243652
    9. '())).' → logprob: -15.875113487243652
    10. '(range' → logprob: -16.000112533569336

Token 2120: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3500928282737732
    2. 'for' → logprob: -1.225092887878418
    3. ')' → logprob: -6.475092887878418
    4. '   ' → logprob: -10.350092887878418
    5. '	for' → logprob: -10.350092887878418
    6. '       ' → logprob: -10.600092887878418
    7. '()' → logprob: -12.475092887878418
    8. 'input' → logprob: -13.350092887878418
    9. '
' → logprob: -13.475092887878418
    10. '(range' → logprob: -13.600092887878418

Token 2121: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.225939872208983e-05
    2. '_range' → logprob: -10.750032424926758
    3. ' in' → logprob: -12.000032424926758
    4. ' range' → logprob: -12.875032424926758
    5. 'range' → logprob: -13.500032424926758
    6. 'in' → logprob: -14.875032424926758
    7. ' _' → logprob: -15.625032424926758
    8. '```' → logprob: -17.000032424926758
    9. '_=' → logprob: -17.250032424926758
    10. '_
' → logprob: -17.375032424926758

Token 2122: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03232470899820328
    2. ' range' → logprob: -3.53232479095459
    3. ' in' → logprob: -6.65732479095459
    4. 'in' → logprob: -6.90732479095459
    5. '_range' → logprob: -8.90732479095459
    6. '_' → logprob: -9.15732479095459
    7. '(range' → logprob: -10.03232479095459
    8. '	range' → logprob: -14.65732479095459
    9. ' _' → logprob: -15.15732479095459
    10. 'Q' → logprob: -16.282323837280273

Token 2123: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005347009282559156
    2. ' range' → logprob: -5.255346775054932
    3. '_' → logprob: -9.13034725189209
    4. '_range' → logprob: -12.38034725189209
    5. '(range' → logprob: -14.38034725189209
    6. '	range' → logprob: -15.75534725189209
    7. '_Q' → logprob: -17.880346298217773
    8. 'in' → logprob: -18.755346298217773
    9. '_=' → logprob: -18.755346298217773
    10. '_)' → logprob: -18.880346298217773

Token 2124: '(Q' (ID: 14437)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008001456968486309
    2. '_range' → logprob: -5.758001327514648
    3. ' range' → logprob: -5.758001327514648
    4. '_' → logprob: -6.758001327514648
    5. 'in' → logprob: -7.633001327514648
    6. '_Q' → logprob: -12.633001327514648
    7. '(range' → logprob: -12.883001327514648
    8. ' in' → logprob: -13.633001327514648
    9. 'Q' → logprob: -14.133001327514648
    10. '0' → logprob: -15.008001327514648

Token 2125: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.7392803430557251
    2. ')' → logprob: -1.364280343055725
    3. ')]
' → logprob: -1.364280343055725
    4. ')
' → logprob: -5.3642802238464355
    5. 'for' → logprob: -5.9892802238464355
    6. '   ' → logprob: -6.3642802238464355
    7. ')]
' → logprob: -7.8642802238464355
    8. '])' → logprob: -7.8642802238464355
    9. '):
' → logprob: -8.114280700683594
    10. ']' → logprob: -8.114280700683594

Token 2126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00426253117620945
    2. 'for' → logprob: -5.504262447357178
    3. ' for' → logprob: -8.629262924194336
    4. '```' → logprob: -12.629262924194336
    5. '	for' → logprob: -13.504262924194336
    6. '       ' → logprob: -15.254262924194336
    7. '``' → logprob: -16.254262924194336
    8. '    
' → logprob: -16.629262924194336
    9. '
' → logprob: -16.879262924194336
    10. '<|end|>' → logprob: -17.004262924194336

Token 2127: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.252206027507782
    2. '   ' → logprob: -1.5022060871124268
    3. ' for' → logprob: -9.002205848693848
    4. 'def' → logprob: -9.002205848693848
    5. '```' → logprob: -10.877205848693848
    6. '       ' → logprob: -12.502205848693848
    7. '	for' → logprob: -12.627205848693848
    8. '``' → logprob: -13.002205848693848
    9. '
' → logprob: -13.627205848693848
    10. '    
' → logprob: -15.252205848693848

Token 2128: ' px' (ID: 27003)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.11395080387592316
    2. 'qx' → logprob: -2.488950729370117
    3. ' px' → logprob: -3.863950729370117
    4. 'q' → logprob: -6.988950729370117
    5. 'x' → logprob: -6.988950729370117
    6. '   ' → logprob: -7.613950729370117
    7. ' q' → logprob: -7.863950729370117
    8. 'tx' → logprob: -7.988950729370117
    9. '(px' → logprob: -8.488950729370117
    10. 'cx' → logprob: -8.738950729370117

Token 2129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001085497424355708
    2. ',p' → logprob: -9.62510871887207
    3. ' ,' → logprob: -10.12510871887207
    4. 'p' → logprob: -14.37510871887207
    5. ',y' → logprob: -14.50010871887207
    6. '0' → logprob: -15.12510871887207
    7. '_,' → logprob: -15.25010871887207
    8. ',
' → logprob: -15.37510871887207
    9. 'in' → logprob: -15.87510871887207
    10. '1' → logprob: -16.62510871887207

Token 2130: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.20142152905464172
    2. ' py' → logprob: -1.7014214992523193
    3. '(py' → logprob: -12.326421737670898
    4. '_py' → logprob: -13.576421737670898
    5. '.py' → logprob: -13.701421737670898
    6. 'p' → logprob: -14.201421737670898
    7. 'px' → logprob: -15.201421737670898
    8. 'ply' → logprob: -15.951421737670898
    9. 'Py' → logprob: -16.8264217376709
    10. '   ' → logprob: -16.9514217376709

Token 2131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29092663526535034
    2. '       ' → logprob: -2.165926694869995
    3. ':
' → logprob: -2.790926694869995
    4. ',' → logprob: -2.915926694869995
    5. ':' → logprob: -4.290926456451416
    6. 'in' → logprob: -4.915926456451416
    7. ',p' → logprob: -7.540926456451416
    8. '   ' → logprob: -7.790926456451416
    9. '(p' → logprob: -10.040926933288574
    10. ' p' → logprob: -10.040926933288574

Token 2132: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.0021985520143061876
    2. ' Query' → logprob: -6.127198696136475
    3. 'Point' → logprob: -12.002198219299316
    4. '(Query' → logprob: -12.502198219299316
    5. '	Query' → logprob: -13.377198219299316
    6. '[' → logprob: -14.502198219299316
    7. '<Query' → logprob: -14.877198219299316
    8. '.Query' → logprob: -15.377198219299316
    9. '_Query' → logprob: -15.377198219299316
    10. 'Input' → logprob: -15.502198219299316

Token 2133: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.139272540807724
    2. ':' → logprob: -2.639272451400757
    3. ':
' → logprob: -3.014272451400757
    4. ',' → logprob: -5.639272689819336
    5. '<|end|>' → logprob: -5.639272689819336
    6. '):
' → logprob: -7.389272689819336
    7. '(p' → logprob: -7.514272689819336
    8. '():
' → logprob: -8.139272689819336
    9. 'p' → logprob: -8.514272689819336
    10. '   ' → logprob: -8.639272689819336

Token 2134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013273799559101462
    2. 'p' → logprob: -6.8763275146484375
    3. ':
' → logprob: -9.001327514648438
    4. '<|end|>' → logprob: -10.376327514648438
    5. '```' → logprob: -10.376327514648438
    6. ':' → logprob: -10.751327514648438
    7. ' p' → logprob: -10.751327514648438
    8. '#' → logprob: -11.251327514648438
    9. ',' → logprob: -11.626327514648438
    10. '):
' → logprob: -12.126327514648438

Token 2135: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.209629625082016
    2. '       ' → logprob: -1.7096296548843384
    3. ' p' → logprob: -4.834629535675049
    4. '
' → logprob: -8.834630012512207
    5. '```' → logprob: -10.834630012512207
    6. '	p' → logprob: -11.334630012512207
    7. '           ' → logprob: -11.709630012512207
    8. '   ' → logprob: -11.834630012512207
    9. '<|end|>' → logprob: -11.834630012512207
    10. '#' → logprob: -11.834630012512207

Token 2136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489503592252731
    2. '=' → logprob: -2.9298949241638184
    3. '=
' → logprob: -12.929895401000977
    4. ' =
' → logprob: -12.929895401000977
    5. '=p' → logprob: -13.179895401000977
    6. '   ' → logprob: -13.179895401000977
    7. '       ' → logprob: -13.429895401000977
    8. ',' → logprob: -14.679895401000977
    9. 's' → logprob: -14.804895401000977
    10. ' ' → logprob: -14.929895401000977

Token 2137: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.014166799373924732
    2. ' Point' → logprob: -4.264166831970215
    3. '(Point' → logprob: -13.264166831970215
    4. '	Point' → logprob: -14.014166831970215
    5. '.Point' → logprob: -14.764166831970215
    6. '_point' → logprob: -16.0141658782959
    7. '_Point' → logprob: -16.1391658782959
    8. '<Point' → logprob: -16.2641658782959
    9. 'p' → logprob: -17.1391658782959
    10. ' p' → logprob: -17.7641658782959

Token 2138: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -2.339278580620885e-06
    2. '(py' → logprob: -13.000001907348633
    3. '(cx' → logprob: -17.250001907348633
    4. '(p' → logprob: -18.000001907348633
    5. ':px' → logprob: -18.000001907348633
    6. '(mx' → logprob: -18.625001907348633
    7. '(
' → logprob: -18.750001907348633
    8. '(' → logprob: -18.750001907348633
    9. '(x' → logprob: -18.750001907348633
    10. '(pc' → logprob: -18.875001907348633

Token 2139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ',p' → logprob: -13.000004768371582
    3. ' ,' → logprob: -13.375004768371582
    4. '[' → logprob: -15.500004768371582
    5. '       ' → logprob: -15.625004768371582
    6. ',
' → logprob: -16.000003814697266
    7. 'p' → logprob: -16.125003814697266
    8. '<|end|>' → logprob: -16.750003814697266
    9. ')' → logprob: -17.000003814697266
    10. '(),' → logprob: -17.625003814697266

Token 2140: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0004046938265673816
    2. ' py' → logprob: -8.250404357910156
    3. 'p' → logprob: -9.500404357910156
    4. 'px' → logprob: -9.625404357910156
    5. 'ply' → logprob: -13.750404357910156
    6. 'pty' → logprob: -14.750404357910156
    7. '(py' → logprob: -14.750404357910156
    8. ' p' → logprob: -14.875404357910156
    9. '.py' → logprob: -16.125404357910156
    10. '_py' → logprob: -16.500404357910156

Token 2141: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011763454414904118
    2. ':
' → logprob: -5.386763572692871
    3. ')' → logprob: -6.011763572692871
    4. '):
' → logprob: -6.136763572692871
    5. ')
' → logprob: -6.261763572692871
    6. ',' → logprob: -8.636763572692871
    7. ':' → logprob: -9.011763572692871
    8. '):' → logprob: -9.761763572692871
    9. ' if' → logprob: -10.386763572692871
    10. '
' → logprob: -10.386763572692871

Token 2142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007104054093360901
    2. 'print' → logprob: -7.500710487365723
    3. '   ' → logprob: -10.500710487365723
    4. 'if' → logprob: -10.875710487365723
    5. '	' → logprob: -11.125710487365723
    6. '#' → logprob: -11.250710487365723
    7. '```' → logprob: -11.500710487365723
    8. '        
' → logprob: -11.750710487365723
    9. '           ' → logprob: -12.000710487365723
    10. '
' → logprob: -12.375710487365723

Token 2143: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5326362252235413
    2. '       ' → logprob: -0.9076362252235413
    3. ' print' → logprob: -4.7826361656188965
    4. '   ' → logprob: -7.2826361656188965
    5. '           ' → logprob: -9.407636642456055
    6. '	' → logprob: -9.907636642456055
    7. 'pr' → logprob: -10.032636642456055
    8. '	print' → logprob: -10.032636642456055
    9. 'p' → logprob: -10.407636642456055
    10. '
' → logprob: -11.157636642456055

Token 2144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009825152345001698
    2. '=' → logprob: -4.634825229644775
    3. '       ' → logprob: -10.134824752807617
    4. 's' → logprob: -11.259824752807617
    5. '   ' → logprob: -12.009824752807617
    6. ' =
' → logprob: -13.509824752807617
    7. '=[]' → logprob: -13.884824752807617
    8. '=[]
' → logprob: -14.009824752807617
    9. ',' → logprob: -14.134824752807617
    10. ')' → logprob: -14.134824752807617

Token 2145: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.052465736865997314
    2. 'cross' → logprob: -3.6774656772613525
    3. 't' → logprob: -4.927465915679932
    4. 'projection' → logprob: -4.927465915679932
    5. 'reflection' → logprob: -5.427465915679932
    6. 'is' → logprob: -6.052465915679932
    7. 'Line' → logprob: -6.927465915679932
    8. 'p' → logprob: -7.052465915679932
    9. 'Point' → logprob: -8.177465438842773
    10. 'abs' → logprob: -8.177465438842773

Token 2146: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.7954958821064793e-05
    2. 'cw' → logprob: -11.125018119812012
    3. 'p' → logprob: -13.625018119812012
    4. 'wp' → logprob: -13.750018119812012
    5. 'wc' → logprob: -15.125018119812012
    6. '
' → logprob: -16.125017166137695
    7. 'wv' → logprob: -16.750017166137695
    8. 'ｗ' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.000017166137695
    10. 'a' → logprob: -17.500017166137695

Token 2147: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00023727134976070374
    2. 'p' → logprob: -8.375237464904785
    3. '(' → logprob: -12.125237464904785
    4. '(l' → logprob: -14.250237464904785
    5. '(P' → logprob: -15.875237464904785
    6. '   ' → logprob: -16.37523651123047
    7. '(
' → logprob: -16.62523651123047
    8. '((' → logprob: -16.75023651123047
    9. ' p' → logprob: -16.75023651123047
    10. ' (' → logprob: -17.00023651123047

Token 2148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.740878164768219
    2. '(p' → logprob: -1.3658781051635742
    3. ',' → logprob: -1.8658781051635742
    4. 'p' → logprob: -2.365878105163574
    5. ',p' → logprob: -4.115878105163574
    6. '(' → logprob: -6.740878105163574
    7. 'a' → logprob: -6.865878105163574
    8. ')' → logprob: -7.740878105163574
    9. ')
' → logprob: -9.615878105163574
    10. '   ' → logprob: -10.365878105163574

Token 2149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001296662027016282
    2. ',p' → logprob: -6.751296520233154
    3. 'p' → logprob: -9.751296997070312
    4. '(p' → logprob: -10.126296997070312
    5. ',a' → logprob: -11.626296997070312
    6. 'a' → logprob: -11.876296997070312
    7. ',
' → logprob: -12.376296997070312
    8. ' ,' → logprob: -12.751296997070312
    9. ')' → logprob: -13.376296997070312
    10. '(' → logprob: -13.751296997070312

Token 2150: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00019018957391381264
    2. ' p' → logprob: -8.625189781188965
    3. 'Point' → logprob: -11.750189781188965
    4. '   ' → logprob: -13.750189781188965
    5. ' ' → logprob: -15.000189781188965
    6. '  ' → logprob: -15.375189781188965
    7. '<p' → logprob: -15.750189781188965
    8. 'point' → logprob: -15.812689781188965
    9. ' Point' → logprob: -16.06269073486328
    10. 'px' → logprob: -16.25019073486328

Token 2151: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01191825233399868
    2. 'p' → logprob: -4.636918067932129
    3. ',' → logprob: -6.511918067932129
    4. ',p' → logprob: -8.511918067932129
    5. 'x' → logprob: -8.636918067932129
    6. 'px' → logprob: -9.136918067932129
    7. 'py' → logprob: -9.386918067932129
    8. '(p' → logprob: -10.011918067932129
    9. 'a' → logprob: -10.761918067932129
    10. '(px' → logprob: -11.761918067932129

Token 2152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017970333283301443
    2. ',p' → logprob: -9.000179290771484
    3. ' ,' → logprob: -10.750179290771484
    4. 'p' → logprob: -10.750179290771484
    5. '(p' → logprob: -11.500179290771484
    6. '       ' → logprob: -14.125179290771484
    7. ',
' → logprob: -14.125179290771484
    8. '           ' → logprob: -14.125179290771484
    9. '   ' → logprob: -15.250179290771484
    10. '```' → logprob: -15.500179290771484

Token 2153: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001398929744027555
    2. ' p' → logprob: -8.875140190124512
    3. '(p' → logprob: -19.375139236450195
    4. ')' → logprob: -19.875139236450195
    5. ')p' → logprob: -20.500139236450195
    6. '	p' → logprob: -21.125139236450195
    7. '<p' → logprob: -21.625139236450195
    8. 'Point' → logprob: -21.625139236450195
    9. '       ' → logprob: -21.750139236450195
    10. '   ' → logprob: -21.875139236450195

Token 2154: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001224989420734346
    2. ')
' → logprob: -6.751224994659424
    3. ')#' → logprob: -11.251224517822266
    4. ')return' → logprob: -11.376224517822266
    5. '):' → logprob: -11.876224517822266
    6. ')[' → logprob: -12.376224517822266
    7. ')

' → logprob: -12.626224517822266
    8. ')`' → logprob: -13.001224517822266
    9. ')
' → logprob: -13.126224517822266
    10. ')(' → logprob: -13.501224517822266

Token 2155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013708343030884862
    2. '()
' → logprob: -8.251370429992676
    3. ':
' → logprob: -8.251370429992676
    4. '(' → logprob: -8.501370429992676
    5. '```' → logprob: -8.876370429992676
    6. ')
' → logprob: -9.126370429992676
    7. '
' → logprob: -9.376370429992676
    8. ')' → logprob: -9.501370429992676
    9. '()' → logprob: -9.626370429992676
    10. ':' → logprob: -10.126370429992676

Token 2156: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3876737952232361
    2. '       ' → logprob: -1.1376738548278809
    3. ' print' → logprob: -7.262673854827881
    4. 'if' (adapté à ' if') → logprob: -9.387673377990723
    5. '   ' → logprob: -11.887673377990723
    6. '           ' → logprob: -12.262673377990723
    7. ' if' → logprob: -13.012673377990723
    8. '
' → logprob: -13.387673377990723
    9. '```' → logprob: -14.637673377990723
    10. '        
' → logprob: -14.762673377990723

Token 2157: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.007612066809087992
    2. ' result' → logprob: -4.882612228393555
    3. 'abs' → logprob: -13.757612228393555
    4. '(result' → logprob: -13.882612228393555
    5. ' ' → logprob: -14.382612228393555
    6. '  ' → logprob: -14.507612228393555
    7. '
' → logprob: -14.632612228393555
    8. 'not' → logprob: -14.882612228393555
    9. '   ' → logprob: -15.007612228393555
    10. '	result' → logprob: -15.257612228393555

Token 2158: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6330099701881409
    2. ' ==' → logprob: -0.7580099701881409
    3. '=' → logprob: -9.133009910583496
    4. '>' → logprob: -9.383009910583496
    5. '==-' → logprob: -9.508009910583496
    6. '       ' → logprob: -10.258009910583496
    7. ' >' → logprob: -10.758009910583496
    8. '   ' → logprob: -11.133009910583496
    9. '!=' → logprob: -11.133009910583496
    10. ' =' → logprob: -11.133009910583496

Token 2159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09846587479114532
    2. '0' → logprob: -2.598465919494629
    3. ' ' → logprob: -4.098465919494629
    4. '+' → logprob: -5.973465919494629
    5. '-' → logprob: -8.598465919494629
    6. ' +' → logprob: -10.598465919494629
    7. '
' → logprob: -11.223465919494629
    8. '   ' → logprob: -11.473465919494629
    9. '  ' → logprob: -12.598465919494629
    10. ' -' → logprob: -12.973465919494629

Token 2160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08239620923995972
    2. '0' → logprob: -2.5823962688446045
    3. '+' → logprob: -5.957396030426025
    4. '-' → logprob: -7.207396030426025
    5. ' ' → logprob: -8.707396507263184
    6. '
' → logprob: -12.957396507263184
    7. '   ' → logprob: -13.832396507263184
    8. ' +' → logprob: -13.957396507263184
    9. '2' → logprob: -14.582396507263184
    10. '```' → logprob: -14.894896507263184

Token 2161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022340545430779457
    2. ':
' → logprob: -3.8973405361175537
    3. '           ' → logprob: -6.647340774536133
    4. '       ' → logprob: -7.897340774536133
    5. ':return' → logprob: -9.772340774536133
    6. ' or' → logprob: -11.272340774536133
    7. ' :' → logprob: -11.522340774536133
    8. '):' → logprob: -11.647340774536133
    9. '==' → logprob: -11.897340774536133
    10. ')' → logprob: -12.397340774536133

Token 2162: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014096579980105162
    2. ':' → logprob: -9.750141143798828
    3. '       ' → logprob: -10.875141143798828
    4. ',' → logprob: -11.375141143798828
    5. '          ' → logprob: -11.750141143798828
    6. '         ' → logprob: -12.000141143798828
    7. ' print' → logprob: -12.250141143798828
    8. ' or' → logprob: -12.500141143798828
    9. '	       ' → logprob: -12.625141143798828
    10. ' :' → logprob: -12.625141143798828

Token 2163: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00021105022460687906
    2. '           ' → logprob: -9.000210762023926
    3. ' print' → logprob: -9.375210762023926
    4. '               ' → logprob: -13.375210762023926
    5. '       ' → logprob: -14.125210762023926
    6. '	print' → logprob: -15.250210762023926
    7. '   ' → logprob: -15.500210762023926
    8. ' ' → logprob: -18.625211715698242
    9. '```' → logprob: -19.000211715698242
    10. 'Print' → logprob: -19.250211715698242

Token 2164: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1561141014099121
    2. '"' → logprob: -2.031114101409912
    3. '('' → logprob: -5.406114101409912
    4. '"C' → logprob: -6.031114101409912
    5. '"+"' → logprob: -6.781114101409912
    6. '(' → logprob: -6.906114101409912
    7. '("+' → logprob: -7.031114101409912
    8. '(+' → logprob: -7.031114101409912
    9. 'Counter' → logprob: -7.281114101409912
    10. '1' → logprob: -7.406114101409912

Token 2165: 'COUN' (ID: 107888)
  Prédit: 'COUN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COUN' → logprob: -0.055938392877578735
    2. '"' → logprob: -3.305938482284546
    3. '+' → logprob: -4.555938243865967
    4. '+"' → logprob: -5.680938243865967
    5. '1' → logprob: -6.180938243865967
    6. '"+"' → logprob: -7.930938243865967
    7. 'LEFT' → logprob: -8.055938720703125
    8. 'POS' → logprob: -8.555938720703125
    9. 'CC' → logprob: -9.055938720703125
    10. 'CLOCK' → logprob: -9.180938720703125

Token 2166: 'TER' (ID: 6147)
  Prédit: 'TER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TER' → logprob: -5.8961017202818766e-05
    2. 'T' → logprob: -10.500059127807617
    3. 'TE' → logprob: -11.125059127807617
    4. 'ER' → logprob: -11.625059127807617
    5. '
' → logprob: -12.875059127807617
    6. '```' → logprob: -13.000059127807617
    7. '``' → logprob: -14.000059127807617
    8. 'OUT' → logprob: -14.500059127807617
    9. 'NER' → logprob: -14.750059127807617
    10. '   ' → logprob: -15.125059127807617

Token 2167: '_CLOCK' (ID: 102378)
  Prédit: '_CLOCK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CLOCK' → logprob: -0.0040818434208631516
    2. 'CLOCK' → logprob: -5.504081726074219
    3. 'clock' → logprob: -14.254081726074219
    4. '   ' → logprob: -14.504081726074219
    5. '_COUNTER' → logprob: -14.504081726074219
    6. '_clock' → logprob: -14.629081726074219
    7. ' CLOCK' → logprob: -15.004081726074219
    8. '       ' → logprob: -15.504081726074219
    9. 'Clock' → logprob: -15.629081726074219
    10. '
' → logprob: -16.12908172607422

Token 2168: 'WISE' (ID: 38559)
  Prédit: 'CLOCK'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CLOCK' → logprob: -0.001992755103856325
    2. '_CLOCK' → logprob: -6.751992702484131
    3. 'WISE' → logprob: -7.126992702484131
    4. 'clock' → logprob: -11.626993179321289
    5. 'LOCK' → logprob: -11.751993179321289
    6. '```' → logprob: -13.751993179321289
    7. ' CLOCK' → logprob: -15.251993179321289
    8. 'Clock' → logprob: -15.376993179321289
    9. 'CLK' → logprob: -15.501993179321289
    10. '_clock' → logprob: -16.00199317932129

Token 2169: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.38784900307655334
    2. '")
' → logprob: -1.137848973274231
    3. '")
' → logprob: -7.012848854064941
    4. '()' → logprob: -10.512848854064941
    5. '(C' → logprob: -10.762848854064941
    6. '"' → logprob: -12.262848854064941
    7. ')' → logprob: -12.262848854064941
    8. '");' → logprob: -12.512848854064941
    9. ' ")' → logprob: -12.512848854064941
    10. ' ")
' → logprob: -13.012848854064941

Token 2170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016432562842965126
    2. ')' → logprob: -5.141432762145996
    3. '<|end|>' → logprob: -5.391432762145996
    4. 'elif' → logprob: -5.641432762145996
    5. ' elif' → logprob: -7.391432762145996
    6. '   ' → logprob: -7.766432762145996
    7. '()' → logprob: -7.891432762145996
    8. '           ' → logprob: -8.141432762145996
    9. '(' → logprob: -8.516432762145996
    10. '```' → logprob: -8.766432762145996

Token 2171: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09046471863985062
    2. 'elif' (adapté à ' elif') → logprob: -2.5904648303985596
    3. ' elif' → logprob: -4.4654645919799805
    4. '	elif' → logprob: -12.59046459197998
    5. '   ' → logprob: -12.96546459197998
    6. ' ' → logprob: -14.46546459197998
    7. '           ' → logprob: -14.46546459197998
    8. '      ' → logprob: -14.84046459197998
    9. '	' → logprob: -14.96546459197998
    10. '    ' → logprob: -15.21546459197998

Token 2172: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5759516358375549
    2. 'result' → logprob: -0.8259516358375549
    3. '(result' → logprob: -11.82595157623291
    4. '   ' → logprob: -13.82595157623291
    5. '-' → logprob: -14.07595157623291
    6. ' ' → logprob: -14.45095157623291
    7. '"' → logprob: -14.45095157623291
    8. '	result' → logprob: -14.70095157623291
    9. '[result' → logprob: -15.07595157623291
    10. '1' → logprob: -15.32595157623291

Token 2173: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42890462279319763
    2. ' ==' → logprob: -1.05390465259552
    3. '==-' → logprob: -8.80390453338623
    4. '===' → logprob: -11.55390453338623
    5. '```' → logprob: -11.92890453338623
    6. '==
' → logprob: -12.17890453338623
    7. '=="' → logprob: -12.17890453338623
    8. '()==' → logprob: -12.17890453338623
    9. '=' → logprob: -12.67890453338623
    10. '[' → logprob: -13.05390453338623

Token 2174: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015664035454392433
    2. '1' → logprob: -7.001566410064697
    3. '0' → logprob: -8.126565933227539
    4. ' -' → logprob: -8.376565933227539
    5. '2' → logprob: -9.251565933227539
    6. ' ' → logprob: -11.251565933227539
    7. '(-' → logprob: -12.001565933227539
    8. '"-' → logprob: -12.751565933227539
    9. '   ' → logprob: -13.001565933227539
    10. '
' → logprob: -13.251565933227539

Token 2175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.75
    4. '１' → logprob: -21.25
    5. '2' → logprob: -21.375
    6. '   ' → logprob: -21.5
    7. 'CLOCK' → logprob: -21.5
    8. 'COUN' → logprob: -21.75
    9. '0' → logprob: -21.875
    10. '
' → logprob: -22.625

Token 2176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6590304374694824
    2. '           ' → logprob: -0.9090304374694824
    3. ':
' → logprob: -2.5340304374694824
    4. ' :' → logprob: -9.28403091430664
    5. '       ' → logprob: -9.53403091430664
    6. '          ' → logprob: -9.78403091430664
    7. ',' → logprob: -9.90903091430664
    8. '               ' → logprob: -10.53403091430664
    9. '<|end|>' → logprob: -11.03403091430664
    10. '         ' → logprob: -11.40903091430664

Token 2177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.7385154428193346e-05
    2. 'print' → logprob: -10.75003719329834
    3. '               ' → logprob: -11.75003719329834
    4. '		' → logprob: -12.62503719329834
    5. '	       ' → logprob: -13.37503719329834
    6. ' print' → logprob: -13.62503719329834
    7. '          ' → logprob: -14.25003719329834
    8. '       ' → logprob: -14.37503719329834
    9. '```' → logprob: -16.000038146972656
    10. '            ' → logprob: -16.250038146972656

Token 2178: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.12864744663238525
    2. '           ' → logprob: -2.1286473274230957
    3. ' print' → logprob: -6.378647327423096
    4. '"' → logprob: -11.628647804260254
    5. '       ' → logprob: -12.878647804260254
    6. '		' → logprob: -12.878647804260254
    7. '               ' → logprob: -13.253647804260254
    8. '	       ' → logprob: -13.378647804260254
    9. '```' → logprob: -13.878647804260254
    10. '	print' → logprob: -14.003647804260254

Token 2179: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0015719952061772346
    2. '"C' → logprob: -6.751572132110596
    3. '"' → logprob: -7.876572132110596
    4. 'CLOCK' → logprob: -11.251571655273438
    5. '('' → logprob: -12.251571655273438
    6. '(C' → logprob: -13.626571655273438
    7. '(' → logprob: -13.751571655273438
    8. '"S' → logprob: -14.501571655273438
    9. '   ' → logprob: -15.126571655273438
    10. '(
' → logprob: -15.251571655273438

Token 2180: 'CLOCK' (ID: 181115)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.04977649450302124
    2. 'CLOCK' → logprob: -3.049776554107666
    3. 'C' → logprob: -6.924776554107666
    4. '"' → logprob: -9.049776077270508
    5. 'clock' → logprob: -10.674776077270508
    6. 'CW' → logprob: -10.924776077270508
    7. ''clock' → logprob: -11.049776077270508
    8. ''' → logprob: -11.799776077270508
    9. '`' → logprob: -12.174776077270508
    10. 'Clock' → logprob: -12.674776077270508

Token 2181: 'WISE' (ID: 38559)
  Prédit: 'WISE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WISE' → logprob: -0.0005144290626049042
    2. 'wise' → logprob: -7.625514507293701
    3. 'W' → logprob: -11.250514030456543
    4. 'Wise' → logprob: -11.625514030456543
    5. '```' → logprob: -12.875514030456543
    6. '_W' → logprob: -13.750514030456543
    7. '
' → logprob: -15.125514030456543
    8. '``' → logprob: -15.250514030456543
    9. ' wise' → logprob: -16.25051498413086
    10. 'WARD' → logprob: -17.00051498413086

Token 2182: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1254100203514099
    2. '")' → logprob: -3.1254100799560547
    3. '()' → logprob: -3.5004100799560547
    4. '")
' → logprob: -3.8754100799560547
    5. '"):
' → logprob: -3.8754100799560547
    6. '```' → logprob: -7.000410079956055
    7. ')' → logprob: -7.750410079956055
    8. '"):' → logprob: -8.000410079956055
    9. '   ' → logprob: -8.625410079956055
    10. '():
' → logprob: -9.250410079956055

Token 2183: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019335162360221148
    2. '```' → logprob: -6.376933574676514
    3. '           ' → logprob: -8.626933097839355
    4. 'elif' → logprob: -10.626933097839355
    5. ' elif' → logprob: -11.251933097839355
    6. '<|end|>' → logprob: -12.501933097839355
    7. '   ' → logprob: -13.126933097839355
    8. '               ' → logprob: -13.126933097839355
    9. 'else' → logprob: -13.376933097839355
    10. '``' → logprob: -13.751933097839355

Token 2184: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04150239750742912
    2. 'elif' (adapté à ' elif') → logprob: -3.4165024757385254
    3. '           ' → logprob: -5.041502475738525
    4. ' elif' → logprob: -7.416502475738525
    5. '```' → logprob: -7.666502475738525
    6. 'else' → logprob: -9.166501998901367
    7. '   ' → logprob: -9.916501998901367
    8. '               ' → logprob: -10.791501998901367
    9. ':
' → logprob: -11.041501998901367
    10. '	' → logprob: -11.166501998901367

Token 2185: ' result' (ID: 1534)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18505440652370453
    2. ' ' → logprob: -1.9350544214248657
    3. '2' → logprob: -3.810054302215576
    4. 'result' → logprob: -6.435054302215576
    5. ' result' → logprob: -7.560054302215576
    6. '1' → logprob: -8.935054779052734
    7. '    ' → logprob: -9.935054779052734
    8. '   ' → logprob: -10.685054779052734
    9. '  ' → logprob: -11.685054779052734
    10. '+' → logprob: -11.685054779052734

Token 2186: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6326459050178528
    2. '==' → logprob: -0.7576459050178528
    3. '()==' → logprob: -11.132645606994629
    4. '=' → logprob: -11.757645606994629
    5. '0' → logprob: -12.382645606994629
    6. '===' → logprob: -12.757645606994629
    7. ']==' → logprob: -13.007645606994629
    8. '(' → logprob: -13.257645606994629
    9. ')==' → logprob: -13.257645606994629
    10. '==-' → logprob: -13.382645606994629

Token 2187: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3758997321128845
    2. '0' → logprob: -1.2508997917175293
    3. ' ' → logprob: -3.6258997917175293
    4. '+' → logprob: -7.875899791717529
    5. ' +' → logprob: -10.000899314880371
    6. '   ' → logprob: -11.750899314880371
    7. '1' → logprob: -11.875899314880371
    8. '-' → logprob: -11.875899314880371
    9. '  ' → logprob: -13.250899314880371
    10. '3' → logprob: -13.250899314880371

Token 2188: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6969088912010193
    2. '2' → logprob: -0.6969088912010193
    3. ' ' → logprob: -5.821908950805664
    4. '+' → logprob: -7.321908950805664
    5. '-' → logprob: -9.446908950805664
    6. '1' → logprob: -10.321908950805664
    7. ' +' → logprob: -11.571908950805664
    8. '3' → logprob: -13.446908950805664
    9. '02' → logprob: -14.009408950805664
    10. '   ' → logprob: -14.071908950805664

Token 2189: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6600460410118103
    2. ':
' → logprob: -0.7850460410118103
    3. '           ' → logprob: -3.785046100616455
    4. '       ' → logprob: -5.535046100616455
    5. '   ' → logprob: -9.410045623779297
    6. '               ' → logprob: -9.535045623779297
    7. ',' → logprob: -9.785045623779297
    8. '          ' → logprob: -10.410045623779297
    9. '        ' → logprob: -10.535045623779297
    10. ' or' → logprob: -11.035045623779297

Token 2190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013239304535090923
    2. '       ' → logprob: -6.876323699951172
    3. '               ' → logprob: -9.001323699951172
    4. 'print' → logprob: -9.001323699951172
    5. ' print' → logprob: -11.126323699951172
    6. '```' → logprob: -11.376323699951172
    7. '	       ' → logprob: -11.626323699951172
    8. '   ' → logprob: -13.001323699951172
    9. '		' → logprob: -13.376323699951172
    10. '          ' → logprob: -13.876323699951172

Token 2191: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005596460308879614
    2. '           ' → logprob: -5.25559663772583
    3. '"' → logprob: -8.630596160888672
    4. ' print' → logprob: -8.755596160888672
    5. '       ' → logprob: -10.880596160888672
    6. '"C' → logprob: -13.130596160888672
    7. '```' → logprob: -13.255596160888672
    8. '               ' → logprob: -13.755596160888672
    9. '	print' → logprob: -14.005596160888672
    10. '   ' → logprob: -14.380596160888672

Token 2192: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00011486753646750003
    2. '(' → logprob: -9.625114440917969
    3. '"' → logprob: -10.500114440917969
    4. '"C' → logprob: -11.625114440917969
    5. '('' → logprob: -12.250114440917969
    6. '"O' → logprob: -13.500114440917969
    7. '"P' → logprob: -13.875114440917969
    8. '"D' → logprob: -14.125114440917969
    9. '"S' → logprob: -14.375114440917969
    10. '"A' → logprob: -14.625114440917969

Token 2193: 'ONLINE' (ID: 193356)
  Prédit: 'ONLINE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONLINE' → logprob: -0.14492571353912354
    2. '"' → logprob: -2.394925594329834
    3. 'ON' → logprob: -3.269925594329834
    4. 'BACK' → logprob: -5.644925594329834
    5. '"C' → logprob: -7.144925594329834
    6. ' ONLINE' → logprob: -8.019926071166992
    7. 'TO' → logprob: -8.644926071166992
    8. ''' → logprob: -8.894926071166992
    9. 'Online' → logprob: -9.019926071166992
    10. '
' → logprob: -9.519926071166992

Token 2194: '_BACK' (ID: 48735)
  Prédit: '_BACK'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_BACK' → logprob: -0.2857815623283386
    2. 'BACK' → logprob: -1.5357816219329834
    3. '_FRONT' → logprob: -3.4107816219329834
    4. '_B' → logprob: -9.660781860351562
    5. '_Back' → logprob: -9.660781860351562
    6. '```' → logprob: -9.910781860351562
    7. '_FORWARD' → logprob: -10.785781860351562
    8. 'FR' → logprob: -11.035781860351562
    9. 'Back' → logprob: -11.660781860351562
    10. ' BACK' → logprob: -12.035781860351562

Token 2195: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12227863818407059
    2. '")
' → logprob: -2.3722786903381348
    3. 'WARD' → logprob: -4.247278690338135
    4. '   ' → logprob: -5.747278690338135
    5. ')' → logprob: -6.247278690338135
    6. 'ward' → logprob: -6.872278690338135
    7. '```' → logprob: -7.122278690338135
    8. ')
' → logprob: -8.122278213500977
    9. '')' → logprob: -9.622278213500977
    10. '"' → logprob: -10.747278213500977

Token 2196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033835109788924456
    2. '           ' → logprob: -6.753383636474609
    3. ':
' → logprob: -7.128383636474609
    4. '```' → logprob: -7.503383636474609
    5. ':' → logprob: -7.753383636474609
    6. '               ' → logprob: -9.75338363647461
    7. '<|end|>' → logprob: -9.87838363647461
    8. '(' → logprob: -10.00338363647461
    9. '[' → logprob: -10.12838363647461
    10. '   ' → logprob: -10.12838363647461

Token 2197: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005779353086836636
    2. 'elif' (adapté à ' elif') → logprob: -8.375577926635742
    3. '<|end|>' → logprob: -9.000577926635742
    4. ' elif' → logprob: -9.250577926635742
    5. '```' → logprob: -10.125577926635742
    6. '   ' → logprob: -10.500577926635742
    7. '	' → logprob: -11.500577926635742
    8. 'else' → logprob: -11.750577926635742
    9. '           ' → logprob: -11.750577926635742
    10. ' ' → logprob: -12.500577926635742

Token 2198: ' result' (ID: 1534)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7007648944854736
    2. ' ' → logprob: -0.7007648944854736
    3. '0' → logprob: -5.7007646560668945
    4. ' -' → logprob: -5.9507646560668945
    5. '-' → logprob: -6.9507646560668945
    6. '   ' → logprob: -7.5757646560668945
    7. 'result' → logprob: -9.700764656066895
    8. ' result' → logprob: -9.950764656066895
    9. '  ' → logprob: -10.700764656066895
    10. '    ' → logprob: -11.450764656066895

Token 2199: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20146478712558746
    2. '==' → logprob: -1.7014647722244263
    3. ' =' → logprob: -11.701464653015137
    4. '=' → logprob: -11.826464653015137
    5. '()==' → logprob: -11.951464653015137
    6. '==-' → logprob: -11.951464653015137
    7. '===' → logprob: -12.701464653015137
    8. '```' → logprob: -12.826464653015137
    9. '[' → logprob: -12.951464653015137
    10. '==
' → logprob: -13.076464653015137

Token 2200: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7598156332969666
    2. '0' → logprob: -0.8848156332969666
    3. ' ' → logprob: -2.1348156929016113
    4. '-' → logprob: -6.884815692901611
    5. ' -' → logprob: -8.759815216064453
    6. '   ' → logprob: -13.009815216064453
    7. '2' → logprob: -13.509815216064453
    8. '#' → logprob: -13.634815216064453
    9. '3' → logprob: -13.884815216064453
    10. '```' → logprob: -14.134815216064453

Token 2201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6326538324356079
    2. '1' → logprob: -0.7576538324356079
    3. '
' → logprob: -10.882654190063477
    4. '0' → logprob: -11.820154190063477
    5. '-' → logprob: -12.007654190063477
    6. '3' → logprob: -12.257654190063477
    7. ' ' → logprob: -12.257654190063477
    8. '4' → logprob: -13.507654190063477
    9. 'return' → logprob: -14.257654190063477
    10. '１' → logprob: -14.507654190063477

Token 2202: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08527764678001404
    2. ':' → logprob: -3.085277557373047
    3. ':
' → logprob: -3.335277557373047
    4. '       ' → logprob: -8.585277557373047
    5. '		' → logprob: -9.585277557373047
    6. ',' → logprob: -10.335277557373047
    7. '   ' → logprob: -10.585277557373047
    8. '<|end|>' → logprob: -10.960277557373047
    9. '          ' → logprob: -11.085277557373047
    10. '	       ' → logprob: -11.460277557373047

Token 2203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010324534960091114
    2. '       ' → logprob: -7.75103235244751
    3. 'print' → logprob: -7.75103235244751
    4. '	       ' → logprob: -9.626032829284668
    5. ' print' → logprob: -10.626032829284668
    6. '               ' → logprob: -11.126032829284668
    7. '		' → logprob: -11.376032829284668
    8. '   ' → logprob: -11.376032829284668
    9. '	   ' → logprob: -11.501032829284668
    10. '          ' → logprob: -11.751032829284668

Token 2204: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0038885537069290876
    2. '           ' → logprob: -6.0038886070251465
    3. '       ' → logprob: -6.8788886070251465
    4. ' print' → logprob: -7.8788886070251465
    5. '   ' → logprob: -13.378888130187988
    6. '               ' → logprob: -14.128888130187988
    7. '	print' → logprob: -14.253888130187988
    8. '"' → logprob: -14.378888130187988
    9. '```' → logprob: -16.378889083862305
    10. ' ' → logprob: -16.378889083862305

Token 2205: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -13.750000953674316
    3. '"' → logprob: -16.125001907348633
    4. '(
' → logprob: -16.875001907348633
    5. '('' → logprob: -17.750001907348633
    6. ' ("' → logprob: -18.625001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '("\"' → logprob: -20.000001907348633
    9. '       ' → logprob: -20.375001907348633
    10. '("("' → logprob: -20.375001907348633

Token 2206: 'ONLINE' (ID: 193356)
  Prédit: 'ONLINE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ONLINE' → logprob: -0.47478732466697693
    2. '"' → logprob: -0.9747873544692993
    3. 'ON' → logprob: -7.34978723526001
    4. ''' → logprob: -10.599787712097168
    5. 'INLINE' → logprob: -11.224787712097168
    6. ' ONLINE' → logprob: -11.849787712097168
    7. '
' → logprob: -11.974787712097168
    8. 'OL' → logprob: -13.099787712097168
    9. 'ONTO' → logprob: -13.224787712097168
    10. 'Online' → logprob: -13.599787712097168

Token 2207: '_FRONT' (ID: 130295)
  Prédit: '_FRONT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FRONT' → logprob: -0.026342447847127914
    2. '_FORWARD' → logprob: -3.7763423919677734
    3. 'FR' → logprob: -6.526342391967773
    4. '_BACK' → logprob: -6.776342391967773
    5. '_FR' → logprob: -8.401342391967773
    6. '_B' → logprob: -9.026342391967773
    7. ' FRONT' → logprob: -10.401342391967773
    8. 'FOR' → logprob: -11.026342391967773
    9. '```' → logprob: -11.151342391967773
    10. 'BACK' → logprob: -11.276342391967773

Token 2208: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.09914969652891159
    2. '")' → logprob: -2.849149703979492
    3. '       ' → logprob: -3.474149703979492
    4. ')' → logprob: -5.849149703979492
    5. ')
' → logprob: -6.599149703979492
    6. ')")
' → logprob: -7.724149703979492
    7. '   ' → logprob: -7.974149703979492
    8. '```' → logprob: -8.724149703979492
    9. '"):
' → logprob: -9.224149703979492
    10. '()' → logprob: -9.349149703979492

Token 2209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01406994741410017
    2. '```' → logprob: -4.3890700340271
    3. '<|end|>' → logprob: -7.3890700340271
    4. '   ' → logprob: -7.6390700340271
    5. 'else' → logprob: -9.389069557189941
    6. '(' → logprob: -9.389069557189941
    7. '``' → logprob: -9.889069557189941
    8. '()' → logprob: -9.889069557189941
    9. '	' → logprob: -10.139069557189941
    10. '           ' → logprob: -10.389069557189941

Token 2210: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.017997397109866142
    2. '       ' → logprob: -4.1429972648620605
    3. ' else' → logprob: -6.2679972648620605
    4. '	else' → logprob: -10.392997741699219
    5. 'elif' → logprob: -10.892997741699219
    6. '	' → logprob: -12.267997741699219
    7. '   ' → logprob: -12.642997741699219
    8. ':
' → logprob: -13.392997741699219
    9. '<|end|>' → logprob: -13.392997741699219
    10. '```' → logprob: -14.017997741699219

Token 2211: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5199370384216309
    2. ':
' → logprob: -1.1449370384216309
    3. '       ' → logprob: -3.144937038421631
    4. '           ' → logprob: -3.394937038421631
    5. '():
' → logprob: -4.894937038421631
    6. '(' → logprob: -6.894937038421631
    7. '():' → logprob: -7.519937038421631
    8. ' :' → logprob: -8.144937515258789
    9. ' :
' → logprob: -8.644937515258789
    10. '()' → logprob: -8.769937515258789

Token 2212: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18049868941307068
    2. '           ' → logprob: -1.805498719215393
    3. '(' → logprob: -7.6804986000061035
    4. '   ' → logprob: -9.805499076843262
    5. 'print' → logprob: -9.805499076843262
    6. '               ' → logprob: -9.930499076843262
    7. '("' → logprob: -10.305499076843262
    8. '"' → logprob: -10.555499076843262
    9. '	       ' → logprob: -10.805499076843262
    10. '(
' → logprob: -11.055499076843262

Token 2213: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1299678087234497
    2. '       ' → logprob: -2.12996768951416
    3. ' print' → logprob: -6.37996768951416
    4. '           ' → logprob: -6.62996768951416
    5. '```' → logprob: -11.50496768951416
    6. '   ' → logprob: -12.87996768951416
    7. '               ' → logprob: -13.00496768951416
    8. '	print' → logprob: -13.37996768951416
    9. '	       ' → logprob: -14.12996768951416
    10. '(print' → logprob: -14.37996768951416

Token 2214: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0002678920282050967
    2. '(' → logprob: -8.25026798248291
    3. '"' → logprob: -12.12526798248291
    4. '(
' → logprob: -14.12526798248291
    5. '('' → logprob: -15.12526798248291
    6. '("("' → logprob: -16.000267028808594
    7. ' ("' → logprob: -16.875267028808594
    8. '("(' → logprob: -18.250267028808594
    9. '"O' → logprob: -18.625267028808594
    10. '("="' → logprob: -18.625267028808594

Token 2215: 'ON' (ID: 975)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000803076196461916
    2. 'ON' → logprob: -7.250802993774414
    3. 'ONLINE' → logprob: -9.625802993774414
    4. ''' → logprob: -11.500802993774414
    5. '"""' → logprob: -12.750802993774414
    6. 'on' → logprob: -12.875802993774414
    7. '_ON' → logprob: -13.000802993774414
    8. '"AT' → logprob: -13.500802993774414
    9. '"O' → logprob: -14.000802993774414
    10. 'On' → logprob: -14.125802993774414

Token 2216: '_SEG' (ID: 135738)
  Prédit: '_LINE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LINE' → logprob: -0.2587840259075165
    2. 'LINE' → logprob: -1.5087840557098389
    3. '_SEG' → logprob: -5.25878381729126
    4. 'LIN' → logprob: -7.88378381729126
    5. '")' → logprob: -8.008784294128418
    6. 'THE' → logprob: -9.383784294128418
    7. '")
' → logprob: -9.383784294128418
    8. '   ' → logprob: -9.633784294128418
    9. '_THE' → logprob: -9.758784294128418
    10. '```' → logprob: -9.758784294128418

Token 2217: 'MENT' (ID: 9640)
  Prédit: 'MENT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MENT' → logprob: -0.0009570781840011477
    2. 'EMENT' → logprob: -7.125957012176514
    3. '```' → logprob: -10.000957489013672
    4. '   ' → logprob: -10.375957489013672
    5. 'メント' → logprob: -10.625957489013672
    6. 'AMENT' → logprob: -11.125957489013672
    7. 'мент' → logprob: -11.625957489013672
    8. 'IMENT' → logprob: -12.000957489013672
    9. '``' → logprob: -12.625957489013672
    10. 'ment' → logprob: -12.875957489013672

Token 2218: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00034833617974072695
    2. ')")' → logprob: -8.250348091125488
    3. ')' → logprob: -10.000348091125488
    4. '")
' → logprob: -10.125348091125488
    5. '")
' → logprob: -14.625348091125488
    6. '}")' → logprob: -15.000348091125488
    7. '()' → logprob: -15.375348091125488
    8. ')")
' → logprob: -15.375348091125488
    9. '(p' → logprob: -16.125349044799805
    10. '')' → logprob: -16.875349044799805

Token 2219: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20802205801010132
    2. 'def' → logprob: -1.708022117614746
    3. 'return' → logprob: -5.083022117614746
    4. ' return' → logprob: -8.708022117614746
    5. '```' → logprob: -8.958022117614746
    6. ' def' → logprob: -10.083022117614746
    7. '
' → logprob: -10.833022117614746
    8. '#' → logprob: -12.333022117614746
    9. 'r' → logprob: -12.458022117614746
    10. '``' → logprob: -12.583022117614746

Token 2220: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.0547952763736248
    2. '__' → logprob: -3.429795265197754
    3. 'main' → logprob: -4.429795265197754
    4. 'if' → logprob: -5.054795265197754
    5. 'def' → logprob: -6.054795265197754
    6. 'validate' → logprob: -9.679795265197754
    7. '___' → logprob: -9.804795265197754
    8. ' __' → logprob: -10.429795265197754
    9. ' verify' → logprob: -10.429795265197754
    10. '_verify' → logprob: -10.554795265197754

Token 2221: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012018841691315174
    2. '():' → logprob: -5.13701868057251
    3. 'def' → logprob: -5.38701868057251
    4. '():
' → logprob: -6.88701868057251
    5. '()' → logprob: -8.387019157409668
    6. '1' → logprob: -9.137019157409668
    7. '4' → logprob: -10.012019157409668
    8. '3' → logprob: -11.387019157409668
    9. '2' → logprob: -11.387019157409668
    10. '(' → logprob: -11.637019157409668

Token 2222: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025299808010458946
    2. '_' → logprob: -4.150300025939941
    3. '2' → logprob: -4.775300025939941
    4. 'def' → logprob: -8.025300025939941
    5. '3' → logprob: -8.150300025939941
    6. '4' → logprob: -9.650300025939941
    7. '(' → logprob: -10.150300025939941
    8. '
' → logprob: -11.150300025939941
    9. '```' → logprob: -12.212800025939941
    10. '__' → logprob: -12.525300025939941

Token 2223: 'A' (ID: 32)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.44949227571487427
    2. '():
' → logprob: -1.1994922161102295
    3. 'C' → logprob: -2.9494922161102295
    4. 'def' → logprob: -4.824492454528809
    5. 'c' → logprob: -8.324492454528809
    6. '_c' → logprob: -10.824492454528809
    7. '_' → logprob: -11.074492454528809
    8. '3' → logprob: -11.949492454528809
    9. '()' → logprob: -12.574492454528809
    10. '_C' → logprob: -12.699492454528809

Token 2224: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20143400132656097
    2. '():
' → logprob: -1.7014340162277222
    3. '():
' → logprob: -11.451434135437012
    4. 'def' → logprob: -11.576434135437012
    5. '():

' → logprob: -14.201434135437012
    6. '()' → logprob: -17.701433181762695
    7. ' ():' → logprob: -19.201433181762695
    8. '()):
' → logprob: -19.201433181762695
    9. ' def' → logprob: -19.576433181762695
    10. '(' → logprob: -19.951433181762695

Token 2225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02090911939740181
    2. 'p' → logprob: -4.020909309387207
    3. 'pass' → logprob: -6.770909309387207
    4. ' p' → logprob: -7.270909309387207
    5. 'def' → logprob: -7.645909309387207
    6. ' pass' → logprob: -9.020909309387207
    7. 'c' → logprob: -9.270909309387207
    8. 's' → logprob: -9.770909309387207
    9. 'r' → logprob: -10.395909309387207
    10. '#' → logprob: -10.645909309387207

Token 2226: ' Q' (ID: 1486)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.20586644113063812
    2. 'c' → logprob: -1.8308664560317993
    3. '   ' → logprob: -4.33086633682251
    4. 'r' → logprob: -5.83086633682251
    5. 'def' → logprob: -5.83086633682251
    6. 'pass' → logprob: -5.83086633682251
    7. 'for' → logprob: -6.70586633682251
    8. 's' → logprob: -7.20586633682251
    9. 'x' → logprob: -7.70586633682251
    10. 'a' → logprob: -8.080866813659668

Token 2227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02473916858434677
    2. '=' → logprob: -3.8997392654418945
    3. '():' → logprob: -6.1497392654418945
    4. '   ' → logprob: -7.3997392654418945
    5. '():
' → logprob: -7.3997392654418945
    6. 'def' → logprob: -8.149739265441895
    7. '()' → logprob: -8.399739265441895
    8. ':' → logprob: -8.399739265441895
    9. ':
' → logprob: -10.774739265441895
    10. ' =
' → logprob: -10.899739265441895

Token 2228: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015090317465364933
    2. ' int' → logprob: -6.501509189605713
    3. '   ' → logprob: -12.251508712768555
    4. 'input' → logprob: -14.126508712768555
    5. '[int' → logprob: -14.876508712768555
    6. '(int' → logprob: -15.251508712768555
    7. '  ' → logprob: -15.751508712768555
    8. '
' → logprob: -16.001508712768555
    9. '    ' → logprob: -16.251508712768555
    10. '	int' → logprob: -16.751508712768555

Token 2229: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.31343311071395874
    2. 'input' → logprob: -1.3134331703186035
    3. '(
' → logprob: -9.813432693481445
    4. 'def' → logprob: -10.188432693481445
    5. '()' → logprob: -11.063432693481445
    6. ' input' → logprob: -11.063432693481445
    7. '=input' → logprob: -11.063432693481445
    8. '()
' → logprob: -11.563432693481445
    9. '
' → logprob: -11.563432693481445
    10. 'import' → logprob: -12.438432693481445

Token 2230: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.11733464151620865
    2. '()' → logprob: -2.3673346042633057
    3. '())' → logprob: -4.117334842681885
    4. '()
' → logprob: -7.992334842681885
    5. ')' → logprob: -8.867334365844727
    6. ')
' → logprob: -9.117334365844727
    7. '())
' → logprob: -9.992334365844727
    8. '():' → logprob: -10.867334365844727
    9. '():
' → logprob: -10.992334365844727
    10. '   ' → logprob: -11.117334365844727

Token 2231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009792806580662727
    2. 'for' → logprob: -4.634792804718018
    3. ' for' → logprob: -10.384793281555176
    4. '	for' → logprob: -12.884793281555176
    5. 'def' → logprob: -13.384793281555176
    6. 'Query' → logprob: -14.509793281555176
    7. '```' → logprob: -14.884793281555176
    8. '
' → logprob: -15.384793281555176
    9. 'while' → logprob: -15.634793281555176
    10. 'import' → logprob: -16.50979232788086

Token 2232: ' Query' (ID: 18574)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008630522526800632
    2. '   ' → logprob: -4.758630752563477
    3. ' for' → logprob: -11.258630752563477
    4. '
' → logprob: -13.383630752563477
    5. '	for' → logprob: -14.383630752563477
    6. 'while' → logprob: -14.383630752563477
    7. '```' → logprob: -15.883630752563477
    8. 'import' → logprob: -16.008630752563477
    9. 'from' → logprob: -16.633630752563477
    10. 'Query' (adapté à ' Query') → logprob: -17.383630752563477

Token 2233: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6945845484733582
    2. ' =' → logprob: -0.6945845484733582
    3. '   ' → logprob: -7.444584369659424
    4. ':' → logprob: -8.319584846496582
    5. '=[]' → logprob: -8.319584846496582
    6. 'for' → logprob: -9.444584846496582
    7. '=
' → logprob: -9.694584846496582
    8. 's' → logprob: -10.194584846496582
    9. '=[]
' → logprob: -10.319584846496582
    10. ' for' → logprob: -10.694584846496582

Token 2234: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.014997385442256927
    2. '[' → logprob: -4.514997482299805
    3. '[input' → logprob: -5.889997482299805
    4. '[List' → logprob: -7.264997482299805
    5. '[int' → logprob: -8.389997482299805
    6. ' [' → logprob: -9.389997482299805
    7. '[line' → logprob: -9.514997482299805
    8. '[array' → logprob: -10.514997482299805
    9. '   ' → logprob: -10.764997482299805
    10. '[len' → logprob: -11.889997482299805

Token 2235: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -2.8921695047756657e-05
    2. 'tuple' → logprob: -11.000028610229492
    3. '[list' → logprob: -12.125028610229492
    4. '
' → logprob: -13.125028610229492
    5. ' list' → logprob: -13.375028610229492
    6. 'Point' → logprob: -13.625028610229492
    7. '(list' → logprob: -14.125028610229492
    8. 'input' → logprob: -14.875028610229492
    9. '[' → logprob: -15.500028610229492
    10. 'line' → logprob: -15.625028610229492

Token 2236: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00034142236108891666
    2. 'map' → logprob: -8.000341415405273
    3. '(input' → logprob: -12.875341415405273
    4. '(range' → logprob: -13.875341415405273
    5. '(int' → logprob: -14.000341415405273
    6. '	map' → logprob: -14.625341415405273
    7. ' map' → logprob: -15.000341415405273
    8. ',map' → logprob: -15.375341415405273
    9. 'import' → logprob: -16.125341415405273
    10. '(
' → logprob: -16.250341415405273

Token 2237: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.252013236284256
    2. '(int' → logprob: -1.5020132064819336
    3. '[int' → logprob: -10.127013206481934
    4. '=int' → logprob: -11.002013206481934
    5. 'input' → logprob: -11.752013206481934
    6. '```' → logprob: -12.002013206481934
    7. '<int' → logprob: -12.252013206481934
    8. ',int' → logprob: -12.752013206481934
    9. ']int' → logprob: -13.502013206481934
    10. ' int' → logprob: -13.627013206481934

Token 2238: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.0853147506713867
    2. ',input' → logprob: -1.2103147506713867
    3. '(input' → logprob: -2.2103147506713867
    4. ',int' → logprob: -2.4603147506713867
    5. ',' → logprob: -2.4603147506713867
    6. 'input' → logprob: -3.4603147506713867
    7. '=input' → logprob: -3.8353147506713867
    8. 'int' → logprob: -4.335314750671387
    9. '=int' → logprob: -4.710314750671387
    10. 'in' → logprob: -6.835314750671387

Token 2239: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.580929347255733e-05
    2. 'int' → logprob: -11.750016212463379
    3. ' input' → logprob: -11.750016212463379
    4. 'lambda' → logprob: -19.750015258789062
    5. '(input' → logprob: -20.125015258789062
    6. '<input' → logprob: -20.375015258789062
    7. 'import' → logprob: -21.750015258789062
    8. ',input' → logprob: -22.000015258789062
    9. 'sys' → logprob: -22.125015258789062
    10. '
' → logprob: -22.125015258789062

Token 2240: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001205893131555058
    2. '()' → logprob: -9.125120162963867
    3. '()[' → logprob: -12.250120162963867
    4. '()
' → logprob: -13.500120162963867
    5. '()))' → logprob: -13.750120162963867
    6. '().
' → logprob: -13.875120162963867
    7. '.split' → logprob: -13.875120162963867
    8. '.' → logprob: -14.000120162963867
    9. '())' → logprob: -15.250120162963867
    10. '().__' → logprob: -15.250120162963867

Token 2241: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.935296834039036e-06
    2. 'input' → logprob: -12.87500286102295
    3. ' split' → logprob: -15.12500286102295
    4. 'strip' → logprob: -17.375003814697266
    5. '
' → logprob: -17.750003814697266
    6. 'skip' → logprob: -17.875003814697266
    7. ')' → logprob: -17.875003814697266
    8. 'spl' → logprob: -18.875003814697266
    9. '(split' → logprob: -18.875003814697266
    10. 'range' → logprob: -19.625003814697266

Token 2242: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0002762326330412179
    2. '())' → logprob: -9.000276565551758
    3. '()' → logprob: -9.250276565551758
    4. '))' → logprob: -10.375276565551758
    5. '()[' → logprob: -11.250276565551758
    6. '()))
' → logprob: -11.875276565551758
    7. '()
' → logprob: -13.375276565551758
    8. '   ' → logprob: -14.250276565551758
    9. '()),' → logprob: -14.250276565551758
    10. '().' → logprob: -14.375276565551758

Token 2243: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23662856221199036
    2. ' for' → logprob: -2.111628532409668
    3. 'for' → logprob: -2.861628532409668
    4. '   ' → logprob: -3.486628532409668
    5. 'def' → logprob: -6.736628532409668
    6. '()
' → logprob: -8.736628532409668
    7. '	for' → logprob: -8.736628532409668
    8. '(' → logprob: -9.736628532409668
    9. '       ' → logprob: -9.861628532409668
    10. '
' → logprob: -10.361628532409668

Token 2244: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00020938136731274426
    2. '_range' → logprob: -8.50020980834961
    3. ' _' → logprob: -13.12520980834961
    4. 'range' → logprob: -13.37520980834961
    5. '_in' → logprob: -14.00020980834961
    6. '_
' → logprob: -14.00020980834961
    7. ' range' → logprob: -15.50020980834961
    8. ' in' → logprob: -16.37520980834961
    9. '_i' → logprob: -16.62520980834961
    10. '_=' → logprob: -17.12520980834961

Token 2245: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005023968406021595
    2. ' range' → logprob: -8.125502586364746
    3. '_range' → logprob: -9.000502586364746
    4. '_' → logprob: -9.875502586364746
    5. 'in' → logprob: -10.625502586364746
    6. ' in' → logprob: -12.375502586364746
    7. '(range' → logprob: -13.000502586364746
    8. '	range' → logprob: -15.000502586364746
    9. '_in' → logprob: -16.25050163269043
    10. '_=' → logprob: -16.75050163269043

Token 2246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004452083958312869
    2. ' range' → logprob: -7.750445365905762
    3. '_range' → logprob: -11.625445365905762
    4. '_' → logprob: -12.125445365905762
    5. '_Q' → logprob: -16.750444412231445
    6. '(range' → logprob: -16.875444412231445
    7. 'in' → logprob: -17.375444412231445
    8. '	range' → logprob: -17.375444412231445
    9. '
' → logprob: -17.750444412231445
    10. 'r' → logprob: -18.375444412231445

Token 2247: '(Q' (ID: 14437)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.12695404887199402
    2. '(Q' → logprob: -2.1269540786743164
    3. 'range' → logprob: -11.126954078674316
    4. ' Q' → logprob: -12.501954078674316
    5. '   ' → logprob: -13.376954078674316
    6. '	Q' → logprob: -13.376954078674316
    7. '
' → logprob: -13.626954078674316
    8. '(' → logprob: -13.751954078674316
    9. ',Q' → logprob: -14.376954078674316
    10. 'int' → logprob: -14.376954078674316

Token 2248: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.06561540812253952
    2. ')]' → logprob: -3.31561541557312
    3. ']
' → logprob: -4.815615177154541
    4. '()]
' → logprob: -4.940615177154541
    5. ')
' → logprob: -5.190615177154541
    6. ')' → logprob: -5.440615177154541
    7. '   ' → logprob: -6.690615177154541
    8. ']' → logprob: -8.1906156539917
    9. ')]
' → logprob: -8.5656156539917
    10. '()]' → logprob: -9.4406156539917

Token 2249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005379960872232914
    2. 'for' → logprob: -5.255380153656006
    3. 'def' → logprob: -9.130379676818848
    4. '```' → logprob: -10.755379676818848
    5. ' for' → logprob: -12.130379676818848
    6. 'a' → logprob: -12.505379676818848
    7. '       ' → logprob: -13.505379676818848
    8. 's' → logprob: -13.630379676818848
    9. '	for' → logprob: -13.880379676818848
    10. '``' → logprob: -14.380379676818848

Token 2250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029790988191962242
    2. '   ' → logprob: -3.5297908782958984
    3. ' for' → logprob: -10.279790878295898
    4. '	for' → logprob: -13.279790878295898
    5. '```' → logprob: -13.404790878295898
    6. 's' → logprob: -13.779790878295898
    7. 'def' → logprob: -14.279790878295898
    8. '``' → logprob: -15.279790878295898
    9. 'results' → logprob: -15.529790878295898
    10. 'p' → logprob: -15.904790878295898

Token 2251: ' p' (ID: 275)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.952438235282898
    2. 'p' → logprob: -1.077438235282898
    3. '_' → logprob: -2.2024383544921875
    4. '_p' → logprob: -3.3274383544921875
    5. 'qx' → logprob: -3.7024383544921875
    6. '_px' → logprob: -3.8274383544921875
    7. '_q' → logprob: -4.3274383544921875
    8. 'q' → logprob: -4.4524383544921875
    9. 'a' → logprob: -4.5774383544921875
    10. 's' → logprob: -4.9524383544921875

Token 2252: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036929550115019083
    2. '1' → logprob: -5.753693103790283
    3. 'tx' → logprob: -8.253692626953125
    4. ' in' → logprob: -9.253692626953125
    5. 'in' → logprob: -10.378692626953125
    6. 'idx' → logprob: -11.003692626953125
    7. 'lx' → logprob: -11.503692626953125
    8. 'px' → logprob: -11.628692626953125
    9. 'sx' → logprob: -11.628692626953125
    10. 'oints' → logprob: -11.628692626953125

Token 2253: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001498314319178462
    2. ' in' → logprob: -7.251498222351074
    3. 'in' → logprob: -7.876498222351074
    4. 'idx' → logprob: -8.626498222351074
    5. 'ix' → logprob: -10.251498222351074
    6. 'inx' → logprob: -10.501498222351074
    7. 'index' → logprob: -10.501498222351074
    8. '_idx' → logprob: -10.751498222351074
    9. 'p' → logprob: -10.876498222351074
    10. ',' → logprob: -11.251498222351074

Token 2254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001330360071733594
    2. ',p' → logprob: -6.626330375671387
    3. ' ,' → logprob: -12.626330375671387
    4. 'p' → logprob: -14.126330375671387
    5. ' p' → logprob: -15.501330375671387
    6. ',line' → logprob: -17.12632942199707
    7. ',y' → logprob: -17.25132942199707
    8. ',x' → logprob: -17.62632942199707
    9. ',q' → logprob: -17.62632942199707
    10. ',
' → logprob: -18.12632942199707

Token 2255: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001702675479464233
    2. ' p' → logprob: -6.376702785491943
    3. ' ' → logprob: -16.0017032623291
    4. '   ' → logprob: -16.3767032623291
    5. '  ' → logprob: -17.3142032623291
    6. '<|end|>' → logprob: -17.3142032623291
    7. 'py' → logprob: -17.4392032623291
    8. 'import' → logprob: -17.6892032623291
    9. '...' → logprob: -17.8767032623291
    10. ',' → logprob: -17.9392032623291

Token 2256: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006247292272746563
    2. 'y' → logprob: -5.631247520446777
    3. 'x' → logprob: -6.131247520446777
    4. '1' → logprob: -8.256247520446777
    5. 'p' → logprob: -8.631247520446777
    6. 'py' → logprob: -10.631247520446777
    7. 'px' → logprob: -13.006247520446777
    8. 'a' → logprob: -14.506247520446777
    9. '```' → logprob: -14.506247520446777
    10. 'z' → logprob: -14.756247520446777

Token 2257: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001777960715116933
    2. '0' → logprob: -9.375177383422852
    3. 'x' → logprob: -10.000177383422852
    4. ',' → logprob: -10.250177383422852
    5. ',y' → logprob: -12.375177383422852
    6. 'p' → logprob: -12.500177383422852
    7. '1' → logprob: -13.125177383422852
    8. ' y' → logprob: -14.250177383422852
    9. 'py' → logprob: -14.875177383422852
    10. '_y' → logprob: -15.000177383422852

Token 2258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023071514442563057
    2. ',p' → logprob: -8.75023078918457
    3. 'p' → logprob: -9.87523078918457
    4. ' ,' → logprob: -11.00023078918457
    5. '_,' → logprob: -14.25023078918457
    6. 's' → logprob: -14.37523078918457
    7. '   ' → logprob: -14.37523078918457
    8. 'def' → logprob: -14.87523078918457
    9. ' p' → logprob: -15.37523078918457
    10. '#' → logprob: -15.37523078918457

Token 2259: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017893016338348389
    2. 'px' → logprob: -7.626789093017578
    3. 'r' → logprob: -8.376789093017578
    4. 'q' → logprob: -8.501789093017578
    5. ' p' → logprob: -9.001789093017578
    6. '   ' → logprob: -9.001789093017578
    7. 'v' → logprob: -9.001789093017578
    8. 'a' → logprob: -9.126789093017578
    9. 'c' → logprob: -9.251789093017578
    10. 'd' → logprob: -9.626789093017578

Token 2260: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011973964050412178
    2. '1' → logprob: -4.761973857879639
    3. 'x' → logprob: -5.886973857879639
    4. 'p' → logprob: -8.136974334716797
    5. ',' → logprob: -8.261974334716797
    6. '2' → logprob: -11.386974334716797
    7. '```' → logprob: -11.761974334716797
    8. ' ' → logprob: -13.886974334716797
    9. 'y' → logprob: -14.011974334716797
    10. 'a' → logprob: -14.136974334716797

Token 2261: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.1689596148207784e-05
    2. ',' → logprob: -9.875051498413086
    3. 'y' → logprob: -16.250051498413086
    4. ',x' → logprob: -17.125051498413086
    5. 'p' → logprob: -17.375051498413086
    6. '```' → logprob: -18.125051498413086
    7. ',p' → logprob: -18.375051498413086
    8. 's' → logprob: -19.125051498413086
    9. '_,' → logprob: -19.250051498413086
    10. ' ,' → logprob: -19.250051498413086

Token 2262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020699729793705046
    2. ',p' → logprob: -8.50020694732666
    3. ' ,' → logprob: -13.25020694732666
    4. 'p' → logprob: -13.37520694732666
    5. '_,' → logprob: -16.250207901000977
    6. ' p' → logprob: -18.625207901000977
    7. ',y' → logprob: -19.375207901000977
    8. ',user' → logprob: -19.375207901000977
    9. '   ' → logprob: -19.500207901000977
    10. ',
' → logprob: -19.750207901000977

Token 2263: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.000627014203928411
    2. ' p' → logprob: -7.375627040863037
    3. '<|end|>' → logprob: -14.875626564025879
    4. '<|end|>' → logprob: -16.250627517700195
    5. ',' → logprob: -17.000627517700195
    6. '<p' → logprob: -18.125627517700195
    7. ' ' → logprob: -18.250627517700195
    8. '   ' → logprob: -18.500627517700195
    9. '...' → logprob: -18.813127517700195
    10. '	p' → logprob: -19.000627517700195

Token 2264: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6080673933029175
    2. '1' → logprob: -0.8580673933029175
    3. 'p' → logprob: -3.983067512512207
    4. '<|end|>' → logprob: -4.358067512512207
    5. '   ' → logprob: -10.483067512512207
    6. '```' → logprob: -10.608067512512207
    7. '0' → logprob: -10.733067512512207
    8. 'py' → logprob: -10.858067512512207
    9. '<|end|>' → logprob: -11.108067512512207
    10. ' ' → logprob: -11.733067512512207

Token 2265: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0008170120418071747
    2. ',' → logprob: -7.250816822052002
    3. 'p' → logprob: -9.25081729888916
    4. 's' → logprob: -13.00081729888916
    5. '   ' → logprob: -13.00081729888916
    6. '<|end|>' → logprob: -13.25081729888916
    7. 'py' → logprob: -13.37581729888916
    8. ',y' → logprob: -13.62581729888916
    9. ' y' → logprob: -14.00081729888916
    10. '1' → logprob: -15.37581729888916

Token 2266: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014466643333435059
    2. ',p' → logprob: -6.626446723937988
    3. ' ,' → logprob: -9.501446723937988
    4. ' in' → logprob: -10.626446723937988
    5. 'p' → logprob: -11.001446723937988
    6. 'in' → logprob: -13.001446723937988
    7. '   ' → logprob: -14.251446723937988
    8. ' p' → logprob: -14.251446723937988
    9. ',s' → logprob: -15.251446723937988
    10. ',x' → logprob: -15.251446723937988

Token 2267: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.015955299139022827
    2. ' p' → logprob: -4.390955448150635
    3. '   ' → logprob: -6.640955448150635
    4. 'c' → logprob: -7.265955448150635
    5. 's' → logprob: -7.390955448150635
    6. 'q' → logprob: -7.765955448150635
    7. 'px' → logprob: -9.390954971313477
    8. 'r' → logprob: -9.640954971313477
    9. 'x' → logprob: -10.140954971313477
    10. ' s' → logprob: -10.140954971313477

Token 2268: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003610878484323621
    2. '2' → logprob: -5.628611087799072
    3. '1' → logprob: -12.253610610961914
    4. '[' → logprob: -13.003610610961914
    5. ' ' → logprob: -14.003610610961914
    6. '```' → logprob: -14.003610610961914
    7. 'p' → logprob: -14.753610610961914
    8. 'x' → logprob: -14.878610610961914
    9. 's' → logprob: -15.378610610961914
    10. 'def' → logprob: -15.628610610961914

Token 2269: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06231418251991272
    2. ',' → logprob: -2.81231427192688
    3. ',x' → logprob: -8.4373140335083
    4. ',p' → logprob: -9.6873140335083
    5. '0' → logprob: -9.8123140335083
    6. 'px' → logprob: -12.3123140335083
    7. 'p' → logprob: -12.4373140335083
    8. ',int' → logprob: -14.4373140335083
    9. '_,' → logprob: -14.4373140335083
    10. ' ,' → logprob: -14.5623140335083

Token 2270: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003187339985743165
    2. ',p' → logprob: -5.75318717956543
    3. ' ,' → logprob: -11.75318717956543
    4. 'p' → logprob: -13.75318717956543
    5. '_,' → logprob: -16.00318717956543
    6. ',y' → logprob: -16.00318717956543
    7. 'in' → logprob: -16.12818717956543
    8. ',
' → logprob: -16.87818717956543
    9. '<|end|>' → logprob: -17.00318717956543
    10. ',user' → logprob: -17.12818717956543

Token 2271: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0021852378267794847
    2. ' p' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.252185821533203
    4. ' ' → logprob: -17.002185821533203
    5. '  ' → logprob: -19.127185821533203
    6. '	p' → logprob: -19.127185821533203
    7. '    ' → logprob: -19.252185821533203
    8. '<|end|>' → logprob: -19.377185821533203
    9. ''p' → logprob: -20.064685821533203
    10. ',' → logprob: -20.314685821533203

Token 2272: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7342533469200134
    2. '2' → logprob: -0.7342533469200134
    3. 'p' → logprob: -3.234253406524658
    4. '<|end|>' → logprob: -7.234253406524658
    5. 'y' → logprob: -8.9842529296875
    6. '<|end|>' → logprob: -12.2342529296875
    7. ' ' → logprob: -12.8592529296875
    8. '```' → logprob: -12.9842529296875
    9. ' p' → logprob: -13.1092529296875
    10. 'py' → logprob: -13.2342529296875

Token 2273: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003959547728300095
    2. '2' → logprob: -5.628959655761719
    3. '<|end|>' → logprob: -8.253959655761719
    4. ',' → logprob: -9.753959655761719
    5. '   ' → logprob: -11.503959655761719
    6. '<|end|>' → logprob: -11.628959655761719
    7. 'p' → logprob: -12.253959655761719
    8. ' y' → logprob: -12.503959655761719
    9. '1' → logprob: -13.003959655761719
    10. '...' → logprob: -13.003959655761719

Token 2274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08293420076370239
    2. ' in' → logprob: -2.9579341411590576
    3. 'in' → logprob: -3.8329341411590576
    4. ',p' → logprob: -5.332934379577637
    5. '   ' → logprob: -7.332934379577637
    6. ' ,' → logprob: -7.957934379577637
    7. '       ' → logprob: -9.832934379577637
    8. 'p' → logprob: -10.707934379577637
    9. ',in' → logprob: -10.707934379577637
    10. ',x' → logprob: -10.957934379577637

Token 2275: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10108485817909241
    2. ' p' → logprob: -2.3510849475860596
    3. '   ' → logprob: -7.3510847091674805
    4. '       ' → logprob: -9.22608470916748
    5. '0' → logprob: -10.22608470916748
    6. '    ' → logprob: -10.72608470916748
    7. 'px' → logprob: -10.97608470916748
    8. ',' → logprob: -11.47608470916748
    9. 'def' → logprob: -11.60108470916748
    10. ' ' → logprob: -12.66358470916748

Token 2276: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8670179997570813e-05
    2. '1' → logprob: -11.375019073486328
    3. 'p' → logprob: -12.875019073486328
    4. '0' → logprob: -13.500019073486328
    5. 'x' → logprob: -13.625019073486328
    6. 'px' → logprob: -14.500019073486328
    7. ',' → logprob: -14.875019073486328
    8. '```' → logprob: -15.000019073486328
    9. 'py' → logprob: -15.750019073486328
    10. 'z' → logprob: -16.250019073486328

Token 2277: 'x' (ID: 87)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16057007014751434
    2. 'y' → logprob: -2.5355701446533203
    3. 'x' → logprob: -2.9105701446533203
    4. 'py' → logprob: -5.41057014465332
    5. 'p' → logprob: -5.91057014465332
    6. ',p' → logprob: -6.16057014465332
    7. ',y' → logprob: -6.41057014465332
    8. '0' → logprob: -7.16057014465332
    9. 'px' → logprob: -7.53557014465332
    10. '_,' → logprob: -7.66057014465332

Token 2278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024888573680073023
    2. ',p' → logprob: -6.00248908996582
    3. ' ,' → logprob: -11.37748908996582
    4. 'p' → logprob: -14.37748908996582
    5. ',line' → logprob: -15.37748908996582
    6. ',
' → logprob: -15.87748908996582
    7. ',s' → logprob: -16.12748908996582
    8. ',q' → logprob: -16.12748908996582
    9. ',int' → logprob: -16.62748908996582
    10. '_,' → logprob: -16.75248908996582

Token 2279: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029750604182481766
    2. ' p' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.90475082397461
    4. '   ' → logprob: -17.65475082397461
    5. '    ' → logprob: -18.15475082397461
    6. '<|end|>' → logprob: -18.77975082397461
    7. '  ' → logprob: -19.09225082397461
    8. '
' → logprob: -19.27975082397461
    9. ''p' → logprob: -19.34225082397461
    10. '	p' → logprob: -19.34225082397461

Token 2280: '3' (ID: 18)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10355369001626968
    2. '3' → logprob: -2.3535537719726562
    3. '1' → logprob: -6.353553771972656
    4. '<|end|>' → logprob: -7.103553771972656
    5. '2' → logprob: -7.853553771972656
    6. 'x' → logprob: -9.103553771972656
    7. '```' → logprob: -9.603553771972656
    8. '0' → logprob: -9.728553771972656
    9. 'z' → logprob: -10.103553771972656
    10. 'py' → logprob: -11.353553771972656

Token 2281: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002262663561850786
    2. ',' → logprob: -6.877262592315674
    3. 'py' → logprob: -7.127262592315674
    4. 'x' → logprob: -8.377263069152832
    5. ' y' → logprob: -9.877263069152832
    6. 'p' → logprob: -10.002263069152832
    7. ',y' → logprob: -11.127263069152832
    8. '3' → logprob: -11.377263069152832
    9. '4' → logprob: -11.377263069152832
    10. '1' → logprob: -11.377263069152832

Token 2282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05293620005249977
    2. ',' → logprob: -3.427936315536499
    3. 'in' → logprob: -4.42793607711792
    4. '   ' → logprob: -5.17793607711792
    5. ':
' → logprob: -7.30293607711792
    6. ':' → logprob: -8.052936553955078
    7. '=' → logprob: -9.177936553955078
    8. 'p' → logprob: -9.427936553955078
    9. '       ' → logprob: -9.552936553955078
    10. ' =' → logprob: -10.302936553955078

Token 2283: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.00012094692647224292
    2. ' Query' → logprob: -9.125121116638184
    3. '[' → logprob: -11.625121116638184
    4. 'Input' → logprob: -13.250121116638184
    5. 'input' → logprob: -14.750121116638184
    6. '	Query' → logprob: -15.375121116638184
    7. '(Query' → logprob: -15.875121116638184
    8. 'Question' → logprob: -16.000120162963867
    9. '
' → logprob: -16.000120162963867
    10. '   ' → logprob: -16.500120162963867

Token 2284: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1901162564754486
    2. '       ' → logprob: -2.0651161670684814
    3. ':' → logprob: -3.9401161670684814
    4. '   ' → logprob: -4.1901164054870605
    5. '():
' → logprob: -4.9401164054870605
    6. '):
' → logprob: -6.3151164054870605
    7. 's' → logprob: -6.5651164054870605
    8. ',' → logprob: -7.4401164054870605
    9. ' s' → logprob: -8.065115928649902
    10. '        
' → logprob: -9.315115928649902

Token 2285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037680383771657944
    2. 's' → logprob: -3.5376803874969482
    3. ' s' → logprob: -5.037680149078369
    4. '   ' → logprob: -6.662680149078369
    5. '<|end|>' → logprob: -10.412680625915527
    6. '#' → logprob: -11.287680625915527
    7. '```' → logprob: -11.287680625915527
    8. '(s' → logprob: -11.412680625915527
    9. '        
' → logprob: -12.037680625915527
    10. '{s' → logprob: -12.162680625915527

Token 2286: ' l' (ID: 305)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055187251418828964
    2. '       ' → logprob: -3.430187225341797
    3. 'p' → logprob: -4.055187225341797
    4. ' s' → logprob: -6.055187225341797
    5. 'a' → logprob: -6.680187225341797
    6. '   ' → logprob: -9.305187225341797
    7. ' p' → logprob: -9.305187225341797
    8. '           ' → logprob: -9.305187225341797
    9. 'l' (adapté à ' l') → logprob: -9.555187225341797
    10. '```' → logprob: -11.555187225341797

Token 2287: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019967015832662582
    2. '=' → logprob: -4.019967079162598
    3. '1' → logprob: -6.894967079162598
    4. '0' → logprob: -7.394967079162598
    5. 'a' → logprob: -9.394967079162598
    6. '   ' → logprob: -9.519967079162598
    7. '=a' → logprob: -11.519967079162598
    8. 'ine' → logprob: -12.019967079162598
    9. '       ' → logprob: -12.269967079162598
    10. 's' → logprob: -12.769967079162598

Token 2288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14270471036434174
    2. '=' → logprob: -2.017704725265503
    3. ',' → logprob: -11.392704963684082
    4. '   ' → logprob: -11.767704963684082
    5. 'x' → logprob: -12.267704963684082
    6. 'a' → logprob: -13.017704963684082
    7. ' ' → logprob: -14.267704963684082
    8. 's' → logprob: -14.517704963684082
    9. '1' → logprob: -14.642704963684082
    10. '(Line' → logprob: -15.142704963684082

Token 2289: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -8.888114098226652e-05
    2. ' Line' → logprob: -9.375088691711426
    3. 'Point' → logprob: -13.125088691711426
    4. 'Segment' → logprob: -13.250088691711426
    5. '   ' → logprob: -15.250088691711426
    6. '(Line' → logprob: -16.500089645385742
    7. 'Lines' → logprob: -17.875089645385742
    8. ' ' → logprob: -19.000089645385742
    9. 'Lin' → logprob: -19.000089645385742
    10. 'line' → logprob: -19.125089645385742

Token 2290: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.01815146580338478
    2. 'Point' → logprob: -4.01815128326416
    3. ' Point' → logprob: -13.51815128326416
    4. '	Point' → logprob: -15.26815128326416
    5. '<Point' → logprob: -17.768152236938477
    6. '.Point' → logprob: -18.518152236938477
    7. '(
' → logprob: -18.768152236938477
    8. '(' → logprob: -18.893152236938477
    9. '(Line' → logprob: -19.143152236938477
    10. '   ' → logprob: -19.393152236938477

Token 2291: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0014214261900633574
    2. 'p' → logprob: -7.2514214515686035
    3. '(Point' → logprob: -7.5014214515686035
    4. 'Point' → logprob: -8.751420974731445
    5. '(' → logprob: -15.751420974731445
    6. ' p' → logprob: -15.876420974731445
    7. '(
' → logprob: -16.126420974731445
    8. 'Points' → logprob: -17.251420974731445
    9. '((' → logprob: -17.501420974731445
    10. '[p' → logprob: -17.626420974731445

Token 2292: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006001082714647055
    2. '1' → logprob: -5.131000995635986
    3. 'p' → logprob: -9.631001472473145
    4. 'l' → logprob: -12.881001472473145
    5. '```' → logprob: -14.256001472473145
    6. '2' → logprob: -14.506001472473145
    7. '``' → logprob: -14.506001472473145
    8. '3' → logprob: -14.631001472473145
    9. ' ' → logprob: -14.631001472473145
    10. '[' → logprob: -14.881001472473145

Token 2293: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03060142882168293
    2. '0' → logprob: -3.6556015014648438
    3. '1' → logprob: -5.780601501464844
    4. 'p' → logprob: -6.780601501464844
    5. '(p' → logprob: -10.655601501464844
    6. '```' → logprob: -11.530601501464844
    7. 'l' → logprob: -12.155601501464844
    8. 'q' → logprob: -12.905601501464844
    9. 'px' → logprob: -12.905601501464844
    10. '[' → logprob: -13.155601501464844

Token 2294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2666521668434143
    2. 'p' → logprob: -1.7666521072387695
    3. ',p' → logprob: -2.7666521072387695
    4. ' p' → logprob: -8.39165210723877
    5. '(p' → logprob: -9.89165210723877
    6. '<p' → logprob: -13.14165210723877
    7. ',P' → logprob: -13.76665210723877
    8. ' ,' → logprob: -13.89165210723877
    9. '_p' → logprob: -14.39165210723877
    10. '(' → logprob: -14.39165210723877

Token 2295: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00038038729690015316
    2. ' p' → logprob: -7.875380516052246
    3. 'py' → logprob: -16.87537956237793
    4. '	p' → logprob: -17.43787956237793
    5. '   ' → logprob: -17.56287956237793
    6. '<p' → logprob: -18.31287956237793
    7. '```' → logprob: -18.56287956237793
    8. ' ' → logprob: -18.62537956237793
    9. '       ' → logprob: -18.93787956237793
    10. '(p' → logprob: -19.25037956237793

Token 2296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01280203927308321
    2. 'p' → logprob: -4.5128021240234375
    3. 'y' → logprob: -6.5128021240234375
    4. 'l' → logprob: -9.262802124023438
    5. 'x' → logprob: -9.262802124023438
    6. 'py' → logprob: -10.012802124023438
    7. ' p' → logprob: -11.637802124023438
    8. ' ' → logprob: -11.762802124023438
    9. '1' → logprob: -12.512802124023438
    10. '```' → logprob: -13.137802124023438

Token 2297: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.706686690449715e-05
    2. 'x' → logprob: -10.375066757202148
    3. '0' → logprob: -10.625066757202148
    4. 'p' → logprob: -12.875066757202148
    5. '1' → logprob: -13.125066757202148
    6. ' y' → logprob: -13.562566757202148
    7. 'py' → logprob: -13.750066757202148
    8. '```' → logprob: -14.125066757202148
    9. '
' → logprob: -14.437566757202148
    10. ',' → logprob: -15.250066757202148

Token 2298: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005037044174969196
    2. '),' → logprob: -7.6255035400390625
    3. ',p' → logprob: -11.500503540039062
    4. ' ,' → logprob: -12.250503540039062
    5. 'p' → logprob: -14.875503540039062
    6. '   ' → logprob: -15.250503540039062
    7. ',P' → logprob: -16.750503540039062
    8. ')' → logprob: -17.750503540039062
    9. '],' → logprob: -17.750503540039062
    10. 'Point' → logprob: -17.875503540039062

Token 2299: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0001234428636962548
    2. ' Point' → logprob: -9.000123023986816
    3. '	Point' → logprob: -19.500123977661133
    4. '(Point' → logprob: -20.250123977661133
    5. '   ' → logprob: -20.875123977661133
    6. '_point' → logprob: -22.375123977661133
    7. '_Point' → logprob: -23.000123977661133
    8. '.Point' → logprob: -23.625123977661133
    9. '<Point' → logprob: -24.250123977661133
    10. '       ' → logprob: -24.250123977661133

Token 2300: '(p' (ID: 2407)
  Prédit: '(Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0001238004770129919
    2. 'Point' → logprob: -9.000123977661133
    3. ' Point' → logprob: -16.125123977661133
    4. '<Point' → logprob: -16.625123977661133
    5. '	Point' → logprob: -16.875123977661133
    6. '(p' → logprob: -18.000123977661133
    7. '.Point' → logprob: -19.250123977661133
    8. 'p' → logprob: -20.000123977661133
    9. '(point' → logprob: -20.250123977661133
    10. '(
' → logprob: -20.250123977661133

Token 2301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. '3' → logprob: -11.625018119812012
    3. 'p' → logprob: -12.625018119812012
    4. '0' → logprob: -13.250018119812012
    5. 'x' → logprob: -13.750018119812012
    6. '2' → logprob: -13.875018119812012
    7. '
' → logprob: -14.250018119812012
    8. 'px' → logprob: -15.000018119812012
    9. 'l' → logprob: -15.500018119812012
    10. '```' → logprob: -16.687517166137695

Token 2302: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. 'Point' → logprob: -18.625
    3. ',' → logprob: -19.0
    4. '(Point' → logprob: -19.25
    5. 'y' → logprob: -19.625
    6. ')' → logprob: -20.25
    7. '(x' → logprob: -20.375
    8. ' x' → logprob: -20.75
    9. '),' → logprob: -21.0
    10. '```' → logprob: -21.75

Token 2303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2551962733268738
    2. 'p' → logprob: -1.5051963329315186
    3. ',p' → logprob: -5.7551960945129395
    4. ' p' → logprob: -9.630196571350098
    5. 'Point' → logprob: -10.630196571350098
    6. '   ' → logprob: -12.755196571350098
    7. ' ,' → logprob: -13.505196571350098
    8. 'py' → logprob: -15.005196571350098
    9. '(p' → logprob: -15.630196571350098
    10. ' Point' → logprob: -16.13019561767578

Token 2304: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002786167024169117
    2. ' p' → logprob: -8.50027847290039
    3. 'Point' → logprob: -9.50027847290039
    4. ' Point' → logprob: -15.25027847290039
    5. '   ' → logprob: -19.50027847290039
    6. 'Points' → logprob: -19.50027847290039
    7. '	p' → logprob: -19.62527847290039
    8. 'point' → logprob: -20.00027847290039
    9. '<p' → logprob: -20.37527847290039
    10. ' ' → logprob: -21.12527847290039

Token 2305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0173388309776783
    2. 'p' → logprob: -4.642338752746582
    3. 'y' → logprob: -4.892338752746582
    4. '<|end|>' → logprob: -11.767338752746582
    5. 'm' → logprob: -12.017338752746582
    6. '
' → logprob: -12.142338752746582
    7. 'py' → logprob: -12.829838752746582
    8. 'ay' → logprob: -13.017338752746582
    9. ' p' → logprob: -13.142338752746582
    10. 'q' → logprob: -13.142338752746582

Token 2306: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.301394023466855e-05
    2. '1' → logprob: -9.750062942504883
    3. 'p' → logprob: -12.875062942504883
    4. '0' → logprob: -14.125062942504883
    5. '   ' → logprob: -15.000062942504883
    6. '```' → logprob: -15.250062942504883
    7. '<|end|>' → logprob: -16.000062942504883
    8. ' y' → logprob: -16.000062942504883
    9. 'm' → logprob: -16.625062942504883
    10. '
' → logprob: -17.000062942504883

Token 2307: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18147879838943481
    2. ')
' → logprob: -1.80647873878479
    3. '))' → logprob: -7.806478977203369
    4. '),' → logprob: -7.931478977203369
    5. ')
' → logprob: -8.056478500366211
    6. '       ' → logprob: -8.556478500366211
    7. '())' → logprob: -8.931478500366211
    8. '())
' → logprob: -9.181478500366211
    9. '   ' → logprob: -9.431478500366211
    10. '))
' → logprob: -9.556478500366211

Token 2308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015037545002996922
    2. 'l' → logprob: -4.765037536621094
    3. 's' → logprob: -5.765037536621094
    4. ' l' → logprob: -6.140037536621094
    5. ' s' → logprob: -7.015037536621094
    6. '   ' → logprob: -8.640037536621094
    7. '<|end|>' → logprob: -11.640037536621094
    8. ' ' → logprob: -11.890037536621094
    9. ',' → logprob: -12.140037536621094
    10. '           ' → logprob: -12.390037536621094

Token 2309: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0007330321241170168
    2. ' l' → logprob: -8.000733375549316
    3. '       ' → logprob: -8.375733375549316
    4. 's' → logprob: -8.750733375549316
    5. '   ' → logprob: -12.000733375549316
    6. '	l' → logprob: -13.750733375549316
    7. '           ' → logprob: -14.125733375549316
    8. ' s' → logprob: -14.625733375549316
    9. '        ' → logprob: -16.375732421875
    10. '        
' → logprob: -16.875732421875

Token 2310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. '3' → logprob: -14.125001907348633
    3. 's' → logprob: -14.875001907348633
    4. ' ' → logprob: -15.125001907348633
    5. 'l' → logprob: -15.875001907348633
    6. '#' → logprob: -15.875001907348633
    7. 'ines' → logprob: -16.000001907348633
    8. '   ' → logprob: -16.250001907348633
    9. 'ine' → logprob: -16.250001907348633
    10. '1' → logprob: -16.750001907348633

Token 2311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192928314208984
    2. ' =' → logprob: -1.5019292831420898
    3. '=
' → logprob: -17.001930236816406
    4. 's' → logprob: -17.376930236816406
    5. '   ' → logprob: -17.376930236816406
    6. ' ' → logprob: -17.626930236816406
    7. '＝' → logprob: -17.876930236816406
    8. 'def' → logprob: -17.876930236816406
    9. 'import' → logprob: -18.376930236816406
    10. 'ine' → logprob: -18.876930236816406

Token 2312: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -1.0802738870552275e-05
    2. ' Line' → logprob: -11.62501049041748
    3. 'Point' → logprob: -13.62501049041748
    4. '(Line' → logprob: -15.12501049041748
    5. '   ' → logprob: -16.000011444091797
    6. 'Segment' → logprob: -16.250011444091797
    7. 'Lines' → logprob: -17.750011444091797
    8. '
' → logprob: -17.875011444091797
    9. 'Lin' → logprob: -18.250011444091797
    10. ' ' → logprob: -19.250011444091797

Token 2313: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0007101670489646494
    2. 'Point' → logprob: -7.2507100105285645
    3. '<Point' → logprob: -16.375709533691406
    4. ' Point' → logprob: -17.250709533691406
    5. '	Point' → logprob: -18.125709533691406
    6. '(Line' → logprob: -20.125709533691406
    7. '.Point' → logprob: -20.375709533691406
    8. '_Point' → logprob: -20.625709533691406
    9. '(point' → logprob: -21.750709533691406
    10. '(
' → logprob: -21.875709533691406

Token 2314: '(p' (ID: 2407)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.023248272016644478
    2. '(Point' → logprob: -3.7732481956481934
    3. ' Point' → logprob: -13.148248672485352
    4. '	Point' → logprob: -14.523248672485352
    5. '<Point' → logprob: -15.398248672485352
    6. '.Point' → logprob: -16.39824867248535
    7. '_Point' → logprob: -16.77324867248535
    8. '_point' → logprob: -18.39824867248535
    9. 'p' → logprob: -18.77324867248535
    10. '-point' → logprob: -19.52324867248535

Token 2315: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001640876434976235
    2. '2' → logprob: -8.750164031982422
    3. '(p' → logprob: -12.625164031982422
    4. ' p' → logprob: -13.000164031982422
    5. '
' → logprob: -16.875164031982422
    6. 'l' → logprob: -17.750164031982422
    7. '``' → logprob: -18.375164031982422
    8. '```' → logprob: -18.375164031982422
    9. '	p' → logprob: -19.125164031982422
    10. '(' → logprob: -19.250164031982422

Token 2316: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.22060178220272064
    2. '2' → logprob: -1.8456017971038818
    3. 'p' → logprob: -3.220601797103882
    4. 'c' → logprob: -10.220602035522461
    5. '0' → logprob: -10.470602035522461
    6. '```' → logprob: -10.970602035522461
    7. 'px' → logprob: -12.220602035522461
    8. 'l' → logprob: -13.220602035522461
    9. 'z' → logprob: -13.220602035522461
    10. '``' → logprob: -13.345602035522461

Token 2317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015484257601201534
    2. ',p' → logprob: -6.5015482902526855
    3. 'p' → logprob: -10.626548767089844
    4. ' ,' → logprob: -11.126548767089844
    5. ' p' → logprob: -12.501548767089844
    6. '(p' → logprob: -12.876548767089844
    7. '       ' → logprob: -15.126548767089844
    8. ',y' → logprob: -15.501548767089844
    9. '(' → logprob: -15.626548767089844
    10. '   ' → logprob: -16.501548767089844

Token 2318: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01814994215965271
    2. ' p' → logprob: -4.0181498527526855
    3. '<p' → logprob: -17.768150329589844
    4. '	p' → logprob: -18.643150329589844
    5. '   ' → logprob: -19.268150329589844
    6. ' ' → logprob: -19.268150329589844
    7. '(p' → logprob: -19.518150329589844
    8. '<|end|>' → logprob: -19.768150329589844
    9. '[p' → logprob: -20.018150329589844
    10. '$p' → logprob: -20.143150329589844

Token 2319: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38700276613235474
    2. '2' → logprob: -1.13700270652771
    3. ' p' → logprob: -10.012002944946289
    4. '```' → logprob: -10.512002944946289
    5. ' ' → logprob: -10.637002944946289
    6. 'y' → logprob: -10.887002944946289
    7. 'm' → logprob: -12.762002944946289
    8. ',' → logprob: -12.887002944946289
    9. '   ' → logprob: -13.512002944946289
    10. 'py' → logprob: -13.762002944946289

Token 2320: 'y' (ID: 88)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011287610046565533
    2. 'y' → logprob: -4.761287689208984
    3. ',' → logprob: -6.011287689208984
    4. '2' → logprob: -9.011287689208984
    5. 'py' → logprob: -10.136287689208984
    6. ' p' → logprob: -10.261287689208984
    7. '```' → logprob: -11.886287689208984
    8. '   ' → logprob: -12.636287689208984
    9. '
' → logprob: -12.761287689208984
    10. ',y' → logprob: -13.261287689208984

Token 2321: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.082895273109898e-05
    2. '),' → logprob: -11.500030517578125
    3. ' ,' → logprob: -11.625030517578125
    4. '(),' → logprob: -11.875030517578125
    5. '(Point' → logprob: -13.125030517578125
    6. 'Point' → logprob: -13.375030517578125
    7. 'p' → logprob: -14.375030517578125
    8. ',p' → logprob: -14.750030517578125
    9. '   ' → logprob: -17.125030517578125
    10. ' Point' → logprob: -17.375030517578125

Token 2322: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0002613358374219388
    2. ' Point' → logprob: -8.250261306762695
    3. '(Point' → logprob: -18.500261306762695
    4. '	Point' → logprob: -18.500261306762695
    5. '       ' → logprob: -19.875261306762695
    6. '   ' → logprob: -20.375261306762695
    7. '           ' → logprob: -21.500261306762695
    8. 'point' → logprob: -21.875261306762695
    9. '<Point' → logprob: -21.875261306762695
    10. '_point' → logprob: -22.125261306762695

Token 2323: '(p' (ID: 2407)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00011033779446734115
    2. 'p' → logprob: -9.250110626220703
    3. '(Point' → logprob: -11.250110626220703
    4. ' Point' → logprob: -14.000110626220703
    5. 'point' → logprob: -15.500110626220703
    6. '(p' → logprob: -15.875110626220703
    7. '_Point' → logprob: -17.500110626220703
    8. '_point' → logprob: -18.125110626220703
    9. '.Point' → logprob: -18.625110626220703
    10. '	Point' → logprob: -18.625110626220703

Token 2324: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029800137504935265
    2. 'p' → logprob: -3.5298001766204834
    3. 's' → logprob: -10.404800415039062
    4. '```' → logprob: -11.529800415039062
    5. 'x' → logprob: -13.154800415039062
    6. '
' → logprob: -13.529800415039062
    7. '``' → logprob: -13.654800415039062
    8. '3' → logprob: -14.029800415039062
    9. ' p' → logprob: -14.404800415039062
    10. 't' → logprob: -14.779800415039062

Token 2325: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008316631428897381
    2. 'p' → logprob: -7.250831604003906
    3. '0' → logprob: -9.875831604003906
    4. 'px' → logprob: -10.125831604003906
    5. '```' → logprob: -11.250831604003906
    6. 'y' → logprob: -12.500831604003906
    7. '2' → logprob: -12.625831604003906
    8. 'z' → logprob: -12.625831604003906
    9. '1' → logprob: -13.500831604003906
    10. 's' → logprob: -14.375831604003906

Token 2326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06423045694828033
    2. 'p' → logprob: -2.814230442047119
    3. ',p' → logprob: -6.314230442047119
    4. ' p' → logprob: -8.564230918884277
    5. '0' → logprob: -8.939230918884277
    6. '),' → logprob: -9.939230918884277
    7. '   ' → logprob: -10.564230918884277
    8. '1' → logprob: -11.064230918884277
    9. '```' → logprob: -11.189230918884277
    10. ' ,' → logprob: -11.939230918884277

Token 2327: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0206720617134124e-05
    2. ' p' → logprob: -11.50001049041748
    3. 'Point' → logprob: -18.000009536743164
    4. '```' → logprob: -20.750009536743164
    5. '	p' → logprob: -21.375009536743164
    6. '   ' → logprob: -21.875009536743164
    7. 'point' → logprob: -22.375009536743164
    8. '(p' → logprob: -22.875009536743164
    9. '<p' → logprob: -23.000009536743164
    10. '``' → logprob: -23.000009536743164

Token 2328: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3487262427806854
    2. 'p' → logprob: -1.2237262725830078
    3. '2' → logprob: -8.973726272583008
    4. 'm' → logprob: -9.098726272583008
    5. '```' → logprob: -11.348726272583008
    6. ' p' → logprob: -12.348726272583008
    7. 's' → logprob: -12.473726272583008
    8. 'x' → logprob: -12.723726272583008
    9. 'px' → logprob: -12.973726272583008
    10. '   ' → logprob: -13.473726272583008

Token 2329: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008820433169603348
    2. 'z' → logprob: -4.758820533752441
    3. 'p' → logprob: -9.133820533752441
    4. 'y' → logprob: -9.758820533752441
    5. '```' → logprob: -11.133820533752441
    6. '1' → logprob: -11.633820533752441
    7. 'm' → logprob: -12.133820533752441
    8. '2' → logprob: -12.758820533752441
    9. '
' → logprob: -13.008820533752441
    10. 'py' → logprob: -13.508820533752441

Token 2330: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.14649157226085663
    2. ')' → logprob: -2.021491527557373
    3. '       ' → logprob: -5.896491527557373
    4. ')
' → logprob: -7.521491527557373
    5. '   ' → logprob: -7.771491527557373
    6. '))' → logprob: -10.521492004394531
    7. '())
' → logprob: -10.646492004394531
    8. '))
' → logprob: -10.646492004394531
    9. ' )
' → logprob: -12.146492004394531
    10. ')

' → logprob: -12.271492004394531

Token 2331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009499297011643648
    2. 'print' → logprob: -7.125949859619141
    3. '   ' → logprob: -8.87594985961914
    4. ' print' → logprob: -13.62594985961914
    5. '           ' → logprob: -13.75094985961914
    6. 'for' → logprob: -13.87594985961914
    7. '```' → logprob: -14.00094985961914
    8. '	' → logprob: -14.50094985961914
    9. 'result' → logprob: -15.12594985961914
    10. '<|end|>' → logprob: -15.25094985961914

Token 2332: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002448542509227991
    2. 'if' (adapté à ' if') → logprob: -6.252448558807373
    3. '       ' → logprob: -7.627448558807373
    4. '   ' → logprob: -11.377448081970215
    5. 'res' → logprob: -11.377448081970215
    6. 'ans' → logprob: -13.002448081970215
    7. 'try' → logprob: -13.377448081970215
    8. 'result' → logprob: -13.502448081970215
    9. 'inter' → logprob: -13.877448081970215
    10. ' print' → logprob: -13.877448081970215

Token 2333: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.002472209045663476
    2. ' is' → logprob: -6.377472400665283
    3. 'not' → logprob: -7.502472400665283
    4. 'l' → logprob: -8.627471923828125
    5. 'cross' → logprob: -11.127471923828125
    6. ' not' → logprob: -12.002471923828125
    7. '(is' → logprob: -12.127471923828125
    8. 'eq' → logprob: -12.877471923828125
    9. 'inter' → logprob: -13.502471923828125
    10. 'intersection' → logprob: -13.627471923828125

Token 2334: 'Par' (ID: 1586)
  Prédit: 'Par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Par' → logprob: -0.026321901008486748
    2. 'Intersect' → logprob: -3.6513218879699707
    3. 'Inter' → logprob: -11.026322364807129
    4. 'Parallel' → logprob: -12.651322364807129
    5. 'Intersection' → logprob: -14.776322364807129
    6. 'par' → logprob: -14.901322364807129
    7. 'Interact' → logprob: -15.026322364807129
    8. 'Vertical' → logprob: -15.651322364807129
    9. 'Intercept' → logprob: -15.651322364807129
    10. 'inter' → logprob: -15.776322364807129

Token 2335: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.00601992616429925
    2. 'a' → logprob: -5.7560200691223145
    3. 'ar' → logprob: -6.7560200691223145
    4. 'all' → logprob: -7.6310200691223145
    5. 'rell' → logprob: -7.6310200691223145
    6. 're' → logprob: -8.131019592285156
    7. 'r' → logprob: -8.631019592285156
    8. 'allel' → logprob: -9.756019592285156
    9. 'Are' → logprob: -9.756019592285156
    10. 'alle' → logprob: -10.631019592285156

Token 2336: 'll' (ID: 680)
  Prédit: 'll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -1.9266199160483666e-05
    2. 'lll' → logprob: -11.250019073486328
    3. 'l' → logprob: -12.625019073486328
    4. 'лл' → logprob: -13.000019073486328
    5. 'lle' → logprob: -14.875019073486328
    6. 'llll' → logprob: -16.000019073486328
    7. 'llt' → logprob: -16.750019073486328
    8. 'lld' → logprob: -17.375019073486328
    9. 'llo' → logprob: -18.125019073486328
    10. '(ll' → logprob: -18.250019073486328

Token 2337: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'l' → logprob: -17.5
    4. '(
' → logprob: -18.5
    5. ' (' → logprob: -19.25
    6. '(L' → logprob: -19.375
    7. '(ll' → logprob: -19.625
    8. '(line' → logprob: -19.75
    9. '(s' → logprob: -19.75
    10. '       ' → logprob: -20.125

Token 2338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012880703434348106
    2. '(l' → logprob: -9.125128746032715
    3. 'l' → logprob: -10.875128746032715
    4. ' l' → logprob: -15.125128746032715
    5. '(' → logprob: -15.125128746032715
    6. ')' → logprob: -15.750128746032715
    7. '	l' → logprob: -17.25012969970703
    8. ',l' → logprob: -17.25012969970703
    9. 'ine' → logprob: -17.37512969970703
    10. 's' → logprob: -17.37512969970703

Token 2339: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.006599201820790768
    2. ',' → logprob: -5.131599426269531
    3. '(' → logprob: -7.756599426269531
    4. ' and' → logprob: -9.131599426269531
    5. ',l' → logprob: -9.381599426269531
    6. ')' → logprob: -10.631599426269531
    7. 'and' → logprob: -11.381599426269531
    8. ' or' → logprob: -11.881599426269531
    9. '(
' → logprob: -12.756599426269531
    10. ' ,' → logprob: -13.881599426269531

Token 2340: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -6.64708495605737e-05
    2. ' l' → logprob: -9.625066757202148
    3. ')' → logprob: -16.12506675720215
    4. '	l' → logprob: -16.37506675720215
    5. 'is' → logprob: -17.25006675720215
    6. '   ' → logprob: -17.25006675720215
    7. '       ' → logprob: -18.37506675720215
    8. '(l' → logprob: -18.75006675720215
    9. '```' → logprob: -19.00006675720215
    10. '
' → logprob: -19.25006675720215

Token 2341: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016098303720355034
    2. '2' → logprob: -4.141098499298096
    3. 'l' → logprob: -10.141098022460938
    4. '```' → logprob: -11.266098022460938
    5. ')' → logprob: -12.641098022460938
    6. 's' → logprob: -13.578598022460938
    7. ',' → logprob: -13.766098022460938
    8. '   ' → logprob: -13.828598022460938
    9. 'a' → logprob: -14.453598022460938
    10. '
' → logprob: -14.641098022460938

Token 2342: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7440657019615173
    2. ':
' → logprob: -0.7440657019615173
    3. '):
' → logprob: -3.869065761566162
    4. '():
' → logprob: -4.619065761566162
    5. '):' → logprob: -5.119065761566162
    6. '       ' → logprob: -5.369065761566162
    7. '==' → logprob: -5.994065761566162
    8. ' or' → logprob: -6.119065761566162
    9. ' and' → logprob: -6.619065761566162
    10. '           ' → logprob: -7.244065761566162

Token 2343: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015316623263061047
    2. '       ' → logprob: -4.265316486358643
    3. 'print' → logprob: -7.265316486358643
    4. '	       ' → logprob: -8.0153169631958
    5. ' print' → logprob: -10.5153169631958
    6. ',' → logprob: -11.0153169631958
    7. ':' → logprob: -11.1403169631958
    8. '		' → logprob: -11.5153169631958
    9. '   ' → logprob: -11.8903169631958
    10. '	print' → logprob: -12.1403169631958

Token 2344: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011930868495255709
    2. '       ' → logprob: -6.751193046569824
    3. 'if' → logprob: -11.626193046569824
    4. '   ' → logprob: -11.876193046569824
    5. ' print' → logprob: -12.126193046569824
    6. '           ' → logprob: -13.626193046569824
    7. '	print' → logprob: -15.251193046569824
    8. 'continue' → logprob: -16.62619400024414
    9. '```' → logprob: -18.12619400024414
    10. '#print' → logprob: -18.50119400024414

Token 2345: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.001931970240548253
    2. '(' → logprob: -7.001932144165039
    3. '"' → logprob: -7.501932144165039
    4. '('' → logprob: -7.876932144165039
    5. '(-' → logprob: -10.626932144165039
    6. '"No' → logprob: -10.626932144165039
    7. '(not' → logprob: -11.626932144165039
    8. '(False' → logprob: -11.751932144165039
    9. '(True' → logprob: -12.001932144165039
    10. '("-' → logprob: -12.751932144165039

Token 2346: '2' (ID: 17)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0073045408353209496
    2. '2' → logprob: -5.257304668426514
    3. '"No' → logprob: -6.507304668426514
    4. '1' → logprob: -8.007304191589355
    5. '0' → logprob: -8.882304191589355
    6. ''' → logprob: -10.007304191589355
    7. '("' → logprob: -11.132304191589355
    8. '-' → logprob: -11.757304191589355
    9. 'False' → logprob: -11.882304191589355
    10. '"N' → logprob: -12.007304191589355

Token 2347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060770451091229916
    2. ')
' → logprob: -5.256076812744141
    3. '<|end|>' → logprob: -7.631076812744141
    4. ' if' → logprob: -8.75607681274414
    5. 'else' → logprob: -9.75607681274414
    6. '   ' → logprob: -10.00607681274414
    7. '       ' → logprob: -10.75607681274414
    8. 'elif' → logprob: -11.13107681274414
    9. '<|end|>' → logprob: -11.13107681274414
    10. 'if' → logprob: -11.25607681274414

Token 2348: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030031977221369743
    2. '           ' → logprob: -3.53003191947937
    3. '<|end|>' → logprob: -8.65503215789795
    4. 'else' → logprob: -10.15503215789795
    5. '   ' → logprob: -11.03003215789795
    6. '	' → logprob: -11.03003215789795
    7. '	       ' → logprob: -11.40503215789795
    8. ' else' → logprob: -12.15503215789795
    9. '		' → logprob: -12.28003215789795
    10. '               ' → logprob: -12.78003215789795

Token 2349: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031049834564328194
    2. 'else' → logprob: -3.5310497283935547
    3. ' else' → logprob: -7.406049728393555
    4. '           ' → logprob: -8.031049728393555
    5. 'elif' (adapté à ' elif') → logprob: -8.656049728393555
    6. '	' → logprob: -8.906049728393555
    7. '   ' → logprob: -10.406049728393555
    8. ')' → logprob: -12.156049728393555
    9. '	else' → logprob: -12.156049728393555
    10. '<|end|>' → logprob: -12.781049728393555

Token 2350: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004473796579986811
    2. ' is' → logprob: -5.879473686218262
    3. 'print' → logprob: -6.879473686218262
    4. 'cross' → logprob: -7.754473686218262
    5. 'not' → logprob: -9.004473686218262
    6. 'eq' → logprob: -10.754473686218262
    7. '(is' → logprob: -11.129473686218262
    8. 'abs' → logprob: -12.004473686218262
    9. ' cross' → logprob: -12.129473686218262
    10. 'True' → logprob: -12.129473686218262

Token 2351: 'Vertical' (ID: 25466)
  Prédit: 'Intersect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -0.0014759370824322104
    2. 'Par' → logprob: -7.001475811004639
    3. 'Interact' → logprob: -8.626476287841797
    4. 'Intersection' → logprob: -9.376476287841797
    5. 'inter' → logprob: -10.001476287841797
    6. 'Vertical' → logprob: -10.001476287841797
    7. '
' → logprob: -10.126476287841797
    8. 'n' → logprob: -10.376476287841797
    9. 'Vert' → logprob: -10.626476287841797
    10. 'is' → logprob: -10.876476287841797

Token 2352: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.000018119812012
    3. ' (' → logprob: -14.500018119812012
    4. '(
' → logprob: -14.750018119812012
    5. '(line' → logprob: -17.375017166137695
    6. '((' → logprob: -17.625017166137695
    7. '(L' → logprob: -17.750017166137695
    8. '```' → logprob: -17.750017166137695
    9. '	l' → logprob: -18.750017166137695
    10. '(ll' → logprob: -18.750017166137695

Token 2353: '1' (ID: 16)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.4744955897331238
    2. '1' → logprob: -0.9744955897331238
    3. 'l' → logprob: -8.599495887756348
    4. '(' → logprob: -8.599495887756348
    5. '(
' → logprob: -10.724495887756348
    6. '```' → logprob: -12.224495887756348
    7. ')' → logprob: -12.349495887756348
    8. ' l' → logprob: -12.849495887756348
    9. '[l' → logprob: -12.849495887756348
    10. ',l' → logprob: -13.224495887756348

Token 2354: ',' (ID: 11)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0005349211278371513
    2. ',' → logprob: -8.500535011291504
    3. '(' → logprob: -8.750535011291504
    4. ',l' → logprob: -8.750535011291504
    5. '(
' → logprob: -11.875535011291504
    6. ' (' → logprob: -12.125535011291504
    7. ')' → logprob: -14.125535011291504
    8. ' l' → logprob: -14.875535011291504
    9. ' ,' → logprob: -15.375535011291504
    10. '),' → logprob: -15.625535011291504

Token 2355: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004086275293957442
    2. ' l' → logprob: -8.125408172607422
    3. '(l' → logprob: -9.125408172607422
    4. '(' → logprob: -13.000408172607422
    5. '	l' → logprob: -14.250408172607422
    6. ')' → logprob: -15.000408172607422
    7. '       ' → logprob: -16.125408172607422
    8. '<|end|>' → logprob: -16.375408172607422
    9. 'line' → logprob: -17.125408172607422
    10. '           ' → logprob: -17.250408172607422

Token 2356: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029996460303664207
    2. 'l' → logprob: -3.529996395111084
    3. '(l' → logprob: -8.404996871948242
    4. ' l' → logprob: -11.154996871948242
    5. '1' → logprob: -13.029996871948242
    6. '	l' → logprob: -13.529996871948242
    7. '(' → logprob: -13.904996871948242
    8. '```' → logprob: -14.529996871948242
    9. 's' → logprob: -14.654996871948242
    10. '   ' → logprob: -15.029996871948242

Token 2357: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1762670278549194
    2. ':
' → logprob: -1.1762670278549194
    3. '():
' → logprob: -1.8012670278549194
    4. '):
' → logprob: -1.9262670278549194
    5. '):' → logprob: -3.301267147064209
    6. '       ' → logprob: -3.926267147064209
    7. '():' → logprob: -4.676267147064209
    8. '   ' → logprob: -6.426267147064209
    9. '(' → logprob: -6.676267147064209
    10. '==' → logprob: -7.051267147064209

Token 2358: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.738255500793457
    2. ':' → logprob: -0.988255500793457
    3. '           ' → logprob: -2.613255500793457
    4. '():' → logprob: -3.863255500793457
    5. ':
' → logprob: -4.113255500793457
    6. '():
' → logprob: -5.113255500793457
    7. ' ' → logprob: -5.238255500793457
    8. '   ' → logprob: -5.238255500793457
    9. '0' → logprob: -5.363255500793457
    10. '2' → logprob: -5.738255500793457

Token 2359: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.45520132780075073
    2. '0' → logprob: -1.4552013874053955
    3. '1' → logprob: -2.0802013874053955
    4. '           ' → logprob: -5.205201148986816
    5. '3' → logprob: -6.955201148986816
    6. '2' → logprob: -7.455201148986816
    7. ' ' → logprob: -8.705201148986816
    8. ' print' → logprob: -8.830201148986816
    9. '       ' → logprob: -9.830201148986816
    10. '4' → logprob: -11.455201148986816

Token 2360: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2138364166021347
    2. '0' → logprob: -1.963836431503296
    3. '(' → logprob: -2.963836431503296
    4. '3' → logprob: -8.088836669921875
    5. '2' → logprob: -8.338836669921875
    6. '4' → logprob: -11.838836669921875
    7. ' ' → logprob: -11.838836669921875
    8. '90' → logprob: -12.088836669921875
    9. '(
' → logprob: -12.588836669921875
    10. '180' → logprob: -12.838836669921875

Token 2361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07992570102214813
    2. '3' → logprob: -2.704925775527954
    3. '0' → logprob: -4.704925537109375
    4. '4' → logprob: -8.079925537109375
    5. '90' → logprob: -8.204925537109375
    6. '2' → logprob: -8.704925537109375
    7. '"' → logprob: -9.579925537109375
    8. ' ' → logprob: -11.204925537109375
    9. 'print' → logprob: -11.329925537109375
    10. '5' → logprob: -11.454925537109375

Token 2362: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35260337591171265
    2. ')' → logprob: -1.2276034355163574
    3. '<|end|>' → logprob: -5.852603435516357
    4. ')
' → logprob: -7.227603435516357
    5. 'else' → logprob: -8.6026029586792
    6. '<|end|>' → logprob: -8.9776029586792
    7. '```' → logprob: -9.7276029586792
    8. ' else' → logprob: -10.3526029586792
    9. '()' → logprob: -10.4776029586792
    10. '):
' → logprob: -11.2276029586792

Token 2363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03857199475169182
    2. 'else' → logprob: -3.288572072982788
    3. ' else' → logprob: -7.788571834564209
    4. 'elif' → logprob: -9.288572311401367
    5. '	' → logprob: -11.538572311401367
    6. '	else' → logprob: -12.413572311401367
    7. '<|end|>' → logprob: -12.413572311401367
    8. '   ' → logprob: -13.538572311401367
    9. ')' → logprob: -13.663572311401367
    10. '           ' → logprob: -13.788572311401367

Token 2364: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.47464877367019653
    2. '       ' → logprob: -0.9746487736701965
    3. ' else' → logprob: -7.849648952484131
    4. 'elif' → logprob: -9.099648475646973
    5. '<|end|>' → logprob: -10.599648475646973
    6. '	else' → logprob: -10.974648475646973
    7. '0' → logprob: -12.349648475646973
    8. '(' → logprob: -12.474648475646973
    9. '.' → logprob: -12.974648475646973
    10. '	' → logprob: -13.224648475646973

Token 2365: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32624736428260803
    2. ':' → logprob: -1.3262473344802856
    3. '       ' → logprob: -4.451247215270996
    4. '           ' → logprob: -6.826247215270996
    5. 'print' → logprob: -10.701247215270996
    6. '   ' → logprob: -10.826247215270996
    7. '(' → logprob: -11.076247215270996
    8. '():
' → logprob: -11.201247215270996
    9. '):
' → logprob: -11.326247215270996
    10. '[' → logprob: -11.951247215270996

Token 2366: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0712772011756897
    2. 'print' → logprob: -2.696277141571045
    3. '           ' → logprob: -7.446277141571045
    4. '0' → logprob: -7.571277141571045
    5. ' print' → logprob: -9.071277618408203
    6. '2' → logprob: -10.196277618408203
    7. '3' → logprob: -10.321277618408203
    8. '	       ' → logprob: -11.196277618408203
    9. '   ' → logprob: -11.446277618408203
    10. '1' → logprob: -11.446277618408203

Token 2367: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.019082168117165565
    2. 'p' → logprob: -4.019082069396973
    3. '       ' → logprob: -8.144082069396973
    4. '           ' → logprob: -8.519082069396973
    5. 'cp' → logprob: -8.894082069396973
    6. ' print' → logprob: -9.394082069396973
    7. 'pt' → logprob: -9.644082069396973
    8. 'cross' → logprob: -9.769082069396973
    9. 'point' → logprob: -10.144082069396973
    10. 'pos' → logprob: -11.519082069396973

Token 2368: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.043602727353572845
    2. '0' → logprob: -3.168602705001831
    3. '(
' → logprob: -7.91860294342041
    4. '3' → logprob: -9.41860294342041
    5. '2' → logprob: -9.54360294342041
    6. '
' → logprob: -10.91860294342041
    7. ' (' → logprob: -11.16860294342041
    8. '((' → logprob: -11.54360294342041
    9. '(c' → logprob: -11.66860294342041
    10. '()' → logprob: -12.04360294342041

Token 2369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8921695047756657e-05
    2. '3' → logprob: -10.500028610229492
    3. ' ' → logprob: -14.500028610229492
    4. '2' → logprob: -14.875028610229492
    5. '4' → logprob: -16.500028610229492
    6. ')' → logprob: -16.750028610229492
    7. '(' → logprob: -16.875028610229492
    8. '   ' → logprob: -18.000028610229492
    9. '
' → logprob: -18.000028610229492
    10. 'print' → logprob: -18.500028610229492

Token 2370: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000584249384701252
    2. '<|end|>' → logprob: -7.500584125518799
    3. '())' → logprob: -11.250584602355957
    4. '       ' → logprob: -11.875584602355957
    5. '()' → logprob: -12.250584602355957
    6. '
' → logprob: -13.750584602355957
    7. ')
' → logprob: -13.875584602355957
    8. '<|end|>' → logprob: -14.125584602355957
    9. '")' → logprob: -14.250584602355957
    10. '```' → logprob: -14.500584602355957

Token 2371: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002204262651503086
    2. '   ' → logprob: -6.127204418182373
    3. ' def' → logprob: -11.252203941345215
    4. '```' → logprob: -12.377203941345215
    5. 'return' → logprob: -14.502203941345215
    6. '       ' → logprob: -15.127203941345215
    7. '``' → logprob: -15.252203941345215
    8. '#' → logprob: -15.502203941345215
    9. '
' → logprob: -15.877203941345215
    10. '	def' → logprob: -16.37720489501953

Token 2372: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.0007937820046208799
    2. 'is' → logprob: -8.00079345703125
    3. 'main' → logprob: -8.25079345703125
    4. 'distance' → logprob: -9.00079345703125
    5. 'solve' → logprob: -10.37579345703125
    6. ' verify' → logprob: -11.50079345703125
    7. 'def' → logprob: -11.62579345703125
    8. 'validate' → logprob: -12.25079345703125
    9. 'cross' → logprob: -12.87579345703125
    10. 'inter' → logprob: -13.00079345703125

Token 2373: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.023293538717553e-05
    2. '(' → logprob: -11.500030517578125
    3. '()' → logprob: -11.625030517578125
    4. ' _' → logprob: -12.750030517578125
    5. '2' → logprob: -13.375030517578125
    6. '```' → logprob: -13.500030517578125
    7. 'def' → logprob: -13.750030517578125
    8. '5' → logprob: -14.250030517578125
    9. '():' → logprob: -14.250030517578125
    10. '(_' → logprob: -14.500030517578125

Token 2374: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015383612480945885
    2. '3' → logprob: -8.875153541564941
    3. '1' → logprob: -11.750153541564941
    4. '
' → logprob: -13.625153541564941
    5. '```' → logprob: -14.000153541564941
    6. '4' → logprob: -14.312653541564941
    7. '_' → logprob: -14.625153541564941
    8. 'def' → logprob: -14.937653541564941
    9. ' ' → logprob: -15.250153541564941
    10. '0' → logprob: -15.687653541564941

Token 2375: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.007910030893981457
    2. 'A' → logprob: -5.382910251617432
    3. 'C' → logprob: -5.757910251617432
    4. 'D' → logprob: -9.382909774780273
    5. 'def' → logprob: -11.382909774780273
    6. 'b' → logprob: -11.882909774780273
    7. 'E' → logprob: -12.007909774780273
    8. '
' → logprob: -12.757909774780273
    9. '(B' → logprob: -13.632909774780273
    10. 'P' → logprob: -13.882909774780273

Token 2376: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0067167943343520164
    2. '():
' → logprob: -5.006716728210449
    3. ' ():' → logprob: -14.25671672821045
    4. '()' → logprob: -14.50671672821045
    5. '():
' → logprob: -15.38171672821045
    6. 'def' → logprob: -18.131717681884766
    7. '():

' → logprob: -18.131717681884766
    8. '(' → logprob: -19.131717681884766
    9. '()>' → logprob: -20.631717681884766
    10. '#:' → logprob: -21.006717681884766

Token 2377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3750056028366089
    2. '()' → logprob: -1.2500056028366089
    3. 'Q' → logprob: -3.8750057220458984
    4. 'def' → logprob: -5.625005722045898
    5. '():' → logprob: -6.625005722045898
    6. '```' → logprob: -9.125005722045898
    7. '#' → logprob: -9.625005722045898
    8. '():
' → logprob: -9.625005722045898
    9. '()
' → logprob: -9.875005722045898
    10. '(Q' → logprob: -10.000005722045898

Token 2378: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.002303816145285964
    2. '   ' → logprob: -6.377303600311279
    3. 'def' → logprob: -8.002304077148438
    4. ' Q' → logprob: -8.877304077148438
    5. '```' → logprob: -10.002304077148438
    6. 'q' → logprob: -10.502304077148438
    7. '()' → logprob: -10.877304077148438
    8. '
' → logprob: -11.502304077148438
    9. '#' → logprob: -11.877304077148438
    10. '...' → logprob: -12.377304077148438

Token 2379: ' =' (ID: 314)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.26143813133239746
    2. '():
' → logprob: -1.5114381313323975
    3. '=' → logprob: -4.761438369750977
    4. '()' → logprob: -7.636438369750977
    5. ' =' → logprob: -8.386438369750977
    6. '():
' → logprob: -9.136438369750977
    7. 'def' → logprob: -10.011438369750977
    8. ':' → logprob: -11.386438369750977
    9. '   ' → logprob: -12.386438369750977
    10. '()>' → logprob: -12.636438369750977

Token 2380: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.56102097814437e-05
    2. ' int' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '[int' → logprob: -20.250045776367188
    5. '=int' → logprob: -20.500045776367188
    6. '(int' → logprob: -21.125045776367188
    7. '  ' → logprob: -21.750045776367188
    8. 'input' → logprob: -22.250045776367188
    9. '    ' → logprob: -22.375045776367188
    10. 'import' → logprob: -22.500045776367188

Token 2381: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005532711511477828
    2. 'input' → logprob: -7.500553131103516
    3. '=input' → logprob: -16.625553131103516
    4. ' input' → logprob: -17.125553131103516
    5. '(
' → logprob: -17.375553131103516
    6. ',input' → logprob: -17.625553131103516
    7. '[input' → logprob: -17.625553131103516
    8. '<input' → logprob: -18.875553131103516
    9. '(' → logprob: -19.375553131103516
    10. ' (' → logprob: -19.625553131103516

Token 2382: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.002238993300125003
    2. '())' → logprob: -6.252239227294922
    3. '()' → logprob: -8.502239227294922
    4. ')
' → logprob: -9.752239227294922
    5. '())
' → logprob: -10.502239227294922
    6. '()
' → logprob: -10.877239227294922
    7. ')' → logprob: -13.752239227294922
    8. ' ())
' → logprob: -14.127239227294922
    9. '[])
' → logprob: -14.877239227294922
    10. '   ' → logprob: -14.877239227294922

Token 2383: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005121442489326
    2. 'Query' → logprob: -5.630121231079102
    3. 'for' → logprob: -6.505121231079102
    4. '```' → logprob: -11.630121231079102
    5. ' for' → logprob: -12.380121231079102
    6. '	Query' → logprob: -12.755121231079102
    7. '<Query' → logprob: -13.130121231079102
    8. '(Query' → logprob: -13.505121231079102
    9. 'def' → logprob: -13.880121231079102
    10. '``' → logprob: -14.505121231079102

Token 2384: ' Query' (ID: 18574)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029754191637039185
    2. 'Query' (adapté à ' Query') → logprob: -3.529754161834717
    3. '   ' → logprob: -13.029754638671875
    4. ' for' → logprob: -13.654754638671875
    5. ' Query' → logprob: -15.779754638671875
    6. '
' → logprob: -16.029754638671875
    7. '	for' → logprob: -17.904754638671875
    8. '```' → logprob: -18.029754638671875
    9. '_Query' → logprob: -18.029754638671875
    10. 'while' → logprob: -18.279754638671875

Token 2385: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5243107080459595
    2. ' =' → logprob: -0.8993107080459595
    3. '   ' → logprob: -6.77431058883667
    4. 'for' → logprob: -11.649311065673828
    5. '=
' → logprob: -11.774311065673828
    6. '=[]' → logprob: -12.274311065673828
    7. '=[
' → logprob: -12.274311065673828
    8. '=[' → logprob: -12.774311065673828
    9. 'def' → logprob: -13.149311065673828
    10. '=line' → logprob: -13.274311065673828

Token 2386: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.09711629152297974
    2. '[' → logprob: -3.097116231918335
    3. '[int' → logprob: -3.097116231918335
    4. '[List' → logprob: -6.472116470336914
    5. '[input' → logprob: -7.722116470336914
    6. '   ' → logprob: -9.472116470336914
    7. ' [' → logprob: -9.847116470336914
    8. '[len' → logprob: -10.597116470336914
    9. '[line' → logprob: -10.972116470336914
    10. 'Q' → logprob: -11.472116470336914

Token 2387: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: 0.0
    2. ' list' → logprob: -17.625
    3. '[list' → logprob: -20.125
    4. 'tuple' → logprob: -21.0
    5. '   ' → logprob: -22.375
    6. 'int' → logprob: -23.125
    7. ' ' → logprob: -23.75
    8. '
' → logprob: -23.75
    9. '(list' → logprob: -24.0
    10. '[' → logprob: -24.25

Token 2388: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.1030062660574913
    2. 'map' → logprob: -2.353006362915039
    3. '(lambda' → logprob: -6.853006362915039
    4. 'int' → logprob: -8.103006362915039
    5. 'lambda' → logprob: -8.478006362915039
    6. '```' → logprob: -8.478006362915039
    7. '.map' → logprob: -8.728006362915039
    8. ',map' → logprob: -8.853006362915039
    9. '	map' → logprob: -9.103006362915039
    10. '(int' → logprob: -9.478006362915039

Token 2389: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001173321157693863
    2. '(int' → logprob: -6.751173496246338
    3. '[int' → logprob: -13.62617301940918
    4. '=int' → logprob: -14.12617301940918
    5. '```' → logprob: -14.12617301940918
    6. '<int' → logprob: -16.25117301940918
    7. ':int' → logprob: -16.37617301940918
    8. ' int' → logprob: -16.75117301940918
    9. ',int' → logprob: -16.75117301940918
    10. 'def' → logprob: -17.50117301940918

Token 2390: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0616949237883091
    2. 'input' → logprob: -3.186694860458374
    3. ',input' → logprob: -4.311695098876953
    4. '(int' → logprob: -5.686695098876953
    5. '=input' → logprob: -7.311695098876953
    6. 'int' → logprob: -7.811695098876953
    7. '<input' → logprob: -8.436695098876953
    8. '[input' → logprob: -8.811695098876953
    9. 'import' → logprob: -9.561695098876953
    10. ',' → logprob: -10.061695098876953

Token 2391: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141451060771942
    2. 'int' → logprob: -1.7014144659042358
    3. ' input' → logprob: -13.826414108276367
    4. '<input' → logprob: -15.826414108276367
    5. 'import' → logprob: -16.701414108276367
    6. '(int' → logprob: -17.451414108276367
    7. '(input' → logprob: -17.576414108276367
    8. '=input' → logprob: -17.576414108276367
    9. ' int' → logprob: -17.826414108276367
    10. '=int' → logprob: -17.951414108276367

Token 2392: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0027192833367735147
    2. '.split' → logprob: -6.627719402313232
    3. '__.' → logprob: -7.002719402313232
    4. 'split' → logprob: -9.252718925476074
    5. '[].' → logprob: -9.252718925476074
    6. '().__' → logprob: -9.627718925476074
    7. '()' → logprob: -11.002718925476074
    8. '.append' → logprob: -11.252718925476074
    9. '(range' → logprob: -11.252718925476074
    10. '.' → logprob: -11.252718925476074

Token 2393: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.869017852295656e-06
    2. 'input' → logprob: -12.250006675720215
    3. 'spl' → logprob: -13.500006675720215
    4. 'strip' → logprob: -15.625006675720215
    5. ' split' → logprob: -15.625006675720215
    6. '_split' → logprob: -16.75000762939453
    7. '.split' → logprob: -16.87500762939453
    8. '(split' → logprob: -17.12500762939453
    9. 'range' → logprob: -17.25000762939453
    10. ')' → logprob: -17.50000762939453

Token 2394: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.000443420372903347
    2. '()[' → logprob: -8.250443458557129
    3. '()))
' → logprob: -9.875443458557129
    4. '))' → logprob: -10.250443458557129
    5. '())' → logprob: -10.375443458557129
    6. '()' → logprob: -10.375443458557129
    7. '   ' → logprob: -11.500443458557129
    8. '())).' → logprob: -12.250443458557129
    9. '()));' → logprob: -12.750443458557129
    10. '())[' → logprob: -13.000443458557129

Token 2395: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4567772448062897
    2. 'for' → logprob: -1.3317772150039673
    3. '   ' → logprob: -2.331777334213257
    4. ')' → logprob: -5.456777095794678
    5. '       ' → logprob: -7.456777095794678
    6. '()' → logprob: -7.831777095794678
    7. '	for' → logprob: -8.831777572631836
    8. 'def' → logprob: -9.581777572631836
    9. ' in' → logprob: -10.456777572631836
    10. '<|end|>' → logprob: -11.831777572631836

Token 2396: ' _' (ID: 1175)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3248898983001709
    2. 'range' → logprob: -1.324889898300171
    3. ' in' → logprob: -5.07489013671875
    4. '_range' → logprob: -5.82489013671875
    5. ' range' → logprob: -6.69989013671875
    6. '_' → logprob: -7.44989013671875
    7. 'int' → logprob: -8.32489013671875
    8. 'for' → logprob: -9.19989013671875
    9. '(range' → logprob: -9.57489013671875
    10. '   ' → logprob: -10.94989013671875

Token 2397: ' in' (ID: 306)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.17792409658432007
    2. '_' → logprob: -2.177924156188965
    3. 'range' → logprob: -3.177924156188965
    4. '_Q' → logprob: -5.302924156188965
    5. 'in' → logprob: -6.677924156188965
    6. ' range' → logprob: -6.927924156188965
    7. ' in' → logprob: -8.177924156188965
    8. 'Q' → logprob: -8.552924156188965
    9. '(range' → logprob: -9.302924156188965
    10. '_in' → logprob: -9.927924156188965

Token 2398: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08327571302652359
    2. '_range' → logprob: -2.58327579498291
    3. ' range' → logprob: -5.95827579498291
    4. '_' → logprob: -6.33327579498291
    5. '_query' → logprob: -12.45827579498291
    6. '(range' → logprob: -12.58327579498291
    7. 'in' → logprob: -12.95827579498291
    8. '_Q' → logprob: -13.45827579498291
    9. '_in' → logprob: -13.58327579498291
    10. '_=' → logprob: -14.45827579498291

Token 2399: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.3074539601802826
    2. 'Q' → logprob: -1.807453989982605
    3. 'range' → logprob: -2.3074538707733154
    4. '_Q' → logprob: -7.6824541091918945
    5. ' range' → logprob: -8.057454109191895
    6. '(range' → logprob: -8.807454109191895
    7. '(' → logprob: -10.182454109191895
    8. '   ' → logprob: -10.307454109191895
    9. 'Range' → logprob: -10.557454109191895
    10. ',Q' → logprob: -10.932454109191895

Token 2400: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.4143994152545929
    2. ')]' → logprob: -1.7893993854522705
    3. ']
' → logprob: -2.1643993854522705
    4. '   ' → logprob: -3.5393993854522705
    5. ']' → logprob: -4.78939962387085
    6. '):
' → logprob: -4.78939962387085
    7. ')' → logprob: -5.03939962387085
    8. '()]
' → logprob: -5.91439962387085
    9. ')
' → logprob: -7.03939962387085
    10. ')]
' → logprob: -7.78939962387085

Token 2401: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10036173462867737
    2. 'for' → logprob: -2.3503618240356445
    3. ' for' → logprob: -9.350361824035645
    4. 'def' → logprob: -10.100361824035645
    5. '```' → logprob: -10.975361824035645
    6. '	for' → logprob: -11.975361824035645
    7. '<|end|>' → logprob: -14.100361824035645
    8. 'For' → logprob: -14.100361824035645
    9. '#' → logprob: -14.850361824035645
    10. '       ' → logprob: -15.100361824035645

Token 2402: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -15.500000953674316
    3. 'def' → logprob: -15.500000953674316
    4. '   ' → logprob: -15.875000953674316
    5. 'from' → logprob: -17.5
    6. '	for' → logprob: -18.0
    7. '```' → logprob: -18.375
    8. 'For' → logprob: -19.625
    9. '
' → logprob: -20.25
    10. '``' → logprob: -21.0

Token 2403: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0012814223300665617
    2. ' p' → logprob: -6.751281261444092
    3. 'px' → logprob: -9.87628173828125
    4. 'i' → logprob: -11.12628173828125
    5. 's' → logprob: -11.12628173828125
    6. '_p' → logprob: -11.62628173828125
    7. '(p' → logprob: -12.25128173828125
    8. 'a' → logprob: -12.37628173828125
    9. 'q' → logprob: -12.50128173828125
    10. '_' → logprob: -13.25128173828125

Token 2404: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005831979680806398
    2. '1' → logprob: -5.630832195281982
    3. '2' → logprob: -6.505832195281982
    4. '3' → logprob: -7.380832195281982
    5. '
' → logprob: -10.255831718444824
    6. '[' → logprob: -10.755831718444824
    7. '```' → logprob: -11.255831718444824
    8. 'p' → logprob: -11.505831718444824
    9. '4' → logprob: -12.130831718444824
    10. '(' → logprob: -12.318331718444824

Token 2405: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00011355629976605996
    2. 'y' → logprob: -9.125113487243652
    3. ',' → logprob: -12.750113487243652
    4. '1' → logprob: -14.000113487243652
    5. '0' → logprob: -15.000113487243652
    6. 'py' → logprob: -16.12511444091797
    7. 'p' → logprob: -16.37511444091797
    8. '```' → logprob: -16.62511444091797
    9. 'px' → logprob: -17.00011444091797
    10. '   ' → logprob: -17.00011444091797

Token 2406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034142236108891666
    2. ',p' → logprob: -8.000341415405273
    3. 'p' → logprob: -12.250341415405273
    4. ' ,' → logprob: -13.750341415405273
    5. '_,' → logprob: -17.750341415405273
    6. ' p' → logprob: -17.875341415405273
    7. ',
' → logprob: -18.625341415405273
    8. ' in' → logprob: -18.750341415405273
    9. '<|end|>' → logprob: -18.750341415405273
    10. 'in' → logprob: -19.125341415405273

Token 2407: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018150994554162025
    2. ' p' → logprob: -4.018150806427002
    3. '   ' → logprob: -14.64315128326416
    4. '<|end|>' → logprob: -14.89315128326416
    5. '<|end|>' → logprob: -16.143150329589844
    6. '_p' → logprob: -16.393150329589844
    7. '<p' → logprob: -17.018150329589844
    8. '	p' → logprob: -17.143150329589844
    9. ' ' → logprob: -17.268150329589844
    10. '    ' → logprob: -17.518150329589844

Token 2408: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002218891866505146
    2. '1' → logprob: -6.127218723297119
    3. 'p' → logprob: -10.377219200134277
    4. '```' → logprob: -13.877219200134277
    5. '2' → logprob: -14.252219200134277
    6. 'y' → logprob: -14.752219200134277
    7. '[' → logprob: -16.12721824645996
    8. '``' → logprob: -16.25221824645996
    9. '
' → logprob: -16.37721824645996
    10. 'py' → logprob: -16.37721824645996

Token 2409: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002476016292348504
    2. ',' → logprob: -7.002476215362549
    3. 'p' → logprob: -7.377476215362549
    4. '1' → logprob: -7.877476215362549
    5. 'x' → logprob: -7.877476215362549
    6. '0' → logprob: -8.87747573852539
    7. ',y' → logprob: -11.12747573852539
    8. ' y' → logprob: -11.75247573852539
    9. '   ' → logprob: -12.62747573852539
    10. '```' → logprob: -12.87747573852539

Token 2410: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017134972149506211
    2. ',p' → logprob: -6.376713275909424
    3. 'p' → logprob: -11.751713752746582
    4. ' ,' → logprob: -12.626713752746582
    5. '_,' → logprob: -15.876713752746582
    6. ' p' → logprob: -17.501712799072266
    7. ',
' → logprob: -17.876712799072266
    8. '   ' → logprob: -18.001712799072266
    9. 's' → logprob: -18.626712799072266
    10. '0' → logprob: -19.126712799072266

Token 2411: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.386901319026947
    2. ' p' → logprob: -1.1369013786315918
    3. '   ' → logprob: -10.511900901794434
    4. '    ' → logprob: -13.261900901794434
    5. ' ' → logprob: -14.261900901794434
    6. '  ' → logprob: -15.386900901794434
    7. ',' → logprob: -15.636900901794434
    8. '	p' → logprob: -15.761900901794434
    9. ',p' → logprob: -16.76190185546875
    10. '       ' → logprob: -16.76190185546875

Token 2412: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006212961161509156
    2. 'p' → logprob: -7.500621318817139
    3. '0' → logprob: -10.25062084197998
    4. 'y' → logprob: -11.00062084197998
    5. '<|end|>' → logprob: -11.62562084197998
    6. '2' → logprob: -13.12562084197998
    7. '3' → logprob: -13.25062084197998
    8. '_' → logprob: -13.62562084197998
    9. '```' → logprob: -14.25062084197998
    10. ' ' → logprob: -15.43812084197998

Token 2413: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.364928700961173e-05
    2. ',' → logprob: -9.375093460083008
    3. 'y' → logprob: -11.750093460083008
    4. 'p' → logprob: -15.375093460083008
    5. '0' → logprob: -15.375093460083008
    6. '1' → logprob: -16.125093460083008
    7. '#' → logprob: -16.250093460083008
    8. '<|end|>' → logprob: -16.250093460083008
    9. '```' → logprob: -16.875093460083008
    10. ',p' → logprob: -17.500093460083008

Token 2414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007438759785145521
    2. ',p' → logprob: -7.375743865966797
    3. 'p' → logprob: -9.125743865966797
    4. ' ,' → logprob: -11.875743865966797
    5. ',
' → logprob: -14.500743865966797
    6. '_,' → logprob: -14.875743865966797
    7. ' p' → logprob: -15.750743865966797
    8. '...,' → logprob: -16.625743865966797
    9. '0' → logprob: -16.750743865966797
    10. '1' → logprob: -16.750743865966797

Token 2415: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00029613598599098623
    2. ' p' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.375295639038086
    4. ' ' → logprob: -18.000295639038086
    5. '    ' → logprob: -19.250295639038086
    6. '	p' → logprob: -19.250295639038086
    7. '  ' → logprob: -19.250295639038086
    8. '
' → logprob: -19.875295639038086
    9. '_p' → logprob: -20.000295639038086
    10. '<|end|>' → logprob: -20.000295639038086

Token 2416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006710976012982428
    2. 'p' → logprob: -7.750670909881592
    3. 'y' → logprob: -8.87567138671875
    4. '<|end|>' → logprob: -9.25067138671875
    5. '0' → logprob: -14.62567138671875
    6. '```' → logprob: -14.75067138671875
    7. '...' → logprob: -15.43817138671875
    8. '<|end|>' → logprob: -15.56317138671875
    9. '' → logprob: -15.62567138671875
    10. '{-#' → logprob: -15.87567138671875

Token 2417: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04810918867588043
    2. '1' → logprob: -3.173109292984009
    3. 'p' → logprob: -5.42310905456543
    4. '<|end|>' → logprob: -7.79810905456543
    5. '   ' → logprob: -8.79810905456543
    6. ',' → logprob: -9.29810905456543
    7. '#' → logprob: -12.04810905456543
    8. '```' → logprob: -12.67310905456543
    9. 'x' → logprob: -13.04810905456543
    10. '<|end|>' → logprob: -13.29810905456543

Token 2418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014609156642109156
    2. ',p' → logprob: -8.87514591217041
    3. ' ,' → logprob: -12.25014591217041
    4. 'p' → logprob: -13.87514591217041
    5. ' in' → logprob: -15.37514591217041
    6. ',
' → logprob: -17.000146865844727
    7. '_,' → logprob: -17.250146865844727
    8. '   ' → logprob: -17.875146865844727
    9. '<|end|>' → logprob: -18.000146865844727
    10. 'in' → logprob: -18.125146865844727

Token 2419: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02326434850692749
    2. ' p' → logprob: -3.7732644081115723
    3. '   ' → logprob: -11.148263931274414
    4. '    ' → logprob: -13.273263931274414
    5. ' ' → logprob: -14.148263931274414
    6. '  ' → logprob: -14.773263931274414
    7. '       ' → logprob: -14.898263931274414
    8. '<p' → logprob: -15.273263931274414
    9. '	p' → logprob: -15.398263931274414
    10. '
' → logprob: -15.648263931274414

Token 2420: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14305627346038818
    2. '2' → logprob: -2.0180563926696777
    3. '1' → logprob: -8.14305591583252
    4. 'p' → logprob: -9.39305591583252
    5. '3' → logprob: -12.51805591583252
    6. '```' → logprob: -13.89305591583252
    7. 'y' → logprob: -14.89305591583252
    8. '_' → logprob: -14.89305591583252
    9. '
' → logprob: -15.14305591583252
    10. ',' → logprob: -15.51805591583252

Token 2421: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2899346351623535
    2. 'y' → logprob: -1.5399346351623535
    3. ',' → logprob: -4.0399346351623535
    4. '2' → logprob: -4.5399346351623535
    5. '0' → logprob: -5.1649346351623535
    6. 'p' → logprob: -5.9149346351623535
    7. 'py' → logprob: -9.289934158325195
    8. '<|end|>' → logprob: -9.289934158325195
    9. ',y' → logprob: -9.539934158325195
    10. ',p' → logprob: -10.164934158325195

Token 2422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029065259150229394
    2. ',p' → logprob: -8.250290870666504
    3. 'p' → logprob: -11.375290870666504
    4. 'y' → logprob: -11.625290870666504
    5. ' ,' → logprob: -12.000290870666504
    6. ',y' → logprob: -13.625290870666504
    7. '0' → logprob: -14.125290870666504
    8. '   ' → logprob: -15.125290870666504
    9. '_,' → logprob: -15.250290870666504
    10. ',
' → logprob: -16.000289916992188

Token 2423: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002805110299959779
    2. ' p' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.502805709838867
    4. '   ' → logprob: -16.877805709838867
    5. '	p' → logprob: -18.002805709838867
    6. '...' → logprob: -18.627805709838867
    7. '  ' → logprob: -18.877805709838867
    8. '    ' → logprob: -18.877805709838867
    9. '<|end|>' → logprob: -19.002805709838867
    10. 'user' → logprob: -19.752805709838867

Token 2424: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011863824911415577
    2. 'y' → logprob: -4.761863708496094
    3. '1' → logprob: -6.011863708496094
    4. 'p' → logprob: -7.261863708496094
    5. '```' → logprob: -10.386863708496094
    6. '<|end|>' → logprob: -10.511863708496094
    7. 'py' → logprob: -11.886863708496094
    8. '0' → logprob: -12.636863708496094
    9. '_' → logprob: -12.886863708496094
    10. '3' → logprob: -13.011863708496094

Token 2425: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.015184793621301651
    2. 'p' → logprob: -4.5151848793029785
    3. '2' → logprob: -6.2651848793029785
    4. '<|end|>' → logprob: -6.3901848793029785
    5. '<|end|>' → logprob: -9.64018440246582
    6. '0' → logprob: -9.76518440246582
    7. ',' → logprob: -9.76518440246582
    8. '1' → logprob: -9.89018440246582
    9. '...' → logprob: -10.01518440246582
    10. 'Sorry' → logprob: -10.39018440246582

Token 2426: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052618607878685
    2. ',p' → logprob: -5.2552618980407715
    3. ' ,' → logprob: -11.380261421203613
    4. 'p' → logprob: -12.255261421203613
    5. '       ' → logprob: -13.130261421203613
    6. '<|end|>' → logprob: -13.380261421203613
    7. '(p' → logprob: -13.505261421203613
    8. '```' → logprob: -13.880261421203613
    9. ',line' → logprob: -14.380261421203613
    10. ' in' → logprob: -14.380261421203613

Token 2427: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023279955610632896
    2. ' p' → logprob: -3.773279905319214
    3. '   ' → logprob: -10.523280143737793
    4. '    ' → logprob: -12.648280143737793
    5. ' ' → logprob: -14.023280143737793
    6. '       ' → logprob: -14.023280143737793
    7. '  ' → logprob: -14.648280143737793
    8. '        ' → logprob: -14.898280143737793
    9. '           ' → logprob: -14.898280143737793
    10. '0' → logprob: -15.148280143737793

Token 2428: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00037728800089098513
    2. '1' → logprob: -8.000377655029297
    3. '3' → logprob: -11.000377655029297
    4. '<|end|>' → logprob: -11.500377655029297
    5. '[' → logprob: -12.500377655029297
    6. 'p' → logprob: -12.750377655029297
    7. '_' → logprob: -13.125377655029297
    8. '```' → logprob: -13.875377655029297
    9. '0' → logprob: -14.000377655029297
    10. ' ' → logprob: -14.000377655029297

Token 2429: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4771971106529236
    2. ',' → logprob: -0.9771971106529236
    3. 'y' → logprob: -6.727197170257568
    4. '0' → logprob: -6.977197170257568
    5. '[' → logprob: -7.852197170257568
    6. ',x' → logprob: -8.97719669342041
    7. ' ,' → logprob: -9.22719669342041
    8. '[...,' → logprob: -9.22719669342041
    9. '1' → logprob: -9.72719669342041
    10. ',y' → logprob: -9.97719669342041

Token 2430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008657239377498627
    2. ',p' → logprob: -4.758657455444336
    3. ' ,' → logprob: -10.508657455444336
    4. ',y' → logprob: -11.883657455444336
    5. 'p' → logprob: -12.633657455444336
    6. ',
' → logprob: -13.508657455444336
    7. ',line' → logprob: -13.508657455444336
    8. ',user' → logprob: -14.133657455444336
    9. '0' → logprob: -15.758657455444336
    10. ',m' → logprob: -15.883657455444336

Token 2431: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02324547804892063
    2. ' p' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.523244857788086
    4. ' ' → logprob: -18.898244857788086
    5. '```' → logprob: -19.148244857788086
    6. ',p' → logprob: -19.273244857788086
    7. '	p' → logprob: -19.273244857788086
    8. '$p' → logprob: -19.398244857788086
    9. '(p' → logprob: -20.148244857788086
    10. '1' → logprob: -20.148244857788086

Token 2432: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.306760805164231e-05
    2. 'p' → logprob: -12.00001335144043
    3. '<|end|>' → logprob: -12.62501335144043
    4. '```' → logprob: -13.25001335144043
    5. ' ' → logprob: -15.12501335144043
    6. '_' → logprob: -15.37501335144043
    7. '３' → logprob: -15.87501335144043
    8. '   ' → logprob: -16.06251335144043
    9. '۳' → logprob: -16.12501335144043
    10. '``' → logprob: -16.18751335144043

Token 2433: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00027480217977426946
    2. ',' → logprob: -8.750274658203125
    3. 'p' → logprob: -10.125274658203125
    4. 'x' → logprob: -10.500274658203125
    5. '_y' → logprob: -11.125274658203125
    6. 'py' → logprob: -11.625274658203125
    7. '<|end|>' → logprob: -12.000274658203125
    8. ' y' → logprob: -12.500274658203125
    9. '1' → logprob: -12.750274658203125
    10. '3' → logprob: -12.875274658203125

Token 2434: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10053703188896179
    2. 'in' → logprob: -2.350537061691284
    3. 'for' → logprob: -9.100537300109863
    4. ',' → logprob: -9.350537300109863
    5. ':' → logprob: -10.225537300109863
    6. ')' → logprob: -10.225537300109863
    7. '   ' → logprob: -10.600537300109863
    8. ' for' → logprob: -11.475537300109863
    9. ':
' → logprob: -11.850537300109863
    10. '	in' → logprob: -12.350537300109863

Token 2435: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -1.1041145626222715e-05
    2. ' Query' → logprob: -11.750011444091797
    3. '(Query' → logprob: -14.500011444091797
    4. 'Question' → logprob: -14.625011444091797
    5. '	Query' → logprob: -14.625011444091797
    6. '_Query' → logprob: -14.625011444091797
    7. '<Query' → logprob: -15.250011444091797
    8. '[' → logprob: -15.375011444091797
    9. '.Query' → logprob: -15.375011444091797
    10. 'range' → logprob: -16.500011444091797

Token 2436: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7148176431655884
    2. ':
' → logprob: -0.8398176431655884
    3. ':' → logprob: -2.589817523956299
    4. ',' → logprob: -6.214817523956299
    5. '):
' → logprob: -7.339817523956299
    6. 's' → logprob: -7.589817523956299
    7. '   ' → logprob: -7.964817523956299
    8. '#' → logprob: -9.589818000793457
    9. '<|end|>' → logprob: -9.589818000793457
    10. ' s' → logprob: -10.464818000793457

Token 2437: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00625238474458456
    2. ':' → logprob: -5.381252288818359
    3. '   ' → logprob: -7.256252288818359
    4. '<|end|>' → logprob: -7.881252288818359
    5. ':
' → logprob: -8.25625228881836
    6. 's' → logprob: -9.88125228881836
    7. '```' → logprob: -9.88125228881836
    8. '#' → logprob: -10.50625228881836
    9. '           ' → logprob: -10.75625228881836
    10. '):' → logprob: -10.75625228881836

Token 2438: ' s' (ID: 265)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06847597658634186
    2. 's' (adapté à ' s') → logprob: -2.8184759616851807
    3. '       ' → logprob: -5.31847620010376
    4. '   ' → logprob: -7.31847620010376
    5. 'p' → logprob: -7.69347620010376
    6. 'a' → logprob: -8.193475723266602
    7. 'print' → logprob: -9.443475723266602
    8. ' l' → logprob: -10.318475723266602
    9. '           ' → logprob: -10.943475723266602
    10. '```' → logprob: -11.068475723266602

Token 2439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031770815257914364
    2. ' =' → logprob: -9.125317573547363
    3. 't' → logprob: -9.875317573547363
    4. 's' → logprob: -10.500317573547363
    5. '=' → logprob: -10.875317573547363
    6. '2' → logprob: -10.875317573547363
    7. 'egment' → logprob: -10.875317573547363
    8. '```' → logprob: -11.125317573547363
    9. '   ' → logprob: -11.500317573547363
    10. '       ' → logprob: -11.750317573547363

Token 2440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1426965445280075
    2. '=' → logprob: -2.0176966190338135
    3. 'a' → logprob: -11.892696380615234
    4. '   ' → logprob: -12.517696380615234
    5. ')' → logprob: -12.892696380615234
    6. ',' → logprob: -13.267696380615234
    7. 's' → logprob: -13.392696380615234
    8. '=a' → logprob: -13.767696380615234
    9. ' ' → logprob: -13.892696380615234
    10. '#' → logprob: -14.517696380615234

Token 2441: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.3306015716807451e-05
    2. ' Segment' → logprob: -11.25001335144043
    3. 'Point' → logprob: -15.25001335144043
    4. 'Seg' → logprob: -17.87501335144043
    5. 'Section' → logprob: -20.50001335144043
    6. '_segment' → logprob: -20.50001335144043
    7. 'Line' → logprob: -20.87501335144043
    8. '   ' → logprob: -21.00001335144043
    9. 'Span' → logprob: -21.37501335144043
    10. 'Segments' → logprob: -21.62501335144043

Token 2442: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -2.176947600673884e-05
    2. 'Point' → logprob: -10.750021934509277
    3. '<Point' → logprob: -15.750021934509277
    4. '	Point' → logprob: -16.87502098083496
    5. ' Point' → logprob: -17.00002098083496
    6. '(
' → logprob: -17.50002098083496
    7. '(' → logprob: -17.75002098083496
    8. '.Point' → logprob: -18.25002098083496
    9. ' (' → logprob: -19.25002098083496
    10. '((' → logprob: -19.37502098083496

Token 2443: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.34341439604759216
    2. '(Point' → logprob: -1.3434144258499146
    3. 'Point' → logprob: -4.093414306640625
    4. 'p' → logprob: -4.343414306640625
    5. '<Point' → logprob: -11.968414306640625
    6. ' p' → logprob: -13.093414306640625
    7. 'Points' → logprob: -13.218414306640625
    8. '.Point' → logprob: -13.218414306640625
    9. 's' → logprob: -13.218414306640625
    10. '	Point' → logprob: -13.343414306640625

Token 2444: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3037450611591339
    2. '2' → logprob: -1.4287450313568115
    3. 'p' → logprob: -3.9287450313568115
    4. '3' → logprob: -6.053745269775391
    5. '(p' → logprob: -8.67874526977539
    6. 's' → logprob: -9.42874526977539
    7. '1' → logprob: -9.80374526977539
    8. '(' → logprob: -11.67874526977539
    9. ' p' → logprob: -12.55374526977539
    10. '``' → logprob: -13.92874526977539

Token 2445: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1041145626222715e-05
    2. '0' → logprob: -11.500011444091797
    3. '1' → logprob: -14.375011444091797
    4. 's' → logprob: -16.250011444091797
    5. 'y' → logprob: -17.000011444091797
    6. '[' → logprob: -17.375011444091797
    7. ' x' → logprob: -17.500011444091797
    8. '2' → logprob: -17.500011444091797
    9. '<|end|>' → logprob: -17.500011444091797
    10. '```' → logprob: -18.250011444091797

Token 2446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05048297345638275
    2. 'p' → logprob: -3.050482988357544
    3. ',p' → logprob: -6.300482749938965
    4. ' p' → logprob: -10.300482749938965
    5. ' ,' → logprob: -10.925482749938965
    6. '(p' → logprob: -12.925482749938965
    7. 's' → logprob: -13.425482749938965
    8. '0' → logprob: -13.800482749938965
    9. ',y' → logprob: -14.675482749938965
    10. '(' → logprob: -15.050482749938965

Token 2447: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0008045066497288644
    2. ' p' → logprob: -7.125804424285889
    3. '<p' → logprob: -17.875804901123047
    4. '	p' → logprob: -18.250804901123047
    5. 'py' → logprob: -18.750804901123047
    6. '<|end|>' → logprob: -18.875804901123047
    7. ')p' → logprob: -19.375804901123047
    8. ' ' → logprob: -19.625804901123047
    9. '   ' → logprob: -19.750804901123047
    10. ',' → logprob: -20.000804901123047

Token 2448: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3154732882976532
    2. '0' → logprob: -1.4404733180999756
    3. '1' → logprob: -3.4404733180999756
    4. 'p' → logprob: -6.5654730796813965
    5. '<|end|>' → logprob: -8.565473556518555
    6. 's' → logprob: -11.440473556518555
    7. ',' → logprob: -11.815473556518555
    8. '```' → logprob: -12.127973556518555
    9. 'm' → logprob: -12.565473556518555
    10. ')' → logprob: -12.752973556518555

Token 2449: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00018518301658332348
    2. '1' → logprob: -8.750185012817383
    3. '<|end|>' → logprob: -11.875185012817383
    4. '5' → logprob: -12.000185012817383
    5. ' y' → logprob: -12.625185012817383
    6. '0' → logprob: -12.750185012817383
    7. ',' → logprob: -12.875185012817383
    8. ')' → logprob: -14.500185012817383
    9. '```' → logprob: -14.500185012817383
    10. ',y' → logprob: -14.937685012817383

Token 2450: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06994243711233139
    2. ',' → logprob: -2.6949424743652344
    3. ')' → logprob: -13.694942474365234
    4. 'p' → logprob: -13.819942474365234
    5. ',p' → logprob: -13.819942474365234
    6. '],' → logprob: -14.069942474365234
    7. ' ,' → logprob: -14.944942474365234
    8. '),(' → logprob: -14.944942474365234
    9. '>,' → logprob: -15.069942474365234
    10. 'def' → logprob: -15.819942474365234

Token 2451: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -7.672236824873835e-05
    2. ' Point' → logprob: -9.500076293945312
    3. '(Point' → logprob: -13.250076293945312
    4. '	Point' → logprob: -19.625076293945312
    5. 'Segment' → logprob: -21.000076293945312
    6. '<Point' → logprob: -21.875076293945312
    7. '_Point' → logprob: -22.125076293945312
    8. '.Point' → logprob: -23.375076293945312
    9. '   ' → logprob: -23.875076293945312
    10. '_point' → logprob: -24.500076293945312

Token 2452: '(p' (ID: 2407)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3798816204071045
    2. '(Point' → logprob: -1.6298816204071045
    3. '(p' → logprob: -2.1298816204071045
    4. 'p' → logprob: -6.754881858825684
    5. '<Point' → logprob: -10.004881858825684
    6. ' Point' → logprob: -10.629881858825684
    7. '_Point' → logprob: -12.254881858825684
    8. '(point' → logprob: -12.754881858825684
    9. '.Point' → logprob: -12.754881858825684
    10. '	Point' → logprob: -13.004881858825684

Token 2453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01618533954024315
    2. '3' → logprob: -4.141185283660889
    3. 'p' → logprob: -9.391185760498047
    4. '0' → logprob: -10.266185760498047
    5. 'x' → logprob: -10.891185760498047
    6. 's' → logprob: -12.328685760498047
    7. '2' → logprob: -12.578685760498047
    8. '```' → logprob: -14.016185760498047
    9. '(p' → logprob: -14.266185760498047
    10. '``' → logprob: -15.141185760498047

Token 2454: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.706686690449715e-05
    2. '1' → logprob: -9.625066757202148
    3. '(x' → logprob: -14.625066757202148
    4. 'Point' → logprob: -15.625066757202148
    5. '(Point' → logprob: -15.750066757202148
    6. '0' → logprob: -16.37506675720215
    7. '```' → logprob: -16.87506675720215
    8. '$x' → logprob: -17.37506675720215
    9. '_x' → logprob: -17.62506675720215
    10. ' x' → logprob: -17.62506675720215

Token 2455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012321392074227333
    2. 'p' → logprob: -4.512321472167969
    3. ',p' → logprob: -6.887321472167969
    4. 'y' → logprob: -8.637321472167969
    5. ' ,' → logprob: -10.012321472167969
    6. '(p' → logprob: -11.762321472167969
    7. ',y' → logprob: -12.012321472167969
    8. ' p' → logprob: -12.512321472167969
    9. 'py' → logprob: -12.762321472167969
    10. '),' → logprob: -13.012321472167969

Token 2456: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00014001218369230628
    2. ' p' → logprob: -8.875140190124512
    3. '   ' → logprob: -17.000139236450195
    4. '
' → logprob: -17.000139236450195
    5. '
' → logprob: -17.312639236450195
    6. '```' → logprob: -17.625139236450195
    7. '<p' → logprob: -17.937639236450195
    8. '1' → logprob: -18.062639236450195
    9. '0' → logprob: -18.375139236450195
    10. ' ' → logprob: -18.437639236450195

Token 2457: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.06222446635365486
    2. '1' → logprob: -2.8122243881225586
    3. 'p' → logprob: -9.312224388122559
    4. '<|end|>' → logprob: -9.562224388122559
    5. '0' → logprob: -10.937224388122559
    6. 'ay' → logprob: -11.687224388122559
    7. 'ython' → logprob: -11.937224388122559
    8. 'x' → logprob: -12.312224388122559
    9. '	y' → logprob: -12.562224388122559
    10. '_y' → logprob: -12.562224388122559

Token 2458: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002777822664938867
    2. '1' → logprob: -9.250277519226074
    3. ',' → logprob: -9.625277519226074
    4. ')' → logprob: -9.875277519226074
    5. 'x' → logprob: -10.875277519226074
    6. '<|end|>' → logprob: -11.500277519226074
    7. '```' → logprob: -12.000277519226074
    8. '5' → logprob: -12.250277519226074
    9. '0' → logprob: -12.500277519226074
    10. '),' → logprob: -12.500277519226074

Token 2459: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09705539792776108
    2. ')
' → logprob: -2.472055435180664
    3. '),' → logprob: -5.847055435180664
    4. '       ' → logprob: -6.222055435180664
    5. ')
' → logprob: -6.847055435180664
    6. '))' → logprob: -6.847055435180664
    7. 's' → logprob: -7.347055435180664
    8. ')s' → logprob: -8.347055435180664
    9. '   ' → logprob: -9.222055435180664
    10. ' s' → logprob: -10.847055435180664

Token 2460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5769373774528503
    2. 's' → logprob: -0.8269373774528503
    3. ' s' → logprob: -7.326937198638916
    4. '   ' → logprob: -8.076937675476074
    5. ' ' → logprob: -11.451937675476074
    6. '           ' → logprob: -11.576937675476074
    7. '<|end|>' → logprob: -12.951937675476074
    8. '        ' → logprob: -13.076937675476074
    9. '#' → logprob: -13.451937675476074
    10. '      ' → logprob: -14.076937675476074

Token 2461: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.004887534771114588
    2. '       ' → logprob: -5.504887580871582
    3. ' s' → logprob: -7.129887580871582
    4. '   ' → logprob: -12.004887580871582
    5. '           ' → logprob: -13.504887580871582
    6. '        ' → logprob: -16.129886627197266
    7. ' ' → logprob: -16.129886627197266
    8. '      ' → logprob: -16.254886627197266
    9. '     ' → logprob: -16.504886627197266
    10. '    ' → logprob: -17.129886627197266

Token 2462: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. '3' → logprob: -11.87501049041748
    3. 's' → logprob: -12.87501049041748
    4. '0' → logprob: -15.75001049041748
    5. '       ' → logprob: -16.000009536743164
    6. '1' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '_' → logprob: -17.000009536743164
    9. '=' → logprob: -17.375009536743164
    10. ' ' → logprob: -17.375009536743164

Token 2463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740813374519348
    2. ' =' → logprob: -0.9740813374519348
    3. '<|end|>' → logprob: -13.349081039428711
    4. ')' → logprob: -13.474081039428711
    5. 's' → logprob: -14.724081039428711
    6. '<|end|>' → logprob: -15.349081039428711
    7. '＝' → logprob: -16.22408103942871
    8. '=
' → logprob: -16.47408103942871
    9. 'a' → logprob: -16.72408103942871
    10. '```' → logprob: -17.09908103942871

Token 2464: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -4.842555426876061e-06
    2. ' Segment' → logprob: -12.250004768371582
    3. 'Point' → logprob: -17.0000057220459
    4. 'Seg' → logprob: -19.6250057220459
    5. 'Segments' → logprob: -21.0000057220459
    6. 'Section' → logprob: -21.0000057220459
    7. 'segment' → logprob: -21.3750057220459
    8. 'Sequence' → logprob: -22.2500057220459
    9. '_segment' → logprob: -22.3750057220459
    10. 'Sample' → logprob: -23.0000057220459

Token 2465: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.00317783304490149
    2. 'Point' → logprob: -5.753177642822266
    3. ' Point' → logprob: -16.253177642822266
    4. '<Point' → logprob: -17.128177642822266
    5. '.Point' → logprob: -17.378177642822266
    6. '	Point' → logprob: -18.253177642822266
    7. '```' → logprob: -19.503177642822266
    8. '_Point' → logprob: -19.628177642822266
    9. 'Segment' → logprob: -20.128177642822266
    10. '(
' → logprob: -20.503177642822266

Token 2466: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -7.660315895918757e-05
    2. '(Point' → logprob: -9.625076293945312
    3. 'p' → logprob: -11.875076293945312
    4. 'Point' → logprob: -12.625076293945312
    5. '(P' → logprob: -15.875076293945312
    6. '<p' → logprob: -16.000076293945312
    7. '(point' → logprob: -17.125076293945312
    8. '(
' → logprob: -17.875076293945312
    9. ' (' → logprob: -18.000076293945312
    10. '<Point' → logprob: -18.125076293945312

Token 2467: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7385154428193346e-05
    2. 'p' → logprob: -10.25003719329834
    3. '0' → logprob: -14.00003719329834
    4. 's' → logprob: -14.75003719329834
    5. '```' → logprob: -15.37503719329834
    6. ' ' → logprob: -15.87503719329834
    7. '``' → logprob: -16.375038146972656
    8. '3' → logprob: -16.375038146972656
    9. ' p' → logprob: -16.875038146972656
    10. '   ' → logprob: -17.375038146972656

Token 2468: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005651841638609767
    2. 'p' → logprob: -7.500565052032471
    3. '0' → logprob: -12.250565528869629
    4. 's' → logprob: -12.750565528869629
    5. '2' → logprob: -13.500565528869629
    6. '(p' → logprob: -14.125565528869629
    7. 'px' → logprob: -14.375565528869629
    8. 'q' → logprob: -15.000565528869629
    9. '```' → logprob: -15.250565528869629
    10. 'm' → logprob: -15.500565528869629

Token 2469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019972586596850306
    2. '(' → logprob: -9.375199317932129
    3. ',p' → logprob: -9.500199317932129
    4. '(p' → logprob: -10.875199317932129
    5. 'p' → logprob: -11.000199317932129
    6. ' ,' → logprob: -12.625199317932129
    7. '<|end|>' → logprob: -14.750199317932129
    8. ',
' → logprob: -15.625199317932129
    9. ' p' → logprob: -16.125200271606445
    10. '(),' → logprob: -16.250200271606445

Token 2470: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011047935113310814
    2. ' p' → logprob: -4.511047840118408
    3. 's' → logprob: -16.63604736328125
    4. '<|end|>' → logprob: -18.88604736328125
    5. ' s' → logprob: -19.01104736328125
    6. '<p' → logprob: -19.76104736328125
    7. '	p' → logprob: -20.01104736328125
    8. ' ' → logprob: -20.63604736328125
    9. '```' → logprob: -21.13604736328125
    10. '$p' → logprob: -21.26104736328125

Token 2471: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28297290205955505
    2. 'p' → logprob: -1.4079729318618774
    3. 's' → logprob: -7.032972812652588
    4. 'y' → logprob: -7.282972812652588
    5. '1' → logprob: -8.782973289489746
    6. ' p' → logprob: -10.907973289489746
    7. '0' → logprob: -10.907973289489746
    8. 'py' → logprob: -11.157973289489746
    9. '3' → logprob: -11.282973289489746
    10. '```' → logprob: -11.407973289489746

Token 2472: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.11831268668174744
    2. 'p' → logprob: -2.2433125972747803
    3. '2' → logprob: -6.243312835693359
    4. '5' → logprob: -6.868312835693359
    5. '0' → logprob: -7.243312835693359
    6. '1' → logprob: -7.493312835693359
    7. '3' → logprob: -8.11831283569336
    8. 's' → logprob: -8.24331283569336
    9. ',' → logprob: -8.36831283569336
    10. '```' → logprob: -8.36831283569336

Token 2473: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029852005536668
    2. ',p' → logprob: -8.250298500061035
    3. 'p' → logprob: -10.625298500061035
    4. ' ,' → logprob: -11.375298500061035
    5. ',y' → logprob: -14.375298500061035
    6. 'y' → logprob: -15.125298500061035
    7. '   ' → logprob: -15.500298500061035
    8. 's' → logprob: -16.00029945373535
    9. 'm' → logprob: -16.25029945373535
    10. ',m' → logprob: -16.75029945373535

Token 2474: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0004307884373702109
    2. ' Point' → logprob: -7.750430583953857
    3. '(Point' → logprob: -16.875431060791016
    4. 'Segment' → logprob: -18.000431060791016
    5. '	Point' → logprob: -18.875431060791016
    6. 'p' → logprob: -19.125431060791016
    7. '<Point' → logprob: -19.250431060791016
    8. '.Point' → logprob: -19.875431060791016
    9. '_Point' → logprob: -19.875431060791016
    10. '_point' → logprob: -20.500431060791016

Token 2475: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2664456789934775e-06
    2. ' p' → logprob: -13.750000953674316
    3. 's' → logprob: -16.000001907348633
    4. '(p' → logprob: -16.750001907348633
    5. '2' → logprob: -17.000001907348633
    6. '   ' → logprob: -19.375001907348633
    7. '```' → logprob: -19.500001907348633
    8. '
' → logprob: -20.250001907348633
    9. '<p' → logprob: -20.500001907348633
    10. '``' → logprob: -21.750001907348633

Token 2476: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17980387806892395
    2. 'p' → logprob: -1.8048038482666016
    3. 's' → logprob: -10.429803848266602
    4. '```' → logprob: -11.679803848266602
    5. 'py' → logprob: -12.429803848266602
    6. '3' → logprob: -12.554803848266602
    7. '_' → logprob: -13.179803848266602
    8. 'q' → logprob: -13.429803848266602
    9. ' p' → logprob: -13.429803848266602
    10. '<|end|>' → logprob: -13.929803848266602

Token 2477: 'x' (ID: 87)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24483723938465118
    2. 'x' → logprob: -2.1198372840881348
    3. 'p' → logprob: -2.9948372840881348
    4. 'y' → logprob: -3.6198372840881348
    5. 's' → logprob: -4.619837284088135
    6. 'z' → logprob: -4.744837284088135
    7. '0' → logprob: -7.369837284088135
    8. 'q' → logprob: -7.494837284088135
    9. ',' → logprob: -8.119836807250977
    10. ')' → logprob: -9.744836807250977

Token 2478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4827038049697876
    2. 'p' → logprob: -0.9827038049697876
    3. 's' → logprob: -4.982703685760498
    4. '1' → logprob: -6.732703685760498
    5. ',p' → logprob: -8.357704162597656
    6. 'q' → logprob: -9.232704162597656
    7. '(p' → logprob: -10.107704162597656
    8. '0' → logprob: -10.357704162597656
    9. '```' → logprob: -10.357704162597656
    10. ' p' → logprob: -10.482704162597656

Token 2479: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.5048530030981055e-06
    2. ' p' → logprob: -13.500001907348633
    3. '```' → logprob: -16.625001907348633
    4. 's' → logprob: -17.500001907348633
    5. '``' → logprob: -18.500001907348633
    6. '   ' → logprob: -19.000001907348633
    7. 'Point' → logprob: -19.125001907348633
    8. '<p' → logprob: -19.125001907348633
    9. '
' → logprob: -19.250001907348633
    10. '(p' → logprob: -19.250001907348633

Token 2480: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22586067020893097
    2. '3' → logprob: -1.6008607149124146
    3. 'p' → logprob: -8.100860595703125
    4. '0' → logprob: -9.100860595703125
    5. '1' → logprob: -11.725860595703125
    6. '```' → logprob: -11.850860595703125
    7. '_' → logprob: -13.100860595703125
    8. 'm' → logprob: -13.100860595703125
    9. ' ' → logprob: -13.225860595703125
    10. 'py' → logprob: -13.475860595703125

Token 2481: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00048417699872516096
    2. '1' → logprob: -7.750483989715576
    3. '5' → logprob: -10.500484466552734
    4. '2' → logprob: -11.000484466552734
    5. 's' → logprob: -12.750484466552734
    6. ')' → logprob: -12.750484466552734
    7. 'x' → logprob: -13.625484466552734
    8. '3' → logprob: -14.500484466552734
    9. '7' → logprob: -15.125484466552734
    10. '0' → logprob: -15.250484466552734

Token 2482: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7654650211334229
    2. '))' → logprob: -1.1404650211334229
    3. ')
' → logprob: -1.8904650211334229
    4. '))
' → logprob: -3.015465021133423
    5. '):
' → logprob: -4.515464782714844
    6. '):' → logprob: -6.640464782714844
    7. ')):
' → logprob: -6.890464782714844
    8. '       ' → logprob: -7.265464782714844
    9. '   ' → logprob: -8.765464782714844
    10. '),' → logprob: -9.140464782714844

Token 2483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002379450248554349
    2. '   ' → logprob: -6.252379417419434
    3. 'if' → logprob: -8.377379417419434
    4. 'print' → logprob: -8.502379417419434
    5. 'for' → logprob: -11.252379417419434
    6. '           ' → logprob: -13.502379417419434
    7. '```' → logprob: -13.627379417419434
    8. 'def' → logprob: -14.627379417419434
    9. '     ' → logprob: -14.877379417419434
    10. '	' → logprob: -15.002379417419434

Token 2484: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10304529964923859
    2. 'for' → logprob: -2.4780452251434326
    3. 'if' (adapté à ' if') → logprob: -5.103045463562012
    4. 'print' → logprob: -5.603045463562012
    5. '   ' → logprob: -5.728045463562012
    6. ' for' → logprob: -7.103045463562012
    7. '```' → logprob: -9.603045463562012
    8. ' if' → logprob: -9.978045463562012
    9. 'result' → logprob: -10.853045463562012
    10. ' ' → logprob: -11.478045463562012

Token 2485: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00011832444579340518
    2. ' is' → logprob: -9.625118255615234
    3. 'cc' → logprob: -10.125118255615234
    4. 'not' → logprob: -11.375118255615234
    5. '   ' → logprob: -15.500118255615234
    6. ' ' → logprob: -16.375118255615234
    7. '(is' → logprob: -16.750118255615234
    8. ' not' → logprob: -17.000118255615234
    9. '
' → logprob: -17.250118255615234
    10. 's' → logprob: -17.500118255615234

Token 2486: 'Intersect' (ID: 134565)
  Prédit: 'Intersect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Intersect' → logprob: -2.451116051815916e-05
    2. 'Interact' → logprob: -10.750024795532227
    3. 'Par' → logprob: -14.250024795532227
    4. 'Intersection' → logprob: -14.250024795532227
    5. 'ss' → logprob: -14.375024795532227
    6. 'is' → logprob: -15.250024795532227
    7. '
' → logprob: -15.875024795532227
    8. 's' → logprob: -16.000024795532227
    9. 'Intercept' → logprob: -16.000024795532227
    10. ' intersect' → logprob: -16.375024795532227

Token 2487: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.006206531543284655
    2. '(s' → logprob: -5.881206512451172
    3. 'ss' → logprob: -6.131206512451172
    4. '(ss' → logprob: -6.756206512451172
    5. 's' → logprob: -9.881206512451172
    6. '_s' → logprob: -12.506206512451172
    7. 'sss' → logprob: -13.506206512451172
    8. '	ss' → logprob: -14.256206512451172
    9. 'Ss' → logprob: -15.006206512451172
    10. '_sp' → logprob: -15.756206512451172

Token 2488: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.125
    3. 's' → logprob: -17.0
    4. ' (' → logprob: -18.125
    5. '(
' → logprob: -18.375
    6. '((' → logprob: -20.125
    7. '   ' → logprob: -20.25
    8. '```' → logprob: -20.625
    9. '
' → logprob: -21.75
    10. '#' → logprob: -21.875

Token 2489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4617256056226324e-05
    2. '2' → logprob: -11.625014305114746
    3. '(s' → logprob: -12.750014305114746
    4. 's' → logprob: -13.375014305114746
    5. '```' → logprob: -15.812514305114746
    6. ')' → logprob: -15.937514305114746
    7. '１' → logprob: -16.062515258789062
    8. ' s' → logprob: -16.187515258789062
    9. ')s' → logprob: -16.500015258789062
    10. ' ' → logprob: -16.500015258789062

Token 2490: ',' (ID: 11)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03811929374933243
    2. ',' → logprob: -3.288119316101074
    3. 's' → logprob: -9.538119316101074
    4. ',s' → logprob: -13.788119316101074
    5. ' and' → logprob: -13.913119316101074
    6. 'and' → logprob: -13.913119316101074
    7. ' s' → logprob: -14.163119316101074
    8. ')' → logprob: -14.288119316101074
    9. ' ,' → logprob: -14.413119316101074
    10. '(' → logprob: -15.538119316101074

Token 2491: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0802738870552275e-05
    2. ' s' → logprob: -11.50001049041748
    3. '(s' → logprob: -15.25001049041748
    4. '
' → logprob: -16.250011444091797
    5. '   ' → logprob: -16.375011444091797
    6. ')' → logprob: -17.375011444091797
    7. '```' → logprob: -17.500011444091797
    8. '
' → logprob: -17.625011444091797
    9. '	s' → logprob: -17.812511444091797
    10. '[s' → logprob: -18.000011444091797

Token 2492: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.318681188422488e-05
    2. 's' → logprob: -11.37501335144043
    3. '1' → logprob: -13.87501335144043
    4. '(s' → logprob: -15.62501335144043
    5. ' s' → logprob: -16.56251335144043
    6. '```' → logprob: -16.56251335144043
    7. 'def' → logprob: -17.00001335144043
    8. ')' → logprob: -17.56251335144043
    9. ' ' → logprob: -17.81251335144043
    10. '２' → logprob: -17.87501335144043

Token 2493: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5561985373497009
    2. ':
' → logprob: -1.5561985969543457
    3. '):' → logprob: -2.0561985969543457
    4. '):
' → logprob: -2.9311985969543457
    5. '():
' → logprob: -3.6811985969543457
    6. '():' → logprob: -4.806198596954346
    7. '           ' → logprob: -7.681198596954346
    8. '       ' → logprob: -7.806198596954346
    9. '==' → logprob: -9.306198120117188
    10. '()' → logprob: -10.931198120117188

Token 2494: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037478472222574055
    2. '       ' → logprob: -8.500374794006348
    3. 'print' → logprob: -8.875374794006348
    4. '               ' → logprob: -10.625374794006348
    5. ' print' → logprob: -13.375374794006348
    6. '```' → logprob: -13.750374794006348
    7. '	       ' → logprob: -13.750374794006348
    8. '   ' → logprob: -14.125374794006348
    9. '          ' → logprob: -14.500374794006348
    10. ':' → logprob: -14.875374794006348

Token 2495: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.941850526549388e-06
    2. ' print' → logprob: -12.250007629394531
    3. '           ' → logprob: -13.000007629394531
    4. '       ' → logprob: -14.000007629394531
    5. '	print' → logprob: -17.75000762939453
    6. '   ' → logprob: -18.87500762939453
    7. '               ' → logprob: -22.25000762939453
    8. '_print' → logprob: -22.25000762939453
    9. '.print' → logprob: -22.50000762939453
    10. 'Print' → logprob: -22.75000762939453

Token 2496: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0621449239552021
    2. '(' → logprob: -2.8121449947357178
    3. '('' → logprob: -8.937145233154297
    4. '1' → logprob: -10.812145233154297
    5. '(True' → logprob: -11.187145233154297
    6. '"' → logprob: -11.812145233154297
    7. '(
' → logprob: -12.937145233154297
    8. 'Yes' → logprob: -14.312145233154297
    9. '(-' → logprob: -14.812145233154297
    10. '0' → logprob: -15.812145233154297

Token 2497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08232198655605316
    2. '"' → logprob: -2.582321882247925
    3. 'Yes' → logprob: -6.332322120666504
    4. 'YES' → logprob: -6.457322120666504
    5. 'True' → logprob: -9.707322120666504
    6. ''' → logprob: -11.582322120666504
    7. '2' → logprob: -13.082322120666504
    8. 'TRUE' → logprob: -13.332322120666504
    9. '"T' → logprob: -13.957322120666504
    10. 'yes' → logprob: -14.207322120666504

Token 2498: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6369780898094177
    2. ')' → logprob: -0.7619780898094177
    3. ')
' → logprob: -5.6369781494140625
    4. 'else' → logprob: -7.7619781494140625
    5. '<|end|>' → logprob: -8.886978149414062
    6. '<|end|>' → logprob: -10.011978149414062
    7. '   ' → logprob: -10.261978149414062
    8. ' else' → logprob: -10.386978149414062
    9. '           ' → logprob: -10.511978149414062
    10. '")' → logprob: -10.886978149414062

Token 2499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01828467659652233
    2. 'else' → logprob: -4.018284797668457
    3. ' else' → logprob: -9.393284797668457
    4. '<|end|>' → logprob: -10.893284797668457
    5. '	' → logprob: -11.143284797668457
    6. '```' → logprob: -11.518284797668457
    7. '	else' → logprob: -12.768284797668457
    8. '   ' → logprob: -13.268284797668457
    9. '           ' → logprob: -13.518284797668457
    10. '<|end|>' → logprob: -14.143284797668457

Token 2500: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06232829391956329
    2. 'else' (adapté à ' else') → logprob: -2.812328338623047
    3. ' else' → logprob: -8.562328338623047
    4. '           ' → logprob: -8.937328338623047
    5. '	' → logprob: -10.812328338623047
    6. '	else' → logprob: -11.812328338623047
    7. '   ' → logprob: -12.437328338623047
    8. '<|end|>' → logprob: -13.187328338623047
    9. '```' → logprob: -13.812328338623047
    10. '	       ' → logprob: -14.437328338623047

Token 2501: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028856556862592697
    2. '(' → logprob: -3.9038565158843994
    3. '       ' → logprob: -5.5288567543029785
    4. '0' → logprob: -6.1538567543029785
    5. '	       ' → logprob: -7.4038567543029785
    6. ':' → logprob: -7.9038567543029785
    7. '		' → logprob: -8.40385627746582
    8. ':
' → logprob: -8.40385627746582
    9. ',' → logprob: -8.52885627746582
    10. '   ' → logprob: -9.65385627746582

Token 2502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08997390419244766
    2. 'print' → logprob: -2.4649739265441895
    3. '       ' → logprob: -6.9649739265441895
    4. ' print' → logprob: -10.464973449707031
    5. '0' → logprob: -10.589973449707031
    6. '	       ' → logprob: -10.839973449707031
    7. '		' → logprob: -11.964973449707031
    8. '```' → logprob: -13.089973449707031
    9. ' ' → logprob: -13.214973449707031
    10. '   ' → logprob: -13.339973449707031

Token 2503: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005293054040521383
    2. ' print' → logprob: -5.880292892456055
    3. '           ' → logprob: -6.005292892456055
    4. '       ' → logprob: -11.630292892456055
    5. '0' → logprob: -12.505292892456055
    6. '```' → logprob: -13.630292892456055
    7. '	print' → logprob: -13.755292892456055
    8. ' ' → logprob: -13.880292892456055
    9. '               ' → logprob: -14.005292892456055
    10. '   ' → logprob: -14.505292892456055

Token 2504: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006266565760597587
    2. '0' → logprob: -7.375626564025879
    3. ' (' → logprob: -16.500627517700195
    4. '   ' → logprob: -17.000627517700195
    5. '       ' → logprob: -17.500627517700195
    6. '(
' → logprob: -17.500627517700195
    7. '()' → logprob: -18.000627517700195
    8. '
' → logprob: -18.500627517700195
    9. ' ' → logprob: -19.625627517700195
    10. 'print' → logprob: -20.250627517700195

Token 2505: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '(' → logprob: -18.0
    4. '2' → logprob: -19.5
    5. ')' → logprob: -19.625
    6. '   ' → logprob: -19.75
    7. '０' → logprob: -20.25
    8. '-' → logprob: -21.125
    9. '00' → logprob: -21.25
    10. '```' → logprob: -21.375

Token 2506: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028171599842607975
    2. '<|end|>' → logprob: -8.25028133392334
    3. '())' → logprob: -12.25028133392334
    4. ')
' → logprob: -12.50028133392334
    5. '```' → logprob: -12.62528133392334
    6. '()' → logprob: -12.87528133392334
    7. '<|end|>' → logprob: -13.37528133392334
    8. ')

' → logprob: -13.75028133392334
    9. '       ' → logprob: -14.25028133392334
    10. ')return' → logprob: -14.62528133392334

Token 2507: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3879127502441406
    2. 'def' → logprob: -1.1379127502441406
    3. 'return' → logprob: -6.887912750244141
    4. '#' → logprob: -11.26291275024414
    5. '```' → logprob: -12.26291275024414
    6. ' return' → logprob: -13.76291275024414
    7. ' def' → logprob: -13.76291275024414
    8. 'pass' → logprob: -15.13791275024414
    9. '       ' → logprob: -15.38791275024414
    10. '    ' → logprob: -15.63791275024414

Token 2508: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.003727399278432131
    2. 'main' → logprob: -5.628727436065674
    3. 'distance' → logprob: -10.003726959228516
    4. 'solve' → logprob: -10.878726959228516
    5. ' verify' → logprob: -11.128726959228516
    6. 'validate' → logprob: -11.628726959228516
    7. 'def' → logprob: -11.753726959228516
    8. '__' → logprob: -11.753726959228516
    9. 'is' → logprob: -12.003726959228516
    10. 'cross' → logprob: -12.628726959228516

Token 2509: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00025192240718752146
    2. '()' → logprob: -8.875251770019531
    3. '(' → logprob: -10.000251770019531
    4. 'def' → logprob: -10.125251770019531
    5. '```' → logprob: -11.750251770019531
    6. ' _' → logprob: -12.875251770019531
    7. '(_' → logprob: -13.000251770019531
    8. '():' → logprob: -13.375251770019531
    9. '__' → logprob: -13.500251770019531
    10. ' def' → logprob: -13.875251770019531

Token 2510: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006713286275044084
    2. '3' → logprob: -7.37567138671875
    3. '1' → logprob: -10.75067138671875
    4. '_' → logprob: -11.87567138671875
    5. '4' → logprob: -12.50067138671875
    6. '5' → logprob: -13.00067138671875
    7. 'def' → logprob: -13.00067138671875
    8. '6' → logprob: -13.68817138671875
    9. '0' → logprob: -14.06317138671875
    10. '9' → logprob: -14.18817138671875

Token 2511: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04885486140847206
    2. 'B' → logprob: -3.2988548278808594
    3. 'A' → logprob: -4.548854827880859
    4. 'D' → logprob: -8.79885482788086
    5. 'E' → logprob: -10.92385482788086
    6. 'c' → logprob: -13.54885482788086
    7. 'F' → logprob: -13.79885482788086
    8. '_C' → logprob: -14.29885482788086
    9. ' C' → logprob: -14.92385482788086
    10. 'def' → logprob: -14.98635482788086

Token 2512: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004080062732100487
    2. '():
' → logprob: -5.504080295562744
    3. ' ():' → logprob: -14.129079818725586
    4. '()' → logprob: -14.379079818725586
    5. '():
' → logprob: -15.004079818725586
    6. 'def' → logprob: -18.754079818725586
    7. '():

' → logprob: -19.129079818725586
    8. '()
' → logprob: -19.629079818725586
    9. '()>' → logprob: -19.629079818725586
    10. '();' → logprob: -19.879079818725586

Token 2513: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006052516400814056
    2. 'Q' → logprob: -5.131052494049072
    3. 'def' → logprob: -9.38105297088623
    4. '	Q' → logprob: -11.38105297088623
    5. ' Q' → logprob: -11.88105297088623
    6. '```' → logprob: -12.00605297088623
    7. '()' → logprob: -12.50605297088623
    8. '  ' → logprob: -12.88105297088623
    9. '(Q' → logprob: -13.25605297088623
    10. '...' → logprob: -13.38105297088623

Token 2514: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -4.930552313453518e-05
    2. ' Q' → logprob: -10.625049591064453
    3. '   ' → logprob: -11.000049591064453
    4. 'pass' → logprob: -12.625049591064453
    5. 'p' → logprob: -13.375049591064453
    6. '...' → logprob: -14.125049591064453
    7. 'q' → logprob: -14.375049591064453
    8. 'def' → logprob: -14.750049591064453
    9. '	Q' → logprob: -14.875049591064453
    10. 'print' → logprob: -15.500049591064453

Token 2515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759680867195129
    2. '=' → logprob: -0.8259680867195129
    3. '   ' → logprob: -11.950967788696289
    4. '=input' → logprob: -12.325967788696289
    5. '=
' → logprob: -12.325967788696289
    6. '=int' → logprob: -12.575967788696289
    7. 'def' → logprob: -12.950967788696289
    8. 'Q' → logprob: -13.075967788696289
    9. '＝' → logprob: -13.575967788696289
    10. '="""' → logprob: -13.825967788696289

Token 2516: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.2994620242971e-06
    2. ' int' → logprob: -11.750008583068848
    3. '(int' → logprob: -15.750008583068848
    4. '=int' → logprob: -16.37500762939453
    5. '[int' → logprob: -16.75000762939453
    6. '<int' → logprob: -19.12500762939453
    7. '   ' → logprob: -19.62500762939453
    8. 'Q' → logprob: -19.75000762939453
    9. ':int' → logprob: -21.00000762939453
    10. 'input' → logprob: -21.62500762939453

Token 2517: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0015087933279573917
    2. 'input' → logprob: -6.501508712768555
    3. '(int' → logprob: -12.501508712768555
    4. 'int' → logprob: -13.251508712768555
    5. ' (' → logprob: -15.251508712768555
    6. 'import' → logprob: -15.626508712768555
    7. '(
' → logprob: -15.876508712768555
    8. '=input' → logprob: -16.126508712768555
    9. ',input' → logprob: -16.626508712768555
    10. '[input' → logprob: -16.626508712768555

Token 2518: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09471458196640015
    2. '()
' → logprob: -2.469714641571045
    3. '())' → logprob: -6.344714641571045
    4. ')' → logprob: -6.344714641571045
    5. '())
' → logprob: -6.344714641571045
    6. '():' → logprob: -8.719714164733887
    7. '():
' → logprob: -9.094714164733887
    8. ')
' → logprob: -9.344714164733887
    9. '()\' → logprob: -10.469714164733887
    10. '()[' → logprob: -10.969714164733887

Token 2519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001812629052437842
    2. 'Query' → logprob: -6.50181245803833
    3. 'for' → logprob: -8.626812934875488
    4. '<|end|>' → logprob: -10.001812934875488
    5. '```' → logprob: -10.876812934875488
    6. '<Query' → logprob: -11.126812934875488
    7. '	Query' → logprob: -11.126812934875488
    8. '(Query' → logprob: -11.626812934875488
    9. ' for' → logprob: -12.001812934875488
    10. '#' → logprob: -12.376812934875488

Token 2520: ' Query' (ID: 18574)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20144014060497284
    2. 'Query' (adapté à ' Query') → logprob: -1.7014400959014893
    3. ' for' → logprob: -11.32643985748291
    4. '   ' → logprob: -11.95143985748291
    5. '
' → logprob: -12.82643985748291
    6. 'while' → logprob: -13.07643985748291
    7. ' Query' → logprob: -13.57643985748291
    8. 'print' → logprob: -13.70143985748291
    9. 'Code' → logprob: -15.57643985748291
    10. 'query' → logprob: -15.57643985748291

Token 2521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34938010573387146
    2. ' =' → logprob: -1.3493801355361938
    3. '   ' → logprob: -3.3493800163269043
    4. 'for' → logprob: -8.349380493164062
    5. '=
' → logprob: -9.724380493164062
    6. ' for' → logprob: -10.724380493164062
    7. 'def' → logprob: -11.099380493164062
    8. '=[' → logprob: -11.974380493164062
    9. '=[
' → logprob: -12.974380493164062
    10. '```' → logprob: -12.974380493164062

Token 2522: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.04767805337905884
    2. '[' → logprob: -3.172677993774414
    3. '[int' → logprob: -5.797677993774414
    4. '[List' → logprob: -7.297677993774414
    5. '[input' → logprob: -7.547677993774414
    6. '[len' → logprob: -8.922677993774414
    7. '[line' → logprob: -9.172677993774414
    8. ' [' → logprob: -9.672677993774414
    9. '   ' → logprob: -9.797677993774414
    10. '[str' → logprob: -10.922677993774414

Token 2523: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001527717337012291
    2. '[list' → logprob: -6.501527786254883
    3. ' list' → logprob: -10.626527786254883
    4. '(list' → logprob: -14.876527786254883
    5. '[' → logprob: -15.626527786254883
    6. 'def' → logprob: -15.751527786254883
    7. '$list' → logprob: -15.876527786254883
    8. '[int' → logprob: -16.001527786254883
    9. '	list' → logprob: -17.251527786254883
    10. 'int' → logprob: -17.501527786254883

Token 2524: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.600511372089386
    2. '(list' → logprob: -0.850511372089386
    3. 'list' → logprob: -3.975511312484741
    4. 'map' → logprob: -5.22551155090332
    5. '=list' → logprob: -9.72551155090332
    6. '(int' → logprob: -11.22551155090332
    7. 'import' → logprob: -11.85051155090332
    8. '(
' → logprob: -11.97551155090332
    9. 'int' → logprob: -12.10051155090332
    10. '(lambda' → logprob: -12.22551155090332

Token 2525: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.25225502252578735
    2. 'int' → logprob: -1.5022549629211426
    3. '[int' → logprob: -8.7522554397583
    4. 'def' → logprob: -9.6272554397583
    5. '=int' → logprob: -9.8772554397583
    6. '<int' → logprob: -11.0022554397583
    7. '```' → logprob: -11.3772554397583
    8. ']int' → logprob: -12.1272554397583
    9. ',int' → logprob: -12.2522554397583
    10. '(lambda' → logprob: -13.1272554397583

Token 2526: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6866103410720825
    2. '(int' → logprob: -0.8116103410720825
    3. ',input' → logprob: -3.686610221862793
    4. 'input' → logprob: -4.811610221862793
    5. 'int' → logprob: -5.186610221862793
    6. ',' → logprob: -5.311610221862793
    7. ',int' → logprob: -5.436610221862793
    8. '[int' → logprob: -5.936610221862793
    9. '[input' → logprob: -7.811610221862793
    10. '<int' → logprob: -7.936610221862793

Token 2527: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00017410075815860182
    2. 'int' → logprob: -8.750174522399902
    3. ' input' → logprob: -11.125174522399902
    4. '(input' → logprob: -14.375174522399902
    5. '<input' → logprob: -15.625174522399902
    6. '[input' → logprob: -16.250173568725586
    7. 'def' → logprob: -16.625173568725586
    8. '=input' → logprob: -17.250173568725586
    9. 'import' → logprob: -18.125173568725586
    10. ',input' → logprob: -19.125173568725586

Token 2528: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12538458406925201
    2. '.split' → logprob: -2.750384569168091
    3. ',' → logprob: -3.750384569168091
    4. '(),' → logprob: -3.875384569168091
    5. 'split' → logprob: -5.62538480758667
    6. ',input' → logprob: -7.00038480758667
    7. '```' → logprob: -7.25038480758667
    8. '(split' → logprob: -7.25038480758667
    9. '()(' → logprob: -8.375384330749512
    10. '(',' → logprob: -8.375384330749512

Token 2529: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.610702363715973e-06
    2. 'spl' → logprob: -12.250009536743164
    3. 'input' → logprob: -12.625009536743164
    4. '(split' → logprob: -13.875009536743164
    5. '.split' → logprob: -15.375009536743164
    6. ' split' → logprob: -16.125009536743164
    7. '_split' → logprob: -16.500009536743164
    8. '(input' → logprob: -16.750009536743164
    9. 's' → logprob: -17.000009536743164
    10. '```' → logprob: -17.500009536743164

Token 2530: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0004702338483184576
    2. '))' → logprob: -7.875470161437988
    3. '()' → logprob: -10.125470161437988
    4. '()[' → logprob: -10.625470161437988
    5. '())' → logprob: -11.375470161437988
    6. '()))
' → logprob: -12.000470161437988
    7. '())).' → logprob: -13.250470161437988
    8. '()
' → logprob: -13.500470161437988
    9. '   ' → logprob: -13.875470161437988
    10. '()]' → logprob: -14.375470161437988

Token 2531: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4015471637248993
    2. ' for' → logprob: -1.1515471935272217
    3. '   ' → logprob: -4.276546955108643
    4. ')' → logprob: -7.776546955108643
    5. '	for' → logprob: -8.7765474319458
    6. 'def' → logprob: -9.9015474319458
    7. '       ' → logprob: -10.6515474319458
    8. '
' → logprob: -11.2765474319458
    9. '[' → logprob: -12.5265474319458
    10. ' in' → logprob: -12.5265474319458

Token 2532: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003233070601709187
    2. '_range' → logprob: -8.375323295593262
    3. ' _' → logprob: -10.875323295593262
    4. ' range' → logprob: -11.000323295593262
    5. 'range' → logprob: -11.125323295593262
    6. ' in' → logprob: -11.250323295593262
    7. 'in' → logprob: -11.625323295593262
    8. '_p' → logprob: -12.625323295593262
    9. '_Q' → logprob: -12.750323295593262
    10. '_q' → logprob: -13.000323295593262

Token 2533: ' in' (ID: 306)
  Prédit: '_range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.4024852216243744
    2. '_' → logprob: -1.4024852514266968
    3. 'range' → logprob: -2.5274851322174072
    4. ' range' → logprob: -5.652485370635986
    5. 'in' → logprob: -7.652485370635986
    6. '_in' → logprob: -8.027484893798828
    7. ' _' → logprob: -8.027484893798828
    8. ' in' → logprob: -8.277484893798828
    9. '(range' → logprob: -8.402484893798828
    10. '_for' → logprob: -9.152484893798828

Token 2534: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.033353812992572784
    2. ' range' → logprob: -4.033353805541992
    3. '_range' → logprob: -5.408353805541992
    4. '_Q' → logprob: -5.533353805541992
    5. '_' → logprob: -5.783353805541992
    6. 'for' → logprob: -6.533353805541992
    7. 'Q' → logprob: -6.783353805541992
    8. 'in' → logprob: -7.033353805541992
    9. ' in' → logprob: -10.283353805541992
    10. '_query' → logprob: -11.033353805541992

Token 2535: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.07894696295261383
    2. 'Q' → logprob: -2.578947067260742
    3. 'range' → logprob: -10.078947067260742
    4. 'Range' → logprob: -12.453947067260742
    5. '	Q' → logprob: -13.078947067260742
    6. ' range' → logprob: -13.453947067260742
    7. '<Q' → logprob: -13.453947067260742
    8. '
' → logprob: -13.703947067260742
    9. '_Q' → logprob: -13.828947067260742
    10. ' Q' → logprob: -14.328947067260742

Token 2536: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.47960084676742554
    2. ']
' → logprob: -1.6046009063720703
    3. ')]' → logprob: -1.8546009063720703
    4. ']' → logprob: -4.35460090637207
    5. ')' → logprob: -5.22960090637207
    6. '   ' → logprob: -6.10460090637207
    7. ')
' → logprob: -6.72960090637207
    8. ')]
' → logprob: -6.97960090637207
    9. ']
' → logprob: -7.35460090637207
    10. 'def' → logprob: -9.60460090637207

Token 2537: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026795880869030952
    2. 'for' → logprob: -3.6517958641052246
    3. ' for' → logprob: -7.901795864105225
    4. '```' → logprob: -9.651796340942383
    5. 'def' → logprob: -10.276796340942383
    6. '	for' → logprob: -11.276796340942383
    7. '<|end|>' → logprob: -12.401796340942383
    8. '#' → logprob: -12.526796340942383
    9. 'For' → logprob: -12.901796340942383
    10. '       ' → logprob: -13.776796340942383

Token 2538: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.5107177862082608e-05
    2. '   ' → logprob: -11.125024795532227
    3. ' for' → logprob: -12.125024795532227
    4. 'def' → logprob: -12.500024795532227
    5. '	for' → logprob: -13.875024795532227
    6. '```' → logprob: -16.500024795532227
    7. '
' → logprob: -16.875024795532227
    8. 'For' → logprob: -17.625024795532227
    9. 'from' → logprob: -17.625024795532227
    10. '#' → logprob: -19.375024795532227

Token 2539: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018702220171689987
    2. ' p' → logprob: -4.018702030181885
    3. 'px' → logprob: -7.768702030181885
    4. ' px' → logprob: -10.143702507019043
    5. '   ' → logprob: -10.268702507019043
    6. 's' → logprob: -10.893702507019043
    7. '(p' → logprob: -11.268702507019043
    8. 'q' → logprob: -12.768702507019043
    9. 'x' → logprob: -12.893702507019043
    10. ' ' → logprob: -13.018702507019043

Token 2540: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007057284936308861
    2. 'x' → logprob: -5.132057189941406
    3. '1' → logprob: -7.507057189941406
    4. 'p' → logprob: -8.382057189941406
    5. 'px' → logprob: -9.007057189941406
    6. 'qx' → logprob: -9.382057189941406
    7. 'def' → logprob: -11.132057189941406
    8. '2' → logprob: -11.257057189941406
    9. '```' → logprob: -11.257057189941406
    10. 'q' → logprob: -11.757057189941406

Token 2541: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009906532941386104
    2. ',' → logprob: -7.125990867614746
    3. '0' → logprob: -9.125990867614746
    4. 'y' → logprob: -9.625990867614746
    5. 'p' → logprob: -11.875990867614746
    6. '1' → logprob: -14.000990867614746
    7. '```' → logprob: -14.500990867614746
    8. '[' → logprob: -14.750990867614746
    9. '#' → logprob: -14.750990867614746
    10. 'def' → logprob: -15.250990867614746

Token 2542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021981943864375353
    2. ',p' → logprob: -6.127198219299316
    3. 'p' → logprob: -11.377198219299316
    4. ' ,' → logprob: -13.627198219299316
    5. ' p' → logprob: -15.127198219299316
    6. '<|end|>' → logprob: -17.002197265625
    7. '_,' → logprob: -17.252197265625
    8. 'import' → logprob: -17.502197265625
    9. ',
' → logprob: -18.127197265625
    10. ',s' → logprob: -18.752197265625

Token 2543: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02324850670993328
    2. ' p' → logprob: -3.7732484340667725
    3. '   ' → logprob: -13.898248672485352
    4. '<|end|>' → logprob: -14.648248672485352
    5. ',' → logprob: -15.148248672485352
    6. ',p' → logprob: -15.398248672485352
    7. '<p' → logprob: -15.398248672485352
    8. '	p' → logprob: -15.523248672485352
    9. ' ' → logprob: -15.773248672485352
    10. '<|end|>' → logprob: -16.14824867248535

Token 2544: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.019182156771421432
    2. 'p' → logprob: -4.144182205200195
    3. '1' → logprob: -5.769182205200195
    4. ' p' → logprob: -12.269182205200195
    5. '```' → logprob: -12.644182205200195
    6. '3' → logprob: -12.894182205200195
    7. '<|end|>' → logprob: -13.144182205200195
    8. ',' → logprob: -13.394182205200195
    9. ' ' → logprob: -13.394182205200195
    10. 'y' → logprob: -13.644182205200195

Token 2545: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008119119331240654
    2. ',' → logprob: -5.008119106292725
    3. 'x' → logprob: -7.008119106292725
    4. 'p' → logprob: -7.758119106292725
    5. '0' → logprob: -9.758119583129883
    6. ',y' → logprob: -12.508119583129883
    7. '1' → logprob: -13.008119583129883
    8. ' y' → logprob: -13.133119583129883
    9. '```' → logprob: -13.883119583129883
    10. 'py' → logprob: -14.133119583129883

Token 2546: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004100958351045847
    2. ',p' → logprob: -5.504100799560547
    3. 'p' → logprob: -11.129100799560547
    4. ' ,' → logprob: -11.879100799560547
    5. 's' → logprob: -15.379100799560547
    6. ',s' → logprob: -15.379100799560547
    7. '_,' → logprob: -15.504100799560547
    8. ' p' → logprob: -15.879100799560547
    9. ',
' → logprob: -17.129100799560547
    10. '0' → logprob: -17.254100799560547

Token 2547: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.043005939573049545
    2. ' p' → logprob: -3.16800594329834
    3. '   ' → logprob: -12.04300594329834
    4. ' ' → logprob: -15.29300594329834
    5. '    ' → logprob: -15.79300594329834
    6. '<p' → logprob: -16.293004989624023
    7. '	p' → logprob: -16.293004989624023
    8. '  ' → logprob: -16.543004989624023
    9. '
' → logprob: -16.668004989624023
    10. '       ' → logprob: -16.793004989624023

Token 2548: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008020033710636199
    2. '1' → logprob: -7.250802040100098
    3. 'p' → logprob: -9.375802040100098
    4. '<|end|>' → logprob: -12.750802040100098
    5. 'x' → logprob: -13.375802040100098
    6. '#' → logprob: -13.750802040100098
    7. '_' → logprob: -15.375802040100098
    8. 'def' → logprob: -15.500802040100098
    9. '2' → logprob: -15.500802040100098
    10. '```' → logprob: -15.875802040100098

Token 2549: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.024604277219623e-05
    2. ',' → logprob: -10.750040054321289
    3. 'y' → logprob: -11.250040054321289
    4. '1' → logprob: -12.375040054321289
    5. 'p' → logprob: -14.375040054321289
    6. '```' → logprob: -14.375040054321289
    7. ',p' → logprob: -15.500040054321289
    8. '#' → logprob: -16.87504005432129
    9. '0' → logprob: -16.87504005432129
    10. '   ' → logprob: -17.37504005432129

Token 2550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004126488231122494
    2. ',p' → logprob: -5.50412654876709
    3. 'p' → logprob: -10.00412654876709
    4. ' ,' → logprob: -13.25412654876709
    5. ' p' → logprob: -15.00412654876709
    6. 'def' → logprob: -15.12912654876709
    7. '_,' → logprob: -15.75412654876709
    8. '<|end|>' → logprob: -16.254125595092773
    9. ',
' → logprob: -16.629125595092773
    10. '#' → logprob: -16.754125595092773

Token 2551: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0010329303331673145
    2. ' p' → logprob: -6.876032829284668
    3. '   ' → logprob: -17.501033782958984
    4. ' ' → logprob: -17.626033782958984
    5. '#' → logprob: -18.376033782958984
    6. '<|end|>' → logprob: -18.376033782958984
    7. '<|end|>' → logprob: -18.376033782958984
    8. ',' → logprob: -18.751033782958984
    9. '	p' → logprob: -18.751033782958984
    10. '<p' → logprob: -19.001033782958984

Token 2552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005785512272268534
    2. 'y' → logprob: -5.8807854652404785
    3. 'p' → logprob: -6.0057854652404785
    4. '<|end|>' → logprob: -7.6307854652404785
    5. 'def' → logprob: -12.755785942077637
    6. '#' → logprob: -13.505785942077637
    7. '```' → logprob: -13.568285942077637
    8. 'py' → logprob: -13.755785942077637
    9. 'r' → logprob: -13.943285942077637
    10. 'erri' → logprob: -13.943285942077637

Token 2553: 'y' (ID: 88)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6194518208503723
    2. 'y' → logprob: -0.8694518208503723
    3. 'p' → logprob: -3.2444517612457275
    4. ',' → logprob: -5.744451999664307
    5. '0' → logprob: -9.369451522827148
    6. '```' → logprob: -9.744451522827148
    7. '<|end|>' → logprob: -10.119451522827148
    8. '   ' → logprob: -10.244451522827148
    9. 'x' → logprob: -11.119451522827148
    10. 'r' → logprob: -11.244451522827148

Token 2554: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014489953173324466
    2. ',p' → logprob: -8.875144958496094
    3. ' ,' → logprob: -12.750144958496094
    4. 'p' → logprob: -13.375144958496094
    5. ' in' → logprob: -15.125144958496094
    6. ',
' → logprob: -16.250144958496094
    7. '_,' → logprob: -16.625144958496094
    8. '<|end|>' → logprob: -17.125144958496094
    9. '<|end|>' → logprob: -17.625144958496094
    10. 's' → logprob: -18.125144958496094

Token 2555: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06196914613246918
    2. ' p' → logprob: -2.811969041824341
    3. '   ' → logprob: -13.561968803405762
    4. '       ' → logprob: -16.186969757080078
    5. '    ' → logprob: -16.311969757080078
    6. ' ' → logprob: -17.186969757080078
    7. '  ' → logprob: -17.811969757080078
    8. '	p' → logprob: -18.561969757080078
    9. ',' → logprob: -18.686969757080078
    10. '      ' → logprob: -18.811969757080078

Token 2556: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.175694540143013
    2. '0' → logprob: -1.9256945848464966
    3. 'p' → logprob: -4.300694465637207
    4. '2' → logprob: -6.550694465637207
    5. '<|end|>' → logprob: -9.300694465637207
    6. '3' → logprob: -9.800694465637207
    7. '5' → logprob: -10.425694465637207
    8. '#' → logprob: -10.675694465637207
    9. 'def' → logprob: -10.675694465637207
    10. 'y' → logprob: -10.925694465637207

Token 2557: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03493238613009453
    2. ',' → logprob: -3.5349323749542236
    3. 'y' → logprob: -5.284932613372803
    4. '0' → logprob: -9.784932136535645
    5. 'p' → logprob: -11.659932136535645
    6. ' ,' → logprob: -11.784932136535645
    7. ',y' → logprob: -12.159932136535645
    8. ',x' → logprob: -12.284932136535645
    9. '2' → logprob: -12.534932136535645
    10. ',p' → logprob: -13.159932136535645

Token 2558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031878093723207712
    2. ',p' → logprob: -5.878187656402588
    3. 'p' → logprob: -7.878187656402588
    4. ' ,' → logprob: -12.878188133239746
    5. ' p' → logprob: -14.878188133239746
    6. '<|end|>' → logprob: -15.253188133239746
    7. '#' → logprob: -16.12818717956543
    8. ',
' → logprob: -16.50318717956543
    9. '0' → logprob: -16.62818717956543
    10. ',user' → logprob: -16.75318717956543

Token 2559: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.129266067640856e-05
    2. ' p' → logprob: -10.875020980834961
    3. '   ' → logprob: -13.875020980834961
    4. ' ' → logprob: -15.250020980834961
    5. '```' → logprob: -15.625020980834961
    6. '2' → logprob: -15.875020980834961
    7. '1' → logprob: -16.12502098083496
    8. '	p' → logprob: -16.68752098083496
    9. '  ' → logprob: -16.81252098083496
    10. '...' → logprob: -16.87502098083496

Token 2560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0053092967718839645
    2. 'p' → logprob: -5.255309104919434
    3. 'y' → logprob: -9.755309104919434
    4. '<|end|>' → logprob: -11.505309104919434
    5. '```' → logprob: -13.380309104919434
    6. '1' → logprob: -13.380309104919434
    7. '0' → logprob: -14.255309104919434
    8. ' p' → logprob: -14.505309104919434
    9. '_' → logprob: -15.255309104919434
    10. ' ' → logprob: -15.255309104919434

Token 2561: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16573210060596466
    2. '2' → logprob: -1.9157321453094482
    3. 'p' → logprob: -5.790731906890869
    4. '3' → logprob: -7.165731906890869
    5. 'x' → logprob: -7.415731906890869
    6. ',' → logprob: -7.915731906890869
    7. '<|end|>' → logprob: -8.665732383728027
    8. '5' → logprob: -8.915732383728027
    9. '```' → logprob: -9.290732383728027
    10. '1' → logprob: -9.540732383728027

Token 2562: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031746976310387254
    2. ',p' → logprob: -8.125317573547363
    3. 'p' → logprob: -11.375317573547363
    4. ' ,' → logprob: -11.875317573547363
    5. 'for' → logprob: -14.750317573547363
    6. 's' → logprob: -14.875317573547363
    7. ' in' → logprob: -14.875317573547363
    8. '0' → logprob: -15.000317573547363
    9. '_,' → logprob: -15.250317573547363
    10. 'def' → logprob: -15.375317573547363

Token 2563: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0017112360801547766
    2. ' p' → logprob: -6.376711368560791
    3. '   ' → logprob: -12.501710891723633
    4. 's' → logprob: -13.126710891723633
    5. '
' → logprob: -13.876710891723633
    6. ' ' → logprob: -14.439210891723633
    7. '    ' → logprob: -15.626710891723633
    8. '
' → logprob: -15.751710891723633
    9. '```' → logprob: -15.751710891723633
    10. '#' → logprob: -15.939210891723633

Token 2564: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007099312264472246
    2. '1' → logprob: -5.007099151611328
    3. '5' → logprob: -8.757099151611328
    4. 'p' → logprob: -9.507099151611328
    5. '0' → logprob: -10.007099151611328
    6. '```' → logprob: -10.007099151611328
    7. '_' → logprob: -10.757099151611328
    8. '3' → logprob: -10.882099151611328
    9. '<|end|>' → logprob: -13.132099151611328
    10. '$' → logprob: -13.382099151611328

Token 2565: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11088269203901291
    2. ',' → logprob: -2.4858827590942383
    3. 'y' → logprob: -3.8608827590942383
    4. '```' → logprob: -8.985882759094238
    5. '3' → logprob: -9.360882759094238
    6. 'p' → logprob: -9.485882759094238
    7. '0' → logprob: -9.735882759094238
    8. ',y' → logprob: -10.485882759094238
    9. 'z' → logprob: -10.610882759094238
    10. '<|end|>' → logprob: -10.610882759094238

Token 2566: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017173044616356492
    2. ',p' → logprob: -6.3767170906066895
    3. ' ,' → logprob: -11.626717567443848
    4. 'p' → logprob: -12.126717567443848
    5. '0' → logprob: -15.876717567443848
    6. ',
' → logprob: -16.00171661376953
    7. ',q' → logprob: -16.50171661376953
    8. '_,' → logprob: -16.87671661376953
    9. '1' → logprob: -16.87671661376953
    10. ',y' → logprob: -17.12671661376953

Token 2567: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00014072739577386528
    2. ' p' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.875141143798828
    4. '```' → logprob: -16.000141143798828
    5. ' ' → logprob: -16.125141143798828
    6. '	p' → logprob: -16.750141143798828
    7. '0' → logprob: -17.250141143798828
    8. '...' → logprob: -17.250141143798828
    9. '``' → logprob: -17.562641143798828
    10. ',' → logprob: -17.625141143798828

Token 2568: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.1080467781284824e-05
    2. 'p' → logprob: -11.125041007995605
    3. 'x' → logprob: -11.750041007995605
    4. 'y' → logprob: -12.000041007995605
    5. '```' → logprob: -12.000041007995605
    6. ' ' → logprob: -14.000041007995605
    7. 'py' → logprob: -14.250041007995605
    8. ',' → logprob: -14.375041007995605
    9. 'm' → logprob: -14.500041007995605
    10. '３' → logprob: -14.625041007995605

Token 2569: 'y' (ID: 88)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5754468441009521
    2. 'y' → logprob: -0.9504468441009521
    3. ',' → logprob: -3.700446844100952
    4. 'x' → logprob: -3.825446844100952
    5. 'py' → logprob: -5.950447082519531
    6. 'p' → logprob: -6.575447082519531
    7. 'm' → logprob: -9.450447082519531
    8. ',y' → logprob: -9.450447082519531
    9. '<|end|>' → logprob: -10.200447082519531
    10. '```' → logprob: -10.325447082519531

Token 2570: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19519442319869995
    2. 'in' → logprob: -1.8201944828033447
    3. ',' → logprob: -4.195194244384766
    4. ',p' → logprob: -9.195194244384766
    5. ',in' → logprob: -9.320194244384766
    6. ',s' → logprob: -11.195194244384766
    7. '   ' → logprob: -11.445194244384766
    8. ' ,' → logprob: -11.695194244384766
    9. '	in' → logprob: -11.695194244384766
    10. '       ' → logprob: -12.445194244384766

Token 2571: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.0012099954765290022
    2. ' Query' → logprob: -7.2512102127075195
    3. 'range' → logprob: -8.87621021270752
    4. '[' → logprob: -9.50121021270752
    5. ' range' → logprob: -9.62621021270752
    6. 'Point' → logprob: -10.25121021270752
    7. '(Query' → logprob: -10.25121021270752
    8. '_Query' → logprob: -10.62621021270752
    9. 'p' → logprob: -10.75121021270752
    10. '0' → logprob: -10.87621021270752

Token 2572: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.28800052404403687
    2. '       ' → logprob: -2.1630005836486816
    3. ':' → logprob: -2.9130005836486816
    4. 's' → logprob: -3.1630005836486816
    5. '   ' → logprob: -4.288000583648682
    6. ',' → logprob: -4.413000583648682
    7. ' s' → logprob: -4.913000583648682
    8. '):
' → logprob: -5.788000583648682
    9. '(s' → logprob: -7.038000583648682
    10. ',s' → logprob: -8.163000106811523

Token 2573: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009319081902503967
    2. 's' → logprob: -4.759319305419922
    3. '   ' → logprob: -7.384319305419922
    4. ' s' → logprob: -9.634319305419922
    5. 'def' → logprob: -12.009319305419922
    6. '```' → logprob: -12.634319305419922
    7. '           ' → logprob: -13.259319305419922
    8. '#' → logprob: -13.384319305419922
    9. '<|end|>' → logprob: -14.134319305419922
    10. ' ' → logprob: -14.134319305419922

Token 2574: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0017148085171356797
    2. 'l' → logprob: -6.626714706420898
    3. ' s' → logprob: -8.251714706420898
    4. '   ' → logprob: -9.751714706420898
    5. '       ' → logprob: -10.001714706420898
    6. 'def' → logprob: -12.251714706420898
    7. 'p' → logprob: -12.251714706420898
    8. 'a' → logprob: -12.626714706420898
    9. '           ' → logprob: -12.876714706420898
    10. ' l' → logprob: -13.626714706420898

Token 2575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.718606891809031e-05
    2. '0' → logprob: -11.000066757202148
    3. ' =' → logprob: -11.250066757202148
    4. '2' → logprob: -11.625066757202148
    5. 's' → logprob: -11.875066757202148
    6. '```' → logprob: -11.875066757202148
    7. '=' → logprob: -12.125066757202148
    8. '_' → logprob: -13.750066757202148
    9. 'def' → logprob: -13.875066757202148
    10. '
' → logprob: -14.000066757202148

Token 2576: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3484501540660858
    2. ' =' → logprob: -1.2234501838684082
    3. ',' → logprob: -13.34844970703125
    4. 'x' → logprob: -13.59844970703125
    5. '   ' → logprob: -14.22344970703125
    6. 's' → logprob: -14.59844970703125
    7. '=
' → logprob: -14.97344970703125
    8. ' ' → logprob: -15.34844970703125
    9. 'a' → logprob: -15.59844970703125
    10. ')' → logprob: -15.97344970703125

Token 2577: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -4.7994282795116305e-05
    2. ' Segment' → logprob: -10.00004768371582
    3. 'Point' → logprob: -13.00004768371582
    4. 'Line' → logprob: -15.37504768371582
    5. 'Seg' → logprob: -17.50004768371582
    6. 'Section' → logprob: -18.62504768371582
    7. '   ' → logprob: -18.75004768371582
    8. 'segment' → logprob: -18.75004768371582
    9. '_segment' → logprob: -19.25004768371582
    10. 'Segments' → logprob: -19.87504768371582

Token 2578: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -1.1472419600977446e-06
    2. '<Point' → logprob: -14.625000953674316
    3. 'Point' → logprob: -14.750000953674316
    4. '.Point' → logprob: -16.750001907348633
    5. ' Point' → logprob: -17.625001907348633
    6. '(' → logprob: -18.000001907348633
    7. '	Point' → logprob: -18.250001907348633
    8. '>' → logprob: -18.625001907348633
    9. '(P' → logprob: -18.750001907348633
    10. '=' → logprob: -18.750001907348633

Token 2579: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.014177965931594372
    2. 'p' → logprob: -4.2641777992248535
    3. 'Point' → logprob: -11.889178276062012
    4. ' p' → logprob: -12.889178276062012
    5. '0' → logprob: -13.764178276062012
    6. '(Point' → logprob: -13.764178276062012
    7. 's' → logprob: -14.014178276062012
    8. '[p' → logprob: -14.264178276062012
    9. '(' → logprob: -14.514178276062012
    10. '```' → logprob: -15.264178276062012

Token 2580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002649144036695361
    2. 'p' → logprob: -6.252649307250977
    3. '(p' → logprob: -7.877649307250977
    4. '2' → logprob: -8.127649307250977
    5. 's' → logprob: -11.127649307250977
    6. 'x' → logprob: -11.877649307250977
    7. ' p' → logprob: -12.127649307250977
    8. '1' → logprob: -12.127649307250977
    9. '3' → logprob: -12.252649307250977
    10. '(' → logprob: -12.627649307250977

Token 2581: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.44312788406387e-05
    2. '0' → logprob: -10.000054359436035
    3. 'y' → logprob: -12.375054359436035
    4. '1' → logprob: -12.500054359436035
    5. '[' → logprob: -15.500054359436035
    6. 'p' → logprob: -15.625054359436035
    7. '```' → logprob: -15.750054359436035
    8. '2' → logprob: -16.50005531311035
    9. '(x' → logprob: -16.87505531311035
    10. 's' → logprob: -17.00005531311035

Token 2582: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011493867496028543
    2. ',p' → logprob: -7.0011491775512695
    3. 'p' → logprob: -8.37614917755127
    4. ' ,' → logprob: -12.12614917755127
    5. ' p' → logprob: -13.75114917755127
    6. 's' → logprob: -14.87614917755127
    7. ',y' → logprob: -15.37614917755127
    8. ',s' → logprob: -15.87614917755127
    9. '   ' → logprob: -16.251150131225586
    10. ',
' → logprob: -16.626150131225586

Token 2583: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.023245595395565033
    2. ' p' → logprob: -3.7732455730438232
    3. '	p' → logprob: -16.898244857788086
    4. ' ' → logprob: -17.648244857788086
    5. '   ' → logprob: -17.773244857788086
    6. '<p' → logprob: -18.023244857788086
    7. '(p' → logprob: -18.773244857788086
    8. ''p' → logprob: -19.023244857788086
    9. '$p' → logprob: -19.023244857788086
    10. '```' → logprob: -19.148244857788086

Token 2584: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005267315078526735
    2. '0' → logprob: -5.505267143249512
    3. '1' → logprob: -7.005267143249512
    4. 'p' → logprob: -8.755267143249512
    5. '<|end|>' → logprob: -10.005267143249512
    6. 'x' → logprob: -11.130267143249512
    7. 's' → logprob: -11.255267143249512
    8. ',' → logprob: -11.255267143249512
    9. '```' → logprob: -12.005267143249512
    10. '5' → logprob: -12.567767143249512

Token 2585: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0018443976296111941
    2. '5' → logprob: -7.25184440612793
    3. '1' → logprob: -7.37684440612793
    4. 'p' → logprob: -8.00184440612793
    5. '<|end|>' → logprob: -9.62684440612793
    6. '0' → logprob: -9.87684440612793
    7. '```' → logprob: -10.87684440612793
    8. ',' → logprob: -11.37684440612793
    9. '   ' → logprob: -11.87684440612793
    10. 's' → logprob: -12.87684440612793

Token 2586: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010032468708232045
    2. ',p' → logprob: -9.500100135803223
    3. '),' → logprob: -11.375100135803223
    4. 'p' → logprob: -11.625100135803223
    5. ' ,' → logprob: -12.375100135803223
    6. '   ' → logprob: -15.125100135803223
    7. 'y' → logprob: -16.00010108947754
    8. ',y' → logprob: -16.00010108947754
    9. 'def' → logprob: -16.50010108947754
    10. 's' → logprob: -16.50010108947754

Token 2587: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.006767706945538521
    2. ' Point' → logprob: -5.006767749786377
    3. 'Segment' → logprob: -9.881767272949219
    4. 's' → logprob: -14.756767272949219
    5. '(Point' → logprob: -15.256767272949219
    6. 'p' → logprob: -15.381767272949219
    7. '<Point' → logprob: -16.25676727294922
    8. ' s' → logprob: -16.38176727294922
    9. '	Point' → logprob: -16.88176727294922
    10. '_Point' → logprob: -17.00676727294922

Token 2588: '(p' (ID: 2407)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.04914022982120514
    2. 'p' → logprob: -3.049140214920044
    3. '(Point' → logprob: -7.549140453338623
    4. ' Point' → logprob: -10.674139976501465
    5. '(p' → logprob: -13.549139976501465
    6. 's' → logprob: -13.799139976501465
    7. '_Point' → logprob: -15.049139976501465
    8. '<Point' → logprob: -16.17414093017578
    9. ' p' → logprob: -16.29914093017578
    10. '	Point' → logprob: -16.67414093017578

Token 2589: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4202302098274231
    2. '1' → logprob: -1.1702301502227783
    3. 'p' → logprob: -3.4202301502227783
    4. '0' → logprob: -10.2952299118042
    5. '```' → logprob: -10.6702299118042
    6. 'py' → logprob: -11.2952299118042
    7. ' p' → logprob: -11.4202299118042
    8. '
' → logprob: -12.2327299118042
    9. 'q' → logprob: -13.1702299118042
    10. 'px' → logprob: -13.6077299118042

Token 2590: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01317328680306673
    2. 'x' → logprob: -4.3881731033325195
    3. '1' → logprob: -7.6381731033325195
    4. 'p' → logprob: -8.88817310333252
    5. 'py' → logprob: -10.51317310333252
    6. '0' → logprob: -12.38817310333252
    7. '```' → logprob: -12.38817310333252
    8. 'Point' → logprob: -13.51317310333252
    9. 'Y' → logprob: -13.51317310333252
    10. ')' → logprob: -13.88817310333252

Token 2591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026431504637002945
    2. 'p' → logprob: -3.6514315605163574
    3. ',p' → logprob: -9.2764310836792
    4. ' ,' → logprob: -11.2764310836792
    5. 'y' → logprob: -11.4014310836792
    6. ' p' → logprob: -12.2764310836792
    7. 'py' → logprob: -12.7764310836792
    8. ')' → logprob: -13.6514310836792
    9. '),' → logprob: -13.9014310836792
    10. ',y' → logprob: -14.0264310836792

Token 2592: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001234428636962548
    2. ' p' → logprob: -9.000123023986816
    3. 'Point' → logprob: -18.875123977661133
    4. 's' → logprob: -19.875123977661133
    5. '<p' → logprob: -19.875123977661133
    6. '```' → logprob: -19.875123977661133
    7. 'point' → logprob: -20.250123977661133
    8. '   ' → logprob: -20.250123977661133
    9. '
' → logprob: -20.250123977661133
    10. '0' → logprob: -20.375123977661133

Token 2593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3635441064834595
    2. 'p' → logprob: -1.2385441064834595
    3. 'y' → logprob: -4.36354398727417
    4. '0' → logprob: -6.98854398727417
    5. 'Point' → logprob: -7.61354398727417
    6. '```' → logprob: -8.988544464111328
    7. '<|end|>' → logprob: -9.113544464111328
    8. 'Sorry' → logprob: -9.238544464111328
    9. ' p' → logprob: -9.363544464111328
    10. 's' → logprob: -9.613544464111328

Token 2594: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0020090530160814524
    2. '1' → logprob: -6.75200891494751
    3. 'p' → logprob: -7.12700891494751
    4. '<|end|>' → logprob: -11.502009391784668
    5. '5' → logprob: -11.752009391784668
    6. 'py' → logprob: -12.627009391784668
    7. '0' → logprob: -12.877009391784668
    8. '```' → logprob: -13.252009391784668
    9. ')' → logprob: -13.877009391784668
    10. ',' → logprob: -14.252009391784668

Token 2595: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5210087299346924
    2. ')' → logprob: -1.0210087299346924
    3. 's' → logprob: -3.6460087299346924
    4. '))' → logprob: -4.896008491516113
    5. '))
' → logprob: -5.146008491516113
    6. '       ' → logprob: -5.271008491516113
    7. ')
' → logprob: -7.646008491516113
    8. ')s' → logprob: -8.271008491516113
    9. '())
' → logprob: -8.646008491516113
    10. '   ' → logprob: -8.771008491516113

Token 2596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010034659877419472
    2. 's' → logprob: -4.635034561157227
    3. ' s' → logprob: -9.260034561157227
    4. '   ' → logprob: -9.635034561157227
    5. '           ' → logprob: -10.135034561157227
    6. '<|end|>' → logprob: -10.385034561157227
    7. '        ' → logprob: -10.885034561157227
    8. '<|end|>' → logprob: -12.010034561157227
    9. '     ' → logprob: -12.260034561157227
    10. ' ' → logprob: -12.510034561157227

Token 2597: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.5046147704124451
    2. '       ' → logprob: -1.0046148300170898
    3. ' s' → logprob: -3.50461483001709
    4. '   ' → logprob: -11.37961483001709
    5. ' ' → logprob: -12.62961483001709
    6. '	s' → logprob: -14.12961483001709
    7. '<|end|>' → logprob: -14.12961483001709
    8. '           ' → logprob: -14.75461483001709
    9. '#' → logprob: -15.75461483001709
    10. 'l' → logprob: -16.254613876342773

Token 2598: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. 's' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.625001907348633
    4. '
' → logprob: -17.000001907348633
    5. '_' → logprob: -18.000001907348633
    6. '=' → logprob: -18.250001907348633
    7. '3' → logprob: -18.500001907348633
    8. '２' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. '#' → logprob: -18.812501907348633

Token 2599: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788901224732399
    2. '=' → logprob: -2.578890085220337
    3. '＝' → logprob: -16.328889846801758
    4. 's' → logprob: -16.453889846801758
    5. ')' → logprob: -16.578889846801758
    6. '=
' → logprob: -17.078889846801758
    7. '<|end|>' → logprob: -17.078889846801758
    8. ' ' → logprob: -17.578889846801758
    9. ' =
' → logprob: -17.703889846801758
    10. '   ' → logprob: -18.203889846801758

Token 2600: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.676292231422849e-05
    2. ' Segment' → logprob: -11.000017166137695
    3. 'Point' → logprob: -18.250017166137695
    4. 'Seg' → logprob: -18.500017166137695
    5. '_segment' → logprob: -19.500017166137695
    6. 'Section' → logprob: -20.000017166137695
    7. 'segment' → logprob: -20.000017166137695
    8. '   ' → logprob: -20.375017166137695
    9. 'Segments' → logprob: -20.375017166137695
    10. '
' → logprob: -20.500017166137695

Token 2601: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0011708177626132965
    2. 'Point' → logprob: -6.751170635223389
    3. '<Point' → logprob: -14.501171112060547
    4. ' Point' → logprob: -17.126171112060547
    5. '.Point' → logprob: -17.376171112060547
    6. '	Point' → logprob: -18.001171112060547
    7. '```' → logprob: -18.376171112060547
    8. 'Segment' → logprob: -18.501171112060547
    9. '_Point' → logprob: -19.001171112060547
    10. '#' → logprob: -19.376171112060547

Token 2602: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012403888104017824
    2. '(p' → logprob: -9.000123977661133
    3. ' p' → logprob: -15.500123977661133
    4. 'Point' → logprob: -15.875123977661133
    5. 's' → logprob: -16.375123977661133
    6. '0' → logprob: -16.625123977661133
    7. '(' → logprob: -17.500123977661133
    8. '(s' → logprob: -18.875123977661133
    9. '2' → logprob: -19.000123977661133
    10. '
' → logprob: -19.375123977661133

Token 2603: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0564331205387134e-05
    2. 'p' → logprob: -11.87501049041748
    3. '3' → logprob: -13.37501049041748
    4. '0' → logprob: -14.37501049041748
    5. '```' → logprob: -14.75001049041748
    6. ' ' → logprob: -15.37501049041748
    7. 's' → logprob: -15.81251049041748
    8. '``' → logprob: -16.000011444091797
    9. '(' → logprob: -16.125011444091797
    10. '２' → logprob: -17.125011444091797

Token 2604: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1637164789135568e-05
    2. 'p' → logprob: -11.625011444091797
    3. '0' → logprob: -13.500011444091797
    4. 's' → logprob: -14.875011444091797
    5. '2' → logprob: -15.250011444091797
    6. 'y' → logprob: -15.750011444091797
    7. '```' → logprob: -15.875011444091797
    8. 'px' → logprob: -16.000011444091797
    9. ',' → logprob: -16.125011444091797
    10. 'q' → logprob: -17.250011444091797

Token 2605: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019030878320336342
    2. ',p' → logprob: -8.625190734863281
    3. 'p' → logprob: -11.750190734863281
    4. ' ,' → logprob: -13.250190734863281
    5. ',y' → logprob: -14.625190734863281
    6. ',
' → logprob: -15.250190734863281
    7. '(p' → logprob: -15.750190734863281
    8. ' p' → logprob: -16.37519073486328
    9. '[' → logprob: -17.25019073486328
    10. 'y' → logprob: -17.37519073486328

Token 2606: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02324547804892063
    2. ' p' → logprob: -3.7732455730438232
    3. '0' → logprob: -18.648244857788086
    4. '$p' → logprob: -20.023244857788086
    5. '	p' → logprob: -20.023244857788086
    6. ' ' → logprob: -20.148244857788086
    7. ''p' → logprob: -20.523244857788086
    8. '<p' → logprob: -20.648244857788086
    9. '(p' → logprob: -21.023244857788086
    10. '2' → logprob: -21.148244857788086

Token 2607: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6217701435089111
    2. '2' → logprob: -0.8717701435089111
    3. '0' → logprob: -3.246770143508911
    4. '3' → logprob: -5.871769905090332
    5. 's' → logprob: -6.371769905090332
    6. '1' → logprob: -7.996769905090332
    7. '5' → logprob: -8.371769905090332
    8. '```' → logprob: -8.371769905090332
    9. 'y' → logprob: -8.496769905090332
    10. ',' → logprob: -8.746769905090332

Token 2608: 'y' (ID: 88)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5615774393081665
    2. 'y' → logprob: -1.0615774393081665
    3. 'p' → logprob: -2.811577320098877
    4. '0' → logprob: -4.186577320098877
    5. 'py' → logprob: -5.686577320098877
    6. '2' → logprob: -6.436577320098877
    7. '5' → logprob: -6.936577320098877
    8. '1' → logprob: -7.686577320098877
    9. ',' → logprob: -7.686577320098877
    10. '```' → logprob: -7.686577320098877

Token 2609: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004228091274853796
    2. ',p' → logprob: -7.875422954559326
    3. 'p' → logprob: -10.500422477722168
    4. ' ,' → logprob: -11.500422477722168
    5. ',y' → logprob: -13.125422477722168
    6. '),' → logprob: -13.625422477722168
    7. '0' → logprob: -14.500422477722168
    8. 'y' → logprob: -14.500422477722168
    9. ',
' → logprob: -16.000423431396484
    10. '       ' → logprob: -16.250423431396484

Token 2610: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00015335931675508618
    2. 'p' → logprob: -9.000153541564941
    3. ' Point' → logprob: -10.500153541564941
    4. 'Segment' → logprob: -13.000153541564941
    5. 's' → logprob: -16.875152587890625
    6. ' p' → logprob: -17.250152587890625
    7. 'Points' → logprob: -18.875152587890625
    8. 'point' → logprob: -19.750152587890625
    9. '_Point' → logprob: -20.500152587890625
    10. '	Point' → logprob: -20.625152587890625

Token 2611: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.001001847442239523
    2. 's' → logprob: -7.251001834869385
    3. 'Point' → logprob: -8.251002311706543
    4. '(p' → logprob: -11.001002311706543
    5. '2' → logprob: -12.501002311706543
    6. '(' → logprob: -13.126002311706543
    7. '0' → logprob: -13.126002311706543
    8. ' p' → logprob: -13.376002311706543
    9. '   ' → logprob: -13.626002311706543
    10. '```' → logprob: -13.626002311706543

Token 2612: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002862650901079178
    2. '3' → logprob: -6.502862453460693
    3. 'p' → logprob: -6.627862453460693
    4. '0' → logprob: -10.502862930297852
    5. 's' → logprob: -12.377862930297852
    6. 'py' → logprob: -13.002862930297852
    7. '```' → logprob: -14.502862930297852
    8. ' ' → logprob: -14.877862930297852
    9. '   ' → logprob: -15.002862930297852
    10. '
' → logprob: -15.377862930297852

Token 2613: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06837411969900131
    2. '2' → logprob: -3.1933741569519043
    3. 'x' → logprob: -4.068374156951904
    4. 's' → logprob: -5.193374156951904
    5. 'y' → logprob: -6.568374156951904
    6. 'p' → logprob: -7.443374156951904
    7. '3' → logprob: -8.443373680114746
    8. 'q' → logprob: -9.443373680114746
    9. '```' → logprob: -10.193373680114746
    10. ',' → logprob: -10.568373680114746

Token 2614: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.002517753979191184
    2. ',' → logprob: -6.8775177001953125
    3. ' p' → logprob: -7.1275177001953125
    4. ',p' → logprob: -7.5025177001953125
    5. '0' → logprob: -9.502517700195312
    6. ')' → logprob: -10.752517700195312
    7. '       ' → logprob: -11.752517700195312
    8. ')p' → logprob: -12.002517700195312
    9. 's' → logprob: -12.127517700195312
    10. '   ' → logprob: -12.502517700195312

Token 2615: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019286326132714748
    2. ' p' → logprob: -6.251928806304932
    3. '   ' → logprob: -20.751928329467773
    4. '<p' → logprob: -21.126928329467773
    5. '	p' → logprob: -21.501928329467773
    6. '```' → logprob: -22.001928329467773
    7. ')p' → logprob: -22.251928329467773
    8. ' ' → logprob: -22.251928329467773
    9. '$p' → logprob: -22.376928329467773
    10. '0' → logprob: -22.501928329467773

Token 2616: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.032561399042606354
    2. 'y' → logprob: -3.6575613021850586
    3. '2' → logprob: -5.407561302185059
    4. '1' → logprob: -7.282561302185059
    5. 's' → logprob: -8.157561302185059
    6. '<|end|>' → logprob: -8.782561302185059
    7. 'p' → logprob: -8.907561302185059
    8. '```' → logprob: -9.032561302185059
    9. '0' → logprob: -9.532561302185059
    10. 'Sorry' → logprob: -9.782561302185059

Token 2617: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003062646137550473
    2. 'x' → logprob: -8.375306129455566
    3. 's' → logprob: -10.750306129455566
    4. '2' → logprob: -11.250306129455566
    5. '3' → logprob: -11.625306129455566
    6. '5' → logprob: -11.625306129455566
    7. ',' → logprob: -12.125306129455566
    8. '1' → logprob: -12.250306129455566
    9. '0' → logprob: -12.500306129455566
    10. '7' → logprob: -13.000306129455566

Token 2618: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1466505378484726
    2. ')' → logprob: -2.021650552749634
    3. '       ' → logprob: -5.771650314331055
    4. '   ' → logprob: -7.521650314331055
    5. ')
' → logprob: -8.396650314331055
    6. '):
' → logprob: -10.896650314331055
    7. '))
' → logprob: -11.396650314331055
    8. 'def' → logprob: -11.396650314331055
    9. '())
' → logprob: -11.521650314331055
    10. '))' → logprob: -11.771650314331055

Token 2619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011231612414121628
    2. '   ' → logprob: -4.511231422424316
    3. '<|end|>' → logprob: -9.386231422424316
    4. ' if' → logprob: -10.261231422424316
    5. 'if' → logprob: -10.636231422424316
    6. ' for' → logprob: -11.761231422424316
    7. 'for' → logprob: -12.011231422424316
    8. '```' → logprob: -12.136231422424316
    9. '           ' → logprob: -12.511231422424316
    10. '#' → logprob: -12.511231422424316

Token 2620: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04487026110291481
    2. 'if' → logprob: -3.294870376586914
    3. '   ' → logprob: -5.294870376586914
    4. 'for' → logprob: -7.669870376586914
    5. '       ' → logprob: -7.794870376586914
    6. 'd' → logprob: -8.044870376586914
    7. 'dist' → logprob: -8.794870376586914
    8. 'res' → logprob: -9.044870376586914
    9. '```' → logprob: -9.294870376586914
    10. 'r' → logprob: -9.294870376586914

Token 2621: '(c' (ID: 2410)
  Prédit: '(distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(distance' → logprob: -0.09008437395095825
    2. '(int' → logprob: -3.2150843143463135
    3. '(is' → logprob: -3.9650843143463135
    4. '(' → logprob: -4.215084552764893
    5. '(c' → logprob: -4.465084552764893
    6. '(cc' → logprob: -8.715084075927734
    7. '("' → logprob: -9.090084075927734
    8. '(len' → logprob: -9.465084075927734
    9. '(float' → logprob: -9.590084075927734
    10. '(min' → logprob: -9.590084075927734

Token 2622: 'ross' (ID: 2838)
  Prédit: 'ross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ross' → logprob: -0.0004305500478949398
    2. 'cross' → logprob: -8.2504301071167
    3. 'distance' → logprob: -10.5004301071167
    4. 'lass' → logprob: -10.8754301071167
    5. 'oss' → logprob: -11.0004301071167
    6. '#' → logprob: -11.2504301071167
    7. 'c' → logprob: -11.5004301071167
    8. 'h' → logprob: -12.0004301071167
    9. ' ross' → logprob: -12.0004301071167
    10. '(distance' → logprob: -12.0004301071167

Token 2623: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0428696908056736
    2. '(s' → logprob: -3.292869806289673
    3. 's' → logprob: -5.667869567871094
    4. 'product' → logprob: -6.917869567871094
    5. ')' → logprob: -8.667869567871094
    6. 'points' → logprob: -8.917869567871094
    7. '(' → logprob: -11.417869567871094
    8. ')s' → logprob: -11.917869567871094
    9. '))' → logprob: -12.167869567871094
    10. 'ss' → logprob: -12.792869567871094

Token 2624: '_ss' (ID: 61028)
  Prédit: '_ss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ss' → logprob: -0.0015408077742904425
    2. '_s' → logprob: -6.876540660858154
    3. 'ss' → logprob: -8.626541137695312
    4. '_ll' → logprob: -8.751541137695312
    5. '(s' → logprob: -9.126541137695312
    6. 's' → logprob: -10.126541137695312
    7. '(ss' → logprob: -11.001541137695312
    8. '(' → logprob: -14.126541137695312
    9. '```' → logprob: -14.251541137695312
    10. '_l' → logprob: -14.376541137695312

Token 2625: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.0206720617134124e-05
    2. 's' → logprob: -11.50001049041748
    3. ')' → logprob: -17.250009536743164
    4. ')s' → logprob: -17.375009536743164
    5. '(' → logprob: -18.000009536743164
    6. ')(' → logprob: -18.125009536743164
    7. ' (' → logprob: -18.250009536743164
    8. '(
' → logprob: -18.750009536743164
    9. '```' → logprob: -19.750009536743164
    10. '((' → logprob: -21.000009536743164

Token 2626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 's' → logprob: -16.0
    3. '(s' → logprob: -17.125
    4. '2' → logprob: -17.75
    5. '```' → logprob: -18.0
    6. '１' → logprob: -18.75
    7. ' ' → logprob: -18.875
    8. ')' → logprob: -19.25
    9. '_' → logprob: -19.375
    10. ' s' → logprob: -19.5

Token 2627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013827363727614284
    2. 's' → logprob: -7.001382827758789
    3. ',s' → logprob: -7.751382827758789
    4. ' ,' → logprob: -10.376382827758789
    5. '(s' → logprob: -11.626382827758789
    6. ',
' → logprob: -14.501382827758789
    7. ' s' → logprob: -14.751382827758789
    8. '(' → logprob: -17.12638282775879
    9. '```' → logprob: -17.62638282775879
    10. ')' → logprob: -18.00138282775879

Token 2628: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.180879816180095e-05
    2. ' s' → logprob: -9.875051498413086
    3. '   ' → logprob: -15.500051498413086
    4. '	s' → logprob: -18.000051498413086
    5. '(s' → logprob: -18.250051498413086
    6. '       ' → logprob: -18.750051498413086
    7. ')' → logprob: -18.750051498413086
    8. '    ' → logprob: -19.125051498413086
    9. 'с' → logprob: -19.625051498413086
    10. '  ' → logprob: -19.875051498413086

Token 2629: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.375
    3. '1' → logprob: -17.0
    4. '２' → logprob: -18.0
    5. '۲' → logprob: -19.3125
    6. '```' → logprob: -20.0
    7. '२' → logprob: -20.3125
    8. '₂' → logprob: -20.625
    9. '২' → logprob: -20.75
    10. ',' → logprob: -21.4375

Token 2630: '))' (ID: 915)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.16487906873226166
    2. ')' → logprob: -1.9148790836334229
    3. '(' → logprob: -5.664878845214844
    4. '())' → logprob: -7.164878845214844
    5. '))' → logprob: -8.414878845214844
    6. '   ' → logprob: -9.289878845214844
    7. 's' → logprob: -10.164878845214844
    8. '       ' → logprob: -10.664878845214844
    9. '(
' → logprob: -11.664878845214844
    10. ')
' → logprob: -12.039878845214844

Token 2631: '  

' (ID: 11691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47422757744789124
    2. 'def' → logprob: -0.9742275476455688
    3. ' def' → logprob: -9.599227905273438
    4. 'if' → logprob: -9.974227905273438
    5. 'return' → logprob: -11.599227905273438
    6. ' if' → logprob: -11.599227905273438
    7. '
' → logprob: -11.849227905273438
    8. '```' → logprob: -12.349227905273438
    9. '#' → logprob: -12.474227905273438
    10. '       ' → logprob: -14.099227905273438

Token 2632: 'def' (ID: 1314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004104523453861475
    2. 'def' → logprob: -5.5041046142578125
    3. '       ' → logprob: -12.004104614257812
    4. 'return' → logprob: -12.004104614257812
    5. '#' → logprob: -12.504104614257812
    6. '```' → logprob: -12.754104614257812
    7. '
' → logprob: -13.004104614257812
    8. '    ' → logprob: -13.379104614257812
    9. ' def' → logprob: -13.754104614257812
    10. '    
' → logprob: -14.504104614257812

Token 2633: ' verify' (ID: 14866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8829205632209778
    2. ' verify' → logprob: -1.257920503616333
    3. 'verify' → logprob: -2.257920503616333
    4. '__' → logprob: -2.382920503616333
    5. ' def' → logprob: -3.257920503616333
    6. ' __' → logprob: -3.507920503616333
    7. 'define' → logprob: -5.132920742034912
    8. 'if' → logprob: -5.132920742034912
    9. '_' → logprob: -5.382920742034912
    10. ' define' → logprob: -5.507920742034912

Token 2634: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0029935126658529043
    2. 'def' → logprob: -6.002993583679199
    3. '()' → logprob: -7.752993583679199
    4. '():' → logprob: -10.0029935836792
    5. '(' → logprob: -11.0029935836792
    6. ' def' → logprob: -11.5029935836792
    7. '```' → logprob: -12.7529935836792
    8. '():
' → logprob: -12.8779935836792
    9. '()
' → logprob: -13.8779935836792
    10. '_def' → logprob: -14.0029935836792

Token 2635: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6802704930305481
    2. '2' → logprob: -0.8052704930305481
    3. '4' → logprob: -3.3052704334259033
    4. '0' → logprob: -5.805270671844482
    5. '5' → logprob: -5.930270671844482
    6. '1' → logprob: -6.555270671844482
    7. '9' → logprob: -6.930270671844482
    8. '6' → logprob: -7.305270671844482
    9. 'def' → logprob: -7.430270671844482
    10. '7' → logprob: -8.055270195007324

Token 2636: 'D' (ID: 35)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.14012157917022705
    2. 'D' → logprob: -2.6401214599609375
    3. 'A' → logprob: -3.1401214599609375
    4. 'B' → logprob: -4.1401214599609375
    5. 'E' → logprob: -9.015121459960938
    6. 'def' → logprob: -10.140121459960938
    7. 'F' → logprob: -10.890121459960938
    8. 'c' → logprob: -12.390121459960938
    9. '
' → logprob: -13.702621459960938
    10. '```' → logprob: -13.827621459960938

Token 2637: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16022808849811554
    2. '():
' → logprob: -1.9102281332015991
    3. '():
' → logprob: -12.53522777557373
    4. 'def' → logprob: -15.91022777557373
    5. '()' → logprob: -16.285228729248047
    6. '():

' → logprob: -16.285228729248047
    7. ' ():' → logprob: -17.035228729248047
    8. '()):
' → logprob: -21.160228729248047
    9. ' def' → logprob: -21.410228729248047
    10. '()
' → logprob: -21.910228729248047

Token 2638: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.04204468056559563
    2. '   ' → logprob: -3.2920446395874023
    3. ' Q' → logprob: -5.542044639587402
    4. 'def' → logprob: -10.167044639587402
    5. '	Q' → logprob: -10.292044639587402
    6. '```' → logprob: -13.292044639587402
    7. ' ' → logprob: -14.292044639587402
    8. '_Q' → logprob: -14.542044639587402
    9. '(Q' → logprob: -15.042044639587402
    10. ' def' → logprob: -15.417044639587402

Token 2639: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.0004050514253322035
    2. '   ' → logprob: -8.250405311584473
    3. ' Q' → logprob: -9.250405311584473
    4. 'def' → logprob: -10.000405311584473
    5. 'pass' → logprob: -13.500405311584473
    6. '	Q' → logprob: -14.625405311584473
    7. 'for' → logprob: -15.375405311584473
    8. '_Q' → logprob: -16.500404357910156
    9. 'import' → logprob: -17.000404357910156
    10. 'q' → logprob: -17.125404357910156

Token 2640: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020839422941208
    2. '=' → logprob: -2.350208282470703
    3. '   ' → logprob: -14.725208282470703
    4. 'def' → logprob: -14.725208282470703
    5. '＝' → logprob: -14.975208282470703
    6. ' ' → logprob: -15.975208282470703
    7. '=input' → logprob: -16.225208282470703
    8. '=
' → logprob: -16.725208282470703
    9. ' =
' → logprob: -16.975208282470703
    10. ':' → logprob: -17.600208282470703

Token 2641: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.085517113911919e-05
    2. ' int' → logprob: -10.00005054473877
    3. '(int' → logprob: -12.87505054473877
    4. '   ' → logprob: -13.12505054473877
    5. '[int' → logprob: -15.00005054473877
    6. '=int' → logprob: -15.12505054473877
    7. 'def' → logprob: -15.75005054473877
    8. 'input' → logprob: -16.750051498413086
    9. '  ' → logprob: -17.375051498413086
    10. 'lambda' → logprob: -17.875051498413086

Token 2642: '(input' (ID: 10054)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6932470798492432
    2. 'input' → logprob: -0.6932470798492432
    3. '(input' → logprob: -9.318246841430664
    4. '(int' → logprob: -12.193246841430664
    5. '   ' → logprob: -13.568246841430664
    6. 'range' → logprob: -14.068246841430664
    7. ' input' → logprob: -14.068246841430664
    8. ' int' → logprob: -14.818246841430664
    9. 'import' → logprob: -14.943246841430664
    10. ' ' → logprob: -15.068246841430664

Token 2643: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22233280539512634
    2. '())
' → logprob: -2.097332715988159
    3. '():
' → logprob: -3.722332715988159
    4. '())' → logprob: -4.222332954406738
    5. '()):
' → logprob: -4.347332954406738
    6. '):
' → logprob: -4.722332954406738
    7. ')' → logprob: -5.597332954406738
    8. '():' → logprob: -5.722332954406738
    9. '()
' → logprob: -5.722332954406738
    10. ')
' → logprob: -5.847332954406738

Token 2644: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023478278890252113
    2. 'for' → logprob: -3.7734782695770264
    3. 'def' → logprob: -9.148478507995605
    4. '```' → logprob: -9.523478507995605
    5. ' for' → logprob: -10.148478507995605
    6. 'Query' → logprob: -12.398478507995605
    7. 'Code' → logprob: -12.523478507995605
    8. '
' → logprob: -13.273478507995605
    9. '``' → logprob: -13.523478507995605
    10. '	for' → logprob: -13.773478507995605

Token 2645: ' Query' (ID: 18574)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08996672183275223
    2. 'Query' (adapté à ' Query') → logprob: -2.8399667739868164
    3. '   ' → logprob: -3.5899667739868164
    4. ' for' → logprob: -11.714966773986816
    5. 'def' → logprob: -13.464966773986816
    6. ' Query' → logprob: -14.589966773986816
    7. '```' → logprob: -14.839966773986816
    8. '	for' → logprob: -15.214966773986816
    9. '	Query' → logprob: -15.714966773986816
    10. 'For' → logprob: -15.839966773986816

Token 2646: ' =' (ID: 314)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07039807736873627
    2. '=' → logprob: -3.1953980922698975
    3. '():' → logprob: -4.570397853851318
    4. '():
' → logprob: -4.945397853851318
    5. '()' → logprob: -5.695397853851318
    6. 'def' → logprob: -5.820397853851318
    7. ':' → logprob: -6.820397853851318
    8. ' =' → logprob: -7.195397853851318
    9. 'for' → logprob: -7.820397853851318
    10. '=
' → logprob: -7.820397853851318

Token 2647: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08434335887432098
    2. '[p' → logprob: -3.084343433380127
    3. '   ' → logprob: -4.709343433380127
    4. 'for' → logprob: -4.959343433380127
    5. '[list' → logprob: -4.959343433380127
    6. 'def' → logprob: -5.709343433380127
    7. '[line' → logprob: -6.334343433380127
    8. '[int' → logprob: -6.459343433380127
    9. '[
' → logprob: -7.084343433380127
    10. '[List' → logprob: -7.084343433380127

Token 2648: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -9.088346359931165e-07
    2. 'def' → logprob: -14.000000953674316
    3. '[list' → logprob: -17.125
    4. ' list' → logprob: -17.25
    5. '
' → logprob: -17.75
    6. 'pass' → logprob: -18.0
    7. '(list' → logprob: -18.125
    8. 'map' → logprob: -19.5
    9. '   ' → logprob: -19.625
    10. 'for' → logprob: -20.25

Token 2649: '(map' (ID: 16946)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32385683059692383
    2. '(list' → logprob: -1.6988568305969238
    3. '(map' → logprob: -2.698856830596924
    4. 'list' → logprob: -4.448856830596924
    5. 'pass' → logprob: -4.573856830596924
    6. '(int' → logprob: -6.448856830596924
    7. 'map' → logprob: -6.823856830596924
    8. '(lambda' → logprob: -7.073856830596924
    9. 'int' → logprob: -8.698856353759766
    10. '(
' → logprob: -9.198856353759766

Token 2650: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3240754008293152
    2. 'int' → logprob: -1.32407546043396
    3. 'def' → logprob: -5.699075222015381
    4. '```' → logprob: -5.699075222015381
    5. '[int' → logprob: -5.824075222015381
    6. '=int' → logprob: -7.949075222015381
    7. '   ' → logprob: -8.699075698852539
    8. ']int' → logprob: -8.824075698852539
    9. '<int' → logprob: -8.949075698852539
    10. 'in' → logprob: -9.699075698852539

Token 2651: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00903606228530407
    2. '(input' → logprob: -5.134036064147949
    3. '[int' → logprob: -6.509036064147949
    4. 'int' → logprob: -7.634036064147949
    5. '=int' → logprob: -8.25903606414795
    6. '```' → logprob: -8.25903606414795
    7. ',int' → logprob: -8.50903606414795
    8. '<int' → logprob: -8.75903606414795
    9. 'def' → logprob: -8.88403606414795
    10. 'input' → logprob: -10.38403606414795

Token 2652: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0032791912090033293
    2. 'int' → logprob: -5.753279209136963
    3. 'lambda' → logprob: -9.503278732299805
    4. 'def' → logprob: -11.253278732299805
    5. ' input' → logprob: -11.628278732299805
    6. '(input' → logprob: -13.503278732299805
    7. 'range' → logprob: -13.753278732299805
    8. '[input' → logprob: -14.128278732299805
    9. 'p' → logprob: -14.753278732299805
    10. '<input' → logprob: -15.003278732299805

Token 2653: '().' (ID: 1454)
  Prédit: '(split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(split' → logprob: -0.6409742832183838
    2. '(s' → logprob: -1.8909742832183838
    3. 'split' → logprob: -2.390974283218384
    4. '(range' → logprob: -2.515974283218384
    5. 'def' → logprob: -3.390974283218384
    6. '.split' → logprob: -4.140974044799805
    7. '_split' → logprob: -4.390974044799805
    8. '(Q' → logprob: -5.265974044799805
    9. '(lambda' → logprob: -5.265974044799805
    10. '(map' → logprob: -5.390974044799805

Token 2654: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.60414821645827e-06
    2. 'spl' → logprob: -12.500004768371582
    3. 'strip' → logprob: -15.250004768371582
    4. ' split' → logprob: -15.500004768371582
    5. '(split' → logprob: -15.750004768371582
    6. '
' → logprob: -16.875003814697266
    7. 'str' → logprob: -17.375003814697266
    8. ')' → logprob: -17.500003814697266
    9. 'select' → logprob: -17.875003814697266
    10. 'input' → logprob: -18.500003814697266

Token 2655: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.000770436367020011
    2. '()' → logprob: -7.750770568847656
    3. '()[' → logprob: -8.375770568847656
    4. 'range' → logprob: -11.000770568847656
    5. '))' → logprob: -11.250770568847656
    6. '())' → logprob: -11.500770568847656
    7. '())){
' → logprob: -11.625770568847656
    8. '_' → logprob: -11.625770568847656
    9. '()))
' → logprob: -11.875770568847656
    10. 'for' → logprob: -12.000770568847656

Token 2656: ' for' (ID: 395)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38037487864494324
    2. 'for' → logprob: -1.3803749084472656
    3. '()' → logprob: -3.0053749084472656
    4. ')' → logprob: -4.255374908447266
    5. ' for' → logprob: -7.505374908447266
    6. 'def' → logprob: -7.880374908447266
    7. '())
' → logprob: -9.255374908447266
    8. '   ' → logprob: -10.005374908447266
    9. '()):
' → logprob: -10.630374908447266
    10. '()[' → logprob: -10.880374908447266

Token 2657: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7888874411582947
    2. '_range' → logprob: -0.9138874411582947
    3. '_' → logprob: -2.1638875007629395
    4. 'def' → logprob: -4.2888875007629395
    5. ' range' → logprob: -5.2888875007629395
    6. '_Q' → logprob: -5.7888875007629395
    7. '_:' → logprob: -6.6638875007629395
    8. '_=' → logprob: -6.6638875007629395
    9. 'for' → logprob: -6.9138875007629395
    10. '   ' → logprob: -6.9138875007629395

Token 2658: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06877760589122772
    2. '_range' → logprob: -3.193777561187744
    3. '_Q' → logprob: -4.568777561187744
    4. 'Q' → logprob: -5.068777561187744
    5. '(range' → logprob: -5.193777561187744
    6. '_' → logprob: -6.443777561187744
    7. '(Q' → logprob: -7.443777561187744
    8. ' range' → logprob: -7.818777561187744
    9. 'in' → logprob: -8.943778038024902
    10. 'for' → logprob: -9.193778038024902

Token 2659: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036719252821058035
    2. ' range' → logprob: -5.628672122955322
    3. '_range' → logprob: -11.128671646118164
    4. 'Q' → logprob: -11.128671646118164
    5. '_' → logprob: -11.253671646118164
    6. '_Q' → logprob: -11.503671646118164
    7. 'Query' → logprob: -11.753671646118164
    8. 'Range' → logprob: -12.503671646118164
    9. '(range' → logprob: -12.628671646118164
    10. '	range' → logprob: -13.753671646118164

Token 2660: '(Q' (ID: 14437)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00015050210640765727
    2. '(Q' → logprob: -9.500150680541992
    3. '_Q' → logprob: -9.500150680541992
    4. 'range' → logprob: -14.625150680541992
    5. ' Q' → logprob: -15.625150680541992
    6. '	Q' → logprob: -16.250150680541992
    7. '<Q' → logprob: -16.875150680541992
    8. '-Q' → logprob: -17.125150680541992
    9. 'Query' → logprob: -18.250150680541992
    10. ',Q' → logprob: -18.625150680541992

Token 2661: ')]
' (ID: 11587)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06242427974939346
    2. '):' → logprob: -2.9374241828918457
    3. '   ' → logprob: -5.187424182891846
    4. 'def' → logprob: -6.687424182891846
    5. ')]' → logprob: -8.687424659729004
    6. ')' → logprob: -8.812424659729004
    7. ']):
' → logprob: -8.937424659729004
    8. ':' → logprob: -9.812424659729004
    9. ']:
' → logprob: -9.812424659729004
    10. ')]
' → logprob: -10.062424659729004

Token 2662: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00029065259150229394
    2. 'def' → logprob: -8.875290870666504
    3. 'for' → logprob: -9.000290870666504
    4. ' for' → logprob: -11.125290870666504
    5. '```' → logprob: -12.250290870666504
    6. '#' → logprob: -12.875290870666504
    7. '<|end|>' → logprob: -13.125290870666504
    8. ')' → logprob: -13.375290870666504
    9. '   ' → logprob: -15.500290870666504
    10. '
' → logprob: -15.500290870666504

Token 2663: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31360673904418945
    2. '   ' → logprob: -1.3136067390441895
    3. 'def' → logprob: -8.188606262207031
    4. ' for' → logprob: -9.688606262207031
    5. '	for' → logprob: -12.313606262207031
    6. 'For' → logprob: -15.188606262207031
    7. '       ' → logprob: -15.688606262207031
    8. '
' → logprob: -16.56360626220703
    9. 'from' → logprob: -17.18860626220703
    10. '```' → logprob: -17.18860626220703

Token 2664: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.018647575750947
    2. ' p' → logprob: -4.01864767074585
    3. '_p' → logprob: -8.143647193908691
    4. '_' → logprob: -10.018647193908691
    5. 's' → logprob: -10.143647193908691
    6. 'px' → logprob: -10.643647193908691
    7. 'i' → logprob: -10.768647193908691
    8. '   ' → logprob: -11.018647193908691
    9. 'q' → logprob: -11.143647193908691
    10. '(p' → logprob: -11.143647193908691

Token 2665: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002506111632101238
    2. 'p' → logprob: -9.250250816345215
    3. '1' → logprob: -9.375250816345215
    4. '2' → logprob: -10.125250816345215
    5. '[' → logprob: -11.875250816345215
    6. '   ' → logprob: -12.500250816345215
    7. '```' → logprob: -12.937750816345215
    8. '
' → logprob: -13.125250816345215
    9. '(p' → logprob: -13.187750816345215
    10. '3' → logprob: -13.500250816345215

Token 2666: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -9.269565634895116e-05
    2. ',' → logprob: -9.875092506408691
    3. '0' → logprob: -10.125092506408691
    4. 'p' → logprob: -14.500092506408691
    5. '#' → logprob: -15.625092506408691
    6. '```' → logprob: -15.625092506408691
    7. 'y' → logprob: -16.125093460083008
    8. '[' → logprob: -16.750093460083008
    9. ' ,' → logprob: -17.250093460083008
    10. 's' → logprob: -17.375093460083008

Token 2667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013707150937989354
    2. ',p' → logprob: -6.626370906829834
    3. 'p' → logprob: -10.126370429992676
    4. ' ,' → logprob: -12.626370429992676
    5. '_,' → logprob: -15.001370429992676
    6. ' p' → logprob: -15.376370429992676
    7. '0' → logprob: -15.501370429992676
    8. 'def' → logprob: -15.626370429992676
    9. 'in' → logprob: -16.126371383666992
    10. '#' → logprob: -16.376371383666992

Token 2668: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.016036950051784515
    2. ' p' → logprob: -4.1410369873046875
    3. '   ' → logprob: -12.891036987304688
    4. '    ' → logprob: -17.016036987304688
    5. ' ' → logprob: -17.391036987304688
    6. '  ' → logprob: -17.766036987304688
    7. '	p' → logprob: -17.766036987304688
    8. '_p' → logprob: -19.016036987304688
    9. '<p' → logprob: -19.391036987304688
    10. '       ' → logprob: -19.391036987304688

Token 2669: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01457771472632885
    2. 'p' → logprob: -4.389577865600586
    3. '1' → logprob: -6.764577865600586
    4. '0' → logprob: -7.264577865600586
    5. ',' → logprob: -9.139577865600586
    6. 'py' → logprob: -9.889577865600586
    7. 'x' → logprob: -11.014577865600586
    8. 'Sorry' → logprob: -12.264577865600586
    9. '   ' → logprob: -12.514577865600586
    10. '```' → logprob: -12.514577865600586

Token 2670: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04333382472395897
    2. ',' → logprob: -3.1683337688446045
    3. 'x' → logprob: -8.543334007263184
    4. 'p' → logprob: -9.668334007263184
    5. ',y' → logprob: -10.668334007263184
    6. '0' → logprob: -10.918334007263184
    7. '1' → logprob: -11.668334007263184
    8. ' ,' → logprob: -11.918334007263184
    9. '#' → logprob: -12.918334007263184
    10. ',
' → logprob: -13.168334007263184

Token 2671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024524700711481273
    2. ',p' → logprob: -8.375245094299316
    3. 'p' → logprob: -11.375245094299316
    4. ' ,' → logprob: -13.000245094299316
    5. '   ' → logprob: -14.750245094299316
    6. '#' → logprob: -15.375245094299316
    7. ',
' → logprob: -15.750245094299316
    8. '_,' → logprob: -16.625246047973633
    9. ' p' → logprob: -17.125246047973633
    10. 's' → logprob: -17.500246047973633

Token 2672: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06200813129544258
    2. ' p' → logprob: -2.8120081424713135
    3. '   ' → logprob: -10.187007904052734
    4. '    ' → logprob: -13.437007904052734
    5. ' ' → logprob: -14.437007904052734
    6. '  ' → logprob: -14.687007904052734
    7. '	p' → logprob: -15.937007904052734
    8. '       ' → logprob: -16.437007904052734
    9. '     ' → logprob: -17.187007904052734
    10. '      ' → logprob: -17.687007904052734

Token 2673: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017232796177268028
    2. 'p' → logprob: -4.392232894897461
    3. 'y' → logprob: -5.392232894897461
    4. '2' → logprob: -10.142232894897461
    5. '0' → logprob: -10.642232894897461
    6. '3' → logprob: -10.767232894897461
    7. '```' → logprob: -10.767232894897461
    8. 'py' → logprob: -11.517232894897461
    9. '#' → logprob: -11.767232894897461
    10. ',' → logprob: -11.892232894897461

Token 2674: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16056682169437408
    2. ',' → logprob: -1.910566806793213
    3. 'y' → logprob: -8.785567283630371
    4. ',p' → logprob: -9.160567283630371
    5. '1' → logprob: -10.660567283630371
    6. ' ,' → logprob: -10.785567283630371
    7. ',x' → logprob: -11.285567283630371
    8. '0' → logprob: -11.660567283630371
    9. ',y' → logprob: -12.410567283630371
    10. '#' → logprob: -12.660567283630371

Token 2675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002112886286340654
    2. ',p' → logprob: -8.500211715698242
    3. 'p' → logprob: -12.000211715698242
    4. ' ,' → logprob: -14.000211715698242
    5. ',
' → logprob: -15.500211715698242
    6. '0' → logprob: -16.000211715698242
    7. '_,' → logprob: -16.125211715698242
    8. 's' → logprob: -16.750211715698242
    9. '#' → logprob: -16.875211715698242
    10. '=' → logprob: -17.375211715698242

Token 2676: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005533903022296727
    2. ' p' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.000553131103516
    4. '1' → logprob: -16.750553131103516
    5. ' ' → logprob: -17.250553131103516
    6. '
' → logprob: -17.250553131103516
    7. '#' → logprob: -17.625553131103516
    8. '...' → logprob: -18.750553131103516
    9. '    ' → logprob: -18.750553131103516
    10. ',' → logprob: -19.250553131103516

Token 2677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000865487614646554
    2. 'p' → logprob: -7.125865459442139
    3. 'y' → logprob: -9.875865936279297
    4. '```' → logprob: -12.875865936279297
    5. '<|end|>' → logprob: -13.750865936279297
    6. 'py' → logprob: -13.750865936279297
    7. '0' → logprob: -13.875865936279297
    8. 'def' → logprob: -14.500865936279297
    9. ' p' → logprob: -14.813365936279297
    10. 'r' → logprob: -15.188365936279297

Token 2678: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0018512967508286238
    2. 'p' → logprob: -7.0018510818481445
    3. '1' → logprob: -7.3768510818481445
    4. ',' → logprob: -8.626851081848145
    5. 'def' → logprob: -10.251851081848145
    6. '9' → logprob: -10.376851081848145
    7. '<|end|>' → logprob: -10.876851081848145
    8. '   ' → logprob: -11.501851081848145
    9. '```' → logprob: -11.626851081848145
    10. '...' → logprob: -11.751851081848145

Token 2679: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000595447258092463
    2. ',p' → logprob: -7.500595569610596
    3. ' ,' → logprob: -10.875595092773438
    4. 'p' → logprob: -11.000595092773438
    5. '       ' → logprob: -13.375595092773438
    6. ' in' → logprob: -14.250595092773438
    7. '_,' → logprob: -14.250595092773438
    8. '#' → logprob: -14.375595092773438
    9. ',
' → logprob: -14.500595092773438
    10. '   ' → logprob: -14.500595092773438

Token 2680: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012582694762386382
    2. ' p' → logprob: -9.000125885009766
    3. '   ' → logprob: -13.000125885009766
    4. '
' → logprob: -16.750125885009766
    5. '    ' → logprob: -17.000125885009766
    6. 's' → logprob: -17.625125885009766
    7. '#' → logprob: -17.750125885009766
    8. '       ' → logprob: -17.750125885009766
    9. ' ' → logprob: -18.000125885009766
    10. '  ' → logprob: -18.125125885009766

Token 2681: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6459536552429199
    2. 'y' → logprob: -0.7709536552429199
    3. 'p' → logprob: -4.39595365524292
    4. '3' → logprob: -9.145954132080078
    5. '<|end|>' → logprob: -9.145954132080078
    6. 'def' → logprob: -9.270954132080078
    7. '```' → logprob: -9.270954132080078
    8. '2' → logprob: -9.270954132080078
    9. ',' → logprob: -9.395954132080078
    10. '...' → logprob: -9.770954132080078

Token 2682: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.29134729504585266
    2. 'y' → logprob: -1.6663472652435303
    3. ',' → logprob: -2.7913472652435303
    4. '2' → logprob: -6.416347503662109
    5. 's' → logprob: -7.916347503662109
    6. '0' → logprob: -8.41634750366211
    7. '1' → logprob: -9.79134750366211
    8. ',y' → logprob: -9.91634750366211
    9. '_,' → logprob: -10.16634750366211
    10. '#' → logprob: -10.66634750366211

Token 2683: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020699729793705046
    2. ',p' → logprob: -8.50020694732666
    3. ' ,' → logprob: -13.12520694732666
    4. 'p' → logprob: -13.87520694732666
    5. ',
' → logprob: -15.37520694732666
    6. ',y' → logprob: -16.250207901000977
    7. '#' → logprob: -16.625207901000977
    8. '=' → logprob: -17.375207901000977
    9. '_,' → logprob: -17.375207901000977
    10. 'y' → logprob: -17.875207901000977

Token 2684: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0006279678200371563
    2. ' p' → logprob: -7.3756279945373535
    3. '   ' → logprob: -13.875627517700195
    4. ' ' → logprob: -15.625627517700195
    5. '	p' → logprob: -16.750627517700195
    6. ',' → logprob: -17.000627517700195
    7. '  ' → logprob: -17.125627517700195
    8. '    ' → logprob: -17.500627517700195
    9. '#' → logprob: -17.875627517700195
    10. '
' → logprob: -18.000627517700195

Token 2685: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.042020443826913834
    2. '1' → logprob: -4.042020320892334
    3. 'y' → logprob: -4.042020320892334
    4. '3' → logprob: -5.792020320892334
    5. 'p' → logprob: -6.042020320892334
    6. '0' → logprob: -7.917020320892334
    7. '<|end|>' → logprob: -9.167020797729492
    8. '```' → logprob: -9.917020797729492
    9. '5' → logprob: -10.167020797729492
    10. '#' → logprob: -12.042020797729492

Token 2686: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005378306843340397
    2. ',' → logprob: -5.880378246307373
    3. '2' → logprob: -6.005378246307373
    4. '3' → logprob: -10.005378723144531
    5. ',y' → logprob: -11.630378723144531
    6. '5' → logprob: -12.005378723144531
    7. ',
' → logprob: -12.255378723144531
    8. '0' → logprob: -12.255378723144531
    9. 'x' → logprob: -12.380378723144531
    10. '<|end|>' → logprob: -12.630378723144531

Token 2687: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003087678924202919
    2. ',p' → logprob: -8.250308990478516
    3. ' ,' → logprob: -10.750308990478516
    4. ',s' → logprob: -11.750308990478516
    5. '#' → logprob: -12.125308990478516
    6. 's' → logprob: -12.500308990478516
    7. 'p' → logprob: -12.625308990478516
    8. ',
' → logprob: -13.875308990478516
    9. '   ' → logprob: -14.625308990478516
    10. ',line' → logprob: -14.625308990478516

Token 2688: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002980432182084769
    2. ' p' → logprob: -8.125298500061035
    3. '   ' → logprob: -14.000298500061035
    4. 's' → logprob: -14.500298500061035
    5. 'Point' → logprob: -15.000298500061035
    6. '```' → logprob: -16.75029754638672
    7. '
' → logprob: -17.00029754638672
    8. 'point' → logprob: -17.12529754638672
    9. '#' → logprob: -17.50029754638672
    10. '       ' → logprob: -17.87529754638672

Token 2689: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4375002682209015
    2. '3' → logprob: -1.062500238418579
    3. 'y' → logprob: -4.937500476837158
    4. 'p' → logprob: -7.312500476837158
    5. '1' → logprob: -7.437500476837158
    6. '0' → logprob: -8.5625
    7. 'x' → logprob: -9.5625
    8. 's' → logprob: -10.5625
    9. ',' → logprob: -11.0625
    10. 'z' → logprob: -11.5625

Token 2690: 'x' (ID: 87)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16660188138484955
    2. 'x' → logprob: -1.9166018962860107
    3. '[' → logprob: -6.291601657867432
    4. 's' → logprob: -6.416601657867432
    5. '#' → logprob: -6.791601657867432
    6. '+' → logprob: -7.916601657867432
    7. '...' → logprob: -8.66660213470459
    8. '0' → logprob: -8.79160213470459
    9. ',s' → logprob: -8.91660213470459
    10. ',x' → logprob: -9.29160213470459

Token 2691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005083533469587564
    2. ',p' → logprob: -7.8755083084106445
    3. ' ,' → logprob: -10.000508308410645
    4. ',s' → logprob: -10.250508308410645
    5. 's' → logprob: -11.500508308410645
    6. '_,' → logprob: -12.000508308410645
    7. ',
' → logprob: -12.500508308410645
    8. '<|end|>' → logprob: -12.500508308410645
    9. 'p' → logprob: -12.625508308410645
    10. 'x' → logprob: -12.750508308410645

Token 2692: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002776630863081664
    2. ' p' → logprob: -8.250277519226074
    3. '3' → logprob: -11.875277519226074
    4. '   ' → logprob: -12.625277519226074
    5. '```' → logprob: -12.750277519226074
    6. '``' → logprob: -14.375277519226074
    7. ' ' → logprob: -15.000277519226074
    8. '`' → logprob: -15.125277519226074
    9. '...' → logprob: -15.250277519226074
    10. '0' → logprob: -15.437777519226074

Token 2693: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0001414426224073395
    2. 'p' → logprob: -9.250141143798828
    3. 'y' → logprob: -10.375141143798828
    4. '```' → logprob: -12.125141143798828
    5. 'py' → logprob: -12.500141143798828
    6. ',' → logprob: -13.250141143798828
    7. 'x' → logprob: -14.250141143798828
    8. 'm' → logprob: -15.000141143798828
    9. '<|end|>' → logprob: -15.250141143798828
    10. '#' → logprob: -15.375141143798828

Token 2694: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.018434248864650726
    2. '3' → logprob: -4.268434047698975
    3. 'py' → logprob: -6.643434047698975
    4. 'p' → logprob: -7.018434047698975
    5. 'x' → logprob: -7.018434047698975
    6. '<|end|>' → logprob: -7.893434047698975
    7. ',' → logprob: -8.393434524536133
    8. 'm' → logprob: -9.018434524536133
    9. '<|end|>' → logprob: -9.268434524536133
    10. '4' → logprob: -9.518434524536133

Token 2695: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20611472427845
    2. ' in' → logprob: -1.7061147689819336
    3. 'in' → logprob: -5.706114768981934
    4. '   ' → logprob: -8.206114768981934
    5. ',s' → logprob: -8.206114768981934
    6. ' ,' → logprob: -8.456114768981934
    7. ',p' → logprob: -9.081114768981934
    8. ' s' → logprob: -9.206114768981934
    9. 's' → logprob: -9.581114768981934
    10. '<|end|>' → logprob: -9.581114768981934

Token 2696: ' Query' (ID: 18574)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -0.3316892087459564
    2. 'Query' → logprob: -1.3316892385482788
    3. 'Point' → logprob: -4.081689357757568
    4. ' Segment' → logprob: -7.706689357757568
    5. 'Line' → logprob: -8.45668888092041
    6. ' Query' → logprob: -8.70668888092041
    7. 'Range' → logprob: -8.95668888092041
    8. '[' → logprob: -9.83168888092041
    9. 's' → logprob: -9.95668888092041
    10. 'p' → logprob: -10.33168888092041

Token 2697: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1593119204044342
    2. ':
' → logprob: -2.4093120098114014
    3. ':' → logprob: -3.0343120098114014
    4. '   ' → logprob: -6.034311771392822
    5. ',' → logprob: -6.284311771392822
    6. '):
' → logprob: -6.784311771392822
    7. 's' → logprob: -7.034311771392822
    8. '<|end|>' → logprob: -7.284311771392822
    9. '():
' → logprob: -7.284311771392822
    10. ' s' → logprob: -7.784311771392822

Token 2698: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033519016578793526
    2. '   ' → logprob: -6.00335168838501
    3. 's' → logprob: -7.75335168838501
    4. '<|end|>' → logprob: -8.878352165222168
    5. ' for' → logprob: -9.753352165222168
    6. ' s' → logprob: -9.753352165222168
    7. '
' → logprob: -9.878352165222168
    8. '#' → logprob: -10.003352165222168
    9. '```' → logprob: -10.378352165222168
    10. '        
' → logprob: -11.253352165222168

Token 2699: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.003328972263261676
    2. 'l' → logprob: -5.878328800201416
    3. ' s' → logprob: -7.878328800201416
    4. '   ' → logprob: -9.378329277038574
    5. '       ' → logprob: -10.753329277038574
    6. 'c' → logprob: -10.878329277038574
    7. 'p' → logprob: -12.253329277038574
    8. ' l' → logprob: -12.253329277038574
    9. '           ' → logprob: -12.878329277038574
    10. 'def' → logprob: -13.503329277038574

Token 2700: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003294043941423297
    2. '2' → logprob: -6.378293991088867
    3. ' =' → logprob: -6.753293991088867
    4. 'def' → logprob: -8.878293991088867
    5. '   ' → logprob: -9.503293991088867
    6. 's' → logprob: -9.628293991088867
    7. '=' → logprob: -9.878293991088867
    8. 'a' → logprob: -11.003293991088867
    9. '#' → logprob: -11.378293991088867
    10. '_' → logprob: -11.628293991088867

Token 2701: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16026556491851807
    2. '=' → logprob: -1.910265564918518
    3. 's' → logprob: -11.535265922546387
    4. ',' → logprob: -11.535265922546387
    5. 'x' → logprob: -12.535265922546387
    6. 'def' → logprob: -12.910265922546387
    7. ' ' → logprob: -13.035265922546387
    8. ')' → logprob: -13.535265922546387
    9. '<|end|>' → logprob: -13.535265922546387
    10. '#' → logprob: -13.535265922546387

Token 2702: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -6.988221684878226e-06
    2. ' Segment' → logprob: -11.875006675720215
    3. 'Point' → logprob: -17.00000762939453
    4. '_segment' → logprob: -18.75000762939453
    5. 's' → logprob: -19.00000762939453
    6. 'Seg' → logprob: -19.12500762939453
    7. 'segment' → logprob: -19.37500762939453
    8. '   ' → logprob: -19.50000762939453
    9. 'Line' → logprob: -20.00000762939453
    10. 'Segments' → logprob: -20.87500762939453

Token 2703: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.011057964526116848
    2. 'Point' → logprob: -4.5110578536987305
    3. 'Segment' → logprob: -12.38605785369873
    4. '<Point' → logprob: -13.63605785369873
    5. '(Line' → logprob: -13.76105785369873
    6. '.Point' → logprob: -13.88605785369873
    7. ' Point' → logprob: -13.88605785369873
    8. '	Point' → logprob: -14.51105785369873
    9. '#' → logprob: -15.13605785369873
    10. '```' → logprob: -15.51105785369873

Token 2704: '(p' (ID: 2407)
  Prédit: '(Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0002378673671046272
    2. '(p' → logprob: -9.250237464904785
    3. 's' → logprob: -9.750237464904785
    4. 'Point' → logprob: -9.875237464904785
    5. '(P' → logprob: -11.875237464904785
    6. '<Point' → logprob: -12.125237464904785
    7. 'def' → logprob: -12.250237464904785
    8. 'p' → logprob: -13.000237464904785
    9. '.Point' → logprob: -13.250237464904785
    10. '(' → logprob: -13.375237464904785

Token 2705: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001691727084107697
    2. 'p' → logprob: -6.751691818237305
    3. '(p' → logprob: -7.876691818237305
    4. '2' → logprob: -9.626691818237305
    5. 's' → logprob: -10.876691818237305
    6. '3' → logprob: -11.126691818237305
    7. '1' → logprob: -11.251691818237305
    8. 'x' → logprob: -11.876691818237305
    9. ' p' → logprob: -12.001691818237305
    10. '```' → logprob: -12.251691818237305

Token 2706: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11311575025320053
    2. '0' → logprob: -2.2381157875061035
    3. '1' → logprob: -8.863115310668945
    4. 'p' → logprob: -9.738115310668945
    5. '2' → logprob: -10.613115310668945
    6. '(p' → logprob: -11.238115310668945
    7. '3' → logprob: -11.238115310668945
    8. 's' → logprob: -11.363115310668945
    9. '```' → logprob: -12.363115310668945
    10. 'y' → logprob: -12.488115310668945

Token 2707: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008529895567335188
    2. ',p' → logprob: -7.375853061676025
    3. 's' → logprob: -8.875852584838867
    4. 'p' → logprob: -10.250852584838867
    5. ',s' → logprob: -10.375852584838867
    6. ' ,' → logprob: -11.250852584838867
    7. '(p' → logprob: -12.500852584838867
    8. '(s' → logprob: -13.500852584838867
    9. ' p' → logprob: -14.750852584838867
    10. '```' → logprob: -14.750852584838867

Token 2708: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009142052149400115
    2. ' p' → logprob: -7.000914096832275
    3. 's' → logprob: -14.250914573669434
    4. 'py' → logprob: -14.875914573669434
    5. '       ' → logprob: -15.500914573669434
    6. '0' → logprob: -16.125913619995117
    7. '   ' → logprob: -16.125913619995117
    8. '<|end|>' → logprob: -16.188413619995117
    9. '```' → logprob: -16.250913619995117
    10. ',' → logprob: -16.250913619995117

Token 2709: '0' (ID: 15)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0034029979724437
    2. '1' → logprob: -6.253403186798096
    3. '<|end|>' → logprob: -6.753403186798096
    4. '0' → logprob: -8.753402709960938
    5. ',' → logprob: -10.003402709960938
    6. 'p' → logprob: -10.878402709960938
    7. '<|end|>' → logprob: -11.003402709960938
    8. 's' → logprob: -11.378402709960938
    9. '```' → logprob: -11.503402709960938
    10. 'x' → logprob: -11.753402709960938

Token 2710: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00031413204851560295
    2. ',' → logprob: -8.625313758850098
    3. '1' → logprob: -9.500313758850098
    4. '0' → logprob: -10.375313758850098
    5. ' y' → logprob: -11.750313758850098
    6. '<|end|>' → logprob: -12.000313758850098
    7. 'x' → logprob: -12.500313758850098
    8. 's' → logprob: -12.875313758850098
    9. 'p' → logprob: -13.000313758850098
    10. ',y' → logprob: -13.500313758850098

Token 2711: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.8497312895488e-05
    2. ',p' → logprob: -10.375068664550781
    3. 'p' → logprob: -10.625068664550781
    4. 's' → logprob: -12.500068664550781
    5. '),' → logprob: -12.500068664550781
    6. ' ,' → logprob: -12.750068664550781
    7. 'def' → logprob: -13.625068664550781
    8. '   ' → logprob: -14.375068664550781
    9. '(),' → logprob: -15.875068664550781
    10. '```' → logprob: -16.25006866455078

Token 2712: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0015867470065131783
    2. ' Point' → logprob: -6.5015869140625
    3. 'p' → logprob: -9.5015869140625
    4. 'Segment' → logprob: -11.8765869140625
    5. 's' → logprob: -13.7515869140625
    6. ' p' → logprob: -14.2515869140625
    7. '       ' → logprob: -14.7515869140625
    8. '(Point' → logprob: -15.2515869140625
    9. '	Point' → logprob: -15.8765869140625
    10. '   ' → logprob: -16.2515869140625

Token 2713: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009292102768085897
    2. 's' → logprob: -7.000929355621338
    3. ' p' → logprob: -12.50092887878418
    4. 'y' → logprob: -12.75092887878418
    5. ',' → logprob: -13.25092887878418
    6. 'py' → logprob: -13.62592887878418
    7. '0' → logprob: -13.62592887878418
    8. 'Sorry' → logprob: -13.62592887878418
    9. 'Point' → logprob: -13.87592887878418
    10. '   ' → logprob: -14.12592887878418

Token 2714: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.304965078830719
    2. 'y' → logprob: -1.5549650192260742
    3. 'p' → logprob: -3.054965019226074
    4. 's' → logprob: -5.554965019226074
    5. '<|end|>' → logprob: -8.304965019226074
    6. '```' → logprob: -9.054965019226074
    7. '0' → logprob: -9.179965019226074
    8. 'Sorry' → logprob: -10.679965019226074
    9. 'py' → logprob: -11.304965019226074
    10. '3' → logprob: -11.429965019226074

Token 2715: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006194576621055603
    2. 'x' → logprob: -5.131194591522217
    3. '1' → logprob: -9.006194114685059
    4. ',' → logprob: -9.631194114685059
    5. ')' → logprob: -10.881194114685059
    6. '```' → logprob: -11.256194114685059
    7. 'p' → logprob: -11.381194114685059
    8. '[' → logprob: -11.381194114685059
    9. '<|end|>' → logprob: -12.256194114685059
    10. '0' → logprob: -12.381194114685059

Token 2716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002398009179159999
    2. 'y' → logprob: -6.7523980140686035
    3. 'p' → logprob: -7.3773980140686035
    4. 's' → logprob: -8.752397537231445
    5. ' ,' → logprob: -8.877397537231445
    6. ',p' → logprob: -9.127397537231445
    7. '),' → logprob: -9.377397537231445
    8. ',y' → logprob: -9.502397537231445
    9. '```' → logprob: -11.752397537231445
    10. ')' → logprob: -12.127397537231445

Token 2717: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004399671161081642
    2. ' p' → logprob: -7.7504401206970215
    3. 'Point' → logprob: -11.625439643859863
    4. 'py' → logprob: -15.875439643859863
    5. 's' → logprob: -16.87544059753418
    6. ' Point' → logprob: -17.25044059753418
    7. 'point' → logprob: -17.37544059753418
    8. '   ' → logprob: -17.50044059753418
    9. '<p' → logprob: -18.12544059753418
    10. ')' → logprob: -18.75044059753418

Token 2718: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01605524867773056
    2. '1' → logprob: -4.641055107116699
    3. 'p' → logprob: -5.266055107116699
    4. '<|end|>' → logprob: -7.141055107116699
    5. 'Sorry' → logprob: -9.1410551071167
    6. 'py' → logprob: -9.7660551071167
    7. '```' → logprob: -10.2660551071167
    8. '   ' → logprob: -10.5160551071167
    9. '0' → logprob: -10.6410551071167
    10. '3' → logprob: -11.6410551071167

Token 2719: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001552665780764073
    2. ',' → logprob: -10.000155448913574
    3. '   ' → logprob: -10.125155448913574
    4. ')' → logprob: -10.625155448913574
    5. '1' → logprob: -12.000155448913574
    6. '5' → logprob: -12.000155448913574
    7. '<|end|>' → logprob: -12.000155448913574
    8. '```' → logprob: -12.375155448913574
    9. '7' → logprob: -12.500155448913574
    10. 's' → logprob: -12.500155448913574

Token 2720: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.24281546473503113
    2. ')' → logprob: -1.6178154945373535
    3. '),' → logprob: -4.6178154945373535
    4. '       ' → logprob: -5.1178154945373535
    5. ')
' → logprob: -7.3678154945373535
    6. 's' → logprob: -7.9928154945373535
    7. '   ' → logprob: -8.742815017700195
    8. ');' → logprob: -9.617815017700195
    9. ')s' → logprob: -9.617815017700195
    10. ',' → logprob: -10.492815017700195

Token 2721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004046817775815725
    2. 's' → logprob: -5.75404691696167
    3. '   ' → logprob: -7.25404691696167
    4. ' s' → logprob: -9.879046440124512
    5. '<|end|>' → logprob: -10.129046440124512
    6. '           ' → logprob: -11.004046440124512
    7. ',' → logprob: -11.879046440124512
    8. '     ' → logprob: -12.004046440124512
    9. ')' → logprob: -12.129046440124512
    10. '        ' → logprob: -12.129046440124512

Token 2722: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.0803137794137001
    2. '       ' → logprob: -2.5803136825561523
    3. ' s' → logprob: -6.580313682556152
    4. '   ' → logprob: -10.455313682556152
    5. 'for' → logprob: -13.330313682556152
    6. '           ' → logprob: -13.455313682556152
    7. ' ' → logprob: -14.080313682556152
    8. ' for' → logprob: -14.205313682556152
    9. '        ' → logprob: -14.830313682556152
    10. '      ' → logprob: -15.205313682556152

Token 2723: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. 's' → logprob: -11.000019073486328
    3. '   ' → logprob: -14.125019073486328
    4. '
' → logprob: -14.625019073486328
    5. '#' → logprob: -14.625019073486328
    6. '       ' → logprob: -14.750019073486328
    7. ' ' → logprob: -15.500019073486328
    8. 'def' → logprob: -15.750019073486328
    9. '_' → logprob: -17.000019073486328
    10. '```' → logprob: -17.062519073486328

Token 2724: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033647891134023666
    2. '=' → logprob: -3.4086477756500244
    3. 's' → logprob: -14.033647537231445
    4. '<|end|>' → logprob: -14.908647537231445
    5. ' ' → logprob: -15.283647537231445
    6. ')' → logprob: -15.408647537231445
    7. '   ' → logprob: -15.658647537231445
    8. ' =
' → logprob: -15.783647537231445
    9. '=
' → logprob: -16.533647537231445
    10. '#' → logprob: -17.283647537231445

Token 2725: ' Segment' (ID: 64922)
  Prédit: 'Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -2.165027217415627e-05
    2. ' Segment' → logprob: -10.875021934509277
    3. 'Point' → logprob: -12.875021934509277
    4. '
' → logprob: -17.62502098083496
    5. 's' → logprob: -17.75002098083496
    6. 'Seg' → logprob: -18.37502098083496
    7. '_segment' → logprob: -19.12502098083496
    8. 'segment' → logprob: -19.12502098083496
    9. 'Segments' → logprob: -20.12502098083496
    10. 'Line' → logprob: -20.50002098083496

Token 2726: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -4.56102097814437e-05
    2. 'Point' → logprob: -10.000045776367188
    3. '<Point' → logprob: -16.500045776367188
    4. '.Point' → logprob: -17.375045776367188
    5. ' Point' → logprob: -18.375045776367188
    6. '(point' → logprob: -18.750045776367188
    7. '	Point' → logprob: -19.500045776367188
    8. '(' → logprob: -20.625045776367188
    9. 'Points' → logprob: -20.625045776367188
    10. '_Point' → logprob: -20.875045776367188

Token 2727: '(p' (ID: 2407)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.5759448409080505
    2. '(Point' → logprob: -0.8259448409080505
    3. ' Point' → logprob: -12.325944900512695
    4. 'p' → logprob: -14.325944900512695
    5. '.Point' → logprob: -15.575944900512695
    6. '	Point' → logprob: -16.325944900512695
    7. '(p' → logprob: -16.950944900512695
    8. '<Point' → logprob: -16.950944900512695
    9. '_Point' → logprob: -17.825944900512695
    10. '#' → logprob: -18.825944900512695

Token 2728: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036679807817563415
    2. '3' → logprob: -8.250367164611816
    3. '```' → logprob: -10.125367164611816
    4. 'p' → logprob: -10.500367164611816
    5. 's' → logprob: -11.000367164611816
    6. '``' → logprob: -12.437867164611816
    7. '
' → logprob: -12.500367164611816
    8. '0' → logprob: -12.625367164611816
    9. ')' → logprob: -13.250367164611816
    10. 'y' → logprob: -14.062867164611816

Token 2729: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.963691804325208e-05
    2. 'y' → logprob: -11.000029563903809
    3. '0' → logprob: -11.875029563903809
    4. 'p' → logprob: -12.625029563903809
    5. '```' → logprob: -14.000029563903809
    6. 's' → logprob: -14.375029563903809
    7. '[' → logprob: -15.250029563903809
    8. '#' → logprob: -15.500029563903809
    9. '<|end|>' → logprob: -15.875029563903809
    10. 'px' → logprob: -16.250030517578125

Token 2730: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011894332244992256
    2. 'y' → logprob: -5.386894226074219
    3. '(p' → logprob: -5.761894226074219
    4. 'p' → logprob: -5.886894226074219
    5. ',p' → logprob: -7.886894226074219
    6. '(' → logprob: -8.511894226074219
    7. '(s' → logprob: -8.511894226074219
    8. ' ,' → logprob: -8.886894226074219
    9. ',y' → logprob: -9.386894226074219
    10. '```' → logprob: -9.636894226074219

Token 2731: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00012356207298580557
    2. ' p' → logprob: -9.000123977661133
    3. 's' → logprob: -18.250123977661133
    4. '```' → logprob: -18.250123977661133
    5. '0' → logprob: -18.500123977661133
    6. '<p' → logprob: -18.750123977661133
    7. ')p' → logprob: -19.375123977661133
    8. '	p' → logprob: -19.500123977661133
    9. '   ' → logprob: -19.500123977661133
    10. 'py' → logprob: -19.625123977661133

Token 2732: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.065447211265564
    2. '3' → logprob: -1.315447211265564
    3. 'y' → logprob: -1.440447211265564
    4. 'p' → logprob: -2.3154473304748535
    5. '<|end|>' → logprob: -3.8154473304748535
    6. '2' → logprob: -4.3154473304748535
    7. '1' → logprob: -4.8154473304748535
    8. '```' → logprob: -6.0654473304748535
    9. '<|end|>' → logprob: -6.9404473304748535
    10. 'Sorry' → logprob: -7.0654473304748535

Token 2733: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38840147852897644
    2. '0' → logprob: -1.2634015083312988
    3. '<|end|>' → logprob: -4.138401508331299
    4. 'p' → logprob: -5.263401508331299
    5. ',' → logprob: -5.388401508331299
    6. '```' → logprob: -5.763401508331299
    7. '<|end|>' → logprob: -6.013401508331299
    8. 's' → logprob: -6.263401508331299
    9. ')' → logprob: -6.763401508331299
    10. '7' → logprob: -6.888401508331299

Token 2734: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7053759519476444e-05
    2. ' ,' → logprob: -10.875057220458984
    3. 's' → logprob: -11.000057220458984
    4. ',p' → logprob: -11.750057220458984
    5. '),' → logprob: -12.750057220458984
    6. 'p' → logprob: -13.000057220458984
    7. 'def' → logprob: -13.125057220458984
    8. ')' → logprob: -13.375057220458984
    9. '(),' → logprob: -13.875057220458984
    10. '[' → logprob: -14.125057220458984

Token 2735: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.001325241639278829
    2. 'Segment' → logprob: -6.7513251304626465
    3. 's' → logprob: -9.376325607299805
    4. 'p' → logprob: -10.001325607299805
    5. ' Point' → logprob: -10.626325607299805
    6. ' s' → logprob: -15.376325607299805
    7. ' p' → logprob: -16.376325607299805
    8. 'point' → logprob: -16.501325607299805
    9. '       ' → logprob: -16.626325607299805
    10. ' Segment' → logprob: -16.751325607299805

Token 2736: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01329575665295124
    2. 's' → logprob: -4.513295650482178
    3. '(p' → logprob: -6.263295650482178
    4. '(s' → logprob: -8.763296127319336
    5. 'Point' → logprob: -8.888296127319336
    6. '(Point' → logprob: -10.263296127319336
    7. '(' → logprob: -12.263296127319336
    8. '2' → logprob: -12.888296127319336
    9. '```' → logprob: -13.263296127319336
    10. ' p' → logprob: -14.513296127319336

Token 2737: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0006964695639908314
    2. 'y' → logprob: -7.500696659088135
    3. 'p' → logprob: -9.375696182250977
    4. '2' → logprob: -10.250696182250977
    5. 's' → logprob: -11.625696182250977
    6. '```' → logprob: -12.250696182250977
    7. ')' → logprob: -12.750696182250977
    8. 'py' → logprob: -13.625696182250977
    9. '0' → logprob: -14.375696182250977
    10. 'q' → logprob: -14.500696182250977

Token 2738: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0582873709499836
    2. '0' → logprob: -3.4332873821258545
    3. 'y' → logprob: -4.183287143707275
    4. '1' → logprob: -5.558287143707275
    5. 's' → logprob: -5.933287143707275
    6. '2' → logprob: -6.683287143707275
    7. ')' → logprob: -7.433287143707275
    8. '3' → logprob: -7.933287143707275
    9. '```' → logprob: -9.433287620544434
    10. '4' → logprob: -9.683287620544434

Token 2739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1553313136100769
    2. 'p' → logprob: -2.5303313732147217
    3. 'y' → logprob: -3.0303313732147217
    4. '0' → logprob: -5.155331134796143
    5. 's' → logprob: -5.655331134796143
    6. '2' → logprob: -6.280331134796143
    7. ')' → logprob: -6.655331134796143
    8. '1' → logprob: -7.405331134796143
    9. '3' → logprob: -7.655331134796143
    10. 'm' → logprob: -8.0303316116333

Token 2740: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.2987729102605954e-05
    2. ' p' → logprob: -10.125042915344238
    3. 'Point' → logprob: -12.875042915344238
    4. 's' → logprob: -14.750042915344238
    5. '2' → logprob: -18.000043869018555
    6. 'points' → logprob: -18.500043869018555
    7. 'Points' → logprob: -18.625043869018555
    8. 'point' → logprob: -18.875043869018555
    9. '0' → logprob: -19.375043869018555
    10. '```' → logprob: -19.875043869018555

Token 2741: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.13332520425319672
    2. 'y' → logprob: -2.1333250999450684
    3. '2' → logprob: -5.758325099945068
    4. '1' → logprob: -5.883325099945068
    5. 'p' → logprob: -8.633325576782227
    6. '<|end|>' → logprob: -9.258325576782227
    7. 'x' → logprob: -10.133325576782227
    8. ')' → logprob: -10.508325576782227
    9. '5' → logprob: -10.633325576782227
    10. 's' → logprob: -11.383325576782227

Token 2742: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000396826391806826
    2. '2' → logprob: -8.375396728515625
    3. '1' → logprob: -9.500396728515625
    4. 's' → logprob: -9.750396728515625
    5. 'x' → logprob: -11.625396728515625
    6. '7' → logprob: -12.250396728515625
    7. ')' → logprob: -12.500396728515625
    8. ' y' → logprob: -12.875396728515625
    9. 'def' → logprob: -13.125396728515625
    10. '4' → logprob: -13.375396728515625

Token 2743: '))
' (ID: 2210)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.40129154920578003
    2. ')' → logprob: -2.026291608810425
    3. '):' → logprob: -2.151291608810425
    4. ')
' → logprob: -2.901291608810425
    5. '   ' → logprob: -3.776291608810425
    6. 'def' → logprob: -5.901291370391846
    7. '       ' → logprob: -6.401291370391846
    8. '):
' → logprob: -10.276291847229004
    9. '):

' → logprob: -10.776291847229004
    10. '```' → logprob: -11.276291847229004

Token 2744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008352391887456179
    2. '   ' → logprob: -7.125835418701172
    3. ':' → logprob: -11.875835418701172
    4. '<|end|>' → logprob: -12.125835418701172
    5. ' for' → logprob: -12.375835418701172
    6. ')' → logprob: -12.375835418701172
    7. 'for' → logprob: -12.875835418701172
    8. '```' → logprob: -13.625835418701172
    9. '           ' → logprob: -14.000835418701172
    10. 'return' → logprob: -14.250835418701172

Token 2745: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.464599072933197
    2. 'print' (adapté à ' print') → logprob: -1.0895991325378418
    3. '   ' → logprob: -3.964599132537842
    4. 'if' → logprob: -4.839599132537842
    5. 'for' → logprob: -5.714599132537842
    6. 'dist' → logprob: -6.464599132537842
    7. 'p' → logprob: -6.964599132537842
    8. 'd' → logprob: -6.964599132537842
    9. '```' → logprob: -7.964599132537842
    10. 'result' → logprob: -8.089598655700684

Token 2746: '("{' (ID: 29673)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.13016121089458466
    2. '(distance' → logprob: -2.1301612854003906
    3. '(abs' → logprob: -6.630161285400391
    4. 'cross' → logprob: -6.880161285400391
    5. '(len' → logprob: -8.63016128540039
    6. '(round' → logprob: -9.00516128540039
    7. 'distance' → logprob: -9.00516128540039
    8. '(int' → logprob: -9.13016128540039
    9. '(' → logprob: -9.25516128540039
    10. 'abs' → logprob: -10.00516128540039

Token 2747: ':.' (ID: 27474)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23106689751148224
    2. ':.' → logprob: -1.8560669422149658
    3. 'cross' → logprob: -3.981066942214966
    4. '}".' → logprob: -4.481066703796387
    5. '}' → logprob: -4.856066703796387
    6. '}",' → logprob: -5.731066703796387
    7. '}{' → logprob: -6.481066703796387
    8. ':' → logprob: -6.731066703796387
    9. '(c' → logprob: -6.856066703796387
    10. '}.' → logprob: -7.231066703796387

Token 2748: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.04897905886173248
    2. '.' → logprob: -3.0489790439605713
    3. '10' → logprob: -9.298978805541992
    4. '15' → logprob: -9.423978805541992
    5. '12' → logprob: -9.548978805541992
    6. '16' → logprob: -9.923978805541992
    7. '18' → logprob: -10.423978805541992
    8. 'f' → logprob: -10.548978805541992
    9. '9' → logprob: -11.173978805541992
    10. '0' → logprob: -12.048978805541992

Token 2749: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -2.1008713702030946e-06
    2. 'g' → logprob: -13.500001907348633
    3. '}".' → logprob: -15.250001907348633
    4. '}' → logprob: -15.875001907348633
    5. 'format' → logprob: -16.375001907348633
    6. 'print' → logprob: -16.500001907348633
    7. 's' → logprob: -17.000001907348633
    8. 'e' → logprob: -17.250001907348633
    9. '
' → logprob: -17.250001907348633
    10. '```' → logprob: -17.625001907348633

Token 2750: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.016603395342826843
    2. '}' → logprob: -4.266603469848633
    3. '(c' → logprob: -6.891603469848633
    4. '}(' → logprob: -7.266603469848633
    5. '".' → logprob: -8.391603469848633
    6. '((' → logprob: -9.641603469848633
    7. '(s' → logprob: -9.766603469848633
    8. '}"' → logprob: -9.766603469848633
    9. '{}".' → logprob: -9.891603469848633
    10. '(' → logprob: -9.891603469848633

Token 2751: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -3.292907877039397e-06
    2. 'print' → logprob: -13.62500286102295
    3. '8' → logprob: -14.00000286102295
    4. '7' → logprob: -14.62500286102295
    5. ' format' → logprob: -15.25000286102295
    6. '4' → logprob: -15.37500286102295
    7. '6' → logprob: -16.500003814697266
    8. 'str' → logprob: -16.750003814697266
    9. '2' → logprob: -16.875003814697266
    10. '0' → logprob: -17.125003814697266

Token 2752: '(distance' (ID: 105203)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.47571662068367004
    2. '(distance' → logprob: -0.9757165908813477
    3. 'cross' → logprob: -6.725716590881348
    4. '(c' → logprob: -8.725716590881348
    5. ' distance' → logprob: -8.975716590881348
    6. 'min' → logprob: -9.350716590881348
    7. 'c' → logprob: -11.100716590881348
    8. '(min' → logprob: -11.475716590881348
    9. 'abs' → logprob: -11.475716590881348
    10. 'float' → logprob: -11.600716590881348

Token 2753: '_ss' (ID: 61028)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.3925931453704834
    2. '_sp' → logprob: -1.3925931453704834
    3. '_ss' → logprob: -2.8925931453704834
    4. '_ls' → logprob: -4.2675933837890625
    5. '(sp' → logprob: -5.6425933837890625
    6. '(ss' → logprob: -6.6425933837890625
    7. 's' → logprob: -7.1425933837890625
    8. '_s' → logprob: -7.6425933837890625
    9. '_lp' → logprob: -8.267593383789062
    10. 'sp' → logprob: -8.642593383789062

Token 2754: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.200166469876422e-06
    2. 's' → logprob: -12.250004768371582
    3. ' (' → logprob: -16.2500057220459
    4. '(' → logprob: -16.2500057220459
    5. '((' → logprob: -16.8750057220459
    6. '(
' → logprob: -17.6250057220459
    7. '   ' → logprob: -19.1250057220459
    8. ')' → logprob: -19.6250057220459
    9. ')(' → logprob: -19.8750057220459
    10. '```' → logprob: -20.8750057220459

Token 2755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001422770437784493
    2. '(s' → logprob: -9.500142097473145
    3. 's' → logprob: -9.625142097473145
    4. ' s' → logprob: -14.875142097473145
    5. ')s' → logprob: -15.375142097473145
    6. ' ' → logprob: -15.875142097473145
    7. '１' → logprob: -16.00014305114746
    8. ')' → logprob: -16.00014305114746
    9. '```' → logprob: -16.00014305114746
    10. '(' → logprob: -16.75014305114746

Token 2756: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20435599982738495
    2. '(s' → logprob: -1.7043559551239014
    3. 's' → logprob: -5.9543561935424805
    4. ',s' → logprob: -8.32935619354248
    5. ' ,' → logprob: -9.95435619354248
    6. '(' → logprob: -10.70435619354248
    7. '),' → logprob: -11.32935619354248
    8. ')' → logprob: -11.45435619354248
    9. '```' → logprob: -13.57935619354248
    10. ',
' → logprob: -13.57935619354248

Token 2757: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00018113377154804766
    2. ' s' → logprob: -8.625181198120117
    3. '   ' → logprob: -13.625181198120117
    4. '       ' → logprob: -16.125181198120117
    5. '    ' → logprob: -16.875181198120117
    6. '(s' → logprob: -16.875181198120117
    7. '           ' → logprob: -17.125181198120117
    8. '  ' → logprob: -17.125181198120117
    9. ' ' → logprob: -17.375181198120117
    10. '
' → logprob: -18.000181198120117

Token 2758: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3663626305060461e-05
    2. 's' → logprob: -11.37501335144043
    3. '1' → logprob: -14.00001335144043
    4. '
' → logprob: -14.25001335144043
    5. '２' → logprob: -15.75001335144043
    6. '```' → logprob: -16.18751335144043
    7. ' ' → logprob: -16.50001335144043
    8. 'p' → logprob: -17.06251335144043
    9. ' s' → logprob: -17.25001335144043
    10. '

' → logprob: -17.75001335144043

Token 2759: ')))

' (ID: 46526)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.08133448660373688
    2. '))' → logprob: -2.5813345909118652
    3. '(' → logprob: -6.081334590911865
    4. '((' → logprob: -10.331334114074707
    5. '(p' → logprob: -10.456334114074707
    6. '))
' → logprob: -10.831334114074707
    7. '       ' → logprob: -10.956334114074707
    8. '()))' → logprob: -10.956334114074707
    9. '   ' → logprob: -11.081334114074707
    10. 's' → logprob: -11.706334114074707

Token 2760: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16035227477550507
    2. '   ' → logprob: -1.9103522300720215
    3. 'return' → logprob: -9.03535270690918
    4. '```' → logprob: -12.16035270690918
    5. ' def' → logprob: -13.53535270690918
    6. '#' → logprob: -13.66035270690918
    7. '
' → logprob: -13.91035270690918
    8. '``' → logprob: -15.66035270690918
    9. '       ' → logprob: -16.53535270690918
    10. 'if' → logprob: -16.91035270690918

Token 2761: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.3273053467273712
    2. '__' → logprob: -2.452305316925049
    3. 'if' → logprob: -2.827305316925049
    4. ' verify' → logprob: -3.077305316925049
    5. 'def' → logprob: -3.952305316925049
    6. 'main' → logprob: -3.952305316925049
    7. 'is' → logprob: -4.452305316925049
    8. ' main' → logprob: -5.077305316925049
    9. ' __' → logprob: -5.202305316925049
    10. '_' → logprob: -5.202305316925049

Token 2762: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.061676347395405e-05
    2. 'def' → logprob: -10.12505054473877
    3. '(' → logprob: -12.37505054473877
    4. ' def' → logprob: -13.75005054473877
    5. ' _' → logprob: -13.75005054473877
    6. '()' → logprob: -14.12505054473877
    7. '(_' → logprob: -14.37505054473877
    8. '```' → logprob: -14.50005054473877
    9. '
' → logprob: -14.75005054473877
    10. '\' → logprob: -15.25005054473877

Token 2763: '7' (ID: 22)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.01346631534397602
    2. '2' → logprob: -4.3884663581848145
    3. 'cs' → logprob: -7.0134663581848145
    4. '(cs' → logprob: -10.888465881347656
    5. 'CS' → logprob: -11.013465881347656
    6. '_cs' → logprob: -11.138465881347656
    7. '4' → logprob: -13.513465881347656
    8. '1' → logprob: -13.513465881347656
    9. '	cs' → logprob: -14.263465881347656
    10. '_CS' → logprob: -14.638465881347656

Token 2764: 'A' (ID: 32)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3202289938926697
    2. 'def' → logprob: -1.5702290534973145
    3. '():' → logprob: -2.8202290534973145
    4. '():
' → logprob: -5.0702290534973145
    5. 'A' → logprob: -9.945228576660156
    6. '()' → logprob: -10.695228576660156
    7. 'B' → logprob: -10.820228576660156
    8. ' def' → logprob: -11.320228576660156
    9. '():
' → logprob: -11.945228576660156
    10. 'D' → logprob: -12.070228576660156

Token 2765: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.4748679995536804
    2. '():
' → logprob: -0.9748679995536804
    3. 'def' → logprob: -7.224867820739746
    4. '()' → logprob: -10.224867820739746
    5. '():
' → logprob: -10.849867820739746
    6. '():

' → logprob: -12.099867820739746
    7. ' def' → logprob: -14.849867820739746
    8. ':def' → logprob: -15.099867820739746
    9. '()
' → logprob: -15.224867820739746
    10. ' ():' → logprob: -16.099868774414062

Token 2766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04672800377011299
    2. 'Q' → logprob: -3.5467278957366943
    3. 'c' → logprob: -4.296728134155273
    4. 'def' → logprob: -6.171728134155273
    5. ' Q' → logprob: -7.546728134155273
    6. 'pass' → logprob: -8.296728134155273
    7. ' c' → logprob: -9.171728134155273
    8. 'C' → logprob: -9.671728134155273
    9. '	c' → logprob: -10.671728134155273
    10. 'p' → logprob: -10.796728134155273

Token 2767: ' c' (ID: 274)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0007504248642362654
    2. '   ' → logprob: -7.750750541687012
    3. 'def' → logprob: -8.750750541687012
    4. 'pass' → logprob: -9.000750541687012
    5. ' Q' → logprob: -10.750750541687012
    6. 'c' (adapté à ' c') → logprob: -11.500750541687012
    7. 'for' → logprob: -13.625750541687012
    8. 'q' → logprob: -13.750750541687012
    9. 'p' → logprob: -13.875750541687012
    10. 'print' → logprob: -14.375750541687012

Token 2768: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.049014922231435776
    2. 'def' → logprob: -3.4240148067474365
    3. '.p' → logprob: -5.549015045166016
    4. 's' → logprob: -5.924015045166016
    5. 'l' → logprob: -6.674015045166016
    6. 'lass' → logprob: -6.799015045166016
    7. 'p' → logprob: -6.924015045166016
    8. '   ' → logprob: -7.049015045166016
    9. '.s' → logprob: -7.424015045166016
    10. 'pass' → logprob: -7.549015045166016

Token 2769: 'x' (ID: 87)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022297531366348267
    2. '=' → logprob: -4.272297382354736
    3. ' =' → logprob: -5.147297382354736
    4. 's' → logprob: -7.147297382354736
    5. '1' → logprob: -7.397297382354736
    6. ',p' → logprob: -8.397297859191895
    7. ' ,' → logprob: -9.147297859191895
    8. ')' → logprob: -9.272297859191895
    9. '#' → logprob: -9.397297859191895
    10. 'def' → logprob: -9.397297859191895

Token 2770: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004534334584604949
    2. ',c' → logprob: -7.875453472137451
    3. 'c' → logprob: -10.000452995300293
    4. ' ,' → logprob: -10.875452995300293
    5. '=' → logprob: -13.125452995300293
    6. 'def' → logprob: -13.125452995300293
    7. ',
' → logprob: -13.625452995300293
    8. '   ' → logprob: -13.750452995300293
    9. ' c' → logprob: -13.750452995300293
    10. ',p' → logprob: -14.375452995300293

Token 2771: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.8193366486229934e-05
    2. '   ' → logprob: -11.500018119812012
    3. ' c' → logprob: -11.875018119812012
    4. '<|end|>' → logprob: -15.000018119812012
    5. '  ' → logprob: -15.375018119812012
    6. 'def' → logprob: -15.875018119812012
    7. 'cdecl' → logprob: -16.750019073486328
    8. '	c' → logprob: -16.750019073486328
    9. ' ' → logprob: -17.125019073486328
    10. '    ' → logprob: -17.500019073486328

Token 2772: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026792161166667938
    2. '1' → logprob: -3.651792049407959
    3. 'y' → logprob: -8.026792526245117
    4. 'def' → logprob: -9.026792526245117
    5. '<|end|>' → logprob: -10.901792526245117
    6. ' c' → logprob: -12.151792526245117
    7. 'p' → logprob: -12.526792526245117
    8. 'Sorry' → logprob: -12.901792526245117
    9. '```' → logprob: -13.276792526245117
    10. '#' → logprob: -13.276792526245117

Token 2773: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4789555072784424
    2. 'p' → logprob: -1.4789555072784424
    3. ',' → logprob: -2.1039555072784424
    4. 'c' → logprob: -4.478955268859863
    5. '=' → logprob: -4.978955268859863
    6. ' =' → logprob: -5.353955268859863
    7. '1' → logprob: -5.478955268859863
    8. 'py' → logprob: -6.103955268859863
    9. '#' → logprob: -8.103955268859863
    10. ',y' → logprob: -8.228955268859863

Token 2774: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033951509976759553
    2. ',c' → logprob: -8.12533950805664
    3. '=' → logprob: -10.50033950805664
    4. ' ,' → logprob: -11.62533950805664
    5. 'c' → logprob: -12.25033950805664
    6. ' =' → logprob: -13.62533950805664
    7. ',p' → logprob: -14.75033950805664
    8. ',
' → logprob: -15.50033950805664
    9. ',user' → logprob: -16.12533950805664
    10. ' c' → logprob: -16.62533950805664

Token 2775: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00026288547087460756
    2. ' c' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.500263214111328
    4. 'p' → logprob: -16.125263214111328
    5. 'def' → logprob: -16.875263214111328
    6. 'cdecl' → logprob: -17.125263214111328
    7. '	c' → logprob: -17.250263214111328
    8. '  ' → logprob: -17.375263214111328
    9. ' ' → logprob: -18.000263214111328
    10. '...' → logprob: -18.125263214111328

Token 2776: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38706403970718384
    2. 'c' → logprob: -1.137063980102539
    3. 'r' → logprob: -8.637063980102539
    4. '2' → logprob: -12.762063980102539
    5. '#' → logprob: -13.012063980102539
    6. 'def' → logprob: -13.387063980102539
    7. 'y' → logprob: -13.512063980102539
    8. 'p' → logprob: -13.887063980102539
    9. ' c' → logprob: -14.012063980102539
    10. '```' → logprob: -14.262063980102539

Token 2777: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.20562376081943512
    2. 'p' → logprob: -1.955623745918274
    3. ' =' → logprob: -3.7056238651275635
    4. '=' → logprob: -4.330623626708984
    5. 'c' → logprob: -5.455623626708984
    6. ',' → logprob: -6.330623626708984
    7. 'x' → logprob: -9.080623626708984
    8. '.p' → logprob: -9.330623626708984
    9. '.r' → logprob: -9.455623626708984
    10. ',r' → logprob: -9.580623626708984

Token 2778: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013335635885596275
    2. '=' → logprob: -4.388335704803467
    3. ' =' → logprob: -7.138335704803467
    4. ' ,' → logprob: -11.138335227966309
    5. ',c' → logprob: -11.388335227966309
    6. 'c' → logprob: -12.513335227966309
    7. ',
' → logprob: -14.888335227966309
    8. ' ' → logprob: -14.888335227966309
    9. ',x' → logprob: -15.638335227966309
    10. 'x' → logprob: -15.888335227966309

Token 2779: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.003178071230649948
    2. ' map' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.753177642822266
    4. '	map' → logprob: -15.878177642822266
    5. 'list' → logprob: -16.753177642822266
    6. 'input' → logprob: -18.753177642822266
    7. 'm' → logprob: -19.003177642822266
    8. '(map' → logprob: -19.503177642822266
    9. ' ' → logprob: -19.753177642822266
    10. '  ' → logprob: -19.878177642822266

Token 2780: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.31721824407577515
    2. 'int' → logprob: -1.31721830368042
    3. '(float' → logprob: -6.06721830368042
    4. 'float' → logprob: -6.44221830368042
    5. ',int' → logprob: -11.567217826843262
    6. '=int' → logprob: -11.567217826843262
    7. '   ' → logprob: -11.692217826843262
    8. '[int' → logprob: -12.067217826843262
    9. '```' → logprob: -12.817217826843262
    10. ' int' → logprob: -14.192217826843262

Token 2781: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11444837599992752
    2. ',input' → logprob: -2.739448308944702
    3. '(int' → logprob: -3.864448308944702
    4. ',int' → logprob: -4.364448547363281
    5. '(input' → logprob: -5.489448547363281
    6. '(),' → logprob: -6.864448547363281
    7. 'def' → logprob: -6.864448547363281
    8. ',c' → logprob: -6.989448547363281
    9. '[int' → logprob: -7.239448547363281
    10. ')' → logprob: -7.239448547363281

Token 2782: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -5.157039049663581e-05
    2. ' input' → logprob: -9.875051498413086
    3. '=input' → logprob: -17.750051498413086
    4. 'int' → logprob: -18.500051498413086
    5. ',input' → logprob: -18.500051498413086
    6. '[input' → logprob: -18.625051498413086
    7. '(input' → logprob: -18.625051498413086
    8. '<input' → logprob: -18.625051498413086
    9. '   ' → logprob: -19.000051498413086
    10. 'Input' → logprob: -19.000051498413086

Token 2783: '().' (ID: 1454)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.7043732404708862
    2. ',' → logprob: -0.8293732404708862
    3. '().' → logprob: -3.329373359680176
    4. ',c' → logprob: -4.579373359680176
    5. 'def' → logprob: -5.204373359680176
    6. '(int' → logprob: -5.704373359680176
    7. '()' → logprob: -5.704373359680176
    8. '),' → logprob: -6.329373359680176
    9. '   ' → logprob: -6.454373359680176
    10. ',int' → logprob: -7.079373359680176

Token 2784: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -16.375
    3. 'spl' → logprob: -17.25
    4. '(split' → logprob: -17.5
    5. '.split' → logprob: -18.0
    6. 'strip' → logprob: -18.125
    7. 'skip' → logprob: -18.5
    8. 's' → logprob: -19.375
    9. ')' → logprob: -20.125
    10. '```' → logprob: -20.125

Token 2785: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.16110464930534363
    2. ')
' → logprob: -1.911104679107666
    3. '())' → logprob: -7.911104679107666
    4. ')' → logprob: -8.661104202270508
    5. '   ' → logprob: -8.661104202270508
    6. '()' → logprob: -9.411104202270508
    7. '()
' → logprob: -9.661104202270508
    8. '())
' → logprob: -11.411104202270508
    9. 'def' → logprob: -12.536104202270508
    10. ')
' → logprob: -13.036104202270508

Token 2786: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34867098927497864
    2. '   ' → logprob: -1.2236709594726562
    3. 'def' → logprob: -8.973670959472656
    4. ' c' → logprob: -9.973670959472656
    5. '	c' → logprob: -9.973670959472656
    6. ' ' → logprob: -13.848670959472656
    7. '```' → logprob: -13.848670959472656
    8. '
' → logprob: -13.973670959472656
    9. '   ' → logprob: -13.973670959472656
    10. '#' → logprob: -14.848670959472656

Token 2787: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.004998805467039347
    2. '   ' → logprob: -5.379998683929443
    3. 'Q' → logprob: -8.004999160766602
    4. ' c' → logprob: -10.879999160766602
    5. 'def' → logprob: -11.754999160766602
    6. 'Query' → logprob: -12.379999160766602
    7. '	c' → logprob: -12.629999160766602
    8. '```' → logprob: -13.004999160766602
    9. 'while' → logprob: -13.504999160766602
    10. 'q' → logprob: -13.629999160766602

Token 2788: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019280273467302322
    2. '2' → logprob: -4.144280433654785
    3. 'c' → logprob: -5.769280433654785
    4. 'def' → logprob: -10.144280433654785
    5. '   ' → logprob: -11.144280433654785
    6. ' =' → logprob: -11.269280433654785
    7. '```' → logprob: -11.519280433654785
    8. 'p' → logprob: -11.519280433654785
    9. '=' → logprob: -11.644280433654785
    10. ' c' → logprob: -12.019280433654785

Token 2789: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01132426131516695
    2. '1' → logprob: -4.511324405670166
    3. 'c' → logprob: -9.011323928833008
    4. 'y' → logprob: -9.136323928833008
    5. ',' → logprob: -10.761323928833008
    6. '2' → logprob: -10.886323928833008
    7. '#' → logprob: -13.386323928833008
    8. ',c' → logprob: -13.386323928833008
    9. 'def' → logprob: -13.886323928833008
    10. '_,' → logprob: -14.511323928833008

Token 2790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003939728485420346
    2. ',c' → logprob: -7.875393867492676
    3. ' ,' → logprob: -11.625393867492676
    4. 'c' → logprob: -12.375393867492676
    5. '=' → logprob: -15.125393867492676
    6. ',
' → logprob: -15.125393867492676
    7. ' c' → logprob: -16.500394821166992
    8. '_,' → logprob: -16.875394821166992
    9. '   ' → logprob: -17.125394821166992
    10. 'def' → logprob: -17.375394821166992

Token 2791: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003177952254191041
    2. ' c' → logprob: -5.753178119659424
    3. '   ' → logprob: -16.003177642822266
    4. ' ' → logprob: -17.128177642822266
    5. '<|end|>' → logprob: -17.253177642822266
    6. '...' → logprob: -17.503177642822266
    7. '  ' → logprob: -18.003177642822266
    8. '	c' → logprob: -18.378177642822266
    9. '
' → logprob: -18.503177642822266
    10. '```' → logprob: -18.878177642822266

Token 2792: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35215526819229126
    2. '1' → logprob: -1.4771552085876465
    3. 'y' → logprob: -2.7271552085876465
    4. 'c' → logprob: -5.8521552085876465
    5. 'user' → logprob: -9.477155685424805
    6. '<|end|>' → logprob: -10.477155685424805
    7. '3' → logprob: -10.727155685424805
    8. ' ' → logprob: -10.977155685424805
    9. '```' → logprob: -11.102155685424805
    10. '...' → logprob: -11.102155685424805

Token 2793: 'y' (ID: 88)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0058138407766819
    2. 'y' → logprob: -5.380814075469971
    3. ',' → logprob: -6.880814075469971
    4. 'int' → logprob: -10.255813598632812
    5. '1' → logprob: -10.755813598632812
    6. '...' → logprob: -11.130813598632812
    7. '   ' → logprob: -11.255813598632812
    8. '<|end|>' → logprob: -11.505813598632812
    9. '```' → logprob: -11.505813598632812
    10. ' c' → logprob: -11.630813598632812

Token 2794: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003078142472077161
    2. ',c' → logprob: -8.1253080368042
    3. ' ,' → logprob: -11.7503080368042
    4. 'c' → logprob: -12.5003080368042
    5. '_,' → logprob: -16.625307083129883
    6. ',
' → logprob: -16.750307083129883
    7. '=' → logprob: -16.875307083129883
    8. ',int' → logprob: -18.500307083129883
    9. ' c' → logprob: -18.750307083129883
    10. ',user' → logprob: -18.750307083129883

Token 2795: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007401806069537997
    2. ' c' → logprob: -7.375740051269531
    3. 'map' → logprob: -9.125740051269531
    4. 'int' → logprob: -12.625740051269531
    5. ' map' → logprob: -13.500740051269531
    6. ' ' → logprob: -17.87574005126953
    7. 'list' → logprob: -18.00074005126953
    8. '#' → logprob: -18.75074005126953
    9. '   ' → logprob: -19.00074005126953
    10. '```' → logprob: -19.00074005126953

Token 2796: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0018862803699448705
    2. 'map' → logprob: -6.626886367797852
    3. 'c' → logprob: -8.126886367797852
    4. 'int' → logprob: -8.251886367797852
    5. ' ' → logprob: -13.751886367797852
    6. '1' → logprob: -13.751886367797852
    7. ' map' → logprob: -14.501886367797852
    8. '   ' → logprob: -15.501886367797852
    9. ' =' → logprob: -15.751886367797852
    10. 'input' → logprob: -15.876886367797852

Token 2797: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.566664457321167
    2. '2' → logprob: -1.566664457321167
    3. 'y' → logprob: -1.816664457321167
    4. 'c' → logprob: -2.816664457321167
    5. 'map' → logprob: -7.316664695739746
    6. 'int' → logprob: -7.816664695739746
    7. '1' → logprob: -9.191664695739746
    8. '
' → logprob: -9.316664695739746
    9. '   ' → logprob: -9.691664695739746
    10. 'input' → logprob: -10.066664695739746

Token 2798: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023273199796676636
    2. ' =' → logprob: -3.773273229598999
    3. ',' → logprob: -10.523273468017578
    4. '=
' → logprob: -15.148273468017578
    5. '=c' → logprob: -16.148273468017578
    6. ',c' → logprob: -16.523273468017578
    7. ' ' → logprob: -16.648273468017578
    8. '
' → logprob: -16.773273468017578
    9. '   ' → logprob: -17.148273468017578
    10. ' ,' → logprob: -18.023273468017578

Token 2799: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.018150296062231064
    2. ' map' → logprob: -4.018150329589844
    3. 'list' → logprob: -15.018150329589844
    4. 'int' → logprob: -16.518150329589844
    5. '(map' → logprob: -16.518150329589844
    6. 'm' → logprob: -17.393150329589844
    7. '	map' → logprob: -18.018150329589844
    8. '   ' → logprob: -18.518150329589844
    9. 'input' → logprob: -19.143150329589844
    10. 'Map' → logprob: -19.268150329589844

Token 2800: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024856459349393845
    2. '(int' → logprob: -6.002485752105713
    3. '[int' → logprob: -12.127485275268555
    4. '=int' → logprob: -12.377485275268555
    5. ' int' → logprob: -15.627485275268555
    6. '<int' → logprob: -16.377485275268555
    7. 'ints' → logprob: -16.877485275268555
    8. ':int' → logprob: -17.627485275268555
    9. '```' → logprob: -18.002485275268555
    10. ',int' → logprob: -18.252485275268555

Token 2801: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5059728026390076
    2. 'int' → logprob: -1.0059728622436523
    3. '=int' → logprob: -3.5059728622436523
    4. ',int' → logprob: -7.005972862243652
    5. '[int' → logprob: -7.755972862243652
    6. '<int' → logprob: -10.630972862243652
    7. ']int' → logprob: -11.755972862243652
    8. ':int' → logprob: -12.630972862243652
    9. ' int' → logprob: -12.755972862243652
    10. 'in' → logprob: -14.130972862243652

Token 2802: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00043555660522542894
    2. 'int' → logprob: -7.7504353523254395
    3. ' input' → logprob: -12.250435829162598
    4. 'map' → logprob: -17.62543487548828
    5. '   ' → logprob: -18.50043487548828
    6. '<input' → logprob: -18.75043487548828
    7. 'import' → logprob: -19.62543487548828
    8. 'list' → logprob: -20.25043487548828
    9. '(input' → logprob: -20.37543487548828
    10. '_input' → logprob: -21.00043487548828

Token 2803: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5832200646400452
    2. '=int' → logprob: -0.9582200646400452
    3. '()(' → logprob: -3.9582200050354004
    4. '()' → logprob: -4.7082200050354
    5. '=list' → logprob: -5.4582200050354
    6. '())
' → logprob: -5.5832200050354
    7. '=lambda' → logprob: -5.8332200050354
    8. '(),' → logprob: -6.0832200050354
    9. '()>' → logprob: -6.2082200050354
    10. '()[' → logprob: -6.2082200050354

Token 2804: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.514650183613412e-05
    2. 'int' → logprob: -10.000055313110352
    3. '(split' → logprob: -12.500055313110352
    4. 'spl' → logprob: -13.125055313110352
    5. 'strip' → logprob: -13.500055313110352
    6. ' split' → logprob: -14.250055313110352
    7. 'skip' → logprob: -14.625055313110352
    8. 'plit' → logprob: -15.125055313110352
    9. 'float' → logprob: -16.12505531311035
    10. 'sc' → logprob: -16.12505531311035

Token 2805: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.5134077072143555
    2. ')
' → logprob: -1.0134077072143555
    3. '):
' → logprob: -3.5134077072143555
    4. '()):
' → logprob: -5.0134077072143555
    5. '()' → logprob: -7.0134077072143555
    6. '():
' → logprob: -7.3884077072143555
    7. '()
' → logprob: -7.6384077072143555
    8. '   ' → logprob: -9.638407707214355
    9. 'def' → logprob: -11.513407707214355
    10. '())
' → logprob: -11.888407707214355

Token 2806: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018346598371863365
    2. 'c' → logprob: -4.018346786499023
    3. 'def' → logprob: -8.768346786499023
    4. '```' → logprob: -11.018346786499023
    5. '
' → logprob: -11.643346786499023
    6. '	c' → logprob: -11.893346786499023
    7. ' c' → logprob: -12.393346786499023
    8. '#' → logprob: -14.393346786499023
    9. '(c' → logprob: -14.518346786499023
    10. '    
' → logprob: -14.518346786499023

Token 2807: ' print' (ID: 2123)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002382188104093075
    2. '   ' → logprob: -6.127382278442383
    3. 'def' → logprob: -9.252382278442383
    4. ' c' → logprob: -9.627382278442383
    5. '```' → logprob: -11.877382278442383
    6. '	c' → logprob: -12.002382278442383
    7. '
' → logprob: -12.252382278442383
    8. 'print' (adapté à ' print') → logprob: -12.502382278442383
    9. 'return' → logprob: -12.502382278442383
    10. 'from' → logprob: -12.627382278442383

Token 2808: '(inter' (ID: 62819)
  Prédit: '(inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inter' → logprob: -0.0001830410328693688
    2. 'inter' → logprob: -8.62518310546875
    3. '(' → logprob: -13.37518310546875
    4. '(is' → logprob: -13.87518310546875
    5. '(c' → logprob: -15.75018310546875
    6. '(int' → logprob: -16.00018310546875
    7. ' intersect' → logprob: -16.12518310546875
    8. '(
' → logprob: -16.50018310546875
    9. '(in' → logprob: -16.50018310546875
    10. 'intersection' → logprob: -16.62518310546875

Token 2809: 'sect' (ID: 16910)
  Prédit: 'sect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sect' → logprob: -5.319370302458992e-06
    2. 'section' → logprob: -13.750005722045898
    3. 'se' → logprob: -13.875005722045898
    4. '#' → logprob: -14.250005722045898
    5. '
' → logprob: -15.125005722045898
    6. 'spect' → logprob: -15.500005722045898
    7. 'sects' → logprob: -15.625005722045898
    8. 'Sect' → logprob: -15.750005722045898
    9. 'sec' → logprob: -15.875005722045898
    10. 's' → logprob: -15.875005722045898

Token 2810: '_cc' (ID: 69524)
  Prédit: '_cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -0.003237482625991106
    2. 'cc' → logprob: -5.753237247467041
    3. 'c' → logprob: -10.1282377243042
    4. 't' → logprob: -12.0032377243042
    5. '_CC' → logprob: -13.1282377243042
    6. '(c' → logprob: -13.1282377243042
    7. 's' → logprob: -13.2532377243042
    8. '_c' → logprob: -13.3782377243042
    9. 'ct' → logprob: -13.5032377243042
    10. 'CC' → logprob: -13.8782377243042

Token 2811: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.00825332198292017
    2. 'Circle' → logprob: -5.38325309753418
    3. ')(' → logprob: -6.25825309753418
    4. '(c' → logprob: -6.75825309753418
    5. ')' → logprob: -8.00825309753418
    6. '((' → logprob: -10.13325309753418
    7. ' (' → logprob: -10.50825309753418
    8. 'c' → logprob: -10.75825309753418
    9. '
' → logprob: -10.88325309753418
    10. '(' → logprob: -11.00825309753418

Token 2812: 'ircle' (ID: 10986)
  Prédit: 'ircle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircle' → logprob: -0.07890421897172928
    2. 'Circle' → logprob: -2.578904151916504
    3. '(C' → logprob: -12.328904151916504
    4. '1' → logprob: -12.828904151916504
    5. '.Circle' → logprob: -13.203904151916504
    6. '#' → logprob: -13.578904151916504
    7. ' Circle' → logprob: -13.828904151916504
    8. 'circle' → logprob: -13.953904151916504
    9. 'ir' → logprob: -14.953904151916504
    10. 'irc' → logprob: -15.078904151916504

Token 2813: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.3178142309188843
    2. 'Circle' → logprob: -1.5678142309188843
    3. 'Point' → logprob: -3.067814350128174
    4. '(C' → logprob: -4.067814350128174
    5. ' Circle' → logprob: -10.317813873291016
    6. 'C' → logprob: -10.817813873291016
    7. '(
' → logprob: -10.942813873291016
    8. '
' → logprob: -11.442813873291016
    9. ')' → logprob: -11.942813873291016
    10. '	Point' → logprob: -11.942813873291016

Token 2814: '(c' (ID: 2410)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.20127327740192413
    2. '(Point' → logprob: -2.201273202896118
    3. 'c' → logprob: -2.951273202896118
    4. '(c' → logprob: -3.951273202896118
    5. ' Point' → logprob: -9.576272964477539
    6. 'Circle' → logprob: -11.076272964477539
    7. ')c' → logprob: -11.076272964477539
    8. ' c' → logprob: -11.701272964477539
    9. '	Point' → logprob: -11.826272964477539
    10. '   ' → logprob: -12.076272964477539

Token 2815: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.735893965815194e-05
    2. '(c' → logprob: -11.375017166137695
    3. '1' → logprob: -12.375017166137695
    4. ' c' → logprob: -13.500017166137695
    5. ')c' → logprob: -15.875017166137695
    6. '	c' → logprob: -17.125017166137695
    7. ',c' → logprob: -17.875017166137695
    8. ':c' → logprob: -18.250017166137695
    9. '$c' → logprob: -18.375017166137695
    10. '*c' → logprob: -18.750017166137695

Token 2816: 'x' (ID: 87)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08962073922157288
    2. '(c' → logprob: -2.46462082862854
    3. 'x' → logprob: -7.714620590209961
    4. ')c' → logprob: -9.339620590209961
    5. 'Point' → logprob: -9.964620590209961
    6. ' c' → logprob: -10.464620590209961
    7. 'int' → logprob: -10.839620590209961
    8. ',c' → logprob: -11.089620590209961
    9. '	c' → logprob: -12.339620590209961
    10. '1' → logprob: -12.714620590209961

Token 2817: ',' (ID: 11)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.03983095660805702
    2. 'c' → logprob: -3.6648309230804443
    3. ',c' → logprob: -4.664831161499023
    4. ',' → logprob: -5.539831161499023
    5. '(' → logprob: -10.414831161499023
    6. ' c' → logprob: -10.789831161499023
    7. ')c' → logprob: -11.039831161499023
    8. 'C' → logprob: -11.789831161499023
    9. ' (' → logprob: -12.164831161499023
    10. '),' → logprob: -12.664831161499023

Token 2818: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.15310683415737e-05
    2. ' c' → logprob: -10.875021934509277
    3. '   ' → logprob: -13.625021934509277
    4. '	c' → logprob: -15.625021934509277
    5. '  ' → logprob: -15.750021934509277
    6. '    ' → logprob: -16.00002098083496
    7. ')c' → logprob: -16.00002098083496
    8. ' ' → logprob: -16.25002098083496
    9. '```' → logprob: -16.37502098083496
    10. '<|end|>' → logprob: -16.37502098083496

Token 2819: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005961860530078411
    2. 'c' → logprob: -5.130961894989014
    3. 'y' → logprob: -11.380961418151855
    4. ' c' → logprob: -12.005961418151855
    5. '```' → logprob: -13.005961418151855
    6. 'py' → logprob: -13.130961418151855
    7. ')' → logprob: -13.380961418151855
    8. 'cl' → logprob: -14.255961418151855
    9. 'm' → logprob: -14.255961418151855
    10. 'x' → logprob: -14.380961418151855

Token 2820: 'y' (ID: 88)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12992142140865326
    2. 'y' → logprob: -2.1299214363098145
    3. '1' → logprob: -5.8799214363098145
    4. ',' → logprob: -9.879920959472656
    5. '   ' → logprob: -10.754920959472656
    6. ',c' → logprob: -10.879920959472656
    7. 'cy' → logprob: -11.004920959472656
    8. 'py' → logprob: -11.254920959472656
    9. ' c' → logprob: -11.504920959472656
    10. '(c' → logprob: -11.504920959472656

Token 2821: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11147703975439072
    2. '),' → logprob: -2.7364771366119385
    3. '(c' → logprob: -3.8614771366119385
    4. ',c' → logprob: -4.111476898193359
    5. 'c' → logprob: -5.986476898193359
    6. ' ,' → logprob: -7.611476898193359
    7. '(),' → logprob: -9.23647689819336
    8. '   ' → logprob: -10.11147689819336
    9. ')),' → logprob: -10.73647689819336
    10. '(' → logprob: -11.23647689819336

Token 2822: ' c' (ID: 274)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.0006042646709829569
    2. 'c' → logprob: -7.625604152679443
    3. ' Circle' → logprob: -9.375604629516602
    4. '   ' → logprob: -11.500604629516602
    5. 'C' → logprob: -12.000604629516602
    6. 'Cir' → logprob: -12.250604629516602
    7. 'Circ' → logprob: -13.625604629516602
    8. '.Circle' → logprob: -13.750604629516602
    9. ' c' → logprob: -13.875604629516602
    10. 'Point' → logprob: -14.000604629516602

Token 2823: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016325322212651372
    2. 'r' → logprob: -8.750163078308105
    3. '
' → logprob: -14.250163078308105
    4. 'c' → logprob: -14.375163078308105
    5. ')' → logprob: -14.812663078308105
    6. '```' → logprob: -15.187663078308105
    7. '2' → logprob: -15.437663078308105
    8. 'l' → logprob: -15.812663078308105
    9. ')
' → logprob: -15.812663078308105
    10. '１' → logprob: -16.000164031982422

Token 2824: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00027718624914996326
    2. '1' → logprob: -8.375277519226074
    3. 'cr' → logprob: -10.875277519226074
    4. '
' → logprob: -12.125277519226074
    5. 'c' → logprob: -12.187777519226074
    6. '```' → logprob: -12.875277519226074
    7. '	r' → logprob: -13.500277519226074
    8. ')' → logprob: -13.500277519226074
    9. 'rr' → logprob: -13.875277519226074
    10. ')
' → logprob: -14.125277519226074

Token 2825: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00015383612480945885
    2. '   ' → logprob: -10.000153541564941
    3. ' ),' → logprob: -10.625153541564941
    4. ')),' → logprob: -11.000153541564941
    5. '()),' → logprob: -11.000153541564941
    6. ')' → logprob: -11.375153541564941
    7. '),
' → logprob: -11.750153541564941
    8. ',' → logprob: -11.875153541564941
    9. '(c' → logprob: -12.500153541564941
    10. 'c' → logprob: -12.750153541564941

Token 2826: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -5.872261317563243e-05
    2. ' Circle' → logprob: -9.750059127807617
    3. '   ' → logprob: -16.250059127807617
    4. '.Circle' → logprob: -16.500059127807617
    5. 'Circ' → logprob: -17.500059127807617
    6. 'circle' → logprob: -17.875059127807617
    7. 'C' → logprob: -18.375059127807617
    8. '_circle' → logprob: -18.500059127807617
    9. 'Cir' → logprob: -18.875059127807617
    10. '	C' → logprob: -19.250059127807617

Token 2827: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.17231689393520355
    2. 'Point' → logprob: -1.9223169088363647
    3. 'Circle' → logprob: -4.422317028045654
    4. '(C' → logprob: -12.172316551208496
    5. '	Point' → logprob: -13.172316551208496
    6. ' Point' → logprob: -13.422316551208496
    7. 'C' → logprob: -13.672316551208496
    8. '
' → logprob: -13.672316551208496
    9. '<Point' → logprob: -14.547316551208496
    10. '   ' → logprob: -14.797316551208496

Token 2828: '(c' (ID: 2410)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3422451615333557
    2. '(Point' → logprob: -1.342245101928711
    3. 'Circle' → logprob: -3.592245101928711
    4. 'c' → logprob: -6.967245101928711
    5. 'C' → logprob: -9.592245101928711
    6. ' Point' → logprob: -11.717245101928711
    7. '	Point' → logprob: -12.092245101928711
    8. '(C' → logprob: -13.217245101928711
    9. '<Point' → logprob: -13.217245101928711
    10. '.Point' → logprob: -14.217245101928711

Token 2829: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759721994400024
    2. '2' → logprob: -0.8259721994400024
    3. ' c' → logprob: -10.450972557067871
    4. '(c' → logprob: -13.075972557067871
    5. '   ' → logprob: -14.200972557067871
    6. '
' → logprob: -15.825972557067871
    7. ')c' → logprob: -15.950972557067871
    8. '(' → logprob: -16.200971603393555
    9. 'x' → logprob: -16.325971603393555
    10. ' ' → logprob: -16.325971603393555

Token 2830: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.0339031834737398e-05
    2. '2' → logprob: -11.125020027160645
    3. 'c' → logprob: -12.125020027160645
    4. ' x' → logprob: -17.75002098083496
    5. ')x' → logprob: -18.00002098083496
    6. '_x' → logprob: -18.50002098083496
    7. '
' → logprob: -18.62502098083496
    8. 'cx' → logprob: -18.75002098083496
    9. '1' → logprob: -18.87502098083496
    10. '```' → logprob: -19.37502098083496

Token 2831: ',' (ID: 11)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06186448410153389
    2. '(c' → logprob: -3.1868643760681152
    3. ',' → logprob: -4.061864376068115
    4. ',c' → logprob: -6.561864376068115
    5. ')c' → logprob: -11.186864852905273
    6. '),' → logprob: -11.186864852905273
    7. ' c' → logprob: -11.686864852905273
    8. ')' → logprob: -11.936864852905273
    9. 'x' → logprob: -12.186864852905273
    10. '	c' → logprob: -12.936864852905273

Token 2832: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00023250321100931615
    2. ' c' → logprob: -8.375232696533203
    3. '   ' → logprob: -14.125232696533203
    4. '
' → logprob: -15.500232696533203
    5. '
' → logprob: -15.750232696533203
    6. '```' → logprob: -15.750232696533203
    7. '	c' → logprob: -16.375232696533203
    8. ')c' → logprob: -16.500232696533203
    9. ' ' → logprob: -16.562732696533203
    10. ',' → logprob: -16.875232696533203

Token 2833: '2' (ID: 17)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16033664345741272
    2. '2' → logprob: -2.03533673286438
    3. '1' → logprob: -4.285336494445801
    4. 'y' → logprob: -5.660336494445801
    5. '```' → logprob: -9.4103364944458
    6. ',' → logprob: -10.7853364944458
    7. 'Let's' → logprob: -11.2853364944458
    8. ')' → logprob: -11.2853364944458
    9. '   ' → logprob: -11.5353364944458
    10. 'm' → logprob: -11.5353364944458

Token 2834: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.816093228830141e-06
    2. 'x' → logprob: -13.87500286102295
    3. ',' → logprob: -14.50000286102295
    4. '2' → logprob: -14.62500286102295
    5. '),' → logprob: -15.12500286102295
    6. 'c' → logprob: -15.50000286102295
    7. '```' → logprob: -15.62500286102295
    8. '1' → logprob: -16.625001907348633
    9. ' y' → logprob: -16.750001907348633
    10. '   ' → logprob: -17.375001907348633

Token 2835: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0012745194835588336
    2. 'c' → logprob: -6.751274585723877
    3. '(c' → logprob: -9.876274108886719
    4. '   ' → logprob: -10.501274108886719
    5. ',' → logprob: -11.501274108886719
    6. ' ),' → logprob: -12.126274108886719
    7. ')' → logprob: -12.751274108886719
    8. ' ' → logprob: -13.876274108886719
    9. '#' → logprob: -14.126274108886719
    10. '()),' → logprob: -14.126274108886719

Token 2836: ' c' (ID: 274)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -0.003305335296317935
    2. 'c' → logprob: -5.753305435180664
    3. ' Circle' → logprob: -9.753305435180664
    4. '   ' → logprob: -9.753305435180664
    5. ' c' → logprob: -12.503305435180664
    6. '  ' → logprob: -13.378305435180664
    7. ' ' → logprob: -13.503305435180664
    8. 'C' → logprob: -13.628305435180664
    9. '    ' → logprob: -14.128305435180664
    10. '       ' → logprob: -14.128305435180664

Token 2837: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2401985228061676
    2. 'c' → logprob: -1.6151984930038452
    3. 'r' → logprob: -4.240198612213135
    4. 'cr' → logprob: -8.365198135375977
    5. '1' → logprob: -11.240198135375977
    6. ')c' → logprob: -11.990198135375977
    7. ')' → logprob: -12.615198135375977
    8. '   ' → logprob: -12.865198135375977
    9. '_r' → logprob: -13.365198135375977
    10. '```' → logprob: -13.615198135375977

Token 2838: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -14.750000953674316
    3. '
' → logprob: -15.000000953674316
    4. 'y' → logprob: -16.375001907348633
    5. '.r' → logprob: -16.375001907348633
    6. '1' → logprob: -16.500001907348633
    7. 'c' → logprob: -16.875001907348633
    8. 'x' → logprob: -16.875001907348633
    9. ')' → logprob: -17.625001907348633
    10. 'р' → logprob: -17.750001907348633

Token 2839: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0711279958486557
    2. '()))' → logprob: -2.6961278915405273
    3. ')))' → logprob: -7.071127891540527
    4. ')' → logprob: -8.446127891540527
    5. '())' → logprob: -9.696127891540527
    6. '))
' → logprob: -11.071127891540527
    7. '   ' → logprob: -11.196127891540527
    8. '()' → logprob: -11.696127891540527
    9. '()))
' → logprob: -11.946127891540527
    10. '())))' → logprob: -11.946127891540527

Token 2840: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.5941604690160602e-05
    2. '   ' → logprob: -11.000025749206543
    3. 'return' → logprob: -11.625025749206543
    4. '#' → logprob: -16.00002670288086
    5. ' def' → logprob: -16.12502670288086
    6. '```' → logprob: -17.00002670288086
    7. '
' → logprob: -17.37502670288086
    8. 'c' → logprob: -18.25002670288086
    9. '``' → logprob: -18.75002670288086
    10. 'if' → logprob: -19.87502670288086

Token 2841: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.08408759534358978
    2. '__' → logprob: -2.709087610244751
    3. 'main' → logprob: -4.834087371826172
    4. 'def' → logprob: -5.584087371826172
    5. 'is' → logprob: -7.084087371826172
    6. 'cross' → logprob: -8.334087371826172
    7. '_' → logprob: -8.334087371826172
    8. ' verify' → logprob: -8.709087371826172
    9. '_verify' → logprob: -9.084087371826172
    10. 'if' → logprob: -9.209087371826172

Token 2842: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002558561391197145
    2. 'def' → logprob: -8.375255584716797
    3. '_cs' → logprob: -11.250255584716797
    4. '7' → logprob: -12.250255584716797
    5. '(' → logprob: -12.875255584716797
    6. 'cs' → logprob: -13.625255584716797
    7. 'is' → logprob: -14.375255584716797
    8. 's' → logprob: -14.500255584716797
    9. '
' → logprob: -15.250255584716797
    10. '9' → logprob: -15.250255584716797

Token 2843: '7' (ID: 22)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.8273540139198303
    2. 'cs' → logprob: -1.7023539543151855
    3. '7' → logprob: -1.8273539543151855
    4. 'def' → logprob: -2.8273539543151855
    5. '9' → logprob: -3.0773539543151855
    6. '8' → logprob: -3.5773539543151855
    7. '6' → logprob: -4.2023539543151855
    8. '13' → logprob: -4.5773539543151855
    9. 'CS' → logprob: -4.7023539543151855
    10. '2' → logprob: -4.8273539543151855

Token 2844: 'D' (ID: 35)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.01617630384862423
    2. 'C' → logprob: -4.766176223754883
    3. 'def' → logprob: -4.891176223754883
    4. '#' → logprob: -11.641176223754883
    5. 'B' → logprob: -12.016176223754883
    6. 'D' → logprob: -13.141176223754883
    7. 'CS' → logprob: -14.016176223754883
    8. ' def' → logprob: -14.391176223754883
    9. '
' → logprob: -14.391176223754883
    10. 'cs' → logprob: -15.141176223754883

Token 2845: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.39044201374053955
    2. '():
' → logprob: -1.1404420137405396
    3. 'def' → logprob: -5.64044189453125
    4. '()' → logprob: -11.89044189453125
    5. '():
' → logprob: -12.89044189453125
    6. '():

' → logprob: -12.89044189453125
    7. ' def' → logprob: -14.26544189453125
    8. ':def' → logprob: -15.89044189453125
    9. ' ():' → logprob: -16.01544189453125
    10. 'Q' → logprob: -16.14044189453125

Token 2846: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.7010369896888733
    2. '   ' → logprob: -0.9510369896888733
    3. 'def' → logprob: -2.2010369300842285
    4. 'c' → logprob: -5.5760369300842285
    5. 'pass' → logprob: -6.4510369300842285
    6. 'for' → logprob: -7.3260369300842285
    7. ' Q' → logprob: -7.5760369300842285
    8. '```' → logprob: -9.326037406921387
    9. 'q' → logprob: -10.076037406921387
    10. 'from' → logprob: -10.201037406921387

Token 2847: ' cx' (ID: 44448)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8989177346229553
    2. 'c' → logprob: -1.0239176750183105
    3. 'Q' → logprob: -1.6489176750183105
    4. '   ' → logprob: -3.7739176750183105
    5. 'pass' → logprob: -4.2739176750183105
    6. 'for' → logprob: -6.0239176750183105
    7. 'print' → logprob: -6.8989176750183105
    8. 'return' → logprob: -7.7739176750183105
    9. 's' → logprob: -9.023918151855469
    10. 'p' → logprob: -9.148918151855469

Token 2848: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004598872736096382
    2. '1' → logprob: -5.879599094390869
    3. 'def' → logprob: -7.129599094390869
    4. 's' → logprob: -8.004598617553711
    5. ' ,' → logprob: -8.129598617553711
    6. 'x' → logprob: -8.629598617553711
    7. ',c' → logprob: -9.879598617553711
    8. '   ' → logprob: -10.004598617553711
    9. '_,' → logprob: -10.129598617553711
    10. ',s' → logprob: -11.254598617553711

Token 2849: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.000961362209636718
    2. ' cy' → logprob: -7.1259613037109375
    3. 'c' → logprob: -9.000961303710938
    4. 'cx' → logprob: -10.375961303710938
    5. '	c' → logprob: -14.375961303710938
    6. 'cs' → logprob: -14.625961303710938
    7. 'cr' → logprob: -15.250961303710938
    8. ' c' → logprob: -15.375961303710938
    9. 'cyj' → logprob: -15.375961303710938
    10. '   ' → logprob: -16.250961303710938

Token 2850: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.955703818472102e-05
    2. ',c' → logprob: -10.500059127807617
    3. ' ,' → logprob: -11.125059127807617
    4. '=' → logprob: -11.875059127807617
    5. ',p' → logprob: -12.125059127807617
    6. ',line' → logprob: -13.875059127807617
    7. '   ' → logprob: -14.125059127807617
    8. ',x' → logprob: -14.250059127807617
    9. ',input' → logprob: -14.500059127807617
    10. ' =' → logprob: -14.750059127807617

Token 2851: ' cr' (ID: 1769)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08360317349433899
    2. 'p' → logprob: -3.0836031436920166
    3. 'cr' → logprob: -4.083603382110596
    4. 'x' → logprob: -5.458603382110596
    5. 'px' → logprob: -5.583603382110596
    6. 'c' → logprob: -5.583603382110596
    7. 'pr' → logprob: -6.208603382110596
    8. 'cx' → logprob: -6.333603382110596
    9. 'rx' → logprob: -6.958603382110596
    10. 'ax' → logprob: -7.958603382110596

Token 2852: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5129647254943848
    2. ',' → logprob: -1.3879647254943848
    3. '=' → logprob: -1.8879647254943848
    4. ',r' → logprob: -9.262964248657227
    5. '   ' → logprob: -9.637964248657227
    6. ' ,' → logprob: -9.637964248657227
    7. ',p' → logprob: -10.512964248657227
    8. ',c' → logprob: -10.762964248657227
    9. 'r' → logprob: -11.512964248657227
    10. 'p' → logprob: -11.637964248657227

Token 2853: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.004078401252627373
    2. ' map' → logprob: -5.504078388214111
    3. 'm' → logprob: -18.004077911376953
    4. 'list' → logprob: -18.504077911376953
    5. '   ' → logprob: -18.629077911376953
    6. '	map' → logprob: -19.129077911376953
    7. ',map' → logprob: -20.129077911376953
    8. 'input' → logprob: -20.254077911376953
    9. '.map' → logprob: -20.879077911376953
    10. 'x' → logprob: -21.254077911376953

Token 2854: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04880446195602417
    2. '(int' → logprob: -3.048804521560669
    3. '[int' → logprob: -8.79880428314209
    4. '=int' → logprob: -9.79880428314209
    5. '<int' → logprob: -12.92380428314209
    6. ',int' → logprob: -13.04880428314209
    7. ':int' → logprob: -13.17380428314209
    8. ' int' → logprob: -13.67380428314209
    9. 'ints' → logprob: -13.79880428314209
    10. ']int' → logprob: -14.29880428314209

Token 2855: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003240697318688035
    2. ',input' → logprob: -6.003240585327148
    3. ',c' → logprob: -7.378240585327148
    4. ',int' → logprob: -9.628240585327148
    5. ',list' → logprob: -10.003240585327148
    6. ' ,' → logprob: -12.128240585327148
    7. '(),' → logprob: -12.378240585327148
    8. ',x' → logprob: -12.753240585327148
    9. 'def' → logprob: -13.128240585327148
    10. ',map' → logprob: -13.378240585327148

Token 2856: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.002628684975206852
    2. 'int' → logprob: -6.252628803253174
    3. 'map' → logprob: -7.502628803253174
    4. ' input' → logprob: -9.002628326416016
    5. 'list' → logprob: -10.627628326416016
    6. ' map' → logprob: -14.877628326416016
    7. 'x' → logprob: -15.502628326416016
    8. '   ' → logprob: -16.002628326416016
    9. 'inp' → logprob: -16.877628326416016
    10. 'inputs' → logprob: -17.002628326416016

Token 2857: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.7443703413009644
    2. ',' → logprob: -1.4943703413009644
    3. '(),' → logprob: -2.369370460510254
    4. ',c' → logprob: -2.994370460510254
    5. 'def' → logprob: -3.869370460510254
    6. '()' → logprob: -4.244370460510254
    7. '():
' → logprob: -4.494370460510254
    8. '(cx' → logprob: -4.619370460510254
    9. '=' → logprob: -4.744370460510254
    10. '#' → logprob: -4.994370460510254

Token 2858: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. 'spl' → logprob: -15.5
    3. '(split' → logprob: -16.125
    4. ' split' → logprob: -16.875
    5. 'strip' → logprob: -17.375
    6. 'input' → logprob: -17.625
    7. 'skip' → logprob: -17.875
    8. 'list' → logprob: -18.75
    9. 'int' → logprob: -18.875
    10. 'plit' → logprob: -19.25

Token 2859: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5324572920799255
    2. '())
' → logprob: -0.9074572920799255
    3. '()
' → logprob: -5.03245735168457
    4. '()' → logprob: -6.53245735168457
    5. ')' → logprob: -7.28245735168457
    6. '())' → logprob: -7.78245735168457
    7. '   ' → logprob: -9.78245735168457
    8. ')
' → logprob: -9.90745735168457
    9. 'def' → logprob: -10.53245735168457
    10. '())
' → logprob: -10.53245735168457

Token 2860: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056239549070596695
    2. 'r' → logprob: -4.056239604949951
    3. 'Q' → logprob: -4.181239604949951
    4. 's' → logprob: -4.431239604949951
    5. 'l' → logprob: -5.431239604949951
    6. 'c' → logprob: -5.806239604949951
    7. 'def' → logprob: -6.556239604949951
    8. 'q' → logprob: -7.806239604949951
    9. 'p' → logprob: -8.306239128112793
    10. 'n' → logprob: -9.181239128112793

Token 2861: ' c' (ID: 274)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.7870442867279053
    2. 'l' → logprob: -1.1620442867279053
    3. 'c' (adapté à ' c') → logprob: -1.6620442867279053
    4. 'q' → logprob: -3.6620442867279053
    5. 's' → logprob: -5.287044525146484
    6. 'cx' → logprob: -5.412044525146484
    7. 'x' → logprob: -6.412044525146484
    8. '   ' → logprob: -6.912044525146484
    9. 'r' → logprob: -7.037044525146484
    10. 'p' → logprob: -7.787044525146484

Token 2862: ' =' (ID: 314)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.05373207479715347
    2. ' =' → logprob: -3.67873215675354
    3. 'x' → logprob: -4.053731918334961
    4. '1' → logprob: -5.803731918334961
    5. 'c' → logprob: -6.178731918334961
    6. '=' → logprob: -6.428731918334961
    7. '   ' → logprob: -6.928731918334961
    8. 'r' → logprob: -7.178731918334961
    9. 's' → logprob: -7.553731918334961
    10. ' p' → logprob: -8.678731918334961

Token 2863: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -2.4391956685576588e-05
    2. 'Point' → logprob: -11.000024795532227
    3. ' Circle' → logprob: -11.875024795532227
    4. 'c' → logprob: -14.875024795532227
    5. '.Circle' → logprob: -15.625024795532227
    6. '_circle' → logprob: -16.750024795532227
    7. 'Circ' → logprob: -17.250024795532227
    8. 'circle' → logprob: -17.500024795532227
    9. 'C' → logprob: -18.625024795532227
    10. 'Cir' → logprob: -18.750024795532227

Token 2864: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0004341261519584805
    2. 'Point' → logprob: -7.750433921813965
    3. '(C' → logprob: -13.750433921813965
    4. '	Point' → logprob: -14.125433921813965
    5. ' Point' → logprob: -14.750433921813965
    6. '<Point' → logprob: -14.875433921813965
    7. '(
' → logprob: -15.250433921813965
    8. '=' → logprob: -15.625433921813965
    9. '   ' → logprob: -15.875433921813965
    10. ' =' → logprob: -16.12543487548828

Token 2865: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -2.8087270038668066e-05
    2. 'cx' → logprob: -10.500027656555176
    3. '.cx' → logprob: -14.875027656555176
    4. 'Point' → logprob: -16.750028610229492
    5. ')' → logprob: -18.500028610229492
    6. '```' → logprob: -18.750028610229492
    7. '
' → logprob: -19.000028610229492
    8. '#' → logprob: -19.125028610229492
    9. ' cx' → logprob: -19.125028610229492
    10. '(
' → logprob: -19.375028610229492

Token 2866: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006572735728695989
    2. 'cy' → logprob: -7.375657081604004
    3. ' ,' → logprob: -10.750657081604004
    4. ',c' → logprob: -12.625657081604004
    5. '(c' → logprob: -13.250657081604004
    6. ',
' → logprob: -13.625657081604004
    7. '.cy' → logprob: -14.000657081604004
    8. 'c' → logprob: -14.500657081604004
    9. ' cy' → logprob: -14.750657081604004
    10. '(cx' → logprob: -15.125657081604004

Token 2867: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -1.2664456789934775e-06
    2. ' cy' → logprob: -13.875000953674316
    3. 'cyj' → logprob: -15.625000953674316
    4. 'py' → logprob: -17.250001907348633
    5. 'cych' → logprob: -17.375001907348633
    6. '.cy' → logprob: -17.625001907348633
    7. 'c' → logprob: -17.750001907348633
    8. 'cycl' → logprob: -19.375001907348633
    9. ' ' → logprob: -19.500001907348633
    10. '   ' → logprob: -19.500001907348633

Token 2868: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00030578780570067465
    2. ',' → logprob: -8.375306129455566
    3. '   ' → logprob: -9.875306129455566
    4. 'def' → logprob: -11.000306129455566
    5. '#' → logprob: -13.500306129455566
    6. ' ),' → logprob: -13.625306129455566
    7. '()),' → logprob: -14.250306129455566
    8. '(),' → logprob: -14.250306129455566
    9. 'c' → logprob: -14.375306129455566
    10. ',),' → logprob: -14.625306129455566

Token 2869: ' cr' (ID: 1769)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -4.5491004129871726e-05
    2. ' cr' → logprob: -10.000045776367188
    3. '	cr' → logprob: -18.125045776367188
    4. '(cr' → logprob: -19.250045776367188
    5. '   ' → logprob: -21.000045776367188
    6. 'c' → logprob: -21.125045776367188
    7. 'r' → logprob: -22.250045776367188
    8. 'cre' → logprob: -22.500045776367188
    9. 'Cr' → logprob: -23.250045776367188
    10. 'cl' → logprob: -23.250045776367188

Token 2870: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.49838176369667053
    2. ')' → logprob: -0.9983817338943481
    3. '   ' → logprob: -3.7483818531036377
    4. 'def' → logprob: -7.873381614685059
    5. ')
' → logprob: -10.248381614685059
    6. ' )
' → logprob: -11.623381614685059
    7. ')

' → logprob: -11.873381614685059
    8. ' def' → logprob: -11.873381614685059
    9. ' )' → logprob: -12.498381614685059
    10. ' ' → logprob: -12.498381614685059

Token 2871: '   ' (ID: 271)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2596238851547241
    2. '   ' → logprob: -1.6346238851547241
    3. 's' → logprob: -4.634624004364014
    4. 'for' → logprob: -4.884624004364014
    5. 'p' → logprob: -5.009624004364014
    6. 'r' → logprob: -5.509624004364014
    7. 'def' → logprob: -6.759624004364014
    8. 'q' → logprob: -7.009624004364014
    9. ' Q' → logprob: -7.009624004364014
    10. 'l' → logprob: -7.759624004364014

Token 2872: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' (adapté à ' Q') → logprob: -0.0014926036819815636
    2. 'q' → logprob: -6.751492500305176
    3. 'for' → logprob: -8.501492500305176
    4. ' Q' → logprob: -10.501492500305176
    5. 'r' → logprob: -10.751492500305176
    6. 's' → logprob: -10.876492500305176
    7. '   ' → logprob: -11.001492500305176
    8. 'def' → logprob: -12.126492500305176
    9. 'x' → logprob: -12.126492500305176
    10. 'Qs' → logprob: -12.501492500305176

Token 2873: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4779647886753082
    2. '=' → logprob: -0.9779647588729858
    3. '   ' → logprob: -5.602964878082275
    4. ':' → logprob: -9.852964401245117
    5. '=
' → logprob: -9.977964401245117
    6. 'def' → logprob: -10.477964401245117
    7. 'for' → logprob: -11.102964401245117
    8. '    ' → logprob: -11.852964401245117
    9. ' =
' → logprob: -11.977964401245117
    10. '=int' → logprob: -12.352964401245117

Token 2874: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.7610454708337784e-05
    2. ' int' → logprob: -10.500027656555176
    3. '(int' → logprob: -18.62502670288086
    4. '[int' → logprob: -19.62502670288086
    5. '=int' → logprob: -20.00002670288086
    6. '   ' → logprob: -21.25002670288086
    7. '
' → logprob: -22.62502670288086
    8. '	int' → logprob: -22.87502670288086
    9. '<int' → logprob: -23.37502670288086
    10. ':int' → logprob: -23.50002670288086

Token 2875: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20160718262195587
    2. 'input' → logprob: -1.7016072273254395
    3. '()
' → logprob: -9.951606750488281
    4. '()' → logprob: -10.076606750488281
    5. '(
' → logprob: -10.076606750488281
    6. '(' → logprob: -10.826606750488281
    7. '=input' → logprob: -11.201606750488281
    8. ' input' → logprob: -11.701606750488281
    9. '(int' → logprob: -12.326606750488281
    10. 'int' → logprob: -12.826606750488281

Token 2876: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.1043967753648758
    2. '()' → logprob: -2.8543968200683594
    3. '()
' → logprob: -3.3543968200683594
    4. '())' → logprob: -5.104396820068359
    5. ')
' → logprob: -7.854396820068359
    6. '())
' → logprob: -9.35439682006836
    7. '   ' → logprob: -10.35439682006836
    8. ')' → logprob: -10.97939682006836
    9. '()
' → logprob: -11.35439682006836
    10. '();' → logprob: -13.85439682006836

Token 2877: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.650518920039758e-06
    2. 'for' → logprob: -12.625003814697266
    3. 'Query' → logprob: -15.125003814697266
    4. '```' → logprob: -17.750003814697266
    5. ' for' → logprob: -17.875003814697266
    6. '       ' → logprob: -18.125003814697266
    7. '
' → logprob: -18.500003814697266
    8. '    
' → logprob: -19.625003814697266
    9. '	Query' → logprob: -19.750003814697266
    10. 'Queries' → logprob: -19.875003814697266

Token 2878: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' (adapté à ' Query') → logprob: -0.2782600522041321
    2. 'for' → logprob: -1.5282599925994873
    3. '   ' → logprob: -3.6532599925994873
    4. 'query' → logprob: -10.153260231018066
    5. 'queries' → logprob: -11.028260231018066
    6. ' Query' → logprob: -11.903260231018066
    7. ' for' → logprob: -11.903260231018066
    8. 'Queries' → logprob: -12.153260231018066
    9. '	Query' → logprob: -12.903260231018066
    10. ' queries' → logprob: -14.403260231018066

Token 2879: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7210773825645447
    2. '=' → logprob: -0.8460773825645447
    3. '   ' → logprob: -2.4710774421691895
    4. '=
' → logprob: -9.596076965332031
    5. 'for' → logprob: -9.971076965332031
    6. ' for' → logprob: -11.346076965332031
    7. '()' → logprob: -11.346076965332031
    8. '=[]' → logprob: -11.971076965332031
    9. 'def' → logprob: -12.096076965332031
    10. ':' → logprob: -12.096076965332031

Token 2880: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.03203139826655388
    2. '[' → logprob: -3.907031297683716
    3. '[int' → logprob: -5.157031536102295
    4. '[List' → logprob: -5.657031536102295
    5. '   ' → logprob: -6.657031536102295
    6. ' [' → logprob: -7.532031536102295
    7. '[class' → logprob: -9.532031059265137
    8. '[line' → logprob: -9.532031059265137
    9. '[input' → logprob: -9.782031059265137
    10. '[l' → logprob: -9.907031059265137

Token 2881: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -8.180258191714529e-06
    2. '[list' → logprob: -11.750008583068848
    3. ' list' → logprob: -16.25000762939453
    4. '(list' → logprob: -16.75000762939453
    5. 'tuple' → logprob: -17.50000762939453
    6. '
' → logprob: -18.00000762939453
    7. '[' → logprob: -18.50000762939453
    8. 'map' → logprob: -19.50000762939453
    9. '   ' → logprob: -20.25000762939453
    10. '	list' → logprob: -20.50000762939453

Token 2882: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.19786930084228516
    2. '(map' → logprob: -2.197869300842285
    3. 'def' → logprob: -3.697869300842285
    4. 'tuple' → logprob: -4.072869300842285
    5. 'int' → logprob: -4.697869300842285
    6. 'list' → logprob: -4.947869300842285
    7. 'lambda' → logprob: -5.072869300842285
    8. '(lambda' → logprob: -6.197869300842285
    9. 'for' → logprob: -6.947869300842285
    10. '(list' → logprob: -7.697869300842285

Token 2883: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005279653239995241
    2. '(int' → logprob: -5.255279541015625
    3. '[int' → logprob: -10.130279541015625
    4. 'def' → logprob: -13.130279541015625
    5. '=int' → logprob: -13.505279541015625
    6. 'lambda' → logprob: -14.505279541015625
    7. '```' → logprob: -14.505279541015625
    8. ' int' → logprob: -14.880279541015625
    9. '<int' → logprob: -15.255279541015625
    10. ']int' → logprob: -15.380279541015625

Token 2884: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.47190412878990173
    2. 'int' → logprob: -1.4719041585922241
    3. ',int' → logprob: -3.2219040393829346
    4. ',' → logprob: -3.3469040393829346
    5. '=int' → logprob: -3.3469040393829346
    6. '[int' → logprob: -3.4719040393829346
    7. '<int' → logprob: -5.971904277801514
    8. 'for' → logprob: -7.346904277801514
    9. ':int' → logprob: -8.346903800964355
    10. 'input' → logprob: -8.596903800964355

Token 2885: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015550976386293769
    2. 'int' → logprob: -6.5015549659729
    3. ' input' → logprob: -9.876555442810059
    4. '(input' → logprob: -14.376555442810059
    5. 'lambda' → logprob: -15.251555442810059
    6. '
' → logprob: -15.751555442810059
    7. '(int' → logprob: -16.376554489135742
    8. '<input' → logprob: -16.626554489135742
    9. '=input' → logprob: -17.376554489135742
    10. '_input' → logprob: -17.751554489135742

Token 2886: '().' (ID: 1454)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.05286813899874687
    2. '=lambda' → logprob: -4.177868366241455
    3. '()' → logprob: -4.677868366241455
    4. 'spl' → logprob: -5.177868366241455
    5. '=int' → logprob: -5.427868366241455
    6. 'lambda' → logprob: -5.552868366241455
    7. '())' → logprob: -6.177868366241455
    8. '=' → logprob: -6.677868366241455
    9. '(),' → logprob: -6.802868366241455
    10. 'int' → logprob: -7.177868366241455

Token 2887: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.1080467781284824e-05
    2. 'list' → logprob: -11.375041007995605
    3. 'spl' → logprob: -11.625041007995605
    4. 'range' → logprob: -12.000041007995605
    5. 'int' → logprob: -12.125041007995605
    6. 'sort' → logprob: -13.875041007995605
    7. 'copy' → logprob: -14.375041007995605
    8. 'sl' → logprob: -14.625041007995605
    9. 'skip' → logprob: -14.625041007995605
    10. '
' → logprob: -14.625041007995605

Token 2888: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0002668192028068006
    2. '))' → logprob: -8.375267028808594
    3. '()' → logprob: -10.750267028808594
    4. '()))
' → logprob: -11.500267028808594
    5. '()[' → logprob: -13.000267028808594
    6. '()
' → logprob: -14.125267028808594
    7. '())).' → logprob: -15.000267028808594
    8. '   ' → logprob: -15.375267028808594
    9. '())' → logprob: -15.375267028808594
    10. '(' → logprob: -16.000267028808594

Token 2889: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.428272008895874
    2. 'for' → logprob: -1.428272008895874
    3. '()' → logprob: -2.428272008895874
    4. '   ' → logprob: -4.053272247314453
    5. ')' → logprob: -6.053272247314453
    6. 'def' → logprob: -7.928272247314453
    7. '	for' → logprob: -8.553272247314453
    8. '())' → logprob: -9.553272247314453
    9. '#' → logprob: -10.053272247314453
    10. ' ' → logprob: -10.678272247314453

Token 2890: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005145877134054899
    2. 'in' → logprob: -5.755146026611328
    3. ' in' → logprob: -6.255146026611328
    4. ' _' → logprob: -10.255146026611328
    5. '_in' → logprob: -12.130146026611328
    6. 'range' → logprob: -13.130146026611328
    7. '_range' → logprob: -13.505146026611328
    8. 'def' → logprob: -15.005146026611328
    9. ' range' → logprob: -15.380146026611328
    10. '_i' → logprob: -15.505146026611328

Token 2891: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4562065899372101
    2. 'in' → logprob: -1.7062065601348877
    3. 'range' → logprob: -1.7062065601348877
    4. '_range' → logprob: -5.956206798553467
    5. ' in' → logprob: -8.081206321716309
    6. ' range' → logprob: -8.206206321716309
    7. 'Q' → logprob: -11.331206321716309
    8. '_in' → logprob: -12.331206321716309
    9. 'for' → logprob: -12.581206321716309
    10. '(range' → logprob: -12.581206321716309

Token 2892: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012801569886505604
    2. ' range' → logprob: -4.887801647186279
    3. '_range' → logprob: -6.012801647186279
    4. '_' → logprob: -6.137801647186279
    5. 'in' → logprob: -7.637801647186279
    6. ' in' → logprob: -10.262801170349121
    7. '(range' → logprob: -10.512801170349121
    8. '
' → logprob: -11.387801170349121
    9. 'Q' → logprob: -11.512801170349121
    10. '_Q' → logprob: -12.512801170349121

Token 2893: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.048601340502500534
    2. 'Q' → logprob: -3.0486013889312744
    3. 'range' → logprob: -11.298601150512695
    4. '_Q' → logprob: -14.548601150512695
    5. 'def' → logprob: -14.923601150512695
    6. '(' → logprob: -14.923601150512695
    7. '	Q' → logprob: -16.423601150512695
    8. ' Q' → logprob: -16.548601150512695
    9. '
' → logprob: -16.548601150512695
    10. '   ' → logprob: -16.798601150512695

Token 2894: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26428741216659546
    2. ']
' → logprob: -1.5142874717712402
    3. ')]' → logprob: -4.88928747177124
    4. '   ' → logprob: -6.13928747177124
    5. ')]
' → logprob: -6.88928747177124
    6. ']:' → logprob: -7.26428747177124
    7. ']:
' → logprob: -8.139286994934082
    8. ']
' → logprob: -8.139286994934082
    9. 'def' → logprob: -9.139286994934082
    10. '()]
' → logprob: -9.514286994934082

Token 2895: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.380904672667384e-05
    2. 'def' → logprob: -10.500033378601074
    3. 'for' → logprob: -12.125033378601074
    4. ' for' → logprob: -14.375033378601074
    5. '       ' → logprob: -16.12503433227539
    6. '```' → logprob: -17.62503433227539
    7. '
' → logprob: -17.75003433227539
    8. '	for' → logprob: -18.12503433227539
    9. '#' → logprob: -18.62503433227539
    10. ' ' → logprob: -19.12503433227539

Token 2896: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006801814306527376
    2. '   ' → logprob: -5.006801605224609
    3. ' for' → logprob: -9.50680160522461
    4. 'def' → logprob: -11.63180160522461
    5. '	for' → logprob: -13.25680160522461
    6. '       ' → logprob: -14.00680160522461
    7. '```' → logprob: -15.38180160522461
    8. 'For' → logprob: -15.63180160522461
    9. ' ' → logprob: -16.88180160522461
    10. '#' → logprob: -17.13180160522461

Token 2897: ' x' (ID: 1215)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.026116125285625458
    2. 'p' → logprob: -4.401115894317627
    3. ' px' → logprob: -5.276115894317627
    4. 'qx' → logprob: -5.526115894317627
    5. 'x' → logprob: -5.776115894317627
    6. 'cx' → logprob: -8.151116371154785
    7. 'q' → logprob: -8.276116371154785
    8. 'sx' → logprob: -8.776116371154785
    9. ' p' → logprob: -8.901116371154785
    10. 'py' → logprob: -9.151116371154785

Token 2898: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0066566383466124535
    2. 'y' → logprob: -5.631656646728516
    3. ',y' → logprob: -5.881656646728516
    4. '_,' → logprob: -9.006656646728516
    5. ' ,' → logprob: -9.631656646728516
    6. 'p' → logprob: -10.631656646728516
    7. ',p' → logprob: -10.756656646728516
    8. ' in' → logprob: -11.506656646728516
    9. 'x' → logprob: -12.381656646728516
    10. 'in' → logprob: -12.506656646728516

Token 2899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001232730457559228
    2. ',y' → logprob: -7.126232624053955
    3. ',p' → logprob: -9.251233100891113
    4. 'y' → logprob: -9.251233100891113
    5. 'x' → logprob: -9.376233100891113
    6. ' ,' → logprob: -9.751233100891113
    7. '1' → logprob: -10.376233100891113
    8. '_,' → logprob: -10.876233100891113
    9. ' in' → logprob: -11.001233100891113
    10. ',x' → logprob: -11.251233100891113

Token 2900: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00014096579980105162
    2. ' y' → logprob: -8.875141143798828
    3. 'x' → logprob: -13.875141143798828
    4. '	y' → logprob: -16.375141143798828
    5. '   ' → logprob: -16.875141143798828
    6. ' ' → logprob: -18.500141143798828
    7. '    ' → logprob: -19.875141143798828
    8. '  ' → logprob: -20.000141143798828
    9. ''y' → logprob: -20.750141143798828
    10. ',y' → logprob: -20.750141143798828

Token 2901: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5822400857578032e-05
    2. ',' → logprob: -11.125025749206543
    3. '0' → logprob: -11.750025749206543
    4. '2' → logprob: -13.250025749206543
    5. '```' → logprob: -14.375025749206543
    6. '
' → logprob: -15.625025749206543
    7. 's' → logprob: -15.750025749206543
    8. 'a' → logprob: -16.12502670288086
    9. '_,' → logprob: -16.12502670288086
    10. '   ' → logprob: -16.62502670288086

Token 2902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021271906734909862
    2. ',x' → logprob: -9.125212669372559
    3. ' ,' → logprob: -9.250212669372559
    4. 'x' → logprob: -13.000212669372559
    5. '_,' → logprob: -13.500212669372559
    6. '   ' → logprob: -13.625212669372559
    7. ',p' → logprob: -13.875212669372559
    8. '1' → logprob: -14.375212669372559
    9. '       ' → logprob: -14.875212669372559
    10. ',y' → logprob: -15.000212669372559

Token 2903: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.026318764314055443
    2. ' x' → logprob: -3.6513187885284424
    3. '   ' → logprob: -11.151318550109863
    4. ' ' → logprob: -13.651318550109863
    5. '	x' → logprob: -13.776318550109863
    6. '  ' → logprob: -14.151318550109863
    7. '    ' → logprob: -14.651318550109863
    8. '
' → logprob: -15.276318550109863
    9. ',' → logprob: -16.27631950378418
    10. '
' → logprob: -16.77631950378418

Token 2904: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10022608190774918
    2. '1' → logprob: -2.3502261638641357
    3. '0' → logprob: -11.100226402282715
    4. ',' → logprob: -12.975226402282715
    5. '
' → logprob: -13.850226402282715
    6. '```' → logprob: -14.475226402282715
    7. '3' → logprob: -15.225226402282715
    8. ' ' → logprob: -16.8502254486084
    9. 'y' → logprob: -17.2252254486084
    10. '_,' → logprob: -17.4752254486084

Token 2905: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001991298486245796
    2. 'in' → logprob: -9.625199317932129
    3. ' ,' → logprob: -10.125199317932129
    4. '1' → logprob: -10.250199317932129
    5. ',y' → logprob: -10.875199317932129
    6. ',x' → logprob: -11.125199317932129
    7. '_,' → logprob: -11.625199317932129
    8. ' in' → logprob: -11.750199317932129
    9. 'x' → logprob: -13.250199317932129
    10. 'y' → logprob: -13.625199317932129

Token 2906: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.027965860441327095
    2. ' y' → logprob: -3.652965784072876
    3. 'x' → logprob: -6.402966022491455
    4. ' x' → logprob: -12.027965545654297
    5. '   ' → logprob: -14.652965545654297
    6. ' ' → logprob: -14.777965545654297
    7. ',' → logprob: -15.777965545654297
    8. '
' → logprob: -15.777965545654297
    9. '  ' → logprob: -16.027965545654297
    10. '	y' → logprob: -16.277965545654297

Token 2907: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.44706009957008e-05
    2. ',' → logprob: -9.75008487701416
    3. 'y' → logprob: -10.87508487701416
    4. '1' → logprob: -12.37508487701416
    5. ' ' → logprob: -13.25008487701416
    6. '   ' → logprob: -14.62508487701416
    7. ' y' → logprob: -15.12508487701416
    8. ',y' → logprob: -16.125083923339844
    9. '```' → logprob: -16.250083923339844
    10. '
' → logprob: -16.250083923339844

Token 2908: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.24895980954170227
    2. '       ' → logprob: -1.9989597797393799
    3. ',' → logprob: -3.12395977973938
    4. ':
' → logprob: -3.99895977973938
    5. ':' → logprob: -4.248960018157959
    6. 'in' → logprob: -5.498960018157959
    7. '   ' → logprob: -5.623960018157959
    8. '):
' → logprob: -8.2489595413208
    9. '[' → logprob: -10.4989595413208
    10. '():
' → logprob: -10.6239595413208

Token 2909: ' Query' (ID: 18574)
  Prédit: 'Query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Query' → logprob: -0.03036022186279297
    2. ' Query' → logprob: -3.530360221862793
    3. '[' → logprob: -8.155360221862793
    4. 'Input' → logprob: -9.655360221862793
    5. 'input' → logprob: -9.905360221862793
    6. ' input' → logprob: -10.030360221862793
    7. ' range' → logprob: -10.655360221862793
    8. 'range' → logprob: -10.655360221862793
    9. '(Query' → logprob: -10.780360221862793
    10. '	Query' → logprob: -10.780360221862793

Token 2910: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06733975559473038
    2. ':' → logprob: -3.3173396587371826
    3. ':
' → logprob: -3.6923396587371826
    4. ',' → logprob: -5.817339897155762
    5. '):
' → logprob: -7.692339897155762
    6. '<|end|>' → logprob: -8.067339897155762
    7. '():
' → logprob: -9.567339897155762
    8. '<|end|>' → logprob: -10.567339897155762
    9. '   ' → logprob: -10.692339897155762
    10. '>' → logprob: -11.317339897155762

Token 2911: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000994464149698615
    2. 's' → logprob: -7.250994682312012
    3. ' s' → logprob: -8.250994682312012
    4. '   ' → logprob: -10.875994682312012
    5. '>' → logprob: -13.750994682312012
    6. '(s' → logprob: -14.625994682312012
    7. ',' → logprob: -14.625994682312012
    8. '      ' → logprob: -14.875994682312012
    9. '     ' → logprob: -15.000994682312012
    10. '	' → logprob: -15.125994682312012

Token 2912: ' Points' (ID: 38086)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018580298870801926
    2. '       ' → logprob: -4.518580436706543
    3. ' s' → logprob: -4.893580436706543
    4. '   ' → logprob: -12.018580436706543
    5. '	s' → logprob: -13.393580436706543
    6. 'segment' → logprob: -14.393580436706543
    7. '```' → logprob: -15.018580436706543
    8. 'l' → logprob: -15.018580436706543
    9. 'line' → logprob: -15.643580436706543
    10. 'seg' → logprob: -15.893580436706543

Token 2913: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03386548534035683
    2. '=' → logprob: -3.408865451812744
    3. 's' → logprob: -9.033865928649902
    4. '=[' → logprob: -10.408865928649902
    5. '1' → logprob: -10.783865928649902
    6. 'a' → logprob: -11.408865928649902
    7. '   ' → logprob: -11.533865928649902
    8. '[' → logprob: -11.908865928649902
    9. ' =[' → logprob: -12.158865928649902
    10. '_s' → logprob: -13.158865928649902

Token 2914: ' cross' (ID: 8088)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003210422000847757
    2. ' [' → logprob: -9.250321388244629
    3. 'Segment' → logprob: -9.250321388244629
    4. '[
' → logprob: -9.375321388244629
    5. '[c' → logprob: -11.250321388244629
    6. '   ' → logprob: -11.375321388244629
    7. 'Point' → logprob: -11.375321388244629
    8. '(Point' → logprob: -13.500321388244629
    9. '[]
' → logprob: -13.750321388244629
    10. '       ' → logprob: -13.875321388244629

Token 2915: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0005027544684708118
    2. 'points' → logprob: -7.625502586364746
    3. 'sc' → logprob: -11.875502586364746
    4. '[' → logprob: -13.750502586364746
    5. '[
' → logprob: -13.875502586364746
    6. 'line' → logprob: -13.875502586364746
    7. '```' → logprob: -13.875502586364746
    8. '   ' → logprob: -14.625502586364746
    9. '[]' → logprob: -14.750502586364746
    10. '
' → logprob: -14.750502586364746

Token 2916: '_l' (ID: 1478)
  Prédit: '_sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sc' → logprob: -0.0004845346265938133
    2. '_ss' → logprob: -7.750484466552734
    3. 'sc' → logprob: -11.000484466552734
    4. '_ls' → logprob: -11.125484466552734
    5. '_l' → logprob: -11.375484466552734
    6. '_cc' → logprob: -12.000484466552734
    7. '_cs' → logprob: -13.375484466552734
    8. '_ll' → logprob: -13.625484466552734
    9. '_sl' → logprob: -14.375484466552734
    10. 'ss' → logprob: -15.375484466552734

Token 2917: 'c' (ID: 66)
  Prédit: '(Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Line' → logprob: -0.255977600812912
    2. 'c' → logprob: -2.0059776306152344
    3. 'Line' → logprob: -2.7559776306152344
    4. 'l' → logprob: -4.005977630615234
    5. 'ine' → logprob: -4.880977630615234
    6. 'ist' → logprob: -6.755977630615234
    7. 'cx' → logprob: -8.255977630615234
    8. '(Point' → logprob: -9.005977630615234
    9. '(cx' → logprob: -9.505977630615234
    10. ' Line' → logprob: -9.505977630615234

Token 2918: '(Line' (ID: 170362)
  Prédit: '(Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Line' → logprob: -0.00011522514978423715
    2. 'Line' → logprob: -9.250115394592285
    3. '(L' → logprob: -11.500115394592285
    4. '(' → logprob: -12.250115394592285
    5. '(
' → logprob: -14.125115394592285
    6. '(Point' → logprob: -14.250115394592285
    7. '(C' → logprob: -14.625115394592285
    8. '(line' → logprob: -15.000115394592285
    9. '((' → logprob: -15.000115394592285
    10. 'def' → logprob: -15.250115394592285

Token 2919: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.0019297054968774319
    2. 'Point' → logprob: -6.251929759979248
    3. '(Line' → logprob: -13.87692928314209
    4. '	Point' → logprob: -16.126930236816406
    5. ' Point' → logprob: -16.501930236816406
    6. '<Point' → logprob: -17.126930236816406
    7. '(' → logprob: -18.626930236816406
    8. '.Point' → logprob: -18.876930236816406
    9. '_Point' → logprob: -19.126930236816406
    10. '(
' → logprob: -19.376930236816406

Token 2920: '(x' (ID: 4061)
  Prédit: '(Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.16090038418769836
    2. '(x' → logprob: -1.910900354385376
    3. 'Point' → logprob: -7.410900592803955
    4. 'x' → logprob: -10.035900115966797
    5. '((' → logprob: -11.285900115966797
    6. '(' → logprob: -12.660900115966797
    7. '(Line' → logprob: -13.035900115966797
    8. ')' → logprob: -13.285900115966797
    9. '	Point' → logprob: -13.660900115966797
    10. '#' → logprob: -13.910900115966797

Token 2921: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007521443068981171
    2. '(x' → logprob: -5.007521629333496
    3. 'x' → logprob: -7.132521629333496
    4. '(' → logprob: -12.882521629333496
    5. ',x' → logprob: -14.757521629333496
    6. '[x' → logprob: -14.882521629333496
    7. 'int' → logprob: -15.007521629333496
    8. '#' → logprob: -15.132521629333496
    9. 'y' → logprob: -15.132521629333496
    10. 'Let's' → logprob: -15.257521629333496

Token 2922: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02706335298717022
    2. ',y' → logprob: -3.9020633697509766
    3. 'y' → logprob: -5.277063369750977
    4. '1' → logprob: -7.402063369750977
    5. '(' → logprob: -7.652063369750977
    6. '(y' → logprob: -8.277063369750977
    7. ' ,' → logprob: -10.777063369750977
    8. ' y' → logprob: -11.402063369750977
    9. '),' → logprob: -11.902063369750977
    10. '(x' → logprob: -12.902063369750977

Token 2923: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00993409939110279
    2. 'Point' → logprob: -4.634933948516846
    3. ' y' → logprob: -8.759934425354004
    4. '(Point' → logprob: -11.884934425354004
    5. 'Y' → logprob: -12.009934425354004
    6. 'x' → logprob: -13.259934425354004
    7. '	Point' → logprob: -13.259934425354004
    8. ' Point' → logprob: -13.884934425354004
    9. '(y' → logprob: -14.134934425354004
    10. '   ' → logprob: -14.509934425354004

Token 2924: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006847742944955826
    2. '1' → logprob: -5.006847858428955
    3. ' y' → logprob: -9.381847381591797
    4. ',y' → logprob: -10.881847381591797
    5. ',' → logprob: -11.381847381591797
    6. '   ' → logprob: -12.381847381591797
    7. '2' → logprob: -12.881847381591797
    8. '```' → logprob: -13.006847381591797
    9. ')' → logprob: -13.631847381591797
    10. 'Point' → logprob: -13.756847381591797

Token 2925: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0017432469176128507
    2. ',' → logprob: -6.376743316650391
    3. '   ' → logprob: -10.50174331665039
    4. ' ),' → logprob: -12.75174331665039
    5. '(x' → logprob: -12.87674331665039
    6. '       ' → logprob: -13.50174331665039
    7. ')' → logprob: -14.00174331665039
    8. ' ' → logprob: -14.50174331665039
    9. '```' → logprob: -14.50174331665039
    10. ')),' → logprob: -14.62674331665039

Token 2926: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0040807779878377914
    2. ' Point' → logprob: -5.504080772399902
    3. '(Point' → logprob: -13.004080772399902
    4. '	Point' → logprob: -17.00408172607422
    5. '<Point' → logprob: -17.50408172607422
    6. '_Point' → logprob: -17.62908172607422
    7. 'Line' → logprob: -18.25408172607422
    8. '.Point' → logprob: -18.75408172607422
    9. '_point' → logprob: -19.50408172607422
    10. 'point' → logprob: -21.50408172607422

Token 2927: '(x' (ID: 4061)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0009139667963609099
    2. '(Point' → logprob: -7.000914096832275
    3. ' Point' → logprob: -13.000913619995117
    4. '	Point' → logprob: -16.750913619995117
    5. '_Point' → logprob: -17.375913619995117
    6. '<Point' → logprob: -17.500913619995117
    7. '(x' → logprob: -17.625913619995117
    8. '.Point' → logprob: -17.875913619995117
    9. ')' → logprob: -18.250913619995117
    10. '_point' → logprob: -18.875913619995117

Token 2928: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.500000953674316
    3. 'x' → logprob: -15.125000953674316
    4. '
' → logprob: -16.750001907348633
    5. '_' → logprob: -16.812501907348633
    6. '₂' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.062501907348633
    8. '```' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '+' → logprob: -18.187501907348633

Token 2929: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40572330355644226
    2. '(x' → logprob: -1.1557233333587646
    3. '1' → logprob: -4.7807230949401855
    4. 'x' → logprob: -5.1557230949401855
    5. ',x' → logprob: -6.0307230949401855
    6. '(' → logprob: -6.4057230949401855
    7. '```' → logprob: -8.405723571777344
    8. '   ' → logprob: -9.905723571777344
    9. '),' → logprob: -10.030723571777344
    10. '2' → logprob: -10.155723571777344

Token 2930: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0921942703134846e-05
    2. 'x' → logprob: -12.00001049041748
    3. '1' → logprob: -12.50001049041748
    4. '   ' → logprob: -14.75001049041748
    5. '(x' → logprob: -15.37501049041748
    6. ' ' → logprob: -15.37501049041748
    7. '```' → logprob: -16.375011444091797
    8. 'y' → logprob: -17.500011444091797
    9. '(' → logprob: -17.625011444091797
    10. '3' → logprob: -18.500011444091797

Token 2931: ')),' (ID: 12098)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.035662077367305756
    2. '))' → logprob: -3.4106621742248535
    3. ')),' → logprob: -6.7856621742248535
    4. ')))' → logprob: -7.5356621742248535
    5. '       ' → logprob: -8.910661697387695
    6. '))
' → logprob: -9.535661697387695
    7. ')' → logprob: -10.285661697387695
    8. ' ),' → logprob: -10.535661697387695
    9. '[' → logprob: -11.035661697387695
    10. '   ' → logprob: -11.160661697387695

Token 2932: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003373694489710033
    2. ' c' → logprob: -8.000337600708008
    3. 'Circle' → logprob: -14.000337600708008
    4. '   ' → logprob: -14.625337600708008
    5. '	c' → logprob: -15.125337600708008
    6. '       ' → logprob: -15.750337600708008
    7. ')c' → logprob: -17.000337600708008
    8. ')' → logprob: -17.250337600708008
    9. 'circle' → logprob: -17.375337600708008
    10. '
' → logprob: -18.000337600708008

Token 2933: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3492087721824646
    2. ')
' → logprob: -1.4742088317871094
    3. '       ' → logprob: -2.7242088317871094
    4. '[' → logprob: -9.47420883178711
    5. '   ' → logprob: -10.22420883178711
    6. ')
' → logprob: -10.59920883178711
    7. '           ' → logprob: -10.97420883178711
    8. '))' → logprob: -11.72420883178711
    9. ' )' → logprob: -12.59920883178711
    10. ');' → logprob: -12.72420883178711

Token 2934: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.9153885558771435e-06
    2. '   ' → logprob: -12.875005722045898
    3. '	' → logprob: -14.000005722045898
    4. '           ' → logprob: -14.125005722045898
    5. 'def' → logprob: -14.625005722045898
    6. ')' → logprob: -14.875005722045898
    7. 'if' → logprob: -15.500005722045898
    8. 'for' → logprob: -16.5000057220459
    9. '	   ' → logprob: -16.6250057220459
    10. '<|end|>' → logprob: -16.7500057220459

Token 2935: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02184893749654293
    2. 'for' → logprob: -3.8968489170074463
    3. ' for' → logprob: -6.896849155426025
    4. 'print' → logprob: -9.271848678588867
    5. 'filtered' → logprob: -9.896848678588867
    6. '   ' → logprob: -10.021848678588867
    7. 'points' → logprob: -10.646848678588867
    8. '           ' → logprob: -10.771848678588867
    9. 'count' → logprob: -11.021848678588867
    10. 'valid' → logprob: -11.271848678588867

Token 2936: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1626637578010559
    2. 'not' → logprob: -2.537663698196411
    3. 'Points' → logprob: -2.912663698196411
    4. 'all' → logprob: -4.66266393661499
    5. 'any' → logprob: -6.03766393661499
    6. ' len' → logprob: -6.16266393661499
    7. ' not' → logprob: -6.16266393661499
    8. 'is' → logprob: -8.537663459777832
    9. ' Points' → logprob: -8.537663459777832
    10. '(len' → logprob: -9.287663459777832

Token 2937: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0280383548888494e-06
    2. 'Points' → logprob: -14.750000953674316
    3. '(
' → logprob: -15.250000953674316
    4. '(Point' → logprob: -15.875000953674316
    5. '```' → logprob: -16.000001907348633
    6. '((' → logprob: -16.875001907348633
    7. '
' → logprob: -17.125001907348633
    8. ' (' → logprob: -17.125001907348633
    9. '==' → logprob: -17.250001907348633
    10. '(points' → logprob: -17.625001907348633

Token 2938: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -0.07889066636562347
    2. '(' → logprob: -2.578890562057495
    3. ' Points' → logprob: -14.828890800476074
    4. '[' → logprob: -15.828890800476074
    5. '_points' → logprob: -16.328889846801758
    6. 'Point' → logprob: -16.578889846801758
    7. 'points' → logprob: -16.578889846801758
    8. '(Point' → logprob: -16.953889846801758
    9. '(points' → logprob: -17.203889846801758
    10. ')' → logprob: -17.328889846801758

Token 2939: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3192536532878876
    2. ' ==' → logprob: -1.31925368309021
    3. ')' → logprob: -5.694253444671631
    4. '<' → logprob: -7.319253444671631
    5. '>' → logprob: -7.569253444671631
    6. ' <' → logprob: -7.694253444671631
    7. ' !=' → logprob: -8.194253921508789
    8. '!=' → logprob: -8.569253921508789
    9. '>=' → logprob: -9.319253921508789
    10. ')==' → logprob: -9.444253921508789

Token 2940: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0913381353020668
    2. ' ==' → logprob: -2.7163381576538086
    3. '<' → logprob: -4.091338157653809
    4. '>' → logprob: -6.341338157653809
    5. '!=' → logprob: -6.966338157653809
    6. ' <' → logprob: -7.091338157653809
    7. '>=' → logprob: -8.091338157653809
    8. ' !=' → logprob: -8.216338157653809
    9. '<=' → logprob: -8.591338157653809
    10. ' >=' → logprob: -10.341338157653809

Token 2941: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6813714504241943
    2. '0' → logprob: -0.9313714504241943
    3. '1' → logprob: -2.3063714504241943
    4. '   ' → logprob: -8.431371688842773
    5. ' ' → logprob: -8.556371688842773
    6. '```' → logprob: -11.181371688842773
    7. '
' → logprob: -12.431371688842773
    8. '  ' → logprob: -13.181371688842773
    9. '==' → logprob: -13.181371688842773
    10. ')' → logprob: -13.181371688842773

Token 2942: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.35534653067588806
    2. '0' → logprob: -1.7303465604782104
    3. '1' → logprob: -2.105346441268921
    4. ' ' → logprob: -10.8553466796875
    5. '   ' → logprob: -11.8553466796875
    6. '3' → logprob: -12.4803466796875
    7. '```' → logprob: -12.6678466796875
    8. '	' → logprob: -13.4803466796875
    9. '
' → logprob: -13.7303466796875
    10. 'int' → logprob: -14.1678466796875

Token 2943: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10974260419607162
    2. '           ' → logprob: -2.6097426414489746
    3. '==' → logprob: -3.8597426414489746
    4. ' and' → logprob: -5.359742641448975
    5. ':
' → logprob: -6.484742641448975
    6. ' ==' → logprob: -6.609742641448975
    7. '       ' → logprob: -7.484742641448975
    8. '   ' → logprob: -8.234742164611816
    9. 'and' → logprob: -8.234742164611816
    10. '[' → logprob: -8.734742164611816

Token 2944: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002680112374946475
    2. 'print' → logprob: -9.12526798248291
    3. '               ' → logprob: -9.25026798248291
    4. '       ' → logprob: -10.37526798248291
    5. '		' → logprob: -12.00026798248291
    6. '	       ' → logprob: -12.00026798248291
    7. ' print' → logprob: -12.50026798248291
    8. ':' → logprob: -12.87526798248291
    9. '```' → logprob: -12.87526798248291
    10. ' or' → logprob: -13.25026798248291

Token 2945: ' Points' (ID: 38086)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005486076232045889
    2. '           ' → logprob: -5.255486011505127
    3. ' print' → logprob: -8.380486488342285
    4. '       ' → logprob: -10.880486488342285
    5. '   ' → logprob: -12.630486488342285
    6. '	print' → logprob: -14.505486488342285
    7. '               ' → logprob: -16.38048553466797
    8. 'for' → logprob: -16.50548553466797
    9. '```' → logprob: -17.25548553466797
    10. ' ' → logprob: -17.50548553466797

Token 2946: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5940319895744324
    2. '=' → logprob: -0.8440319895744324
    3. ' =' → logprob: -4.594031810760498
    4. '.append' → logprob: -5.094031810760498
    5. 'print' → logprob: -7.719031810760498
    6. '.' → logprob: -8.094032287597656
    7. '.sort' → logprob: -8.594032287597656
    8. ',' → logprob: -9.094032287597656
    9. '.extend' → logprob: -9.344032287597656
    10. '+=' → logprob: -9.594032287597656

Token 2947: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.513339445111342e-05
    2. '(Point' → logprob: -10.375044822692871
    3. 'Points' → logprob: -11.375044822692871
    4. '(c' → logprob: -14.375044822692871
    5. '((' → logprob: -14.625044822692871
    6. '(P' → logprob: -15.125044822692871
    7. '(points' → logprob: -16.000045776367188
    8. ' (' → logprob: -16.250045776367188
    9. 'Point' → logprob: -16.250045776367188
    10. '	' → logprob: -16.375045776367188

Token 2948: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -5.796184723294573e-06
    2. 'Point' → logprob: -12.250005722045898
    3. ' Points' → logprob: -13.875005722045898
    4. '_points' → logprob: -19.5000057220459
    5. '	' → logprob: -19.8750057220459
    6. ')' → logprob: -20.6250057220459
    7. '   ' → logprob: -20.6250057220459
    8. '	Point' → logprob: -20.7500057220459
    9. '0' → logprob: -21.0000057220459
    10. '
' → logprob: -21.0000057220459

Token 2949: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011594036914175376
    2. ')' → logprob: -9.500116348266602
    3. '[-' → logprob: -10.250116348266602
    4. '0' → logprob: -12.250116348266602
    5. '[:' → logprob: -15.625116348266602
    6. '[
' → logprob: -15.750116348266602
    7. '#' → logprob: -15.875116348266602
    8. ')
' → logprob: -16.3751163482666
    9. '.copy' → logprob: -16.3751163482666
    10. '[:]' → logprob: -16.7501163482666

Token 2950: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. '0' → logprob: -10.125040054321289
    3. '])' → logprob: -19.37504005432129
    4. '１' → logprob: -20.00004005432129
    5. ']' → logprob: -20.12504005432129
    6. '
' → logprob: -20.50004005432129
    7. ' ' → logprob: -20.75004005432129
    8. '])
' → logprob: -20.87504005432129
    9. '::-' → logprob: -20.87504005432129
    10. '```' → logprob: -21.50004005432129

Token 2951: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.836499985889532e-05
    2. '())' → logprob: -10.6250581741333
    3. ' )' → logprob: -10.7500581741333
    4. ')
' → logprob: -11.6250581741333
    5. ')return' → logprob: -13.3750581741333
    6. '()' → logprob: -14.6250581741333
    7. '<|end|>' → logprob: -14.8750581741333
    8. '(' → logprob: -15.6250581741333
    9. '	' → logprob: -15.7500581741333
    10. '       ' → logprob: -15.7500581741333

Token 2952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003787184541579336
    2. '```' → logprob: -8.000378608703613
    3. '   ' → logprob: -11.500378608703613
    4. 'else' → logprob: -11.875378608703613
    5. ' for' → logprob: -12.375378608703613
    6. '           ' → logprob: -12.500378608703613
    7. 'elif' → logprob: -12.750378608703613
    8. ')' → logprob: -13.125378608703613
    9. '<|end|>' → logprob: -13.125378608703613
    10. '`' → logprob: -13.250378608703613

Token 2953: ' Points' (ID: 38086)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16449293494224548
    2. 'for' → logprob: -1.9144929647445679
    3. '   ' → logprob: -5.914493083953857
    4. 'if' → logprob: -7.039493083953857
    5. ' for' → logprob: -8.1644926071167
    6. '```' → logprob: -8.6644926071167
    7. '           ' → logprob: -9.6644926071167
    8. 's' → logprob: -9.7894926071167
    9. 'p' → logprob: -10.5394926071167
    10. 'else' → logprob: -11.7894926071167

Token 2954: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0016247143503278494
    2. '.append' → logprob: -7.126624584197998
    3. '=' → logprob: -7.751624584197998
    4. 'sort' → logprob: -8.376625061035156
    5. '[' → logprob: -9.376625061035156
    6. ' =' → logprob: -10.126625061035156
    7. ',' → logprob: -11.251625061035156
    8. '_sorted' → logprob: -12.376625061035156
    9. '.reverse' → logprob: -12.751625061035156
    10. '.extend' → logprob: -12.751625061035156

Token 2955: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.5990980863571167
    2. 'key' → logprob: -0.9740980863571167
    3. '()
' → logprob: -2.7240982055664062
    4. 'def' → logprob: -5.474098205566406
    5. '()' → logprob: -6.349098205566406
    6. '       ' → logprob: -7.724098205566406
    7. '(reverse' → logprob: -7.849098205566406
    8. ' key' → logprob: -8.224098205566406
    9. 'reverse' → logprob: -8.974098205566406
    10. '   ' → logprob: -9.474098205566406

Token 2956: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.005254156421869993
    2. '=' → logprob: -5.25525426864624
    3. 'lambda' → logprob: -11.005253791809082
    4. '=
' → logprob: -12.630253791809082
    5. '(lambda' → logprob: -15.005253791809082
    6. '=_' → logprob: -17.5052547454834
    7. '=None' → logprob: -17.6302547454834
    8. '_=' → logprob: -18.2552547454834
    9. '='' → logprob: -18.5052547454834
    10. ' lambda' → logprob: -18.6302547454834

Token 2957: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.31994330883026123
    2. 'lambda' → logprob: -1.3199433088302612
    3. ' lambda' → logprob: -5.694943428039551
    4. 'point' → logprob: -6.569943428039551
    5. ' p' → logprob: -7.444943428039551
    6. 'x' → logprob: -7.569943428039551
    7. 'pt' → logprob: -7.694943428039551
    8. 'a' → logprob: -8.44494342803955
    9. 'e' → logprob: -10.56994342803955
    10. '(lambda' → logprob: -11.19494342803955

Token 2958: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023555826395750046
    2. ':p' → logprob: -3.7735557556152344
    3. ' :' → logprob: -8.648555755615234
    4. 'p' → logprob: -9.023555755615234
    5. ':
' → logprob: -11.898555755615234
    6. ' p' → logprob: -12.148555755615234
    7. ':(' → logprob: -14.273555755615234
    8. ':[' → logprob: -14.773555755615234
    9. '(p' → logprob: -15.523555755615234
    10. '   ' → logprob: -15.523555755615234

Token 2959: ' p' (ID: 275)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.03882143646478653
    2. 'p' → logprob: -3.4138214588165283
    3. '(abs' → logprob: -5.538821220397949
    4. '(lambda' → logprob: -7.163821220397949
    5. 'abs' → logprob: -8.53882122039795
    6. '(' → logprob: -9.91382122039795
    7. 'lambda' → logprob: -10.03882122039795
    8. '(str' → logprob: -10.16382122039795
    9. ' (' → logprob: -10.28882122039795
    10. '[p' → logprob: -10.66382122039795

Token 2960: '.y' (ID: 4486)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.5378322601318359
    2. 'p' → logprob: -2.037832260131836
    3. '.p' → logprob: -2.037832260131836
    4. ':' → logprob: -3.037832260131836
    5. '.x' → logprob: -3.287832260131836
    6. ':p' → logprob: -3.537832260131836
    7. '(' → logprob: -3.912832260131836
    8. '.abs' → logprob: -4.787832260131836
    9. ' p' → logprob: -5.537832260131836
    10. 'abs' → logprob: -5.912832260131836

Token 2961: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019036511657759547
    2. ')
' → logprob: -6.626903533935547
    3. ',' → logprob: -8.751903533935547
    4. ')#' → logprob: -8.876903533935547
    5. ');' → logprob: -9.501903533935547
    6. ' if' → logprob: -10.126903533935547
    7. ')return' → logprob: -10.251903533935547
    8. '<|end|>' → logprob: -10.376903533935547
    9. '[' → logprob: -10.751903533935547
    10. 'if' → logprob: -10.876903533935547

Token 2962: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00427059642970562
    2. 'for' → logprob: -6.004270553588867
    3. 'if' → logprob: -7.129270553588867
    4. '```' → logprob: -8.004270553588867
    5. ' for' → logprob: -8.379270553588867
    6. ' if' → logprob: -9.379270553588867
    7. ',' → logprob: -9.629270553588867
    8. 'points' → logprob: -9.879270553588867
    9. 'x' → logprob: -10.004270553588867
    10. 'print' → logprob: -10.129270553588867

Token 2963: ' Points' (ID: 38086)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2779536545276642
    2. 'for' → logprob: -2.027953624725342
    3. 'if' → logprob: -2.402953624725342
    4. 'p' → logprob: -4.652953624725342
    5. '       ' → logprob: -4.777953624725342
    6. 'x' → logprob: -6.902953624725342
    7. 'a' → logprob: -7.027953624725342
    8. 'Points' (adapté à ' Points') → logprob: -8.6529541015625
    9. 'points' → logprob: -8.6529541015625
    10. 'px' → logprob: -9.6529541015625

Token 2964: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.02732078731060028
    2. ',' → logprob: -3.9023208618164062
    3. '[' → logprob: -6.277320861816406
    4. '<|end|>' → logprob: -6.527320861816406
    5. '=' → logprob: -6.652320861816406
    6. '.reverse' → logprob: -7.152320861816406
    7. 'sort' → logprob: -7.402320861816406
    8. 'def' → logprob: -8.652320861816406
    9. ' =' → logprob: -9.277320861816406
    10. '#' → logprob: -9.402320861816406

Token 2965: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -1.688212614681106e-05
    2. 'key' → logprob: -11.125017166137695
    3. '()' → logprob: -14.125017166137695
    4. '(lambda' → logprob: -14.500017166137695
    5. '(' → logprob: -14.875017166137695
    6. '(
' → logprob: -15.125017166137695
    7. '(reverse' → logprob: -15.750017166137695
    8. ',key' → logprob: -15.875017166137695
    9. '	key' → logprob: -17.625017166137695
    10. ' key' → logprob: -18.250017166137695

Token 2966: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -9.388769103679806e-05
    2. '=' → logprob: -9.500093460083008
    3. 'lambda' → logprob: -11.000093460083008
    4. '=None' → logprob: -13.125093460083008
    5. '=
' → logprob: -15.500093460083008
    6. '(lambda' → logprob: -16.750093460083008
    7. 'key' → logprob: -17.125093460083008
    8. '=len' → logprob: -17.375093460083008
    9. '=l' → logprob: -18.250093460083008
    10. ' =' → logprob: -18.625093460083008

Token 2967: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.5597102396423e-05
    2. ' p' → logprob: -10.250035285949707
    3. 'lambda' → logprob: -15.625035285949707
    4. '   ' → logprob: -18.875036239624023
    5. ' lambda' → logprob: -20.625036239624023
    6. '	p' → logprob: -21.000036239624023
    7. ':' → logprob: -21.500036239624023
    8. '0' → logprob: -21.625036239624023
    9. '=lambda' → logprob: -21.625036239624023
    10. '  ' → logprob: -22.000036239624023

Token 2968: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.187888041138649
    2. '.x' → logprob: -1.8128880262374878
    3. 'x' → logprob: -5.687888145446777
    4. ':x' → logprob: -6.562888145446777
    5. '.' → logprob: -6.937888145446777
    6. ':
' → logprob: -7.437888145446777
    7. '.p' → logprob: -7.687888145446777
    8. '=lambda' → logprob: -7.812888145446777
    9. ':p' → logprob: -8.187888145446777
    10. ':px' → logprob: -8.937888145446777

Token 2969: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.584239938296378e-06
    2. ' p' → logprob: -12.375007629394531
    3. 'lambda' → logprob: -12.625007629394531
    4. ' lambda' → logprob: -18.62500762939453
    5. '	p' → logprob: -19.37500762939453
    6. '<p' → logprob: -19.50000762939453
    7. '   ' → logprob: -19.62500762939453
    8. ':' → logprob: -19.75000762939453
    9. '(lambda' → logprob: -20.00000762939453
    10. ':p' → logprob: -20.62500762939453

Token 2970: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.3902033970225602e-05
    2. 'x' → logprob: -11.250014305114746
    3. '.' → logprob: -14.625014305114746
    4. '.abs' → logprob: -15.875014305114746
    5. ' .' → logprob: -16.50001335144043
    6. '   ' → logprob: -17.37501335144043
    7. '.arg' → logprob: -17.50001335144043
    8. 'def' → logprob: -17.50001335144043
    9. '	x' → logprob: -18.00001335144043
    10. '.r' → logprob: -18.12501335144043

Token 2971: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003178544342517853
    2. '<|end|>' → logprob: -6.128178596496582
    3. '       ' → logprob: -7.253178596496582
    4. ')
' → logprob: -8.878178596496582
    5. ',' → logprob: -9.253178596496582
    6. '<|end|>' → logprob: -11.628178596496582
    7. '()' → logprob: -12.003178596496582
    8. '[::-' → logprob: -12.128178596496582
    9. '())' → logprob: -12.128178596496582
    10. '),' → logprob: -12.753178596496582

Token 2972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002593492390587926
    2. 'for' → logprob: -6.252593517303467
    3. 'if' → logprob: -8.127593040466309
    4. '```' → logprob: -9.002593040466309
    5. '	' → logprob: -10.252593040466309
    6. ' for' → logprob: -10.377593040466309
    7. '   ' → logprob: -10.502593040466309
    8. 's' → logprob: -10.502593040466309
    9. '           ' → logprob: -10.752593040466309
    10. 'x' → logprob: -10.877593040466309

Token 2973: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2251024693250656
    2. 'print' (adapté à ' print') → logprob: -2.350102424621582
    3. '       ' → logprob: -2.850102424621582
    4. 'if' → logprob: -3.100102424621582
    5. 'p' → logprob: -6.600102424621582
    6. ' for' → logprob: -7.100102424621582
    7. 'a' → logprob: -7.475102424621582
    8. 'x' → logprob: -8.100102424621582
    9. ' if' → logprob: -9.975102424621582
    10. '```' → logprob: -10.350102424621582

Token 2974: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25348755717277527
    2. '(str' → logprob: -1.7534875869750977
    3. '(f' → logprob: -3.7534875869750977
    4. '("{' → logprob: -3.7534875869750977
    5. '(*' → logprob: -6.003487586975098
    6. 'str' → logprob: -8.128487586975098
    7. '("{}' → logprob: -8.253487586975098
    8. '("' → logprob: -8.628487586975098
    9. '(Point' → logprob: -8.753487586975098
    10. '([' → logprob: -8.878487586975098

Token 2975: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -0.050623055547475815
    2. '[' → logprob: -3.0506229400634766
    3. 'map' → logprob: -7.050622940063477
    4. '["' → logprob: -7.925622940063477
    5. '[str' → logprob: -8.175622940063477
    6. '(' → logprob: -8.175622940063477
    7. 'str' → logprob: -10.175622940063477
    8. 'list' → logprob: -10.425622940063477
    9. '(str' → logprob: -10.425622940063477
    10. '(map' → logprob: -10.550622940063477

Token 2976: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009165297262370586
    2. '[' → logprob: -4.759165287017822
    3. ',' → logprob: -8.13416576385498
    4. ')
' → logprob: -9.13416576385498
    5. '[:' → logprob: -9.88416576385498
    6. '[::-' → logprob: -10.00916576385498
    7. '   ' → logprob: -11.50916576385498
    8. '       ' → logprob: -11.50916576385498
    9. ' )' → logprob: -11.75916576385498
    10. '())' → logprob: -12.13416576385498

Token 2977: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00024263552040793002
    2. '   ' → logprob: -8.375242233276367
    3. 'return' → logprob: -11.500242233276367
    4. ' def' → logprob: -13.500242233276367
    5. '
' → logprob: -15.125242233276367
    6. '#' → logprob: -16.000242233276367
    7. '```' → logprob: -16.000242233276367
    8. ' return' → logprob: -17.500242233276367
    9. 'if' → logprob: -17.875242233276367
    10. ':def' → logprob: -18.125242233276367

Token 2978: ' verify' (ID: 14866)
  Prédit: 'verify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verify' → logprob: -0.00509844534099102
    2. 'cross' → logprob: -5.505098342895508
    3. 'def' → logprob: -7.755098342895508
    4. ' verify' → logprob: -8.380098342895508
    5. '__' → logprob: -9.005098342895508
    6. 'is' → logprob: -9.005098342895508
    7. 'ver' → logprob: -10.880098342895508
    8. 'c' → logprob: -11.255098342895508
    9. 'validate' → logprob: -11.255098342895508
    10. 'main' → logprob: -11.380098342895508

Token 2979: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013635702198371291
    2. '(' → logprob: -7.001363754272461
    3. 'def' → logprob: -8.001363754272461
    4. '(_' → logprob: -10.626363754272461
    5. '9' → logprob: -11.251363754272461
    6. ''_' → logprob: -11.626363754272461
    7. '__' → logprob: -11.876363754272461
    8. '7' → logprob: -12.001363754272461
    9. '()' → logprob: -12.001363754272461
    10. '('_' → logprob: -12.001363754272461

Token 2980: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.07901239395141602
    2. '2' → logprob: -3.579012393951416
    3. 'cs' → logprob: -4.329012393951416
    4. '1' → logprob: -4.579012393951416
    5. '3' → logprob: -4.704012393951416
    6. '8' → logprob: -5.454012393951416
    7. '0' → logprob: -5.829012393951416
    8. '9' → logprob: -6.079012393951416
    9. '4' → logprob: -6.329012393951416
    10. 'sc' → logprob: -7.079012393951416

Token 2981: 'E' (ID: 36)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0003802680876106024
    2. 'Cs' → logprob: -8.125380516052246
    3. 'cs' → logprob: -10.500380516052246
    4. 'D' → logprob: -10.750380516052246
    5. 'def' → logprob: -11.000380516052246
    6. 'CS' → logprob: -11.625380516052246
    7. '_cs' → logprob: -12.375380516052246
    8. 'A' → logprob: -12.875380516052246
    9. '_c' → logprob: -14.000380516052246
    10. 'С' → logprob: -14.500380516052246

Token 2982: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.048604849725961685
    2. '():' → logprob: -3.048604965209961
    3. 'def' → logprob: -11.298604965209961
    4. '():
' → logprob: -12.798604965209961
    5. '()' → logprob: -13.423604965209961
    6. '():

' → logprob: -13.923604965209961
    7. ' ():' → logprob: -17.29860496520996
    8. '()):
' → logprob: -17.92360496520996
    9. '()
' → logprob: -18.92360496520996
    10. ' def' → logprob: -19.67360496520996

Token 2983: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2116749882698059
    2. 'def' → logprob: -1.8366749286651611
    3. 'Q' → logprob: -3.461674928665161
    4. 'c' → logprob: -10.461674690246582
    5. ' Q' → logprob: -12.211674690246582
    6. 'cx' → logprob: -12.211674690246582
    7. '```' → logprob: -13.211674690246582
    8. '	Q' → logprob: -13.461674690246582
    9. '
' → logprob: -13.586674690246582
    10. ' def' → logprob: -13.961674690246582

Token 2984: ' c' (ID: 274)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.015148386359214783
    2. 'cx' → logprob: -5.015148162841797
    3. 'def' → logprob: -5.765148162841797
    4. 'c' (adapté à ' c') → logprob: -5.765148162841797
    5. '   ' → logprob: -6.265148162841797
    6. 'pass' → logprob: -8.765148162841797
    7. ' Q' → logprob: -10.640148162841797
    8. 'print' → logprob: -11.390148162841797
    9. 'q' → logprob: -11.640148162841797
    10. '#' → logprob: -12.015148162841797

Token 2985: '1' (ID: 16)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43247753381729126
    2. '1' → logprob: -1.6824774742126465
    3. 'x' → logprob: -3.0574774742126465
    4. 'l' → logprob: -3.1824774742126465
    5. 'ross' → logprob: -3.1824774742126465
    6. 'def' → logprob: -3.5574774742126465
    7. 'cross' → logprob: -6.3074774742126465
    8. 'lass' → logprob: -6.6824774742126465
    9. '2' → logprob: -6.9324774742126465
    10. 'c' → logprob: -7.9324774742126465

Token 2986: 'x' (ID: 87)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03944539651274681
    2. ',' → logprob: -3.914445400238037
    3. 'x' → logprob: -4.789445400238037
    4. ' =' → logprob: -5.164445400238037
    5. 'def' → logprob: -6.039445400238037
    6. '=' → logprob: -7.414445400238037
    7. '1' → logprob: -7.664445400238037
    8. '#' → logprob: -7.664445400238037
    9. ':' → logprob: -9.289444923400879
    10. 'cs' → logprob: -9.289444923400879

Token 2987: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.534558552724775e-05
    2. ',c' → logprob: -10.625025749206543
    3. 'c' → logprob: -14.875025749206543
    4. ' ,' → logprob: -15.000025749206543
    5. ',
' → logprob: -15.125025749206543
    6. '_,' → logprob: -18.875024795532227
    7. ',user' → logprob: -19.125024795532227
    8. '=' → logprob: -19.250024795532227
    9. ',p' → logprob: -19.250024795532227
    10. ' c' → logprob: -20.125024795532227

Token 2988: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008048642775975168
    2. ' c' → logprob: -7.125804901123047
    3. 'cy' → logprob: -14.750804901123047
    4. '   ' → logprob: -16.875804901123047
    5. '	c' → logprob: -17.750804901123047
    6. '  ' → logprob: -18.500804901123047
    7. '<|end|>' → logprob: -18.500804901123047
    8. 'cdecl' → logprob: -18.750804901123047
    9. ' ' → logprob: -19.500804901123047
    10. 'cı' → logprob: -20.000804901123047

Token 2989: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4218478500843048
    2. '1' → logprob: -1.2968478202819824
    3. 'c' → logprob: -2.6718478202819824
    4. ',' → logprob: -6.921847820281982
    5. 'cy' → logprob: -7.796847820281982
    6. '   ' → logprob: -9.54684829711914
    7. ',y' → logprob: -9.92184829711914
    8. '#' → logprob: -10.54684829711914
    9. ',c' → logprob: -11.29684829711914
    10. '{' → logprob: -11.79684829711914

Token 2990: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0028153362218290567
    2. ',' → logprob: -5.877815246582031
    3. 'x' → logprob: -12.502815246582031
    4. ',y' → logprob: -13.127815246582031
    5. '#' → logprob: -13.252815246582031
    6. 'c' → logprob: -14.127815246582031
    7. 'def' → logprob: -14.252815246582031
    8. '   ' → logprob: -15.002815246582031
    9. '_,' → logprob: -15.252815246582031
    10. 'class' → logprob: -15.627815246582031

Token 2991: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017350474081467837
    2. ',c' → logprob: -8.750173568725586
    3. ' ,' → logprob: -11.500173568725586
    4. 'c' → logprob: -12.250173568725586
    5. '_,' → logprob: -16.500173568725586
    6. ',p' → logprob: -16.875173568725586
    7. '=' → logprob: -17.875173568725586
    8. ' c' → logprob: -17.875173568725586
    9. ',
' → logprob: -18.125173568725586
    10. '   ' → logprob: -19.000173568725586

Token 2992: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.65707261255011e-06
    2. ' c' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.375008583068848
    4. '	c' → logprob: -16.875009536743164
    5. '#' → logprob: -17.000009536743164
    6. '
' → logprob: -17.750009536743164
    7. 'def' → logprob: -18.625009536743164
    8. '  ' → logprob: -18.750009536743164
    9. '```' → logprob: -19.125009536743164
    10. '    ' → logprob: -19.250009536743164

Token 2993: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.17682401835918427
    2. 'c' → logprob: -2.4268240928649902
    3. 'y' → logprob: -3.4268240928649902
    4. 's' → logprob: -3.6768240928649902
    5. 'def' → logprob: -4.80182409286499
    6. ',' → logprob: -6.55182409286499
    7. '=' → logprob: -6.67682409286499
    8. 'p' → logprob: -7.17682409286499
    9. '#' → logprob: -7.55182409286499
    10. 'x' → logprob: -7.80182409286499

Token 2994: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.8889261304575484e-06
    2. ',' → logprob: -12.750003814697266
    3. '=' → logprob: -15.125003814697266
    4. ' =' → logprob: -15.750003814697266
    5. 'x' → logprob: -16.000003814697266
    6. '
' → logprob: -16.125003814697266
    7. '#' → logprob: -16.750003814697266
    8. ',r' → logprob: -17.000003814697266
    9. '```' → logprob: -17.125003814697266
    10. ')' → logprob: -17.500003814697266

Token 2995: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025235753506422043
    2. '=' → logprob: -3.775235652923584
    3. ' =' → logprob: -6.525235652923584
    4. ',c' → logprob: -7.650235652923584
    5. ' ,' → logprob: -10.400236129760742
    6. 'c' → logprob: -11.275236129760742
    7. '=c' → logprob: -13.525236129760742
    8. ' c' → logprob: -14.775236129760742
    9. ',
' → logprob: -15.025236129760742
    10. '=
' → logprob: -15.150236129760742

Token 2996: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011047814972698689
    2. ' map' → logprob: -4.511047840118408
    3. '   ' → logprob: -17.38604736328125
    4. 'c' → logprob: -18.38604736328125
    5. 'm' → logprob: -18.51104736328125
    6. ',map' → logprob: -18.88604736328125
    7. 'int' → logprob: -19.01104736328125
    8. ',' → logprob: -19.13604736328125
    9. 'list' → logprob: -19.51104736328125
    10. 'input' → logprob: -19.63604736328125

Token 2997: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.38785457611083984
    2. 'int' → logprob: -1.1378545761108398
    3. '[int' → logprob: -7.13785457611084
    4. '=int' → logprob: -8.88785457611084
    5. ',int' → logprob: -10.38785457611084
    6. '<int' → logprob: -11.38785457611084
    7. ' int' → logprob: -12.76285457611084
    8. ':int' → logprob: -12.88785457611084
    9. 'def' → logprob: -13.38785457611084
    10. ']int' → logprob: -14.51285457611084

Token 2998: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4962652325630188
    2. ',input' → logprob: -1.996265172958374
    3. '(input' → logprob: -2.496265172958374
    4. 'int' → logprob: -2.496265172958374
    5. ',int' → logprob: -2.871265172958374
    6. ',' → logprob: -4.496265411376953
    7. '[int' → logprob: -4.871265411376953
    8. 'input' → logprob: -5.121265411376953
    9. 'def' → logprob: -5.496265411376953
    10. '=int' → logprob: -6.371265411376953

Token 2999: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.010615270584821701
    2. 'int' → logprob: -4.635615348815918
    3. 'c' → logprob: -8.010615348815918
    4. 'float' → logprob: -8.260615348815918
    5. ' input' → logprob: -8.760615348815918
    6. 'lambda' → logprob: -10.135615348815918
    7. 'def' → logprob: -10.510615348815918
    8. 'x' → logprob: -11.260615348815918
    9. 'Input' → logprob: -11.635615348815918
    10. '   ' → logprob: -12.010615348815918

Token 3000: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003521556267514825
    2. 'split' → logprob: -6.12852144241333
    3. '.split' → logprob: -7.37852144241333
    4. '().__' → logprob: -9.128521919250488
    5. '__.' → logprob: -9.128521919250488
    6. '(split' → logprob: -9.628521919250488
    7. '().
' → logprob: -9.753521919250488
    8. '[].' → logprob: -9.753521919250488
    9. '=lambda' → logprob: -10.253521919250488
    10. '(),' → logprob: -10.378521919250488

Token 3001: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.3199920178740285e-05
    2. 'input' → logprob: -10.875022888183594
    3. 'spl' → logprob: -13.000022888183594
    4. 'x' → logprob: -14.625022888183594
    5. 'skip' → logprob: -14.625022888183594
    6. '(split' → logprob: -14.625022888183594
    7. '(input' → logprob: -15.750022888183594
    8. ' split' → logprob: -16.000022888183594
    9. 'zip' → logprob: -17.000022888183594
    10. 'pop' → logprob: -17.250022888183594

Token 3002: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.07920625060796738
    2. ')
' → logprob: -2.5792062282562256
    3. 'def' → logprob: -8.329206466674805
    4. '()
' → logprob: -10.329206466674805
    5. '()' → logprob: -10.704206466674805
    6. '   ' → logprob: -12.079206466674805
    7. 'c' → logprob: -12.329206466674805
    8. ' ())
' → logprob: -13.454206466674805
    9. '())
' → logprob: -13.579206466674805
    10. '())

' → logprob: -13.704206466674805

Token 3003: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31340494751930237
    2. '   ' → logprob: -1.31340491771698
    3. 'Q' → logprob: -9.68840503692627
    4. 'def' → logprob: -9.93840503692627
    5. ' c' → logprob: -10.56340503692627
    6. '	c' → logprob: -12.81340503692627
    7. '   ' → logprob: -13.81340503692627
    8. 'p' → logprob: -14.31340503692627
    9. '
' → logprob: -14.43840503692627
    10. '#' → logprob: -15.06340503692627

Token 3004: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0004927450208924711
    2. '   ' → logprob: -7.750492572784424
    3. 'def' → logprob: -10.750493049621582
    4. ' c' → logprob: -10.875493049621582
    5. 'import' → logprob: -12.125493049621582
    6. 'p' → logprob: -12.500493049621582
    7. 'print' → logprob: -12.625493049621582
    8. '
' → logprob: -13.000493049621582
    9. 'Q' → logprob: -13.375493049621582
    10. 'cx' → logprob: -13.375493049621582

Token 3005: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2679109573364258
    2. '1' → logprob: -1.5179109573364258
    3. 'def' → logprob: -4.517910957336426
    4. ' =' → logprob: -6.392910957336426
    5. '=' → logprob: -6.517910957336426
    6. 's' → logprob: -7.142910957336426
    7. 'x' → logprob: -7.517910957336426
    8. 'c' → logprob: -8.642910957336426
    9. '   ' → logprob: -8.767910957336426
    10. ' def' → logprob: -10.642910957336426

Token 3006: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4329172968864441
    2. 'x' → logprob: -1.3079173564910889
    3. 'c' → logprob: -2.932917356491089
    4. ',c' → logprob: -4.05791711807251
    5. 'y' → logprob: -5.30791711807251
    6. ' =' → logprob: -6.30791711807251
    7. '=' → logprob: -7.18291711807251
    8. 'r' → logprob: -7.30791711807251
    9. '   ' → logprob: -7.43291711807251
    10. '1' → logprob: -7.43291711807251

Token 3007: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -5.9795445849886164e-05
    2. 'Point' → logprob: -9.750060081481934
    3. ' Circle' → logprob: -13.500060081481934
    4. 'Circ' → logprob: -18.875059127807617
    5. '.Circle' → logprob: -19.625059127807617
    6. '   ' → logprob: -19.625059127807617
    7. 'C' → logprob: -20.000059127807617
    8. 'circle' → logprob: -21.125059127807617
    9. 'Cir' → logprob: -21.500059127807617
    10. 'Cube' → logprob: -21.625059127807617

Token 3008: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.005235190503299236
    2. 'Point' → logprob: -5.255235195159912
    3. ' Point' → logprob: -13.880234718322754
    4. '   ' → logprob: -15.380234718322754
    5. '	Point' → logprob: -15.505234718322754
    6. '<Point' → logprob: -16.88023567199707
    7. '.Point' → logprob: -16.88023567199707
    8. 'def' → logprob: -17.63023567199707
    9. '#' → logprob: -18.25523567199707
    10. 'from' → logprob: -19.00523567199707

Token 3009: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.003920480143278837
    2. '(Point' → logprob: -6.003920555114746
    3. 'c' → logprob: -6.878920555114746
    4. 'Point' → logprob: -7.878920555114746
    5. ')c' → logprob: -11.378920555114746
    6. '(' → logprob: -12.128920555114746
    7. '((' → logprob: -12.503920555114746
    8. '(C' → logprob: -13.128920555114746
    9. '(
' → logprob: -13.128920555114746
    10. '   ' → logprob: -13.628920555114746

Token 3010: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. 'c' → logprob: -11.500019073486328
    3. 'x' → logprob: -11.750019073486328
    4. '(' → logprob: -14.625019073486328
    5. '(c' → logprob: -15.000019073486328
    6. '```' → logprob: -16.625019073486328
    7. '   ' → logprob: -17.000019073486328
    8. ' ' → logprob: -18.250019073486328
    9. ' c' → logprob: -18.750019073486328
    10. ')' → logprob: -18.875019073486328

Token 3011: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0028708502650260925
    2. '1' → logprob: -6.002871036529541
    3. 'c' → logprob: -7.877871036529541
    4. '(c' → logprob: -11.877870559692383
    5. 'y' → logprob: -12.002870559692383
    6. '(' → logprob: -14.252870559692383
    7. ',' → logprob: -14.377870559692383
    8. '   ' → logprob: -14.877870559692383
    9. ',c' → logprob: -15.002870559692383
    10. '.c' → logprob: -15.752870559692383

Token 3012: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006348780007101595
    2. ',c' → logprob: -8.000635147094727
    3. 'c' → logprob: -8.125635147094727
    4. ' ,' → logprob: -12.750635147094727
    5. ' c' → logprob: -15.250635147094727
    6. ',
' → logprob: -15.375635147094727
    7. '(c' → logprob: -15.750635147094727
    8. '   ' → logprob: -17.500635147094727
    9. '(),' → logprob: -18.500635147094727
    10. 'a' → logprob: -18.750635147094727

Token 3013: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.931863051955588e-05
    2. ' c' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.125059127807617
    4. '	c' → logprob: -16.250059127807617
    5. 'cy' → logprob: -18.000059127807617
    6. ' ' → logprob: -18.250059127807617
    7. '       ' → logprob: -18.250059127807617
    8. '```' → logprob: -18.375059127807617
    9. '  ' → logprob: -18.625059127807617
    10. '
' → logprob: -18.625059127807617

Token 3014: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006762856151908636
    2. '1' → logprob: -5.006762981414795
    3. 'c' → logprob: -10.631762504577637
    4. '```' → logprob: -11.881762504577637
    5. '   ' → logprob: -12.506762504577637
    6. ',' → logprob: -12.631762504577637
    7. '#' → logprob: -13.631762504577637
    8. ')' → logprob: -13.756762504577637
    9. 'py' → logprob: -14.006762504577637
    10. '
' → logprob: -14.131762504577637

Token 3015: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00016539888747502118
    2. '1' → logprob: -8.875164985656738
    3. ',' → logprob: -10.875164985656738
    4. '   ' → logprob: -13.375164985656738
    5. '```' → logprob: -13.875164985656738
    6. ',y' → logprob: -14.625164985656738
    7. 'x' → logprob: -14.625164985656738
    8. 'py' → logprob: -14.625164985656738
    9. 'c' → logprob: -14.750164985656738
    10. '#' → logprob: -14.875164985656738

Token 3016: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03833005949854851
    2. '),' → logprob: -3.288330078125
    3. ',c' → logprob: -9.413330078125
    4. '(),' → logprob: -9.538330078125
    5. 'c' → logprob: -9.538330078125
    6. ' ,' → logprob: -10.663330078125
    7. '   ' → logprob: -10.788330078125
    8. '(c' → logprob: -11.288330078125
    9. 'def' → logprob: -13.913330078125
    10. 'x' → logprob: -14.288330078125

Token 3017: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.306760805164231e-05
    2. ' c' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.62501335144043
    4. '	c' → logprob: -18.50001335144043
    5. 'Point' → logprob: -20.00001335144043
    6. '
' → logprob: -20.37501335144043
    7. '0' → logprob: -20.62501335144043
    8. ')c' → logprob: -20.62501335144043
    9. '#' → logprob: -20.75001335144043
    10. '
' → logprob: -20.87501335144043

Token 3018: '1' (ID: 16)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011447181925177574
    2. '1' → logprob: -4.511446952819824
    3. '3' → logprob: -8.636446952819824
    4. '2' → logprob: -9.761446952819824
    5. 'cr' → logprob: -9.761446952819824
    6. 'c' → logprob: -9.886446952819824
    7. 'y' → logprob: -10.136446952819824
    8. '   ' → logprob: -11.886446952819824
    9. '.r' → logprob: -13.136446952819824
    10. 'ry' → logprob: -13.136446952819824

Token 3019: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08190392702817917
    2. 'c' → logprob: -2.5819039344787598
    3. 'cr' → logprob: -6.20690393447876
    4. '1' → logprob: -6.95690393447876
    5. '```' → logprob: -10.581903457641602
    6. '   ' → logprob: -12.331903457641602
    7. ')' → logprob: -12.331903457641602
    8. '
' → logprob: -13.581903457641602
    9. 'y' → logprob: -13.706903457641602
    10. '.c' → logprob: -14.081903457641602

Token 3020: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030219709500670433
    2. ')
' → logprob: -3.905219793319702
    3. ')' → logprob: -4.905219554901123
    4. 'def' → logprob: -6.155219554901123
    5. ',' → logprob: -10.405220031738281
    6. 'c' → logprob: -11.030220031738281
    7. '#' → logprob: -11.280220031738281
    8. '),' → logprob: -11.280220031738281
    9. '
' → logprob: -11.655220031738281
    10. ' ' → logprob: -12.655220031738281

Token 3021: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06270231306552887
    2. 'Q' → logprob: -2.9377024173736572
    3. 'c' → logprob: -4.937702178955078
    4. 'def' → logprob: -7.437702178955078
    5. ' Q' → logprob: -11.562702178955078
    6. '```' → logprob: -11.937702178955078
    7. 'q' → logprob: -12.187702178955078
    8. 'import' → logprob: -13.437702178955078
    9. '	Q' → logprob: -13.437702178955078
    10. '``' → logprob: -13.687702178955078

Token 3022: ' c' (ID: 274)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.0016291213687509298
    2. 'c' (adapté à ' c') → logprob: -7.00162935256958
    3. '   ' → logprob: -7.62662935256958
    4. 'q' → logprob: -8.626628875732422
    5. 'def' → logprob: -10.751628875732422
    6. ' Q' → logprob: -11.376628875732422
    7. 'n' → logprob: -12.001628875732422
    8. 'import' → logprob: -12.126628875732422
    9. '#' → logprob: -13.751628875732422
    10. 'for' → logprob: -14.126628875732422

Token 3023: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. '1' → logprob: -13.000003814697266
    3. 'def' → logprob: -13.375003814697266
    4. '   ' → logprob: -17.875003814697266
    5. '#' → logprob: -18.125003814697266
    6. 'c' → logprob: -19.125003814697266
    7. 'x' → logprob: -19.250003814697266
    8. ' ' → logprob: -19.875003814697266
    9. '```' → logprob: -20.125003814697266
    10. 'return' → logprob: -20.625003814697266

Token 3024: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.153795766294934e-06
    2. ' =' → logprob: -12.375005722045898
    3. '1' → logprob: -14.250005722045898
    4. '=' → logprob: -14.875005722045898
    5. '2' → logprob: -14.875005722045898
    6. ',' → logprob: -15.250005722045898
    7. 'y' → logprob: -15.875005722045898
    8. 'c' → logprob: -16.6250057220459
    9. '_x' → logprob: -17.5000057220459
    10. '
' → logprob: -17.6250057220459

Token 3025: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004353181866463274
    2. ',c' → logprob: -7.7504353523254395
    3. ' ,' → logprob: -13.000434875488281
    4. 'c' → logprob: -13.250434875488281
    5. ',
' → logprob: -14.625434875488281
    6. ',user' → logprob: -15.750434875488281
    7. ',p' → logprob: -18.50043487548828
    8. '_,' → logprob: -18.50043487548828
    9. '=' → logprob: -18.62543487548828
    10. ',m' → logprob: -19.37543487548828

Token 3026: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.31326258182525635
    2. ' c' → logprob: -1.3132625818252563
    3. '   ' → logprob: -14.563262939453125
    4. '	c' → logprob: -15.563262939453125
    5. ' ' → logprob: -16.313262939453125
    6. ' 
' → logprob: -17.313262939453125
    7. '    ' → logprob: -17.313262939453125
    8. '
' → logprob: -17.813262939453125
    9. '_c' → logprob: -18.063262939453125
    10. ' ' → logprob: -18.688262939453125

Token 3027: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000488811288960278
    2. 'c' → logprob: -7.625488758087158
    3. '1' → logprob: -14.250489234924316
    4. '```' → logprob: -17.25048828125
    5. '#' → logprob: -18.25048828125
    6. '₂' → logprob: -18.50048828125
    7. 'class' → logprob: -18.62548828125
    8. ' c' → logprob: -18.87548828125
    9. ' ' → logprob: -18.87548828125
    10. '   ' → logprob: -19.50048828125

Token 3028: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.035886943340301514
    2. ',' → logprob: -3.4108870029449463
    3. 'c' → logprob: -6.410886764526367
    4. '1' → logprob: -8.660886764526367
    5. '2' → logprob: -8.785886764526367
    6. 'x' → logprob: -9.160886764526367
    7. ',y' → logprob: -9.285886764526367
    8. '```' → logprob: -10.660886764526367
    9. 'user' → logprob: -12.535886764526367
    10. ',c' → logprob: -12.660886764526367

Token 3029: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000924561289139092
    2. ',c' → logprob: -7.000924587249756
    3. ' ,' → logprob: -11.500924110412598
    4. 'c' → logprob: -13.375924110412598
    5. '=' → logprob: -13.750924110412598
    6. ',map' → logprob: -16.375925064086914
    7. '_,' → logprob: -16.875925064086914
    8. ',
' → logprob: -16.875925064086914
    9. ',p' → logprob: -17.250925064086914
    10. ',m' → logprob: -17.625925064086914

Token 3030: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03804505243897438
    2. ' c' → logprob: -3.2880451679229736
    3. '   ' → logprob: -12.663044929504395
    4. '    ' → logprob: -15.788044929504395
    5. ' ' → logprob: -16.28804588317871
    6. '	c' → logprob: -16.53804588317871
    7. '  ' → logprob: -17.53804588317871
    8. '
' → logprob: -17.78804588317871
    9. '```' → logprob: -18.16304588317871
    10. '       ' → logprob: -18.28804588317871

Token 3031: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.33045297861099243
    2. 'y' → logprob: -1.7054529190063477
    3. 'map' → logprob: -2.4554529190063477
    4. 'c' → logprob: -4.330452919006348
    5. '#' → logprob: -8.455452919006348
    6. 'x' → logprob: -8.580452919006348
    7. '1' → logprob: -8.955452919006348
    8. 'w' → logprob: -10.955452919006348
    9. 'mp' → logprob: -10.955452919006348
    10. '(map' → logprob: -10.955452919006348

Token 3032: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.39923685789108276
    2. 'c' → logprob: -1.1492369174957275
    3. 'x' → logprob: -5.149236679077148
    4. '=' → logprob: -5.899236679077148
    5. 'y' → logprob: -6.524236679077148
    6. ' =' → logprob: -7.024236679077148
    7. ',' → logprob: -7.274236679077148
    8. '2' → logprob: -8.149236679077148
    9. '1' → logprob: -9.149236679077148
    10. 'cr' → logprob: -9.149236679077148

Token 3033: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804194927215576
    2. ' =' → logprob: -3.2880420684814453
    3. '=
' → logprob: -15.288042068481445
    4. ',' → logprob: -16.038042068481445
    5. '＝' → logprob: -16.163042068481445
    6. '=c' → logprob: -17.288042068481445
    7. '=user' → logprob: -17.288042068481445
    8. ')' → logprob: -17.288042068481445
    9. '=

' → logprob: -17.538042068481445
    10. ' ' → logprob: -18.038042068481445

Token 3034: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.023246755823493004
    2. ' map' → logprob: -3.7732467651367188
    3. 'list' → logprob: -13.773246765136719
    4. '   ' → logprob: -15.398246765136719
    5. '    ' → logprob: -17.02324676513672
    6. ' list' → logprob: -17.39824676513672
    7. '	map' → logprob: -17.64824676513672
    8. '(map' → logprob: -17.89824676513672
    9. 'm' → logprob: -18.77324676513672
    10. '
' → logprob: -18.77324676513672

Token 3035: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008628051728010178
    2. '(int' → logprob: -4.758627891540527
    3. '[int' → logprob: -11.758627891540527
    4. '=int' → logprob: -12.383627891540527
    5. 'def' → logprob: -14.258627891540527
    6. 'Point' → logprob: -15.258627891540527
    7. ' int' → logprob: -15.633627891540527
    8. ':int' → logprob: -15.758627891540527
    9. 'Int' → logprob: -16.383628845214844
    10. '
' → logprob: -16.633628845214844

Token 3036: ',' (ID: 11)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.6274346709251404
    2. 'int' → logprob: -1.3774347305297852
    3. 'c' → logprob: -2.002434730529785
    4. '(Point' → logprob: -3.377434730529785
    5. 'x' → logprob: -3.502434730529785
    6. 'input' → logprob: -4.627434730529785
    7. '(int' → logprob: -6.752434730529785
    8. 'def' → logprob: -6.877434730529785
    9. '2' → logprob: -7.252434730529785
    10. 'import' → logprob: -8.002434730529785

Token 3037: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.01685239188373089
    2. ' map' → logprob: -4.266852378845215
    3. 'Point' → logprob: -6.016852378845215
    4. ' Point' → logprob: -9.016852378845215
    5. 'int' → logprob: -9.891852378845215
    6. 'c' → logprob: -10.016852378845215
    7. 'point' → logprob: -10.766852378845215
    8. 'Map' → logprob: -12.516852378845215
    9. '   ' → logprob: -13.016852378845215
    10. 'input' → logprob: -13.766852378845215

Token 3038: '().' (ID: 1454)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.4542292058467865
    2. 'int' → logprob: -1.7042292356491089
    3. '(int' → logprob: -1.7042292356491089
    4. '[int' → logprob: -8.204229354858398
    5. 'def' → logprob: -8.579229354858398
    6. ',int' → logprob: -8.829229354858398
    7. ' int' → logprob: -9.829229354858398
    8. '_int' → logprob: -9.954229354858398
    9. ':int' → logprob: -9.954229354858398
    10. '<int' → logprob: -10.204229354858398

Token 3039: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06528255343437195
    2. 'map' → logprob: -3.0652825832366943
    3. 'int' → logprob: -5.315282344818115
    4. 'def' → logprob: -5.565282344818115
    5. 'input' → logprob: -6.690282344818115
    6. 'float' → logprob: -6.940282344818115
    7. 'swap' → logprob: -7.190282344818115
    8. 'import' → logprob: -7.315282344818115
    9. 'print' → logprob: -7.565282344818115
    10. 'skip' → logprob: -7.690282344818115

Token 3040: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.008711130358278751
    2. ')
' → logprob: -4.758711338043213
    3. '())' → logprob: -10.383710861206055
    4. '()
' → logprob: -10.633710861206055
    5. '()' → logprob: -10.633710861206055
    6. ' ())
' → logprob: -12.633710861206055
    7. '())

' → logprob: -12.758710861206055
    8. '())
' → logprob: -13.008710861206055
    9. 'def' → logprob: -13.133710861206055
    10. ')' → logprob: -13.133710861206055

Token 3041: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5766004920005798
    2. 'c' → logprob: -0.8266004920005798
    3. 'def' → logprob: -7.576600551605225
    4. ' c' → logprob: -9.201600074768066
    5. '
' → logprob: -10.326600074768066
    6. '	c' → logprob: -11.951600074768066
    7. ' ' → logprob: -12.826600074768066
    8. '```' → logprob: -13.076600074768066
    9. '  ' → logprob: -13.951600074768066
    10. '#' → logprob: -14.326600074768066

Token 3042: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -2.463036435074173e-05
    2. '   ' → logprob: -10.750024795532227
    3. 'def' → logprob: -12.875024795532227
    4. ' c' → logprob: -15.125024795532227
    5. '
' → logprob: -15.375024795532227
    6. '```' → logprob: -17.000024795532227
    7. '	c' → logprob: -18.125024795532227
    8. '#' → logprob: -18.375024795532227
    9. '``' → logprob: -19.000024795532227
    10. '
' → logprob: -19.750024795532227

Token 3043: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012892624363303185
    2. 'c' → logprob: -9.000128746032715
    3. '1' → logprob: -12.625128746032715
    4. 'def' → logprob: -13.875128746032715
    5. ' =' → logprob: -14.625128746032715
    6. 'class' → logprob: -15.500128746032715
    7. '#' → logprob: -15.625128746032715
    8. '=c' → logprob: -16.00012969970703
    9. '=' → logprob: -16.12512969970703
    10. '
' → logprob: -16.75012969970703

Token 3044: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048617683351039886
    2. '=' → logprob: -3.0486176013946533
    3. '   ' → logprob: -11.673617362976074
    4. 'def' → logprob: -12.423617362976074
    5. '=
' → logprob: -12.423617362976074
    6. ' =
' → logprob: -12.673617362976074
    7. '
' → logprob: -12.798617362976074
    8. '=c' → logprob: -13.173617362976074
    9. ' ' → logprob: -13.548617362976074
    10. ',' → logprob: -13.798617362976074

Token 3045: ' Circle' (ID: 33361)
  Prédit: 'Circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Circle' → logprob: -3.054500666621607e-06
    2. 'Point' → logprob: -13.25000286102295
    3. ' Circle' → logprob: -14.12500286102295
    4. '.Circle' → logprob: -14.75000286102295
    5. 'Circ' → logprob: -16.750003814697266
    6. '_circle' → logprob: -18.750003814697266
    7. 'C' → logprob: -19.375003814697266
    8. 'c' → logprob: -20.375003814697266
    9. 'class' → logprob: -20.625003814697266
    10. 'circle' → logprob: -20.750003814697266

Token 3046: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -5.848420551046729e-05
    2. 'Point' → logprob: -9.7500581741333
    3. '.Point' → logprob: -17.250059127807617
    4. '<Point' → logprob: -17.500059127807617
    5. '	Point' → logprob: -17.625059127807617
    6. ' Point' → logprob: -18.250059127807617
    7. '   ' → logprob: -21.250059127807617
    8. 'from' → logprob: -21.375059127807617
    9. '#' → logprob: -21.625059127807617
    10. '_Point' → logprob: -21.750059127807617

Token 3047: '(c' (ID: 2410)
  Prédit: '(Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.009115086868405342
    2. '(c' → logprob: -4.759115219116211
    3. 'Point' → logprob: -7.634115219116211
    4. 'c' → logprob: -11.884115219116211
    5. ' Point' → logprob: -13.009115219116211
    6. '.Point' → logprob: -13.134115219116211
    7. '	Point' → logprob: -13.259115219116211
    8. '(C' → logprob: -14.134115219116211
    9. '<Point' → logprob: -14.134115219116211
    10. '(cx' → logprob: -14.509115219116211

Token 3048: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008060562540777028
    2. 'c' → logprob: -7.125805854797363
    3. 'x' → logprob: -14.000805854797363
    4. '```' → logprob: -14.875805854797363
    5. '   ' → logprob: -16.00080680847168
    6. 'def' → logprob: -16.00080680847168
    7. '(c' → logprob: -16.12580680847168
    8. '``' → logprob: -17.12580680847168
    9. ' c' → logprob: -17.37580680847168
    10. '
' → logprob: -17.87580680847168

Token 3049: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.709100067615509
    2. '2' → logprob: -0.959100067615509
    3. 'y' → logprob: -2.2091000080108643
    4. 'c' → logprob: -4.209100246429443
    5. '(c' → logprob: -11.834099769592285
    6. 'class' → logprob: -13.084099769592285
    7. '#' → logprob: -13.209099769592285
    8. '(' → logprob: -13.834099769592285
    9. '   ' → logprob: -14.084099769592285
    10. '(y' → logprob: -14.709099769592285

Token 3050: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00306683755479753
    2. ',c' → logprob: -6.0030670166015625
    3. 'c' → logprob: -7.5030670166015625
    4. ' ,' → logprob: -10.878067016601562
    5. ',y' → logprob: -11.378067016601562
    6. 'y' → logprob: -11.878067016601562
    7. '   ' → logprob: -13.878067016601562
    8. '(c' → logprob: -14.753067016601562
    9. ',
' → logprob: -14.753067016601562
    10. '_,' → logprob: -15.503067016601562

Token 3051: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014168102643452585
    2. ' c' → logprob: -8.875142097473145
    3. 'cy' → logprob: -13.750142097473145
    4. '   ' → logprob: -14.750142097473145
    5. '	c' → logprob: -16.500141143798828
    6. ' ' → logprob: -16.625141143798828
    7. 'с' → logprob: -17.875141143798828
    8. '  ' → logprob: -17.875141143798828
    9. '       ' → logprob: -18.250141143798828
    10. '    ' → logprob: -18.875141143798828

Token 3052: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2185245156288147
    2. 'c' → logprob: -1.71852445602417
    3. 'cy' → logprob: -5.09352445602417
    4. '2' → logprob: -5.21852445602417
    5. '<|end|>' → logprob: -6.84352445602417
    6. ',' → logprob: -7.21852445602417
    7. 'user' → logprob: -7.59352445602417
    8. 'assistant' → logprob: -7.59352445602417
    9. '#' → logprob: -8.218524932861328
    10. ')' → logprob: -8.218524932861328

Token 3053: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0038273909594863653
    2. ',' → logprob: -5.6288275718688965
    3. '),' → logprob: -8.503827095031738
    4. ',y' → logprob: -11.378827095031738
    5. ')' → logprob: -12.378827095031738
    6. 'c' → logprob: -13.378827095031738
    7. '_y' → logprob: -13.628827095031738
    8. '2' → logprob: -13.753827095031738
    9. ' ,' → logprob: -13.878827095031738
    10. '1' → logprob: -14.253827095031738

Token 3054: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0042785461992025375
    2. '),' → logprob: -5.504278659820557
    3. ' ,' → logprob: -9.129278182983398
    4. ',c' → logprob: -10.129278182983398
    5. 'c' → logprob: -10.754278182983398
    6. '   ' → logprob: -11.129278182983398
    7. '(),' → logprob: -11.754278182983398
    8. '_,' → logprob: -13.754278182983398
    9. ',),' → logprob: -13.879278182983398
    10. 'y' → logprob: -13.879278182983398

Token 3055: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0017612135270610452
    2. 'Point' → logprob: -6.626761436462402
    3. ' c' → logprob: -7.751761436462402
    4. ' Point' → logprob: -12.751761436462402
    5. '   ' → logprob: -13.126761436462402
    6. '	c' → logprob: -16.376760482788086
    7. 'int' → logprob: -16.501760482788086
    8. '#' → logprob: -16.876760482788086
    9. ' ' → logprob: -17.126760482788086
    10. 'Circle' → logprob: -17.251760482788086

Token 3056: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.37899383902549744
    2. '2' → logprob: -1.6289938688278198
    3. 'c' → logprob: -2.1289937496185303
    4. ',' → logprob: -8.50399398803711
    5. 'r' → logprob: -9.50399398803711
    6. ')' → logprob: -10.87899398803711
    7. '   ' → logprob: -11.00399398803711
    8. 'x' → logprob: -11.37899398803711
    9. '_y' → logprob: -11.37899398803711
    10. '.y' → logprob: -11.87899398803711

Token 3057: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0337592288851738
    2. 'y' → logprob: -3.408759117126465
    3. ')' → logprob: -9.783759117126465
    4. '2' → logprob: -10.908759117126465
    5. ')
' → logprob: -11.408759117126465
    6. '),' → logprob: -12.283759117126465
    7. '
' → logprob: -12.408759117126465
    8. ',' → logprob: -12.408759117126465
    9. '.y' → logprob: -12.533759117126465
    10. '#' → logprob: -12.908759117126465

Token 3058: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14656241238117218
    2. ')' → logprob: -2.521562337875366
    3. '   ' → logprob: -3.646562337875366
    4. ')
' → logprob: -3.896562337875366
    5. 'def' → logprob: -5.271562576293945
    6. '),' → logprob: -6.021562576293945
    7. '#' → logprob: -8.021562576293945
    8. ',r' → logprob: -8.146562576293945
    9. '(),' → logprob: -8.271562576293945
    10. '
' → logprob: -8.646562576293945

Token 3059: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31338319182395935
    2. 'def' → logprob: -1.3133832216262817
    3. '```' → logprob: -9.063383102416992
    4. '``' → logprob: -12.688383102416992
    5. ' def' → logprob: -13.688383102416992
    6. '#' → logprob: -14.313383102416992
    7. 'return' → logprob: -14.813383102416992
    8. '       ' → logprob: -15.313383102416992
    9. '
' → logprob: -16.063383102416992
    10. 's' → logprob: -18.063383102416992

Token 3060: ' Points' (ID: 38086)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.844234824180603
    2. 'def' → logprob: -1.219234824180603
    3. 'return' → logprob: -2.4692349433898926
    4. '   ' → logprob: -2.7192349433898926
    5. 'print' → logprob: -3.0942349433898926
    6. 'for' → logprob: -3.7192349433898926
    7. 'Q' → logprob: -3.9692349433898926
    8. 'if' → logprob: -3.9692349433898926
    9. '#' → logprob: -5.594234943389893
    10. 'dist' → logprob: -5.594234943389893

Token 3061: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5768275856971741
    2. '=' → logprob: -0.8268275856971741
    3. '   ' → logprob: -7.076827526092529
    4. '=[]' → logprob: -10.701828002929688
    5. '=[' → logprob: -12.451828002929688
    6. '=c' → logprob: -12.576828002929688
    7. '=
' → logprob: -12.576828002929688
    8. '=list' → logprob: -12.826828002929688
    9. '[' → logprob: -13.701828002929688
    10. ':' → logprob: -14.076828002929688

Token 3062: ' cross' (ID: 8088)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.0011711753904819489
    2. ' cross' → logprob: -6.751171112060547
    3. '   ' → logprob: -14.001171112060547
    4. 'c' → logprob: -17.251171112060547
    5. 'Cross' → logprob: -18.126171112060547
    6. 'list' → logprob: -18.251171112060547
    7. '.cross' → logprob: -18.501171112060547
    8. '[c' → logprob: -18.626171112060547
    9. 'intersection' → logprob: -18.751171112060547
    10. '
' → logprob: -18.876171112060547

Token 3063: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: 0.0
    2. 'points' → logprob: -17.875
    3. 'po' → logprob: -19.875
    4. 'p' → logprob: -20.75
    5. '```' → logprob: -20.875
    6. '_point' → logprob: -21.75
    7. '
' → logprob: -22.0
    8. 'oint' → logprob: -22.25
    9. 'poi' → logprob: -22.5
    10. '#' → logprob: -22.5

Token 3064: '_cc' (ID: 69524)
  Prédit: '_cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cc' → logprob: -6.289473822107539e-05
    2. 'cc' → logprob: -9.750062942504883
    3. '_sc' → logprob: -12.375062942504883
    4. '_ll' → logprob: -15.375062942504883
    5. '(cc' → logprob: -15.875062942504883
    6. 'CC' → logprob: -17.750062942504883
    7. '	cc' → logprob: -17.750062942504883
    8. ' cc' → logprob: -18.000062942504883
    9. '_l' → logprob: -18.250062942504883
    10. 'Cc' → logprob: -18.625062942504883

Token 3065: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.6240566083070007e-06
    2. '(C' → logprob: -13.875001907348633
    3. '(' → logprob: -14.500001907348633
    4. 'c' → logprob: -16.500001907348633
    5. ' (' → logprob: -17.625001907348633
    6. 'def' → logprob: -18.625001907348633
    7. '#' → logprob: -18.875001907348633
    8. '(
' → logprob: -18.875001907348633
    9. '(circle' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 3066: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9981420336989686e-05
    2. '2' → logprob: -11.000020027160645
    3. 'c' → logprob: -13.375020027160645
    4. '(c' → logprob: -14.250020027160645
    5. '
' → logprob: -14.625020027160645
    6. '(' → logprob: -15.375020027160645
    7. '```' → logprob: -15.375020027160645
    8. '#' → logprob: -16.875019073486328
    9. 'def' → logprob: -17.375019073486328
    10. 'ircle' → logprob: -17.500019073486328

Token 3067: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.577570378780365
    2. '(c' → logprob: -0.827570378780365
    3. ',c' → logprob: -6.45257043838501
    4. ')' → logprob: -11.202569961547852
    5. '(' → logprob: -11.452569961547852
    6. ' ,' → logprob: -11.827569961547852
    7. 'c' → logprob: -11.827569961547852
    8. '   ' → logprob: -12.327569961547852
    9. ',
' → logprob: -13.077569961547852
    10. '#' → logprob: -13.077569961547852

Token 3068: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007102862582542002
    2. ' c' → logprob: -7.250710487365723
    3. '(c' → logprob: -15.500710487365723
    4. ')c' → logprob: -16.250709533691406
    5. '	c' → logprob: -16.875709533691406
    6. '   ' → logprob: -17.625709533691406
    7. '```' → logprob: -17.625709533691406
    8. '
' → logprob: -19.000709533691406
    9. '<|end|>' → logprob: -20.000709533691406
    10. ')' → logprob: -20.250709533691406

Token 3069: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006266565760597587
    2. 'c' → logprob: -7.375626564025879
    3. 'def' → logprob: -17.500627517700195
    4. ' c' → logprob: -18.125627517700195
    5. '(c' → logprob: -18.625627517700195
    6. '```' → logprob: -18.625627517700195
    7. 's' → logprob: -18.750627517700195
    8. '２' → logprob: -18.750627517700195
    9. '[c' → logprob: -19.375627517700195
    10. '   ' → logprob: -19.875627517700195

Token 3070: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5046558976173401
    2. '()' → logprob: -1.0046558380126953
    3. '   ' → logprob: -4.004655838012695
    4. '()
' → logprob: -5.379655838012695
    5. ')
' → logprob: -5.629655838012695
    6. '())' → logprob: -5.879655838012695
    7. '(c' → logprob: -7.379655838012695
    8. 'def' → logprob: -9.129655838012695
    9. '())
' → logprob: -10.129655838012695
    10. '(' → logprob: -11.129655838012695

Token 3071: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.153795766294934e-06
    2. 'for' → logprob: -13.000005722045898
    3. '       ' → logprob: -13.500005722045898
    4. '[]' → logprob: -14.250005722045898
    5. 'if' → logprob: -14.750005722045898
    6. ' for' → logprob: -14.875005722045898
    7. ' if' → logprob: -15.125005722045898
    8. '[' → logprob: -15.250005722045898
    9. 'print' → logprob: -15.625005722045898
    10. '<|end|>' → logprob: -16.3750057220459

Token 3072: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26366668939590454
    2. 'if' (adapté à ' if') → logprob: -1.5136666297912598
    3. '   ' → logprob: -4.76366662979126
    4. 'print' → logprob: -6.63866662979126
    5. ' for' → logprob: -6.88866662979126
    6. ' if' → logprob: -7.51366662979126
    7. 'return' → logprob: -8.263667106628418
    8. '
' → logprob: -14.263667106628418
    9. '	for' → logprob: -14.388667106628418
    10. '```' → logprob: -14.388667106628418

Token 3073: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.27085915207862854
    2. 'not' → logprob: -2.0208592414855957
    3. 'Points' → logprob: -2.2708592414855957
    4. ' not' → logprob: -6.770859241485596
    5. ' len' → logprob: -8.145858764648438
    6. ' Points' → logprob: -10.520858764648438
    7. 'points' → logprob: -10.770858764648438
    8. '(len' → logprob: -11.520858764648438
    9. 'Len' → logprob: -12.270858764648438
    10. 'Not' → logprob: -12.895858764648438

Token 3074: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. 'Points' → logprob: -14.500000953674316
    3. '==' → logprob: -16.375
    4. '(c' → logprob: -16.875
    5. '(points' → logprob: -17.0
    6. '(Point' → logprob: -17.25
    7. '(P' → logprob: -18.25
    8. '```' → logprob: -18.25
    9. '(
' → logprob: -19.25
    10. 'c' → logprob: -19.25

Token 3075: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. ' Points' → logprob: -17.75
    4. '[' → logprob: -19.25
    5. '_points' → logprob: -19.5
    6. 'points' → logprob: -20.25
    7. 'Point' → logprob: -21.125
    8. 'POINT' → logprob: -21.625
    9. '0' → logprob: -21.875
    10. 'Pts' → logprob: -23.125

Token 3076: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3143695294857025
    2. ' ==' → logprob: -1.314369559288025
    3. '>' → logprob: -7.8143696784973145
    4. ')' → logprob: -8.064369201660156
    5. ')==' → logprob: -9.064369201660156
    6. '   ' → logprob: -9.689369201660156
    7. '<' → logprob: -9.939369201660156
    8. '<=' → logprob: -10.064369201660156
    9. ' <' → logprob: -10.439369201660156
    10. ' !=' → logprob: -10.564369201660156

Token 3077: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2553795874118805
    2. ' ==' → logprob: -1.505379557609558
    3. '>' → logprob: -5.880379676818848
    4. ' >' → logprob: -8.130379676818848
    5. '!=' → logprob: -9.380379676818848
    6. '<' → logprob: -9.380379676818848
    7. ' !=' → logprob: -9.630379676818848
    8. ')' → logprob: -10.380379676818848
    9. ' <' → logprob: -10.380379676818848
    10. '   ' → logprob: -10.505379676818848

Token 3078: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029923528200015426
    2. '1' → logprob: -8.750299453735352
    3. '2' → logprob: -9.000299453735352
    4. '   ' → logprob: -11.500299453735352
    5. ' ' → logprob: -12.375299453735352
    6. '```' → logprob: -13.000299453735352
    7. '==' → logprob: -15.000299453735352
    8. '
' → logprob: -16.37529945373535
    9. '=' → logprob: -16.62529945373535
    10. '(' → logprob: -17.25029945373535

Token 3079: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002374223666265607
    2. '2' → logprob: -6.252374172210693
    3. '1' → logprob: -7.752374172210693
    4. ' ' → logprob: -11.877374649047852
    5. '```' → logprob: -12.002374649047852
    6. '[]' → logprob: -14.377374649047852
    7. '
' → logprob: -14.377374649047852
    8. '[' → logprob: -14.627374649047852
    9. '   ' → logprob: -15.502374649047852
    10. '>' → logprob: -16.06487464904785

Token 3080: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.39180558919906616
    2. ' ==' → logprob: -1.141805648803711
    3. ':' → logprob: -6.266805648803711
    4. '>' → logprob: -6.641805648803711
    5. '   ' → logprob: -6.891805648803711
    6. '       ' → logprob: -7.766805648803711
    7. ':
' → logprob: -8.766805648803711
    8. ' >' → logprob: -9.516805648803711
    9. '==
' → logprob: -11.891805648803711
    10. '[' → logprob: -12.016805648803711

Token 3081: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020930420141667128
    2. '   ' → logprob: -6.3770928382873535
    3. ':' → logprob: -8.377093315124512
    4. ':
' → logprob: -9.127093315124512
    5. ' points' → logprob: -11.877093315124512
    6. '[' → logprob: -11.877093315124512
    7. '           ' → logprob: -12.127093315124512
    8. '      ' → logprob: -12.127093315124512
    9. 'points' → logprob: -12.377093315124512
    10. '```' → logprob: -12.627093315124512

Token 3082: ' Points' (ID: 38086)
  Prédit: 'Points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' (adapté à ' Points') → logprob: -2.5941604690160602e-05
    2. '   ' → logprob: -10.750025749206543
    3. ' Points' → logprob: -12.375025749206543
    4. '_points' → logprob: -16.00002670288086
    5. 'points' → logprob: -17.25002670288086
    6. 'Point' → logprob: -17.37502670288086
    7. '       ' → logprob: -18.00002670288086
    8. '[' → logprob: -18.75002670288086
    9. ' ' → logprob: -19.25002670288086
    10. '.Point' → logprob: -19.50002670288086

Token 3083: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004210059065371752
    2. '+=' → logprob: -6.629209995269775
    3. '*=' → logprob: -6.879209995269775
    4. '=' → logprob: -7.004209995269775
    5. '.extend' → logprob: -8.129210472106934
    6. 'append' → logprob: -8.629210472106934
    7. ' +=' → logprob: -8.754210472106934
    8. '.' → logprob: -8.754210472106934
    9. ' =' → logprob: -9.379210472106934
    10. ' *=' → logprob: -10.129210472106934

Token 3084: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.008129963040119e-06
    2. 'Points' → logprob: -12.500003814697266
    3. '(Point' → logprob: -15.750003814697266
    4. '(points' → logprob: -18.625003814697266
    5. '(
' → logprob: -19.875003814697266
    6. ' Points' → logprob: -20.875003814697266
    7. '_points' → logprob: -21.250003814697266
    8. 'The' → logprob: -21.625003814697266
    9. 'Point' → logprob: -21.625003814697266
    10. '(P' → logprob: -21.875003814697266

Token 3085: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -6.704273118884885e-07
    2. ' Points' → logprob: -14.500000953674316
    3. '(' → logprob: -16.625
    4. 'Point' → logprob: -19.375
    5. '_points' → logprob: -21.0
    6. 'points' → logprob: -21.0
    7. '[' → logprob: -21.5
    8. '0' → logprob: -22.125
    9. '(Point' → logprob: -22.125
    10. '   ' → logprob: -22.625

Token 3086: '[-' (ID: 17503)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04878561571240425
    2. 'Points' → logprob: -3.04878568649292
    3. '[' → logprob: -9.423785209655762
    4. ' Points' → logprob: -9.673785209655762
    5. '(Point' → logprob: -10.423785209655762
    6. '(-' → logprob: -11.673785209655762
    7. '0' → logprob: -11.923785209655762
    8. '_points' → logprob: -12.673785209655762
    9. ']' → logprob: -13.298785209655762
    10. '[-' → logprob: -13.923785209655762

Token 3087: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -19.25
    3. '```' → logprob: -20.5
    4. ']' → logprob: -21.5
    5. ' ' → logprob: -21.875
    6. '
' → logprob: -22.125
    7. '(' → logprob: -22.375
    8. '１' → logprob: -23.125
    9. '])' → logprob: -23.5
    10. '#' → logprob: -23.75

Token 3088: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002500271424651146
    2. '   ' → logprob: -6.002500057220459
    3. ')
' → logprob: -11.002500534057617
    4. '()' → logprob: -12.877500534057617
    5. '       ' → logprob: -13.002500534057617
    6. '[' → logprob: -14.127500534057617
    7. '())' → logprob: -14.377500534057617
    8. ']' → logprob: -14.627500534057617
    9. ' )' → logprob: -15.252500534057617
    10. 'def' → logprob: -15.377500534057617

Token 3089: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029785369988530874
    2. 'for' → logprob: -6.127978324890137
    3. '       ' → logprob: -8.002978324890137
    4. 'def' → logprob: -8.127978324890137
    5. 'Points' → logprob: -10.127978324890137
    6. '```' → logprob: -10.252978324890137
    7. '
' → logprob: -10.627978324890137
    8. 'points' → logprob: -11.002978324890137
    9. ' for' → logprob: -11.377978324890137
    10. '<|end|>' → logprob: -11.502978324890137

Token 3090: ' Points' (ID: 38086)
  Prédit: 'Points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' (adapté à ' Points') → logprob: -0.04899006709456444
    2. '   ' → logprob: -3.04899001121521
    3. ' Points' → logprob: -8.298990249633789
    4. '```' → logprob: -9.923990249633789
    5. '       ' → logprob: -10.298990249633789
    6. 'for' → logprob: -10.423990249633789
    7. 'def' → logprob: -11.423990249633789
    8. '_points' → logprob: -11.423990249633789
    9. 'points' → logprob: -12.048990249633789
    10. 'Point' → logprob: -12.423990249633789

Token 3091: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.62500286102295
    3. 'sort' → logprob: -13.75000286102295
    4. '.reverse' → logprob: -16.500001907348633
    5. '   ' → logprob: -18.000001907348633
    6. ' .' → logprob: -18.125001907348633
    7. '=' → logprob: -18.500001907348633
    8. '	sort' → logprob: -18.625001907348633
    9. '
' → logprob: -18.875001907348633
    10. '.Sort' → logprob: -19.750001907348633

Token 3092: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.003185436362400651
    2. 'key' → logprob: -5.753185272216797
    3. ',key' → logprob: -12.503185272216797
    4. '(lambda' → logprob: -13.003185272216797
    5. 'def' → logprob: -14.128185272216797
    6. '(' → logprob: -14.628185272216797
    7. '(reverse' → logprob: -15.378185272216797
    8. '(
' → logprob: -15.753185272216797
    9. ' key' → logprob: -16.378185272216797
    10. '()' → logprob: -17.003185272216797

Token 3093: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0011298557510599494
    2. '=' → logprob: -6.876129627227783
    3. 'lambda' → logprob: -9.751130104064941
    4. '(lambda' → logprob: -10.251130104064941
    5. '=
' → logprob: -13.376130104064941
    6. 'def' → logprob: -13.751130104064941
    7. 'key' → logprob: -15.501130104064941
    8. '(key' → logprob: -16.001129150390625
    9. '=None' → logprob: -16.126129150390625
    10. '```' → logprob: -16.376129150390625

Token 3094: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00317783304490149
    2. ' p' → logprob: -5.753177642822266
    3. 'lambda' → logprob: -16.003177642822266
    4. ' lambda' → logprob: -17.878177642822266
    5. ':' → logprob: -19.253177642822266
    6. '	p' → logprob: -19.378177642822266
    7. '_p' → logprob: -20.128177642822266
    8. 'c' → logprob: -21.253177642822266
    9. 'point' → logprob: -21.378177642822266
    10. '   ' → logprob: -21.753177642822266

Token 3095: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003515614429488778
    2. ':p' → logprob: -6.378515720367432
    3. 'p' → logprob: -6.628515720367432
    4. ' p' → logprob: -8.128515243530273
    5. ' :' → logprob: -8.753515243530273
    6. ':
' → logprob: -10.753515243530273
    7. '.p' → logprob: -12.503515243530273
    8. '   ' → logprob: -13.128515243530273
    9. ':px' → logprob: -13.628515243530273
    10. '=' → logprob: -13.753515243530273

Token 3096: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0009010965004563332
    2. ' p' → logprob: -7.500901222229004
    3. '(p' → logprob: -8.000901222229004
    4. '(' → logprob: -11.750901222229004
    5. ' (' → logprob: -12.250901222229004
    6. '(
' → logprob: -15.625901222229004
    7. '[p' → logprob: -18.125900268554688
    8. '	p' → logprob: -18.250900268554688
    9. '[' → logprob: -18.625900268554688
    10. '
' → logprob: -19.500900268554688

Token 3097: '.y' (ID: 4486)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0006566775846295059
    2. 'x' → logprob: -7.625656604766846
    3. '.p' → logprob: -9.375657081604004
    4. '.y' → logprob: -9.500657081604004
    5. 'p' → logprob: -12.125657081604004
    6. '.' → logprob: -12.750657081604004
    7. ':' → logprob: -15.375657081604004
    8. ' p' → logprob: -16.500656127929688
    9. 'y' → logprob: -16.750656127929688
    10. '.xy' → logprob: -16.750656127929688

Token 3098: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47445017099380493
    2. '       ' → logprob: -1.4744501113891602
    3. ')' → logprob: -2.22445011138916
    4. 'Points' → logprob: -3.34945011138916
    5. '   ' → logprob: -5.72445011138916
    6. '
' → logprob: -6.47445011138916
    7. ',' → logprob: -8.72445011138916
    8. '.Point' → logprob: -9.34945011138916
    9. '_points' → logprob: -9.59945011138916
    10. ' Points' → logprob: -9.59945011138916

Token 3099: '   ' (ID: 271)
  Prédit: 'Points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -0.5281711220741272
    2. '       ' → logprob: -0.9031711220741272
    3. '   ' → logprob: -5.778171062469482
    4. '```' → logprob: -6.528171062469482
    5. ' Points' → logprob: -8.40317153930664
    6. '_points' → logprob: -8.90317153930664
    7. '``' → logprob: -10.77817153930664
    8. '           ' → logprob: -11.27817153930664
    9. '     ' → logprob: -11.52817153930664
    10. '[' → logprob: -11.52817153930664

Token 3100: ' Points' (ID: 38086)
  Prédit: 'Points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' (adapté à ' Points') → logprob: -1.723973582556937e-05
    2. '```' → logprob: -11.625017166137695
    3. '   ' → logprob: -12.750017166137695
    4. ' Points' → logprob: -12.875017166137695
    5. '       ' → logprob: -13.125017166137695
    6. '_points' → logprob: -14.625017166137695
    7. '
' → logprob: -15.875017166137695
    8. 'Point' → logprob: -16.125017166137695
    9. '``' → logprob: -16.625017166137695
    10. '[' → logprob: -18.375017166137695

Token 3101: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -1.3544423381972592e-05
    2. 'Points' → logprob: -12.00001335144043
    3. '.reverse' → logprob: -12.87501335144043
    4. '.' → logprob: -14.00001335144043
    5. 'sort' → logprob: -14.12501335144043
    6. '.Point' → logprob: -14.12501335144043
    7. ' Points' → logprob: -14.25001335144043
    8. '_points' → logprob: -14.62501335144043
    9. '.points' → logprob: -15.12501335144043
    10. '
' → logprob: -15.37501335144043

Token 3102: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.026984797790646553
    2. 'key' → logprob: -3.776984691619873
    3. '(lambda' → logprob: -5.651984691619873
    4. 'lambda' → logprob: -8.776985168457031
    5. '(' → logprob: -11.026985168457031
    6. '=lambda' → logprob: -11.276985168457031
    7. '(
' → logprob: -11.651985168457031
    8. 'def' → logprob: -11.651985168457031
    9. ' key' → logprob: -11.776985168457031
    10. ',key' → logprob: -12.276985168457031

Token 3103: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0009103906922973692
    2. 'lambda' → logprob: -7.12591028213501
    3. '=' → logprob: -9.625910758972168
    4. '(lambda' → logprob: -10.250910758972168
    5. 'key' → logprob: -12.875910758972168
    6. 'ambda' → logprob: -14.375910758972168
    7. '(key' → logprob: -15.000910758972168
    8. 'def' → logprob: -15.500910758972168
    9. ' lambda' → logprob: -15.750910758972168
    10. '_lambda' → logprob: -16.00090980529785

Token 3104: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002043748099822551
    2. ' p' → logprob: -8.500204086303711
    3. 'lambda' → logprob: -14.000204086303711
    4. '	p' → logprob: -18.87520408630371
    5. '```' → logprob: -19.87520408630371
    6. '   ' → logprob: -20.37520408630371
    7. '<p' → logprob: -20.62520408630371
    8. ' lambda' → logprob: -20.75020408630371
    9. '
' → logprob: -21.25020408630371
    10. 'None' → logprob: -22.00020408630371

Token 3105: ':' (ID: 25)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.119259774684906
    2. '=' → logprob: -2.369259834289551
    3. ':' → logprob: -4.244259834289551
    4. 'lambda' → logprob: -5.744259834289551
    5. 'p' → logprob: -6.869259834289551
    6. '=p' → logprob: -8.99425983428955
    7. ' p' → logprob: -9.49425983428955
    8. 'ambda' → logprob: -10.74425983428955
    9. ' lambda' → logprob: -11.49425983428955
    10. 'def' → logprob: -11.61925983428955

Token 3106: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00026217024424113333
    2. 'lambda' → logprob: -8.500262260437012
    3. ' p' → logprob: -9.750262260437012
    4. ' lambda' → logprob: -14.875262260437012
    5. 'c' → logprob: -18.375261306762695
    6. '(lambda' → logprob: -18.500261306762695
    7. '<p' → logprob: -19.125261306762695
    8. '=lambda' → logprob: -19.375261306762695
    9. '(p' → logprob: -19.500261306762695
    10. '	p' → logprob: -19.750261306762695

Token 3107: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.5759979486465454
    2. 'x' → logprob: -0.8259979486465454
    3. 'def' → logprob: -9.950998306274414
    4. ' x' → logprob: -13.200998306274414
    5. '[' → logprob: -13.325998306274414
    6. '_x' → logprob: -13.450998306274414
    7. '   ' → logprob: -13.450998306274414
    8. '0' → logprob: -13.950998306274414
    9. '<x' → logprob: -14.200998306274414
    10. 's' → logprob: -14.575998306274414

Token 3108: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2147558331489563
    2. '<|end|>' → logprob: -1.9647557735443115
    3. ')' → logprob: -3.0897557735443115
    4. '       ' → logprob: -6.089756011962891
    5. '
' → logprob: -6.089756011962891
    6. ')
' → logprob: -7.339756011962891
    7. 'print' → logprob: -7.714756011962891
    8. '[' → logprob: -7.839756011962891
    9. 'def' → logprob: -8.21475601196289
    10. '  ' → logprob: -8.58975601196289

Token 3109: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38764581084251404
    2. '   ' → logprob: -1.1376458406448364
    3. 'for' → logprob: -8.012645721435547
    4. '```' → logprob: -8.637645721435547
    5. 'print' → logprob: -8.762645721435547
    6. '<|end|>' → logprob: -10.137645721435547
    7. '           ' → logprob: -10.387645721435547
    8. ' for' → logprob: -11.262645721435547
    9. 'def' → logprob: -11.387645721435547
    10. '[' → logprob: -12.887645721435547

Token 3110: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001435589394532144
    2. 'for' → logprob: -6.75143575668335
    3. '   ' → logprob: -8.251435279846191
    4. '       ' → logprob: -12.876435279846191
    5. '```' → logprob: -13.876435279846191
    6. ' print' → logprob: -14.376435279846191
    7. ' for' → logprob: -15.251435279846191
    8. '	print' → logprob: -16.626436233520508
    9. '``' → logprob: -17.626436233520508
    10. '
' → logprob: -17.751436233520508

Token 3111: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -5.383526149671525e-05
    2. '(' → logprob: -9.875053405761719
    3. '*' → logprob: -14.000053405761719
    4. '(*(' → logprob: -14.125053405761719
    5. '(
' → logprob: -14.500053405761719
    6. '(Point' → logprob: -15.625053405761719
    7. '((*' → logprob: -16.00005340576172
    8. 'Points' → logprob: -17.37505340576172
    9. '(P' → logprob: -17.50005340576172
    10. '(*)' → logprob: -18.50005340576172

Token 3112: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -1.9361264946837764e-07
    2. ' Points' → logprob: -16.375
    3. '[' → logprob: -18.375
    4. 'points' → logprob: -18.75
    5. 'Point' → logprob: -20.75
    6. '_points' → logprob: -20.875
    7. '
' → logprob: -23.875
    8. 'Pts' → logprob: -24.75
    9. '.Point' → logprob: -25.375
    10. '(' → logprob: -25.375

Token 3113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -13.87500286102295
    3. 'def' → logprob: -13.87500286102295
    4. '   ' → logprob: -14.50000286102295
    5. ' )' → logprob: -15.12500286102295
    6. '())' → logprob: -15.87500286102295
    7. ')

' → logprob: -15.87500286102295
    8. ')return' → logprob: -16.125003814697266
    9. '()' → logprob: -16.250003814697266
    10. ')#' → logprob: -16.625003814697266

Token 3114: '  

' (ID: 11691)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. '   ' → logprob: -14.750000953674316
    3. ' def' → logprob: -15.750000953674316
    4. 'return' → logprob: -15.875000953674316
    5. '```' → logprob: -17.25
    6. '
' → logprob: -18.25
    7. '``' → logprob: -19.375
    8. '#' → logprob: -19.875
    9. 'd' → logprob: -19.875
    10. 'de' → logprob: -20.625

Token 3115: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006520323222503066
    2. '   ' → logprob: -7.500651836395264
    3. 'return' → logprob: -9.250652313232422
    4. '```' → logprob: -12.875652313232422
    5. ' def' → logprob: -15.750652313232422
    6. '#' → logprob: -15.750652313232422
    7. '``' → logprob: -16.250652313232422
    8. '
' → logprob: -18.000652313232422
    9. ' return' → logprob: -19.000652313232422
    10. '       ' → logprob: -19.500652313232422

Token 3116: ' verify' (ID: 14866)
  Prédit: 'cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cross' → logprob: -0.4343716502189636
    2. 'verify' → logprob: -1.6843717098236084
    3. 'is' → logprob: -2.0593717098236084
    4. 'main' → logprob: -3.4343717098236084
    5. '__' → logprob: -5.809371471405029
    6. ' cross' → logprob: -6.559371471405029
    7. ' is' → logprob: -7.059371471405029
    8. 'def' → logprob: -7.309371471405029
    9. ' verify' → logprob: -8.059371948242188
    10. ' main' → logprob: -8.934371948242188

Token 3117: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000740538293030113
    2. '_cs' → logprob: -7.3757405281066895
    3. 'def' → logprob: -9.750741004943848
    4. '(' → logprob: -11.500741004943848
    5. '9' → logprob: -11.750741004943848
    6. '7' → logprob: -12.000741004943848
    7. '
' → logprob: -12.375741004943848
    8. '()' → logprob: -12.500741004943848
    9. '_CS' → logprob: -12.500741004943848
    10. '__' → logprob: -12.875741004943848

Token 3118: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.03328462317585945
    2. '3' → logprob: -4.408284664154053
    3. 'is' → logprob: -4.533284664154053
    4. 'cs' → logprob: -5.033284664154053
    5. '1' → logprob: -7.033284664154053
    6. 'cross' → logprob: -7.533284664154053
    7. '2' → logprob: -7.908284664154053
    8. '4' → logprob: -8.283284187316895
    9. '9' → logprob: -8.658284187316895
    10. '0' → logprob: -8.658284187316895

Token 3119: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.4378715455532074
    2. 'A' → logprob: -2.0628714561462402
    3. 'E' → logprob: -2.1878714561462402
    4. 'D' → logprob: -2.1878714561462402
    5. 'C' → logprob: -6.31287145614624
    6. 'B' → logprob: -7.31287145614624
    7. 'def' → logprob: -7.31287145614624
    8. 'G' → logprob: -10.687871932983398
    9. 'H' → logprob: -11.437871932983398
    10. 'I' → logprob: -11.937871932983398

Token 3120: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.011056899093091488
    2. '():
' → logprob: -4.511056900024414
    3. 'def' → logprob: -12.011056900024414
    4. ' ():' → logprob: -13.261056900024414
    5. '()' → logprob: -14.136056900024414
    6. '():
' → logprob: -14.511056900024414
    7. '():

' → logprob: -17.136056900024414
    8. 'Q' → logprob: -18.386056900024414
    9. ' def' → logprob: -19.136056900024414
    10. '#:' → logprob: -19.386056900024414

Token 3121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009995591826736927
    2. 'def' → logprob: -4.759995460510254
    3. 'Q' → logprob: -6.634995460510254
    4. 'pass' → logprob: -10.384995460510254
    5. 'c' → logprob: -11.759995460510254
    6. '#' → logprob: -11.884995460510254
    7. ' Q' → logprob: -12.384995460510254
    8. '```' → logprob: -12.384995460510254
    9. '   ' → logprob: -12.509995460510254
    10. ' def' → logprob: -12.884995460510254

Token 3122: ' px' (ID: 27003)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.012646670453250408
    2. 'c' → logprob: -4.512646675109863
    3. '   ' → logprob: -6.637646675109863
    4. 'pass' → logprob: -9.137646675109863
    5. 'def' → logprob: -9.262646675109863
    6. ' Q' → logprob: -9.512646675109863
    7. 'cx' → logprob: -12.262646675109863
    8. 'q' → logprob: -12.887646675109863
    9. ' c' → logprob: -13.887646675109863
    10. '	Q' → logprob: -14.637646675109863

Token 3123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.97024549683556e-05
    2. ' ,' → logprob: -10.250080108642578
    3. 'x' → logprob: -10.375080108642578
    4. ',p' → logprob: -11.500080108642578
    5. ',y' → logprob: -13.750080108642578
    6. 'y' → logprob: -14.375080108642578
    7. '=' → logprob: -15.000080108642578
    8. '_,' → logprob: -15.250080108642578
    9. ' =' → logprob: -15.625080108642578
    10. ',x' → logprob: -15.625080108642578

Token 3124: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.00012833021173719317
    2. ' py' → logprob: -9.000128746032715
    3. 'px' → logprob: -12.375128746032715
    4. 'p' → logprob: -15.500128746032715
    5. '_py' → logprob: -16.0001277923584
    6. 'ply' → logprob: -16.3751277923584
    7. '(py' → logprob: -16.7501277923584
    8. '.py' → logprob: -17.6251277923584
    9. 'ppy' → logprob: -17.8751277923584
    10. 'pty' → logprob: -18.8751277923584

Token 3125: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08993349224328995
    2. '=' → logprob: -3.089933395385742
    3. ' =' → logprob: -3.214933395385742
    4. ',p' → logprob: -8.339933395385742
    5. ' ,' → logprob: -9.839933395385742
    6. '   ' → logprob: -10.214933395385742
    7. 'x' → logprob: -13.089933395385742
    8. 'p' → logprob: -13.214933395385742
    9. ',map' → logprob: -13.339933395385742
    10. ',c' → logprob: -13.589933395385742

Token 3126: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.20141451060771942
    2. ' map' → logprob: -1.7014144659042358
    3. '   ' → logprob: -14.701414108276367
    4. '	map' → logprob: -14.951414108276367
    5. 'list' → logprob: -15.326414108276367
    6. '    ' → logprob: -16.951414108276367
    7. ',map' → logprob: -17.326414108276367
    8. 'point' → logprob: -17.701414108276367
    9. '(map' → logprob: -17.826414108276367
    10. 'input' → logprob: -18.326414108276367

Token 3127: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011636326089501381
    2. 'int' → logprob: -4.511636257171631
    3. '[int' → logprob: -8.511636734008789
    4. '<int' → logprob: -8.636636734008789
    5. '=int' → logprob: -8.761636734008789
    6. ',int' → logprob: -10.011636734008789
    7. ':int' → logprob: -12.636636734008789
    8. ' int' → logprob: -13.261636734008789
    9. ']int' → logprob: -14.011636734008789
    10. 'input' → logprob: -14.136636734008789

Token 3128: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.46579408645629883
    2. ',' → logprob: -1.5907940864562988
    3. '(input' → logprob: -1.8407940864562988
    4. 'input' → logprob: -5.090794086456299
    5. '(' → logprob: -6.465794086456299
    6. '(),' → logprob: -6.715794086456299
    7. '(int' → logprob: -7.590794086456299
    8. '=input' → logprob: -8.46579360961914
    9. ',int' → logprob: -9.09079360961914
    10. ' input' → logprob: -9.71579360961914

Token 3129: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.505351095460355e-05
    2. ' input' → logprob: -9.500075340270996
    3. 'int' → logprob: -16.37507438659668
    4. '=input' → logprob: -16.50007438659668
    5. '(input' → logprob: -18.12507438659668
    6. 'x' → logprob: -18.50007438659668
    7. 'p' → logprob: -18.62507438659668
    8. '<input' → logprob: -19.50007438659668
    9. '[input' → logprob: -19.50007438659668
    10. 'import' → logprob: -19.87507438659668

Token 3130: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.166338137816638e-05
    2. '(),' → logprob: -10.500031471252441
    3. '.split' → logprob: -13.250031471252441
    4. '()' → logprob: -13.625031471252441
    5. ',' → logprob: -15.375031471252441
    6. '[].' → logprob: -15.625031471252441
    7. ',input' → logprob: -16.250032424926758
    8. '()
' → logprob: -16.375032424926758
    9. '()[' → logprob: -16.375032424926758
    10. ' ().' → logprob: -16.500032424926758

Token 3131: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009195583988912404
    2. 'input' → logprob: -7.000919342041016
    3. 'plit' → logprob: -13.750919342041016
    4. 'print' → logprob: -13.875919342041016
    5. ' split' → logprob: -14.125919342041016
    6. 'p' → logprob: -14.250919342041016
    7. '.split' → logprob: -14.500919342041016
    8. 'py' → logprob: -14.750919342041016
    9. 'x' → logprob: -14.875919342041016
    10. 'pop' → logprob: -14.875919342041016

Token 3132: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7415732145309448
    2. '())
' → logprob: -0.7415732145309448
    3. '()' → logprob: -3.3665733337402344
    4. '()
' → logprob: -4.991573333740234
    5. ')' → logprob: -5.866573333740234
    6. '())' → logprob: -6.491573333740234
    7. '   ' → logprob: -6.491573333740234
    8. ')
' → logprob: -10.116573333740234
    9. '())
' → logprob: -10.741573333740234
    10. '(' → logprob: -11.491573333740234

Token 3133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28141769766807556
    2. 'c' → logprob: -1.531417727470398
    3. 'p' → logprob: -3.6564176082611084
    4. 'def' → logprob: -6.0314178466796875
    5. 'pass' → logprob: -7.6564178466796875
    6. '#' → logprob: -8.906417846679688
    7. ' c' → logprob: -9.531417846679688
    8. '	c' → logprob: -10.156417846679688
    9. '```' → logprob: -10.906417846679688
    10. ' p' → logprob: -11.031417846679688

Token 3134: ' cx' (ID: 44448)
  Prédit: 'cx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cx' (adapté à ' cx') → logprob: -0.4682080149650574
    2. 'c' → logprob: -1.2182080745697021
    3. 'cr' → logprob: -2.593208074569702
    4. 'r' → logprob: -6.468207836151123
    5. 'p' → logprob: -6.968207836151123
    6. 'x' → logprob: -8.218208312988281
    7. '   ' → logprob: -8.343208312988281
    8. 'def' → logprob: -9.468208312988281
    9. ' cx' → logprob: -9.968208312988281
    10. 'px' → logprob: -9.968208312988281

Token 3135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9385402993066236e-05
    2. ' ,' → logprob: -11.875019073486328
    3. ',c' → logprob: -12.500019073486328
    4. '=' → logprob: -12.750019073486328
    5. 'cy' → logprob: -12.750019073486328
    6. '_,' → logprob: -14.125019073486328
    7. '#' → logprob: -14.750019073486328
    8. 'def' → logprob: -14.875019073486328
    9. ',
' → logprob: -15.125019073486328
    10. 'c' → logprob: -15.125019073486328

Token 3136: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -7.465036105713807e-06
    2. ' cy' → logprob: -12.000007629394531
    3. 'cyj' → logprob: -13.875007629394531
    4. 'c' → logprob: -16.50000762939453
    5. 'cych' → logprob: -17.00000762939453
    6. '.cy' → logprob: -17.75000762939453
    7. 'cycl' → logprob: -18.62500762939453
    8. 'cx' → logprob: -18.87500762939453
    9. '<|end|>' → logprob: -18.87500762939453
    10. 'ct' → logprob: -18.87500762939453

Token 3137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ',c' → logprob: -12.000011444091797
    3. ' ,' → logprob: -12.500011444091797
    4. '=' → logprob: -13.625011444091797
    5. '   ' → logprob: -16.000011444091797
    6. 'c' → logprob: -16.750011444091797
    7. ',r' → logprob: -17.125011444091797
    8. '_,' → logprob: -17.250011444091797
    9. ' =' → logprob: -17.625011444091797
    10. ',p' → logprob: -18.000011444091797

Token 3138: ' cr' (ID: 1769)
  Prédit: 'cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cr' → logprob: -0.0012376103550195694
    2. 'cy' → logprob: -7.001237392425537
    3. 'cx' → logprob: -9.501237869262695
    4. 'c' → logprob: -10.126237869262695
    5. ' cr' → logprob: -10.126237869262695
    6. 'cro' → logprob: -10.126237869262695
    7. 'cc' → logprob: -10.626237869262695
    8. 'cs' → logprob: -10.626237869262695
    9. 'csr' → logprob: -11.501237869262695
    10. 'cu' → logprob: -11.626237869262695

Token 3139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.050669971853494644
    2. ' =' → logprob: -3.0506699085235596
    3. ',' → logprob: -6.175670146942139
    4. ' ,' → logprob: -14.92566967010498
    5. '=
' → logprob: -15.30066967010498
    6. ',r' → logprob: -15.55066967010498
    7. '   ' → logprob: -17.050670623779297
    8. ' ' → logprob: -17.175670623779297
    9. '＝' → logprob: -17.175670623779297
    10. ',c' → logprob: -17.300670623779297

Token 3140: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07888978719711304
    2. ' map' → logprob: -2.578889846801758
    3. '	map' → logprob: -17.828889846801758
    4. '(map' → logprob: -18.328889846801758
    5. '.map' → logprob: -19.828889846801758
    6. '_map' → logprob: -19.828889846801758
    7. ',map' → logprob: -20.078889846801758
    8. 'input' → logprob: -20.578889846801758
    9. 'list' → logprob: -20.703889846801758
    10. '-map' → logprob: -21.078889846801758

Token 3141: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.836499985889532e-05
    2. 'map' → logprob: -10.5000581741333
    3. '(int' → logprob: -10.5000581741333
    4. '[int' → logprob: -13.2500581741333
    5. '=int' → logprob: -13.5000581741333
    6. ' int' → logprob: -16.250059127807617
    7. '<int' → logprob: -18.750059127807617
    8. ':int' → logprob: -18.750059127807617
    9. 'ints' → logprob: -19.375059127807617
    10. 'input' → logprob: -20.250059127807617

Token 3142: ',' (ID: 11)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1835833638906479
    2. '(int' → logprob: -2.4335832595825195
    3. '=int' → logprob: -2.6835832595825195
    4. 'map' → logprob: -5.1835832595825195
    5. 'input' → logprob: -6.5585832595825195
    6. '(input' → logprob: -6.6835832595825195
    7. '[int' → logprob: -6.8085832595825195
    8. ',int' → logprob: -6.9335832595825195
    9. '=input' → logprob: -7.9335832595825195
    10. '<int' → logprob: -8.05858325958252

Token 3143: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0007099286303855479
    2. ' map' → logprob: -7.2507100105285645
    3. 'input' → logprob: -17.000709533691406
    4. 'int' → logprob: -19.750709533691406
    5. '   ' → logprob: -20.250709533691406
    6. '	map' → logprob: -20.875709533691406
    7. '(map' → logprob: -21.125709533691406
    8. 'list' → logprob: -21.250709533691406
    9. 'maps' → logprob: -21.500709533691406
    10. 'm' → logprob: -21.625709533691406

Token 3144: '().' (ID: 1454)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.218901515007019
    2. '(),' → logprob: -1.468901515007019
    3. ',map' → logprob: -2.0939016342163086
    4. '(map' → logprob: -2.3439016342163086
    5. 'map' → logprob: -2.4689016342163086
    6. '(input' → logprob: -3.0939016342163086
    7. ',input' → logprob: -3.0939016342163086
    8. '=input' → logprob: -3.9689016342163086
    9. '=' → logprob: -4.593901634216309
    10. ',' → logprob: -4.968901634216309

Token 3145: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.65707261255011e-06
    2. 'skip' → logprob: -12.625008583068848
    3. 'spl' → logprob: -13.875008583068848
    4. 'sup' → logprob: -14.250008583068848
    5. '(split' → logprob: -14.875008583068848
    6. '_split' → logprob: -14.875008583068848
    7. 'tuple' → logprob: -15.125008583068848
    8. 'load' → logprob: -15.125008583068848
    9. 'map' → logprob: -15.625008583068848
    10. 'decode' → logprob: -15.625008583068848

Token 3146: '())
' (ID: 4574)
  Prédit: '())
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.3139822483062744
    2. ')
' → logprob: -1.3139822483062744
    3. '()' → logprob: -8.563982009887695
    4. '   ' → logprob: -8.938982009887695
    5. '()
' → logprob: -9.063982009887695
    6. ')' → logprob: -9.063982009887695
    7. '())' → logprob: -9.313982009887695
    8. '(),' → logprob: -10.938982009887695
    9. '),' → logprob: -11.188982009887695
    10. '())
' → logprob: -11.813982009887695

Token 3147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48213517665863037
    2. 'c' → logprob: -0.9821351766586304
    3. 'p' → logprob: -4.85713529586792
    4. 'def' → logprob: -9.232134819030762
    5. ' c' → logprob: -9.732134819030762
    6. '	c' → logprob: -9.982134819030762
    7. '```' → logprob: -10.982134819030762
    8. '#' → logprob: -11.482134819030762
    9. ' p' → logprob: -11.607134819030762
    10. '
' → logprob: -11.857134819030762

Token 3148: ' Points' (ID: 38086)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01993231475353241
    2. '   ' → logprob: -4.019932270050049
    3. 'p' → logprob: -6.519932270050049
    4. ' c' → logprob: -8.644932746887207
    5. '	c' → logprob: -9.394932746887207
    6. 'def' → logprob: -10.894932746887207
    7. '
' → logprob: -11.144932746887207
    8. '```' → logprob: -11.894932746887207
    9. '#' → logprob: -12.644932746887207
    10. ' p' → logprob: -13.894932746887207

Token 3149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. '=c' → logprob: -15.724077224731445
    4. ',' → logprob: -17.099077224731445
    5. ' ' → logprob: -17.474077224731445
    6. '   ' → logprob: -17.724077224731445
    7. '＝' → logprob: -17.849077224731445
    8. '=[]' → logprob: -18.099077224731445
    9. '=C' → logprob: -18.224077224731445
    10. ')' → logprob: -18.349077224731445

Token 3150: ' tangent' (ID: 149281)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0010972379241138697
    2. 'cross' → logprob: -6.876097202301025
    3. ' tangent' → logprob: -10.251097679138184
    4. '[t' → logprob: -11.251097679138184
    5. '   ' → logprob: -12.626097679138184
    6. ' t' → logprob: -12.876097679138184
    7. ' cross' → logprob: -13.001097679138184
    8. '(t' → logprob: -13.126097679138184
    9. '	t' → logprob: -13.376097679138184
    10. 'c' → logprob: -13.501097679138184

Token 3151: '_cp' (ID: 96857)
  Prédit: '_cp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cp' → logprob: -1.9361264946837764e-07
    2. '_CP' → logprob: -17.25
    3. '_cc' → logprob: -17.375
    4. '_c' → logprob: -17.75
    5. '_pc' → logprob: -18.125
    6. 'cp' → logprob: -18.125
    7. '_cm' → logprob: -18.5
    8. '(cp' → logprob: -18.875
    9. '	cp' → logprob: -19.125
    10. '_cd' → logprob: -19.5

Token 3152: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.002376842312514782
    2. '(c' → logprob: -6.752377033233643
    3. '(' → logprob: -7.877377033233643
    4. 'Circle' → logprob: -8.127376556396484
    5. '((' → logprob: -8.502376556396484
    6. '(Point' → logprob: -8.752376556396484
    7. 'C' → logprob: -10.127376556396484
    8. ' (' → logprob: -10.127376556396484
    9. 'c' → logprob: -10.752376556396484
    10. '(circle' → logprob: -11.502376556396484

Token 3153: 'ircle' (ID: 10986)
  Prédit: 'ircle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircle' → logprob: -0.00034869377850554883
    2. 'Circle' → logprob: -8.000349044799805
    3. 'circle' → logprob: -12.500349044799805
    4. '(C' → logprob: -13.125349044799805
    5. '.Circle' → logprob: -13.375349044799805
    6. 'irc' → logprob: -13.500349044799805
    7. '(circle' → logprob: -13.875349044799805
    8. 'ircular' → logprob: -14.375349044799805
    9. 'Point' → logprob: -14.625349044799805
    10. '(Point' → logprob: -15.000349044799805

Token 3154: '(Point' (ID: 72072)
  Prédit: '(Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.00039659533649683
    2. 'Point' → logprob: -8.375396728515625
    3. ')' → logprob: -9.500396728515625
    4. '(C' → logprob: -9.875396728515625
    5. ')(' → logprob: -11.250396728515625
    6. '(' → logprob: -12.250396728515625
    7. '(
' → logprob: -12.625396728515625
    8. 'Circle' → logprob: -12.625396728515625
    9. '```' → logprob: -12.625396728515625
    10. '	Point' → logprob: -13.125396728515625

Token 3155: '(cx' (ID: 116103)
  Prédit: '(cx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cx' → logprob: -0.023505648598074913
    2. 'cx' → logprob: -3.773505687713623
    3. '.cx' → logprob: -8.523505210876465
    4. 'Point' → logprob: -10.023505210876465
    5. '(px' → logprob: -12.148505210876465
    6. ' cx' → logprob: -12.773505210876465
    7. '(Point' → logprob: -12.773505210876465
    8. 'px' → logprob: -13.023505210876465
    9. 'Cx' → logprob: -13.398505210876465
    10. ')' → logprob: -14.148505210876465

Token 3156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006772888009436429
    2. ' ,' → logprob: -8.000677108764648
    3. 'cy' → logprob: -8.125677108764648
    4. ',c' → logprob: -11.250677108764648
    5. ',y' → logprob: -11.250677108764648
    6. '<|end|>' → logprob: -12.250677108764648
    7. ',
' → logprob: -12.375677108764648
    8. '(' → logprob: -12.625677108764648
    9. 'c' → logprob: -13.500677108764648
    10. '‌,' → logprob: -13.875677108764648

Token 3157: ' cy' (ID: 5504)
  Prédit: 'cy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cy' → logprob: -0.0007115975022315979
    2. ' cy' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.000711441040039
    4. '.cy' → logprob: -15.250711441040039
    5. 'cyj' → logprob: -15.625711441040039
    6. ' ' → logprob: -15.875711441040039
    7. 'cycl' → logprob: -16.00071144104004
    8. 'py' → logprob: -17.00071144104004
    9. 'c' → logprob: -17.12571144104004
    10. '	c' → logprob: -17.12571144104004

Token 3158: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11527126282453537
    2. ',' → logprob: -2.2402713298797607
    3. '(c' → logprob: -6.740271091461182
    4. '(cx' → logprob: -7.365271091461182
    5. '(cr' → logprob: -8.86527156829834
    6. '(px' → logprob: -8.99027156829834
    7. '(p' → logprob: -9.36527156829834
    8. '(py' → logprob: -9.74027156829834
    9. '   ' → logprob: -10.11527156829834
    10. '(Point' → logprob: -10.36527156829834

Token 3159: ' cr' (ID: 1769)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.00035072024911642075
    2. 'px' → logprob: -8.250350952148438
    3. 'p' → logprob: -10.250350952148438
    4. ' Point' → logprob: -10.375350952148438
    5. 'py' → logprob: -10.750350952148438
    6. '(Point' → logprob: -14.250350952148438
    7. '   ' → logprob: -15.375350952148438
    8. '	Point' → logprob: -16.000350952148438
    9. 'cr' → logprob: -16.625350952148438
    10. '```' → logprob: -16.750350952148438

Token 3160: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014702707529067993
    2. '(Point' → logprob: -4.264702796936035
    3. ' ,' → logprob: -8.014702796936035
    4. '),' → logprob: -8.764702796936035
    5. '   ' → logprob: -10.514702796936035
    6. ',
' → logprob: -12.764702796936035
    7. ')' → logprob: -12.764702796936035
    8. '(),' → logprob: -12.764702796936035
    9. 'Point' → logprob: -13.389702796936035
    10. '(' → logprob: -13.389702796936035

Token 3161: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.547789674485102e-05
    2. ' Point' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.750036239624023
    4. '	Point' → logprob: -17.250036239624023
    5. '(Point' → logprob: -20.375036239624023
    6. '_Point' → logprob: -21.500036239624023
    7. '_point' → logprob: -21.750036239624023
    8. 'Points' → logprob: -22.250036239624023
    9. '<Point' → logprob: -23.000036239624023
    10. '
' → logprob: -23.375036239624023

Token 3162: '(px' (ID: 195026)
  Prédit: '(px'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(px' → logprob: -3.531315314830863e-06
    2. '(py' → logprob: -13.000003814697266
    3. 'px' → logprob: -14.250003814697266
    4. '(' → logprob: -15.250003814697266
    5. '(
' → logprob: -16.000003814697266
    6. '(mx' → logprob: -17.125003814697266
    7. ' (' → logprob: -17.250003814697266
    8. ':px' → logprob: -17.250003814697266
    9. '(nx' → logprob: -17.875003814697266
    10. '(pm' → logprob: -18.500003814697266

Token 3163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033218422904610634
    2. 'px' → logprob: -6.378321647644043
    3. '(px' → logprob: -6.878321647644043
    4. ' ,' → logprob: -7.878321647644043
    5. '   ' → logprob: -9.253321647644043
    6. ' px' → logprob: -10.128321647644043
    7. 'py' → logprob: -11.003321647644043
    8. '(py' → logprob: -11.128321647644043
    9. '_px' → logprob: -11.128321647644043
    10. ',p' → logprob: -11.503321647644043

Token 3164: ' py' (ID: 13104)
  Prédit: 'py'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'py' → logprob: -0.0001249925117008388
    2. ' py' → logprob: -9.00012493133545
    3. '(py' → logprob: -13.75012493133545
    4. '_py' → logprob: -15.12512493133545
    5. 'px' → logprob: -15.75012493133545
    6. 'ply' → logprob: -15.87512493133545
    7. '.py' → logprob: -18.750125885009766
    8. 'Py' → logprob: -18.875125885009766
    9. '   ' → logprob: -19.000125885009766
    10. '
' → logprob: -19.375125885009766

Token 3165: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03311488404870033
    2. ')
' → logprob: -3.7831149101257324
    3. '   ' → logprob: -4.658114910125732
    4. '))' → logprob: -8.158114433288574
    5. ')
' → logprob: -10.533114433288574
    6. '))
' → logprob: -11.908114433288574
    7. ' )' → logprob: -12.283114433288574
    8. ')))' → logprob: -12.533114433288574
    9. '  ' → logprob: -13.033114433288574
    10. ')#' → logprob: -14.033114433288574

Token 3166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2233183042553719e-05
    2. 'for' → logprob: -11.625012397766113
    3. ' for' → logprob: -13.750012397766113
    4. '       ' → logprob: -14.125012397766113
    5. 'print' → logprob: -14.375012397766113
    6. '<|end|>' → logprob: -15.125012397766113
    7. '[' → logprob: -15.500012397766113
    8. 'def' → logprob: -16.125011444091797
    9. '```' → logprob: -16.250011444091797
    10. '	for' → logprob: -16.625011444091797

Token 3167: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04491093382239342
    2. 'print' → logprob: -3.4199109077453613
    3. '   ' → logprob: -4.794910907745361
    4. 'if' (adapté à ' if') → logprob: -6.044910907745361
    5. ' for' → logprob: -7.544910907745361
    6. '	for' → logprob: -11.29491138458252
    7. ' if' → logprob: -11.91991138458252
    8. '<|end|>' → logprob: -12.54491138458252
    9. '
' → logprob: -13.41991138458252
    10. '       ' → logprob: -13.41991138458252

Token 3168: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0001129602751461789
    2. ' len' → logprob: -9.125112533569336
    3. '(len' → logprob: -13.000112533569336
    4. 'Points' → logprob: -13.500112533569336
    5. 'not' → logprob: -16.000112533569336
    6. 'points' → logprob: -17.375112533569336
    7. 'length' → logprob: -17.375112533569336
    8. '	len' → logprob: -17.375112533569336
    9. 'Len' → logprob: -17.625112533569336
    10. '   ' → logprob: -17.625112533569336

Token 3169: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.392202976712724e-06
    2. 'Points' → logprob: -12.000006675720215
    3. '==' → logprob: -15.750006675720215
    4. '(points' → logprob: -16.8750057220459
    5. '(Point' → logprob: -17.7500057220459
    6. '(
' → logprob: -18.0000057220459
    7. ' (' → logprob: -18.5000057220459
    8. '_points' → logprob: -19.6250057220459
    9. ')' → logprob: -19.7500057220459
    10. '```' → logprob: -20.0000057220459

Token 3170: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -1.9361264946837764e-07
    2. ' Points' → logprob: -16.75
    3. 'points' → logprob: -19.375
    4. '_points' → logprob: -20.25
    5. '(' → logprob: -20.375
    6. '[' → logprob: -20.375
    7. 'Point' → logprob: -22.75
    8. '_POINTS' → logprob: -22.75
    9. '   ' → logprob: -23.125
    10. '0' → logprob: -23.5

Token 3171: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14549100399017334
    2. ')' → logprob: -2.645491123199463
    3. ' ==' → logprob: -2.770491123199463
    4. ')==' → logprob: -6.520491123199463
    5. '<' → logprob: -8.520490646362305
    6. '   ' → logprob: -10.270490646362305
    7. ' <' → logprob: -10.520490646362305
    8. '()' → logprob: -11.270490646362305
    9. '()==' → logprob: -11.270490646362305
    10. '!=' → logprob: -11.645490646362305

Token 3172: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4350368082523346
    2. ' ==' → logprob: -1.0600367784500122
    3. '<' → logprob: -5.685036659240723
    4. ' <' → logprob: -6.810036659240723
    5. ')' → logprob: -7.310036659240723
    6. ' !=' → logprob: -7.810036659240723
    7. '   ' → logprob: -7.810036659240723
    8. '!=' → logprob: -8.685036659240723
    9. '<len' → logprob: -9.935036659240723
    10. ')==' → logprob: -10.060036659240723

Token 3173: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002231140388175845
    2. ' ' → logprob: -6.752231121063232
    3. '2' → logprob: -6.877231121063232
    4. '0' → logprob: -10.75223159790039
    5. '```' → logprob: -12.25223159790039
    6. '   ' → logprob: -13.12723159790039
    7. '(' → logprob: -14.87723159790039
    8. '
' → logprob: -15.62723159790039
    9. '[' → logprob: -16.12723159790039
    10. '  ' → logprob: -16.12723159790039

Token 3174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020592445798683912
    2. '0' → logprob: -8.625205993652344
    3. '2' → logprob: -10.625205993652344
    4. ' ' → logprob: -13.500205993652344
    5. '```' → logprob: -15.250205993652344
    6. 'Points' → logprob: -16.500205993652344
    7. '   ' → logprob: -16.625205993652344
    8. '۱' → logprob: -17.500205993652344
    9. '１' → logprob: -18.062705993652344
    10. '
' → logprob: -18.312705993652344

Token 3175: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3017093241214752
    2. ':
' → logprob: -1.9267092943191528
    3. ':' → logprob: -2.5517094135284424
    4. '   ' → logprob: -3.4267094135284424
    5. '<|end|>' → logprob: -6.301709175109863
    6. '           ' → logprob: -7.676709175109863
    7. '):
' → logprob: -8.176709175109863
    8. '[' → logprob: -8.176709175109863
    9. '{
' → logprob: -8.426709175109863
    10. '```' → logprob: -8.676709175109863

Token 3176: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25283417105674744
    2. '   ' → logprob: -1.5028342008590698
    3. '	' → logprob: -8.00283432006836
    4. '[' → logprob: -8.62783432006836
    5. 'Points' → logprob: -9.50283432006836
    6. '	   ' → logprob: -10.25283432006836
    7. ':' → logprob: -10.37783432006836
    8. ':
' → logprob: -10.37783432006836
    9. ' Points' → logprob: -10.37783432006836
    10. '<|end|>' → logprob: -10.50283432006836

Token 3177: ' Points' (ID: 38086)
  Prédit: ' Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Points' → logprob: -0.2023458182811737
    2. 'Points' (adapté à ' Points') → logprob: -1.702345848083496
    3. '   ' → logprob: -7.327345848083496
    4. '       ' → logprob: -8.327345848083496
    5. ' points' → logprob: -11.327345848083496
    6. '    ' → logprob: -11.452345848083496
    7. '_points' → logprob: -12.327345848083496
    8. 'Point' → logprob: -13.077345848083496
    9. ' Point' → logprob: -13.827345848083496
    10. '.Point' → logprob: -13.952345848083496

Token 3178: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00043734462815336883
    2. '.' → logprob: -7.750437259674072
    3. 'append' → logprob: -12.50043773651123
    4. '.extend' → logprob: -14.00043773651123
    5. '.Append' → logprob: -14.75043773651123
    6. '.app' → logprob: -15.00043773651123
    7. '.setdefault' → logprob: -15.12543773651123
    8. '<|end|>' → logprob: -15.62543773651123
    9. 'appen' → logprob: -15.87543773651123
    10. ').' → logprob: -16.125436782836914

Token 3179: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9146995327901095e-05
    2. 'Points' → logprob: -10.875019073486328
    3. '(Point' → logprob: -15.625019073486328
    4. ' Points' → logprob: -16.750019073486328
    5. ' (' → logprob: -17.625019073486328
    6. '(
' → logprob: -18.375019073486328
    7. '(points' → logprob: -18.875019073486328
    8. '_points' → logprob: -20.250019073486328
    9. '(P' → logprob: -20.750019073486328
    10. '
' → logprob: -21.125019073486328

Token 3180: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -1.9361264946837764e-07
    2. ' Points' → logprob: -16.5
    3. '(' → logprob: -20.625
    4. 'Point' → logprob: -21.0
    5. '_points' → logprob: -21.375
    6. 'points' → logprob: -23.5
    7. '[' → logprob: -24.5
    8. 'Tokens' → logprob: -24.5
    9. '_POINTS' → logprob: -24.75
    10. '.Point' → logprob: -25.0

Token 3181: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -12.87500286102295
    3. '(-' → logprob: -16.375001907348633
    4. '([-' → logprob: -16.500001907348633
    5. '[
' → logprob: -17.000001907348633
    6. 'Points' → logprob: -19.125001907348633
    7. '[:-' → logprob: -19.250001907348633
    8. ')' → logprob: -19.875001907348633
    9. '
' → logprob: -20.125001907348633
    10. '`' → logprob: -20.375001907348633

Token 3182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. ']' → logprob: -19.875
    4. '0' → logprob: -20.125
    5. '
' → logprob: -20.875
    6. '(' → logprob: -20.875
    7. '１' → logprob: -21.625
    8. '```' → logprob: -22.125
    9. '])' → logprob: -22.5
    10. ')' → logprob: -23.75

Token 3183: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004889196716248989
    2. ')
' → logprob: -5.754889011383057
    3. '   ' → logprob: -6.379889011383057
    4. '()' → logprob: -12.129889488220215
    5. '())' → logprob: -12.879889488220215
    6. ')
' → logprob: -13.504889488220215
    7. '       ' → logprob: -13.629889488220215
    8. 'def' → logprob: -13.879889488220215
    9. '[' → logprob: -14.129889488220215
    10. ')return' → logprob: -14.879889488220215

Token 3184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007133754901587963
    2. '```' → logprob: -5.257133960723877
    3. '[' → logprob: -7.132133960723877
    4. '<|end|>' → logprob: -8.007133483886719
    5. '       ' → logprob: -8.507133483886719
    6. ')' → logprob: -8.632133483886719
    7. '``' → logprob: -8.882133483886719
    8. '[]' → logprob: -9.507133483886719
    9. '    
' → logprob: -9.757133483886719
    10. '
' → logprob: -10.757133483886719

Token 3185: ' Points' (ID: 38086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038409291300922632
    2. '       ' → logprob: -5.628840923309326
    3. '```' → logprob: -8.628841400146484
    4. 'Points' (adapté à ' Points') → logprob: -10.128841400146484
    5. '[' → logprob: -12.253841400146484
    6. 'for' → logprob: -12.378841400146484
    7. '``' → logprob: -12.878841400146484
    8. 'points' → logprob: -13.253841400146484
    9. '[]' → logprob: -13.378841400146484
    10. 'def' → logprob: -13.878841400146484

Token 3186: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001040671137161553
    2. 'sort' → logprob: -7.376040458679199
    3. '.' → logprob: -8.0010404586792
    4. '=' → logprob: -11.0010404586792
    5. '.append' → logprob: -11.0010404586792
    6. ')' → logprob: -11.2510404586792
    7. '   ' → logprob: -12.0010404586792
    8. ':' → logprob: -12.1260404586792
    9. 'print' → logprob: -12.1260404586792
    10. '.print' → logprob: -12.5010404586792

Token 3187: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -7.469590491382405e-05
    2. 'key' → logprob: -9.87507438659668
    3. '()' → logprob: -11.25007438659668
    4. '(reverse' → logprob: -12.50007438659668
    5. '(lambda' → logprob: -12.75007438659668
    6. '()
' → logprob: -13.87507438659668
    7. '(' → logprob: -13.87507438659668
    8. '(
' → logprob: -14.25007438659668
    9. ',key' → logprob: -15.12507438659668
    10. 'def' → logprob: -15.62507438659668

Token 3188: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.005295188166201115
    2. '=' → logprob: -5.255295276641846
    3. '(lambda' → logprob: -10.255294799804688
    4. 'lambda' → logprob: -10.755294799804688
    5. '=
' → logprob: -13.130294799804688
    6. '(' → logprob: -14.130294799804688
    7. '(key' → logprob: -14.255294799804688
    8. 'def' → logprob: -15.380294799804688
    9. 'key' → logprob: -15.505294799804688
    10. '```' → logprob: -15.505294799804688

Token 3189: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011279946193099022
    2. ' p' → logprob: -4.511280059814453
    3. 'lambda' → logprob: -8.511280059814453
    4. ' lambda' → logprob: -10.386280059814453
    5. '=lambda' → logprob: -17.511280059814453
    6. '   ' → logprob: -19.011280059814453
    7. '(lambda' → logprob: -19.136280059814453
    8. '	p' → logprob: -19.511280059814453
    9. '```' → logprob: -19.636280059814453
    10. 'l' → logprob: -19.886280059814453

Token 3190: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009420731803402305
    2. 'p' → logprob: -7.875942230224609
    3. ':p' → logprob: -8.12594223022461
    4. ' :' → logprob: -9.62594223022461
    5. ' p' → logprob: -9.75094223022461
    6. '=lambda' → logprob: -10.00094223022461
    7. '.p' → logprob: -10.12594223022461
    8. '=' → logprob: -10.87594223022461
    9. ':
' → logprob: -11.37594223022461
    10. 'lambda' → logprob: -12.62594223022461

Token 3191: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0033785225823521614
    2. 'lambda' → logprob: -6.378378391265869
    3. '(lambda' → logprob: -6.753378391265869
    4. '(p' → logprob: -8.378378868103027
    5. ' p' → logprob: -8.503378868103027
    6. ' lambda' → logprob: -10.753378868103027
    7. '(' → logprob: -10.753378868103027
    8. ' (' → logprob: -11.253378868103027
    9. 'x' → logprob: -11.503378868103027
    10. 'y' → logprob: -12.253378868103027

Token 3192: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.16959741711616516
    2. 'y' → logprob: -1.9195973873138428
    3. 'x' → logprob: -5.544597625732422
    4. '.x' → logprob: -6.044597625732422
    5. ':' → logprob: -6.794597625732422
    6. ':y' → logprob: -6.919597625732422
    7. 'p' → logprob: -7.419597625732422
    8. '.p' → logprob: -8.294597625732422
    9. ',y' → logprob: -10.544597625732422
    10. '.' → logprob: -10.919597625732422

Token 3193: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.578346312046051
    2. ')
' → logprob: -1.4533462524414062
    3. '       ' → logprob: -2.2033462524414062
    4. ')' → logprob: -2.4533462524414062
    5. 'Points' → logprob: -5.578346252441406
    6. '[' → logprob: -6.453346252441406
    7. ',' → logprob: -6.703346252441406
    8. '
' → logprob: -7.328346252441406
    9. '```' → logprob: -8.578346252441406
    10. 'def' → logprob: -8.703346252441406

Token 3194: '   ' (ID: 271)
  Prédit: '.Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Point' → logprob: -1.045189380645752
    2. '.sort' → logprob: -1.170189380645752
    3. '```' → logprob: -1.920189380645752
    4. 'Points' → logprob: -2.545189380645752
    5. '.' → logprob: -3.170189380645752
    6. '[' → logprob: -3.670189380645752
    7. '   ' → logprob: -4.670189380645752
    8. '_points' → logprob: -5.295189380645752
    9. '.Sort' → logprob: -5.545189380645752
    10. '``' → logprob: -5.545189380645752

Token 3195: ' Points' (ID: 38086)
  Prédit: 'Points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' (adapté à ' Points') → logprob: -0.04342194274067879
    2. '```' → logprob: -3.418421983718872
    3. ' Points' → logprob: -5.543421745300293
    4. '   ' → logprob: -6.293421745300293
    5. '``' → logprob: -6.668421745300293
    6. '`' → logprob: -6.793421745300293
    7. '       ' → logprob: -6.918421745300293
    8. '_points' → logprob: -8.168421745300293
    9. '[' → logprob: -8.793421745300293
    10. 'Point' → logprob: -10.293421745300293

Token 3196: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -3.702754474943504e-05
    2. '   ' → logprob: -11.00003719329834
    3. 'sort' → logprob: -12.25003719329834
    4. 'Points' → logprob: -12.87503719329834
    5. '.Point' → logprob: -13.12503719329834
    6. ' Points' → logprob: -13.25003719329834
    7. '.' → logprob: -13.50003719329834
    8. '
' → logprob: -13.87503719329834
    9. 'def' → logprob: -14.00003719329834
    10. '.sorted' → logprob: -14.00003719329834

Token 3197: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.3870569169521332
    2. '(lambda' → logprob: -1.3870569467544556
    3. '=lambda' → logprob: -3.012056827545166
    4. 'lambda' → logprob: -4.012056827545166
    5. 'key' → logprob: -5.637056827545166
    6. 'def' → logprob: -9.637057304382324
    7. ',key' → logprob: -9.637057304382324
    8. '
' → logprob: -10.762057304382324
    9. '[key' → logprob: -10.762057304382324
    10. '_lambda' → logprob: -10.887057304382324

Token 3198: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00021927160560153425
    2. '=' → logprob: -8.500219345092773
    3. 'lambda' → logprob: -11.125219345092773
    4. '(lambda' → logprob: -14.000219345092773
    5. '=
' → logprob: -16.125219345092773
    6. 'ambda' → logprob: -17.125219345092773
    7. '_lambda' → logprob: -17.500219345092773
    8. '=None' → logprob: -18.000219345092773
    9. '```' → logprob: -18.875219345092773
    10. '=l' → logprob: -19.000219345092773

Token 3199: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.779520092299208e-05
    2. ' p' → logprob: -9.500078201293945
    3. 'lambda' → logprob: -12.750078201293945
    4. '	p' → logprob: -19.250078201293945
    5. ')p' → logprob: -19.250078201293945
    6. ')' → logprob: -20.375078201293945
    7. '```' → logprob: -21.125078201293945
    8. '   ' → logprob: -21.125078201293945
    9. ' lambda' → logprob: -21.250078201293945
    10. '=lambda' → logprob: -21.500078201293945

Token 3200: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028620585799217224
    2. '=lambda' → logprob: -6.002861976623535
    3. 'lambda' → logprob: -8.127861976623535
    4. '=' → logprob: -9.877861976623535
    5. ' :' → logprob: -12.002861976623535
    6. '.lambda' → logprob: -12.252861976623535
    7. '(lambda' → logprob: -12.377861976623535
    8. ' lambda' → logprob: -12.627861976623535
    9. 'ambda' → logprob: -12.752861976623535
    10. 'def' → logprob: -12.752861976623535

Token 3201: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.8087270038668066e-05
    2. ' p' → logprob: -10.500027656555176
    3. 'lambda' → logprob: -14.625027656555176
    4. '	p' → logprob: -16.875028610229492
    5. 'x' → logprob: -18.125028610229492
    6. '.p' → logprob: -18.500028610229492
    7. '0' → logprob: -18.625028610229492
    8. '   ' → logprob: -18.750028610229492
    9. '
' → logprob: -18.875028610229492
    10. ')p' → logprob: -19.125028610229492

Token 3202: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.15310683415737e-05
    2. 'x' → logprob: -10.750021934509277
    3. '```' → logprob: -18.00002098083496
    4. '.' → logprob: -18.37502098083496
    5. '   ' → logprob: -19.25002098083496
    6. ' .' → logprob: -19.37502098083496
    7. '<x' → logprob: -19.62502098083496
    8. '	x' → logprob: -19.62502098083496
    9. ',x' → logprob: -20.00002098083496
    10. '.y' → logprob: -20.62502098083496

Token 3203: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02260642684996128
    2. 'print' → logprob: -3.897606372833252
    3. ')' → logprob: -7.022606372833252
    4. 'for' → logprob: -7.897606372833252
    5. '<|end|>' → logprob: -7.897606372833252
    6. ')
' → logprob: -8.39760684967041
    7. '       ' → logprob: -9.27260684967041
    8. '  ' → logprob: -11.14760684967041
    9. ',' → logprob: -11.27260684967041
    10. '
' → logprob: -11.39760684967041

Token 3204: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3892282247543335
    2. 'print' → logprob: -1.1392282247543335
    3. 'for' → logprob: -6.139228343963623
    4. '```' → logprob: -8.639227867126465
    5. '<|end|>' → logprob: -12.139227867126465
    6. '	print' → logprob: -12.139227867126465
    7. ' print' → logprob: -12.514227867126465
    8. ' for' → logprob: -13.264227867126465
    9. '``' → logprob: -13.389227867126465
    10. '       ' → logprob: -13.514227867126465

Token 3205: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.727905979962088e-05
    2. 'for' → logprob: -10.00004768371582
    3. '   ' → logprob: -13.25004768371582
    4. ' print' → logprob: -17.25004768371582
    5. '	print' → logprob: -20.00004768371582
    6. ' for' → logprob: -21.87504768371582
    7. '```' → logprob: -22.87504768371582
    8. 'Print' → logprob: -23.25004768371582
    9. '_print' → logprob: -23.87504768371582
    10. '
' → logprob: -24.12504768371582

Token 3206: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.0
    3. '(*(' → logprob: -16.375
    4. '*' → logprob: -18.0
    5. '((*' → logprob: -19.875
    6. ' (*' → logprob: -21.125
    7. '(
' → logprob: -21.5
    8. '(Point' → logprob: -22.75
    9. '()' → logprob: -22.875
    10. '(*)' → logprob: -23.5

Token 3207: 'Points' (ID: 14117)
  Prédit: 'Points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Points' → logprob: -1.9361264946837764e-07
    2. ' Points' → logprob: -15.75
    3. '[' → logprob: -19.25
    4. '_points' → logprob: -19.25
    5. 'Point' → logprob: -19.75
    6. 'points' → logprob: -20.25
    7. '(' → logprob: -21.625
    8. 'Pts' → logprob: -23.0
    9. 'Positions' → logprob: -23.625
    10. '.Point' → logprob: -23.875

Token 3208: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008931171614676714
    2. 'def' → logprob: -7.8758931159973145
    3. '<|end|>' → logprob: -8.500893592834473
    4. ')
' → logprob: -9.000893592834473
    5. ')return' → logprob: -9.125893592834473
    6. '   ' → logprob: -9.875893592834473
    7. '):' → logprob: -12.375893592834473
    8. '()' → logprob: -12.875893592834473
    9. 'return' → logprob: -13.000893592834473
    10. ')

' → logprob: -13.375893592834473

Token 3209: ' sep' (ID: 31529)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001955394633114338
    2. '   ' → logprob: -7.001955509185791
    3. ')
' → logprob: -7.876955509185791
    4. ' )' → logprob: -7.876955509185791
    5. 'sep' → logprob: -9.126955032348633
    6. 'newline' → logprob: -9.751955032348633
    7. '  ' → logprob: -10.251955032348633
    8. '")' → logprob: -10.501955032348633
    9. ' ' → logprob: -11.376955032348633
    10. '*' → logprob: -11.876955032348633

Token 3210: '="\' (ID: 129534)
  Prédit: '="\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '="\' → logprob: -0.3934962749481201
    2. '='\' → logprob: -2.01849627494812
    3. '="' → logprob: -2.64349627494812
    4. '"\' → logprob: -2.76849627494812
    5. '"' → logprob: -3.26849627494812
    6. '='' → logprob: -4.143496513366699
    7. ''\' → logprob: -5.893496513366699
    8. ''' → logprob: -6.518496513366699
    9. '("\' → logprob: -8.7684965133667
    10. '=' → logprob: -9.0184965133667

Token 3211: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005249153473414481
    2. '\n' → logprob: -7.750524997711182
    3. '"' → logprob: -9.875524520874023
    4. '"\' → logprob: -10.125524520874023
    5. ''n' → logprob: -13.750524520874023
    6. ''\' → logprob: -14.500524520874023
    7. ''' → logprob: -14.875524520874023
    8. 'nl' → logprob: -15.375524520874023
    9. 'newline' → logprob: -15.500524520874023
    10. ' n' → logprob: -15.750524520874023

Token 3212: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005633908789604902
    2. '")' → logprob: -5.25563383102417
    3. ')")' → logprob: -7.88063383102417
    4. ')
' → logprob: -11.630634307861328
    5. '())' → logprob: -12.380634307861328
    6. '()' → logprob: -12.505634307861328
    7. ')"' → logprob: -13.130634307861328
    8. '   ' → logprob: -14.005634307861328
    9. '))' → logprob: -14.380634307861328
    10. ')

' → logprob: -14.880634307861328

Token 3213: '    

' (ID: 24372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012473741080611944
    2. '   ' → logprob: -6.751247406005859
    3. 'return' → logprob: -9.50124740600586
    4. '#' → logprob: -13.50124740600586
    5. ' def' → logprob: -14.50124740600586
    6. '
' → logprob: -14.62624740600586
    7. ' return' → logprob: -17.87624740600586
    8. 'if' → logprob: -18.37624740600586
    9. '       ' → logprob: -18.37624740600586
    10. 'c' → logprob: -18.87624740600586

Token 3214: 'verify' (ID: 21358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010473522706888616
    2. 'return' → logprob: -9.750104904174805
    3. '   ' → logprob: -10.000104904174805
    4. '#' → logprob: -14.375104904174805
    5. ' def' → logprob: -15.125104904174805
    6. '
' → logprob: -17.000104904174805
    7. ' return' → logprob: -18.250104904174805
    8. 'c' → logprob: -18.750104904174805
    9. 'if' → logprob: -19.875104904174805
    10. '```' → logprob: -20.000104904174805

Token 3215: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.710618905955926e-05
    2. 'def' → logprob: -9.750097274780273
    3. '(' → logprob: -10.750097274780273
    4. '(_' → logprob: -11.875097274780273
    5. '('_' → logprob: -13.250097274780273
    6. ' _' → logprob: -13.375097274780273
    7. '__' → logprob: -13.625097274780273
    8. '_
' → logprob: -13.875097274780273
    9. '7' → logprob: -14.125097274780273
    10. '_def' → logprob: -14.625097274780273

Token 3216: '7' (ID: 22)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3526516258716583
    2. '7' → logprob: -1.227651596069336
    3. '2' → logprob: -5.477651596069336
    4. '_' → logprob: -10.977651596069336
    5. '3' → logprob: -13.727651596069336
    6. '4' → logprob: -15.352651596069336
    7. '0' → logprob: -15.602651596069336
    8. '(' → logprob: -16.477651596069336
    9. '5' → logprob: -16.540151596069336
    10. 'A' → logprob: -16.602651596069336

Token 3217: 'F' (ID: 37)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.002710011089220643
    2. 'A' → logprob: -6.002709865570068
    3. 'F' → logprob: -8.752710342407227
    4. 'E' → logprob: -9.502710342407227
    5. 'def' → logprob: -15.002710342407227
    6. ' D' → logprob: -15.377710342407227
    7. 'C' → logprob: -15.377710342407227
    8. '_D' → logprob: -15.752710342407227
    9. 'DF' → logprob: -16.252710342407227
    10. ')' → logprob: -16.377710342407227

Token 3218: '()' (ID: 416)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002314303710591048
    2. '   ' → logprob: -9.750231742858887
    3. ':' → logprob: -10.000231742858887
    4. ' def' → logprob: -10.625231742858887
    5. ':def' → logprob: -10.750231742858887
    6. 's' → logprob: -11.250231742858887
    7. 'c' → logprob: -11.375231742858887
    8. 'return' → logprob: -11.625231742858887
    9. ':
' → logprob: -11.750231742858887
    10. 'd' → logprob: -11.750231742858887


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3216
Tokens correctement prédits (1ère position, stricte): 1440
Tokens correctement prédits (1ère position, avec adaptation): 1545
Tokens correctement prédits (top 10): 2857
Précision stricte (1ère position): 44.78%
Précision adaptée (1ère position): 48.04%
Précision (top 10): 88.84%
================================================================================
