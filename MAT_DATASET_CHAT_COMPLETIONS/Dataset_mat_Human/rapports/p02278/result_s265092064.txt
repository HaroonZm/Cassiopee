================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
"""Minimum cost Sort."""

def make_cycle(A):
    """Return a list which has the minimum element of A and
    switch elements cycles as list.

    A is a list whose elements' type is 'int'.

    Each cycle list has its minimum elements in the first index.
    """
    B = list(A)
    B.sort()
    cycle_list = [B[0]]
    for i, b in enumerate(B):
        if b != None:
            new_cycle = []
            new_cycle.append(b)
            B[i] = None
            si = A.index(b)
            while si != i:
                st = B[si]
                new_cycle.append(st)
                B[si] = None
                si = A.index(st)
            cycle_list.append(new_cycle)
    return cycle_list

def min_sorting_cost(A):
    """Return the minimum cost of sorting A.

    A is a list whose elements' type is 'int'.
    """
    cycles = make_cycle(A)
    min_w = cycles[0]
    cost = 0
    for c in cycles[1:]:
        n = len(c)
        min_cw = c[0]
        dec = (n - 1) * (min_cw - min_w)
        inc = 2 * (min_w + min_cw)
        if dec < inc:
            cost += sum(c) + min_cw * (n - 2)
        else:
            cost += sum(c) + min_cw * (n - 2) - dec + inc
    return cost

n = int(input())

A = list(map(int, input().split()))

ans = min_sorting_cost(A)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '"""' (ID: 29376)
  → Token d'amorce (pas de prédiction)

Token 1: 'Minimum' (ID: 39408)
  → Token d'amorce (pas de prédiction)

Token 2: ' cost' (ID: 3097)
  → Token d'amorce (pas de prédiction)

Token 3: ' Sort' (ID: 25945)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3786756694316864
    2. '"""' → logprob: -2.003675699234009
    3. ' ' → logprob: -3.128675699234009
    4. ' =' → logprob: -3.128675699234009
    5. ' to' → logprob: -3.378675699234009
    6. '_' → logprob: -3.503675699234009
    7. '=' → logprob: -4.62867546081543
    8. ' """' → logprob: -5.62867546081543
    9. '```' → logprob: -5.75367546081543
    10. '(' → logprob: -6.25367546081543

Token 4: '."""

' (ID: 68934)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3520558178424835
    2. '"""' → logprob: -1.6020557880401611
    3. ':
' → logprob: -3.727055788040161
    4. '```' → logprob: -4.60205602645874
    5. '""' → logprob: -4.85205602645874
    6. 's' → logprob: -4.97705602645874
    7. '"""
' → logprob: -4.97705602645874
    8. ' to' → logprob: -5.22705602645874
    9. '"' → logprob: -5.97705602645874
    10. '(' → logprob: -6.10205602645874

Token 5: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03992798179388046
    2. 'def' → logprob: -4.164927959442139
    3. '_' → logprob: -4.914927959442139
    4. ' :' → logprob: -5.414927959442139
    5. ' =' → logprob: -5.789927959442139
    6. '.' → logprob: -5.789927959442139
    7. '=' → logprob: -6.914927959442139
    8. 's' → logprob: -7.039927959442139
    9. '#' → logprob: -7.164927959442139
    10. ' ' → logprob: -7.539927959442139

Token 6: ' make' (ID: 1520)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.0656963363289833
    2. ' min' → logprob: -2.8156962394714355
    3. ' Minimum' → logprob: -7.0656962394714355
    4. '_min' → logprob: -7.1906962394714355
    5. ' sort' → logprob: -7.3156962394714355
    6. ' ' → logprob: -7.5656962394714355
    7. ' minimal' → logprob: -8.190696716308594
    8. 'minimum' → logprob: -8.940696716308594
    9. '_' → logprob: -9.190696716308594
    10. 'Minimum' → logprob: -9.315696716308594

Token 7: '_cycle' (ID: 97714)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7488604187965393
    2. '_array' → logprob: -1.4988603591918945
    3. '_sort' → logprob: -1.4988603591918945
    4. '_arr' → logprob: -3.6238603591918945
    5. '_sorted' → logprob: -3.7488603591918945
    6. '_swap' → logprob: -4.6238603591918945
    7. '_cost' → logprob: -5.1238603591918945
    8. '_list' → logprob: -5.6238603591918945
    9. '_min' → logprob: -5.8738603591918945
    10. '_heap' → logprob: -6.1238603591918945

Token 8: '(A' (ID: 10706)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.38021382689476013
    2. '(' → logprob: -1.6302138566970825
    3. '_s' → logprob: -3.505213737487793
    4. '_cycle' → logprob: -4.005213737487793
    5. 's' → logprob: -4.380213737487793
    6. '_p' → logprob: -5.130213737487793
    7. '(s' → logprob: -5.880213737487793
    8. '_a' → logprob: -6.380213737487793
    9. '_array' → logprob: -6.505213737487793
    10. '_to' → logprob: -6.505213737487793

Token 9: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2609611749649048
    2. '):' → logprob: -1.5109611749649048
    3. ':' → logprob: -4.760961055755615
    4. '[' → logprob: -9.385961532592773
    5. '):
' → logprob: -9.510961532592773
    6. ')' → logprob: -9.635961532592773
    7. ' ):' → logprob: -10.385961532592773
    8. '<|end|>' → logprob: -10.510961532592773
    9. '[]):' → logprob: -10.635961532592773
    10. ' ,' → logprob: -10.635961532592773

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01807619072496891
    2. ':' → logprob: -4.643076419830322
    3. ' :' → logprob: -5.643076419830322
    4. '    ' → logprob: -6.518076419830322
    5. ' for' → logprob: -7.393076419830322
    6. '[]' → logprob: -7.518076419830322
    7. '[:]' → logprob: -8.393075942993164
    8. '):' → logprob: -8.518075942993164
    9. '    
' → logprob: -8.643075942993164
    10. ' =' → logprob: -8.768075942993164

Token 11: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5265838503837585
    2. ' visited' → logprob: -1.5265839099884033
    3. ' n' → logprob: -2.6515839099884033
    4. '    ' → logprob: -2.9015839099884033
    5. ' cycle' → logprob: -4.151583671569824
    6. 'n' → logprob: -4.901583671569824
    7. ' for' → logprob: -5.276583671569824
    8. 'visited' → logprob: -5.401583671569824
    9. ' ' → logprob: -5.526583671569824
    10. 'cycle' → logprob: -6.026583671569824

Token 12: 'Return' (ID: 8191)
  Prédit: 'Detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Detect' → logprob: -1.2727675437927246
    2. 'Create' → logprob: -1.6477675437927246
    3. 'Find' → logprob: -2.2727675437927246
    4. 'Generate' → logprob: -2.3977675437927246
    5. 'Calculate' → logprob: -2.5227675437927246
    6. 'Creates' → logprob: -3.1477675437927246
    7. '"""' → logprob: -3.2727675437927246
    8. 'Cycle' → logprob: -3.5227675437927246
    9. ' Detect' → logprob: -4.022767543792725
    10. 'Build' → logprob: -4.147767543792725

Token 13: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2976884841918945
    2. ' ' → logprob: -1.7976884841918945
    3. ' the' → logprob: -1.7976884841918945
    4. ' [' → logprob: -2.0476884841918945
    5. ' A' → logprob: -2.1726884841918945
    6. ' cycle' → logprob: -3.2976884841918945
    7. ' len' → logprob: -3.5476884841918945
    8. ' []' → logprob: -4.0476884841918945
    9. 'A' → logprob: -4.4226884841918945
    10. '[' → logprob: -4.7976884841918945

Token 14: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.048936039209365845
    2. ' cycle' → logprob: -3.673936128616333
    3. 'list' → logprob: -5.173935890197754
    4. ' dict' → logprob: -5.423935890197754
    5. ' dictionary' → logprob: -5.548935890197754
    6. '_list' → logprob: -6.548935890197754
    7. 'cycle' → logprob: -6.798935890197754
    8. ' []' → logprob: -6.923935890197754
    9. '[]' → logprob: -7.298935890197754
    10. 'n' → logprob: -7.298935890197754

Token 15: ' which' (ID: 1118)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.021396523341536522
    2. '<|end|>' → logprob: -4.021396636962891
    3. 'of' → logprob: -7.396396636962891
    4. 's' → logprob: -7.396396636962891
    5. '(' → logprob: -7.521396636962891
    6. '[' → logprob: -7.646396636962891
    7. '<|end|>' → logprob: -7.896396636962891
    8. '```' → logprob: -9.39639663696289
    9. ')' → logprob: -9.52139663696289
    10. '[]' → logprob: -9.77139663696289

Token 16: ' has' (ID: 853)
  Prédit: ' contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.8719223737716675
    2. ' represents' → logprob: -0.8719223737716675
    3. 's' → logprob: -3.246922492980957
    4. ' records' → logprob: -3.496922492980957
    5. ' is' → logprob: -4.121922492980957
    6. ' tracks' → logprob: -4.246922492980957
    7. ' stores' → logprob: -4.246922492980957
    8. ' marks' → logprob: -4.996922492980957
    9. ' identifies' → logprob: -5.246922492980957
    10. '[' → logprob: -5.371922492980957

Token 17: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2236918807029724
    2. 'the' → logprob: -1.9736919403076172
    3. ' indices' → logprob: -3.723691940307617
    4. ' cycle' → logprob: -4.848691940307617
    5. 'indices' → logprob: -4.848691940307617
    6. ' all' → logprob: -5.098691940307617
    7. 'cycle' → logprob: -5.723691940307617
    8. ' one' → logprob: -6.223691940307617
    9. 'cycles' → logprob: -6.348691940307617
    10. 'one' → logprob: -6.723691940307617

Token 18: ' minimum' (ID: 11085)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.514180600643158
    2. ' cycle' → logprob: -2.7641806602478027
    3. ' indexes' → logprob: -2.8891806602478027
    4. ' cycles' → logprob: -2.8891806602478027
    5. ' next' → logprob: -3.1391806602478027
    6. ' elements' → logprob: -3.2641806602478027
    7. ' positions' → logprob: -3.6391806602478027
    8. ' same' → logprob: -3.7641806602478027
    9. 'indices' → logprob: -3.8891806602478027
    10. ' minimum' → logprob: -4.514180660247803

Token 19: ' element' (ID: 3577)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5137487649917603
    2. 'cost' → logprob: -2.0137486457824707
    3. ' cycle' → logprob: -2.3887486457824707
    4. ' costs' → logprob: -3.2637486457824707
    5. 's' → logprob: -3.3887486457824707
    6. '_cost' → logprob: -3.5137486457824707
    7. '-cost' → logprob: -4.013748645782471
    8. ' number' → logprob: -4.763748645782471
    9. ' cycles' → logprob: -4.888748645782471
    10. '_' → logprob: -4.888748645782471

Token 20: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1097259372472763
    2. ' s' → logprob: -2.3597259521484375
    3. ' in' → logprob: -6.1097259521484375
    4. ',' → logprob: -6.1097259521484375
    5. ' of' → logprob: -6.3597259521484375
    6. ''s' → logprob: -7.2347259521484375
    7. ' and' → logprob: -7.2347259521484375
    8. '_s' → logprob: -7.8597259521484375
    9. ' ,' → logprob: -7.9847259521484375
    10. '```' → logprob: -8.359725952148438

Token 21: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5352762341499329
    2. 'A' → logprob: -1.660276174545288
    3. ' the' → logprob: -1.660276174545288
    4. ' each' → logprob: -3.910276174545288
    5. 'the' → logprob: -4.410276412963867
    6. ' a' → logprob: -7.660276412963867
    7. 'each' → logprob: -7.785276412963867
    8. ' cycle' → logprob: -8.535276412963867
    9. ' all' → logprob: -8.660276412963867
    10. 'a' → logprob: -8.660276412963867

Token 22: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22219859063625336
    2. ' and' → logprob: -2.472198486328125
    3. ' ,' → logprob: -3.347198486328125
    4. 's' → logprob: -3.597198486328125
    5. ''s' → logprob: -4.472198486328125
    6. '"""' → logprob: -4.722198486328125
    7. ' as' → logprob: -5.347198486328125
    8. ' in' → logprob: -5.472198486328125
    9. ')' → logprob: -5.472198486328125
    10. '.' → logprob: -5.597198486328125

Token 23: '
' (ID: 198)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.07378477603197098
    2. ' the' → logprob: -3.073784828186035
    3. ' all' → logprob: -4.823784828186035
    4. ' their' → logprob: -5.448784828186035
    5. ' indices' → logprob: -5.448784828186035
    6. 'its' → logprob: -5.948784828186035
    7. 'the' → logprob: -6.073784828186035
    8. ' A' → logprob: -7.448784828186035
    9. ' a' → logprob: -7.698784828186035
    10. 's' → logprob: -7.823784828186035

Token 24: '   ' (ID: 271)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6100700497627258
    2. ' its' → logprob: -0.8600700497627258
    3. ' all' → logprob: -4.73507022857666
    4. 'the' → logprob: -4.86007022857666
    5. ' a' → logprob: -4.98507022857666
    6. ' A' → logprob: -6.11007022857666
    7. ' indices' → logprob: -7.11007022857666
    8. ' then' → logprob: -7.48507022857666
    9. ' returns' → logprob: -7.48507022857666
    10. ' their' → logprob: -7.48507022857666

Token 25: ' switch' (ID: 6160)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6499007344245911
    2. ' its' → logprob: -0.8999007344245911
    3. ' all' → logprob: -4.024900913238525
    4. ' indices' → logprob: -4.024900913238525
    5. ' a' → logprob: -4.899900913238525
    6. ' their' → logprob: -5.524900913238525
    7. 'the' → logprob: -5.649900913238525
    8. ' returns' → logprob: -5.774900913238525
    9. ' indexes' → logprob: -6.274900913238525
    10. ' A' → logprob: -6.524900913238525

Token 26: ' elements' (ID: 8632)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08025382459163666
    2. 'es' → logprob: -3.955253839492798
    3. 'ing' → logprob: -4.080253601074219
    4. ' s' → logprob: -4.330253601074219
    5. ' the' → logprob: -4.955253601074219
    6. 'ed' → logprob: -5.080253601074219
    7. '_s' → logprob: -5.330253601074219
    8. '_' → logprob: -6.205253601074219
    9. ' ' → logprob: -6.830253601074219
    10. 'd' → logprob: -7.080253601074219

Token 27: ' cycles' (ID: 41478)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14931939542293549
    2. ' to' → logprob: -3.6493194103240967
    3. '```' → logprob: -3.6493194103240967
    4. ' ' → logprob: -4.149319171905518
    5. ' s' → logprob: -4.524319171905518
    6. '"""' → logprob: -5.024319171905518
    7. '_' → logprob: -5.149319171905518
    8. '.' → logprob: -5.274319171905518
    9. ' in' → logprob: -5.399319171905518
    10. ')' → logprob: -5.399319171905518

Token 28: ' as' (ID: 472)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3111517429351807
    2. '"""' → logprob: -1.3111517429351807
    3. ')' → logprob: -2.1861517429351807
    4. ' """' → logprob: -2.4361517429351807
    5. '.' → logprob: -2.6861517429351807
    6. '."""' → logprob: -3.1861517429351807
    7. '"""
' → logprob: -3.5611517429351807
    8. '"' → logprob: -3.5611517429351807
    9. ' """
' → logprob: -3.6861517429351807
    10. '   ' → logprob: -3.9361517429351807

Token 29: ' list' (ID: 1562)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possible' → logprob: -1.368242621421814
    2. ' well' → logprob: -1.743242621421814
    3. 'possible' → logprob: -2.2432427406311035
    4. ' needed' → logprob: -2.3682427406311035
    5. ' described' → logprob: -2.4932427406311035
    6. ' they' → logprob: -3.2432427406311035
    7. ' in' → logprob: -3.3682427406311035
    8. ' necessary' → logprob: -3.6182427406311035
    9. ' we' → logprob: -3.6182427406311035
    10. ' a' → logprob: -3.7432427406311035

Token 30: '.

' (ID: 364)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.5848426818847656
    2. '."""' → logprob: -1.5848426818847656
    3. '.' → logprob: -1.8348426818847656
    4. ' of' → logprob: -2.2098426818847656
    5. '   ' → logprob: -2.4598426818847656
    6. ',' → logprob: -3.2098426818847656
    7. '"""' → logprob: -3.2098426818847656
    8. ')' → logprob: -3.5848426818847656
    9. ' ' → logprob: -3.5848426818847656
    10. '```' → logprob: -4.084842681884766

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7517114877700806
    2. '"""' → logprob: -0.8767114877700806
    3. '"""
' → logprob: -3.251711368560791
    4. '```' → logprob: -3.501711368560791
    5. ' """' → logprob: -3.751711368560791
    6. ' """
' → logprob: -4.251711368560791
    7. 'def' → logprob: -6.751711368560791
    8. ')' → logprob: -6.751711368560791
    9. '"' → logprob: -7.251711368560791
    10. ' ' → logprob: -7.501711368560791

Token 32: ' A' (ID: 355)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.7549633383750916
    2. '   ' → logprob: -1.5049633979797363
    3. '"""' → logprob: -1.8799633979797363
    4. ' """
' → logprob: -2.3799633979797363
    5. '```' → logprob: -3.2549633979797363
    6. ' """' → logprob: -4.379963397979736
    7. ' ' → logprob: -6.254963397979736
    8. '
' → logprob: -6.629963397979736
    9. ' for' → logprob: -6.754963397979736
    10. 'def' → logprob: -6.879963397979736

Token 33: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2675042152404785
    2. ')' → logprob: -1.3925042152404785
    3. '   ' → logprob: -1.8925042152404785
    4. ',' → logprob: -2.3925042152404785
    5. ':' → logprob: -2.6425042152404785
    6. ' is' → logprob: -3.3925042152404785
    7. '):' → logprob: -3.5175042152404785
    8. '"""' → logprob: -4.1425042152404785
    9. '.' → logprob: -4.5175042152404785
    10. ']' → logprob: -4.6425042152404785

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.014912365935742855
    2. 'a' → logprob: -5.139912128448486
    3. ' an' → logprob: -5.389912128448486
    4. ' the' → logprob: -6.264912128448486
    5. ' list' → logprob: -6.889912128448486
    6. 'n' → logprob: -7.889912128448486
    7. '[]' → logprob: -8.514912605285645
    8. ' not' → logprob: -8.514912605285645
    9. 'List' → logprob: -9.389912605285645
    10. ' sorted' → logprob: -9.514912605285645

Token 35: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.002239470137283206
    2. 'n' → logprob: -6.87723970413208
    3. 'list' → logprob: -7.37723970413208
    4. ' sequence' → logprob: -8.002239227294922
    5. ' List' → logprob: -9.752239227294922
    6. ' copy' → logprob: -10.377239227294922
    7. ' ' → logprob: -10.752239227294922
    8. ' sorted' → logprob: -10.752239227294922
    9. 'List' → logprob: -11.002239227294922
    10. ' mutable' → logprob: -11.127239227294922

Token 36: ' whose' (ID: 12119)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.19253620505332947
    2. '   ' → logprob: -2.6925361156463623
    3. '<|end|>' → logprob: -3.5675361156463623
    4. ',' → logprob: -3.8175361156463623
    5. ')' → logprob: -4.192536354064941
    6. '<|end|>' → logprob: -4.692536354064941
    7. '[int' → logprob: -4.942536354064941
    8. '[' → logprob: -5.317536354064941
    9. '```' → logprob: -5.692536354064941
    10. '.' → logprob: -5.817536354064941

Token 37: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.02471405640244484
    2. ' length' → logprob: -5.27471399307251
    3. 'elements' → logprob: -5.27471399307251
    4. ' items' → logprob: -5.52471399307251
    5. ' values' → logprob: -5.52471399307251
    6. ' element' → logprob: -5.77471399307251
    7. ' minimum' → logprob: -6.89971399307251
    8. ' next' → logprob: -7.39971399307251
    9. ' tokens' → logprob: -8.274714469909668
    10. ' all' → logprob: -8.524714469909668

Token 38: ''' (ID: 6)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.05660053715109825
    2. 'are' → logprob: -3.556600570678711
    3. '<|end|>' → logprob: -3.681600570678711
    4. '<|end|>' → logprob: -7.431600570678711
    5. ' can' → logprob: -8.306600570678711
    6. ' have' → logprob: -8.556600570678711
    7. ' appear' → logprob: -9.806600570678711
    8. ' represent' → logprob: -10.056600570678711
    9. ' ' → logprob: -10.556600570678711
    10. '...' → logprob: -10.556600570678711

Token 39: ' type' (ID: 1490)
  Prédit: ' type'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.1560686230659485
    2. ' values' → logprob: -3.2810685634613037
    3. 'type' → logprob: -3.4060685634613037
    4. ' indices' → logprob: -4.156068801879883
    5. ' types' → logprob: -4.406068801879883
    6. ' value' → logprob: -4.906068801879883
    7. ' cost' → logprob: -5.031068801879883
    8. ' positions' → logprob: -5.281068801879883
    9. ' minimum' → logprob: -5.281068801879883
    10. ' weights' → logprob: -5.656068801879883

Token 40: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06721837818622589
    2. 'is' → logprob: -2.81721830368042
    3. 's' → logprob: -6.44221830368042
    4. ' are' → logprob: -6.94221830368042
    5. ':' → logprob: -7.56721830368042
    6. ' may' → logprob: -7.81721830368042
    7. '<|end|>' → logprob: -8.192218780517578
    8. '```' → logprob: -8.317218780517578
    9. ' can' → logprob: -8.817218780517578
    10. ' should' → logprob: -8.942218780517578

Token 41: ' '' (ID: 461)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04141124710440636
    2. ' int' → logprob: -3.2914111614227295
    3. 'list' → logprob: -6.416411399841309
    4. ' list' → logprob: -6.916411399841309
    5. 'numeric' → logprob: -9.166411399841309
    6. '```' → logprob: -9.166411399841309
    7. '`' → logprob: -9.291411399841309
    8. 'numbers' → logprob: -9.666411399841309
    9. ' ' → logprob: -9.791411399841309
    10. ' numbers' → logprob: -10.291411399841309

Token 42: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0022681360132992268
    2. ' int' → logprob: -6.377268314361572
    3. 'list' → logprob: -7.627268314361572
    4. 'tuple' → logprob: -11.127267837524414
    5. ' list' → logprob: -11.502267837524414
    6. '```' → logprob: -11.752267837524414
    7. ' ' → logprob: -11.877267837524414
    8. 'float' → logprob: -11.877267837524414
    9. 'in' → logprob: -12.252267837524414
    10. 'number' → logprob: -12.377267837524414

Token 43: ''.

' (ID: 52121)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0553486347198486
    2. 's' → logprob: -1.1803486347198486
    3. '"""' → logprob: -1.4303486347198486
    4. ']' → logprob: -3.4303486347198486
    5. ']'' → logprob: -4.0553483963012695
    6. '```' → logprob: -4.0553483963012695
    7. ')' → logprob: -4.5553483963012695
    8. ' """' → logprob: -4.6803483963012695
    9. ''s' → logprob: -5.5553483963012695
    10. '"' → logprob: -6.0553483963012695

Token 44: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.16208510100841522
    2. '   ' → logprob: -2.9120850563049316
    3. '"""
' → logprob: -3.1620850563049316
    4. ' """' → logprob: -3.7870850563049316
    5. '```' → logprob: -4.287085056304932
    6. ')' → logprob: -4.912085056304932
    7. ' """
' → logprob: -4.912085056304932
    8. 'def' → logprob: -7.412085056304932
    9. '"' → logprob: -8.16208553314209
    10. '\n' → logprob: -8.28708553314209

Token 45: ' Each' (ID: 11555)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.03787415102124214
    2. ' """' → logprob: -4.162874221801758
    3. '"""
' → logprob: -4.787874221801758
    4. '   ' → logprob: -4.787874221801758
    5. ' """
' → logprob: -6.037874221801758
    6. '```' → logprob: -6.412874221801758
    7. 'Returns' → logprob: -8.412874221801758
    8. ' The' → logprob: -8.912874221801758
    9. '  ' → logprob: -9.912874221801758
    10. 'The' → logprob: -9.912874221801758

Token 46: ' cycle' (ID: 15839)
  Prédit: ' cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.12679307162761688
    2. ' element' → logprob: -2.751793146133423
    3. 'cycle' → logprob: -3.626793146133423
    4. '_cycle' → logprob: -4.001792907714844
    5. 'element' → logprob: -5.876792907714844
    6. '_' → logprob: -6.376792907714844
    7. ' =' → logprob: -6.751792907714844
    8. ' ' → logprob: -7.126792907714844
    9. '_element' → logprob: -7.251792907714844
    10. ' of' → logprob: -7.751792907714844

Token 47: ' list' (ID: 1562)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6876773238182068
    2. '   ' → logprob: -1.9376773834228516
    3. ' represents' → logprob: -2.5626773834228516
    4. 's' → logprob: -2.8126773834228516
    5. ' """' → logprob: -3.4376773834228516
    6. ' contains' → logprob: -3.9376773834228516
    7. ' in' → logprob: -3.9376773834228516
    8. ' consists' → logprob: -4.312677383422852
    9. ' of' → logprob: -4.437677383422852
    10. ''s' → logprob: -4.437677383422852

Token 48: ' has' (ID: 853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2070633172988892
    2. '<|end|>' → logprob: -2.3320631980895996
    3. ' is' → logprob: -2.4570631980895996
    4. 's' → logprob: -2.4570631980895996
    5. ''s' → logprob: -2.8320631980895996
    6. ' contains' → logprob: -2.8320631980895996
    7. ' consists' → logprob: -2.9570631980895996
    8. ' should' → logprob: -3.3320631980895996
    9. ' has' → logprob: -3.3320631980895996
    10. '<|end|>' → logprob: -3.5820631980895996

Token 49: ' its' (ID: 1617)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7177184820175171
    2. ' at' → logprob: -1.467718482017517
    3. ' a' → logprob: -2.3427186012268066
    4. ' elements' → logprob: -2.4677186012268066
    5. ' been' → logprob: -4.217718601226807
    6. ' an' → logprob: -4.217718601226807
    7. ' its' → logprob: -4.342718601226807
    8. ' two' → logprob: -4.342718601226807
    9. 'the' → logprob: -4.842718601226807
    10. 'a' → logprob: -4.967718601226807

Token 50: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.5566229224205017
    2. ' own' → logprob: -1.6816229820251465
    3. 'minimum' → logprob: -2.3066229820251465
    4. ' first' → logprob: -2.9316229820251465
    5. ' elements' → logprob: -3.3066229820251465
    6. ' minimal' → logprob: -3.5566229820251465
    7. 'own' → logprob: -4.6816229820251465
    8. 'first' → logprob: -6.0566229820251465
    9. 'elements' → logprob: -6.3066229820251465
    10. 'min' → logprob: -6.4316229820251465

Token 51: ' elements' (ID: 8632)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.3404887318611145
    2. '_' → logprob: -1.9654886722564697
    3. '_element' → logprob: -2.9654886722564697
    4. 'element' → logprob: -2.9654886722564697
    5. ',' → logprob: -4.715488910675049
    6. ' elements' → logprob: -4.965488910675049
    7. '```' → logprob: -5.090488910675049
    8. '_elements' → logprob: -5.465488910675049
    9. 's' → logprob: -5.715488910675049
    10. '_value' → logprob: -5.840488910675049

Token 52: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2037370204925537
    2. '.' → logprob: -1.5787370204925537
    3. ' and' → logprob: -2.0787370204925537
    4. '"""' → logprob: -2.4537370204925537
    5. ')' → logprob: -2.8287370204925537
    6. '."""' → logprob: -3.0787370204925537
    7. ' as' → logprob: -3.3287370204925537
    8. ' at' → logprob: -3.3287370204925537
    9. ' in' → logprob: -4.078737258911133
    10. '   ' → logprob: -4.453737258911133

Token 53: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4507153332233429
    2. 'the' → logprob: -1.9507153034210205
    3. ' first' → logprob: -2.7007153034210205
    4. ' front' → logprob: -2.7007153034210205
    5. 'first' → logprob: -3.9507153034210205
    6. 'front' → logprob: -4.0757155418396
    7. '0' → logprob: -4.7007155418396
    8. ' its' → logprob: -4.8257155418396
    9. ' index' → logprob: -4.9507155418396
    10. ' ' → logprob: -5.0757155418396

Token 54: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.6067469120025635
    2. '0' → logprob: -1.9817469120025635
    3. ' first' → logprob: -1.9817469120025635
    4. ' front' → logprob: -2.7317469120025635
    5. 'front' → logprob: -2.9817469120025635
    6. 'begin' → logprob: -4.231746673583984
    7. ' ' → logprob: -4.356746673583984
    8. ' beginning' → logprob: -4.606746673583984
    9. ' cycle' → logprob: -4.731746673583984
    10. 'cycle' → logprob: -4.731746673583984

Token 55: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27310237288475037
    2. ' position' → logprob: -1.7731024026870728
    3. 'position' → logprob: -4.398102283477783
    4. '_' → logprob: -4.398102283477783
    5. ' line' → logprob: -4.523102283477783
    6. ' element' → logprob: -4.523102283477783
    7. ')' → logprob: -5.023102283477783
    8. ',' → logprob: -5.648102283477783
    9. '  ' → logprob: -6.023102283477783
    10. ']' → logprob: -6.648102283477783

Token 56: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3707226514816284
    2. '.' → logprob: -2.245722770690918
    3. '"""' → logprob: -2.495722770690918
    4. ')' → logprob: -2.620722770690918
    5. '."""' → logprob: -4.745722770690918
    6. ' """' → logprob: -4.870722770690918
    7. ',' → logprob: -4.995722770690918
    8. ']' → logprob: -4.995722770690918
    9. ' ' → logprob: -5.620722770690918
    10. ':' → logprob: -5.620722770690918

Token 57: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.5153850317001343
    2. '   ' → logprob: -1.1403850317001343
    3. ' """' → logprob: -2.890385150909424
    4. '"""
' → logprob: -4.640385150909424
    5. ' """
' → logprob: -4.765385150909424
    6. '"' → logprob: -5.140385150909424
    7. '```' → logprob: -6.515385150909424
    8. ')' → logprob: -7.640385150909424
    9. '  ' → logprob: -7.890385150909424
    10. '    ' → logprob: -8.390384674072266

Token 58: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.010878502391278744
    2. ' """' → logprob: -5.510878562927246
    3. '"' → logprob: -5.885878562927246
    4. '   ' → logprob: -5.885878562927246
    5. '"""
' (adapté à ' """
') → logprob: -6.885878562927246
    6. '""' → logprob: -9.635878562927246
    7. ' """
' → logprob: -9.760878562927246
    8. '```' → logprob: -10.260878562927246
    9. ''''' → logprob: -11.760878562927246
    10. ')' → logprob: -12.010878562927246

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20745666325092316
    2. '    
' → logprob: -3.082456588745117
    3. ' 
' → logprob: -3.207456588745117
    4. 'n' → logprob: -3.332456588745117
    5. '    ' → logprob: -3.582456588745117
    6. '     
' → logprob: -4.082456588745117
    7. '
' → logprob: -4.832456588745117
    8. ' ' → logprob: -5.582456588745117
    9. ' n' → logprob: -6.207456588745117
    10. '   
' → logprob: -7.207456588745117

Token 60: ' B' (ID: 418)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6997760534286499
    2. 'n' → logprob: -1.94977605342865
    3. ' min' → logprob: -2.4497761726379395
    4. ' sorted' → logprob: -2.4497761726379395
    5. ' visited' → logprob: -3.5747761726379395
    6. 'min' → logprob: -3.9497761726379395
    7. ' pos' → logprob: -4.0747761726379395
    8. 'sorted' → logprob: -4.1997761726379395
    9. '   ' → logprob: -4.5747761726379395
    10. ' A' → logprob: -4.9497761726379395

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005946221761405468
    2. '=' → logprob: -5.130946159362793
    3. '=[]' → logprob: -12.505946159362793
    4. ',' → logprob: -12.630946159362793
    5. '   ' → logprob: -12.755946159362793
    6. ' =[' → logprob: -12.880946159362793
    7. '=A' → logprob: -13.380946159362793
    8. ' ' → logprob: -13.755946159362793
    9. '=[' → logprob: -14.005946159362793
    10. '=len' → logprob: -15.380946159362793

Token 62: ' list' (ID: 1562)
  Prédit: ' sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.28046905994415283
    2. ' A' → logprob: -2.0304689407348633
    3. 'sorted' → logprob: -2.4054689407348633
    4. ' list' → logprob: -4.405468940734863
    5. 'A' → logprob: -5.155468940734863
    6. ' [' → logprob: -6.280468940734863
    7. 'list' → logprob: -6.655468940734863
    8. '[' → logprob: -7.655468940734863
    9. ' []' → logprob: -8.155468940734863
    10. ' ' → logprob: -8.155468940734863

Token 63: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.013267992064356804
    2. '(sorted' → logprob: -4.513267993927002
    3. '(' → logprob: -7.013267993927002
    4. '(range' → logprob: -7.263267993927002
    5. '(set' → logprob: -7.888267993927002
    6. '(map' → logprob: -8.888267517089844
    7. '(en' → logprob: -9.888267517089844
    8. 'sorted' → logprob: -11.013267517089844
    9. '(zip' → logprob: -11.513267517089844
    10. '(
' → logprob: -12.388267517089844

Token 64: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7385154428193346e-05
    2. ' )' → logprob: -10.87503719329834
    3. ')
' → logprob: -11.87503719329834
    4. '))' → logprob: -13.25003719329834
    5. '())' → logprob: -13.25003719329834
    6. ').' → logprob: -13.50003719329834
    7. ')`' → logprob: -13.62503719329834
    8. '   ' → logprob: -13.75003719329834
    9. ')

' → logprob: -14.62503719329834
    10. 'sorted' → logprob: -14.62503719329834

Token 65: '   ' (ID: 271)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.6718347668647766
    2. '   ' → logprob: -0.7968347668647766
    3. 'sort' → logprob: -4.171834945678711
    4. '.' → logprob: -5.296834945678711
    5. ' sort' → logprob: -5.546834945678711
    6. '
' → logprob: -6.671834945678711
    7. ')' → logprob: -6.796834945678711
    8. '<|end|>' → logprob: -6.921834945678711
    9. 'B' → logprob: -7.171834945678711
    10. '_sort' → logprob: -7.296834945678711

Token 66: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.5809349417686462
    2. ' B' → logprob: -0.9559349417686462
    3. 'n' → logprob: -4.580935001373291
    4. '   ' → logprob: -5.330935001373291
    5. 's' → logprob: -5.830935001373291
    6. 'i' → logprob: -5.955935001373291
    7. 'result' → logprob: -5.955935001373291
    8. 'sort' → logprob: -5.955935001373291
    9. 'indices' → logprob: -5.955935001373291
    10. ' n' → logprob: -6.080935001373291

Token 67: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.14863771200180054
    2. '.' → logprob: -2.0236377716064453
    3. '.remove' → logprob: -6.148637771606445
    4. ' .' → logprob: -6.148637771606445
    5. '.index' → logprob: -7.023637771606445
    6. 'sort' → logprob: -8.023637771606445
    7. ' sort' → logprob: -8.648637771606445
    8. '.pop' → logprob: -8.898637771606445
    9. '_sort' → logprob: -10.273637771606445
    10. '.append' → logprob: -10.648637771606445

Token 68: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00014203863975126296
    2. '(' → logprob: -8.875142097473145
    3. '()
' → logprob: -14.125142097473145
    4. '()`' → logprob: -15.250142097473145
    5. '()

' → logprob: -15.250142097473145
    6. '()]' → logprob: -15.250142097473145
    7. ' ()' → logprob: -15.500142097473145
    8. '();' → logprob: -15.875142097473145
    9. '()>' → logprob: -16.250141143798828
    10. '())' → logprob: -16.250141143798828

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09489338099956512
    2. '   ' → logprob: -3.344893455505371
    3. '\n' → logprob: -4.469893455505371
    4. '<|end|>' → logprob: -4.594893455505371
    5. '    
' → logprob: -4.719893455505371
    6. 'n' → logprob: -4.969893455505371
    7. '\' → logprob: -5.594893455505371
    8. ' 
' → logprob: -6.219893455505371
    9. 'def' → logprob: -6.594893455505371
    10. '```' → logprob: -6.844893455505371

Token 70: ' cycle' (ID: 15839)
  Prédit: 'mapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mapping' → logprob: -2.1869139671325684
    2. ' idx' → logprob: -2.5619139671325684
    3. ' mapping' → logprob: -2.5619139671325684
    4. 'index' → logprob: -2.6869139671325684
    5. ' visited' → logprob: -2.6869139671325684
    6. 'idx' → logprob: -2.6869139671325684
    7. 'cycles' → logprob: -2.8119139671325684
    8. 'pos' → logprob: -2.9369139671325684
    9. ' pos' → logprob: -2.9369139671325684
    10. ' cycle' → logprob: -2.9369139671325684

Token 71: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005172899691388011
    2. '_' → logprob: -8.625516891479492
    3. '_s' → logprob: -9.000516891479492
    4. '_list' → logprob: -9.375516891479492
    5. ' =' → logprob: -9.500516891479492
    6. '=' → logprob: -10.750516891479492
    7. 'd' → logprob: -11.625516891479492
    8. '_lists' → logprob: -11.875516891479492
    9. '_len' → logprob: -13.125516891479492
    10. '=[]' → logprob: -13.250516891479492

Token 72: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6621708869934082
    2. ' =' → logprob: -0.7871708869934082
    3. '=' → logprob: -3.537170886993408
    4. '=[]' → logprob: -10.53717041015625
    5. ' s' → logprob: -12.28717041015625
    6. ',' → logprob: -13.28717041015625
    7. '(' → logprob: -13.28717041015625
    8. '_' → logprob: -13.53717041015625
    9. '(s' → logprob: -14.03717041015625
    10. '  ' → logprob: -14.03717041015625

Token 73: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.049091991037130356
    2. ' []' → logprob: -3.0490920543670654
    3. '[' → logprob: -7.674091815948486
    4. '[]
' → logprob: -11.049092292785645
    5. ' [' → logprob: -11.549092292785645
    6. ' ' → logprob: -12.549092292785645
    7. '[]}' → logprob: -12.549092292785645
    8. '[][]' → logprob: -13.549092292785645
    9. '[]

' → logprob: -13.924092292785645
    10. '[]>' → logprob: -14.049092292785645

Token 74: 'B' (ID: 33)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3906615674495697
    2. ']' → logprob: -1.140661597251892
    3. ' []' → logprob: -6.515661716461182
    4. '[' → logprob: -6.640661716461182
    5. '[]
' → logprob: -8.515661239624023
    6. 'B' → logprob: -8.515661239624023
    7. '0' → logprob: -9.015661239624023
    8. ' ]' → logprob: -9.015661239624023
    9. '[]

' → logprob: -9.265661239624023
    10. '][]' → logprob: -10.140661239624023

Token 75: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013502772897481918
    2. '.index' → logprob: -4.388502597808838
    3. ')]' → logprob: -8.263503074645996
    4. '.pop' → logprob: -8.513503074645996
    5. ']' → logprob: -8.763503074645996
    6. '0' → logprob: -8.763503074645996
    7. 'index' → logprob: -9.513503074645996
    8. '])' → logprob: -10.763503074645996
    9. '[:' → logprob: -10.763503074645996
    10. ')' → logprob: -10.763503074645996

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015062130114529282
    2. ' ' → logprob: -8.875150680541992
    3. '-' → logprob: -11.625150680541992
    4. '   ' → logprob: -15.000150680541992
    5. ':' → logprob: -15.500150680541992
    6. ' -' → logprob: -15.562650680541992
    7. '1' → logprob: -15.812650680541992
    8. '[' → logprob: -16.250150680541992
    9. '000' → logprob: -16.437650680541992
    10. 'i' → logprob: -16.500150680541992

Token 77: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012246259488165379
    2. ']]' → logprob: -4.512246131896973
    3. ')]' → logprob: -7.387246131896973
    4. ',' → logprob: -8.137246131896973
    5. ' ]' → logprob: -9.262246131896973
    6. '],' → logprob: -9.387246131896973
    7. ']
' → logprob: -10.762246131896973
    8. ' ]]' → logprob: -10.887246131896973
    9. '])]' → logprob: -11.137246131896973
    10. '']]' → logprob: -11.637246131896973

Token 78: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4974527657032013
    2. 'for' (adapté à ' for') → logprob: -1.997452735900879
    3. ',' → logprob: -2.247452735900879
    4. ' ' → logprob: -2.372452735900879
    5. ' i' → logprob: -4.247452735900879
    6. ' ,' → logprob: -5.247452735900879
    7. '<|end|>' → logprob: -5.372452735900879
    8. '.' → logprob: -5.622452735900879
    9. 'i' → logprob: -5.747452735900879
    10. ' 
' → logprob: -5.872452735900879

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6213639378547668
    2. ' a' → logprob: -1.871363878250122
    3. ' x' → logprob: -1.996363878250122
    4. 'i' → logprob: -2.746363878250122
    5. ' e' → logprob: -2.996363878250122
    6. 'a' → logprob: -4.371364116668701
    7. 'x' → logprob: -4.496364116668701
    8. ' ' → logprob: -4.621364116668701
    9. ' v' → logprob: -4.746364116668701
    10. 'e' → logprob: -5.621364116668701

Token 81: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0071382587775588036
    2. 'in' → logprob: -5.257138252258301
    3. ' ' → logprob: -6.757138252258301
    4. 'n' → logprob: -7.882138252258301
    5. '  ' → logprob: -8.2571382522583
    6. ',' → logprob: -10.1321382522583
    7. ' n' → logprob: -10.6321382522583
    8. '   ' → logprob: -11.5071382522583
    9. '	in' → logprob: -11.8821382522583
    10. 's' → logprob: -12.2571382522583

Token 82: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2443251609802246
    2. 'a' → logprob: -2.3693251609802246
    3. ' v' → logprob: -2.9943251609802246
    4. ' x' → logprob: -3.6193251609802246
    5. ' b' → logprob: -4.744325160980225
    6. 'v' → logprob: -4.869325160980225
    7. ' e' → logprob: -5.244325160980225
    8. 'x' → logprob: -5.494325160980225
    9. ' ' → logprob: -5.869325160980225
    10. ' val' → logprob: -5.994325160980225

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032004083041101694
    2. 'in' → logprob: -6.503200531005859
    3. 'n' → logprob: -6.628200531005859
    4. 's' → logprob: -8.12820053100586
    5. ' ' → logprob: -10.00320053100586
    6. ',' → logprob: -11.00320053100586
    7. 'nd' → logprob: -13.12820053100586
    8. '  ' → logprob: -13.12820053100586
    9. '   ' → logprob: -13.37820053100586
    10. 'nt' → logprob: -13.81570053100586

Token 84: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.014164448715746403
    2. 'enumer' → logprob: -4.264164447784424
    3. 'en' → logprob: -15.764164924621582
    4. ' en' → logprob: -15.764164924621582
    5. '(en' → logprob: -16.139163970947266
    6. 'umer' → logprob: -16.264163970947266
    7. ' enumer' → logprob: -16.389163970947266
    8. ' ' → logprob: -16.389163970947266
    9. ' enum' → logprob: -16.639163970947266
    10. '.enumer' → logprob: -17.014163970947266

Token 85: '(B' (ID: 8409)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.041106972843408585
    2. '(B' → logprob: -3.416106939315796
    3. '(' → logprob: -5.166107177734375
    4. 'A' → logprob: -7.416107177734375
    5. ' (' → logprob: -7.416107177734375
    6. ' A' → logprob: -8.041107177734375
    7. ')' → logprob: -9.041107177734375
    8. 'B' → logprob: -9.916107177734375
    9. ' B' → logprob: -11.291107177734375
    10. '(a' → logprob: -12.791107177734375

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018782243132591248
    2. '):
' → logprob: -4.018782138824463
    3. ':' → logprob: -8.518782615661621
    4. ' ):' → logprob: -8.643782615661621
    5. '):
' → logprob: -8.893782615661621
    6. ')' → logprob: -10.018782615661621
    7. '   ' → logprob: -10.768782615661621
    8. '[' → logprob: -11.143782615661621
    9. '[:-' → logprob: -11.893782615661621
    10. '():' → logprob: -12.268782615661621

Token 87: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5963137745857239
    2. '<|end|>' → logprob: -1.596313714981079
    3. ' if' → logprob: -2.971313714981079
    4. '       ' → logprob: -3.096313714981079
    5. ' :' → logprob: -3.221313714981079
    6. ',' → logprob: -3.471313714981079
    7. '   ' → logprob: -3.721313714981079
    8. ' ' → logprob: -3.721313714981079
    9. '    ' → logprob: -4.346313953399658
    10. '<|end|>' → logprob: -4.721313953399658

Token 88: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25487637519836426
    2. ' if' → logprob: -2.0048763751983643
    3. '<|end|>' → logprob: -2.7548763751983643
    4. '       ' → logprob: -4.629876136779785
    5. '    ' → logprob: -5.504876136779785
    6. '        ' → logprob: -5.504876136779785
    7. 'if' (adapté à ' if') → logprob: -5.879876136779785
    8. '<|end|>' → logprob: -6.129876136779785
    9. '  ' → logprob: -6.879876136779785
    10. '   ' → logprob: -7.254876136779785

Token 89: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.4292808771133423
    2. ' i' → logprob: -1.3042808771133423
    3. ' ' → logprob: -3.1792807579040527
    4. 'b' → logprob: -3.8042807579040527
    5. 'i' → logprob: -4.429280757904053
    6. ' A' → logprob: -7.429280757904053
    7. ' not' → logprob: -7.429280757904053
    8. '  ' → logprob: -7.929280757904053
    9. 'A' → logprob: -9.804281234741211
    10. ' ' → logprob: -9.929281234741211

Token 90: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5248643755912781
    2. ' >' → logprob: -1.1498644351959229
    3. '!=' → logprob: -3.274864435195923
    4. '>' → logprob: -4.149864196777344
    5. ' <' → logprob: -4.274864196777344
    6. ' ==' → logprob: -4.649864196777344
    7. ' not' → logprob: -5.274864196777344
    8. ' ' → logprob: -5.274864196777344
    9. '==' → logprob: -6.149864196777344
    10. '<' → logprob: -7.399864196777344

Token 91: ' None' (ID: 4662)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.48947834968566895
    2. 'B' → logprob: -0.989478349685669
    3. ' cycle' → logprob: -4.48947811126709
    4. 'cycle' → logprob: -6.11447811126709
    5. ' ' → logprob: -6.86447811126709
    6. '0' → logprob: -8.73947811126709
    7. ' A' → logprob: -8.86447811126709
    8. 'A' → logprob: -9.36447811126709
    9. '   ' → logprob: -9.80197811126709
    10. '  ' → logprob: -9.86447811126709

Token 92: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09232893586158752
    2. ':' → logprob: -2.5923290252685547
    3. 'and' → logprob: -4.342329025268555
    4. ' :' → logprob: -9.217329025268555
    5. ' ' → logprob: -9.592329025268555
    6. ',' → logprob: -9.592329025268555
    7. ':
' → logprob: -10.342329025268555
    8. '<|end|>' → logprob: -10.592329025268555
    9. ')' → logprob: -10.967329025268555
    10. '):' → logprob: -11.967329025268555

Token 93: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.884143590927124
    2. ' and' → logprob: -1.009143590927124
    3. '<|end|>' → logprob: -2.509143590927124
    4. ' ' → logprob: -2.759143590927124
    5. ' continue' → logprob: -3.384143590927124
    6. ':' → logprob: -4.509143829345703
    7. '<|end|>' → logprob: -5.009143829345703
    8. '        ' → logprob: -5.134143829345703
    9. '   ' → logprob: -5.759143829345703
    10. ',' → logprob: -6.009143829345703

Token 94: ' new' (ID: 620)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5939385890960693
    2. ' if' → logprob: -1.5939385890960693
    3. ' index' → logprob: -2.8439385890960693
    4. ' b' → logprob: -3.5939385890960693
    5. ' B' → logprob: -3.8439385890960693
    6. ' continue' → logprob: -3.8439385890960693
    7. '       ' → logprob: -3.9689385890960693
    8. ' A' → logprob: -4.718938827514648
    9. 'index' → logprob: -4.718938827514648
    10. 'for' → logprob: -4.843938827514648

Token 95: '_cycle' (ID: 97714)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.49596619606018066
    2. ' =' → logprob: -1.9959661960601807
    3. '_b' → logprob: -2.1209661960601807
    4. '_cycle' → logprob: -2.9959661960601807
    5. '_idx' → logprob: -3.9959661960601807
    6. '_index' → logprob: -4.120965957641602
    7. '_val' → logprob: -4.370965957641602
    8. '=' → logprob: -4.620965957641602
    9. '_i' → logprob: -4.870965957641602
    10. '_value' → logprob: -4.870965957641602

Token 96: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00783445406705141
    2. '=' → logprob: -4.882834434509277
    3. ' ' → logprob: -9.507834434509277
    4. '   ' → logprob: -9.882834434509277
    5. 's' → logprob: -11.132834434509277
    6. ',' → logprob: -11.132834434509277
    7. '=[]' → logprob: -11.132834434509277
    8. '.append' → logprob: -11.507834434509277
    9. '    ' → logprob: -11.632834434509277
    10. '_list' → logprob: -11.757834434509277

Token 97: ' []
' (ID: 8911)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.34939324855804443
    2. '[' → logprob: -1.4743932485580444
    3. ' []' → logprob: -3.224393367767334
    4. '[]' → logprob: -3.974393367767334
    5. '[b' → logprob: -5.474393367767334
    6. '[B' → logprob: -6.474393367767334
    7. '[A' → logprob: -6.974393367767334
    8. '[a' → logprob: -8.849392890930176
    9. '[i' → logprob: -8.974392890930176
    10. ' ' → logprob: -9.349392890930176

Token 98: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9055516719818115
    2. '       ' → logprob: -1.2805516719818115
    3. '<|end|>' → logprob: -1.2805516719818115
    4. ' for' → logprob: -4.905551910400391
    5. '   ' → logprob: -5.030551910400391
    6. '               ' → logprob: -5.155551910400391
    7. '<|end|>' → logprob: -5.280551910400391
    8. '        ' → logprob: -6.405551910400391
    9. ' while' → logprob: -6.530551910400391
    10. ' ' → logprob: -6.530551910400391

Token 99: ' new' (ID: 620)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8429674506187439
    2. 'while' → logprob: -1.4679675102233887
    3. ' while' → logprob: -2.0929675102233887
    4. 'current' → logprob: -2.5929675102233887
    5. '           ' → logprob: -2.9679675102233887
    6. ' j' → logprob: -3.8429675102233887
    7. '       ' → logprob: -3.8429675102233887
    8. ' current' → logprob: -3.9679675102233887
    9. 'index' → logprob: -4.592967510223389
    10. '   ' → logprob: -5.092967510223389

Token 100: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.0056677027605473995
    2. ' =' → logprob: -6.130667686462402
    3. '_index' → logprob: -6.880667686462402
    4. 'cycle' → logprob: -7.255667686462402
    5. '_' → logprob: -7.380667686462402
    6. ' cycle' → logprob: -7.755667686462402
    7. '_idx' → logprob: -9.005667686462402
    8. 'for' → logprob: -9.380667686462402
    9. '=' → logprob: -9.630667686462402
    10. ',' → logprob: -10.005667686462402

Token 101: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.012190911918878555
    2. ' =' → logprob: -4.887190818786621
    3. '=' → logprob: -6.387190818786621
    4. '.' → logprob: -6.637190818786621
    5. '.extend' → logprob: -7.012190818786621
    6. ' .' → logprob: -8.012190818786621
    7. 'append' → logprob: -8.387190818786621
    8. '_append' → logprob: -9.637190818786621
    9. '.clear' → logprob: -11.012190818786621
    10. ' append' → logprob: -11.762190818786621

Token 102: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0010931886499747634
    2. '(B' → logprob: -6.87609338760376
    3. '(' → logprob: -10.001092910766602
    4. '(i' → logprob: -11.876092910766602
    5. '((' → logprob: -12.626092910766602
    6. '(c' → logprob: -13.376092910766602
    7. '(A' → logprob: -13.376092910766602
    8. 'b' → logprob: -14.126092910766602
    9. '(a' → logprob: -14.126092910766602
    10. '(
' → logprob: -17.1260929107666

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16034476459026337
    2. ')
' → logprob: -1.9103447198867798
    3. ' )' → logprob: -10.035345077514648
    4. ' )
' → logprob: -10.660345077514648
    5. '           ' → logprob: -10.785345077514648
    6. '<|end|>' → logprob: -11.410345077514648
    7. ')
' → logprob: -11.785345077514648
    8. ')

' → logprob: -12.160345077514648
    9. '       ' → logprob: -12.660345077514648
    10. '<|end|>' → logprob: -13.660345077514648

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08958740532398224
    2. '<|end|>' → logprob: -3.089587450027466
    3. '       ' → logprob: -4.089587211608887
    4. '        
' → logprob: -4.964587211608887
    5. '            
' → logprob: -5.214587211608887
    6. ')' → logprob: -5.714587211608887
    7. '
' → logprob: -6.089587211608887
    8. 'B' → logprob: -7.339587211608887
    9. 'b' → logprob: -7.589587211608887
    10. ' B' → logprob: -7.714587211608887

Token 105: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.03779379650950432
    2. ' B' → logprob: -4.0377936363220215
    3. '           ' → logprob: -4.0377936363220215
    4. '       ' → logprob: -7.9127936363220215
    5. 'index' → logprob: -8.03779411315918
    6. '   ' → logprob: -8.03779411315918
    7. 'b' → logprob: -8.53779411315918
    8. 'idx' → logprob: -8.91279411315918
    9. 'for' → logprob: -9.53779411315918
    10. 'j' → logprob: -9.53779411315918

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0026085947174578905
    2. '[' → logprob: -6.377608776092529
    3. '[index' → logprob: -8.377608299255371
    4. '[j' → logprob: -8.877608299255371
    5. ' =' → logprob: -8.877608299255371
    6. ' [' → logprob: -9.252608299255371
    7. '.append' → logprob: -9.877608299255371
    8. '[in' → logprob: -10.002608299255371
    9. '[B' → logprob: -10.377608299255371
    10. '.index' → logprob: -10.377608299255371

Token 107: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7753146290779114
    2. ' =' → logprob: -1.0253145694732666
    3. ']' → logprob: -1.7753145694732666
    4. ']=' → logprob: -4.525314807891846
    5. '=None' → logprob: -8.275314331054688
    6. ' ]' → logprob: -8.775314331054688
    7. 'None' → logprob: -10.275314331054688
    8. ' None' → logprob: -11.400314331054688
    9. ' ' → logprob: -11.650314331054688
    10. ')' → logprob: -11.650314331054688

Token 108: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07900578528642654
    2. ' =' → logprob: -2.579005718231201
    3. '=None' → logprob: -9.07900619506836
    4. 'None' → logprob: -13.95400619506836
    5. ' None' → logprob: -15.07900619506836
    6. ' ' → logprob: -15.32900619506836
    7. ']=' → logprob: -15.95400619506836
    8. ',' → logprob: -16.32900619506836
    9. '[' → logprob: -16.57900619506836
    10. '=

' → logprob: -16.57900619506836

Token 109: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0008078443352133036
    2. ' None' → logprob: -7.125807762145996
    3. '   ' → logprob: -12.875807762145996
    4. '(None' → logprob: -15.375807762145996
    5. '  ' → logprob: -15.500807762145996
    6. ' ' → logprob: -16.000808715820312
    7. '_None' → logprob: -16.500808715820312
    8. '=None' → logprob: -16.750808715820312
    9. ',None' → logprob: -17.000808715820312
    10. '0' → logprob: -17.375808715820312

Token 110: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0996251255273819
    2. ' for' → logprob: -3.3496251106262207
    3. '       ' → logprob: -3.4746251106262207
    4. '<|end|>' → logprob: -4.349625110626221
    5. 'for' → logprob: -5.474625110626221
    6. '   ' → logprob: -5.724625110626221
    7. ')' → logprob: -5.724625110626221
    8. '
' → logprob: -6.724625110626221
    9. ' while' → logprob: -6.974625110626221
    10. '            
' → logprob: -7.724625110626221

Token 111: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021579593420028687
    2. '       ' → logprob: -4.396579742431641
    3. '   ' → logprob: -6.521579742431641
    4. ' current' → logprob: -6.521579742431641
    5. 'current' → logprob: -6.646579742431641
    6. ' while' → logprob: -6.896579742431641
    7. ' next' → logprob: -7.521579742431641
    8. 'next' → logprob: -7.646579742431641
    9. 'while' → logprob: -7.771579742431641
    10. ' for' → logprob: -7.896579742431641

Token 112: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6693946123123169
    2. '       ' → logprob: -1.669394612312317
    3. 'j' → logprob: -2.4193944931030273
    4. 'while' → logprob: -2.7943944931030273
    5. 'current' → logprob: -3.4193944931030273
    6. 'for' → logprob: -3.5443944931030273
    7. ' while' → logprob: -3.9193944931030273
    8. ' for' → logprob: -4.169394493103027
    9. 'next' → logprob: -4.544394493103027
    10. '   ' → logprob: -4.669394493103027

Token 113: ' =' (ID: 314)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.40926745533943176
    2. 'ze' → logprob: -1.1592674255371094
    3. 'x' → logprob: -5.159267425537109
    4. 'm' → logprob: -5.159267425537109
    5. 'zes' → logprob: -5.534267425537109
    6. 's' → logprob: -5.909267425537109
    7. '   ' → logprob: -7.284267425537109
    8. ' =' → logprob: -7.284267425537109
    9. '=' → logprob: -7.659267425537109
    10. 't' → logprob: -8.03426742553711

Token 114: ' A' (ID: 355)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1581079512834549
    2. 'A' → logprob: -2.1581079959869385
    3. ' i' → logprob: -4.158107757568359
    4. ' A' → logprob: -4.283107757568359
    5. 'B' → logprob: -7.033107757568359
    6. '   ' → logprob: -9.28310775756836
    7. ' B' → logprob: -9.40810775756836
    8. ' ' → logprob: -9.53310775756836
    9. 'b' → logprob: -9.53310775756836
    10. '  ' → logprob: -11.59560775756836

Token 115: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0027448388282209635
    2. '.' → logprob: -6.002744674682617
    3. 'index' → logprob: -8.252744674682617
    4. ' .' → logprob: -12.627744674682617
    5. '[i' → logprob: -13.877744674682617
    6. 'A' → logprob: -14.127744674682617
    7. '.Index' → logprob: -14.502744674682617
    8. '#index' → logprob: -14.752744674682617
    9. 'B' → logprob: -14.877744674682617
    10. ' index' → logprob: -15.002744674682617

Token 116: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00010235115041723475
    2. '(B' → logprob: -9.750102043151855
    3. '(' → logprob: -10.125102043151855
    4. 'b' → logprob: -12.875102043151855
    5. '(a' → logprob: -14.125102043151855
    6. '(i' → logprob: -14.875102043151855
    7. '(s' → logprob: -15.750102043151855
    8. ' (' → logprob: -17.000102996826172
    9. '(A' → logprob: -18.125102996826172
    10. '(c' → logprob: -18.125102996826172

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6942782998085022
    2. ')
' → logprob: -0.6942782998085022
    3. '           ' → logprob: -6.819278240203857
    4. ')
' → logprob: -10.569278717041016
    5. ' )
' → logprob: -12.944278717041016
    6. '       ' → logprob: -13.069278717041016
    7. '   ' → logprob: -13.069278717041016
    8. ')

' → logprob: -13.319278717041016
    9. ' )' → logprob: -13.444278717041016
    10. ')`
' → logprob: -14.569278717041016

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0830266922712326
    2. 'while' → logprob: -2.958026647567749
    3. '```' → logprob: -4.083026885986328
    4. ' while' → logprob: -4.583026885986328
    5. '   ' → logprob: -8.583026885986328
    6. '       ' → logprob: -8.833026885986328
    7. '            
' → logprob: -8.833026885986328
    8. '<|end|>' → logprob: -9.958026885986328
    9. '``' → logprob: -10.958026885986328
    10. '    
' → logprob: -11.333026885986328

Token 119: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033622467890381813
    2. 'while' (adapté à ' while') → logprob: -5.75336217880249
    3. '
' → logprob: -9.128362655639648
    4. '            
' → logprob: -10.003362655639648
    5. ' while' → logprob: -10.878362655639648
    6. '```' → logprob: -12.628362655639648
    7. '       ' → logprob: -13.128362655639648
    8. 'next' → logprob: -13.503362655639648
    9. '          ' → logprob: -14.378362655639648
    10. '   ' → logprob: -14.503362655639648

Token 120: ' si' (ID: 1784)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07666682451963425
    2. ' B' → logprob: -2.951666831970215
    3. 'True' → logprob: -4.201666831970215
    4. ' True' → logprob: -5.826666831970215
    5. '           ' → logprob: -6.201666831970215
    6. 'A' → logprob: -6.701666831970215
    7. '   ' → logprob: -9.201666831970215
    8. ' A' → logprob: -9.326666831970215
    9. 'b' → logprob: -9.951666831970215
    10. ' not' → logprob: -10.326666831970215

Token 121: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22647669911384583
    2. '!=' → logprob: -1.6014766693115234
    3. ' is' → logprob: -8.351476669311523
    4. '<|end|>' → logprob: -8.351476669311523
    5. ' not' → logprob: -8.476476669311523
    6. ')!=' → logprob: -9.226476669311523
    7. '!=-' → logprob: -9.351476669311523
    8. 'is' → logprob: -10.351476669311523
    9. '=' → logprob: -10.601476669311523
    10. '!' → logprob: -10.601476669311523

Token 122: ' i' (ID: 575)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1603299379348755
    2. 'i' → logprob: -2.035329818725586
    3. ' -' → logprob: -5.035329818725586
    4. 'B' → logprob: -5.785329818725586
    5. 'len' → logprob: -5.785329818725586
    6. 'A' → logprob: -6.535329818725586
    7. 'None' → logprob: -6.660329818725586
    8. '0' → logprob: -6.785329818725586
    9. ' i' → logprob: -7.410329818725586
    10. '-i' → logprob: -9.535329818725586

Token 123: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27127695083618164
    2. ':
' → logprob: -2.0212769508361816
    3. ' and' → logprob: -2.2712769508361816
    4. 'and' → logprob: -6.396276950836182
    5. '       ' → logprob: -9.896276473999023
    6. ',' → logprob: -10.146276473999023
    7. '   ' → logprob: -10.396276473999023
    8. ' :' → logprob: -10.396276473999023
    9. '=' → logprob: -10.896276473999023
    10. '<|end|>' → logprob: -10.896276473999023

Token 124: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004264185205101967
    2. '<|end|>' → logprob: -6.1292643547058105
    3. '           ' → logprob: -6.8792643547058105
    4. '       ' → logprob: -8.129263877868652
    5. '              ' → logprob: -9.129263877868652
    6. ' new' → logprob: -9.129263877868652
    7. '                
' → logprob: -9.129263877868652
    8. ' ' → logprob: -9.504263877868652
    9. '                ' → logprob: -9.629263877868652
    10. '<|end|>' → logprob: -10.004263877868652

Token 125: ' st' (ID: 420)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4076627492904663
    2. '               ' → logprob: -1.5326627492904663
    3. ' new' → logprob: -3.157662868499756
    4. 'si' → logprob: -3.657662868499756
    5. 'next' → logprob: -4.407662868499756
    6. 'b' → logprob: -4.782662868499756
    7. 'element' → logprob: -5.032662868499756
    8. '                   ' → logprob: -5.157662868499756
    9. 'value' → logprob: -5.782662868499756
    10. '   ' → logprob: -5.907662868499756

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.4746026992797852
    2. 'i' → logprob: -1.5996026992797852
    3. 'art' → logprob: -1.5996026992797852
    4. 'ack' → logprob: -2.099602699279785
    5. 'r' → logprob: -2.849602699279785
    6. '=' → logprob: -3.099602699279785
    7. 'ate' → logprob: -3.599602699279785
    8. '_index' → logprob: -3.849602699279785
    9. 'ay' → logprob: -3.974602699279785
    10. 'mp' → logprob: -4.474602699279785

Token 127: ' B' (ID: 418)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0031901898328214884
    2. ' A' → logprob: -6.003190040588379
    3. 'B' → logprob: -7.253190040588379
    4. '   ' → logprob: -12.878190040588379
    5. ' B' → logprob: -13.128190040588379
    6. '	A' → logprob: -14.128190040588379
    7. ' ' → logprob: -14.503190040588379
    8. '  ' → logprob: -15.628190040588379
    9. 'b' → logprob: -16.253190994262695
    10. 'index' → logprob: -16.628190994262695

Token 128: '[' (ID: 58)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.5672407150268555
    2. '.index' → logprob: -1.1922407150268555
    3. '[' → logprob: -2.0672407150268555
    4. 'index' → logprob: -6.4422407150268555
    5. 'A' → logprob: -6.9422407150268555
    6. 'si' → logprob: -8.817240715026855
    7. '[index' → logprob: -9.942240715026855
    8. '[B' → logprob: -11.442240715026855
    9. '[i' → logprob: -11.567240715026855
    10. '   ' → logprob: -11.692240715026855

Token 129: 'si' (ID: 4778)
  Prédit: 'si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.002841372275725007
    2. 'A' → logprob: -5.877841472625732
    3. ' si' → logprob: -11.127840995788574
    4. 's' → logprob: -11.627840995788574
    5. 'st' → logprob: -12.502840995788574
    6. 'index' → logprob: -12.877840995788574
    7. ']' → logprob: -14.127840995788574
    8. '   ' → logprob: -14.252840995788574
    9. 'i' → logprob: -14.252840995788574
    10. ' A' → logprob: -14.502840995788574

Token 130: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2523846924304962
    2. ']
' → logprob: -1.5023846626281738
    3. ']

' → logprob: -8.377385139465332
    4. '<|end|>' → logprob: -9.752385139465332
    5. ' ]' → logprob: -10.502385139465332
    6. '])' → logprob: -10.627385139465332
    7. ')
' → logprob: -10.627385139465332
    8. ')' → logprob: -11.127385139465332
    9. '<|end|>' → logprob: -11.127385139465332
    10. '])
' → logprob: -11.252385139465332

Token 131: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13328464329242706
    2. 'new' → logprob: -2.508284568786621
    3. ' new' → logprob: -3.883284568786621
    4. '<|end|>' → logprob: -4.383284568786621
    5. '           ' → logprob: -5.133284568786621
    6. '<|end|>' → logprob: -6.758284568786621
    7. ')' → logprob: -7.133284568786621
    8. '                
' → logprob: -7.883284568786621
    9. '       ' → logprob: -8.133284568786621
    10. '```' → logprob: -8.383284568786621

Token 132: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.40220940113067627
    2. 'B' → logprob: -1.6522094011306763
    3. 'if' → logprob: -2.9022092819213867
    4. '               ' → logprob: -3.1522092819213867
    5. ' new' → logprob: -3.4022092819213867
    6. ' if' → logprob: -5.402209281921387
    7. '           ' → logprob: -6.152209281921387
    8. ' B' → logprob: -6.902209281921387
    9. '       ' → logprob: -8.402209281921387
    10. '<|end|>' → logprob: -9.402209281921387

Token 133: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -1.4021237802808173e-05
    2. 'cycle' → logprob: -11.250014305114746
    3. ' cycle' → logprob: -15.375014305114746
    4. '.append' → logprob: -15.500014305114746
    5. '_cycles' → logprob: -15.500014305114746
    6. 'Cycle' → logprob: -15.875014305114746
    7. '_' → logprob: -16.75001335144043
    8. '_code' → logprob: -17.62501335144043
    9. '-cycle' → logprob: -17.75001335144043
    10. 'new' → logprob: -17.75001335144043

Token 134: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019659854006022215
    2. '.' → logprob: -6.2519659996032715
    3. '=' → logprob: -10.626965522766113
    4. 'append' → logprob: -12.501965522766113
    5. ' =' → logprob: -12.626965522766113
    6. '.remove' → logprob: -13.126965522766113
    7. '.pop' → logprob: -13.251965522766113
    8. ' .' → logprob: -13.876965522766113
    9. ')' → logprob: -15.001965522766113
    10. '.=' → logprob: -15.251965522766113

Token 135: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -1.1994775377388578e-05
    2. '(A' → logprob: -11.625012397766113
    3. 'st' → logprob: -13.625012397766113
    4. '(' → logprob: -14.000012397766113
    5. '(B' → logprob: -14.125012397766113
    6. ' st' → logprob: -16.250011444091797
    7. '(St' → logprob: -17.000011444091797
    8. 'A' → logprob: -17.125011444091797
    9. '(si' → logprob: -18.375011444091797
    10. '	st' → logprob: -18.500011444091797

Token 136: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3151719272136688
    2. ')
' → logprob: -1.3151719570159912
    3. '               ' → logprob: -6.440171718597412
    4. '           ' → logprob: -8.19017219543457
    5. ')
' → logprob: -11.06517219543457
    6. '       ' → logprob: -11.69017219543457
    7. '                   ' → logprob: -12.69017219543457
    8. ')

' → logprob: -13.56517219543457
    9. ' )' → logprob: -13.94017219543457
    10. '),' → logprob: -14.06517219543457

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000885730201844126
    2. '           ' → logprob: -7.250885963439941
    3. '       ' → logprob: -9.375885963439941
    4. 'B' → logprob: -10.125885963439941
    5. '              ' → logprob: -11.125885963439941
    6. '                   ' → logprob: -11.250885963439941
    7. '<|end|>' → logprob: -12.250885963439941
    8. '```' → logprob: -12.500885963439941
    9. '                ' → logprob: -12.750885963439941
    10. ')' → logprob: -12.750885963439941

Token 138: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.005947406403720379
    2. ' B' → logprob: -5.130947589874268
    3. '           ' → logprob: -11.63094711303711
    4. '               ' → logprob: -12.38094711303711
    5. '                   ' → logprob: -13.00594711303711
    6. '   ' → logprob: -13.38094711303711
    7. ' ' → logprob: -14.38094711303711
    8. '       ' → logprob: -15.25594711303711
    9. 'si' → logprob: -16.00594711303711
    10. 'None' → logprob: -16.25594711303711

Token 139: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -16.0
    3. '```' → logprob: -16.25
    4. '[
' → logprob: -16.625
    5. '][' → logprob: -17.5
    6. '[s' → logprob: -17.875
    7. ')[' → logprob: -18.0
    8. '[js' → logprob: -18.125
    9. '   ' → logprob: -18.375
    10. '[i' → logprob: -18.5

Token 140: 'si' (ID: 4778)
  Prédit: 'si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -1.2664456789934775e-06
    2. ' si' → logprob: -14.125000953674316
    3. '[' → logprob: -15.500000953674316
    4. '(si' → logprob: -16.500001907348633
    5. 'st' → logprob: -16.625001907348633
    6. 's' → logprob: -16.750001907348633
    7. ']' → logprob: -18.125001907348633
    8. 'sti' → logprob: -18.375001907348633
    9. 'i' → logprob: -18.500001907348633
    10. 'sj' → logprob: -18.750001907348633

Token 141: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14144732058048248
    2. ']' → logprob: -2.1414473056793213
    3. ' =' → logprob: -4.7664475440979
    4. ']=' → logprob: -5.1414475440979
    5. ')' → logprob: -10.391447067260742
    6. '=None' → logprob: -11.266447067260742
    7. ' ]' → logprob: -12.141447067260742
    8. ')=' → logprob: -12.766447067260742
    9. 'None' → logprob: -13.891447067260742
    10. '<|end|>' → logprob: -14.516447067260742

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015171191189438105
    2. ' =' → logprob: -6.501517295837402
    3. '=None' → logprob: -11.126517295837402
    4. '=False' → logprob: -17.751516342163086
    5. '＝' → logprob: -18.126516342163086
    6. '=
' → logprob: -18.876516342163086
    7. '=

' → logprob: -19.376516342163086
    8. 'None' → logprob: -20.001516342163086
    9. '=True' → logprob: -20.001516342163086
    10. ']=' → logprob: -20.376516342163086

Token 143: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.836499985889532e-05
    2. ' None' → logprob: -9.7500581741333
    3. '=None' → logprob: -17.125059127807617
    4. '(None' → logprob: -17.250059127807617
    5. '_None' → logprob: -17.500059127807617
    6. ',None' → logprob: -18.375059127807617
    7. '[' → logprob: -19.000059127807617
    8. '   ' → logprob: -20.500059127807617
    9. '.None' → logprob: -20.750059127807617
    10. '#' → logprob: -21.250059127807617

Token 144: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.719917630311102e-05
    2. '<|end|>' → logprob: -10.500077247619629
    3. '
' → logprob: -11.750077247619629
    4. '       ' → logprob: -11.875077247619629
    5. 'si' → logprob: -12.000077247619629
    6. '                
' → logprob: -12.375077247619629
    7. ',' → logprob: -12.500077247619629
    8. '              ' → logprob: -12.625077247619629
    9. ' si' → logprob: -12.625077247619629
    10. '<|end|>' → logprob: -12.750077247619629

Token 145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002456046058796346
    2. '<|end|>' → logprob: -9.375246047973633
    3. '       ' → logprob: -9.500246047973633
    4. '           ' → logprob: -10.125246047973633
    5. 'si' → logprob: -10.875246047973633
    6. '                   ' → logprob: -11.875246047973633
    7. '              ' → logprob: -12.000246047973633
    8. '                
' → logprob: -12.625246047973633
    9. '<|end|>' → logprob: -13.000246047973633
    10. '   ' → logprob: -13.250246047973633

Token 146: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' (adapté à ' si') → logprob: -0.00044401636114344
    2. '               ' → logprob: -8.125444412231445
    3. ' si' → logprob: -8.875444412231445
    4. '           ' → logprob: -12.750444412231445
    5. 'st' → logprob: -13.500444412231445
    6. '                   ' → logprob: -13.500444412231445
    7. '   ' → logprob: -14.000444412231445
    8. '       ' → logprob: -14.375444412231445
    9. 'sti' → logprob: -15.875444412231445
    10. 'se' → logprob: -16.250444412231445

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693378329277039
    2. ' =' → logprob: -2.1269338130950928
    3. '<|end|>' → logprob: -12.876934051513672
    4. ' +=' → logprob: -13.626934051513672
    5. ' ' → logprob: -14.376934051513672
    6. '+=' → logprob: -15.376934051513672
    7. ')' → logprob: -15.626934051513672
    8. ',' → logprob: -15.876934051513672
    9. '=}' → logprob: -16.126934051513672
    10. '=
' → logprob: -16.251934051513672

Token 148: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0032738489098846912
    2. ' A' → logprob: -5.878273963928223
    3. 'si' → logprob: -7.753273963928223
    4. 'st' → logprob: -11.128273963928223
    5. ' ' → logprob: -11.753273963928223
    6. '   ' → logprob: -11.753273963928223
    7. ' si' → logprob: -13.003273963928223
    8. '  ' → logprob: -13.128273963928223
    9. 's' → logprob: -13.253273963928223
    10. '	A' → logprob: -13.878273963928223

Token 149: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.03812319412827492
    2. 'index' → logprob: -3.28812313079834
    3. '[' → logprob: -9.53812313079834
    4. '.' → logprob: -12.91312313079834
    5. '#index' → logprob: -12.91312313079834
    6. '[index' → logprob: -13.41312313079834
    7. ' index' → logprob: -13.41312313079834
    8. '.Index' → logprob: -14.41312313079834
    9. '_index' → logprob: -15.03812313079834
    10. ':index' → logprob: -15.53812313079834

Token 150: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0006124787032604218
    2. 'st' → logprob: -7.625612258911133
    3. '(B' → logprob: -9.125612258911133
    4. '(A' → logprob: -11.500612258911133
    5. '(' → logprob: -12.375612258911133
    6. 'B' → logprob: -14.500612258911133
    7. '(St' → logprob: -15.000612258911133
    8. ' st' → logprob: -16.000612258911133
    9. 'A' → logprob: -16.125612258911133
    10. 'new' → logprob: -16.625612258911133

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -10.875020027160645
    3. ' )' → logprob: -14.750020027160645
    4. '<|end|>' → logprob: -15.625020027160645
    5. ')

' → logprob: -16.250019073486328
    6. '))' → logprob: -17.375019073486328
    7. ')}' → logprob: -17.500019073486328
    8. ')return' → logprob: -17.500019073486328
    9. '   ' → logprob: -17.750019073486328
    10. '),' → logprob: -17.875019073486328

Token 152: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' cycle' (ID: 15839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0685468912124634
    2. '<|end|>' → logprob: -1.5685468912124634
    3. '       ' → logprob: -1.8185468912124634
    4. ' return' → logprob: -2.693546772003174
    5. 'return' → logprob: -2.693546772003174
    6. '
' → logprob: -3.068546772003174
    7. ')' → logprob: -3.318546772003174
    8. ' ' → logprob: -3.693546772003174
    9. ' 
' → logprob: -4.318546772003174
    10. '    ' → logprob: -5.318546772003174

Token 154: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.750004768371582
    3. 's' → logprob: -14.000004768371582
    4. 'list' → logprob: -15.375004768371582
    5. 'List' → logprob: -15.625004768371582
    6. '.append' → logprob: -15.875004768371582
    7. '_lists' → logprob: -16.000003814697266
    8. '_List' → logprob: -17.250003814697266
    9. '=' → logprob: -17.250003814697266
    10. '_new' → logprob: -17.625003814697266

Token 155: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.04375552386045456
    2. '.extend' → logprob: -3.293755531311035
    3. '.' → logprob: -5.168755531311035
    4. 'append' → logprob: -13.168755531311035
    5. '.Append' → logprob: -14.293755531311035
    6. '+=' → logprob: -14.293755531311035
    7. '.app' → logprob: -14.418755531311035
    8. '_append' → logprob: -14.418755531311035
    9. ' +=' → logprob: -14.918755531311035
    10. 'Append' → logprob: -15.043755531311035

Token 156: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.500001907348633
    3. 'new' → logprob: -16.000001907348633
    4. '(tuple' → logprob: -16.625001907348633
    5. '((' → logprob: -17.750001907348633
    6. '(list' → logprob: -18.500001907348633
    7. '(len' → logprob: -19.625001907348633
    8. '(sorted' → logprob: -19.750001907348633
    9. ' (' → logprob: -20.000001907348633
    10. ' new' → logprob: -20.500001907348633

Token 157: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -0.0001382241171086207
    2. 'cycle' → logprob: -9.250138282775879
    3. '_' → logprob: -10.125138282775879
    4. '_c' → logprob: -14.375138282775879
    5. 'Cycle' → logprob: -15.375138282775879
    6. '_list' → logprob: -15.500138282775879
    7. '_cycles' → logprob: -16.125137329101562
    8. ' cycle' → logprob: -16.250137329101562
    9. '[' → logprob: -16.500137329101562
    10. 'cy' → logprob: -16.750137329101562

Token 158: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.750006675720215
    3. ' )' → logprob: -13.000006675720215
    4. ')return' → logprob: -14.250006675720215
    5. '   ' → logprob: -14.750006675720215
    6. '<|end|>' → logprob: -15.500006675720215
    7. '[' → logprob: -17.2500057220459
    8. '))' → logprob: -17.2500057220459
    9. '),' → logprob: -17.6250057220459
    10. ']' → logprob: -17.6250057220459

Token 159: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3854266405105591
    2. '<|end|>' → logprob: -1.385426640510559
    3. '
' → logprob: -3.3854265213012695
    4. ')' → logprob: -4.5104265213012695
    5. '    
' → logprob: -5.0104265213012695
    6. '\n' → logprob: -5.1354265213012695
    7. 'return' → logprob: -5.7604265213012695
    8. ' return' → logprob: -6.1354265213012695
    9. '[' → logprob: -6.5104265213012695
    10. '<|end|>' → logprob: -6.8854265213012695

Token 160: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27398359775543213
    2. '<|end|>' → logprob: -1.6489835977554321
    3. 'return' (adapté à ' return') → logprob: -4.648983478546143
    4. ')' → logprob: -4.648983478546143
    5. ' return' → logprob: -4.898983478546143
    6. '
' → logprob: -5.023983478546143
    7. '    ' → logprob: -5.273983478546143
    8. '    
' → logprob: -5.523983478546143
    9. ' ' → logprob: -6.523983478546143
    10. ']' → logprob: -7.648983478546143

Token 161: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.1426871418952942
    2. ' cycle' → logprob: -2.0176870822906494
    3. ' ' → logprob: -12.76768684387207
    4. 'c' → logprob: -13.01768684387207
    5. '   ' → logprob: -13.64268684387207
    6. '  ' → logprob: -13.76768684387207
    7. 'cycles' → logprob: -14.01768684387207
    8. 'cy' → logprob: -14.14268684387207
    9. '[' → logprob: -14.26768684387207
    10. ' ciclo' → logprob: -14.89268684387207

Token 162: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -14.375000953674316
    3. '_l' → logprob: -14.750000953674316
    4. '_lst' → logprob: -16.250001907348633
    5. '_lists' → logprob: -17.500001907348633
    6. '_cycle' → logprob: -17.750001907348633
    7. '_li' → logprob: -18.125001907348633
    8. 'list' → logprob: -18.125001907348633
    9. ' _' → logprob: -18.500001907348633
    10. 'l' → logprob: -19.375001907348633

Token 163: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8238688111305237
    2. ' ' → logprob: -0.9488688111305237
    3. ')' → logprob: -2.073868751525879
    4. '<|end|>' → logprob: -3.573868751525879
    5. ':' → logprob: -5.698868751525879
    6. '```' → logprob: -5.823868751525879
    7. '(' → logprob: -6.073868751525879
    8. ']' → logprob: -6.198868751525879
    9. '
' → logprob: -6.698868751525879
    10. ',' → logprob: -6.698868751525879

Token 164: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7382687926292419
    2. '#' → logprob: -1.4882688522338867
    3. '[' → logprob: -2.2382688522338867
    4. '<|end|>' → logprob: -2.3632688522338867
    5. '```' → logprob: -3.1132688522338867
    6. 'def' → logprob: -4.613268852233887
    7. '
' → logprob: -4.738268852233887
    8. ' ' → logprob: -5.113268852233887
    9. ',' → logprob: -5.113268852233887
    10. 'n' → logprob: -5.613268852233887

Token 165: ' min' (ID: 1349)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.731372058391571
    2. 'minimum' → logprob: -1.2313721179962158
    3. ' min' → logprob: -1.9813721179962158
    4. 'min' → logprob: -2.481372117996216
    5. ' minimal' → logprob: -6.981371879577637
    6. ' get' → logprob: -7.106371879577637
    7. 'cost' → logprob: -7.981371879577637
    8. 'sort' → logprob: -8.106371879577637
    9. ' sort' → logprob: -8.106371879577637
    10. 'minimal' → logprob: -8.106371879577637

Token 166: '_sort' (ID: 43815)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.5766682028770447
    2. 'imum' → logprob: -0.8266682028770447
    3. 'cost' → logprob: -8.326667785644531
    4. '_cycle' → logprob: -8.451667785644531
    5. 'mum' → logprob: -10.201667785644531
    6. '_' → logprob: -10.201667785644531
    7. '_sort' → logprob: -10.326667785644531
    8. '_swap' → logprob: -10.326667785644531
    9. 'im' → logprob: -10.576667785644531
    10. 'Cost' → logprob: -10.576667785644531

Token 167: 'ing' (ID: 289)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.03957878798246384
    2. '(A' → logprob: -3.289578676223755
    3. 'ing' → logprob: -7.789578914642334
    4. 'Cost' → logprob: -8.039578437805176
    5. 'cost' → logprob: -8.289578437805176
    6. '(C' → logprob: -8.539578437805176
    7. '(' → logprob: -9.539578437805176
    8. '_cycle' → logprob: -9.539578437805176
    9. '_price' → logprob: -9.914578437805176
    10. '(arr' → logprob: -10.414578437805176

Token 168: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.08193226903676987
    2. '(A' → logprob: -2.581932306289673
    3. '_cycle' → logprob: -6.956932067871094
    4. 'cost' → logprob: -7.081932067871094
    5. '(arr' → logprob: -7.581932067871094
    6. '(' → logprob: -8.206932067871094
    7. 'Cost' → logprob: -9.081932067871094
    8. '_cycles' → logprob: -9.706932067871094
    9. '_sum' → logprob: -10.081932067871094
    10. '(C' → logprob: -10.331932067871094

Token 169: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00491268141195178
    2. '(' → logprob: -5.379912853240967
    3. '(a' → logprob: -9.004912376403809
    4. '(arr' → logprob: -9.004912376403809
    5. '(S' → logprob: -11.004912376403809
    6. '(array' → logprob: -11.879912376403809
    7. '(lst' → logprob: -12.129912376403809
    8. '(s' → logprob: -12.629912376403809
    9. ' (' → logprob: -12.879912376403809
    10. 'def' → logprob: -13.004912376403809

Token 170: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000285530521068722
    2. '):
' → logprob: -8.250285148620605
    3. ':' → logprob: -11.250285148620605
    4. ')' → logprob: -11.500285148620605
    5. '):
' → logprob: -14.750285148620605
    6. ' ):' → logprob: -15.625285148620605
    7. ',' → logprob: -16.000286102294922
    8. '   ' → logprob: -16.000286102294922
    9. '):

' → logprob: -16.250286102294922
    10. ']:' → logprob: -16.500286102294922

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008302384987473488
    2. ':' → logprob: -5.008302211761475
    3. '(' → logprob: -7.508302211761475
    4. '[' → logprob: -8.133302688598633
    5. '():' → logprob: -8.633302688598633
    6. '    ' → logprob: -8.758302688598633
    7. '    
' → logprob: -9.008302688598633
    8. 'def' → logprob: -9.133302688598633
    9. ':
' → logprob: -10.383302688598633
    10. '(A' → logprob: -10.633302688598633

Token 172: ' """' (ID: 9280)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5961913466453552
    2. '   ' → logprob: -1.72119140625
    3. 'n' → logprob: -2.09619140625
    4. '"""' (adapté à ' """') → logprob: -3.59619140625
    5. ' B' → logprob: -3.97119140625
    6. ' total' → logprob: -4.22119140625
    7. ' cost' → logprob: -4.72119140625
    8. 'B' → logprob: -4.84619140625
    9. ' min' → logprob: -4.97119140625
    10. ' s' → logprob: -5.09619140625

Token 173: 'Return' (ID: 8191)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -0.2623840570449829
    2. '   ' → logprob: -2.5123839378356934
    3. ' Calculate' → logprob: -2.8873839378356934
    4. 'Return' → logprob: -3.2623839378356934
    5. '"""' → logprob: -4.012383937835693
    6. ' """' → logprob: -4.012383937835693
    7. 'def' → logprob: -5.512383937835693
    8. ' Return' → logprob: -5.512383937835693
    9. 'Minimum' → logprob: -6.137383937835693
    10. ' def' → logprob: -6.137383937835693

Token 174: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.006366459187120199
    2. 'the' → logprob: -5.50636625289917
    3. ' a' → logprob: -6.25636625289917
    4. ' ' → logprob: -8.256366729736328
    5. ' an' → logprob: -10.006366729736328
    6. ' minimum' → logprob: -11.006366729736328
    7. ' A' → logprob: -11.506366729736328
    8. '  ' → logprob: -11.506366729736328
    9. 'a' → logprob: -12.131366729736328
    10. '   ' → logprob: -12.256366729736328

Token 175: ' minimum' (ID: 11085)
  Prédit: ' minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -0.01861891709268093
    2. 'minimum' → logprob: -4.393619060516357
    3. ' minimal' → logprob: -5.143619060516357
    4. ' sum' → logprob: -9.0186185836792
    5. ' total' → logprob: -9.5186185836792
    6. ' min' → logprob: -10.6436185836792
    7. 'min' → logprob: -11.3936185836792
    8. 'minimal' → logprob: -11.8936185836792
    9. ' ' → logprob: -12.2686185836792
    10. ' cost' → logprob: -12.6436185836792

Token 176: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.026523102074861526
    2. ' sorting' → logprob: -3.7765231132507324
    3. 'cost' → logprob: -5.901523113250732
    4. 'sorting' → logprob: -8.151522636413574
    5. ' space' → logprob: -9.776522636413574
    6. ' ' → logprob: -10.151522636413574
    7. ' amount' → logprob: -10.401522636413574
    8. ' sort' → logprob: -10.776522636413574
    9. '_cost' → logprob: -11.276522636413574
    10. ' _' → logprob: -11.276522636413574

Token 177: ' of' (ID: 328)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.15881238877773285
    2. ' of' → logprob: -2.2838122844696045
    3. '   ' → logprob: -4.033812522888184
    4. 'to' → logprob: -4.408812522888184
    5. ' def' → logprob: -4.783812522888184
    6. 'def' → logprob: -5.533812522888184
    7. ' for' → logprob: -6.533812522888184
    8. 'of' → logprob: -7.408812522888184
    9. ' required' → logprob: -8.908812522888184
    10. ':' → logprob: -9.158812522888184

Token 178: ' sorting' (ID: 51375)
  Prédit: 'sorting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorting' → logprob: -0.01619214192032814
    2. ' sorting' → logprob: -4.1411919593811035
    3. 'sort' → logprob: -9.266192436218262
    4. 'minimum' → logprob: -10.516192436218262
    5. 'A' → logprob: -11.516192436218262
    6. 'sorted' → logprob: -11.641192436218262
    7. 'the' → logprob: -12.766192436218262
    8. 'min' → logprob: -12.891192436218262
    9. '"""' → logprob: -12.891192436218262
    10. 'Sorting' → logprob: -13.016192436218262

Token 179: ' A' (ID: 355)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.38637346029281616
    2. ' the' → logprob: -1.386373519897461
    3. ' a' → logprob: -3.511373519897461
    4. ' A' → logprob: -4.011373519897461
    5. ' an' → logprob: -5.386373519897461
    6. '   ' → logprob: -5.511373519897461
    7. ' (' → logprob: -5.761373519897461
    8. 'A' → logprob: -5.761373519897461
    9. 'the' → logprob: -5.886373519897461
    10. ' by' → logprob: -6.886373519897461

Token 180: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5804814100265503
    2. '(A' → logprob: -1.2054814100265503
    3. '.' → logprob: -3.33048152923584
    4. ',' → logprob: -3.70548152923584
    5. '):' → logprob: -3.70548152923584
    6. ':' → logprob: -4.58048152923584
    7. 'def' → logprob: -4.83048152923584
    8. ')' → logprob: -4.83048152923584
    9. '.
' → logprob: -4.83048152923584
    10. ' by' → logprob: -5.58048152923584

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001264282618649304
    2. ' def' → logprob: -8.251264572143555
    3. '"""' → logprob: -8.251264572143555
    4. '    ' → logprob: -8.501264572143555
    5. ' n' → logprob: -8.876264572143555
    6. ')' → logprob: -9.126264572143555
    7. ' """' → logprob: -9.626264572143555
    8. 'def' → logprob: -9.751264572143555
    9. '"""
' → logprob: -10.126264572143555
    10. ' """
' → logprob: -10.376264572143555

Token 182: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6632902026176453
    2. ' n' → logprob: -0.9132902026176453
    3. ' cost' → logprob: -4.163290023803711
    4. 'n' → logprob: -4.413290023803711
    5. '"""
' → logprob: -4.413290023803711
    6. '
' → logprob: -4.663290023803711
    7. 'A' (adapté à ' A') → logprob: -4.663290023803711
    8. '#' → logprob: -5.288290023803711
    9. '"""' → logprob: -5.413290023803711
    10. ' A' → logprob: -5.538290023803711

Token 183: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5473785400390625
    2. ' is' → logprob: -0.9223785400390625
    3. '=' → logprob: -4.4223785400390625
    4. ':' → logprob: -5.2973785400390625
    5. ')' → logprob: -5.5473785400390625
    6. '[' → logprob: -6.6723785400390625
    7. '   ' → logprob: -7.6723785400390625
    8. '[]' → logprob: -8.547378540039062
    9. '[:]' → logprob: -8.672378540039062
    10. '=[]' → logprob: -8.672378540039062

Token 184: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.031610384583473206
    2. 'a' → logprob: -3.5316104888916016
    3. ' list' → logprob: -6.656610488891602
    4. '   ' → logprob: -8.906610488891602
    5. 'list' → logprob: -8.906610488891602
    6. '[' → logprob: -9.406610488891602
    7. '[]' → logprob: -9.906610488891602
    8. ' [' → logprob: -10.406610488891602
    9. '    ' → logprob: -10.656610488891602
    10. ' ' → logprob: -10.906610488891602

Token 185: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2816794514656067
    2. 'list' → logprob: -1.406679391860962
    3. 'List' → logprob: -7.906679630279541
    4. ' List' → logprob: -8.906679153442383
    5. '[list' → logprob: -11.531679153442383
    6. '[' → logprob: -12.156679153442383
    7. '[List' → logprob: -13.156679153442383
    8. ' [' → logprob: -13.406679153442383
    9. '   ' → logprob: -13.781679153442383
    10. ''s' → logprob: -14.031679153442383

Token 186: ' whose' (ID: 12119)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.28322795033454895
    2. '<|end|>' → logprob: -2.0332279205322266
    3. '[int' → logprob: -2.2832279205322266
    4. '<|end|>' → logprob: -5.033227920532227
    5. '[' → logprob: -6.033227920532227
    6. ' whose' → logprob: -6.908227920532227
    7. '[]' → logprob: -7.033227920532227
    8. '   ' → logprob: -7.783227920532227
    9. 'def' → logprob: -7.908227920532227
    10. '```' → logprob: -7.908227920532227

Token 187: ' elements' (ID: 8632)
  Prédit: ' elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elements' → logprob: -0.18595008552074432
    2. ' type' → logprob: -2.1859500408172607
    3. ' integers' → logprob: -3.9359500408172607
    4. 'elements' → logprob: -4.43595027923584
    5. 'type' → logprob: -4.68595027923584
    6. ' int' → logprob: -4.81095027923584
    7. '[int' → logprob: -5.68595027923584
    8. 'int' → logprob: -6.06095027923584
    9. ' element' → logprob: -6.81095027923584
    10. 'element' → logprob: -7.18595027923584

Token 188: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2332739382982254
    2. ''s' → logprob: -2.358273983001709
    3. ' are' → logprob: -2.858273983001709
    4. ' is' → logprob: -3.733273983001709
    5. '   ' → logprob: -3.983273983001709
    6. ''type' → logprob: -5.483273983001709
    7. ' of' → logprob: -5.983273983001709
    8. ' type' → logprob: -6.733273983001709
    9. '=' → logprob: -6.733273983001709
    10. ' =' → logprob: -6.858273983001709

Token 189: ' type' (ID: 1490)
  Prédit: 'type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'type' → logprob: -0.6695561408996582
    2. 'int' → logprob: -1.7945561408996582
    3. ' type' → logprob: -1.9195561408996582
    4. ''int' → logprob: -2.044556140899658
    5. ' int' → logprob: -3.794556140899658
    6. ''type' → logprob: -4.419556140899658
    7. ''' → logprob: -4.919556140899658
    8. ' '' → logprob: -6.044556140899658
    9. '```' → logprob: -7.919556140899658
    10. '[int' → logprob: -8.5445556640625

Token 190: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.03964558616280556
    2. 'is' → logprob: -3.2896456718444824
    3. ':' → logprob: -6.664645671844482
    4. ' ==' → logprob: -8.789645195007324
    5. '==' → logprob: -9.414645195007324
    6. ' :' → logprob: -10.914645195007324
    7. '```' → logprob: -10.914645195007324
    8. ' =' → logprob: -11.164645195007324
    9. 'def' → logprob: -11.289645195007324
    10. '=' → logprob: -11.789645195007324

Token 191: ' '' (ID: 461)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06140461564064026
    2. ''int' → logprob: -2.9364047050476074
    3. ' int' → logprob: -5.061404705047607
    4. ' '' → logprob: -9.93640422821045
    5. '[int' → logprob: -10.31140422821045
    6. '`' → logprob: -10.56140422821045
    7. '```' → logprob: -10.68640422821045
    8. '(int' → logprob: -11.93640422821045
    9. '=int' → logprob: -11.93640422821045
    10. ':int' → logprob: -12.31140422821045

Token 192: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.3458322731312364e-06
    2. ' int' → logprob: -12.125007629394531
    3. '[int' → logprob: -14.125007629394531
    4. '```' → logprob: -14.500007629394531
    5. '
' → logprob: -15.875007629394531
    6. '   ' → logprob: -16.12500762939453
    7. ''int' → logprob: -16.37500762939453
    8. 'def' → logprob: -16.62500762939453
    9. ']int' → logprob: -17.37500762939453
    10. '<int' → logprob: -17.62500762939453

Token 193: ''.
' (ID: 49980)
  Prédit: '."""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '."""' → logprob: -1.0797500610351562
    2. ')' → logprob: -1.5797500610351562
    3. ']' → logprob: -1.9547500610351562
    4. ').' → logprob: -2.5797500610351562
    5. 'def' → logprob: -2.8297500610351562
    6. '.' → logprob: -3.0797500610351562
    7. '].' → logprob: -3.2047500610351562
    8. '"""' → logprob: -3.5797500610351562
    9. '```' → logprob: -3.7047500610351562
    10. '."""
' → logprob: -4.454750061035156

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020497082732617855
    2. '
' → logprob: -9.250205039978027
    3. '    
' → logprob: -10.125205039978027
    4. '"""' → logprob: -10.375205039978027
    5. ')' → logprob: -10.875205039978027
    6. '    ' → logprob: -12.250205039978027
    7. '```' → logprob: -12.375205039978027
    8. '"""
' → logprob: -13.000205039978027
    9. '   
' → logprob: -13.875205039978027
    10. ' """' → logprob: -14.000205039978027

Token 195: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023274829145520926
    2. '
' → logprob: -6.6273274421691895
    3. '"""' → logprob: -7.6273274421691895
    4. ')' → logprob: -7.8773274421691895
    5. '"""
' (adapté à ' """
') → logprob: -10.127327919006348
    6. '```' → logprob: -10.752327919006348
    7. '    
' → logprob: -10.752327919006348
    8. ' """' → logprob: -11.002327919006348
    9. '    ' → logprob: -11.377327919006348
    10. ' """
' → logprob: -12.377327919006348

Token 196: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003376861335709691
    2. ' n' → logprob: -6.1283769607543945
    3. 'n' → logprob: -7.0033769607543945
    4. ' cost' → logprob: -9.378376960754395
    5. ' total' → logprob: -9.628376960754395
    6. 'cost' → logprob: -11.003376960754395
    7. ' min' → logprob: -11.128376960754395
    8. 'total' → logprob: -11.128376960754395
    9. ' sorted' → logprob: -11.253376960754395
    10. '```' → logprob: -11.378376960754395

Token 197: ' cycles' (ID: 41478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2784838378429413
    2. 'B' → logprob: -1.7784838676452637
    3. 'cycle' → logprob: -4.278483867645264
    4. 'visited' → logprob: -4.278483867645264
    5. 'sorted' → logprob: -4.403483867645264
    6. 'cost' → logprob: -4.778483867645264
    7. 'N' → logprob: -4.903483867645264
    8. 'min' → logprob: -5.903483867645264
    9. 's' → logprob: -5.903483867645264
    10. '   ' → logprob: -5.903483867645264

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716436706483364
    2. '=' → logprob: -5.006716251373291
    3. ',' → logprob: -14.38171672821045
    4. '   ' → logprob: -15.38171672821045
    5. '=[]' → logprob: -16.131715774536133
    6. ')' → logprob: -16.756715774536133
    7. 's' → logprob: -16.881715774536133
    8. '_' → logprob: -17.256715774536133
    9. ' =)' → logprob: -17.506715774536133
    10. ' =
' → logprob: -17.631715774536133

Token 199: ' make' (ID: 1520)
  Prédit: 'make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -0.011051355861127377
    2. ' make' → logprob: -4.511051177978516
    3. '(make' → logprob: -12.636051177978516
    4. '	make' → logprob: -15.511051177978516
    5. '   ' → logprob: -16.386051177978516
    6. ' ' → logprob: -18.011051177978516
    7. '  ' → logprob: -18.636051177978516
    8. '.make' → logprob: -19.386051177978516
    9. '[' → logprob: -20.386051177978516
    10. '
' → logprob: -20.761051177978516

Token 200: '_cycle' (ID: 97714)
  Prédit: '_cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cycle' → logprob: -5.5577775128767826e-06
    2. '_cycles' → logprob: -12.625005722045898
    3. 'cycle' → logprob: -13.125005722045898
    4. '_' → logprob: -16.0000057220459
    5. '_circle' → logprob: -17.5000057220459
    6. '_c' → logprob: -17.5000057220459
    7. '_cost' → logprob: -17.7500057220459
    8. '(' → logprob: -18.8750057220459
    9. 'cycles' → logprob: -18.8750057220459
    10. '(_' → logprob: -18.8750057220459

Token 201: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.750001907348633
    3. 's' → logprob: -14.250001907348633
    4. '_list' → logprob: -15.500001907348633
    5. '(B' → logprob: -17.125001907348633
    6. 'list' → logprob: -17.125001907348633
    7. 'List' → logprob: -17.375001907348633
    8. ' (' → logprob: -18.500001907348633
    9. '(
' → logprob: -19.250001907348633
    10. '((' → logprob: -19.250001907348633

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04858986660838127
    2. ')
' → logprob: -3.0485899448394775
    3. ')

' → logprob: -13.798589706420898
    4. ')
' → logprob: -14.298589706420898
    5. '   ' → logprob: -15.048589706420898
    6. '()' → logprob: -15.298589706420898
    7. '())' → logprob: -15.923589706420898
    8. '())
' → logprob: -16.9235897064209
    9. '()
' → logprob: -16.9235897064209
    10. ' )' → logprob: -17.0485897064209

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07539742439985275
    2. ' cost' → logprob: -3.950397491455078
    3. ' total' → logprob: -4.075397491455078
    4. 'total' → logprob: -4.075397491455078
    5. 'cost' → logprob: -4.325397491455078
    6. '
' → logprob: -6.325397491455078
    7. ' min' → logprob: -7.075397491455078
    8. 'min' → logprob: -7.575397491455078
    9. 'sum' → logprob: -7.575397491455078
    10. ' sum' → logprob: -7.575397491455078

Token 204: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.9228813648223877
    2. 'total' → logprob: -1.0478813648223877
    3. 'cost' → logprob: -1.6728813648223877
    4. 'res' → logprob: -3.1728813648223877
    5. 'result' → logprob: -4.672881126403809
    6. 'def' → logprob: -6.172881126403809
    7. 'minimum' → logprob: -6.547881126403809
    8. 'n' → logprob: -6.672881126403809
    9. 'sorted' → logprob: -6.672881126403809
    10. 'B' → logprob: -6.797881126403809

Token 205: '_w' (ID: 3567)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_val' → logprob: -1.3520898818969727
    2. '_value' → logprob: -1.7270898818969727
    3. '_elem' → logprob: -1.7270898818969727
    4. '_element' → logprob: -1.8520898818969727
    5. '_cost' → logprob: -1.9770898818969727
    6. '_cycle' → logprob: -3.6020898818969727
    7. '_' → logprob: -3.8520898818969727
    8. '_A' → logprob: -4.602089881896973
    9. 'A' → logprob: -4.602089881896973
    10. '_el' → logprob: -5.352089881896973

Token 206: ' =' (ID: 314)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.043932490050792694
    2. ' =' → logprob: -3.5439324378967285
    3. 'e' → logprob: -4.6689324378967285
    4. '=' → logprob: -5.5439324378967285
    5. 'eig' → logprob: -8.418932914733887
    6. 'element' → logprob: -8.918932914733887
    7. 'ei' → logprob: -9.793932914733887
    8. 'ait' → logprob: -9.793932914733887
    9. 'ay' → logprob: -9.918932914733887
    10. 'eit' → logprob: -10.168932914733887

Token 207: ' cycles' (ID: 41478)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04551205784082413
    2. 'cycles' → logprob: -3.5455119609832764
    3. 'float' → logprob: -4.2955121994018555
    4. ' min' → logprob: -6.4205121994018555
    5. ' cycles' → logprob: -9.170512199401855
    6. ' float' → logprob: -9.795512199401855
    7. 'sorted' → logprob: -10.670512199401855
    8. 'A' → logprob: -10.670512199401855
    9. '100' → logprob: -10.795512199401855
    10. '[min' → logprob: -10.795512199401855

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.319370302458992e-06
    2. '[-' → logprob: -13.250005722045898
    3. ' [' → logprob: -13.500005722045898
    4. '0' → logprob: -14.750005722045898
    5. '=' → logprob: -15.125005722045898
    6. '[min' → logprob: -15.250005722045898
    7. 'min' → logprob: -15.500005722045898
    8. 'def' → logprob: -15.875005722045898
    9. '   ' → logprob: -16.0000057220459
    10. '(' → logprob: -16.2500057220459

Token 209: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.455048449221067e-05
    2. '-' → logprob: -10.625054359436035
    3. '[' → logprob: -11.375054359436035
    4. ' ' → logprob: -11.375054359436035
    5. '1' → logprob: -12.000054359436035
    6. '   ' → logprob: -15.875054359436035
    7. ' -' → logprob: -16.12505531311035
    8. '[-' → logprob: -16.37505531311035
    9. '  ' → logprob: -16.50005531311035
    10. '#' → logprob: -16.62505531311035

Token 210: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2730158269405365
    2. '][' → logprob: -1.5230158567428589
    3. ']' → logprob: -3.8980157375335693
    4. '0' → logprob: -7.648015975952148
    5. ']
' → logprob: -9.773015975952148
    6. '-' → logprob: -11.773015975952148
    7. '   ' → logprob: -12.148015975952148
    8. ' ][' → logprob: -12.273015975952148
    9. '1' → logprob: -12.773015975952148
    10. ']

' → logprob: -12.898015975952148

Token 211: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02197546884417534
    2. '()' → logprob: -4.771975517272949
    3. '()[' → logprob: -5.271975517272949
    4. 'min' → logprob: -6.146975517272949
    5. '_min' → logprob: -6.271975517272949
    6. ' =' → logprob: -6.396975517272949
    7. '   ' → logprob: -7.521975517272949
    8. '()
' → logprob: -7.771975517272949
    9. '0' → logprob: -8.02197551727295
    10. '=' → logprob: -8.14697551727295

Token 212: ' cost' (ID: 3097)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6561290621757507
    2. ' =' → logprob: -2.0311291217803955
    3. '[' → logprob: -2.4061291217803955
    4. '=' → logprob: -2.4061291217803955
    5. '0' → logprob: -2.9061291217803955
    6. 'cost' (adapté à ' cost') → logprob: -3.5311291217803955
    7. 'def' → logprob: -4.156128883361816
    8. 'sum' → logprob: -4.156128883361816
    9. 'total' → logprob: -4.406128883361816
    10. '_min' → logprob: -4.906128883361816

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023271452635526657
    2. '=' → logprob: -3.7732715606689453
    3. ')' → logprob: -11.898271560668945
    4. '_' → logprob: -12.523271560668945
    5. ' ' → logprob: -12.523271560668945
    6. 's' → logprob: -12.898271560668945
    7. ' +=' → logprob: -12.898271560668945
    8. ',' → logprob: -13.648271560668945
    9. '   ' → logprob: -13.898271560668945
    10. 'def' → logprob: -14.023271560668945

Token 214: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009240844519808888
    2. ' ' → logprob: -7.000924110412598
    3. 'sum' → logprob: -11.500924110412598
    4. ' sum' → logprob: -14.250924110412598
    5. 'min' → logprob: -14.750924110412598
    6. 'float' → logprob: -14.875924110412598
    7. '(' → logprob: -15.625924110412598
    8. 'len' → logprob: -15.875924110412598
    9. '   ' → logprob: -15.875924110412598
    10. '[' → logprob: -15.875924110412598

Token 215: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7491250875755213e-05
    2. 'float' → logprob: -11.125027656555176
    3. 'sum' → logprob: -11.875027656555176
    4. 'min' → logprob: -12.875027656555176
    5. ' ' → logprob: -13.500027656555176
    6. 'int' → logprob: -13.875027656555176
    7. '(' → logprob: -15.250027656555176
    8. '[' → logprob: -16.00002670288086
    9. 'len' → logprob: -16.50002670288086
    10. '1' → logprob: -16.75002670288086

Token 216: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04409629479050636
    2. '
' → logprob: -3.1690962314605713
    3. '    
' → logprob: -7.66909646987915
    4. ' for' → logprob: -7.91909646987915
    5. '<|end|>' → logprob: -9.919095993041992
    6. 'for' → logprob: -10.419095993041992
    7. '   
' → logprob: -10.419095993041992
    8. '  ' → logprob: -10.669095993041992
    9. ' 
' → logprob: -10.669095993041992
    10. '  
' → logprob: -10.669095993041992

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006928254384547472
    2. ' for' → logprob: -5.756928443908691
    3. '
' → logprob: -6.131928443908691
    4. 'for' → logprob: -6.881928443908691
    5. '    
' → logprob: -8.881928443908691
    6. ')' → logprob: -9.006928443908691
    7. '[' → logprob: -9.631928443908691
    8. 'def' → logprob: -10.381928443908691
    9. '<|end|>' → logprob: -10.631928443908691
    10. '  ' → logprob: -10.756928443908691

Token 218: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.036514803767204285
    2. ' for' → logprob: -3.5365147590637207
    3. 'min' → logprob: -5.661514759063721
    4. '   ' → logprob: -6.036514759063721
    5. 'global' → logprob: -7.536514759063721
    6. '
' → logprob: -9.161515235900879
    7. '_min' → logprob: -9.911515235900879
    8. ' min' → logprob: -10.536515235900879
    9. '[' → logprob: -10.911515235900879
    10. 'def' → logprob: -11.036515235900879

Token 219: ' c' (ID: 274)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.5932428240776062
    2. ' cycle' → logprob: -0.9682428240776062
    3. 'c' → logprob: -3.468242883682251
    4. 'i' → logprob: -3.968242883682251
    5. ' c' → logprob: -4.718242645263672
    6. ' i' → logprob: -4.968242645263672
    7. 'cy' → logprob: -6.718242645263672
    8. ' cyc' → logprob: -8.968242645263672
    9. 'cycles' → logprob: -8.968242645263672
    10. '   ' → logprob: -9.468242645263672

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012572048231959343
    2. 'in' → logprob: -4.387571811676025
    3. ' ' → logprob: -10.512572288513184
    4. '  ' → logprob: -10.887572288513184
    5. '   ' → logprob: -11.387572288513184
    6. '_' → logprob: -13.512572288513184
    7. '_in' → logprob: -14.137572288513184
    8. 'ycle' → logprob: -14.637572288513184
    9. '	in' → logprob: -14.887572288513184
    10. 'n' → logprob: -15.012572288513184

Token 221: ' cycles' (ID: 41478)
  Prédit: ' cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycles' → logprob: -0.3868843913078308
    2. 'cycles' → logprob: -1.1368844509124756
    3. 'ycles' → logprob: -12.636884689331055
    4. '   ' → logprob: -12.886884689331055
    5. ' range' → logprob: -12.886884689331055
    6. '[' → logprob: -13.136884689331055
    7. ' ' → logprob: -14.261884689331055
    8. '_cycles' → logprob: -14.386884689331055
    9. 'range' → logprob: -14.636884689331055
    10. 'cycle' → logprob: -15.011884689331055

Token 222: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049632441252470016
    2. ':' → logprob: -3.0496325492858887
    3. ':
' → logprob: -6.924632549285889
    4. '1' → logprob: -9.92463207244873
    5. '   ' → logprob: -11.54963207244873
    6. ' :' → logprob: -14.04963207244873
    7. '(' → logprob: -14.67463207244873
    8. ':

' → logprob: -15.67463207244873
    9. ' [' → logprob: -15.79963207244873
    10. '[:' → logprob: -15.79963207244873

Token 223: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.392824874026701e-05
    2. ':' → logprob: -10.62503433227539
    3. ' ' → logprob: -12.50003433227539
    4. '   ' → logprob: -12.75003433227539
    5. ':]' → logprob: -14.25003433227539
    6. '
' → logprob: -14.50003433227539
    7. '(' → logprob: -14.75003433227539
    8. 'range' → logprob: -15.00003433227539
    9. ']:' → logprob: -15.75003433227539
    10. '[' → logprob: -15.87503433227539

Token 224: ':' (ID: 25)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0007310202927328646
    2. ']:
' → logprob: -7.625730991363525
    3. ':' → logprob: -8.500731468200684
    4. ']' → logprob: -11.375731468200684
    5. '[' → logprob: -11.375731468200684
    6. ']:
' → logprob: -11.375731468200684
    7. '][' → logprob: -13.250731468200684
    8. ':]' → logprob: -13.750731468200684
    9. '>:' → logprob: -14.875731468200684
    10. '   ' → logprob: -14.875731468200684

Token 225: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.05720943957567215
    2. ':' → logprob: -3.1822094917297363
    3. ']:
' → logprob: -4.432209491729736
    4. '   ' → logprob: -6.557209491729736
    5. ':
' → logprob: -7.932209491729736
    6. '       ' → logprob: -8.057209014892578
    7. '):' → logprob: -9.932209014892578
    8. ']' → logprob: -10.682209014892578
    9. ' :' → logprob: -11.182209014892578
    10. ']:
' → logprob: -11.307209014892578

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00797117967158556
    2. '   ' → logprob: -5.382971286773682
    3. '[' → logprob: -6.382971286773682
    4. '    ' → logprob: -7.632971286773682
    5. '```' → logprob: -8.382970809936523
    6. ' if' → logprob: -8.632970809936523
    7. '      ' → logprob: -9.132970809936523
    8. '     ' → logprob: -9.382970809936523
    9. ',' → logprob: -9.757970809936523
    10. '(' → logprob: -9.882970809936523

Token 227: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.881081223487854
    2. '       ' → logprob: -1.506081223487854
    3. 'min' → logprob: -2.0060811042785645
    4. ' min' → logprob: -2.6310811042785645
    5. ' m' → logprob: -3.1310811042785645
    6. '   ' → logprob: -3.6310811042785645
    7. 's' → logprob: -4.2560811042785645
    8. ' if' → logprob: -4.5060811042785645
    9. '           ' → logprob: -4.6310811042785645
    10. ' s' → logprob: -4.7560811042785645

Token 228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04866696521639824
    2. '=' → logprob: -3.0486669540405273
    3. '   ' → logprob: -10.173666954040527
    4. '=len' → logprob: -10.548666954040527
    5. '       ' → logprob: -12.923666954040527
    6. 'c' → logprob: -12.923666954040527
    7. '=c' → logprob: -13.173666954040527
    8. ' ' → logprob: -13.423666954040527
    9. '_' → logprob: -13.423666954040527
    10. '_c' → logprob: -13.548666954040527

Token 229: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.693147599697113
    2. ' len' → logprob: -0.693147599697113
    3. '(len' → logprob: -15.068147659301758
    4. '	len' → logprob: -17.318147659301758
    5. '   ' → logprob: -17.568147659301758
    6. '=len' → logprob: -17.943147659301758
    7. '[len' → logprob: -18.568147659301758
    8. ' ' → logprob: -19.193147659301758
    9. '    ' → logprob: -20.068147659301758
    10. ',len' → logprob: -20.318147659301758

Token 230: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.141186450899113e-05
    2. '(' → logprob: -10.875020980834961
    3. 'c' → logprob: -13.125020980834961
    4. ' (' → logprob: -14.750020980834961
    5. '©' → logprob: -18.50002098083496
    6. '(
' → logprob: -18.50002098083496
    7. '(cost' → logprob: -18.75002098083496
    8. ')' → logprob: -19.37502098083496
    9. ')c' → logprob: -19.62502098083496
    10. ' c' → logprob: -20.12502098083496

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004084693267941475
    2. ')
' → logprob: -5.504084587097168
    3. ' )' → logprob: -12.379084587097168
    4. '   ' → logprob: -14.254084587097168
    5. ')
' → logprob: -14.629084587097168
    6. '       ' → logprob: -15.004084587097168
    7. ')

' → logprob: -15.754084587097168
    8. ')-' → logprob: -15.754084587097168
    9. ' )
' → logprob: -17.129085540771484
    10. '))' → logprob: -17.129085540771484

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011334865354001522
    2. '   ' → logprob: -4.5113348960876465
    3. 's' → logprob: -9.761334419250488
    4. ',' → logprob: -10.011334419250488
    5. 'sum' → logprob: -10.636334419250488
    6. ')' → logprob: -10.761334419250488
    7. ' s' → logprob: -11.136334419250488
    8. 'min' → logprob: -11.261334419250488
    9. '	' → logprob: -11.386334419250488
    10. 't' → logprob: -12.011334419250488

Token 233: ' min' (ID: 1349)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.33635413646698
    2. 's' → logprob: -2.0863542556762695
    3. 'min' (adapté à ' min') → logprob: -2.2113542556762695
    4. 'local' → logprob: -4.4613542556762695
    5. 'total' → logprob: -4.7113542556762695
    6. '   ' → logprob: -4.8363542556762695
    7. 'sum' → logprob: -5.5863542556762695
    8. 'c' → logprob: -5.8363542556762695
    9. '       ' → logprob: -5.8363542556762695
    10. 'mn' → logprob: -5.8363542556762695

Token 234: '_c' (ID: 1303)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.6429624557495117
    2. '_c' → logprob: -1.1429624557495117
    3. '_v' → logprob: -3.0179624557495117
    4. '_elem' → logprob: -3.0179624557495117
    5. '_' → logprob: -3.3929624557495117
    6. '_element' → logprob: -4.142962455749512
    7. '_value' → logprob: -5.517962455749512
    8. '_w' → logprob: -6.767962455749512
    9. 'val' → logprob: -6.892962455749512
    10. 'c' → logprob: -7.392962455749512

Token 235: 'w' (ID: 86)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745848774909973
    2. '=' → logprob: -0.9745848774909973
    3. '=c' → logprob: -8.974584579467773
    4. '_c' → logprob: -8.974584579467773
    5. 'ost' → logprob: -9.349584579467773
    6. '_' → logprob: -9.474584579467773
    7. 'c' → logprob: -10.099584579467773
    8. '=min' → logprob: -11.099584579467773
    9. '_=' → logprob: -11.724584579467773
    10. ' ' → logprob: -12.099584579467773

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016521437093615532
    2. '=' → logprob: -4.141521453857422
    3. 't' → logprob: -8.266521453857422
    4. '   ' → logprob: -9.641521453857422
    5. 'c' → logprob: -9.891521453857422
    6. ' ' → logprob: -9.891521453857422
    7. '_c' → logprob: -11.141521453857422
    8. '_' → logprob: -11.641521453857422
    9. '  ' → logprob: -11.891521453857422
    10. 'a' → logprob: -12.141521453857422

Token 237: ' c' (ID: 274)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.001688985270448029
    2. 'c' → logprob: -6.7516889572143555
    3. ' min' → logprob: -7.6266889572143555
    4. '   ' → logprob: -10.626688957214355
    5. ' c' → logprob: -13.251688957214355
    6. '	min' → logprob: -13.751688957214355
    7. '(min' → logprob: -13.751688957214355
    8. '  ' → logprob: -13.876688957214355
    9. ' ' → logprob: -14.501688957214355
    10. 'minimum' → logprob: -15.001688957214355

Token 238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00027897433028556406
    2. '0' → logprob: -8.875279426574707
    3. '1' → logprob: -9.750279426574707
    4. '[min' → logprob: -10.125279426574707
    5. 'min' → logprob: -10.625279426574707
    6. '[c' → logprob: -12.375279426574707
    7. '   ' → logprob: -12.625279426574707
    8. ' [' → logprob: -13.250279426574707
    9. '```' → logprob: -13.500279426574707
    10. '[-' → logprob: -14.125279426574707

Token 239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42900392413139343
    2. '1' → logprob: -1.0540039539337158
    3. ':' → logprob: -8.804003715515137
    4. 'min' → logprob: -9.429003715515137
    5. ' ' → logprob: -10.679003715515137
    6. '   ' → logprob: -11.179003715515137
    7. ':min' → logprob: -11.679003715515137
    8. ':]' → logprob: -12.179003715515137
    9. ']' → logprob: -12.804003715515137
    10. '-' → logprob: -12.929003715515137

Token 240: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012705878354609013
    2. ']
' → logprob: -4.3877058029174805
    3. '<|end|>' → logprob: -8.88770580291748
    4. ']*' → logprob: -10.76270580291748
    5. ')' → logprob: -11.38770580291748
    6. ' ]' → logprob: -12.01270580291748
    7. ']

' → logprob: -12.13770580291748
    8. ')]' → logprob: -12.38770580291748
    9. ']+' → logprob: -12.88770580291748
    10. '])' → logprob: -13.76270580291748

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013464801304508
    2. ',' → logprob: -10.125134468078613
    3. '   ' → logprob: -10.875134468078613
    4. '
' → logprob: -11.125134468078613
    5. ')' → logprob: -11.250134468078613
    6. ' =' → logprob: -11.500134468078613
    7. '<|end|>' → logprob: -12.000134468078613
    8. '=' → logprob: -12.750134468078613
    9. ')
' → logprob: -12.750134468078613
    10. ':' → logprob: -12.875134468078613

Token 242: ' dec' (ID: 1885)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.20178255438804626
    2. 's' → logprob: -2.826782464981079
    3. '       ' → logprob: -3.451782464981079
    4. 'for' → logprob: -3.576782464981079
    5. 'total' → logprob: -3.826782464981079
    6. 'min' → logprob: -4.076782703399658
    7. 'c' → logprob: -4.826782703399658
    8. '_sum' → logprob: -4.826782703399658
    9. 'other' → logprob: -6.826782703399658
    10. '_s' → logprob: -6.826782703399658

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9326874613761902
    2. 'ost' → logprob: -1.307687520980835
    3. '=' → logprob: -2.182687520980835
    4. 'rement' → logprob: -2.182687520980835
    5. 'r' → logprob: -2.682687520980835
    6. 're' → logprob: -4.557687282562256
    7. '   ' → logprob: -5.182687282562256
    8. '_cost' → logprob: -5.557687282562256
    9. '       ' → logprob: -5.682687282562256
    10. 'rest' → logprob: -6.182687282562256

Token 244: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12749378383159637
    2. ' sum' → logprob: -2.3774938583374023
    3. 'min' → logprob: -4.377493858337402
    4. '0' → logprob: -4.877493858337402
    5. ' min' → logprob: -5.627493858337402
    6. '(sum' → logprob: -6.877493858337402
    7. 'cost' → logprob: -7.502493858337402
    8. 'float' → logprob: -7.502493858337402
    9. '   ' → logprob: -8.627493858337402
    10. '(min' → logprob: -8.877493858337402

Token 245: 'n' (ID: 77)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3481307923793793
    2. 'n' → logprob: -1.4731308221817017
    3. 'min' → logprob: -3.598130702972412
    4. ' sum' → logprob: -3.723130702972412
    5. ' n' → logprob: -5.598130702972412
    6. '(sum' → logprob: -5.848130702972412
    7. '(n' → logprob: -6.223130702972412
    8. '   ' → logprob: -6.473130702972412
    9. ' min' → logprob: -6.848130702972412
    10. '(min' → logprob: -7.473130702972412

Token 246: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3875540494918823
    2. ' -' → logprob: -1.1375540494918823
    3. '   ' → logprob: -8.137554168701172
    4. ' ' → logprob: -8.637554168701172
    5. ')' → logprob: -9.512554168701172
    6. '+' → logprob: -10.137554168701172
    7. '       ' → logprob: -10.512554168701172
    8. '  ' → logprob: -11.012554168701172
    9. '     ' → logprob: -11.637554168701172
    10. '	' → logprob: -11.762554168701172

Token 247: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48025354743003845
    2. '1' → logprob: -0.9802535772323608
    3. ' ' → logprob: -5.10525369644165
    4. '   ' → logprob: -10.105253219604492
    5. ')' → logprob: -10.855253219604492
    6. '  ' → logprob: -11.855253219604492
    7. '3' → logprob: -12.605253219604492
    8. 'len' → logprob: -12.605253219604492
    9. '```' → logprob: -12.730253219604492
    10. '       ' → logprob: -12.855253219604492

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12697966396808624
    2. '2' → logprob: -2.1269795894622803
    3. ' ' → logprob: -10.12697982788086
    4. '   ' → logprob: -12.75197982788086
    5. '
' → logprob: -13.00197982788086
    6. 'len' → logprob: -13.12697982788086
    7. '```' → logprob: -13.50197982788086
    8. ')' → logprob: -14.25197982788086
    9. '3' → logprob: -14.75197982788086
    10. '0' → logprob: -15.12697982788086

Token 249: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041875618626363575
    2. ')*' → logprob: -8.500418663024902
    3. ')*(' → logprob: -8.625418663024902
    4. ' )' → logprob: -11.125418663024902
    5. '*' → logprob: -11.625418663024902
    6. ')
' → logprob: -12.375418663024902
    7. '*(' → logprob: -13.750418663024902
    8. '*)' → logprob: -13.875418663024902
    9. ')(' → logprob: -14.000418663024902
    10. '）' → logprob: -14.250418663024902

Token 250: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5231868624687195
    2. ' *' → logprob: -0.8981868624687195
    3. '*(' → logprob: -10.148186683654785
    4. ' ' → logprob: -11.898186683654785
    5. '   ' → logprob: -12.648186683654785
    6. ')' → logprob: -12.773186683654785
    7. ' ' → logprob: -12.898186683654785
    8. '*
' → logprob: -13.523186683654785
    9. '       ' → logprob: -14.023186683654785
    10. '```' → logprob: -14.273186683654785

Token 251: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006827262695878744
    2. ' min' → logprob: -5.006827354431152
    3. '(min' → logprob: -9.756827354431152
    4. 'c' → logprob: -10.131827354431152
    5. 'sum' → logprob: -12.506827354431152
    6. ' c' → logprob: -12.881827354431152
    7. '[min' → logprob: -13.256827354431152
    8. '   ' → logprob: -13.256827354431152
    9. '1' → logprob: -13.756827354431152
    10. ' ' → logprob: -14.256827354431152

Token 252: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.003300578100606799
    2. ' min' → logprob: -6.003300666809082
    3. 'c' → logprob: -7.378300666809082
    4. 'sum' → logprob: -9.128300666809082
    5. ' c' → logprob: -10.878300666809082
    6. '0' → logprob: -11.003300666809082
    7. '(min' → logprob: -11.253300666809082
    8. '[min' → logprob: -11.503300666809082
    9. '1' → logprob: -11.878300666809082
    10. 'cost' → logprob: -12.253300666809082

Token 253: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00100911152549088
    2. 'c' → logprob: -7.251008987426758
    3. '(c' → logprob: -8.751008987426758
    4. '(min' → logprob: -9.251008987426758
    5. 'min' → logprob: -10.501008987426758
    6. '_w' → logprob: -12.001008987426758
    7. 'w' → logprob: -12.501008987426758
    8. '(' → logprob: -13.126008987426758
    9. '	c' → logprob: -14.376008987426758
    10. 'cw' → logprob: -14.376008987426758

Token 254: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.002349838148802519
    2. 'c' → logprob: -6.627349853515625
    3. '_w' → logprob: -7.127349853515625
    4. '_c' → logprob: -8.627349853515625
    5. 'cw' → logprob: -10.252349853515625
    6. '(c' → logprob: -13.252349853515625
    7. '
' → logprob: -13.877349853515625
    8. ' ' → logprob: -14.377349853515625
    9. 'min' → logprob: -14.627349853515625
    10. '   ' → logprob: -15.252349853515625

Token 255: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6477013826370239
    2. ' +' → logprob: -0.7727013826370239
    3. ')' → logprob: -4.272701263427734
    4. ')+' → logprob: -8.147701263427734
    5. '+c' → logprob: -8.147701263427734
    6. '+
' → logprob: -8.397701263427734
    7. ' +
' → logprob: -9.397701263427734
    8. '+)' → logprob: -9.647701263427734
    9. ' -' → logprob: -10.772701263427734
    10. ' )' → logprob: -11.522701263427734

Token 256: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06711438298225403
    2. 'cycles' → logprob: -3.3171143531799316
    3. '1' → logprob: -3.9421143531799316
    4. ' min' → logprob: -5.442114353179932
    5. 'c' → logprob: -6.067114353179932
    6. '2' → logprob: -7.067114353179932
    7. ' cycles' → logprob: -7.442114353179932
    8. '(min' → logprob: -8.69211483001709
    9. 'cycle' → logprob: -8.69211483001709
    10. 'sum' → logprob: -8.69211483001709

Token 257: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.034357208758592606
    2. 'cycles' → logprob: -4.034357070922852
    3. '(min' → logprob: -4.909357070922852
    4. 'w' → logprob: -5.534357070922852
    5. 'min' → logprob: -6.409357070922852
    6. '(c' → logprob: -6.409357070922852
    7. ')' → logprob: -7.409357070922852
    8. '_c' → logprob: -8.159357070922852
    9. '[min' → logprob: -9.284357070922852
    10. '_cycles' → logprob: -9.534357070922852

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05397053435444832
    2. '[' → logprob: -3.4289705753326416
    3. '+' → logprob: -4.0539703369140625
    4. ')+' → logprob: -6.4289703369140625
    5. ' +' → logprob: -8.303970336914062
    6. '0' → logprob: -8.553970336914062
    7. ' )' → logprob: -8.678970336914062
    8. ']' → logprob: -9.178970336914062
    9. '+)' → logprob: -9.428970336914062
    10. '1' → logprob: -9.678970336914062

Token 259: '       ' (ID: 309)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6227691173553467
    2. '       ' → logprob: -1.3727691173553467
    3. '+' → logprob: -1.7477691173553467
    4. ')' → logprob: -3.8727691173553467
    5. '
' → logprob: -5.247769355773926
    6. ' ' → logprob: -5.997769355773926
    7. '<|end|>' → logprob: -5.997769355773926
    8. '        ' → logprob: -6.622769355773926
    9. ' +
' → logprob: -6.747769355773926
    10. ')+' → logprob: -7.497769355773926

Token 260: ' inc' (ID: 4570)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4407949149608612
    2. ' +' → logprob: -1.0657949447631836
    3. '       ' → logprob: -5.440794944763184
    4. '<|end|>' → logprob: -5.690794944763184
    5. ' ' → logprob: -6.690794944763184
    6. ')' → logprob: -6.940794944763184
    7. '   ' → logprob: -7.815794944763184
    8. '        ' → logprob: -8.065794944763184
    9. ' +
' → logprob: -8.190794944763184
    10. ' for' → logprob: -8.565794944763184

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08894665539264679
    2. '=' → logprob: -2.463946580886841
    3. ' +=' → logprob: -12.963946342468262
    4. ',' → logprob: -13.713946342468262
    5. '   ' → logprob: -14.088946342468262
    6. ' ' → logprob: -14.213946342468262
    7. '+' → logprob: -14.213946342468262
    8. ')' → logprob: -14.213946342468262
    9. '+=' → logprob: -15.463946342468262
    10. '    ' → logprob: -15.838946342468262

Token 262: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.25875377655029297
    2. ' sum' → logprob: -1.633753776550293
    3. '(n' → logprob: -4.633753776550293
    4. '(sum' → logprob: -4.758753776550293
    5. ' (' → logprob: -5.383753776550293
    6. 'min' → logprob: -6.133753776550293
    7. 'c' → logprob: -6.383753776550293
    8. ' c' → logprob: -6.383753776550293
    9. '0' → logprob: -6.633753776550293
    10. '(' → logprob: -7.008753776550293

Token 263: '2' (ID: 17)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.14085839688777924
    2. '(n' → logprob: -2.8908584117889404
    3. 'min' → logprob: -3.5158584117889404
    4. '(sum' → logprob: -3.7658584117889404
    5. '(min' → logprob: -4.390858173370361
    6. 'c' → logprob: -5.515858173370361
    7. ' sum' → logprob: -5.765858173370361
    8. '(' → logprob: -7.140858173370361
    9. '0' → logprob: -7.265858173370361
    10. '(c' → logprob: -7.390858173370361

Token 264: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5252833962440491
    2. ' *' → logprob: -0.9002833962440491
    3. '+' → logprob: -6.650283336639404
    4. ' +' → logprob: -7.275283336639404
    5. '*(' → logprob: -8.775283813476562
    6. ' ' → logprob: -11.900283813476562
    7. ' ' → logprob: -12.275283813476562
    8. ')' → logprob: -13.775283813476562
    9. '   ' → logprob: -14.525283813476562
    10. '(' → logprob: -14.525283813476562

Token 265: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.3808542490005493
    2. 'min' → logprob: -1.2558542490005493
    3. ' min' → logprob: -3.8808541297912598
    4. ' (' → logprob: -4.75585412979126
    5. '(' → logprob: -6.88085412979126
    6. '(n' → logprob: -7.13085412979126
    7. 'sum' → logprob: -8.505854606628418
    8. '(m' → logprob: -8.630854606628418
    9. '(sum' → logprob: -9.755854606628418
    10. '[min' → logprob: -9.880854606628418

Token 266: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0535476878285408
    2. '(min' → logprob: -3.4285476207733154
    3. ' min' → logprob: -4.3035478591918945
    4. 'n' → logprob: -6.0535478591918945
    5. '(n' → logprob: -6.1785478591918945
    6. ' (' → logprob: -7.3035478591918945
    7. 'sum' → logprob: -7.8035478591918945
    8. '(' → logprob: -8.928547859191895
    9. ' n' → logprob: -9.053547859191895
    10. 'abs' → logprob: -9.428547859191895

Token 267: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.20576807856559753
    2. '_c' → logprob: -1.70576810836792
    3. 'w' → logprob: -6.33076810836792
    4. '_' → logprob: -7.08076810836792
    5. '(min' → logprob: -7.45576810836792
    6. 'c' → logprob: -7.83076810836792
    7. 'min' → logprob: -8.580767631530762
    8. '(' → logprob: -8.705767631530762
    9. ')' → logprob: -8.830767631530762
    10. '[' → logprob: -9.455767631530762

Token 268: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7002474069595337
    2. ' +' → logprob: -0.7002474069595337
    3. ' -' → logprob: -5.325247287750244
    4. '-' → logprob: -6.825247287750244
    5. ')' → logprob: -6.950247287750244
    6. ')+' → logprob: -9.575247764587402
    7. ' )' → logprob: -10.950247764587402
    8. ' ' → logprob: -11.075247764587402
    9. '<|end|>' → logprob: -11.200247764587402
    10. '+c' → logprob: -11.450247764587402

Token 269: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07097188383340836
    2. ' min' → logprob: -3.320971965789795
    3. 'c' → logprob: -3.570971965789795
    4. ' c' → logprob: -5.570971965789795
    5. ' ' → logprob: -8.445971488952637
    6. '   ' → logprob: -9.570971488952637
    7. '
' → logprob: -10.320971488952637
    8. 'max' → logprob: -10.445971488952637
    9. '  ' → logprob: -10.945971488952637
    10. '(min' → logprob: -11.070971488952637

Token 270: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2553360164165497
    2. 'c' → logprob: -1.505336046218872
    3. '(c' → logprob: -6.255335807800293
    4. 'cw' → logprob: -7.755335807800293
    5. '_w' → logprob: -8.005335807800293
    6. 'w' → logprob: -8.130335807800293
    7. '(min' → logprob: -8.755335807800293
    8. 'min' → logprob: -8.880335807800293
    9. '(' → logprob: -10.005335807800293
    10. ' ' → logprob: -11.005335807800293

Token 271: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -11.875012397766113
    3. 'W' → logprob: -12.625012397766113
    4. 'c' → logprob: -14.625012397766113
    5. ' w' → logprob: -15.375012397766113
    6. ')' → logprob: -15.375012397766113
    7. '_w' → logprob: -15.500012397766113
    8. 'ow' → logprob: -15.625012397766113
    9. '0' → logprob: -16.250011444091797
    10. '   ' → logprob: -16.625011444091797

Token 272: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024522303137928247
    2. ')
' → logprob: -6.127452373504639
    3. ' )' → logprob: -9.75245189666748
    4. ')+' → logprob: -10.25245189666748
    5. ')

' → logprob: -10.62745189666748
    6. ')*' → logprob: -10.87745189666748
    7. 'def' → logprob: -11.00245189666748
    8. '[' → logprob: -11.25245189666748
    9. '   ' → logprob: -11.37745189666748
    10. ')n' → logprob: -11.37745189666748

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014814755879342556
    2. ')' → logprob: -4.639814853668213
    3. '<|end|>' → logprob: -5.639814853668213
    4. ',' → logprob: -8.139814376831055
    5. '   ' → logprob: -8.389814376831055
    6. '
' → logprob: -9.014814376831055
    7. '<|end|>' → logprob: -9.014814376831055
    8. ')
' → logprob: -9.014814376831055
    9. ' ' → logprob: -9.389814376831055
    10. ' ' → logprob: -9.639814376831055

Token 274: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47379374504089355
    2. ' if' → logprob: -1.0987937450408936
    3. 'if' (adapté à ' if') → logprob: -3.9737937450408936
    4. ' cost' → logprob: -3.9737937450408936
    5. 'cost' → logprob: -6.223793983459473
    6. '   ' → logprob: -6.723793983459473
    7. ' for' → logprob: -7.848793983459473
    8. ')' → logprob: -7.973793983459473
    9. ' c' → logprob: -8.348793983459473
    10. '+' → logprob: -8.473793983459473

Token 275: ' dec' (ID: 1885)
  Prédit: ' dec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dec' → logprob: -0.055894885212183
    2. 'dec' → logprob: -3.5558948516845703
    3. ' (' → logprob: -4.68089485168457
    4. ' n' → logprob: -5.18089485168457
    5. '(dec' → logprob: -5.18089485168457
    6. ' min' → logprob: -6.68089485168457
    7. ' inc' → logprob: -6.80589485168457
    8. ' len' → logprob: -7.05589485168457
    9. '(' → logprob: -7.55589485168457
    10. '(n' → logprob: -7.80589485168457

Token 276: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.35383883118629456
    2. ' >' → logprob: -1.4788388013839722
    3. '<' → logprob: -3.1038389205932617
    4. '>' → logprob: -3.8538389205932617
    5. ' <=' → logprob: -5.728838920593262
    6. ' ' → logprob: -7.728838920593262
    7. '<=' → logprob: -8.728838920593262
    8. ' >=' → logprob: -9.228838920593262
    9. '+' → logprob: -10.228838920593262
    10. '>=' → logprob: -11.853838920593262

Token 277: ' inc' (ID: 4570)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.16397005319595337
    2. ' inc' → logprob: -1.9139699935913086
    3. '(' → logprob: -6.288969993591309
    4. ' (' → logprob: -6.913969993591309
    5. 'min' → logprob: -8.913969993591309
    6. '2' → logprob: -8.913969993591309
    7. ' n' → logprob: -9.038969993591309
    8. ' ' → logprob: -9.538969993591309
    9. ' min' → logprob: -9.538969993591309
    10. 'cost' → logprob: -9.663969993591309

Token 278: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14339633285999298
    2. ':
' → logprob: -2.0183963775634766
    3. '       ' → logprob: -8.143396377563477
    4. ' :' → logprob: -8.393396377563477
    5. ' :
' → logprob: -9.018396377563477
    6. '):
' → logprob: -10.643396377563477
    7. '):' → logprob: -10.893396377563477
    8. '           ' → logprob: -11.143396377563477
    9. ',' → logprob: -11.268396377563477
    10. ':
' → logprob: -12.768396377563477

Token 279: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49752163887023926
    2. '       ' → logprob: -1.1225216388702393
    3. ':' → logprob: -3.1225216388702393
    4. '        ' → logprob: -5.12252140045166
    5. ':
' → logprob: -5.37252140045166
    6. '
' → logprob: -6.24752140045166
    7. ' cost' → logprob: -6.37252140045166
    8. '<|end|>' → logprob: -6.74752140045166
    9. '):
' → logprob: -6.99752140045166
    10. '               ' → logprob: -7.12252140045166

Token 280: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5255993604660034
    2. '       ' → logprob: -1.4005993604660034
    3. 'cost' (adapté à ' cost') → logprob: -2.025599479675293
    4. '           ' → logprob: -3.525599479675293
    5. ' for' → logprob: -8.150599479675293
    6. '   ' → logprob: -8.400599479675293
    7. '        ' → logprob: -9.400599479675293
    8. 'for' → logprob: -9.650599479675293
    9. '
' → logprob: -10.025599479675293
    10. '               ' → logprob: -10.275599479675293

Token 281: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0005768624832853675
    2. '+=' → logprob: -7.500576972961426
    3. '    ' → logprob: -10.875576972961426
    4. ' ' → logprob: -13.875576972961426
    5. '   ' → logprob: -13.875576972961426
    6. ' =' → logprob: -14.375576972961426
    7. '        ' → logprob: -14.625576972961426
    8. ' -=' → logprob: -14.750576972961426
    9. ' +' → logprob: -14.875576972961426
    10. '+=(' → logprob: -15.000576972961426

Token 282: ' sum' (ID: 4215)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4127793610095978
    2. ' (' → logprob: -1.6627793312072754
    3. 'min' → logprob: -2.7877793312072754
    4. '(min' → logprob: -3.0377793312072754
    5. 'dec' → logprob: -3.5377793312072754
    6. ' min' → logprob: -5.287779331207275
    7. 'sum' → logprob: -6.787779331207275
    8. ' dec' → logprob: -6.912779331207275
    9. 'c' → logprob: -7.287779331207275
    10. '(' → logprob: -7.787779331207275

Token 283: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0014139274135231972
    2. '([' → logprob: -7.251413822174072
    3. '(' → logprob: -7.376413822174072
    4. '((' → logprob: -10.62641429901123
    5. 'c' → logprob: -11.00141429901123
    6. '(
' → logprob: -11.25141429901123
    7. ' (' → logprob: -12.00141429901123
    8. '([(' → logprob: -12.75141429901123
    9. '(sorted' → logprob: -13.00141429901123
    10. '(min' → logprob: -13.37641429901123

Token 284: ')' (ID: 8)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17976991832256317
    2. ')' → logprob: -1.8047698736190796
    3. ')-' → logprob: -11.054769515991211
    4. ')
' → logprob: -12.679769515991211
    5. '[i' → logprob: -13.429769515991211
    6. '[:-' → logprob: -13.554769515991211
    7. '   ' → logprob: -13.929769515991211
    8. ' )' → logprob: -14.429769515991211
    9. '[:' → logprob: -14.804769515991211
    10. '
' → logprob: -14.804769515991211

Token 285: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.445290207862854
    2. '[' → logprob: -1.195290207862854
    3. ')' → logprob: -3.9452900886535645
    4. '-' → logprob: -4.5702900886535645
    5. ' *' → logprob: -5.1952900886535645
    6. '       ' → logprob: -5.1952900886535645
    7. '(' → logprob: -5.6952900886535645
    8. '           ' → logprob: -5.6952900886535645
    9. '()' → logprob: -6.0702900886535645
    10. '*' → logprob: -6.9452900886535645

Token 286: ' min' (ID: 1349)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.798003613948822
    2. 'min' → logprob: -1.6730036735534668
    3. ' (' → logprob: -2.298003673553467
    4. '(n' → logprob: -2.673003673553467
    5. '(min' → logprob: -2.673003673553467
    6. ' dec' → logprob: -2.798003673553467
    7. ' min' → logprob: -3.048003673553467
    8. '(dec' → logprob: -4.298003673553467
    9. '(' → logprob: -7.673003673553467
    10. 'n' → logprob: -8.298003196716309

Token 287: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0014930804027244449
    2. '_w' → logprob: -7.126492977142334
    3. '(c' → logprob: -7.626492977142334
    4. 'c' → logprob: -8.626493453979492
    5. 'w' → logprob: -11.126493453979492
    6. '(' → logprob: -12.626493453979492
    7. '(w' → logprob: -13.876493453979492
    8. '	c' → logprob: -14.376493453979492
    9. '([' → logprob: -14.876493453979492
    10. '[c' → logprob: -15.251493453979492

Token 288: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0020938764791935682
    2. '[' → logprob: -6.37709379196167
    3. 'c' → logprob: -8.127094268798828
    4. '[-' → logprob: -10.002094268798828
    5. '_w' → logprob: -10.502094268798828
    6. '[c' → logprob: -11.127094268798828
    7. '[w' → logprob: -13.502094268798828
    8. 'cost' → logprob: -13.627094268798828
    9. 'W' → logprob: -14.252094268798828
    10. 'ost' → logprob: -14.502094268798828

Token 289: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5944279432296753
    2. '*(' → logprob: -0.9694279432296753
    3. ' *' → logprob: -3.219428062438965
    4. '+' → logprob: -3.844428062438965
    5. ' +' → logprob: -5.344428062438965
    6. '(n' → logprob: -6.344428062438965
    7. '*n' → logprob: -7.844428062438965
    8. '       ' → logprob: -8.219428062438965
    9. ')' → logprob: -9.844428062438965
    10. 'else' → logprob: -10.719428062438965

Token 290: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005995001993142068
    2. ' (' → logprob: -7.500599384307861
    3. '(' → logprob: -10.50059986114502
    4. 'n' → logprob: -11.50059986114502
    5. '((' → logprob: -12.75059986114502
    6. '*(' → logprob: -12.87559986114502
    7. '   ' → logprob: -13.50059986114502
    8. ' ' → logprob: -14.37559986114502
    9. '  ' → logprob: -14.87559986114502
    10. '
' → logprob: -15.12559986114502

Token 291: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.28184518218040466
    2. '(n' → logprob: -1.406845211982727
    3. ' (' → logprob: -8.656845092773438
    4. ' n' → logprob: -8.781845092773438
    5. '(' → logprob: -8.906845092773438
    6. '-' → logprob: -9.531845092773438
    7. '   ' → logprob: -9.906845092773438
    8. ' ' → logprob: -11.031845092773438
    9. ')n' → logprob: -11.031845092773438
    10. ')' → logprob: -11.156845092773438

Token 292: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3133153021335602
    2. ' -' → logprob: -1.3133152723312378
    3. ')' → logprob: -10.438315391540527
    4. ' ' → logprob: -11.563315391540527
    5. '  ' → logprob: -12.188315391540527
    6. '   ' → logprob: -13.188315391540527
    7. '2' → logprob: -13.438315391540527
    8. '<|end|>' → logprob: -13.438315391540527
    9. '```' → logprob: -14.188315391540527
    10. '       ' → logprob: -14.438315391540527

Token 293: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0077700018882751465
    2. '1' → logprob: -4.88277006149292
    3. ' ' → logprob: -9.007769584655762
    4. '3' → logprob: -10.882769584655762
    5. '-' → logprob: -11.632769584655762
    6. '
' → logprob: -11.882769584655762
    7. '```' → logprob: -12.632769584655762
    8. ' -' → logprob: -13.882769584655762
    9. '  ' → logprob: -14.007769584655762
    10. ')' → logprob: -14.632769584655762

Token 294: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001037214300595224
    2. '1' → logprob: -7.126037120819092
    3. '
' → logprob: -8.75103759765625
    4. ' ' → logprob: -10.50103759765625
    5. '```' → logprob: -10.87603759765625
    6. '-' → logprob: -11.00103759765625
    7. '

' → logprob: -12.62603759765625
    8. '   ' → logprob: -13.87603759765625
    9. '3' → logprob: -13.87603759765625
    10. '  ' → logprob: -14.00103759765625

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004926089197397232
    2. ')
' → logprob: -5.3799262046813965
    3. ' )' → logprob: -9.004925727844238
    4. '<|end|>' → logprob: -9.629925727844238
    5. 'else' → logprob: -10.754925727844238
    6. ' -' → logprob: -10.754925727844238
    7. ' else' → logprob: -10.879925727844238
    8. ')-' → logprob: -11.254925727844238
    9. '-' → logprob: -11.629925727844238
    10. '+' → logprob: -11.879925727844238

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11680922657251358
    2. 'else' → logprob: -2.366809129714966
    3. ' else' → logprob: -4.116809368133545
    4. ')' → logprob: -9.241808891296387
    5. '
' → logprob: -10.991808891296387
    6. '   ' → logprob: -11.116808891296387
    7. '	else' → logprob: -11.491808891296387
    8. '+' → logprob: -11.741808891296387
    9. '+
' → logprob: -12.616808891296387
    10. '<|end|>' → logprob: -12.991808891296387

Token 297: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6383066177368164
    2. '       ' → logprob: -1.1383066177368164
    3. 'else' (adapté à ' else') → logprob: -1.8883066177368164
    4. ')' → logprob: -10.263306617736816
    5. ':
' → logprob: -10.638306617736816
    6. '	else' → logprob: -10.763306617736816
    7. '   ' → logprob: -11.013306617736816
    8. '+' → logprob: -12.013306617736816
    9. '<|end|>' → logprob: -13.013306617736816
    10. '
' → logprob: -13.138306617736816

Token 298: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7159085869789124
    2. ':
' → logprob: -0.7159085869789124
    3. ':' → logprob: -3.9659085273742676
    4. '       ' → logprob: -6.215908527374268
    5. ' :
' → logprob: -6.840908527374268
    6. ' cost' → logprob: -8.840909004211426
    7. '          ' → logprob: -9.340909004211426
    8. '):
' → logprob: -10.090909004211426
    9. '   ' → logprob: -10.090909004211426
    10. '               ' → logprob: -10.340909004211426

Token 299: '           ' (ID: 352)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6741201281547546
    2. '       ' → logprob: -0.7991201281547546
    3. ' cost' → logprob: -3.2991201877593994
    4. '           ' → logprob: -5.67411994934082
    5. '   ' → logprob: -8.42411994934082
    6. '        ' → logprob: -10.67411994934082
    7. '      ' → logprob: -11.29911994934082
    8. '         ' → logprob: -11.54911994934082
    9. '     ' → logprob: -11.67411994934082
    10. '(cost' → logprob: -12.04911994934082

Token 300: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.0031803252641111612
    2. ' cost' → logprob: -5.753180503845215
    3. '       ' → logprob: -13.753180503845215
    4. '           ' → logprob: -14.628180503845215
    5. 'c' → logprob: -14.628180503845215
    6. '   ' → logprob: -14.753180503845215
    7. 'cycle' → logprob: -16.0031795501709
    8. '(cost' → logprob: -17.5031795501709
    9. '    ' → logprob: -17.6281795501709
    10. '        ' → logprob: -17.7531795501709

Token 301: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.016039999201893806
    2. '+=' → logprob: -4.141039848327637
    3. '+' → logprob: -12.641039848327637
    4. '+=(' → logprob: -14.141039848327637
    5. ']+=' → logprob: -14.641039848327637
    6. '   ' → logprob: -15.016039848327637
    7. ' +' → logprob: -15.266039848327637
    8. ' =' → logprob: -15.891039848327637
    9. '=' → logprob: -16.141040802001953
    10. '       ' → logprob: -16.766040802001953

Token 302: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005130696576088667
    2. ' sum' → logprob: -5.380130767822266
    3. 'dec' → logprob: -8.130130767822266
    4. '(sum' → logprob: -9.380130767822266
    5. 'min' → logprob: -10.005130767822266
    6. 'cost' → logprob: -10.255130767822266
    7. 'inc' → logprob: -10.505130767822266
    8. '   ' → logprob: -11.630130767822266
    9. '(' → logprob: -13.130130767822266
    10. '  ' → logprob: -13.505130767822266

Token 303: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003673940955195576
    2. 'c' → logprob: -8.250367164611816
    3. '(min' → logprob: -9.250367164611816
    4. '(' → logprob: -12.875367164611816
    5. '(w' → logprob: -13.250367164611816
    6. '([' → logprob: -13.500367164611816
    7. '(cost' → logprob: -13.500367164611816
    8. 'min' → logprob: -14.250367164611816
    9. '((' → logprob: -14.500367164611816
    10. 'w' → logprob: -14.500367164611816

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ')+' → logprob: -10.750028610229492
    3. ' )' → logprob: -11.875028610229492
    4. '+' → logprob: -16.000028610229492
    5. '   ' → logprob: -16.500028610229492
    6. ')
' → logprob: -16.500028610229492
    7. '+)' → logprob: -17.000028610229492
    8. '       ' → logprob: -17.125028610229492
    9. ')+(' → logprob: -17.125028610229492
    10. '()' → logprob: -17.875028610229492

Token 305: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06995710730552673
    2. '+' → logprob: -2.6949570178985596
    3. ')' → logprob: -11.81995677947998
    4. '()' → logprob: -12.69495677947998
    5. '()+' → logprob: -12.81995677947998
    6. ' ' → logprob: -13.94495677947998
    7. ')+' → logprob: -14.19495677947998
    8. '   ' → logprob: -14.31995677947998
    9. '+c' → logprob: -14.31995677947998
    10. ' +
' → logprob: -14.44495677947998

Token 306: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0031492002308368683
    2. ' min' → logprob: -5.878149032592773
    3. '(min' → logprob: -8.503149032592773
    4. 'inc' → logprob: -10.253149032592773
    5. '   ' → logprob: -10.628149032592773
    6. 'dec' → logprob: -11.003149032592773
    7. '(n' → logprob: -11.378149032592773
    8. 'n' → logprob: -11.378149032592773
    9. ' ' → logprob: -11.628149032592773
    10. '2' → logprob: -11.628149032592773

Token 307: '_c' (ID: 1303)
  Prédit: '_w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.00420151324942708
    2. '_c' → logprob: -5.504201412200928
    3. 'w' → logprob: -9.504201889038086
    4. 'c' → logprob: -10.004201889038086
    5. '(c' → logprob: -13.254201889038086
    6. '(w' → logprob: -14.879201889038086
    7. '(' → logprob: -15.629201889038086
    8. 'def' → logprob: -16.254201889038086
    9. '_' → logprob: -16.379201889038086
    10. 'W' → logprob: -16.504201889038086

Token 308: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0313473641872406
    2. '_w' → logprob: -3.7813472747802734
    3. '_c' → logprob: -4.906347274780273
    4. 'c' → logprob: -7.406347274780273
    5. 'ow' → logprob: -10.781347274780273
    6. 'cw' → logprob: -11.156347274780273
    7. '_' → logprob: -11.406347274780273
    8. '0' → logprob: -12.531347274780273
    9. '[' → logprob: -12.906347274780273
    10. '[c' → logprob: -14.031347274780273

Token 309: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004802834242582321
    2. '*' → logprob: -5.629802703857422
    3. '*(' → logprob: -7.129802703857422
    4. '[' → logprob: -8.129802703857422
    5. ')' → logprob: -10.004802703857422
    6. '<|end|>' → logprob: -10.504802703857422
    7. ' *(' → logprob: -11.379802703857422
    8. ' +' → logprob: -11.754802703857422
    9. '(' → logprob: -12.129802703857422
    10. 'def' → logprob: -13.754802703857422

Token 310: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.055054135620594025
    2. '(' → logprob: -4.180054187774658
    3. 'n' → logprob: -4.180054187774658
    4. '2' → logprob: -4.555054187774658
    5. '1' → logprob: -5.305054187774658
    6. ' (' → logprob: -5.805054187774658
    7. '+' → logprob: -6.055054187774658
    8. ' +' → logprob: -7.555054187774658
    9. ' ' → logprob: -8.4300537109375
    10. '-' → logprob: -8.4300537109375

Token 311: 'n' (ID: 77)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1631293296813965
    2. 'n' → logprob: -1.1631293296813965
    3. '(n' → logprob: -1.6631293296813965
    4. '-' → logprob: -2.2881293296813965
    5. '(' → logprob: -2.6631293296813965
    6. '(-' → logprob: -5.1631293296813965
    7. '2' → logprob: -6.2881293296813965
    8. ')' → logprob: -6.4131293296813965
    9. '   ' → logprob: -6.6631293296813965
    10. '+' → logprob: -7.6631293296813965

Token 312: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3878800868988037
    2. '-' → logprob: -1.1378800868988037
    3. ')' → logprob: -7.012880325317383
    4. ' ' → logprob: -9.637880325317383
    5. '*' → logprob: -11.387880325317383
    6. '   ' → logprob: -11.762880325317383
    7. ' *' → logprob: -11.762880325317383
    8. '<|end|>' → logprob: -12.012880325317383
    9. ')-' → logprob: -13.137880325317383
    10. '  ' → logprob: -13.512880325317383

Token 313: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007840724661946297
    2. '1' → logprob: -4.882840633392334
    3. ' ' → logprob: -8.382841110229492
    4. '0' → logprob: -13.382841110229492
    5. '   ' → logprob: -13.757841110229492
    6. '-' → logprob: -13.757841110229492
    7. '```' → logprob: -14.632841110229492
    8. '3' → logprob: -14.757841110229492
    9. '
' → logprob: -14.757841110229492
    10. '  ' → logprob: -14.820341110229492

Token 314: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2015359252691269
    2. '1' → logprob: -1.701535940170288
    3. ' ' → logprob: -9.201536178588867
    4. '-' → logprob: -11.576536178588867
    5. '0' → logprob: -12.201536178588867
    6. '
' → logprob: -12.576536178588867
    7. '   ' → logprob: -13.701536178588867
    8. '```' → logprob: -13.826536178588867
    9. '3' → logprob: -14.201536178588867
    10. '  ' → logprob: -15.076536178588867

Token 315: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7456069588661194
    2. ' +' → logprob: -0.7456069588661194
    3. '+' → logprob: -2.9956068992614746
    4. ' )' → logprob: -7.370606899261475
    5. ')+' → logprob: -7.870606899261475
    6. '       ' → logprob: -10.370607376098633
    7. '           ' → logprob: -10.870607376098633
    8. '   ' → logprob: -11.620607376098633
    9. ' -' → logprob: -12.370607376098633
    10. ' ' → logprob: -12.620607376098633

Token 316: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1011122316122055
    2. '+' → logprob: -3.101112127304077
    3. ' -' → logprob: -3.726112127304077
    4. '<|end|>' → logprob: -3.726112127304077
    5. '-' → logprob: -6.976112365722656
    6. '[' → logprob: -7.101112365722656
    7. '   ' → logprob: -8.601112365722656
    8. ' ' → logprob: -8.726112365722656
    9. ')' → logprob: -8.726112365722656
    10. 'def' → logprob: -8.851112365722656

Token 317: ' dec' (ID: 1885)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.042227305471897125
    2. ' min' → logprob: -4.042227268218994
    3. 'dec' → logprob: -4.667227268218994
    4. '(min' → logprob: -4.667227268218994
    5. 'sum' → logprob: -6.292227268218994
    6. 'cost' → logprob: -6.917227268218994
    7. ' (' → logprob: -7.167227268218994
    8. 'inc' → logprob: -7.917227268218994
    9. '(' → logprob: -8.417227745056152
    10. ' dec' → logprob: -9.042227745056152

Token 318: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23843267560005188
    2. '<|end|>' → logprob: -2.7384326457977295
    3. ' 
' → logprob: -2.8634326457977295
    4. '+' → logprob: -2.9884326457977295
    5. ' +' → logprob: -4.238432884216309
    6. '   ' → logprob: -5.363432884216309
    7. '\n' → logprob: -5.363432884216309
    8. '  
' → logprob: -6.113432884216309
    9. '<|end|>' → logprob: -6.238432884216309
    10. ' +
' → logprob: -6.238432884216309

Token 319: ' inc' (ID: 4570)
  Prédit: 'inc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inc' → logprob: -0.11119452863931656
    2. 'min' → logprob: -2.611194610595703
    3. ' inc' → logprob: -3.736194610595703
    4. '2' → logprob: -5.736194610595703
    5. ' min' → logprob: -6.361194610595703
    6. '(' → logprob: -6.611194610595703
    7. '(min' → logprob: -7.861194610595703
    8. ' (' → logprob: -7.986194610595703
    9. 'dec' → logprob: -7.986194610595703
    10. 'cost' → logprob: -8.736194610595703

Token 320: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3597417175769806
    2. '<|end|>' → logprob: -1.4847416877746582
    3. '   ' → logprob: -3.359741687774658
    4. ' 
' → logprob: -4.734741687774658
    5. '\n' → logprob: -4.859741687774658
    6. ')' → logprob: -5.109741687774658
    7. ' return' → logprob: -5.109741687774658
    8. ' ' → logprob: -5.484741687774658
    9. '<|end|>' → logprob: -5.984741687774658
    10. '  
' → logprob: -6.734741687774658

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37031254172325134
    2. '
' → logprob: -1.4953125715255737
    3. 'return' → logprob: -3.245312452316284
    4. ' return' → logprob: -3.745312452316284
    5. '    
' → logprob: -5.120312690734863
    6. '\n' → logprob: -5.245312690734863
    7. ' 
' → logprob: -5.870312690734863
    8. ' ' → logprob: -6.370312690734863
    9. '	return' → logprob: -6.370312690734863
    10. '  
' → logprob: -6.370312690734863

Token 322: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8625969290733337
    2. '
' → logprob: -1.7375969886779785
    3. 'return' (adapté à ' return') → logprob: -1.9875969886779785
    4. '\n' → logprob: -2.2375969886779785
    5. ' return' → logprob: -2.2375969886779785
    6. ' 
' → logprob: -3.7375969886779785
    7. '    
' → logprob: -4.3625969886779785
    8. '\' → logprob: -5.2375969886779785
    9. '  
' → logprob: -5.6125969886779785
    10. ' ' → logprob: -6.8625969886779785

Token 323: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1602243334054947
    2. ' cost' → logprob: -1.9102243185043335
    3. '(cost' → logprob: -16.16022491455078
    4. '0' → logprob: -16.78522491455078
    5. 'code' → logprob: -18.16022491455078
    6. '   ' → logprob: -19.28522491455078
    7. '_cost' → logprob: -19.41022491455078
    8. 'int' → logprob: -19.66022491455078
    9. ' ' → logprob: -20.16022491455078
    10. 'price' → logprob: -20.66022491455078

Token 324: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31674307584762573
    2. '<|end|>' → logprob: -1.4417431354522705
    3. '#' → logprob: -4.066742897033691
    4. '[' → logprob: -4.941742897033691
    5. '```' → logprob: -5.816742897033691
    6. ':' → logprob: -6.191742897033691
    7. ']' → logprob: -6.691742897033691
    8. '(' → logprob: -7.441742897033691
    9. ',' → logprob: -7.566742897033691
    10. 'n' → logprob: -7.816742897033691

Token 325: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9674589037895203
    2. '<|end|>' → logprob: -1.092458963394165
    3. '#' → logprob: -1.342458963394165
    4. '<|end|>' → logprob: -4.842458724975586
    5. '```' → logprob: -5.217458724975586
    6. '
' → logprob: -5.342458724975586
    7. '[' → logprob: -6.592458724975586
    8. ']' → logprob: -7.092458724975586
    9. 'def' → logprob: -7.467458724975586
    10. '}' → logprob: -8.092458724975586

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6338033080101013
    2. '=' → logprob: -0.7588033080101013
    3. ' ' → logprob: -7.508803367614746
    4. ')' → logprob: -7.758803367614746
    5. ',' → logprob: -9.758803367614746
    6. '  ' → logprob: -10.133803367614746
    7. 'n' → logprob: -10.883803367614746
    8. '.' → logprob: -11.008803367614746
    9. '   ' → logprob: -11.258803367614746
    10. '=int' → logprob: -11.508803367614746

Token 327: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04900607094168663
    2. ' int' → logprob: -3.0490059852600098
    3. '5' → logprob: -8.674006462097168
    4. '10' → logprob: -8.924006462097168
    5. ' ' → logprob: -9.299006462097168
    6. '3' → logprob: -12.299006462097168
    7. '6' → logprob: -12.424006462097168
    8. '7' → logprob: -12.674006462097168
    9. '[int' → logprob: -12.674006462097168
    10. '<int' → logprob: -13.424006462097168

Token 328: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0011358122574165463
    2. '(' → logprob: -7.25113582611084
    3. 'input' → logprob: -8.25113582611084
    4. '()' → logprob: -8.75113582611084
    5. ' (' → logprob: -12.50113582611084
    6. '=input' → logprob: -13.50113582611084
    7. '(
' → logprob: -14.37613582611084
    8. ' ()' → logprob: -15.12613582611084
    9. '('' → logprob: -16.251134872436523
    10. ' input' → logprob: -16.626134872436523

Token 329: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023330846801400185
    2. '()' → logprob: -3.7733309268951416
    3. '(' → logprob: -9.773330688476562
    4. ')' → logprob: -11.023330688476562
    5. '())
' → logprob: -12.773330688476562
    6. '().' → logprob: -12.898330688476562
    7. '()>' → logprob: -13.398330688476562
    8. '()
' → logprob: -14.023330688476562
    9. ' ())' → logprob: -14.023330688476562
    10. '();)' → logprob: -14.398330688476562

Token 330: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.165027217415627e-05
    2. 'arr' → logprob: -11.750021934509277
    3. 'a' → logprob: -11.875021934509277
    4. ' A' → logprob: -12.750021934509277
    5. '```' → logprob: -13.125021934509277
    6. '
' → logprob: -15.000021934509277
    7. 'array' → logprob: -15.250021934509277
    8. 'for' → logprob: -15.500021934509277
    9. 'numbers' → logprob: -15.500021934509277
    10. 'n' → logprob: -15.750021934509277

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326571106910706
    2. '=' → logprob: -1.3132656812667847
    3. '=[]' → logprob: -13.063265800476074
    4. '[' → logprob: -14.938265800476074
    5. ' =[' → logprob: -15.438265800476074
    6. '[]' → logprob: -15.563265800476074
    7. '.' → logprob: -15.688265800476074
    8. '[:]' → logprob: -16.188264846801758
    9. '=[' → logprob: -16.313264846801758
    10. ')' → logprob: -16.313264846801758

Token 332: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.038941606879234314
    2. '[list' → logprob: -3.2889416217803955
    3. '[' → logprob: -7.288941383361816
    4. ' list' → logprob: -8.538941383361816
    5. '[int' → logprob: -11.663941383361816
    6. '[input' → logprob: -11.913941383361816
    7. '[]' → logprob: -12.663941383361816
    8. '[List' → logprob: -14.163941383361816
    9. '[n' → logprob: -14.288941383361816
    10. ' [' → logprob: -15.788941383361816

Token 333: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -8.864272967912257e-05
    2. '(' → logprob: -9.375088691711426
    3. '(int' → logprob: -13.500088691711426
    4. '(input' → logprob: -13.875088691711426
    5. '()' → logprob: -14.375088691711426
    6. 'map' → logprob: -14.875088691711426
    7. '(range' → logprob: -15.125088691711426
    8. '(eval' → logprob: -16.37508773803711
    9. '(list' → logprob: -17.25008773803711
    10. '(
' → logprob: -18.00008773803711

Token 334: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010854477295652032
    2. '(' → logprob: -6.87608528137207
    3. 'int' → logprob: -10.75108528137207
    4. '(input' → logprob: -10.87608528137207
    5. '(str' → logprob: -12.12608528137207
    6. '(
' → logprob: -12.62608528137207
    7. ' int' → logprob: -13.37608528137207
    8. ' (' → logprob: -13.62608528137207
    9. '<int' → logprob: -15.25108528137207
    10. '=int' → logprob: -15.37608528137207

Token 335: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1656680703163147
    2. ',input' → logprob: -2.29066801071167
    3. 'input' → logprob: -3.04066801071167
    4. ',' → logprob: -6.04066801071167
    5. '(' → logprob: -7.16566801071167
    6. ' input' → logprob: -8.165668487548828
    7. '   ' → logprob: -9.040668487548828
    8. '=input' → logprob: -10.165668487548828
    9. '(
' → logprob: -10.915668487548828
    10. ' ,' → logprob: -11.290668487548828

Token 336: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0004307884373702109
    2. ' input' → logprob: -7.750430583953857
    3. '(input' → logprob: -17.250431060791016
    4. ',input' → logprob: -18.625431060791016
    5. '<input' → logprob: -20.125431060791016
    6. ' ' → logprob: -20.250431060791016
    7. '   ' → logprob: -20.375431060791016
    8. '=input' → logprob: -20.750431060791016
    9. '	input' → logprob: -21.000431060791016
    10. 'str' → logprob: -21.750431060791016

Token 337: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.77627644513268e-06
    2. '()' → logprob: -11.750008583068848
    3. ' ().' → logprob: -14.375008583068848
    4. '(' → logprob: -15.875008583068848
    5. '.split' → logprob: -16.500009536743164
    6. 'split' → logprob: -17.000009536743164
    7. ' .' → logprob: -17.250009536743164
    8. '()
' → logprob: -17.625009536743164
    9. '   ' → logprob: -18.000009536743164
    10. '.strip' → logprob: -18.375009536743164

Token 338: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005235190503299236
    2. 'strip' → logprob: -5.255235195159912
    3. 'rstrip' → logprob: -13.505234718322754
    4. '(split' → logprob: -16.38023567199707
    5. ' split' → logprob: -17.63023567199707
    6. 'read' → logprob: -18.00523567199707
    7. 'spl' → logprob: -19.00523567199707
    8. ' strip' → logprob: -20.63023567199707
    9. 's' → logprob: -21.63023567199707
    10. '.split' → logprob: -21.88023567199707

Token 339: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.024051960557699203
    2. '))' → logprob: -4.024052143096924
    3. '()' → logprob: -5.274052143096924
    4. '())' → logprob: -7.649052143096924
    5. '(' → logprob: -8.274051666259766
    6. '()))
' → logprob: -10.899051666259766
    7. ')' → logprob: -12.274051666259766
    8. '(),' → logprob: -13.024051666259766
    9. '()));' → logprob: -13.024051666259766
    10. '())))' → logprob: -14.649051666259766

Token 340: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.054500666621607e-06
    2. '
' → logprob: -12.87500286102295
    3. '```' → logprob: -15.37500286102295
    4. ' print' → logprob: -15.50000286102295
    5. '``' → logprob: -18.000003814697266
    6. 'result' → logprob: -18.375003814697266
    7. '<|end|>' → logprob: -18.500003814697266
    8. '
' → logprob: -20.000003814697266
    9. '#print' → logprob: -20.000003814697266
    10. '(print' → logprob: -20.250003814697266

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07906252145767212
    2. ' =' → logprob: -2.5790624618530273
    3. '(' → logprob: -9.079062461853027
    4. '_' → logprob: -11.079062461853027
    5. ')' → logprob: -11.579062461853027
    6. '()' → logprob: -11.579062461853027
    7. '_=' → logprob: -11.704062461853027
    8. '＝' → logprob: -13.204062461853027
    9. '("="' → logprob: -13.454062461853027
    10. ':' → logprob: -13.704062461853027

Token 342: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.676292231422849e-05
    2. ' min' → logprob: -11.000017166137695
    3. '(min' → logprob: -19.250017166137695
    4. '	min' → logprob: -24.125017166137695
    5. 'max' → logprob: -24.250017166137695
    6. '[min' → logprob: -24.375017166137695
    7. '=min' → logprob: -24.750017166137695
    8. '0' → logprob: -25.500017166137695
    9. '.min' → logprob: -26.125017166137695
    10. 'print' → logprob: -26.375017166137695

Token 343: '_sort' (ID: 43815)
  Prédit: '_sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sort' → logprob: -5.512236498361744e-07
    2. '_sorted' → logprob: -15.125000953674316
    3. '_cost' → logprob: -15.875000953674316
    4. '_' → logprob: -16.5
    5. 'sort' → logprob: -17.125
    6. '_SORT' → logprob: -17.375
    7. 'sorting' → logprob: -18.75
    8. '_ans' → logprob: -20.0
    9. '_sum' → logprob: -20.125
    10. 'Sort' → logprob: -20.75

Token 344: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -9.088346359931165e-07
    2. 'sorting' → logprob: -14.250000953674316
    3. 'in' → logprob: -16.375
    4. 'ings' → logprob: -17.375
    5. 'ingin' → logprob: -18.375
    6. 'cost' → logprob: -19.0
    7. 'inging' → logprob: -19.0
    8. '_ing' → logprob: -19.125
    9. 'i' → logprob: -19.375
    10. 'eing' → logprob: -19.5

Token 345: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00013357517309486866
    2. 'cost' → logprob: -9.125133514404297
    3. 'ing' → logprob: -10.625133514404297
    4. 'g' → logprob: -16.125133514404297
    5. ' cost' → logprob: -16.500133514404297
    6. '_COST' → logprob: -17.375133514404297
    7. '_' → logprob: -17.750133514404297
    8. '-cost' → logprob: -18.125133514404297
    9. 'Cost' → logprob: -18.875133514404297
    10. '_cos' → logprob: -19.125133514404297

Token 346: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -11.875007629394531
    3. '(ans' → logprob: -14.375007629394531
    4. '(
' → logprob: -16.87500762939453
    5. '((' → logprob: -17.62500762939453
    6. ' (' → logprob: -18.75000762939453
    7. '(C' → logprob: -18.87500762939453
    8. '(B' → logprob: -19.00000762939453
    9. '(AST' → logprob: -19.25000762939453
    10. '(a' → logprob: -19.50000762939453

Token 347: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0034736746456474066
    2. ')
' → logprob: -5.75347375869751
    3. ')

' → logprob: -8.128473281860352
    4. 'print' → logprob: -14.378473281860352
    5. ')
' → logprob: -15.253473281860352
    6. '))' → logprob: -16.37847328186035
    7. ' )' → logprob: -16.62847328186035
    8. ')`' → logprob: -17.62847328186035
    9. ')

' → logprob: -18.25347328186035
    10. ')**' → logprob: -19.12847328186035

Token 348: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. '
' → logprob: -13.500001907348633
    3. '```' → logprob: -14.000001907348633
    4. ' print' → logprob: -17.000001907348633
    5. '``' → logprob: -17.625001907348633
    6. '
' → logprob: -19.750001907348633
    7. '\n' → logprob: -20.875001907348633
    8. '#print' → logprob: -21.250001907348633
    9. '(print' → logprob: -21.375001907348633
    10. '	print' → logprob: -21.500001907348633

Token 349: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00020377879263833165
    2. '(' → logprob: -8.500204086303711
    3. ' (' → logprob: -15.750204086303711
    4. 'ans' → logprob: -16.37520408630371
    5. '(answer' → logprob: -17.00020408630371
    6. '(
' → logprob: -17.25020408630371
    7. '(abs' → logprob: -19.00020408630371
    8. '()' → logprob: -19.62520408630371
    9. '(

' → logprob: -19.75020408630371
    10. '	ans' → logprob: -20.00020408630371

Token 350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0219828002154827e-05
    2. '())' → logprob: -11.250020027160645
    3. '()' → logprob: -12.250020027160645
    4. '))' → logprob: -13.625020027160645
    5. '(' → logprob: -14.625020027160645
    6. ')`' → logprob: -14.750020027160645
    7. '`)' → logprob: -16.25002098083496
    8. ' )' → logprob: -16.37502098083496
    9. ')
' → logprob: -17.12502098083496
    10. '')' → logprob: -17.75002098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 348
Tokens correctement prédits (1ère position, stricte): 145
Tokens correctement prédits (1ère position, avec adaptation): 153
Tokens correctement prédits (top 10): 287
Précision stricte (1ère position): 41.67%
Précision adaptée (1ère position): 43.97%
Précision (top 10): 82.47%
================================================================================
