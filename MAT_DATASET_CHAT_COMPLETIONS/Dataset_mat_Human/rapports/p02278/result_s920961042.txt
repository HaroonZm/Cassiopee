================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def solve(n, A):
    def cycles():
        V = [False] * n
        B = sorted(A)
        T = {B[i]: i for i in range(n)}
        C = []

        for i in range(n):
            if V[i]:
                continue
            cur = i
            cycle = []
            while not V[cur]:
                V[cur] = True
                cycle.append(cur)
                cur = T[A[cur]]
            C.append(cycle)

        return C

    ans = 0
    s = min(A)

    for cycle in cycles():
        S = sum([A[i] for i in cycle])
        m = min([A[i] for i in cycle])
        an = len(cycle)
        ans += min(S + (an - 2) * m, m + S + (an + 1) * s)

    return ans

def main():
    n = int(input())
    A = [int(x) for x in input().split()]

    print(solve(n, A))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' solve' (ID: 17722)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02028948813676834
    2. ')' → logprob: -4.020289421081543
    3. ',' → logprob: -6.270289421081543
    4. ':' → logprob: -8.770289421081543
    5. '=' → logprob: -10.770289421081543
    6. '```' → logprob: -11.520289421081543
    7. '):
' → logprob: -11.645289421081543
    8. '[' → logprob: -12.270289421081543
    9. ')>' → logprob: -12.270289421081543
    10. '_' → logprob: -12.395289421081543

Token 4: ' A' (ID: 355)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0996946096420288
    2. ' m' → logprob: -1.0996946096420288
    3. '):' → logprob: -1.9746946096420288
    4. ')' → logprob: -2.5996947288513184
    5. ' k' → logprob: -4.099694728851318
    6. 'k' → logprob: -4.099694728851318
    7. ' ):' → logprob: -4.099694728851318
    8. 'a' → logprob: -4.224694728851318
    9. ' x' → logprob: -4.724694728851318
    10. ' arr' → logprob: -4.974694728851318

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035087261348962784
    2. ')' → logprob: -6.003508567810059
    3. ',' → logprob: -7.503508567810059
    4. '```' → logprob: -8.003508567810059
    5. '):
' → logprob: -9.503508567810059
    6. ':' → logprob: -10.628508567810059
    7. '[' → logprob: -11.503508567810059
    8. ''):' → logprob: -11.628508567810059
    9. '`:' → logprob: -12.003508567810059
    10. '[]):' → logprob: -12.503508567810059

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05179959163069725
    2. '   ' → logprob: -3.0517995357513428
    3. ':
' → logprob: -6.301799774169922
    4. '```' → logprob: -6.926799774169922
    5. '():' → logprob: -10.051799774169922
    6. ':\' → logprob: -10.051799774169922
    7. '    
' → logprob: -10.176799774169922
    8. '\n' → logprob: -10.301799774169922
    9. '":' → logprob: -10.551799774169922
    10. '\' → logprob: -10.551799774169922

Token 7: ' def' (ID: 1056)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1908701658248901
    2. '\' → logprob: -1.3158701658248901
    3. '   ' → logprob: -1.9408701658248901
    4. ' ' → logprob: -2.4408702850341797
    5. '```' → logprob: -2.8158702850341797
    6. ' 
' → logprob: -3.1908702850341797
    7. '`' → logprob: -3.8158702850341797
    8. '    
' → logprob: -4.81587028503418
    9. 'i' → logprob: -4.94087028503418
    10. ''' → logprob: -5.06587028503418

Token 8: ' cycles' (ID: 41478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3936264514923096
    2. ' ' → logprob: -1.6436264514923096
    3. ' helper' → logprob: -2.2686264514923096
    4. ' factorial' → logprob: -2.3936264514923096
    5. ' solve' → logprob: -2.6436264514923096
    6. ' sum' → logprob: -2.7686264514923096
    7. ' dfs' → logprob: -2.8936264514923096
    8. ' process' → logprob: -3.6436264514923096
    9. ' space' → logprob: -3.7686264514923096
    10. ' _' → logprob: -4.3936262130737305

Token 9: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47320854663848877
    2. '(' → logprob: -1.2232085466384888
    3. '_:' → logprob: -3.598208427429199
    4. '():' → logprob: -4.223208427429199
    5. ':' → logprob: -4.348208427429199
    6. '_count' → logprob: -5.223208427429199
    7. '):' → logprob: -5.473208427429199
    8. '_length' → logprob: -5.848208427429199
    9. '(:' → logprob: -5.973208427429199
    10. '_in' → logprob: -6.848208427429199

Token 10: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13513189554214478
    2. '\n' → logprob: -3.1351318359375
    3. '\' → logprob: -3.3851318359375
    4. ':' → logprob: -4.0101318359375
    5. '    ' → logprob: -4.2601318359375
    6. '   ' → logprob: -5.2601318359375
    7. '(' → logprob: -6.3851318359375
    8. '        
' → logprob: -6.5101318359375
    9. '     ' → logprob: -6.8851318359375
    10. '(n' → logprob: -6.8851318359375

Token 11: ' V' (ID: 631)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2085609436035156
    2. '       ' → logprob: -1.5835609436035156
    3. ' for' → logprob: -1.7085609436035156
    4. 'for' → logprob: -2.0835609436035156
    5. '        ' → logprob: -3.3335609436035156
    6. '\' → logprob: -3.3335609436035156
    7. ' ' → logprob: -3.8335609436035156
    8. 'yield' → logprob: -3.9585609436035156
    9. '```' → logprob: -4.333560943603516
    10. '   ' → logprob: -4.333560943603516

Token 12: ' =' (ID: 314)
  Prédit: 'isit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isit' → logprob: -0.5980985164642334
    2. 'is' → logprob: -1.0980985164642334
    3. '=' → logprob: -2.8480985164642334
    4. ' =' → logprob: -2.9730985164642334
    5. 'isted' → logprob: -6.0980987548828125
    6. 'isible' → logprob: -6.5980987548828125
    7. '=set' → logprob: -6.7230987548828125
    8. '=is' → logprob: -7.5980987548828125
    9. '=[]' → logprob: -8.098098754882812
    10. '   ' → logprob: -8.348098754882812

Token 13: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.24612478911876678
    2. '[' → logprob: -2.246124744415283
    3. ' set' → logprob: -2.621124744415283
    4. 'set' → logprob: -3.371124744415283
    5. '[n' → logprob: -6.746124744415283
    6. ' ' → logprob: -6.996124744415283
    7. '[len' → logprob: -6.996124744415283
    8. '[]' → logprob: -7.371124744415283
    9. ' []' → logprob: -7.746124744415283
    10. '[A' → logprob: -7.871124744415283

Token 14: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014303121715784073
    2. '0' → logprob: -4.889303207397461
    3. ' False' → logprob: -5.014303207397461
    4. 'True' → logprob: -11.514303207397461
    5. '   ' → logprob: -11.639303207397461
    6. '-' → logprob: -12.889303207397461
    7. '(False' → logprob: -13.014303207397461
    8. ']' → logprob: -13.264303207397461
    9. ' ' → logprob: -13.264303207397461
    10. '    ' → logprob: -13.639303207397461

Token 15: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03292180970311165
    2. ' for' → logprob: -3.78292179107666
    3. ']*' → logprob: -4.65792179107666
    4. 'for' → logprob: -9.40792179107666
    5. ' ]' → logprob: -11.03292179107666
    6. ']*(' → logprob: -11.15792179107666
    7. ')' → logprob: -11.28292179107666
    8. '   ' → logprob: -11.65792179107666
    9. '       ' → logprob: -13.65792179107666
    10. ' ' → logprob: -13.78292179107666

Token 16: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7348201870918274
    2. ' for' → logprob: -0.7348201870918274
    3. '[' → logprob: -4.109820365905762
    4. 'for' → logprob: -4.984820365905762
    5. ']*' → logprob: -4.984820365905762
    6. '       ' → logprob: -5.359820365905762
    7. ' ]' → logprob: -6.609820365905762
    8. ',' → logprob: -6.859820365905762
    9. '*' → logprob: -7.109820365905762
    10. '(' → logprob: -7.484820365905762

Token 17: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5710068345069885
    2. 'n' → logprob: -0.9460068345069885
    3. '(n' → logprob: -3.5710067749023438
    4. ' (' → logprob: -4.196006774902344
    5. 'len' → logprob: -6.696006774902344
    6. ' len' → logprob: -6.946006774902344
    7. '(' → logprob: -7.321006774902344
    8. '(len' → logprob: -7.321006774902344
    9. ' ' → logprob: -10.196006774902344
    10. '	n' → logprob: -12.446006774902344

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4711686670780182
    2. '       ' → logprob: -1.0961686372756958
    3. '   ' → logprob: -3.9711687564849854
    4. ' for' → logprob: -5.221168518066406
    5. '
' → logprob: -5.346168518066406
    6. 'for' → logprob: -5.596168518066406
    7. '        
' → logprob: -6.346168518066406
    8. ' ' → logprob: -6.596168518066406
    9. '' → logprob: -7.096168518066406
    10. '    
' → logprob: -7.221168518066406

Token 19: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09450560063123703
    2. '
' → logprob: -2.594505548477173
    3. '   ' → logprob: -5.219505786895752
    4. '        
' → logprob: -5.969505786895752
    5. '<|end|>' → logprob: -6.594505786895752
    6. ' for' → logprob: -6.719505786895752
    7. ' 
' → logprob: -6.969505786895752
    8. '```' → logprob: -7.094505786895752
    9. '  
' → logprob: -7.594505786895752
    10. ')' → logprob: -7.719505786895752

Token 20: ' B' (ID: 418)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004059163853526115
    2. ' for' → logprob: -6.004059314727783
    3. 'res' → logprob: -7.504059314727783
    4. 'result' → logprob: -8.379058837890625
    5. '   ' → logprob: -8.504058837890625
    6. 'stack' → logprob: -8.629058837890625
    7. 'cycles' → logprob: -9.254058837890625
    8. 'cycle' → logprob: -9.504058837890625
    9. 'c' → logprob: -9.754058837890625
    10. '       ' → logprob: -10.129058837890625

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6442427039146423
    2. ' =' → logprob: -0.7692427039146423
    3. '   ' → logprob: -5.644242763519287
    4. '[' → logprob: -5.769242763519287
    5. '=[]' → logprob: -7.019242763519287
    6. '       ' → logprob: -7.144242763519287
    7. '  ' → logprob: -7.894242763519287
    8. '[i' → logprob: -8.019242286682129
    9. ' ' → logprob: -8.019242286682129
    10. '[]' → logprob: -8.144242286682129

Token 22: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6504677534103394
    2. '[' → logprob: -0.7754677534103394
    3. '[]' → logprob: -4.400467872619629
    4. ' []' → logprob: -6.025467872619629
    5. '[A' → logprob: -6.900467872619629
    6. '[n' → logprob: -7.025467872619629
    7. ' A' → logprob: -7.525467872619629
    8. 'A' → logprob: -7.900467872619629
    9. ' ' → logprob: -9.650467872619629
    10. '[-' → logprob: -10.525467872619629

Token 23: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.12916406989097595
    2. '(' → logprob: -2.129163980484009
    3. '((' → logprob: -6.629164218902588
    4. '(range' → logprob: -7.379164218902588
    5. '([' → logprob: -9.50416374206543
    6. 'A' → logprob: -9.87916374206543
    7. '(
' → logprob: -9.87916374206543
    8. '(a' → logprob: -10.37916374206543
    9. '([(' → logprob: -10.75416374206543
    10. '(B' → logprob: -10.75416374206543

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014679614687338471
    2. ',' → logprob: -6.626468181610107
    3. '))' → logprob: -10.37646770477295
    4. ' )' → logprob: -10.50146770477295
    5. '[' → logprob: -11.00146770477295
    6. ')])' → logprob: -11.00146770477295
    7. ')]' → logprob: -11.87646770477295
    8. ')
' → logprob: -12.00146770477295
    9. ' ,' → logprob: -12.37646770477295
    10. ' ' → logprob: -12.62646770477295

Token 25: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17293770611286163
    2. '       ' → logprob: -2.2979376316070557
    3. ' for' → logprob: -3.6729376316070557
    4. ')' → logprob: -4.297937870025635
    5. '        
' → logprob: -5.172937870025635
    6. ' 
' → logprob: -5.797937870025635
    7. '<|end|>' → logprob: -6.297937870025635
    8. 'for' → logprob: -6.297937870025635
    9. '        ' → logprob: -6.422937870025635
    10. ')
' → logprob: -6.922937870025635

Token 26: ' T' (ID: 353)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4490472972393036
    2. '
' → logprob: -2.074047327041626
    3. '       ' → logprob: -2.449047327041626
    4. 'for' → logprob: -2.824047327041626
    5. ')' → logprob: -3.324047327041626
    6. '        
' → logprob: -4.199047088623047
    7. ' ' → logprob: -4.824047088623047
    8. ' 
' → logprob: -4.949047088623047
    9. ':' → logprob: -5.574047088623047
    10. ')
' → logprob: -5.699047088623047

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19718609750270844
    2. '=' → logprob: -2.07218599319458
    3. 'o' → logprob: -3.69718599319458
    4. 'ime' → logprob: -4.94718599319458
    5. 'emp' → logprob: -5.07218599319458
    6. 'arget' → logprob: -6.07218599319458
    7. '=[]' → logprob: -6.07218599319458
    8. 'r' → logprob: -6.19718599319458
    9. 'mp' → logprob: -6.94718599319458
    10. '[]' → logprob: -7.07218599319458

Token 28: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1456761360168457
    2. ' [' → logprob: -1.1456761360168457
    3. '0' → logprob: -1.7706761360168457
    4. '[]' → logprob: -1.8956761360168457
    5. ' []' → logprob: -3.6456761360168457
    6. ' ' → logprob: -4.520676136016846
    7. '[n' → logprob: -5.520676136016846
    8. '[-' → logprob: -7.895676136016846
    9. ' [[]' → logprob: -8.145675659179688
    10. '1' → logprob: -8.270675659179688

Token 29: 'B' (ID: 33)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.45487940311431885
    2. 'a' → logprob: -1.9548794031143188
    3. 'x' → logprob: -2.5798792839050293
    4. 'b' → logprob: -2.8298792839050293
    5. 'k' → logprob: -3.4548792839050293
    6. 'A' → logprob: -3.7048792839050293
    7. 'i' → logprob: -4.579879283905029
    8. 'B' → logprob: -4.704879283905029
    9. 'v' → logprob: -4.829879283905029
    10. '   ' → logprob: -6.954879283905029

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020866614067927003
    2. '[j' → logprob: -9.000208854675293
    3. '[x' → logprob: -10.750208854675293
    4. '[k' → logprob: -11.625208854675293
    5. '[v' → logprob: -11.625208854675293
    6. 'i' → logprob: -11.750208854675293
    7. '[a' → logprob: -11.875208854675293
    8. '[' → logprob: -12.125208854675293
    9. '[idx' → logprob: -12.250208854675293
    10. '.index' → logprob: -12.375208854675293

Token 31: ']:' (ID: 12433)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16155244410037994
    2. ':i' → logprob: -1.9115524291992188
    3. '[i' → logprob: -7.661552429199219
    4. ' :' → logprob: -7.786552429199219
    5. ':index' → logprob: -8.911552429199219
    6. '   ' → logprob: -9.161552429199219
    7. ']' → logprob: -9.286552429199219
    8. '[' → logprob: -11.161552429199219
    9. '    ' → logprob: -11.286552429199219
    10. '-' → logprob: -11.411552429199219

Token 32: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11311075091362
    2. ' i' → logprob: -2.2381107807159424
    3. ' ' → logprob: -8.863110542297363
    4. 'A' → logprob: -9.863110542297363
    5. '[i' → logprob: -11.238110542297363
    6. ' A' → logprob: -11.238110542297363
    7. '   ' → logprob: -11.238110542297363
    8. '	i' → logprob: -11.238110542297363
    9. 'B' → logprob: -11.488110542297363
    10. '(i' → logprob: -12.363110542297363

Token 33: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15244270861148834
    2. '}' → logprob: -2.402442693710327
    3. 'for' → logprob: -3.027442693710327
    4. '   ' → logprob: -6.652442932128906
    5. ' ' → logprob: -8.152442932128906
    6. ' }' → logprob: -8.277442932128906
    7. ',' → logprob: -8.902442932128906
    8. '    ' → logprob: -8.902442932128906
    9. '	for' → logprob: -8.902442932128906
    10. '       ' → logprob: -9.027442932128906

Token 34: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0618271678686142
    2. ' i' → logprob: -3.3118271827697754
    3. 'range' → logprob: -3.8118271827697754
    4. 'i' → logprob: -6.811827182769775
    5. ' in' → logprob: -8.561826705932617
    6. '<|end|>' → logprob: -9.936826705932617
    7. ' ' → logprob: -10.311826705932617
    8. '	range' → logprob: -11.311826705932617
    9. '<|end|>' → logprob: -13.061826705932617
    10. ' xrange' → logprob: -13.186826705932617

Token 35: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3487893342971802
    2. 'in' → logprob: -1.2237893342971802
    3. 'range' → logprob: -9.09878921508789
    4. ' range' → logprob: -9.09878921508789
    5. ' ' → logprob: -9.47378921508789
    6. ',' → logprob: -10.34878921508789
    7. '<|end|>' → logprob: -12.34878921508789
    8. '  ' → logprob: -13.22378921508789
    9. 'i' → logprob: -13.34878921508789
    10. '<|end|>' → logprob: -14.22378921508789

Token 36: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759410262107849
    2. 'range' → logprob: -0.8259410262107849
    3. ' ' → logprob: -14.07594108581543
    4. '	range' → logprob: -14.32594108581543
    5. 'rang' → logprob: -17.45094108581543
    6. '(range' → logprob: -17.45094108581543
    7. ' xrange' → logprob: -17.45094108581543
    8. '   ' → logprob: -17.70094108581543
    9. 'B' → logprob: -17.70094108581543
    10. '  ' → logprob: -17.95094108581543

Token 37: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005336135509423912
    2. '(' → logprob: -7.625533580780029
    3. 'n' → logprob: -10.625534057617188
    4. ' (' → logprob: -11.375534057617188
    5. '(len' → logprob: -12.000534057617188
    6. ' n' → logprob: -12.750534057617188
    7. '	n' → logprob: -14.500534057617188
    8. '   ' → logprob: -16.375534057617188
    9. ' ' → logprob: -16.625534057617188
    10. '(
' → logprob: -17.000534057617188

Token 38: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.01897023618221283
    2. ')' → logprob: -4.643970012664795
    3. '}' → logprob: -4.768970012664795
    4. '})' → logprob: -7.643970012664795
    5. '       ' → logprob: -9.268970489501953
    6. ')}
' → logprob: -10.518970489501953
    7. ' }' → logprob: -10.768970489501953
    8. ' )' → logprob: -11.018970489501953
    9. ')}}' → logprob: -11.518970489501953
    10. '   ' → logprob: -11.893970489501953

Token 39: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.026098469272255898
    2. '       ' → logprob: -4.151098251342773
    3. '<|end|>' → logprob: -4.901098251342773
    4. '\n' → logprob: -7.901098251342773
    5. '        
' → logprob: -7.901098251342773
    6. '   ' → logprob: -8.276098251342773
    7. '
' → logprob: -8.276098251342773
    8. '' → logprob: -8.526098251342773
    9. ' 
' → logprob: -8.651098251342773
    10. '    
' → logprob: -8.651098251342773

Token 40: ' C' (ID: 363)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9878118634223938
    2. ' for' → logprob: -1.237811803817749
    3. '   ' → logprob: -1.737811803817749
    4. '       ' → logprob: -2.862811803817749
    5. 'result' → logprob: -4.237812042236328
    6. ' result' → logprob: -4.612812042236328
    7. 'c' → logprob: -4.612812042236328
    8. 'res' → logprob: -4.987812042236328
    9. 'i' → logprob: -5.112812042236328
    10. ' cycle' → logprob: -5.362812042236328

Token 41: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2718881666660309
    2. 'ycles' → logprob: -2.146888256072998
    3. '=' → logprob: -2.771888256072998
    4. 'ount' → logprob: -3.271888256072998
    5. 'ycle' → logprob: -4.521888256072998
    6. '=[]' → logprob: -5.896888256072998
    7. ' ' → logprob: -6.396888256072998
    8. '   ' → logprob: -6.521888256072998
    9. '  ' → logprob: -7.271888256072998
    10. '=[]
' → logprob: -7.396888256072998

Token 42: ' []

' (ID: 32833)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7261289358139038
    2. '0' → logprob: -1.4761289358139038
    3. '[' → logprob: -1.9761289358139038
    4. '[]' → logprob: -2.2261290550231934
    5. ' []' → logprob: -3.7261290550231934
    6. ' ' → logprob: -4.101129055023193
    7. '[]
' → logprob: -8.351128578186035
    8. ' []
' → logprob: -8.976128578186035
    9. ' [[]' → logprob: -10.226128578186035
    10. '   ' → logprob: -10.851128578186035

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15013164281845093
    2. '   ' → logprob: -2.7751317024230957
    3. ' for' → logprob: -3.5251317024230957
    4. '<|end|>' → logprob: -3.7751317024230957
    5. 'for' → logprob: -4.525131702423096
    6. '        
' → logprob: -5.650131702423096
    7. '    
' → logprob: -6.150131702423096
    8. '
' → logprob: -6.275131702423096
    9. '    ' → logprob: -6.650131702423096
    10. ')' → logprob: -7.275131702423096

Token 44: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025383250322192907
    2. ' for' → logprob: -6.002538204193115
    3. '   ' → logprob: -9.877538681030273
    4. 'f' → logprob: -12.252538681030273
    5. '       ' → logprob: -13.002538681030273
    6. '	for' → logprob: -13.252538681030273
    7. 'i' → logprob: -14.002538681030273
    8. 'stack' → logprob: -14.627538681030273
    9. '```' → logprob: -15.002538681030273
    10. '
' → logprob: -15.627538681030273

Token 45: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011173967272043228
    2. 'i' → logprob: -4.511174201965332
    3. ' v' → logprob: -9.386174201965332
    4. ' ' → logprob: -10.886174201965332
    5. ' u' → logprob: -12.136174201965332
    6. ' x' → logprob: -12.386174201965332
    7. 'v' → logprob: -12.761174201965332
    8. ' j' → logprob: -13.386174201965332
    9. '   ' → logprob: -13.511174201965332
    10. ' ' → logprob: -13.636174201965332

Token 46: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08124315738677979
    2. 'in' → logprob: -2.5812430381774902
    3. 'n' → logprob: -6.08124303817749
    4. ' ' → logprob: -10.081243515014648
    5. '	in' → logprob: -12.206243515014648
    6. 's' → logprob: -12.831243515014648
    7. '  ' → logprob: -12.831243515014648
    8. 'In' → logprob: -12.956243515014648
    9. ' n' → logprob: -13.081243515014648
    10. ',' → logprob: -13.706243515014648

Token 47: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132643401622772
    2. 'range' → logprob: -1.3132643699645996
    3. ' ' → logprob: -13.688263893127441
    4. '	range' → logprob: -14.563263893127441
    5. '   ' → logprob: -15.313263893127441
    6. ' xrange' → logprob: -15.563263893127441
    7. '  ' → logprob: -16.063264846801758
    8. '(range' → logprob: -16.188264846801758
    9. 'n' → logprob: -16.813264846801758
    10. 'rang' → logprob: -17.063264846801758

Token 48: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005032312474213541
    2. '(' → logprob: -7.625503063201904
    3. ' (' → logprob: -11.875503540039062
    4. 'n' → logprob: -12.000503540039062
    5. ' n' → logprob: -13.125503540039062
    6. '(len' → logprob: -17.000503540039062
    7. '(range' → logprob: -17.500503540039062
    8. '	n' → logprob: -18.750503540039062
    9. ' range' → logprob: -18.750503540039062
    10. '(
' → logprob: -18.750503540039062

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007081442163325846
    2. ' ):' → logprob: -7.625708103179932
    3. '):
' → logprob: -8.62570858001709
    4. ':' → logprob: -10.62570858001709
    5. ')' → logprob: -11.37570858001709
    6. '   ' → logprob: -14.00070858001709
    7. '():' → logprob: -14.00070858001709
    8. '):
' → logprob: -14.12570858001709
    9. '       ' → logprob: -14.87570858001709
    10. '**' → logprob: -14.87570858001709

Token 50: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1726992130279541
    2. '<|end|>' → logprob: -2.797699213027954
    3. '       ' → logprob: -3.422699213027954
    4. '           ' → logprob: -3.672699213027954
    5. ' if' → logprob: -4.547698974609375
    6. ':
' → logprob: -4.547698974609375
    7. '<|end|>' → logprob: -4.547698974609375
    8. ' ' → logprob: -6.297698974609375
    9. ' :' → logprob: -6.922698974609375
    10. '```' → logprob: -6.922698974609375

Token 51: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12739722430706024
    2. ' if' → logprob: -2.127397298812866
    3. '           ' → logprob: -8.377397537231445
    4. '       ' → logprob: -8.627397537231445
    5. '```' → logprob: -10.252397537231445
    6. '   ' → logprob: -11.877397537231445
    7. '<|end|>' → logprob: -11.877397537231445
    8. ' ' → logprob: -13.127397537231445
    9. '
' → logprob: -13.377397537231445
    10. 'If' → logprob: -13.502397537231445

Token 52: ' V' (ID: 631)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.02354465238749981
    2. 'not' → logprob: -3.7735445499420166
    3. ' V' → logprob: -8.398544311523438
    4. 'V' → logprob: -10.023544311523438
    5. ' ' → logprob: -11.148544311523438
    6. '   ' → logprob: -12.273544311523438
    7. ' ' → logprob: -12.648544311523438
    8. ' no' → logprob: -13.398544311523438
    9. '(not' → logprob: -14.148544311523438
    10. 'n' → logprob: -14.211044311523438

Token 53: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00029852005536668
    2. '[' → logprob: -8.125298500061035
    3. '[I' → logprob: -13.625298500061035
    4. '[
' → logprob: -14.875298500061035
    5. ' [' → logprob: -15.125298500061035
    6. '```' → logprob: -16.50029945373535
    7. '[V' → logprob: -16.62529945373535
    8. '[a' → logprob: -16.87529945373535
    9. '[A' → logprob: -16.87529945373535
    10. '[e' → logprob: -17.12529945373535

Token 54: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.06198662146925926
    2. ']' → logprob: -3.8119866847991943
    3. ']==' → logprob: -3.8119866847991943
    4. '==' → logprob: -4.686986446380615
    5. ':' → logprob: -5.436986446380615
    6. '):' → logprob: -6.561986446380615
    7. ' ]' → logprob: -8.186986923217773
    8. ' or' → logprob: -8.561986923217773
    9. ']:
' → logprob: -8.561986923217773
    10. ' ==' → logprob: -9.936986923217773

Token 55: '               ' (ID: 506)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.15648575127124786
    2. '           ' → logprob: -2.2814857959747314
    3. '               ' → logprob: -3.4064857959747314
    4. 'continue' → logprob: -4.781485557556152
    5. ' continues' → logprob: -8.156485557556152
    6. ':' → logprob: -8.531485557556152
    7. ':
' → logprob: -8.781485557556152
    8. '	continue' → logprob: -8.906485557556152
    9. ' ' → logprob: -9.406485557556152
    10. '_continue' → logprob: -9.906485557556152

Token 56: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.019798854365944862
    2. 'continue' (adapté à ' continue') → logprob: -4.519798755645752
    3. '           ' → logprob: -4.769798755645752
    4. '               ' → logprob: -8.89479923248291
    5. '	continue' → logprob: -10.01979923248291
    6. '_continue' → logprob: -10.26979923248291
    7. ' continues' → logprob: -12.89479923248291
    8. '```' → logprob: -13.14479923248291
    9. ' continu' → logprob: -13.51979923248291
    10. '   ' → logprob: -13.64479923248291

Token 57: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.13899612426757812
    2. '           ' → logprob: -3.388996124267578
    3. '       ' → logprob: -3.513996124267578
    4. ' 
' → logprob: -4.138996124267578
    5. '            
' → logprob: -5.013996124267578
    6. '
' → logprob: -5.138996124267578
    7. '        
' → logprob: -5.263996124267578
    8. '  
' → logprob: -5.263996124267578
    9. '<|end|>' → logprob: -5.263996124267578
    10. '    
' → logprob: -5.638996124267578

Token 58: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8944634199142456
    2. ' 
' → logprob: -1.7694634199142456
    3. '\n' → logprob: -2.144463539123535
    4. '           ' → logprob: -2.519463539123535
    5. '<|end|>' → logprob: -2.894463539123535
    6. '            
' → logprob: -3.394463539123535
    7. '       ' → logprob: -3.394463539123535
    8. '  
' → logprob: -3.769463539123535
    9. '    
' → logprob: -3.894463539123535
    10. '        
' → logprob: -4.144463539123535

Token 59: ' cur' (ID: 4396)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.7213954925537109
    2. 'cycle' → logprob: -1.471395492553711
    3. '           ' → logprob: -2.221395492553711
    4. 'j' → logprob: -2.846395492553711
    5. ' stack' → logprob: -3.221395492553711
    6. 'stack' → logprob: -3.846395492553711
    7. ' j' → logprob: -4.471395492553711
    8. 'c' → logprob: -4.846395492553711
    9. 'start' → logprob: -4.971395492553711
    10. '```' → logprob: -5.596395492553711

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023512281477451324
    2. '=' → logprob: -3.773512363433838
    3. 'nt' → logprob: -9.89851188659668
    4. ',' → logprob: -10.14851188659668
    5. 'x' → logprob: -10.39851188659668
    6. ' ' → logprob: -10.64851188659668
    7. '_idx' → logprob: -10.77351188659668
    8. '_cycle' → logprob: -11.27351188659668
    9. '_index' → logprob: -11.52351188659668
    10. 't' → logprob: -11.77351188659668

Token 61: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014188424684107304
    2. ' i' → logprob: -4.264188289642334
    3. '[i' → logprob: -12.264188766479492
    4. '[' → logprob: -12.264188766479492
    5. '0' → logprob: -12.389188766479492
    6. ' [' → logprob: -12.639188766479492
    7. '[]' → logprob: -13.014188766479492
    8. '{i' → logprob: -13.139188766479492
    9. ' ' → logprob: -13.514188766479492
    10. 'A' → logprob: -14.014188766479492

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' cycle' (ID: 15839)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2674548029899597
    2. '[' → logprob: -1.8924548625946045
    3. '0' → logprob: -2.8924548625946045
    4. ' []' → logprob: -4.267454624176025
    5. ' ' → logprob: -5.267454624176025
    6. ' [' → logprob: -5.267454624176025
    7. '<|end|>' → logprob: -6.392454624176025
    8. '[]
' → logprob: -7.017454624176025
    9. '[
' → logprob: -7.267454624176025
    10. '[]}' → logprob: -8.642455101013184

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004618814680725336
    2. '=' → logprob: -5.5046186447143555
    3. ':' → logprob: -8.754618644714355
    4. 's' → logprob: -9.629618644714355
    5. '_len' → logprob: -9.629618644714355
    6. ' ' → logprob: -9.754618644714355
    7. '_length' → logprob: -9.879618644714355
    8. '_size' → logprob: -10.254618644714355
    9. '=[]' → logprob: -10.254618644714355
    10. '_' → logprob: -10.754618644714355

Token 66: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09061769396066666
    2. ' []' → logprob: -3.0906176567077637
    3. '[' → logprob: -3.2156176567077637
    4. ' [' → logprob: -6.965617656707764
    5. '[]}' → logprob: -10.090618133544922
    6. '[]
' → logprob: -11.215618133544922
    7. ' ' → logprob: -11.340618133544922
    8. '[]>' → logprob: -11.840618133544922
    9. '[int' → logprob: -13.340618133544922
    10. '[n' → logprob: -14.215618133544922

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11076243966817856
    2. ' while' → logprob: -3.110762357711792
    3. '<|end|>' → logprob: -3.735762357711792
    4. 'while' → logprob: -3.985762357711792
    5. '            
' → logprob: -5.610762596130371
    6. '[' → logprob: -6.110762596130371
    7. ':' → logprob: -6.485762596130371
    8. ')' → logprob: -6.485762596130371
    9. ' 
' → logprob: -6.860762596130371
    10. '               ' → logprob: -6.985762596130371

Token 68: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.15302351117134094
    2. ' while' → logprob: -2.0280234813690186
    3. '           ' → logprob: -4.778023719787598
    4. '	while' → logprob: -6.778023719787598
    5. '```' → logprob: -7.903023719787598
    6. 'While' → logprob: -8.778023719787598
    7. '<|end|>' → logprob: -9.028023719787598
    8. '       ' → logprob: -10.778023719787598
    9. '   ' → logprob: -10.903023719787598
    10. '<|end|>' → logprob: -11.528023719787598

Token 69: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03368593007326126
    2. ' not' → logprob: -3.4086859226226807
    3. '           ' → logprob: -10.783685684204102
    4. '   ' → logprob: -11.408685684204102
    5. '(not' → logprob: -12.658685684204102
    6. 'True' → logprob: -13.658685684204102
    7. '	not' → logprob: -13.658685684204102
    8. 'V' → logprob: -14.783685684204102
    9. '               ' → logprob: -14.783685684204102
    10. 'cur' → logprob: -14.783685684204102

Token 70: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.2519337236881256
    2. ' V' → logprob: -1.5019336938858032
    3. '	V' → logprob: -13.501934051513672
    4. ')V' → logprob: -13.626934051513672
    5. ' ' → logprob: -14.751934051513672
    6. '   ' → logprob: -14.876934051513672
    7. '(V' → logprob: -15.001934051513672
    8. ')' → logprob: -15.251934051513672
    9. ' ' → logprob: -16.001934051513672
    10. '[V' → logprob: -16.251934051513672

Token 71: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.6047699318733066e-05
    2. '[' → logprob: -11.500016212463379
    3. '[V' → logprob: -12.125016212463379
    4. 'cur' → logprob: -16.250015258789062
    5. '[C' → logprob: -16.250015258789062
    6. '[i' → logprob: -16.250015258789062
    7. '[current' → logprob: -16.750015258789062
    8. '(cur' → logprob: -18.125015258789062
    9. '[curr' → logprob: -18.250015258789062
    10. ' [' → logprob: -19.000015258789062

Token 72: ']:
' (ID: 22152)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.16848209500312805
    2. ']:' → logprob: -1.9184820652008057
    3. ']' → logprob: -5.168482303619385
    4. ']:
' → logprob: -6.043482303619385
    5. ']:

' → logprob: -9.793481826782227
    6. ']:
' → logprob: -10.168481826782227
    7. '[' → logprob: -10.793481826782227
    8. ' ]' → logprob: -11.293481826782227
    9. '(cur' → logprob: -11.293481826782227
    10. 'cur' → logprob: -12.043481826782227

Token 73: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13034988939762115
    2. '<|end|>' → logprob: -2.50534987449646
    3. '           ' → logprob: -4.505350112915039
    4. ')' → logprob: -5.005350112915039
    5. '):
' → logprob: -5.380350112915039
    6. ':' → logprob: -5.755350112915039
    7. ' 
' → logprob: -5.880350112915039
    8. ' ' → logprob: -6.255350112915039
    9. ':
' → logprob: -6.380350112915039
    10. '                
' → logprob: -6.630350112915039

Token 74: ' V' (ID: 631)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.7200908660888672
    2. ' V' → logprob: -0.9700908660888672
    3. 'cycle' → logprob: -3.220090866088867
    4. ' C' → logprob: -3.720090866088867
    5. '<|end|>' → logprob: -3.970090866088867
    6. 'V' (adapté à ' V') → logprob: -4.095090866088867
    7. '               ' → logprob: -4.220090866088867
    8. '                   ' → logprob: -5.470090866088867
    9. '                ' → logprob: -5.845090866088867
    10. 'C' → logprob: -5.970090866088867

Token 75: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.375004768371582
    3. '[curr' → logprob: -16.375003814697266
    4. '```' → logprob: -17.625003814697266
    5. '[c' → logprob: -18.500003814697266
    6. ' [' → logprob: -18.625003814697266
    7. '[current' → logprob: -18.625003814697266
    8. '[i' → logprob: -19.250003814697266
    9. '[col' → logprob: -20.125003814697266
    10. 'cur' → logprob: -20.125003814697266

Token 76: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07921197265386581
    2. '[cur' → logprob: -2.579211950302124
    3. ']=' → logprob: -8.079212188720703
    4. ' ]' → logprob: -11.954212188720703
    5. '(cur' → logprob: -12.829212188720703
    6. '[' → logprob: -13.829212188720703
    7. '=' → logprob: -13.954212188720703
    8. 'cur' → logprob: -14.829212188720703
    9. '`]' → logprob: -15.704212188720703
    10. ']==' → logprob: -16.204212188720703

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49529001116752625
    2. '=' → logprob: -0.9952900409698486
    3. ']' → logprob: -3.8702900409698486
    4. ']=' → logprob: -9.99528980255127
    5. '=True' → logprob: -10.12028980255127
    6. '[' → logprob: -10.24528980255127
    7. ')' → logprob: -11.62028980255127
    8. ' ]' → logprob: -12.49528980255127
    9. ' ' → logprob: -13.37028980255127
    10. '<|end|>' → logprob: -14.49528980255127

Token 78: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20141451060771942
    2. ' True' → logprob: -1.7014144659042358
    3. '(True' → logprob: -13.826414108276367
    4. ' ' → logprob: -16.326414108276367
    5. '=True' → logprob: -16.326414108276367
    6. '1' → logprob: -16.701414108276367
    7. '   ' → logprob: -19.201414108276367
    8. '.True' → logprob: -19.576414108276367
    9. 'true' → logprob: -20.826414108276367
    10. '  ' → logprob: -20.951414108276367

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31540676951408386
    2. '<|end|>' → logprob: -1.5654067993164062
    3. '               ' → logprob: -3.1904067993164062
    4. '                ' → logprob: -5.815406799316406
    5. '<|end|>' → logprob: -5.815406799316406
    6. ' cycle' → logprob: -5.940406799316406
    7. ' ' → logprob: -6.440406799316406
    8. '                   ' → logprob: -6.815406799316406
    9. ' 
' → logprob: -6.815406799316406
    10. 'cycle' → logprob: -6.940406799316406

Token 80: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1257609874010086
    2. '<|end|>' → logprob: -2.875761032104492
    3. '                ' → logprob: -3.375761032104492
    4. ' 
' → logprob: -4.750761032104492
    5. ' ' → logprob: -5.250761032104492
    6. '                
' → logprob: -5.375761032104492
    7. ' cycle' → logprob: -6.125761032104492
    8. ')' → logprob: -6.375761032104492
    9. '                   ' → logprob: -6.625761032104492
    10. '           ' → logprob: -7.125761032104492

Token 81: ' cycle' (ID: 15839)
  Prédit: ' cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.6932756900787354
    2. 'cycle' (adapté à ' cycle') → logprob: -0.6932756900787354
    3. '               ' → logprob: -10.193275451660156
    4. '```' → logprob: -10.693275451660156
    5. '_cycle' → logprob: -11.193275451660156
    6. ' ciclo' → logprob: -11.318275451660156
    7. '                   ' → logprob: -11.818275451660156
    8. '           ' → logprob: -12.318275451660156
    9. '<|end|>' → logprob: -12.318275451660156
    10. ' ' → logprob: -12.443275451660156

Token 82: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011056780815124512
    2. '.' → logprob: -4.511056900024414
    3. '.app' → logprob: -12.511056900024414
    4. '.ap' → logprob: -13.011056900024414
    5. '.Append' → logprob: -14.011056900024414
    6. '.extend' → logprob: -14.261056900024414
    7. 'append' → logprob: -14.511056900024414
    8. ' .' → logprob: -14.511056900024414
    9. '.add' → logprob: -15.761056900024414
    10. '.push' → logprob: -16.136056900024414

Token 83: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.11171459406614304
    2. '(A' → logprob: -2.3617146015167236
    3. '(' → logprob: -4.4867143630981445
    4. 'cur' → logprob: -8.736714363098145
    5. '(B' → logprob: -12.236714363098145
    6. '(i' → logprob: -12.236714363098145
    7. 'A' → logprob: -13.111714363098145
    8. '(c' → logprob: -13.236714363098145
    9. '(curr' → logprob: -13.361714363098145
    10. '(C' → logprob: -13.361714363098145

Token 84: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009950157254934311
    2. '               ' → logprob: -5.259950160980225
    3. ')
' → logprob: -5.384950160980225
    4. ')
' → logprob: -9.884949684143066
    5. '           ' → logprob: -10.384949684143066
    6. ' )' → logprob: -11.259949684143066
    7. ')

' → logprob: -12.009949684143066
    8. '                   ' → logprob: -12.884949684143066
    9. ')`' → logprob: -12.884949684143066
    10. '),' → logprob: -13.259949684143066

Token 85: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004018091131001711
    2. ' A' → logprob: -6.879018306732178
    3. '                
' → logprob: -7.629018306732178
    4. 'A' → logprob: -7.879018306732178
    5. '<|end|>' → logprob: -7.879018306732178
    6. '           ' → logprob: -8.00401782989502
    7. '
' → logprob: -8.00401782989502
    8. '```' → logprob: -8.75401782989502
    9. ',' → logprob: -8.87901782989502
    10. ')
' → logprob: -9.25401782989502

Token 86: ' cur' (ID: 4396)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.43097296357154846
    2. 'T' → logprob: -1.305972933769226
    3. 'cur' (adapté à ' cur') → logprob: -2.8059730529785156
    4. ' A' → logprob: -4.680973052978516
    5. ' T' → logprob: -4.930973052978516
    6. ' cur' → logprob: -6.305973052978516
    7. '               ' → logprob: -8.805973052978516
    8. 'B' → logprob: -9.430973052978516
    9. '                   ' → logprob: -10.305973052978516
    10. 'C' → logprob: -10.430973052978516

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488566681742668
    2. '=' → logprob: -2.9298856258392334
    3. ')' → logprob: -13.179885864257812
    4. ' ' → logprob: -15.054885864257812
    5. 's' → logprob: -15.179885864257812
    6. '=A' → logprob: -15.429885864257812
    7. ']' → logprob: -15.554885864257812
    8. ',' → logprob: -15.929885864257812
    9. '<|end|>' → logprob: -16.054885864257812
    10. ' +=' → logprob: -16.679885864257812

Token 88: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.38687393069267273
    2. ' T' → logprob: -1.1368739604949951
    3. ' ' → logprob: -13.261874198913574
    4. '<|end|>' → logprob: -14.886874198913574
    5. ')' → logprob: -15.136874198913574
    6. ' ' → logprob: -16.386873245239258
    7. '   ' → logprob: -16.511873245239258
    8. '	T' → logprob: -16.636873245239258
    9. '=T' → logprob: -16.636873245239258
    10. '<|end|>' → logprob: -16.636873245239258

Token 89: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.006177752278745174
    2. '(A' → logprob: -5.38117790222168
    3. 'A' → logprob: -7.00617790222168
    4. '[' → logprob: -7.50617790222168
    5. '[
' → logprob: -9.63117790222168
    6. '[(' → logprob: -11.50617790222168
    7. '```' → logprob: -12.13117790222168
    8. '[a' → logprob: -12.63117790222168
    9. '(' → logprob: -12.88117790222168
    10. ' A' → logprob: -13.00617790222168

Token 90: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0004746406921185553
    2. '[' → logprob: -7.750474452972412
    3. '[c' → logprob: -10.75047492980957
    4. '[
' → logprob: -11.87547492980957
    5. 'cur' → logprob: -12.00047492980957
    6. ']' → logprob: -12.50047492980957
    7. '[curr' → logprob: -13.00047492980957
    8. ' [' → logprob: -14.00047492980957
    9. '[i' → logprob: -14.12547492980957
    10. '```' → logprob: -14.87547492980957

Token 91: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0067639220505952835
    2. ']' → logprob: -5.131763935089111
    3. '[i' → logprob: -8.756763458251953
    4. ']]]' → logprob: -8.756763458251953
    5. ' ]]' → logprob: -9.256763458251953
    6. ']])' → logprob: -9.381763458251953
    7. ']]
' → logprob: -9.631763458251953
    8. ']]

' → logprob: -9.631763458251953
    9. ')]' → logprob: -10.256763458251953
    10. '])' → logprob: -10.256763458251953

Token 92: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1336357444524765
    2. ')
' → logprob: -2.5086357593536377
    3. '           ' → logprob: -3.6336357593536377
    4. '       ' → logprob: -4.258635520935059
    5. '   ' → logprob: -7.258635520935059
    6. ')

' → logprob: -7.258635520935059
    7. 'return' → logprob: -7.633635520935059
    8. '```' → logprob: -8.133635520935059
    9. ' return' → logprob: -8.508635520935059
    10. '
' → logprob: -8.633635520935059

Token 93: ' C' (ID: 363)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011468051001429558
    2. ')' → logprob: -5.636467933654785
    3. '           ' → logprob: -5.636467933654785
    4. '   ' → logprob: -5.886467933654785
    5. '        ' → logprob: -8.011467933654785
    6. ')
' → logprob: -8.511467933654785
    7. '```' → logprob: -8.636467933654785
    8. ' if' → logprob: -8.761467933654785
    9. '<|end|>' → logprob: -9.136467933654785
    10. 'if' → logprob: -9.261467933654785

Token 94: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12700600922107697
    2. '.' → logprob: -2.1270060539245605
    3. '.app' → logprob: -10.252005577087402
    4. '.ap' → logprob: -10.877005577087402
    5. '.add' → logprob: -11.752005577087402
    6. '.extend' → logprob: -12.377005577087402
    7. ' .' → logprob: -12.502005577087402
    8. '.Append' → logprob: -12.627005577087402
    9. '.a' → logprob: -13.502005577087402
    10. 'append' → logprob: -13.877005577087402

Token 95: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0003360582049936056
    2. '(' → logprob: -8.000335693359375
    3. '((' → logprob: -15.500335693359375
    4. ' (' → logprob: -16.000335693359375
    5. '(
' → logprob: -16.500335693359375
    6. '(tuple' → logprob: -16.750335693359375
    7. '(len' → logprob: -17.500335693359375
    8. '(s' → logprob: -17.750335693359375
    9. '(C' → logprob: -17.875335693359375
    10. '(line' → logprob: -18.125335693359375

Token 96: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -4.513339445111342e-05
    2. 'cle' → logprob: -11.375044822692871
    3. 'yle' → logprob: -11.500044822692871
    4. 'le' → logprob: -11.750044822692871
    5. '[' → logprob: -12.375044822692871
    6. '   ' → logprob: -12.625044822692871
    7. 'cycle' → logprob: -13.000044822692871
    8. 'y' → logprob: -13.250044822692871
    9. 'ycles' → logprob: -13.875044822692871
    10. 'YCLE' → logprob: -14.625044822692871

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006308287265710533
    2. ')
' → logprob: -7.375630855560303
    3. ')
' → logprob: -13.000630378723145
    4. ')return' → logprob: -14.250630378723145
    5. '       ' → logprob: -14.500630378723145
    6. ' )' → logprob: -15.000630378723145
    7. ')`' → logprob: -15.250630378723145
    8. ')

' → logprob: -15.875630378723145
    9. '))' → logprob: -17.50063133239746
    10. '`)' → logprob: -17.75063133239746

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07512121647596359
    2. '   ' → logprob: -2.8251211643218994
    3. '<|end|>' → logprob: -4.5751214027404785
    4. '
' → logprob: -6.3251214027404785
    5. ')' → logprob: -8.32512092590332
    6. '    
' → logprob: -8.70012092590332
    7. ' return' → logprob: -9.07512092590332
    8. '        
' → logprob: -9.07512092590332
    9. 'return' → logprob: -9.45012092590332
    10. '           ' → logprob: -9.57512092590332

Token 99: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15169821679592133
    2. 'return' (adapté à ' return') → logprob: -2.776698112487793
    3. '   ' → logprob: -3.026698112487793
    4. ' return' → logprob: -3.526698112487793
    5. '
' → logprob: -8.276698112487793
    6. ' ' → logprob: -9.026698112487793
    7. '	return' → logprob: -10.026698112487793
    8. '<|end|>' → logprob: -10.026698112487793
    9. '        
' → logprob: -10.151698112487793
    10. '           ' → logprob: -10.526698112487793

Token 100: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.014166445471346378
    2. ' C' → logprob: -4.264166355133057
    3. '   ' → logprob: -13.889166831970215
    4. ' ' → logprob: -13.889166831970215
    5. '	C' → logprob: -14.889166831970215
    6. '(C' → logprob: -15.139166831970215
    7. '[C' → logprob: -15.389166831970215
    8. '  ' → logprob: -16.3891658782959
    9. ' ' → logprob: -16.5141658782959
    10. '"C' → logprob: -18.1391658782959

Token 101: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' ans' (ID: 3345)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003775264194700867
    2. '=' → logprob: -8.125377655029297
    3. ' +=' → logprob: -9.625377655029297
    4. '_' → logprob: -12.750377655029297
    5. ' ' → logprob: -12.875377655029297
    6. '[' → logprob: -13.000377655029297
    7. ',' → logprob: -13.500377655029297
    8. '    ' → logprob: -13.500377655029297
    9. '   ' → logprob: -13.500377655029297
    10. ' |=' → logprob: -14.500377655029297

Token 105: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43351006507873535
    2. ' ' → logprob: -1.0585100650787354
    3. ' []' → logprob: -5.808509826660156
    4. '[]' → logprob: -6.558509826660156
    5. ' float' → logprob: -8.933509826660156
    6. 'float' → logprob: -9.933509826660156
    7. ' sum' → logprob: -9.933509826660156
    8. ' []
' → logprob: -10.058509826660156
    9. 'sum' → logprob: -10.308509826660156
    10. ' [' → logprob: -11.433509826660156

Token 106: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028075164183974266
    2. '[]' → logprob: -3.7780752182006836
    3. 'float' → logprob: -5.653075218200684
    4. 'sum' → logprob: -7.153075218200684
    5. '[' → logprob: -8.278075218200684
    6. 'max' → logprob: -9.778075218200684
    7. '1' → logprob: -10.153075218200684
    8. ' ' → logprob: -10.153075218200684
    9. 'len' → logprob: -10.278075218200684
    10. '[]
' → logprob: -10.778075218200684

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4795951545238495
    2. ' for' → logprob: -0.9795951843261719
    3. '
' → logprob: -5.854595184326172
    4. '   ' → logprob: -5.979595184326172
    5. ' 
' → logprob: -10.729595184326172
    6. ' ' → logprob: -10.729595184326172
    7. '	for' → logprob: -10.854595184326172
    8. 'C' → logprob: -12.479595184326172
    9. 'n' → logprob: -12.479595184326172
    10. 'B' → logprob: -12.854595184326172

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7339357733726501
    2. 'um' → logprob: -0.9839357733726501
    3. '=' → logprob: -2.483935832977295
    4. 'ize' → logprob: -3.358935832977295
    5. ' ' → logprob: -4.483935832977295
    6. '   ' → logprob: -4.983935832977295
    7. 'for' → logprob: -5.608935832977295
    8. ' for' → logprob: -6.983935832977295
    9. '  ' → logprob: -7.483935832977295
    10. 't' → logprob: -7.483935832977295

Token 111: ' min' (ID: 1349)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3300875723361969
    2. ' sum' → logprob: -1.3300875425338745
    3. '0' → logprob: -4.205087661743164
    4. ' ' → logprob: -6.830087661743164
    5. 'min' → logprob: -8.330087661743164
    6. ' [' → logprob: -9.080087661743164
    7. ' min' → logprob: -9.455087661743164
    8. ' A' → logprob: -9.705087661743164
    9. '[' → logprob: -9.955087661743164
    10. 'A' → logprob: -10.330087661743164

Token 112: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.0066804406233131886
    2. '(' → logprob: -5.381680488586426
    3. '(B' → logprob: -6.756680488586426
    4. '(s' → logprob: -8.006680488586426
    5. '(
' → logprob: -8.881680488586426
    6. '(a' → logprob: -9.131680488586426
    7. 'A' → logprob: -9.256680488586426
    8. '(min' → logprob: -9.381680488586426
    9. '([' → logprob: -10.631680488586426
    10. '(C' → logprob: -10.756680488586426

Token 113: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020926843862980604
    2. ')
' → logprob: -6.2520928382873535
    3. ' )' → logprob: -9.127092361450195
    4. '   ' → logprob: -10.752092361450195
    5. ' ' → logprob: -11.252092361450195
    6. ')

' → logprob: -11.752092361450195
    7. '[' → logprob: -12.502092361450195
    8. '  ' → logprob: -13.877092361450195
    9. '))' → logprob: -14.002092361450195
    10. ' )
' → logprob: -14.002092361450195

Token 114: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2053779810667038
    2. '   ' → logprob: -2.3303780555725098
    3. '<|end|>' → logprob: -3.0803780555725098
    4. ' 
' → logprob: -3.7053780555725098
    5. '    
' → logprob: -4.70537805557251
    6. '  
' → logprob: -6.70537805557251
    7. '     
' → logprob: -7.20537805557251
    8. ')' → logprob: -7.20537805557251
    9. ' ' → logprob: -7.33037805557251
    10. ' s' → logprob: -7.33037805557251

Token 115: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10057250410318375
    2. ' for' → logprob: -2.3505725860595703
    3. '   ' → logprob: -8.22557258605957
    4. 'm' → logprob: -9.72557258605957
    5. '
' → logprob: -12.10057258605957
    6. ' m' → logprob: -12.72557258605957
    7. 'min' → logprob: -12.72557258605957
    8. 's' → logprob: -12.72557258605957
    9. 'cycles' → logprob: -12.85057258605957
    10. 'M' → logprob: -13.10057258605957

Token 116: ' cycle' (ID: 15839)
  Prédit: ' cycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.29978156089782715
    2. ' c' → logprob: -1.9247815608978271
    3. ' i' → logprob: -2.299781560897827
    4. 'i' → logprob: -5.299781799316406
    5. 'cycle' → logprob: -5.424781799316406
    6. 'c' → logprob: -6.049781799316406
    7. ' x' → logprob: -7.924781799316406
    8. ' ' → logprob: -8.549781799316406
    9. ' cycles' → logprob: -9.299781799316406
    10. '   ' → logprob: -9.674781799316406

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009895974770188332
    2. 'in' → logprob: -4.6348958015441895
    3. ' ' → logprob: -9.634896278381348
    4. 's' → logprob: -10.009896278381348
    5. '_' → logprob: -11.134896278381348
    6. '   ' → logprob: -12.009896278381348
    7. '_in' → logprob: -12.759896278381348
    8. '  ' → logprob: -13.134896278381348
    9. '	in' → logprob: -13.509896278381348
    10. '    ' → logprob: -14.384896278381348

Token 118: ' cycles' (ID: 41478)
  Prédit: ' cycles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycles' → logprob: -0.07395495474338531
    2. 'cycles' → logprob: -2.6989550590515137
    3. ' C' → logprob: -5.698955059051514
    4. 'C' → logprob: -8.198954582214355
    5. ' ' → logprob: -9.323954582214355
    6. ' solve' → logprob: -9.823954582214355
    7. ' (' → logprob: -10.073954582214355
    8. ' c' → logprob: -10.323954582214355
    9. '   ' → logprob: -10.448954582214355
    10. 'c' → logprob: -11.073954582214355

Token 119: '():
' (ID: 8595)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003998853731900454
    2. ':
' → logprob: -5.628998756408691
    3. '   ' → logprob: -9.003998756408691
    4. '       ' → logprob: -9.128998756408691
    5. ' :' → logprob: -9.378998756408691
    6. '():' → logprob: -10.003998756408691
    7. '):' → logprob: -11.253998756408691
    8. '():
' → logprob: -11.378998756408691
    9. '):
' → logprob: -13.003998756408691
    10. '<|end|>' → logprob: -13.503998756408691

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021616832818835974
    2. '<|end|>' → logprob: -7.377161502838135
    3. ':' → logprob: -7.877161502838135
    4. '   ' → logprob: -8.252161979675293
    5. '    ' → logprob: -8.377161979675293
    6. '        
' → logprob: -8.502161979675293
    7. '        ' → logprob: -9.002161979675293
    8. ',' → logprob: -9.502161979675293
    9. '<|end|>' → logprob: -9.877161979675293
    10. '      ' → logprob: -10.502161979675293

Token 121: ' S' (ID: 336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1433342546224594
    2. ' if' → logprob: -2.893334150314331
    3. 'm' → logprob: -3.268334150314331
    4. ' m' → logprob: -3.893334150314331
    5. 'if' → logprob: -5.01833438873291
    6. 'x' → logprob: -5.76833438873291
    7. ' x' → logprob: -6.01833438873291
    8. 'sum' → logprob: -6.01833438873291
    9. ' sum' → logprob: -6.64333438873291
    10. ' cycle' → logprob: -7.14333438873291

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03325003758072853
    2. '=' → logprob: -3.783250093460083
    3. 'um' → logprob: -4.658249855041504
    4. '   ' → logprob: -8.658249855041504
    5. '_' → logprob: -9.033249855041504
    6. ' +=' → logprob: -9.408249855041504
    7. '=sum' → logprob: -10.533249855041504
    8. ' ' → logprob: -10.658249855041504
    9. '+=' → logprob: -11.533249855041504
    10. '       ' → logprob: -12.158249855041504

Token 123: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6653152704238892
    2. '0' → logprob: -1.0403152704238892
    3. ' sum' → logprob: -2.0403151512145996
    4. ' ' → logprob: -6.0403151512146
    5. '   ' → logprob: -9.790315628051758
    6. '[' → logprob: -10.290315628051758
    7. ' [' → logprob: -10.540315628051758
    8. 'min' → logprob: -10.540315628051758
    9. ' min' → logprob: -12.040315628051758
    10. '(sum' → logprob: -12.290315628051758

Token 124: '([' (ID: 5194)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.9892205595970154
    2. '(c' → logprob: -1.1142206192016602
    3. '([' → logprob: -1.6142206192016602
    4. '(' → logprob: -2.36422061920166
    5. '(x' → logprob: -5.73922061920166
    6. '(
' → logprob: -6.48922061920166
    7. '((' → logprob: -7.23922061920166
    8. '(i' → logprob: -7.73922061920166
    9. '(a' → logprob: -7.98922061920166
    10. '(C' → logprob: -8.48922061920166

Token 125: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.029785210266709328
    2. ' A' → logprob: -3.52978515625
    3. '   ' → logprob: -10.40478515625
    4. ' ' → logprob: -13.15478515625
    5. '	A' → logprob: -13.65478515625
    6. '           ' → logprob: -14.65478515625
    7. '       ' → logprob: -15.15478515625
    8. '  ' → logprob: -15.40478515625
    9. '(A' → logprob: -15.52978515625
    10. '    ' → logprob: -16.40478515625

Token 126: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13648389279842377
    2. '[c' → logprob: -2.511483907699585
    3. '[cur' → logprob: -3.761483907699585
    4. '[i' → logprob: -3.886483907699585
    5. '[x' → logprob: -6.761483669281006
    6. '[idx' → logprob: -7.261483669281006
    7. '[v' → logprob: -8.761484146118164
    8. '[pos' → logprob: -9.136484146118164
    9. '[j' → logprob: -9.261484146118164
    10. '[item' → logprob: -9.386484146118164

Token 127: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001931696751853451
    2. ' ]' → logprob: -9.37519359588623
    3. '])' → logprob: -9.75019359588623
    4. ')' → logprob: -10.62519359588623
    5. ' for' → logprob: -11.87519359588623
    6. 'for' → logprob: -11.87519359588623
    7. ']])' → logprob: -12.00019359588623
    8. ']
' → logprob: -13.00019359588623
    9. '       ' → logprob: -14.75019359588623
    10. '   ' → logprob: -14.75019359588623

Token 128: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14788246154785156
    2. 'for' → logprob: -2.1478824615478516
    3. '])' → logprob: -4.022882461547852
    4. '[i' → logprob: -6.522882461547852
    5. '       ' → logprob: -7.022882461547852
    6. '])
' → logprob: -9.022882461547852
    7. '[' → logprob: -9.522882461547852
    8. '   ' → logprob: -9.772882461547852
    9. ']' → logprob: -9.772882461547852
    10. '           ' → logprob: -10.397882461547852

Token 129: ' i' (ID: 575)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.2562493681907654
    2. 'cycle' → logprob: -1.5062494277954102
    3. 'i' → logprob: -5.88124942779541
    4. ' i' → logprob: -6.50624942779541
    5. ' ' → logprob: -11.00624942779541
    6. ' ciclo' → logprob: -13.00624942779541
    7. '  ' → logprob: -13.25624942779541
    8. '   ' → logprob: -13.25624942779541
    9. '_cycle' → logprob: -14.63124942779541
    10. '```' → logprob: -15.25624942779541

Token 130: ' in' (ID: 306)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.16088850796222687
    2. 'cycle' → logprob: -1.9108885526657104
    3. ' in' → logprob: -7.410888671875
    4. 'in' → logprob: -11.160888671875
    5. '   ' → logprob: -11.410888671875
    6. ' ' → logprob: -11.410888671875
    7. ' ciclo' → logprob: -12.285888671875
    8. '  ' → logprob: -12.410888671875
    9. '    ' → logprob: -12.410888671875
    10. '_cycle' → logprob: -12.910888671875

Token 131: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.10020937025547028
    2. ' cycle' → logprob: -2.3502094745635986
    3. ' ' → logprob: -13.72520923614502
    4. '   ' → logprob: -14.10020923614502
    5. '_cycle' → logprob: -15.97520923614502
    6. ' ciclo' → logprob: -16.350210189819336
    7. '  ' → logprob: -16.350210189819336
    8. '
' → logprob: -16.600210189819336
    9. '-cycle' → logprob: -16.725210189819336
    10. 'cycled' → logprob: -16.850210189819336

Token 132: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5871285796165466
    2. '])
' → logprob: -0.8371285796165466
    3. '       ' → logprob: -4.587128639221191
    4. ')
' → logprob: -7.837128639221191
    5. ')' → logprob: -8.712128639221191
    6. '])
' → logprob: -8.962128639221191
    7. ' ])' → logprob: -9.087128639221191
    8. ' ])
' → logprob: -9.212128639221191
    9. '])

' → logprob: -10.712128639221191
    10. '           ' → logprob: -11.962128639221191

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2763134241104126
    2. '
' → logprob: -1.6513134241104126
    3. '+' → logprob: -3.526313304901123
    4. '<|end|>' → logprob: -5.151313304901123
    5. '        ' → logprob: -5.776313304901123
    6. ')' → logprob: -6.026313304901123
    7. ' +' → logprob: -6.026313304901123
    8. '```' → logprob: -6.526313304901123
    9. ')
' → logprob: -6.776313304901123
    10. '        
' → logprob: -7.276313304901123

Token 134: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' (adapté à ' m') → logprob: -0.14876921474933624
    2. '       ' → logprob: -2.7737691402435303
    3. ' m' → logprob: -2.8987691402435303
    4. 'min' → logprob: -5.773769378662109
    5. 'L' → logprob: -6.023769378662109
    6. 'l' → logprob: -6.148769378662109
    7. 'ans' → logprob: -6.398769378662109
    8. '   ' → logprob: -6.398769378662109
    9. 'mn' → logprob: -6.773769378662109
    10. 'k' → logprob: -6.898769378662109

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5258941650390625
    2. '=' → logprob: -0.9008941650390625
    3. 'in' → logprob: -6.6508941650390625
    4. ' ' → logprob: -7.6508941650390625
    5. 'i' → logprob: -8.025894165039062
    6. '  ' → logprob: -8.525894165039062
    7. ',' → logprob: -9.775894165039062
    8. '   ' → logprob: -10.025894165039062
    9. '```' → logprob: -10.025894165039062
    10. 'a' → logprob: -10.150894165039062

Token 136: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.12694354355335236
    2. 'min' → logprob: -2.126943588256836
    3. '[min' → logprob: -12.126943588256836
    4. ' float' → logprob: -13.001943588256836
    5. '   ' → logprob: -13.126943588256836
    6. '(min' → logprob: -13.751943588256836
    7. ' s' → logprob: -14.001943588256836
    8. ' A' → logprob: -14.001943588256836
    9. 'A' → logprob: -14.251943588256836
    10. 'float' → logprob: -14.376943588256836

Token 137: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.030244918540120125
    2. '(A' → logprob: -3.530244827270508
    3. '(' → logprob: -7.780244827270508
    4. '[A' → logprob: -10.030244827270508
    5. '(
' → logprob: -11.030244827270508
    6. '(a' → logprob: -12.030244827270508
    7. '(c' → logprob: -12.905244827270508
    8. '([
' → logprob: -13.905244827270508
    9. '[' → logprob: -13.905244827270508
    10. '((' → logprob: -14.405244827270508

Token 138: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.14154179394245148
    2. '[A' → logprob: -2.1415417194366455
    3. ' A' → logprob: -4.391541957855225
    4. ' [' → logprob: -6.266541957855225
    5. '   ' → logprob: -9.016541481018066
    6. ' ' → logprob: -9.641541481018066
    7. '	A' → logprob: -11.391541481018066
    8. '(A' → logprob: -11.766541481018066
    9. '  ' → logprob: -11.766541481018066
    10. '[' → logprob: -12.141541481018066

Token 139: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.625001907348633
    3. ' [' → logprob: -16.000001907348633
    4. 'i' → logprob: -16.625001907348633
    5. '[c' → logprob: -17.500001907348633
    6. '(i' → logprob: -17.625001907348633
    7. '[
' → logprob: -17.875001907348633
    8. '```' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '[j' → logprob: -18.375001907348633

Token 140: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2757965922355652
    2. 'for' → logprob: -1.90079665184021
    3. ']' → logprob: -2.65079665184021
    4. ')' → logprob: -4.275796413421631
    5. '   ' → logprob: -6.400796413421631
    6. '       ' → logprob: -6.525796413421631
    7. ' ' → logprob: -6.900796413421631
    8. 'i' → logprob: -7.150796413421631
    9. '])' → logprob: -7.400796413421631
    10. '[i' → logprob: -8.150796890258789

Token 141: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4294334650039673
    2. 'for' → logprob: -1.0544334650039673
    3. ' cycle' → logprob: -8.554433822631836
    4. '   ' → logprob: -8.929433822631836
    5. 'cycle' → logprob: -9.054433822631836
    6. ' ' → logprob: -9.429433822631836
    7. '       ' → logprob: -9.804433822631836
    8. ']' → logprob: -10.554433822631836
    9. ')' → logprob: -10.679433822631836
    10. '        ' → logprob: -10.804433822631836

Token 142: ' i' (ID: 575)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.2854887843132019
    2. 'cycle' → logprob: -1.4104888439178467
    3. 'i' → logprob: -5.660488605499268
    4. ' i' → logprob: -7.160488605499268
    5. ' ' → logprob: -10.660489082336426
    6. '   ' → logprob: -10.785489082336426
    7. ' ciclo' → logprob: -11.660489082336426
    8. '  ' → logprob: -12.660489082336426
    9. '    ' → logprob: -13.035489082336426
    10. 'c' → logprob: -13.035489082336426

Token 143: ' in' (ID: 306)
  Prédit: ' cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cycle' → logprob: -0.25195854902267456
    2. 'cycle' → logprob: -1.5019586086273193
    3. ' in' → logprob: -10.626958847045898
    4. 'ycle' → logprob: -13.626958847045898
    5. 'in' → logprob: -13.751958847045898
    6. ' ciclo' → logprob: -13.876958847045898
    7. '_cycle' → logprob: -14.001958847045898
    8. ' ' → logprob: -14.126958847045898
    9. '   ' → logprob: -16.3769588470459
    10. '  ' → logprob: -16.5019588470459

Token 144: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.03804241120815277
    2. ' cycle' → logprob: -3.2880423069000244
    3. '_cycle' → logprob: -15.413042068481445
    4. '   ' → logprob: -15.538042068481445
    5. ' ' → logprob: -15.663042068481445
    6. 'ycle' → logprob: -16.288042068481445
    7. ' ciclo' → logprob: -16.663042068481445
    8. '[' → logprob: -16.788042068481445
    9. '-cycle' → logprob: -17.038042068481445
    10. 'cycler' → logprob: -17.288042068481445

Token 145: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3135703504085541
    2. '])
' → logprob: -1.3135703802108765
    3. '       ' → logprob: -8.563570022583008
    4. '])

' → logprob: -9.563570022583008
    5. ')' → logprob: -11.188570022583008
    6. ')
' → logprob: -11.313570022583008
    7. '])
' → logprob: -11.563570022583008
    8. ' ])' → logprob: -12.313570022583008
    9. ' ])
' → logprob: -13.063570022583008
    10. '           ' → logprob: -13.688570022583008

Token 146: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14751583337783813
    2. '       ' → logprob: -2.0225157737731934
    3. '<|end|>' → logprob: -6.272515773773193
    4. '        
' → logprob: -6.772515773773193
    5. '
' → logprob: -7.647515773773193
    6. ' 
' → logprob: -7.772515773773193
    7. '+' → logprob: -8.897516250610352
    8. '  
' → logprob: -9.022516250610352
    9. '        ' → logprob: -9.147516250610352
    10. ',
' → logprob: -9.397516250610352

Token 147: ' an' (ID: 448)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3618324995040894
    2. 'k' → logprob: -1.7368324995040894
    3. ' k' → logprob: -2.111832618713379
    4. 'l' → logprob: -2.236832618713379
    5. ' ans' → logprob: -2.361832618713379
    6. 'ans' → logprob: -2.861832618713379
    7. ' l' → logprob: -3.111832618713379
    8. 'L' → logprob: -3.861832618713379
    9. 'len' → logprob: -3.986832618713379
    10. 'c' → logprob: -4.236832618713379

Token 148: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004788122605532408
    2. 'swer' → logprob: -5.379787921905518
    3. '+=' → logprob: -9.754788398742676
    4. '=' → logprob: -9.754788398742676
    5. 'sw' → logprob: -11.004788398742676
    6. ' =' → logprob: -11.129788398742676
    7. ' +=' → logprob: -11.379788398742676
    8. 'sx' → logprob: -13.254788398742676
    9. 'с' → logprob: -14.004788398742676
    10. '```' → logprob: -14.129788398742676

Token 149: ' len' (ID: 4631)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.534031331539154
    2. 'min' → logprob: -1.6590313911437988
    3. 'S' → logprob: -2.034031391143799
    4. ' S' → logprob: -2.409031391143799
    5. '   ' → logprob: -7.284031391143799
    6. 'float' → logprob: -7.534031391143799
    7. ' s' → logprob: -7.784031391143799
    8. ' float' → logprob: -8.28403091430664
    9. 's' → logprob: -8.40903091430664
    10. ' ' → logprob: -8.53403091430664

Token 150: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.000006675720215
    4. '(
' → logprob: -17.00000762939453
    5. '(s' → logprob: -17.12500762939453
    6. '(C' → logprob: -17.37500762939453
    7. '(circle' → logprob: -17.37500762939453
    8. ')' → logprob: -17.62500762939453
    9. '	c' → logprob: -18.25000762939453
    10. 's' → logprob: -18.25000762939453

Token 151: 'ycle' (ID: 13317)
  Prédit: 'ycle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ycle' → logprob: -0.0035622965078800917
    2. '(c' → logprob: -5.7535624504089355
    3. 'y' → logprob: -9.128561973571777
    4. '(' → logprob: -9.378561973571777
    5. 'cycle' → logprob: -9.753561973571777
    6. 'yle' → logprob: -10.378561973571777
    7. '(y' → logprob: -10.753561973571777
    8. 'ycl' → logprob: -11.128561973571777
    9. '   ' → logprob: -11.628561973571777
    10. 'YCLE' → logprob: -11.753561973571777

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0330163910984993
    2. ' -' → logprob: -3.9080164432525635
    3. ' )' → logprob: -5.158016204833984
    4. '       ' → logprob: -6.033016204833984
    5. '-' → logprob: -6.783016204833984
    6. ')
' → logprob: -6.908016204833984
    7. ')*' → logprob: -7.283016204833984
    8. ' *' → logprob: -8.158016204833984
    9. '   ' → logprob: -8.283016204833984
    10. '        ' → logprob: -8.658016204833984

Token 153: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5507725477218628
    2. '       ' → logprob: -1.0507725477218628
    3. '<|end|>' → logprob: -3.0507726669311523
    4. '+' → logprob: -4.175772666931152
    5. ' 
' → logprob: -6.300772666931152
    6. ' +' → logprob: -6.425772666931152
    7. ' if' → logprob: -6.550772666931152
    8. ')' → logprob: -6.800772666931152
    9. ')
' → logprob: -7.300772666931152
    10. ' s' → logprob: -7.300772666931152

Token 154: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23436731100082397
    2. '       ' → logprob: -2.2343673706054688
    3. ' if' → logprob: -2.9843673706054688
    4. '+' → logprob: -4.234367370605469
    5. ' 
' → logprob: -4.484367370605469
    6. ' +' → logprob: -5.234367370605469
    7. '        
' → logprob: -5.859367370605469
    8. '+
' → logprob: -6.234367370605469
    9. ' s' → logprob: -6.359367370605469
    10. ')
' → logprob: -6.359367370605469

Token 155: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.023386869579553604
    2. '+=' → logprob: -3.7733869552612305
    3. '+' → logprob: -9.52338695526123
    4. ' =' → logprob: -11.52338695526123
    5. ']+=' → logprob: -11.52338695526123
    6. ' -=' → logprob: -11.77338695526123
    7. '```' → logprob: -11.89838695526123
    8. '<|end|>' → logprob: -11.89838695526123
    9. ')' → logprob: -12.02338695526123
    10. '+='' → logprob: -12.77338695526123

Token 156: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.28971317410469055
    2. ' min' → logprob: -1.4147131443023682
    3. 'S' → logprob: -4.914713382720947
    4. ' S' → logprob: -7.289713382720947
    5. '   ' → logprob: -8.164712905883789
    6. '           ' → logprob: -10.164712905883789
    7. '       ' → logprob: -10.289712905883789
    8. '(min' → logprob: -10.289712905883789
    9. ' ' → logprob: -10.789712905883789
    10. 's' → logprob: -11.164712905883789

Token 157: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.21213552355766296
    2. '(' → logprob: -1.9621355533599854
    3. '(
' → logprob: -3.4621355533599854
    4. '(an' → logprob: -4.337135314941406
    5. '(s' → logprob: -5.712135314941406
    6. '((' → logprob: -6.087135314941406
    7. '([' → logprob: -8.087135314941406
    8. '([
' → logprob: -9.587135314941406
    9. '(

' → logprob: -9.837135314941406
    10. '(ans' → logprob: -10.337135314941406

Token 158: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7851377725601196
    2. ' -' → logprob: -1.0351377725601196
    3. '-' → logprob: -1.7851377725601196
    4. ',
' → logprob: -4.53513765335083
    5. ' ,' → logprob: -4.91013765335083
    6. '-an' → logprob: -6.91013765335083
    7. '-m' → logprob: -7.66013765335083
    8. '   ' → logprob: -8.910138130187988
    9. '-,' → logprob: -9.035138130187988
    10. ',m' → logprob: -9.285138130187988

Token 159: ' (' (ID: 350)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6381838321685791
    2. 'm' → logprob: -1.513183832168579
    3. '(min' → logprob: -2.263183832168579
    4. 'min' → logprob: -2.513183832168579
    5. '(s' → logprob: -3.513183832168579
    6. 's' → logprob: -3.888183832168579
    7. ' (' → logprob: -4.76318359375
    8. ' m' → logprob: -5.51318359375
    9. ' min' → logprob: -6.01318359375
    10. '(' → logprob: -8.26318359375

Token 160: 'an' (ID: 270)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0174705982208252
    2. '(an' → logprob: -1.0174705982208252
    3. 'm' → logprob: -1.8924705982208252
    4. 'an' → logprob: -2.142470598220825
    5. '(min' → logprob: -5.267470359802246
    6. 'min' → logprob: -5.767470359802246
    7. '(' → logprob: -8.017470359802246
    8. ' (' → logprob: -9.017470359802246
    9. '(len' → logprob: -10.642470359802246
    10. ' an' → logprob: -10.642470359802246

Token 161: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08528530597686768
    2. '+' → logprob: -2.585285186767578
    3. ' -' → logprob: -5.210285186767578
    4. ' +' → logprob: -7.210285186767578
    5. '```' → logprob: -9.335285186767578
    6. '   ' → logprob: -10.835285186767578
    7. ' ' → logprob: -10.960285186767578
    8. ')' → logprob: -11.335285186767578
    9. '1' → logprob: -11.585285186767578
    10. '2' → logprob: -11.585285186767578

Token 162: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.368984107510187e-05
    2. '
' → logprob: -11.500033378601074
    3. '```' → logprob: -11.750033378601074
    4. '1' → logprob: -12.125033378601074
    5. ' ' → logprob: -12.500033378601074
    6. '   ' → logprob: -13.250033378601074
    7. '

' → logprob: -13.500033378601074
    8. ')' → logprob: -14.000033378601074
    9. '  ' → logprob: -14.250033378601074
    10. '`' → logprob: -15.250033378601074

Token 163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014072739577386528
    2. '1' → logprob: -9.125141143798828
    3. '
' → logprob: -11.250141143798828
    4. '```' → logprob: -11.875141143798828
    5. ' ' → logprob: -12.000141143798828
    6. '   ' → logprob: -13.500141143798828
    7. '

' → logprob: -13.625141143798828
    8. '21' → logprob: -14.500141143798828
    9. '  ' → logprob: -14.750141143798828
    10. ')' → logprob: -14.937641143798828

Token 164: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012531078420579433
    2. ')*' → logprob: -4.387531280517578
    3. '*' → logprob: -11.387531280517578
    4. ' )' → logprob: -11.762531280517578
    5. '*m' → logprob: -13.637531280517578
    6. '*)' → logprob: -14.762531280517578
    7. ' ' → logprob: -15.387531280517578
    8. '   ' → logprob: -15.762531280517578
    9. ')
' → logprob: -16.262531280517578
    10. '）' → logprob: -16.762531280517578

Token 165: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2646544575691223
    2. ' *' → logprob: -1.8896543979644775
    3. '*m' → logprob: -2.5146543979644775
    4. ')' → logprob: -8.014654159545898
    5. ')*' → logprob: -9.014654159545898
    6. ' ' → logprob: -10.264654159545898
    7. '   ' → logprob: -12.014654159545898
    8. ' ' → logprob: -12.264654159545898
    9. '```' → logprob: -13.639654159545898
    10. '**' → logprob: -13.639654159545898

Token 166: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00020377879263833165
    2. ' m' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.37520408630371
    4. 'min' → logprob: -16.87520408630371
    5. '	m' → logprob: -17.12520408630371
    6. ' ' → logprob: -17.12520408630371
    7. '
' → logprob: -17.50020408630371
    8. '```' → logprob: -18.50020408630371
    9. '*m' → logprob: -18.75020408630371
    10. ' ' → logprob: -18.75020408630371

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005344162695109844
    2. ' ,' → logprob: -5.755344390869141
    3. ',
' → logprob: -6.255344390869141
    4. ',S' → logprob: -9.13034439086914
    5. ',s' → logprob: -9.75534439086914
    6. ',min' → logprob: -10.00534439086914
    7. ',m' → logprob: -11.88034439086914
    8. ',

' → logprob: -11.88034439086914
    9. '       ' → logprob: -12.25534439086914
    10. '   ' → logprob: -12.63034439086914

Token 168: ' m' (ID: 284)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.016184048727154732
    2. ' S' → logprob: -4.141183853149414
    3. '   ' → logprob: -9.516183853149414
    4. '           ' → logprob: -10.641183853149414
    5. ' ' → logprob: -11.516183853149414
    6. '       ' → logprob: -11.641183853149414
    7. '    ' → logprob: -11.766183853149414
    8. '  ' → logprob: -12.266183853149414
    9. '               ' → logprob: -12.391183853149414
    10. '     ' → logprob: -12.641183853149414

Token 169: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048944439738988876
    2. '+' → logprob: -3.0489444732666016
    3. '+s' → logprob: -8.423944473266602
    4. ')' → logprob: -9.923944473266602
    5. 's' → logprob: -10.048944473266602
    6. ' ' → logprob: -10.423944473266602
    7. ' +
' → logprob: -12.423944473266602
    8. '+
' → logprob: -12.798944473266602
    9. '```' → logprob: -13.423944473266602
    10. ')+' → logprob: -13.548944473266602

Token 170: ' S' (ID: 336)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12627165019512177
    2. ' s' → logprob: -2.5012717247009277
    3. '(s' → logprob: -3.3762717247009277
    4. ' (' → logprob: -6.626271724700928
    5. 'S' → logprob: -8.12627124786377
    6. ' ' → logprob: -8.75127124786377
    7. '(S' → logprob: -8.87627124786377
    8. '(' → logprob: -9.00127124786377
    9. '2' → logprob: -9.25127124786377
    10. '   ' → logprob: -9.50127124786377

Token 171: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03369837626814842
    2. '+' → logprob: -3.408698320388794
    3. ' +(' → logprob: -10.908698081970215
    4. '+(' → logprob: -11.158698081970215
    5. ')' → logprob: -11.533698081970215
    6. ' +
' → logprob: -12.533698081970215
    7. ' ' → logprob: -13.408698081970215
    8. '   ' → logprob: -13.908698081970215
    9. '[' → logprob: -13.908698081970215
    10. '```' → logprob: -14.658698081970215

Token 172: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.26851120591163635
    2. '(an' → logprob: -2.0185112953186035
    3. '2' → logprob: -3.2685112953186035
    4. ' (' → logprob: -3.5185112953186035
    5. '(' → logprob: -4.3935112953186035
    6. ' ' → logprob: -4.6435112953186035
    7. '(n' → logprob: -5.3935112953186035
    8. 's' → logprob: -5.7685112953186035
    9. '(ans' → logprob: -6.6435112953186035
    10. '(min' → logprob: -6.7685112953186035

Token 173: 'an' (ID: 270)
  Prédit: '(an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(an' → logprob: -0.03992454707622528
    2. 'an' → logprob: -3.4149246215820312
    3. '   ' → logprob: -6.414924621582031
    4. '2' → logprob: -6.914924621582031
    5. ' (' → logprob: -7.039924621582031
    6. '(len' → logprob: -7.039924621582031
    7. ' ' → logprob: -7.664924621582031
    8. '(' → logprob: -7.914924621582031
    9. 'len' → logprob: -7.914924621582031
    10. '(ans' → logprob: -8.289924621582031

Token 174: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28718292713165283
    2. ' -' → logprob: -1.4121829271316528
    3. ')' → logprob: -5.662182807922363
    4. ' ' → logprob: -6.287182807922363
    5. '   ' → logprob: -7.912182807922363
    6. '  ' → logprob: -9.787182807922363
    7. '[' → logprob: -9.912182807922363
    8. '+' → logprob: -10.162182807922363
    9. '*' → logprob: -10.287182807922363
    10. '```' → logprob: -10.662182807922363

Token 175: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015775665640830994
    2. ' ' → logprob: -4.515775680541992
    3. '0' → logprob: -6.015775680541992
    4. '-' → logprob: -6.265775680541992
    5. '2' → logprob: -8.515775680541992
    6. '   ' → logprob: -9.390775680541992
    7. ' -' → logprob: -10.765775680541992
    8. '```' → logprob: -10.890775680541992
    9. '
' → logprob: -11.140775680541992
    10. '  ' → logprob: -12.015775680541992

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005214584525674582
    2. '0' → logprob: -8.125521659851074
    3. ' ' → logprob: -8.625521659851074
    4. '2' → logprob: -11.000521659851074
    5. '   ' → logprob: -11.750521659851074
    6. '-' → logprob: -11.750521659851074
    7. '
' → logprob: -12.250521659851074
    8. '```' → logprob: -12.250521659851074
    9. '  ' → logprob: -14.000521659851074
    10. 'min' → logprob: -14.563021659851074

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46716779470443726
    2. '*' → logprob: -1.967167854309082
    3. ' *' → logprob: -2.342167854309082
    4. ')*' → logprob: -2.467167854309082
    5. 's' → logprob: -3.842167854309082
    6. '*s' → logprob: -3.967167854309082
    7. ' ' → logprob: -5.592167854309082
    8. '   ' → logprob: -6.217167854309082
    9. ' )' → logprob: -6.592167854309082
    10. ' s' → logprob: -6.967167854309082

Token 178: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6975498795509338
    2. '*s' → logprob: -1.072549819946289
    3. ' *' → logprob: -1.947549819946289
    4. 's' → logprob: -4.447549819946289
    5. ')' → logprob: -5.447549819946289
    6. ')*' → logprob: -7.947549819946289
    7. ' s' → logprob: -8.197549819946289
    8. ' ' → logprob: -8.572549819946289
    9. '   ' → logprob: -8.697549819946289
    10. '  ' → logprob: -9.947549819946289

Token 179: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22545193135738373
    2. ' s' → logprob: -1.600451946258545
    3. '   ' → logprob: -10.975451469421387
    4. ' ' → logprob: -11.225451469421387
    5. '
' → logprob: -12.100451469421387
    6. '  ' → logprob: -13.850451469421387
    7. '```' → logprob: -14.850451469421387
    8. '	s' → logprob: -14.975451469421387
    9. '     ' → logprob: -15.350451469421387
    10. '       ' → logprob: -15.350451469421387

Token 180: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006777776870876551
    2. ' )' → logprob: -5.006777763366699
    3. ')
' → logprob: -10.5067777633667
    4. '))' → logprob: -11.3817777633667
    5. ' -' → logprob: -11.6317777633667
    6. '-' → logprob: -12.2567777633667
    7. '   ' → logprob: -13.0067777633667
    8. '`)' → logprob: -13.8817777633667
    9. '')' → logprob: -14.1317777633667
    10. '       ' → logprob: -14.1317777633667

Token 181: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010784042999148369
    2. 'return' → logprob: -5.635784149169922
    3. '\n' → logprob: -5.885784149169922
    4. ' return' → logprob: -6.010784149169922
    5. '```' → logprob: -7.135784149169922
    6. '   ' → logprob: -8.010784149169922
    7. '
' → logprob: -8.635784149169922
    8. '    
' → logprob: -9.010784149169922
    9. ' 
' → logprob: -9.135784149169922
    10. '  
' → logprob: -9.260784149169922

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08396944403648376
    2. '   ' → logprob: -2.8339693546295166
    3. ' return' → logprob: -3.8339693546295166
    4. '```' → logprob: -9.583969116210938
    5. '	return' → logprob: -10.208969116210938
    6. '
' → logprob: -10.583969116210938
    7. ' ' → logprob: -13.458969116210938
    8. '       ' → logprob: -13.708969116210938
    9. '    
' → logprob: -13.833969116210938
    10. ':return' → logprob: -14.208969116210938

Token 183: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2015065997838974
    2. 'ans' → logprob: -1.7015066146850586
    3. '(ans' → logprob: -9.451506614685059
    4. '	ans' → logprob: -11.201506614685059
    5. '_ans' → logprob: -14.201506614685059
    6. 'answer' → logprob: -16.826505661010742
    7. '0' → logprob: -16.826505661010742
    8. '```' → logprob: -16.951505661010742
    9. ' ' → logprob: -17.076505661010742
    10. 'anst' → logprob: -17.076505661010742

Token 184: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 185: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 186: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.058521710336208344
    2. ' solve' → logprob: -2.9335217475891113
    3. ' test' → logprob: -6.808521747589111
    4. ' ' → logprob: -6.933521747589111
    5. ' factorial' → logprob: -8.433521270751953
    6. ' sum' → logprob: -8.558521270751953
    7. ' calculate' → logprob: -8.683521270751953
    8. ' solution' → logprob: -8.683521270751953
    9. ' input' → logprob: -9.183521270751953
    10. ' reverse' → logprob: -9.433521270751953

Token 187: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004565649665892124
    2. '():
' → logprob: -5.629565715789795
    3. ' ():' → logprob: -7.754565715789795
    4. '(' → logprob: -8.004565238952637
    5. '()' → logprob: -9.129565238952637
    6. '(n' → logprob: -10.754565238952637
    7. ' (' → logprob: -10.879565238952637
    8. '():
' → logprob: -11.129565238952637
    9. 'def' → logprob: -11.379565238952637
    10. '():

' → logprob: -12.379565238952637

Token 188: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019252562895417213
    2. '(n' → logprob: -4.394252777099609
    3. ' n' → logprob: -6.019252777099609
    4. '()' → logprob: -6.644252777099609
    5. '<|end|>' → logprob: -7.144252777099609
    6. 'n' → logprob: -7.269252777099609
    7. '```' → logprob: -8.26925277709961
    8. ' ' → logprob: -8.64425277709961
    9. '    ' → logprob: -8.64425277709961
    10. '():' → logprob: -8.76925277709961

Token 189: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03228454664349556
    2. 'n' (adapté à ' n') → logprob: -3.5322844982147217
    3. ' import' → logprob: -6.282284736633301
    4. '   ' → logprob: -7.532284736633301
    5. ' t' → logprob: -9.9072847366333
    6. '(n' → logprob: -10.7822847366333
    7. 'import' → logprob: -11.0322847366333
    8. ' input' → logprob: -11.4072847366333
    9. ' ' → logprob: -11.5322847366333
    10. ' N' → logprob: -12.2822847366333

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009940712712705135
    2. '=' → logprob: -5.0099406242370605
    3. ',' → logprob: -5.7599406242370605
    4. ' ' → logprob: -10.634941101074219
    5. ')' → logprob: -11.259941101074219
    6. ' ,' → logprob: -11.759941101074219
    7. '  ' → logprob: -12.134941101074219
    8. '=int' → logprob: -12.259941101074219
    9. ' =
' → logprob: -12.509941101074219
    10. '<|end|>' → logprob: -12.509941101074219

Token 191: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16022513806819916
    2. 'int' → logprob: -1.9102251529693604
    3. ' ' → logprob: -14.660224914550781
    4. '=int' → logprob: -15.160224914550781
    5. '(int' → logprob: -16.16022491455078
    6. '[int' → logprob: -16.41022491455078
    7. '<int' → logprob: -16.91022491455078
    8. '0' → logprob: -17.66022491455078
    9. '10' → logprob: -18.66022491455078
    10. ' len' → logprob: -19.03522491455078

Token 192: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1604093462228775
    2. '(' → logprob: -1.9104093313217163
    3. 'input' → logprob: -8.660408973693848
    4. '()' → logprob: -12.285408973693848
    5. '('' → logprob: -12.660408973693848
    6. ' input' → logprob: -13.535408973693848
    7. '(
' → logprob: -13.785408973693848
    8. ' (' → logprob: -13.785408973693848
    9. '("' → logprob: -14.785408973693848
    10. '=input' → logprob: -16.410409927368164

Token 193: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005331709049642086
    2. '()' → logprob: -5.255331516265869
    3. '())
' → logprob: -9.630331993103027
    4. ')' → logprob: -11.005331993103027
    5. '(' → logprob: -11.755331993103027
    6. '().' → logprob: -12.255331993103027
    7. '()
' → logprob: -13.505331993103027
    8. ' ())' → logprob: -14.630331993103027
    9. '())

' → logprob: -15.130331993103027
    10. '()),' → logprob: -16.13033103942871

Token 194: '   ' (ID: 271)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.07079175114631653
    2. 'A' → logprob: -2.695791721343994
    3. '   ' → logprob: -7.695791721343994
    4. ' ' → logprob: -8.320792198181152
    5. '	A' → logprob: -9.820792198181152
    6. '<|end|>' → logprob: -10.070792198181152
    7. '```' → logprob: -11.070792198181152
    8. ' 
' → logprob: -11.445792198181152
    9. '  ' → logprob: -12.195792198181152
    10. '    
' → logprob: -12.570792198181152

Token 195: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.28118544816970825
    2. 'A' (adapté à ' A') → logprob: -1.4061853885650635
    3. '<|end|>' → logprob: -11.156185150146484
    4. ' ' → logprob: -12.156185150146484
    5. 's' → logprob: -12.531185150146484
    6. '	A' → logprob: -12.656185150146484
    7. '   ' → logprob: -13.531185150146484
    8. 'a' → logprob: -14.156185150146484
    9. ' ' → logprob: -14.281185150146484
    10. '```' → logprob: -14.281185150146484

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132646679878235
    2. '=' → logprob: -1.3132646083831787
    3. '.' → logprob: -13.813264846801758
    4. '.append' → logprob: -14.938264846801758
    5. '[' → logprob: -15.313264846801758
    6. ',' → logprob: -15.313264846801758
    7. ')' → logprob: -15.563264846801758
    8. '[:]' → logprob: -15.813264846801758
    9. ' ' → logprob: -16.188264846801758
    10. '(' → logprob: -16.313264846801758

Token 197: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.011124100536108017
    2. ' list' → logprob: -4.511124134063721
    3. '[list' → logprob: -9.511123657226562
    4. '[' → logprob: -13.011123657226562
    5. ' [' → logprob: -17.261123657226562
    6. '(list' → logprob: -17.761123657226562
    7. '=list' → logprob: -17.761123657226562
    8. '[List' → logprob: -19.511123657226562
    9. '[int' → logprob: -19.886123657226562
    10. '	list' → logprob: -19.886123657226562

Token 198: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.896309739408025e-07
    2. ' int' → logprob: -14.250000953674316
    3. '(int' → logprob: -19.5
    4. '   ' → logprob: -20.125
    5. '<int' → logprob: -20.375
    6. '*' → logprob: -20.5
    7. ']int' → logprob: -20.625
    8. '[int' → logprob: -20.75
    9. 'map' → logprob: -20.875
    10. '	int' → logprob: -21.125

Token 199: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31918928027153015
    2. '(input' → logprob: -1.3191893100738525
    3. '(' → logprob: -5.194189071655273
    4. '(i' → logprob: -8.819189071655273
    5. '()' → logprob: -9.069189071655273
    6. '(
' → logprob: -10.194189071655273
    7. '()]' → logprob: -10.444189071655273
    8. '(a' → logprob: -11.194189071655273
    9. '(_)' → logprob: -12.319189071655273
    10. 'input' → logprob: -13.069189071655273

Token 200: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0056680492125451565
    2. 'input' → logprob: -6.0056681632995605
    3. '(input' → logprob: -6.2556681632995605
    4. 'for' → logprob: -7.1306681632995605
    5. '())' → logprob: -7.8806681632995605
    6. '()' → logprob: -9.755667686462402
    7. '=input' → logprob: -11.755667686462402
    8. ' )' → logprob: -12.005667686462402
    9. '(' → logprob: -12.130667686462402
    10. 'in' → logprob: -12.380667686462402

Token 201: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2966843545436859
    2. ' for' → logprob: -1.7966843843460083
    3. '()' → logprob: -2.7966842651367188
    4. ')' → logprob: -3.5466842651367188
    5. 'input' → logprob: -7.671684265136719
    6. '(input' → logprob: -8.296684265136719
    7. '())' → logprob: -9.046684265136719
    8. ' input' → logprob: -10.546684265136719
    9. ' ()' → logprob: -10.671684265136719
    10. '   ' → logprob: -10.671684265136719

Token 202: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3869156539440155
    2. 'input' → logprob: -1.136915683746338
    3. '_' → logprob: -11.26191520690918
    4. 'x' → logprob: -11.76191520690918
    5. ' in' → logprob: -11.88691520690918
    6. '_input' → logprob: -12.01191520690918
    7. ' x' → logprob: -12.13691520690918
    8. '=input' → logprob: -13.13691520690918
    9. 'in' → logprob: -13.38691520690918
    10. ' ' → logprob: -13.88691520690918

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029766106978058815
    2. 'in' → logprob: -3.529766082763672
    3. 'input' → logprob: -11.279766082763672
    4. 'import' → logprob: -14.029766082763672
    5. 'x' → logprob: -14.404766082763672
    6. ' ' → logprob: -14.404766082763672
    7. '_' → logprob: -14.779766082763672
    8. ' input' → logprob: -15.904766082763672
    9. '	in' → logprob: -16.279766082763672
    10. 'In' → logprob: -16.529766082763672

Token 204: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861456897109747
    2. ' input' → logprob: -4.758614540100098
    3. '(input' → logprob: -18.008615493774414
    4. '=input' → logprob: -19.133615493774414
    5. '_input' → logprob: -20.133615493774414
    6. '.input' → logprob: -20.633615493774414
    7. '<input' → logprob: -20.758615493774414
    8. ' ' → logprob: -21.133615493774414
    9. '	input' → logprob: -21.258615493774414
    10. 'range' → logprob: -21.383615493774414

Token 205: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '()' → logprob: -12.375004768371582
    3. '.split' → logprob: -14.250004768371582
    4. 'split' → logprob: -15.500004768371582
    5. ' ().' → logprob: -18.0000057220459
    6. '()].' → logprob: -19.0000057220459
    7. '()]' → logprob: -19.1250057220459
    8. '.strip' → logprob: -20.1250057220459
    9. '()
' → logprob: -20.6250057220459
    10. '(' → logprob: -21.0000057220459

Token 206: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015872348740231246
    2. 'strip' → logprob: -8.750158309936523
    3. 'rstrip' → logprob: -16.000158309936523
    4. ' split' → logprob: -16.500158309936523
    5. '(split' → logprob: -18.125158309936523
    6. 'spl' → logprob: -19.625158309936523
    7. '.split' → logprob: -21.375158309936523
    8. 's' → logprob: -22.250158309936523
    9. '_split' → logprob: -23.625158309936523
    10. ' strip' → logprob: -23.750158309936523

Token 207: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0001354824344161898
    2. '()' → logprob: -9.00013542175293
    3. '())' → logprob: -11.50013542175293
    4. ')]' → logprob: -13.75013542175293
    5. ']' → logprob: -14.62513542175293
    6. '()]
' → logprob: -15.00013542175293
    7. '(' → logprob: -16.75013542175293
    8. '()][' → logprob: -18.00013542175293
    9. '()}' → logprob: -18.25013542175293
    10. ']()' → logprob: -18.87513542175293

Token 208: ']

' (ID: 3144)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0007663871510885656
    2. ']' → logprob: -7.250766277313232
    3. ')]' → logprob: -10.12576675415039
    4. '()' → logprob: -11.25076675415039
    5. '()]
' → logprob: -13.12576675415039
    6. '())' → logprob: -13.75076675415039
    7. '(' → logprob: -15.87576675415039
    8. ']()' → logprob: -16.50076675415039
    9. '`]' → logprob: -17.37576675415039
    10. ' ]' → logprob: -17.37576675415039

Token 209: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13638009130954742
    2. '   ' → logprob: -2.136380195617676
    3. 'result' → logprob: -4.886380195617676
    4. 'solve' → logprob: -7.011380195617676
    5. ' print' → logprob: -7.636380195617676
    6. '
' → logprob: -8.261380195617676
    7. '    
' → logprob: -9.386380195617676
    8. 'res' → logprob: -10.011380195617676
    9. ' solve' → logprob: -11.386380195617676
    10. 'return' → logprob: -11.386380195617676

Token 210: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.3425219549390022e-05
    2. 'result' → logprob: -11.25001335144043
    3. ' print' → logprob: -15.12501335144043
    4. 'res' → logprob: -16.00001335144043
    5. '   ' → logprob: -17.12501335144043
    6. 'answer' → logprob: -18.62501335144043
    7. 'return' → logprob: -18.62501335144043
    8. 'pr' → logprob: -18.62501335144043
    9. 'ans' → logprob: -18.75001335144043
    10. '    
' → logprob: -20.12501335144043

Token 211: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014175030402839184
    2. '(' → logprob: -4.264174938201904
    3. '(solution' → logprob: -12.639175415039062
    4. '(
' → logprob: -12.764175415039062
    5. 'solve' → logprob: -13.264175415039062
    6. '(sol' → logprob: -13.514175415039062
    7. '('' → logprob: -14.514175415039062
    8. '()' → logprob: -14.639175415039062
    9. '("' → logprob: -15.014175415039062
    10. '(resolve' → logprob: -15.139175415039062

Token 212: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.9361264946837764e-07
    2. 'solve' → logprob: -16.25
    3. 'ol' → logprob: -17.375
    4. 'ove' → logprob: -17.875
    5. 'OLVE' → logprob: -18.0
    6. 'olv' → logprob: -18.875
    7. 'erve' → logprob: -19.875
    8. 'olver' → logprob: -20.0
    9. 'l' → logprob: -20.125
    10. 'o' → logprob: -20.75

Token 213: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019431571708992124
    2. '(' → logprob: -6.251943111419678
    3. ' (' → logprob: -12.126943588256836
    4. ')(' → logprob: -12.501943588256836
    5. '(A' → logprob: -12.626943588256836
    6. '(
' → logprob: -14.251943588256836
    7. ')' → logprob: -14.251943588256836
    8. '(N' → logprob: -14.876943588256836
    9. '(len' → logprob: -15.626943588256836
    10. '((' → logprob: -15.751943588256836

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007166040013544261
    2. ',A' → logprob: -7.250716686248779
    3. ' ,' → logprob: -12.625716209411621
    4. 'A' → logprob: -13.500716209411621
    5. '(' → logprob: -14.125716209411621
    6. '(A' → logprob: -14.625716209411621
    7. ',
' → logprob: -14.750716209411621
    8. ',n' → logprob: -16.000717163085938
    9. '(n' → logprob: -16.500717163085938
    10. ')' → logprob: -16.625717163085938

Token 215: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004078401252627373
    2. ' A' → logprob: -5.504078388214111
    3. '	A' → logprob: -19.379077911376953
    4. '   ' → logprob: -19.629077911376953
    5. '(A' → logprob: -20.879077911376953
    6. ')' → logprob: -21.254077911376953
    7. ',A' → logprob: -21.379077911376953
    8. ' ' → logprob: -22.254077911376953
    9. '[A' → logprob: -22.629077911376953
    10. '=A' → logprob: -23.504077911376953

Token 216: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04858953505754471
    2. ')' → logprob: -3.0485894680023193
    3. '))
' → logprob: -14.173589706420898
    4. '())' → logprob: -14.548589706420898
    5. ')))' → logprob: -14.673589706420898
    6. '()))' → logprob: -15.173589706420898
    7. ')
' → logprob: -16.6735897064209
    8. '()' → logprob: -16.6735897064209
    9. '])' → logprob: -16.6735897064209
    10. ' ))' → logprob: -17.1735897064209

Token 217: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007473636418581009
    2. '
' → logprob: -5.882473468780518
    3. '```' → logprob: -6.257473468780518
    4. '<|end|>' → logprob: -6.382473468780518
    5. '#' → logprob: -8.132473945617676
    6. ' if' → logprob: -8.132473945617676
    7. '\' → logprob: -8.257473945617676
    8. '\n' → logprob: -9.007473945617676
    9. '__' → logprob: -10.757473945617676
    10. '

' → logprob: -11.632473945617676

Token 218: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 216
Tokens correctement prédits (1ère position, stricte): 92
Tokens correctement prédits (1ère position, avec adaptation): 99
Tokens correctement prédits (top 10): 176
Précision stricte (1ère position): 42.59%
Précision adaptée (1ère position): 45.83%
Précision (top 10): 81.48%
================================================================================
