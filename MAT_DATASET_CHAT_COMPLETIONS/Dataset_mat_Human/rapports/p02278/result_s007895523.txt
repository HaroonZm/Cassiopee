================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import copy
n = int(input())
a = list(map(int, input().split()))
b = copy.deepcopy(a)
b.sort()
loop = []
minp = min(a)
t = [0 for i in range(n)]
while True:
    i = t.index(0)
    j = len(loop)
    loop.append([a[i]])
    t[i] = 1
    while True:
        i = b.index(a[i])
        if t[i] == 1:
            break
        t[i] = 1
        loop[j].append(a[i])
    if sum(t) == n:
        break
    j += 1
cost = 0
for i in loop:
    if len(i) == 1:
        continue
    ps = sum(i)
    pl = len(i)
    pm = min(i)
    p1 = ps + (pl - 2) * pm
    p2 = ps + pm + (pl + 1) * minp
    cost += min(p1, p2)
print(cost)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' copy' (ID: 5150)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002777416491881013
    2. '\' → logprob: -6.877777576446533
    3. '.copy' → logprob: -7.752777576446533
    4. '.deepcopy' → logprob: -8.252777099609375
    5. 'import' → logprob: -8.377777099609375
    6. '\n' → logprob: -8.752777099609375
    7. '```' → logprob: -9.127777099609375
    8. '.import' → logprob: -9.627777099609375
    9. '

' → logprob: -9.877777099609375
    10. '
' → logprob: -9.877777099609375

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2884182929992676
    2. ' =' → logprob: -2.4134182929992676
    3. '_' → logprob: -3.1634182929992676
    4. ' ' → logprob: -3.5384182929992676
    5. 'e' → logprob: -3.5384182929992676
    6. 'u' → logprob: -3.5384182929992676
    7. 'a' → logprob: -3.7884182929992676
    8. '.' → logprob: -5.413418292999268
    9. ',' → logprob: -6.538418292999268
    10. ':' → logprob: -7.913418292999268

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014851762913167477
    2. '5' → logprob: -5.0148515701293945
    3. '10' → logprob: -5.7648515701293945
    4. ' copy' → logprob: -6.3898515701293945
    5. '3' → logprob: -6.6398515701293945
    6. '0' → logprob: -6.8898515701293945
    7. 'copy' → logprob: -7.8898515701293945
    8. '2' → logprob: -8.514851570129395
    9. '1' → logprob: -8.889851570129395
    10. '4' → logprob: -8.889851570129395

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00018863992590922862
    2. '('' → logprob: -9.375188827514648
    3. '```' → logprob: -10.500188827514648
    4. '(n' → logprob: -11.000188827514648
    5. '("("' → logprob: -11.875188827514648
    6. '`' → logprob: -11.875188827514648
    7. '(
' → logprob: -12.000188827514648
    8. ' (' → logprob: -12.000188827514648
    9. ''' → logprob: -12.125188827514648
    10. '()' → logprob: -12.250188827514648

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.679107129573822
    2. ')' → logprob: -0.804107129573822
    3. '()' → logprob: -3.554107189178467
    4. '())' → logprob: -4.179107189178467
    5. '))' → logprob: -7.429107189178467
    6. '(
' → logprob: -7.679107189178467
    7. '(

' → logprob: -9.179106712341309
    8. '")' → logprob: -9.304106712341309
    9. '')' → logprob: -9.804106712341309
    10. '('' → logprob: -9.804106712341309

Token 8: 'a' (ID: 64)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2786802053451538
    2. 'data' → logprob: -1.6536802053451538
    3. 'a' → logprob: -1.7786802053451538
    4. '[' → logprob: -2.5286803245544434
    5. 'd' → logprob: -2.9036803245544434
    6. ' 
' → logprob: -3.2786803245544434
    7. ''' → logprob: -3.7786803245544434
    8. ')' → logprob: -4.028680324554443
    9. 'i' → logprob: -4.028680324554443
    10. 's' → logprob: -4.153680324554443

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013449141755700111
    2. '=' → logprob: -5.013449192047119
    3. ' =' → logprob: -5.638449192047119
    4. '.' → logprob: -6.763449192047119
    5. 'a' → logprob: -7.388449192047119
    6. '[:]' → logprob: -7.888449192047119
    7. 's' → logprob: -8.263448715209961
    8. '[a' → logprob: -8.513448715209961
    9. '_' → logprob: -9.013448715209961
    10. '[]' → logprob: -9.388448715209961

Token 10: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.13948655128479
    2. ' copy' → logprob: -1.26448655128479
    3. ' [' → logprob: -1.63948655128479
    4. 'copy' → logprob: -2.63948655128479
    5. '[' → logprob: -2.88948655128479
    6. '[]' → logprob: -3.13948655128479
    7. ' list' → logprob: -3.76448655128479
    8. 'list' → logprob: -4.889486312866211
    9. 'input' → logprob: -7.264486312866211
    10. ' input' → logprob: -7.389486312866211

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003947317600250244
    2. '(copy' → logprob: -5.7539472579956055
    3. '(a' → logprob: -8.253947257995605
    4. '(range' → logprob: -8.503947257995605
    5. '(input' → logprob: -8.628947257995605
    6. '()' → logprob: -9.878947257995605
    7. '.copy' → logprob: -11.753947257995605
    8. '(
' → logprob: -12.003947257995605
    9. '(`' → logprob: -12.253947257995605
    10. 'a' → logprob: -12.253947257995605

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4481465816497803
    2. '(int' → logprob: -1.0731465816497803
    3. '(str' → logprob: -4.573146820068359
    4. '(lambda' → logprob: -5.573146820068359
    5. '(input' → logprob: -6.198146820068359
    6. ')' → logprob: -6.573146820068359
    7. '(eval' → logprob: -7.948146820068359
    8. '[int' → logprob: -8.69814682006836
    9. '<|end|>' → logprob: -8.69814682006836
    10. '(
' → logprob: -8.82314682006836

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07843105494976044
    2. '(' → logprob: -3.5784311294555664
    3. ',input' → logprob: -3.7034311294555664
    4. ',' → logprob: -3.8284311294555664
    5. ')' → logprob: -7.953431129455566
    6. '=input' → logprob: -8.203431129455566
    7. 'input' → logprob: -9.078431129455566
    8. '))' → logprob: -9.578431129455566
    9. '(int' → logprob: -9.703431129455566
    10. '(eval' → logprob: -10.078431129455566

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029759055003523827
    2. ' input' → logprob: -3.529759168624878
    3. '(input' → logprob: -11.904759407043457
    4. ',input' → logprob: -13.529759407043457
    5. '=input' → logprob: -15.529759407043457
    6. ' ' → logprob: -16.02975845336914
    7. '<input' → logprob: -16.40475845336914
    8. '	input' → logprob: -16.52975845336914
    9. ')' → logprob: -17.27975845336914
    10. '```' → logprob: -18.52975845336914

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1458519697189331
    2. '()))' → logprob: -2.2708520889282227
    3. '()' → logprob: -3.7708520889282227
    4. '())' → logprob: -4.770852088928223
    5. '()));' → logprob: -7.895852088928223
    6. '(' → logprob: -8.270852088928223
    7. '())))' → logprob: -8.520852088928223
    8. '());' → logprob: -10.395852088928223
    9. '))' → logprob: -10.520852088928223
    10. '()>' → logprob: -10.520852088928223

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.8802491215174086e-05
    2. 'strip' → logprob: -10.625028610229492
    3. 'rstrip' → logprob: -13.125028610229492
    4. ' split' → logprob: -13.250028610229492
    5. '(split' → logprob: -14.500028610229492
    6. 'spl' → logprob: -16.625028610229492
    7. ')' → logprob: -17.000028610229492
    8. 's' → logprob: -18.750028610229492
    9. '.split' → logprob: -19.625028610229492
    10. ' ' → logprob: -20.250028610229492

Token 17: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1451411247253418
    2. '))' → logprob: -2.520141124725342
    3. '())' → logprob: -3.770141124725342
    4. '()' → logprob: -4.145141124725342
    5. ')' → logprob: -5.270141124725342
    6. '(' → logprob: -5.395141124725342
    7. '())))' → logprob: -5.770141124725342
    8. ')))' → logprob: -5.895141124725342
    9. '()))
' → logprob: -9.6451416015625
    10. '()))

' → logprob: -11.0201416015625

Token 18: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14190751314163208
    2. 'd' → logprob: -2.8919074535369873
    3. '
' → logprob: -4.016907691955566
    4. 'b' → logprob: -4.391907691955566
    5. 's' → logprob: -4.391907691955566
    6. 'c' → logprob: -4.766907691955566
    7. 'for' → logprob: -5.266907691955566
    8. 'result' → logprob: -5.516907691955566
    9. 'dp' → logprob: -5.891907691955566
    10. 'r' → logprob: -6.016907691955566

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22754420340061188
    2. '=' → logprob: -1.6025441884994507
    3. '.' → logprob: -6.47754430770874
    4. ')' → logprob: -8.852543830871582
    5. '_' → logprob: -8.852543830871582
    6. '[' → logprob: -9.102543830871582
    7. '[:]' → logprob: -9.477543830871582
    8. '=[]' → logprob: -10.352543830871582
    9. ',' → logprob: -10.602543830871582
    10. '.append' → logprob: -11.477543830871582

Token 20: ' copy' (ID: 5150)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.39586663246154785
    2. ' copy' → logprob: -1.1458666324615479
    3. 'a' → logprob: -5.020866394042969
    4. ' a' → logprob: -6.520866394042969
    5. '[' → logprob: -8.020866394042969
    6. '[]' → logprob: -8.270866394042969
    7. ' []' → logprob: -9.645866394042969
    8. ' [' → logprob: -9.895866394042969
    9. 'list' → logprob: -10.020866394042969
    10. ' list' → logprob: -10.520866394042969

Token 21: '.deepcopy' (ID: 130390)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.49565935134887695
    2. '.deepcopy' → logprob: -1.120659351348877
    3. '.copy' → logprob: -2.745659351348877
    4. ' .' → logprob: -7.870659351348877
    5. '.b' → logprob: -10.245658874511719
    6. '.)' → logprob: -10.870658874511719
    7. '.deep' → logprob: -11.620658874511719
    8. '.randint' → logprob: -12.120658874511719
    9. '.Copy' → logprob: -12.245658874511719
    10. '.dumps' → logprob: -12.245658874511719

Token 22: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.011363515630364418
    2. '(' → logprob: -4.511363506317139
    3. '(b' → logprob: -8.261363983154297
    4. '(n' → logprob: -10.261363983154297
    5. '((' → logprob: -11.886363983154297
    6. '(s' → logprob: -12.511363983154297
    7. ' (' → logprob: -12.636363983154297
    8. '(
' → logprob: -12.761363983154297
    9. '(ab' → logprob: -13.511363983154297
    10. '(ai' → logprob: -14.761363983154297

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04312809929251671
    2. '))' → logprob: -3.16812801361084
    3. '[' → logprob: -9.04312801361084
    4. ' )' → logprob: -12.91812801361084
    5. '])' → logprob: -12.91812801361084
    6. ')))' → logprob: -13.91812801361084
    7. ')[' → logprob: -14.29312801361084
    8. ')>' → logprob: -14.29312801361084
    9. ')
' → logprob: -14.66812801361084
    10. '[])' → logprob: -14.91812801361084

Token 24: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8477184772491455
    2. 'for' → logprob: -1.9727184772491455
    3. '.' → logprob: -2.0977184772491455
    4. ')' → logprob: -2.2227184772491455
    5. '.sort' → logprob: -2.4727184772491455
    6. '
' → logprob: -2.8477184772491455
    7. 'a' → logprob: -3.7227184772491455
    8. '[' → logprob: -4.347718238830566
    9. ' for' → logprob: -5.222718238830566
    10. '.
' → logprob: -6.097718238830566

Token 25: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7986927628517151
    2. '[' → logprob: -1.0486927032470703
    3. '<|end|>' → logprob: -1.7986927032470703
    4. '[:]' → logprob: -4.17369270324707
    5. '```' → logprob: -5.04869270324707
    6. '<|end|>' → logprob: -5.67369270324707
    7. '.sort' → logprob: -5.67369270324707
    8. '
' → logprob: -6.92369270324707
    9. ')' → logprob: -7.17369270324707
    10. '[::-' → logprob: -7.29869270324707

Token 26: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00596636114642024
    2. '(' → logprob: -5.1309661865234375
    3. '())' → logprob: -11.505966186523438
    4. '()`' → logprob: -12.255966186523438
    5. '();' → logprob: -12.755966186523438
    6. '()>' → logprob: -13.130966186523438
    7. '()]' → logprob: -13.380966186523438
    8. ' ()' → logprob: -13.505966186523438
    9. '()<' → logprob: -13.630966186523438
    10. '`()' → logprob: -13.630966186523438

Token 27: 'loop' (ID: 14294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16603942215442657
    2. 'if' → logprob: -2.54103946685791
    3. 'c' → logprob: -4.29103946685791
    4. 'i' → logprob: -4.29103946685791
    5. 'count' → logprob: -5.04103946685791
    6. 's' → logprob: -5.41603946685791
    7. 'diff' → logprob: -5.54103946685791
    8. 'd' → logprob: -5.54103946685791
    9. 'm' → logprob: -5.66603946685791
    10. 'b' → logprob: -5.66603946685791

Token 28: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7056216597557068
    2. 's' → logprob: -1.3306217193603516
    3. '_' → logprob: -1.5806217193603516
    4. ' =' → logprob: -4.330621719360352
    5. '=' → logprob: -4.830621719360352
    6. 'for' → logprob: -4.955621719360352
    7. ' for' → logprob: -5.830621719360352
    8. ' ' → logprob: -6.705621719360352
    9. '_for' → logprob: -7.080621719360352
    10. 'ing' → logprob: -7.580621719360352

Token 29: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8656478524208069
    2. 'n' → logprob: -0.9906478524208069
    3. ' n' → logprob: -2.615647792816162
    4. 'len' → logprob: -2.740647792816162
    5. ' ' → logprob: -3.490647792816162
    6. ' len' → logprob: -4.365647792816162
    7. 'b' → logprob: -4.990647792816162
    8. 'a' → logprob: -5.615647792816162
    9. '1' → logprob: -5.615647792816162
    10. 'True' → logprob: -6.115647792816162

Token 30: 'min' (ID: 1493)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0213212538510561
    2. 'i' → logprob: -4.2713212966918945
    3. 'f' → logprob: -5.0213212966918945
    4. ' for' → logprob: -7.8963212966918945
    5. 'n' → logprob: -10.396321296691895
    6. 'd' → logprob: -10.896321296691895
    7. 'if' → logprob: -11.021321296691895
    8. 'm' → logprob: -11.521321296691895
    9. '=' → logprob: -11.521321296691895
    10. 'j' → logprob: -11.771321296691895

Token 31: 'p' (ID: 79)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.423368901014328
    2. '_val' → logprob: -1.2983689308166504
    3. '_idx' → logprob: -3.6733689308166504
    4. '_index' → logprob: -3.9233689308166504
    5. '_loop' → logprob: -4.54836893081665
    6. '_value' → logprob: -5.42336893081665
    7. '_elem' → logprob: -5.42336893081665
    8. '_element' → logprob: -6.04836893081665
    9. '_i' → logprob: -6.67336893081665
    10. '_len' → logprob: -7.04836893081665

Token 32: ' =' (ID: 314)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.005409957841038704
    2. 'o' → logprob: -5.880410194396973
    3. '=' → logprob: -7.005410194396973
    4. 'osition' → logprob: -7.505410194396973
    5. ' =' → logprob: -7.880410194396973
    6. 'osi' → logprob: -8.130410194396973
    7. '=os' → logprob: -8.505410194396973
    8. 's' → logprob: -9.505410194396973
    9. '_' → logprob: -10.130410194396973
    10. 'r' → logprob: -10.505410194396973

Token 33: ' min' (ID: 1349)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9565039277076721
    2. ' float' → logprob: -1.8315038681030273
    3. '10' → logprob: -1.9565038681030273
    4. ' ' → logprob: -2.8315038681030273
    5. 'float' → logprob: -2.8315038681030273
    6. 'n' → logprob: -2.9565038681030273
    7. '100' → logprob: -2.9565038681030273
    8. ' n' → logprob: -3.3315038681030273
    9. 'a' → logprob: -4.456503868103027
    10. 'b' → logprob: -4.581503868103027

Token 34: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.13115987181663513
    2. '(loop' → logprob: -2.756159782409668
    3. '(b' → logprob: -3.381159782409668
    4. '(' → logprob: -4.756159782409668
    5. '(n' → logprob: -5.131159782409668
    6. '(min' → logprob: -5.631159782409668
    7. '(len' → logprob: -6.381159782409668
    8. '(range' → logprob: -6.381159782409668
    9. 'a' → logprob: -6.881159782409668
    10. 'loop' → logprob: -7.131159782409668

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023144623264670372
    2. '))' → logprob: -3.8981447219848633
    3. 'a' → logprob: -6.773144721984863
    4. '(a' → logprob: -7.148144721984863
    5. ' )' → logprob: -9.023144721984863
    6. '(' → logprob: -9.148144721984863
    7. '[' → logprob: -9.273144721984863
    8. 'b' → logprob: -9.773144721984863
    9. '[a' → logprob: -10.023144721984863
    10. ')))' → logprob: -10.023144721984863

Token 36: 't' (ID: 83)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.251294732093811
    2. '<|end|>' → logprob: -1.251294732093811
    3. 'n' → logprob: -2.3762946128845215
    4. 'for' → logprob: -2.6262946128845215
    5. '_' → logprob: -2.7512946128845215
    6. '
' → logprob: -3.3762946128845215
    7. ' ' → logprob: -3.6262946128845215
    8. ',' → logprob: -3.8762946128845215
    9. ' =' → logprob: -4.1262946128845215
    10. '=' → logprob: -4.2512946128845215

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0585851669311523
    2. '=' → logprob: -1.4335851669311523
    3. 'emp' → logprob: -1.9335851669311523
    4. 'mp' → logprob: -2.6835851669311523
    5. 'p' → logprob: -3.0585851669311523
    6. 'arget' → logprob: -3.4335851669311523
    7. 'r' → logprob: -3.8085851669311523
    8. 'h' → logprob: -4.433585166931152
    9. 'ry' → logprob: -4.558585166931152
    10. 'ime' → logprob: -4.683585166931152

Token 38: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7406015396118164
    2. 'min' → logprob: -1.2406015396118164
    3. ' min' → logprob: -2.7406015396118164
    4. 'a' → logprob: -2.7406015396118164
    5. 'len' → logprob: -3.9906015396118164
    6. 'b' → logprob: -4.240601539611816
    7. 'float' → logprob: -4.365601539611816
    8. '100' → logprob: -4.490601539611816
    9. ' ' → logprob: -4.740601539611816
    10. 'n' → logprob: -4.990601539611816

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08579309284687042
    2. '-' → logprob: -3.7107930183410645
    3. ']' → logprob: -3.8357930183410645
    4. 'min' → logprob: -4.8357930183410645
    5. '[]' → logprob: -5.2107930183410645
    6. 'False' → logprob: -5.3357930183410645
    7. 'a' → logprob: -5.7107930183410645
    8. 'b' → logprob: -5.8357930183410645
    9. 'i' → logprob: -5.8357930183410645
    10. 'float' → logprob: -6.3357930183410645

Token 40: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04439954459667206
    2. ']*' → logprob: -3.1693994998931885
    3. ',' → logprob: -7.669399738311768
    4. ' for' → logprob: -7.794399738311768
    5. ' ]' → logprob: -8.16939926147461
    6. ']*(' → logprob: -8.54439926147461
    7. 'for' → logprob: -10.66939926147461
    8. ')]' → logprob: -11.66939926147461
    9. ']+' → logprob: -12.54439926147461
    10. ')' → logprob: -12.54439926147461

Token 41: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004365559667348862
    2. ' range' → logprob: -6.00436544418335
    3. 'range' → logprob: -6.87936544418335
    4. ' _' → logprob: -7.87936544418335
    5. 'i' → logprob: -8.379365921020508
    6. 'a' → logprob: -9.129365921020508
    7. '_range' → logprob: -9.754365921020508
    8. ' in' → logprob: -10.629365921020508
    9. ' i' → logprob: -10.754365921020508
    10. '_a' → logprob: -11.129365921020508

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08938063681125641
    2. 'in' → logprob: -2.4643807411193848
    3. 'range' → logprob: -8.214380264282227
    4. ' range' → logprob: -8.839380264282227
    5. ' ' → logprob: -10.839380264282227
    6. '(range' → logprob: -13.464380264282227
    7. ')' → logprob: -13.964380264282227
    8. '<|end|>' → logprob: -14.464380264282227
    9. '	in' → logprob: -14.839380264282227
    10. ']' → logprob: -14.839380264282227

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3870903551578522
    2. 'range' → logprob: -1.1370903253555298
    3. 'a' → logprob: -8.512090682983398
    4. ' a' → logprob: -11.012090682983398
    5. '	range' → logprob: -14.012090682983398
    6. ' ' → logprob: -15.387090682983398
    7. ' xrange' → logprob: -15.387090682983398
    8. '(range' → logprob: -16.0120906829834
    9. ' ran' → logprob: -16.3870906829834
    10. 'b' → logprob: -16.3870906829834

Token 44: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018780663376674056
    2. '(' → logprob: -6.376878261566162
    3. '(len' → logprob: -8.751877784729004
    4. '(range' → logprob: -11.251877784729004
    5. '(a' → logprob: -12.876877784729004
    6. ' (' → logprob: -13.376877784729004
    7. '(N' → logprob: -14.751877784729004
    8. '(s' → logprob: -16.12687873840332
    9. '((' → logprob: -16.37687873840332
    10. ' range' → logprob: -16.87687873840332

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.496052371105179e-05
    2. ')' → logprob: -9.50009536743164
    3. ']' → logprob: -11.25009536743164
    4. ' )' → logprob: -13.25009536743164
    5. ')])' → logprob: -13.25009536743164
    6. '])]' → logprob: -13.50009536743164
    7. '])' → logprob: -14.12509536743164
    8. ')],' → logprob: -14.87509536743164
    9. '')]' → logprob: -15.12509536743164
    10. ')]
' → logprob: -15.37509536743164

Token 46: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.496708482503891
    2. '
' → logprob: -1.2467085123062134
    3. 'i' → logprob: -2.996708393096924
    4. ' for' → logprob: -3.371708393096924
    5. '<|end|>' → logprob: -4.996708393096924
    6. 'n' → logprob: -6.246708393096924
    7. '\n' → logprob: -6.246708393096924
    8. ' 
' → logprob: -6.496708393096924
    9. 'p' → logprob: -6.746708393096924
    10. 't' → logprob: -6.871708393096924

Token 47: ' True' (ID: 6432)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.90680330991745
    2. ' a' → logprob: -1.4068033695220947
    3. ' True' → logprob: -2.1568033695220947
    4. ' n' → logprob: -2.2818033695220947
    5. ' len' → logprob: -3.1568033695220947
    6. ' b' → logprob: -3.5318033695220947
    7. ' min' → logprob: -3.7818033695220947
    8. ' not' → logprob: -4.406803131103516
    9. 'a' → logprob: -5.031803131103516
    10. 't' → logprob: -5.406803131103516

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029112942866049707
    2. ' :' → logprob: -8.375290870666504
    3. ':
' → logprob: -10.375290870666504
    4. ',' → logprob: -11.750290870666504
    5. '   ' → logprob: -12.125290870666504
    6. '<|end|>' → logprob: -12.250290870666504
    7. '():' → logprob: -12.625290870666504
    8. '{' → logprob: -13.625290870666504
    9. ':return' → logprob: -14.125290870666504
    10. ' ' → logprob: -14.125290870666504

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21642303466796875
    2. '    ' → logprob: -2.5914230346679688
    3. ' for' → logprob: -3.7164230346679688
    4. 't' → logprob: -4.091423034667969
    5. 'n' → logprob: -4.466423034667969
    6. ' ' → logprob: -4.591423034667969
    7. '<|end|>' → logprob: -4.716423034667969
    8. 'for' → logprob: -5.591423034667969
    9. ' ' → logprob: -5.716423034667969
    10. ' t' → logprob: -5.716423034667969

Token 50: ' i' (ID: 575)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.3630194664001465
    2. ' True' → logprob: -1.4880194664001465
    3. ' t' → logprob: -2.1130194664001465
    4. '    ' → logprob: -2.8630194664001465
    5. 'b' → logprob: -2.9880194664001465
    6. 'a' → logprob: -3.1130194664001465
    7. ' a' → logprob: -3.3630194664001465
    8. ' b' → logprob: -3.4880194664001465
    9. 'n' → logprob: -3.7380194664001465
    10. ' break' → logprob: -3.7380194664001465

Token 51: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.39276188611984253
    2. 'f' → logprob: -1.6427619457244873
    3. ' =' → logprob: -2.2677619457244873
    4. '=' → logprob: -4.267761707305908
    5. ' n' → logprob: -5.642761707305908
    6. 'nd' → logprob: -5.642761707305908
    7. ' ' → logprob: -5.642761707305908
    8. 's' → logprob: -7.142761707305908
    9. 'd' → logprob: -7.392761707305908
    10. ' <' → logprob: -8.267762184143066

Token 52: ' t' (ID: 260)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18248119950294495
    2. ' ' → logprob: -2.182481288909912
    3. 'a' → logprob: -4.057481288909912
    4. ' t' → logprob: -4.182481288909912
    5. ' a' → logprob: -4.682481288909912
    6. 't' → logprob: -4.807481288909912
    7. ' n' → logprob: -6.307481288909912
    8. 'n' → logprob: -6.432481288909912
    9. ' loop' → logprob: -8.307480812072754
    10. ' b' → logprob: -9.557480812072754

Token 53: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0006498866132460535
    2. 'index' → logprob: -8.500649452209473
    3. '.argmax' → logprob: -8.500649452209473
    4. '.count' → logprob: -9.375649452209473
    5. '.find' → logprob: -9.625649452209473
    6. '[' → logprob: -11.000649452209473
    7. ' .' → logprob: -11.250649452209473
    8. '.' → logprob: -11.500649452209473
    9. 'nd' → logprob: -11.625649452209473
    10. ' index' → logprob: -11.750649452209473

Token 54: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003879642579704523
    2. '(min' → logprob: -6.003879547119141
    3. '(max' → logprob: -7.128879547119141
    4. '(False' → logprob: -7.628879547119141
    5. '(i' → logprob: -10.25387954711914
    6. '(True' → logprob: -10.50387954711914
    7. '0' → logprob: -11.00387954711914
    8. '(n' → logprob: -11.75387954711914
    9. 'min' → logprob: -12.37887954711914
    10. ' (' → logprob: -12.62887954711914

Token 55: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030295252799987793
    2. 'min' → logprob: -6.5030293464660645
    3. 'max' → logprob: -6.6280293464660645
    4. ' ' → logprob: -9.003029823303223
    5. '1' → logprob: -11.003029823303223
    6. ' min' → logprob: -11.378029823303223
    7. ' max' → logprob: -11.503029823303223
    8. '   ' → logprob: -11.878029823303223
    9. '  ' → logprob: -11.878029823303223
    10. ')' → logprob: -12.003029823303223

Token 56: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006908706855028868
    2. ' )' → logprob: -7.875690937042236
    3. ')+' → logprob: -8.500690460205078
    4. ')
' → logprob: -9.625690460205078
    5. '+' → logprob: -10.500690460205078
    6. '))' → logprob: -11.875690460205078
    7. ' if' → logprob: -14.500690460205078
    8. ')

' → logprob: -14.625690460205078
    9. '+)' → logprob: -14.625690460205078
    10. ']' → logprob: -14.875690460205078

Token 57: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.525416374206543
    2. ')' → logprob: -1.650416374206543
    3. 'if' → logprob: -2.275416374206543
    4. '+' → logprob: -3.650416374206543
    5. '<|end|>' → logprob: -3.775416374206543
    6. '   ' → logprob: -3.900416374206543
    7. ' ' → logprob: -4.525416374206543
    8. '    ' → logprob: -4.650416374206543
    9. ':' → logprob: -5.775416374206543
    10. ']' → logprob: -5.900416374206543

Token 58: ' j' (ID: 441)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.435835063457489
    2. 'j' (adapté à ' j') → logprob: -2.185835123062134
    3. 'stack' → logprob: -3.310835123062134
    4. 'cycle' → logprob: -3.310835123062134
    5. 'start' → logprob: -3.560835123062134
    6. ')' → logprob: -3.560835123062134
    7. ' if' → logprob: -3.810835123062134
    8. 'p' → logprob: -4.310834884643555
    9. 's' → logprob: -4.435834884643555
    10. ' stack' → logprob: -5.060834884643555

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932152509689331
    2. ' =' → logprob: -0.6932152509689331
    3. '=i' → logprob: -10.318215370178223
    4. ',' → logprob: -10.818215370178223
    5. ')' → logprob: -13.068215370178223
    6. '=}' → logprob: -13.443215370178223
    7. ' ' → logprob: -13.568215370178223
    8. 's' → logprob: -13.568215370178223
    9. '=int' → logprob: -13.943215370178223
    10. '<|end|>' → logprob: -14.068215370178223

Token 60: ' len' (ID: 4631)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40911170840263367
    2. 'b' → logprob: -1.659111738204956
    3. ' a' → logprob: -2.659111738204956
    4. 'i' → logprob: -3.284111738204956
    5. ' b' → logprob: -3.534111738204956
    6. ' i' → logprob: -5.409111499786377
    7. 'n' → logprob: -5.909111499786377
    8. ' n' → logprob: -7.409111499786377
    9. 't' → logprob: -8.534111976623535
    10. '0' → logprob: -8.659111976623535

Token 61: '(loop' (ID: 146562)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2336205393075943
    2. '(t' → logprob: -1.733620524406433
    3. '(b' → logprob: -3.6086206436157227
    4. '(loop' → logprob: -5.858620643615723
    5. '(' → logprob: -6.483620643615723
    6. '(j' → logprob: -10.108620643615723
    7. '(n' → logprob: -10.108620643615723
    8. 'a' → logprob: -10.108620643615723
    9. '(s' → logprob: -10.733620643615723
    10. 't' → logprob: -10.858620643615723

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004421127669047564
    2. ')-' → logprob: -8.875442504882812
    3. ' )' → logprob: -9.500442504882812
    4. '[' → logprob: -9.500442504882812
    5. ')
' → logprob: -10.000442504882812
    6. '))' → logprob: -10.125442504882812
    7. '())' → logprob: -10.375442504882812
    8. '[])' → logprob: -12.125442504882812
    9. ')+' → logprob: -12.750442504882812
    10. '()' → logprob: -12.875442504882812

Token 63: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' loop' (ID: 11453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.250651240348816
    2. ' if' → logprob: -1.250651240348816
    3. 'if' → logprob: -1.625651240348816
    4. ' loop' → logprob: -3.0006513595581055
    5. ')' → logprob: -3.1256513595581055
    6. '[' → logprob: -3.1256513595581055
    7. '<|end|>' → logprob: -3.3756513595581055
    8. ' ' → logprob: -4.7506513595581055
    9. ']' → logprob: -5.1256513595581055
    10. ':' → logprob: -5.2506513595581055

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0022071164567023516
    2. '.' → logprob: -6.127207279205322
    3. '.extend' → logprob: -11.627206802368164
    4. ' .' → logprob: -13.127206802368164
    5. '.insert' → logprob: -13.252206802368164
    6. '.setdefault' → logprob: -13.377206802368164
    7. '<|end|>' → logprob: -13.502206802368164
    8. '.add' → logprob: -13.627206802368164
    9. '.app' → logprob: -14.002206802368164
    10. '+' → logprob: -14.252206802368164

Token 66: '([' (ID: 5194)
  Prédit: '([]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([]' → logprob: -0.31217828392982483
    2. '([' → logprob: -1.5621782541275024
    3. '(' → logprob: -3.562178373336792
    4. '((' → logprob: -4.312178134918213
    5. '(a' → logprob: -4.937178134918213
    6. '(i' → logprob: -5.062178134918213
    7. '(j' → logprob: -6.062178134918213
    8. '(b' → logprob: -8.562178611755371
    9. '(([' → logprob: -8.687178611755371
    10. '([(' → logprob: -9.062178611755371

Token 67: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.531409502029419
    2. 'a' → logprob: -1.031409502029419
    3. 'b' → logprob: -3.406409502029419
    4. 'j' → logprob: -4.15640926361084
    5. '])' → logprob: -5.28140926361084
    6. '[]' → logprob: -7.90640926361084
    7. ']' → logprob: -8.15640926361084
    8. '0' → logprob: -8.78140926361084
    9. '-' → logprob: -9.03140926361084
    10. 'n' → logprob: -9.03140926361084

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04007996246218681
    2. '[j' → logprob: -3.2900800704956055
    3. '.index' → logprob: -6.9150800704956055
    4. '[' → logprob: -7.5400800704956055
    5. 'i' → logprob: -9.415080070495605
    6. '][' → logprob: -9.540080070495605
    7. 'j' → logprob: -9.665080070495605
    8. '])' → logprob: -10.040080070495605
    9. 'index' → logprob: -10.165080070495605
    10. ']' → logprob: -10.415080070495605

Token 69: ']])
' (ID: 62818)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.13531526923179626
    2. ']' → logprob: -3.135315179824829
    3. '],' → logprob: -3.260315179824829
    4. ',' → logprob: -3.885315179824829
    5. '])' → logprob: -4.135315418243408
    6. ')])' → logprob: -5.885315418243408
    7. ']])
' → logprob: -6.260315418243408
    8. '])]' → logprob: -6.760315418243408
    9. ',i' → logprob: -7.385315418243408
    10. ']==' → logprob: -8.51031494140625

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8624977469444275
    2. ')' → logprob: -1.4874978065490723
    3. '<|end|>' → logprob: -1.7374978065490723
    4. ' ' → logprob: -2.3624978065490723
    5. ' )' → logprob: -4.237497806549072
    6. ' t' → logprob: -4.362497806549072
    7. 't' → logprob: -4.737497806549072
    8. '    ' → logprob: -5.112497806549072
    9. ' 
' → logprob: -5.112497806549072
    10. ',' → logprob: -5.487497806549072

Token 71: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.12664172053337097
    2. ' t' → logprob: -2.7516417503356934
    3. '   ' → logprob: -4.001641750335693
    4. 'i' → logprob: -4.126641750335693
    5. ' while' → logprob: -4.751641750335693
    6. 'while' → logprob: -4.876641750335693
    7. ' i' → logprob: -6.376641750335693
    8. 'j' → logprob: -6.751641750335693
    9. '```' → logprob: -8.126641273498535
    10. ' ' → logprob: -8.376641273498535

Token 72: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00024120506714098155
    2. '[' → logprob: -8.87524127960205
    3. '[j' → logprob: -9.87524127960205
    4. '[a' → logprob: -10.37524127960205
    5. '[I' → logprob: -11.62524127960205
    6. '[t' → logprob: -12.50024127960205
    7. '[n' → logprob: -13.50024127960205
    8. ' [' → logprob: -14.50024127960205
    9. 'i' → logprob: -14.62524127960205
    10. '[index' → logprob: -15.00024127960205

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12312387675046921
    2. '=' → logprob: -2.62312388420105
    3. ']=' → logprob: -3.37312388420105
    4. ' =' → logprob: -5.248123645782471
    5. ' ]' → logprob: -5.623123645782471
    6. ']+=' → logprob: -9.623124122619629
    7. '])' → logprob: -10.373124122619629
    8. ')' → logprob: -11.998124122619629
    9. ',' → logprob: -12.873124122619629
    10. ' ' → logprob: -12.998124122619629

Token 74: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06199614331126213
    2. ' =' → logprob: -2.8119962215423584
    3. '+=' → logprob: -10.936996459960938
    4. ' +=' → logprob: -11.561996459960938
    5. ' ' → logprob: -14.561996459960938
    6. ',' → logprob: -15.186996459960938
    7. '＝' → logprob: -16.186996459960938
    8. ' |=' → logprob: -16.686996459960938
    9. '=}' → logprob: -16.811996459960938
    10. '.=' → logprob: -17.061996459960938

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006944431224837899
    2. ' ' → logprob: -7.375694274902344
    3. 'j' → logprob: -9.750694274902344
    4. 'i' → logprob: -12.750694274902344
    5. '-' → logprob: -12.875694274902344
    6. '2' → logprob: -13.625694274902344
    7. ' j' → logprob: -14.250694274902344
    8. '0' → logprob: -14.750694274902344
    9. '   ' → logprob: -15.063194274902344
    10. '  ' → logprob: -15.250694274902344

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048381939996033907
    2. 'j' → logprob: -8.000483512878418
    3. ' ' → logprob: -9.375483512878418
    4. 'i' → logprob: -10.000483512878418
    5. '-' → logprob: -11.250483512878418
    6. '2' → logprob: -13.500483512878418
    7. '0' → logprob: -14.250483512878418
    8. ' j' → logprob: -14.625483512878418
    9. 'b' → logprob: -15.125483512878418
    10. 'a' → logprob: -15.125483512878418

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3428073823451996
    2. 'while' → logprob: -1.967807412147522
    3. ' while' → logprob: -2.5928072929382324
    4. 'k' → logprob: -3.2178072929382324
    5. 'j' → logprob: -4.092807292938232
    6. 'i' → logprob: -5.342807292938232
    7. 'for' → logprob: -5.342807292938232
    8. ' for' → logprob: -5.592807292938232
    9. 'if' → logprob: -7.092807292938232
    10. '  ' → logprob: -7.092807292938232

Token 79: ' while' (ID: 2049)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.42563608288764954
    2. 'j' → logprob: -2.050636053085327
    3. '   ' → logprob: -2.175636053085327
    4. 'while' (adapté à ' while') → logprob: -3.425636053085327
    5. 'for' → logprob: -4.175636291503906
    6. 'i' → logprob: -4.300636291503906
    7. ' while' → logprob: -4.300636291503906
    8. ')' → logprob: -4.425636291503906
    9. ' for' → logprob: -5.175636291503906
    10. ' k' → logprob: -6.175636291503906

Token 80: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.9949080944061279
    2. 'a' → logprob: -1.744908094406128
    3. 'True' → logprob: -1.994908094406128
    4. 'b' → logprob: -1.994908094406128
    5. ' b' → logprob: -2.494908094406128
    6. ' a' → logprob: -2.619908094406128
    7. ' t' → logprob: -4.369908332824707
    8. ' not' → logprob: -4.994908332824707
    9. 't' → logprob: -5.119908332824707
    10. 'j' → logprob: -7.244908332824707

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16055981814861298
    2. ':
' → logprob: -2.410559892654419
    3. '       ' → logprob: -2.910559892654419
    4. '<|end|>' → logprob: -6.41055965423584
    5. '   ' → logprob: -6.78555965423584
    6. ' and' → logprob: -7.16055965423584
    7. ':

' → logprob: -8.91055965423584
    8. ',' → logprob: -9.16055965423584
    9. 'and' → logprob: -9.28555965423584
    10. '<|end|>' → logprob: -9.53555965423584

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13333866000175476
    2. 'j' → logprob: -3.008338689804077
    3. 'i' → logprob: -3.758338689804077
    4. '   ' → logprob: -4.133338451385498
    5. ' i' → logprob: -4.258338451385498
    6. ' j' → logprob: -4.883338451385498
    7. '    ' → logprob: -5.508338451385498
    8. '```' → logprob: -5.758338451385498
    9. 'b' → logprob: -6.008338451385498
    10. 'a' → logprob: -6.258338451385498

Token 83: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5867730379104614
    2. 'i' (adapté à ' i') → logprob: -1.5867730379104614
    3. 'x' → logprob: -3.336772918701172
    4. ' x' → logprob: -3.461772918701172
    5. ' j' → logprob: -3.836772918701172
    6. ' k' → logprob: -3.961772918701172
    7. ' p' → logprob: -4.211772918701172
    8. ' index' → logprob: -4.211772918701172
    9. ' next' → logprob: -4.211772918701172
    10. '       ' → logprob: -4.336772918701172

Token 84: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932239532470703
    2. ' =' → logprob: -0.6932239532470703
    3. ']' → logprob: -11.31822395324707
    4. '=b' → logprob: -11.44322395324707
    5. '+=' → logprob: -11.69322395324707
    6. 'b' → logprob: -11.94322395324707
    7. 'a' → logprob: -12.31822395324707
    8. ',' → logprob: -12.44322395324707
    9. ' +=' → logprob: -12.81822395324707
    10. '=index' → logprob: -12.81822395324707

Token 85: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7133017182350159
    2. 'a' → logprob: -1.463301658630371
    3. ' b' → logprob: -1.713301658630371
    4. 'b' → logprob: -2.338301658630371
    5. 'n' → logprob: -7.088301658630371
    6. ' n' → logprob: -7.713301658630371
    7. ' ' → logprob: -8.088301658630371
    8. '	a' → logprob: -11.025801658630371
    9. 'j' → logprob: -11.213301658630371
    10. '   ' → logprob: -11.463301658630371

Token 86: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00020139472326263785
    2. '.' → logprob: -9.500201225280762
    3. 'index' → logprob: -10.000201225280762
    4. 'a' → logprob: -10.125201225280762
    5. '[i' → logprob: -11.125201225280762
    6. '.i' → logprob: -12.000201225280762
    7. ' .' → logprob: -12.625201225280762
    8. '.find' → logprob: -12.625201225280762
    9. 'i' → logprob: -12.750201225280762
    10. 'n' → logprob: -13.125201225280762

Token 87: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.0722858102526516e-05
    2. 'a' → logprob: -11.000041007995605
    3. '(' → logprob: -11.375041007995605
    4. '(loop' → logprob: -11.375041007995605
    5. '(i' → logprob: -14.250041007995605
    6. '(b' → logprob: -15.500041007995605
    7. '(
' → logprob: -17.50004005432129
    8. '(n' → logprob: -17.75004005432129
    9. ' a' → logprob: -17.87504005432129
    10. '((' → logprob: -18.12504005432129

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[j' → logprob: -15.125000953674316
    3. 'i' → logprob: -15.375000953674316
    4. '[' → logprob: -15.750000953674316
    5. '```' → logprob: -18.25
    6. ' i' → logprob: -18.5
    7. '[I' → logprob: -18.875
    8. '[
' → logprob: -19.25
    9. ' ' → logprob: -19.375
    10. '[int' → logprob: -19.625

Token 89: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0023548337630927563
    2. '])
' → logprob: -7.002354621887207
    3. '[i' → logprob: -7.627354621887207
    4. '])]' → logprob: -8.127354621887207
    5. '])+' → logprob: -8.127354621887207
    6. ']' → logprob: -9.127354621887207
    7. ')])' → logprob: -9.752354621887207
    8. ']+' → logprob: -9.877354621887207
    9. '[j' → logprob: -10.377354621887207
    10. ' ])' → logprob: -10.502354621887207

Token 90: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0026908672880381346
    2. ' if' → logprob: -6.75269079208374
    3. '
' → logprob: -7.50269079208374
    4. 'i' → logprob: -7.75269079208374
    5. '       ' → logprob: -8.127691268920898
    6. '```' → logprob: -10.502691268920898
    7. ' ' → logprob: -10.627691268920898
    8. 'not' → logprob: -10.627691268920898
    9. '<|end|>' → logprob: -10.752691268920898
    10. 't' → logprob: -11.002691268920898

Token 92: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.47505325078964233
    2. ' t' → logprob: -1.100053310394287
    3. 'i' → logprob: -3.725053310394287
    4. ' i' → logprob: -4.475053310394287
    5. ' not' → logprob: -5.600053310394287
    6. 'j' → logprob: -6.225053310394287
    7. '   ' → logprob: -6.600053310394287
    8. '    ' → logprob: -7.350053310394287
    9. ' ' → logprob: -7.600053310394287
    10. ' j' → logprob: -7.725053310394287

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005289645632728934
    2. '[j' → logprob: -7.625528812408447
    3. '[' → logprob: -10.375529289245605
    4. 'i' → logprob: -12.500529289245605
    5. '[a' → logprob: -13.625529289245605
    6. '[n' → logprob: -13.750529289245605
    7. '[index' → logprob: -14.750529289245605
    8. '```' → logprob: -15.125529289245605
    9. '[
' → logprob: -15.375529289245605
    10. ' i' → logprob: -15.375529289245605

Token 94: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.3622492849826813
    2. ']' → logprob: -1.2372492551803589
    3. ']:' → logprob: -4.612249374389648
    4. ']!=' → logprob: -5.987249374389648
    5. ']:
' → logprob: -6.987249374389648
    6. ' ]' → logprob: -8.487249374389648
    7. ']>' → logprob: -9.987249374389648
    8. '==' → logprob: -10.737249374389648
    9. ']:

' → logprob: -11.487249374389648
    10. '']==' → logprob: -11.612249374389648

Token 95: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09894638508558273
    2. ' ==' → logprob: -2.7239463329315186
    3. ':' → logprob: -3.9739463329315186
    4. '1' → logprob: -5.098946571350098
    5. '!=' → logprob: -6.848946571350098
    6. ':
' → logprob: -7.348946571350098
    7. ' ' → logprob: -7.473946571350098
    8. ' or' → logprob: -8.098946571350098
    9. '0' → logprob: -8.223946571350098
    10. '<|end|>' → logprob: -8.723946571350098

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006406738888472319
    2. ' ' → logprob: -5.256406784057617
    3. '0' → logprob: -6.756406784057617
    4. '   ' → logprob: -11.881406784057617
    5. '  ' → logprob: -14.006406784057617
    6. '    ' → logprob: -14.881406784057617
    7. '
' → logprob: -15.631406784057617
    8. '2' → logprob: -16.506406784057617
    9. '	' → logprob: -17.006406784057617
    10. '

' → logprob: -17.068906784057617

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002448893792461604
    2. ' ' → logprob: -8.875245094299316
    3. '0' → logprob: -9.250245094299316
    4. '   ' → logprob: -11.750245094299316
    5. '  ' → logprob: -15.125245094299316
    6. '    ' → logprob: -15.625245094299316
    7. '2' → logprob: -16.250244140625
    8. '           ' → logprob: -17.500244140625
    9. '     ' → logprob: -17.625244140625
    10. '       ' → logprob: -17.750244140625

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03463061526417732
    2. ':
' → logprob: -3.534630537033081
    3. ' or' → logprob: -5.40963077545166
    4. '       ' → logprob: -8.40963077545166
    5. '           ' → logprob: -9.78463077545166
    6. '   ' → logprob: -10.15963077545166
    7. ' and' → logprob: -10.40963077545166
    8. ':

' → logprob: -11.03463077545166
    9. ' :' → logprob: -11.78463077545166
    10. ':
' → logprob: -12.03463077545166

Token 99: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018931758822873235
    2. '       ' → logprob: -6.626893043518066
    3. ' break' → logprob: -8.001893043518066
    4. '   ' → logprob: -9.501893043518066
    5. 'break' → logprob: -9.626893043518066
    6. '	break' → logprob: -10.876893043518066
    7. '            
' → logprob: -11.251893043518066
    8. '               ' → logprob: -11.376893043518066
    9. '		' → logprob: -11.626893043518066
    10. '	       ' → logprob: -12.001893043518066

Token 100: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.735060453414917
    2. ' break' → logprob: -0.735060453414917
    3. 'break' (adapté à ' break') → logprob: -3.360060453414917
    4. '           ' → logprob: -5.860060691833496
    5. '   ' → logprob: -5.985060691833496
    6. '	break' → logprob: -7.360060691833496
    7. ' ' → logprob: -9.610060691833496
    8. ' loop' → logprob: -9.735060691833496
    9. '        
' → logprob: -10.360060691833496
    10. ' ' → logprob: -10.485060691833496

Token 101: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24171030521392822
    2. '       ' → logprob: -1.6167103052139282
    3. ' loop' → logprob: -4.616710186004639
    4. '
' → logprob: -5.616710186004639
    5. '    
' → logprob: -7.241710186004639
    6. ' for' → logprob: -7.991710186004639
    7. '  ' → logprob: -8.116710662841797
    8. '        
' → logprob: -8.116710662841797
    9. 'loop' → logprob: -8.991710662841797
    10. 'for' → logprob: -8.991710662841797

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47884896397590637
    2. '   ' → logprob: -1.103848934173584
    3. '
' → logprob: -3.228848934173584
    4. ' loop' → logprob: -5.228848934173584
    5. '    
' → logprob: -6.478848934173584
    6. ' for' → logprob: -7.353848934173584
    7. '        
' → logprob: -8.103849411010742
    8. '  ' → logprob: -8.728849411010742
    9. '```' → logprob: -8.978849411010742
    10. ' ' → logprob: -9.103849411010742

Token 103: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.536203920841217
    2. ' loop' → logprob: -0.911203920841217
    3. '       ' → logprob: -4.411203861236572
    4. 'loop' → logprob: -7.786203861236572
    5. ' t' → logprob: -8.78620433807373
    6. '  ' → logprob: -9.41120433807373
    7. '    ' → logprob: -9.78620433807373
    8. ' ' → logprob: -9.91120433807373
    9. '(loop' → logprob: -10.03620433807373
    10. 't' (adapté à ' t') → logprob: -10.66120433807373

Token 104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.5027299822540954e-05
    2. '[' → logprob: -9.875055313110352
    3. '[I' → logprob: -13.375055313110352
    4. '[j' → logprob: -15.000055313110352
    5. '```' → logprob: -15.000055313110352
    6. '[u' → logprob: -15.500055313110352
    7. '[int' → logprob: -16.00005531311035
    8. '[index' → logprob: -16.12505531311035
    9. '[input' → logprob: -16.25005531311035
    10. '\[' → logprob: -16.25005531311035

Token 105: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026068103034049273
    2. '=' → logprob: -6.6276068687438965
    3. ' =' → logprob: -7.5026068687438965
    4. ')' → logprob: -7.6276068687438965
    5. ']=' → logprob: -8.502606391906738
    6. ' ]' → logprob: -10.627606391906738
    7. '[' → logprob: -11.752606391906738
    8. ' ' → logprob: -12.377606391906738
    9. '])' → logprob: -15.252606391906738
    10. ',' → logprob: -15.252606391906738

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. ' ' → logprob: -16.068147659301758
    4. '＝' → logprob: -16.443147659301758
    5. ')' → logprob: -16.818147659301758
    6. ' +=' → logprob: -17.443147659301758
    7. ',' → logprob: -17.568147659301758
    8. '+=' → logprob: -18.443147659301758
    9. ' =)' → logprob: -19.068147659301758
    10. '=True' → logprob: -19.193147659301758

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.504077911376953
    4. '0' → logprob: -18.004077911376953
    5. '  ' → logprob: -19.879077911376953
    6. '    ' → logprob: -21.879077911376953
    7. '	' → logprob: -22.129077911376953
    8. ' ' → logprob: -22.129077911376953
    9. '`' → logprob: -22.254077911376953
    10. '<|end|>' → logprob: -22.629077911376953

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -17.6250057220459
    4. '0' → logprob: -17.8750057220459
    5. '2' → logprob: -19.5000057220459
    6. '  ' → logprob: -20.0000057220459
    7. '    ' → logprob: -21.5000057220459
    8. '[' → logprob: -21.6250057220459
    9. '`' → logprob: -21.7500057220459
    10. '	' → logprob: -22.0000057220459

Token 109: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011991520412266254
    2. '   ' → logprob: -4.886991500854492
    3. '
' → logprob: -6.511991500854492
    4. ',' → logprob: -6.886991500854492
    5. '```' → logprob: -7.386991500854492
    6. '<|end|>' → logprob: -7.511991500854492
    7. '(loop' → logprob: -8.886991500854492
    8. '        
' → logprob: -9.511991500854492
    9. ' loop' → logprob: -9.511991500854492
    10. '[' → logprob: -9.761991500854492

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025163685902953148
    2. '   ' → logprob: -4.025163650512695
    3. ' loop' → logprob: -5.900163650512695
    4. ',' → logprob: -6.525163650512695
    5. '
' → logprob: -7.275163650512695
    6. '<|end|>' → logprob: -7.275163650512695
    7. '```' → logprob: -8.025163650512695
    8. '(loop' → logprob: -8.150163650512695
    9. 'loop' → logprob: -8.900163650512695
    10. ' ' → logprob: -9.025163650512695

Token 111: ' loop' (ID: 11453)
  Prédit: 'loop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loop' (adapté à ' loop') → logprob: -0.023264816030859947
    2. ' loop' → logprob: -3.7732648849487305
    3. '   ' → logprob: -12.27326488494873
    4. 'a' → logprob: -12.39826488494873
    5. '
' → logprob: -12.39826488494873
    6. ' ' → logprob: -12.89826488494873
    7. '(loop' → logprob: -13.02326488494873
    8. 'append' → logprob: -15.02326488494873
    9. '  ' → logprob: -15.27326488494873
    10. '       ' → logprob: -15.39826488494873

Token 112: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.1602444350719452
    2. '[-' → logprob: -1.9102444648742676
    3. '.append' → logprob: -11.41024398803711
    4. '[' → logprob: -11.78524398803711
    5. '[js' → logprob: -14.16024398803711
    6. '```' → logprob: -15.03524398803711
    7. '[i' → logprob: -15.16024398803711
    8. '[len' → logprob: -16.03524398803711
    9. '][-' → logprob: -17.28524398803711
    10. '[s' → logprob: -17.28524398803711

Token 113: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -6.146429223008454e-05
    2. ']' → logprob: -10.12506103515625
    3. '.append' → logprob: -10.87506103515625
    4. ' ].' → logprob: -13.37506103515625
    5. ').' → logprob: -15.00006103515625
    6. '][' → logprob: -16.12506103515625
    7. '.' → logprob: -16.50006103515625
    8. ''].' → logprob: -16.75006103515625
    9. 'append' → logprob: -16.87506103515625
    10. '}.' → logprob: -17.12506103515625

Token 114: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.869017852295656e-06
    2. '.append' → logprob: -12.000006675720215
    3. ' append' → logprob: -14.250006675720215
    4. 'app' → logprob: -16.75000762939453
    5. 'appen' → logprob: -17.12500762939453
    6. '	append' → logprob: -18.62500762939453
    7. '_append' → logprob: -19.50000762939453
    8. 'Append' → logprob: -20.12500762939453
    9. 'extend' → logprob: -21.12500762939453
    10. 'add' → logprob: -23.12500762939453

Token 115: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. '(b' → logprob: -16.75
    4. 'a' → logprob: -17.25
    5. '(
' → logprob: -20.25
    6. ' (' → logprob: -21.125
    7. '((' → logprob: -21.625
    8. '(i' → logprob: -22.0
    9. '(A' → logprob: -22.0
    10. '(

' → logprob: -23.0

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.50000286102295
    3. '[j' → logprob: -14.25000286102295
    4. 'i' → logprob: -15.12500286102295
    5. '[
' → logprob: -16.500001907348633
    6. ')[' → logprob: -18.375001907348633
    7. '[a' → logprob: -18.500001907348633
    8. ' [' → logprob: -18.625001907348633
    9. '[b' → logprob: -18.625001907348633
    10. '[I' → logprob: -18.750001907348633

Token 117: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002753981971181929
    2. ')' → logprob: -8.375275611877441
    3. '])
' → logprob: -10.500275611877441
    4. ')]' → logprob: -11.625275611877441
    5. ')])' → logprob: -12.500275611877441
    6. ']' → logprob: -13.250275611877441
    7. '))' → logprob: -13.750275611877441
    8. ' ])' → logprob: -14.625275611877441
    9. '[i' → logprob: -15.375275611877441
    10. ''])' → logprob: -15.625275611877441

Token 118: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015927376225590706
    2. '<|end|>' → logprob: -4.890927314758301
    3. ']' → logprob: -5.765927314758301
    4. 'n' → logprob: -6.890927314758301
    5. '#' → logprob: -7.265927314758301
    6. ' ' → logprob: -7.390927314758301
    7. '[' → logprob: -7.515927314758301
    8. 'i' → logprob: -7.890927314758301
    9. '   ' → logprob: -8.2659273147583
    10. ',' → logprob: -8.6409273147583

Token 120: ' sum' (ID: 4215)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2649603486061096
    2. ' sum' → logprob: -1.7649602890014648
    3. ' ' → logprob: -3.639960289001465
    4. 'all' → logprob: -4.514960289001465
    5. 'sum' → logprob: -4.889960289001465
    6. ' t' → logprob: -5.139960289001465
    7. '0' → logprob: -5.514960289001465
    8. ' not' → logprob: -5.514960289001465
    9. ' min' → logprob: -6.889960289001465
    10. ' len' → logprob: -7.139960289001465

Token 121: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.4331391453742981
    2. '(loop' → logprob: -1.0581390857696533
    3. '([' → logprob: -6.308139324188232
    4. '(sum' → logprob: -6.683139324188232
    5. '(' → logprob: -7.058139324188232
    6. '(a' → logprob: -8.683138847351074
    7. 'loop' → logprob: -9.558138847351074
    8. '(min' → logprob: -9.558138847351074
    9. '(b' → logprob: -9.683138847351074
    10. 't' → logprob: -10.183138847351074

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000377049611415714
    2. ')<' → logprob: -8.50037670135498
    3. ')==' → logprob: -9.37537670135498
    4. ')!=' → logprob: -9.50037670135498
    5. '<' → logprob: -11.75037670135498
    6. ' )' → logprob: -13.25037670135498
    7. '==' → logprob: -13.37537670135498
    8. '())' → logprob: -14.00037670135498
    9. '!=' → logprob: -14.87537670135498
    10. '()' → logprob: -15.50037670135498

Token 123: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.04485955089330673
    2. '!=' → logprob: -3.4198596477508545
    3. '==' → logprob: -4.669859409332275
    4. '<n' → logprob: -7.044859409332275
    5. ' <' → logprob: -7.794859409332275
    6. ' !=' → logprob: -8.044859886169434
    7. ' ==' → logprob: -9.044859886169434
    8. '>=' → logprob: -10.794859886169434
    9. '<len' → logprob: -11.294859886169434
    10. ')' → logprob: -12.169859886169434

Token 124: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12702952325344086
    2. ' n' → logprob: -2.1270294189453125
    3. 'len' → logprob: -9.377029418945312
    4. ' len' → logprob: -11.252029418945312
    5. ' ' → logprob: -12.877029418945312
    6. '   ' → logprob: -14.502029418945312
    7. '	n' → logprob: -14.627029418945312
    8. '  ' → logprob: -16.502029418945312
    9. '(n' → logprob: -16.627029418945312
    10. '    ' → logprob: -16.877029418945312

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025043170899152756
    2. ':
' → logprob: -6.002504348754883
    3. ':return' → logprob: -11.502504348754883
    4. '   ' → logprob: -11.627504348754883
    5. '):' → logprob: -12.752504348754883
    6. '==' → logprob: -13.252504348754883
    7. ' :' → logprob: -14.002504348754883
    8. ' ==' → logprob: -14.377504348754883
    9. '=' → logprob: -14.377504348754883
    10. ' and' → logprob: -14.502504348754883

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001966816373169422
    2. '   ' → logprob: -6.251966953277588
    3. ' break' → logprob: -11.12696647644043
    4. ':' → logprob: -11.62696647644043
    5. '    ' → logprob: -13.00196647644043
    6. '      ' → logprob: -13.12696647644043
    7. '	break' → logprob: -13.25196647644043
    8. '     ' → logprob: -13.37696647644043
    9. ' ' → logprob: -13.50196647644043
    10. '           ' → logprob: -13.62696647644043

Token 127: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.07200280576944351
    2. '       ' → logprob: -2.94700288772583
    3. '   ' → logprob: -4.44700288772583
    4. 'break' (adapté à ' break') → logprob: -5.32200288772583
    5. '	break' → logprob: -8.072002410888672
    6. ' ' → logprob: -10.697002410888672
    7. '
' → logprob: -10.822002410888672
    8. '           ' → logprob: -12.197002410888672
    9. '```' → logprob: -12.197002410888672
    10. '        
' → logprob: -13.072002410888672

Token 128: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 129: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24231794476509094
    2. '+=' → logprob: -2.2423179149627686
    3. ' +=' → logprob: -2.2423179149627686
    4. '=' → logprob: -6.367318153381348
    5. ' +' → logprob: -6.992318153381348
    6. ' =' → logprob: -9.742318153381348
    7. '+
' → logprob: -11.117318153381348
    8. '   ' → logprob: -11.367318153381348
    9. ')' → logprob: -11.742318153381348
    10. '-' → logprob: -11.742318153381348

Token 132: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '0' → logprob: -18.125261306762695
    4. '+' → logprob: -18.375261306762695
    5. ' -' → logprob: -18.750261306762695
    6. '-' → logprob: -19.125261306762695
    7. '<|end|>' → logprob: -20.250261306762695
    8. '１' → logprob: -20.375261306762695
    9. '   ' → logprob: -20.500261306762695
    10. '
' → logprob: -21.000261306762695

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -17.750001907348633
    4. '0' → logprob: -19.500001907348633
    5. '
' → logprob: -19.750001907348633
    6. '+' → logprob: -20.125001907348633
    7. '<|end|>' → logprob: -20.375001907348633
    8. '```' → logprob: -20.500001907348633
    9. '  ' → logprob: -20.750001907348633
    10. '۱' → logprob: -20.750001907348633

Token 134: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: 'cost' (ID: 33457)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20420965552330017
    2. '=' → logprob: -1.7042096853256226
    3. ' +=' → logprob: -6.079209804534912
    4. 's' → logprob: -8.954209327697754
    5. '+=' → logprob: -8.954209327697754
    6. '[' → logprob: -9.204209327697754
    7. '_' → logprob: -9.579209327697754
    8. '(' → logprob: -10.954209327697754
    9. ' ' → logprob: -11.204209327697754
    10. ' -=' → logprob: -11.954209327697754

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0070604849606752396
    2. ' ' → logprob: -5.382060527801514
    3. 'sum' → logprob: -6.382060527801514
    4. 'float' → logprob: -8.507060050964355
    5. ' sum' → logprob: -9.007060050964355
    6. 'len' → logprob: -9.382060050964355
    7. 'n' → logprob: -9.757060050964355
    8. 'max' → logprob: -9.757060050964355
    9. '100' → logprob: -10.007060050964355
    10. '1' → logprob: -10.007060050964355

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026712571270763874
    2. 'sum' → logprob: -6.127671241760254
    3. 'n' → logprob: -8.752671241760254
    4. 'len' → logprob: -9.002671241760254
    5. '1' → logprob: -9.877671241760254
    6. ' ' → logprob: -10.252671241760254
    7. 'max' → logprob: -10.502671241760254
    8. 'float' → logprob: -10.627671241760254
    9. '[' → logprob: -11.627671241760254
    10. 'min' → logprob: -11.752671241760254

Token 139: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.237575963139534
    2. '
' → logprob: -1.6125760078430176
    3. ' for' → logprob: -4.737576007843018
    4. '<|end|>' → logprob: -5.737576007843018
    5. '\n' → logprob: -10.61257553100586
    6. ' 
' → logprob: -10.86257553100586
    7. '  
' → logprob: -11.23757553100586
    8. ')' → logprob: -11.73757553100586
    9. '<|end|>' → logprob: -11.73757553100586
    10. '*' → logprob: -11.98757553100586

Token 140: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02584885247051716
    2. 'global' → logprob: -4.025848865509033
    3. 'm' → logprob: -6.150848865509033
    4. 'M' → logprob: -6.525848865509033
    5. 'min' → logprob: -6.650848865509033
    6. 's' → logprob: -7.025848865509033
    7. 'sum' → logprob: -8.400848388671875
    8. ' for' → logprob: -8.650848388671875
    9. 'S' → logprob: -8.650848388671875
    10. '
' → logprob: -9.025848388671875

Token 141: ' i' (ID: 575)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5758100748062134
    2. 'i' → logprob: -1.5758100748062134
    3. 'x' → logprob: -2.950809955596924
    4. ' l' → logprob: -3.200809955596924
    5. 'c' → logprob: -3.950809955596924
    6. ' i' → logprob: -3.950809955596924
    7. 'lst' → logprob: -4.450809955596924
    8. 'loop' → logprob: -4.700809955596924
    9. 'li' → logprob: -4.950809955596924
    10. 'L' → logprob: -5.075809955596924

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.523167073726654
    2. 'in' → logprob: -0.898167073726654
    3. ' ' → logprob: -11.39816665649414
    4. '	in' → logprob: -11.64816665649414
    5. 'n' → logprob: -11.89816665649414
    6. ',' → logprob: -12.27316665649414
    7. '   ' → logprob: -12.77316665649414
    8. '  ' → logprob: -13.14816665649414
    9. 'range' → logprob: -13.64816665649414
    10. 'import' → logprob: -13.77316665649414

Token 143: ' loop' (ID: 11453)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03592892736196518
    2. 'loop' → logprob: -3.535928964614868
    3. ' range' → logprob: -5.160928726196289
    4. ' loop' → logprob: -7.785928726196289
    5. 'cost' → logprob: -12.160928726196289
    6. '(loop' → logprob: -14.535928726196289
    7. ' ' → logprob: -15.285928726196289
    8. '   ' → logprob: -15.410928726196289
    9. '(range' → logprob: -15.410928726196289
    10. 'loops' → logprob: -15.410928726196289

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04561137408018112
    2. ':
' → logprob: -3.1706113815307617
    3. ' in' → logprob: -6.420611381530762
    4. '   ' → logprob: -7.920611381530762
    5. ',' → logprob: -8.670611381530762
    6. ' :' → logprob: -8.795611381530762
    7. 'in' → logprob: -9.170611381530762
    8. '[' → logprob: -9.420611381530762
    9. '):' → logprob: -10.920611381530762
    10. '):
' → logprob: -11.295611381530762

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007304302882403135
    2. ' if' → logprob: -6.3823041915893555
    3. 'cost' → logprob: -6.3823041915893555
    4. ' cost' → logprob: -6.5073041915893555
    5. ' s' → logprob: -6.8823041915893555
    6. 's' → logprob: -7.5073041915893555
    7. 'if' → logprob: -8.632304191589355
    8. ' i' → logprob: -8.757304191589355
    9. ' min' → logprob: -9.382304191589355
    10. 'min' → logprob: -9.507304191589355

Token 146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25118547677993774
    2. 'm' → logprob: -2.001185417175293
    3. ' if' → logprob: -3.876185417175293
    4. 'length' → logprob: -4.126185417175293
    5. 'l' → logprob: -4.251185417175293
    6. 'cost' → logprob: -4.501185417175293
    7. '   ' → logprob: -4.876185417175293
    8. 's' → logprob: -5.001185417175293
    9. 'x' → logprob: -6.126185417175293
    10. 'len' → logprob: -6.626185417175293

Token 147: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03807041049003601
    2. ' len' → logprob: -3.2880704402923584
    3. '   ' → logprob: -11.038070678710938
    4. '(len' → logprob: -11.788070678710938
    5. ' ' → logprob: -12.913070678710938
    6. '  ' → logprob: -13.288070678710938
    7. '	len' → logprob: -14.288070678710938
    8. '1' → logprob: -15.038070678710938
    9. '    ' → logprob: -16.288070678710938
    10. ',len' → logprob: -17.538070678710938

Token 148: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.500004768371582
    3. ' (' → logprob: -13.750004768371582
    4. 'i' → logprob: -16.6250057220459
    5. '(I' → logprob: -17.2500057220459
    6. '[i' → logprob: -19.1250057220459
    7. ' i' → logprob: -19.2500057220459
    8. '(
' → logprob: -19.8750057220459
    9. '(len' → logprob: -20.3750057220459
    10. '>' → logprob: -21.5000057220459

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.047958411276340485
    2. ')>' → logprob: -3.4229583740234375
    3. '>' → logprob: -4.2979583740234375
    4. ' >' → logprob: -7.9229583740234375
    5. ' )' → logprob: -8.422958374023438
    6. ')==' → logprob: -10.922958374023438
    7. '==' → logprob: -12.547958374023438
    8. '   ' → logprob: -12.672958374023438
    9. '）' → logprob: -13.422958374023438
    10. '```' → logprob: -13.797958374023438

Token 150: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.18005870282649994
    2. ' >' → logprob: -1.8050587177276611
    3. '<=' → logprob: -9.180058479309082
    4. '==' → logprob: -9.430058479309082
    5. ' <=' → logprob: -9.430058479309082
    6. ' ==' → logprob: -11.055058479309082
    7. ' ' → logprob: -11.555058479309082
    8. '<' → logprob: -11.805058479309082
    9. '>=' → logprob: -12.305058479309082
    10. ' <' → logprob: -12.555058479309082

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027694785967469215
    2. ' ' → logprob: -8.375276565551758
    3. '0' → logprob: -10.000276565551758
    4. '2' → logprob: -14.000276565551758
    5. '   ' → logprob: -16.375276565551758
    6. '```' → logprob: -17.625276565551758
    7. '１' → logprob: -18.187776565551758
    8. '>' → logprob: -18.937776565551758
    9. '  ' → logprob: -19.062776565551758
    10. '۱' → logprob: -19.062776565551758

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.416665640543215e-05
    2. '0' → logprob: -10.50003433227539
    3. ' ' → logprob: -12.00003433227539
    4. '2' → logprob: -15.25003433227539
    5. '   ' → logprob: -16.75003433227539
    6. '```' → logprob: -16.87503433227539
    7. '１' → logprob: -17.62503433227539
    8. '
' → logprob: -17.68753433227539
    9. '۱' → logprob: -18.62503433227539
    10. '``' → logprob: -18.68753433227539

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20742809772491455
    2. ':
' → logprob: -1.9574280977249146
    3. '   ' → logprob: -3.332427978515625
    4. '       ' → logprob: -4.582427978515625
    5. 'continue' → logprob: -10.082427978515625
    6. '	continue' → logprob: -10.082427978515625
    7. ' continue' → logprob: -10.332427978515625
    8. ':
' → logprob: -11.082427978515625
    9. ' :' → logprob: -11.957427978515625
    10. ' ' → logprob: -11.957427978515625

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15177389979362488
    2. '   ' → logprob: -2.0267739295959473
    3. 'continue' → logprob: -5.276773929595947
    4. ' continue' → logprob: -6.151773929595947
    5. '	continue' → logprob: -7.276773929595947
    6. ':' → logprob: -7.276773929595947
    7. ':
' → logprob: -8.651773452758789
    8. '     ' → logprob: -9.776773452758789
    9. '	' → logprob: -9.776773452758789
    10. '	   ' → logprob: -10.276773452758789

Token 155: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.03427312150597572
    2. '   ' → logprob: -3.784273147583008
    3. ' continue' → logprob: -4.534273147583008
    4. 'cost' → logprob: -9.284273147583008
    5. ' ' → logprob: -9.909273147583008
    6. '	continue' → logprob: -10.034273147583008
    7. 'pass' → logprob: -10.784273147583008
    8. ' cost' → logprob: -12.284273147583008
    9. 'continu' → logprob: -12.284273147583008
    10. '       ' → logprob: -12.409273147583008

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006808568723499775
    2. '
' → logprob: -5.506808757781982
    3. '    
' → logprob: -6.631808757781982
    4. '       ' → logprob: -7.881808757781982
    5. ' s' → logprob: -8.381808280944824
    6. '    ' → logprob: -9.006808280944824
    7. ',' → logprob: -9.256808280944824
    8. 's' → logprob: -9.631808280944824
    9. '  ' → logprob: -9.756808280944824
    10. '   
' → logprob: -9.756808280944824

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01898193173110485
    2. ' s' → logprob: -5.14398193359375
    3. 's' → logprob: -5.26898193359375
    4. 'm' → logprob: -5.76898193359375
    5. 'sum' → logprob: -6.26898193359375
    6. 'else' → logprob: -7.26898193359375
    7. ' m' → logprob: -7.76898193359375
    8. ' sum' → logprob: -8.01898193359375
    9. 'temp' → logprob: -8.26898193359375
    10. 'global' → logprob: -8.64398193359375

Token 158: ' ps' (ID: 10942)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2533938884735107
    2. 's' → logprob: -1.2533938884735107
    3. 'sum' → logprob: -1.5033938884735107
    4. 'local' → logprob: -3.1283938884735107
    5. 'cost' → logprob: -3.5033938884735107
    6. 'x' → logprob: -4.37839412689209
    7. 'mn' → logprob: -4.37839412689209
    8. '   ' → logprob: -4.50339412689209
    9. 'temp' → logprob: -4.50339412689209
    10. 'i' → logprob: -4.50339412689209

Token 159: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7252767086029053
    2. ' =' → logprob: -0.9752767086029053
    3. '=' → logprob: -2.1002767086029053
    4. '=sum' → logprob: -5.600276947021484
    5. 'ums' → logprob: -6.100276947021484
    6. '=min' → logprob: -6.350276947021484
    7. 'sum' → logprob: -6.475276947021484
    8. 'uml' → logprob: -6.975276947021484
    9. 'v' → logprob: -7.350276947021484
    10. 'ort' → logprob: -7.350276947021484

Token 160: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.337187260389328
    2. 'min' → logprob: -1.3371872901916504
    3. 'sorted' → logprob: -4.21218729019165
    4. ' min' → logprob: -6.08718729019165
    5. ' sum' → logprob: -6.33718729019165
    6. 'float' → logprob: -6.71218729019165
    7. '0' → logprob: -6.83718729019165
    8. '[min' → logprob: -7.46218729019165
    9. '[]' → logprob: -7.83718729019165
    10. 'i' → logprob: -8.337186813354492

Token 161: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.125000953674316
    3. ' (' → logprob: -17.5
    4. 'i' → logprob: -17.5
    5. '(a' → logprob: -18.875
    6. '(
' → logprob: -19.625
    7. '([' → logprob: -20.125
    8. '(s' → logprob: -20.25
    9. '[i' → logprob: -20.5
    10. '(I' → logprob: -20.75

Token 162: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07106570899486542
    2. ')
' → logprob: -2.696065664291382
    3. ')-' → logprob: -7.196065902709961
    4. ' )' → logprob: -8.821065902709961
    5. ')+' → logprob: -8.946065902709961
    6. ' )
' → logprob: -10.321065902709961
    7. '-' → logprob: -11.696065902709961
    8. '   ' → logprob: -11.696065902709961
    9. ')
' → logprob: -11.946065902709961
    10. '()' → logprob: -12.321065902709961

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04725436493754387
    2. '
' → logprob: -3.9222543239593506
    3. 'm' → logprob: -4.54725456237793
    4. '-' → logprob: -5.42225456237793
    5. 'ms' → logprob: -5.67225456237793
    6. '+' → logprob: -6.29725456237793
    7. 'min' → logprob: -6.79725456237793
    8. ')' → logprob: -7.79725456237793
    9. '*' → logprob: -8.04725456237793
    10. '    
' → logprob: -8.17225456237793

Token 164: ' pl' (ID: 633)
  Prédit: 'mn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mn' → logprob: -0.8423910140991211
    2. 'm' → logprob: -0.9673910140991211
    3. 'mi' → logprob: -1.842391014099121
    4. 'ms' → logprob: -4.217391014099121
    5. 'min' → logprob: -5.592391014099121
    6. 'l' → logprob: -6.217391014099121
    7. '   ' → logprob: -6.342391014099121
    8. 'mx' → logprob: -6.342391014099121
    9. 'sm' → logprob: -7.592391014099121
    10. 'ss' → logprob: -7.592391014099121

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6902702450752258
    2. ' =' → logprob: -0.9402702450752258
    3. 'en' → logprob: -2.565270185470581
    4. 'min' → logprob: -4.31527042388916
    5. 'us' → logprob: -4.69027042388916
    6. '=len' → logprob: -5.56527042388916
    7. '=min' → logprob: -6.44027042388916
    8. 's' → logprob: -7.69027042388916
    9. 'an' → logprob: -7.81527042388916
    10. 'ength' → logprob: -7.94027042388916

Token 166: ' len' (ID: 4631)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.10493476688861847
    2. 'len' → logprob: -3.1049346923828125
    3. ' min' → logprob: -3.2299346923828125
    4. 'sum' → logprob: -4.7299346923828125
    5. '(min' → logprob: -5.9799346923828125
    6. 'float' → logprob: -6.2299346923828125
    7. ' len' → logprob: -7.1049346923828125
    8. ' sum' → logprob: -8.229934692382812
    9. 'ps' → logprob: -8.479934692382812
    10. '(len' → logprob: -8.604934692382812

Token 167: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.25
    3. '(I' → logprob: -20.875
    4. '(ii' → logprob: -21.0
    5. '[i' → logprob: -21.125
    6. 'i' → logprob: -21.25
    7. ' (' → logprob: -21.5
    8. '(a' → logprob: -22.5
    9. '(s' → logprob: -22.625
    10. '(in' → logprob: -23.125

Token 168: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048673778772354126
    2. ')
' → logprob: -3.0486738681793213
    3. '   ' → logprob: -9.798673629760742
    4. ' )' → logprob: -11.673673629760742
    5. ')-' → logprob: -11.798673629760742
    6. ')

' → logprob: -12.548673629760742
    7. ')+' → logprob: -12.923673629760742
    8. ')*' → logprob: -13.173673629760742
    9. ')
' → logprob: -13.173673629760742
    10. ' )
' → logprob: -13.423673629760742

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017763269133865833
    2. '
' → logprob: -7.251776218414307
    3. '    
' → logprob: -8.626776695251465
    4. 'ms' → logprob: -9.001776695251465
    5. 'min' → logprob: -9.126776695251465
    6. 'global' → logprob: -9.251776695251465
    7. 'm' → logprob: -9.251776695251465
    8. '```' → logprob: -9.751776695251465
    9. 'gs' → logprob: -9.876776695251465
    10. 'import' → logprob: -9.876776695251465

Token 170: ' pm' (ID: 10074)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2550112009048462
    2. 'ms' → logprob: -1.5050112009048462
    3. 'mi' → logprob: -1.5050112009048462
    4. 'mn' → logprob: -1.8800112009048462
    5. 'sm' → logprob: -3.8800110816955566
    6. 'ml' → logprob: -4.005011081695557
    7. 'min' → logprob: -4.380011081695557
    8. 'i' → logprob: -4.630011081695557
    9. 'gm' → logprob: -5.255011081695557
    10. 'lm' → logprob: -5.380011081695557

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3193017244338989
    2. 'in' → logprob: -1.569301724433899
    3. '=' → logprob: -2.8193016052246094
    4. 'i' → logprob: -6.319301605224609
    5. 'ax' → logprob: -6.319301605224609
    6. '=min' → logprob: -7.069301605224609
    7. 'p' → logprob: -7.819301605224609
    8. 'v' → logprob: -8.94430160522461
    9. 'a' → logprob: -8.94430160522461
    10. 'n' → logprob: -9.56930160522461

Token 172: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.34850844740867615
    2. ' min' → logprob: -1.2235084772109985
    3. '   ' → logprob: -10.598508834838867
    4. ' ' → logprob: -11.223508834838867
    5. '	min' → logprob: -11.473508834838867
    6. '  ' → logprob: -11.598508834838867
    7. '(min' → logprob: -13.473508834838867
    8. 'max' → logprob: -14.098508834838867
    9. '[min' → logprob: -14.223508834838867
    10. ' minimum' → logprob: -14.723508834838867

Token 173: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.875
    3. 'i' → logprob: -16.625
    4. '(a' → logprob: -17.875
    5. '(I' → logprob: -19.625
    6. '(
' → logprob: -20.0
    7. '[i' → logprob: -21.0
    8. 'a' → logprob: -21.25
    9. '(min' → logprob: -21.375
    10. '(ii' → logprob: -21.5

Token 174: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07025761902332306
    2. ')' → logprob: -2.6952576637268066
    3. '   ' → logprob: -8.570257186889648
    4. '())
' → logprob: -9.320257186889648
    5. ' )
' → logprob: -11.320257186889648
    6. '()' → logprob: -11.695257186889648
    7. ')
' → logprob: -11.820257186889648
    8. '())' → logprob: -12.320257186889648
    9. '()
' → logprob: -12.695257186889648
    10. ')

' → logprob: -13.195257186889648

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10279019922018051
    2. '
' → logprob: -2.477790117263794
    3. ' cost' → logprob: -5.352790355682373
    4. 'cost' → logprob: -5.477790355682373
    5. '    
' → logprob: -6.102790355682373
    6. '<|end|>' → logprob: -7.727790355682373
    7. '```' → logprob: -7.852790355682373
    8. ' 
' → logprob: -8.227789878845215
    9. '    ' → logprob: -8.602789878845215
    10. '#' → logprob: -8.602789878845215

Token 176: ' p' (ID: 275)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.6225666999816895
    2. 'global' → logprob: -1.7475666999816895
    3. 'gs' → logprob: -1.9975666999816895
    4. 'if' → logprob: -2.3725666999816895
    5. 'gl' → logprob: -2.4975666999816895
    6. 'gm' → logprob: -2.4975666999816895
    7. 'cm' → logprob: -3.1225666999816895
    8. '   ' → logprob: -3.9975666999816895
    9. 'sm' → logprob: -4.2475666999816895
    10. 'g' → logprob: -4.2475666999816895

Token 177: '1' (ID: 16)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.45672503113746643
    2. 'm' → logprob: -1.956725001335144
    3. 'min' → logprob: -2.0817251205444336
    4. ' =' → logprob: -3.8317251205444336
    5. 'in' → logprob: -4.456725120544434
    6. '=' → logprob: -4.456725120544434
    7. 'p' → logprob: -4.706725120544434
    8. 'pm' → logprob: -5.081725120544434
    9. 'l' → logprob: -5.331725120544434
    10. '_cost' → logprob: -5.581725120544434

Token 178: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14286044239997864
    2. '=' → logprob: -2.0178604125976562
    3. 's' → logprob: -8.892860412597656
    4. 'r' → logprob: -11.267860412597656
    5. '1' → logprob: -11.392860412597656
    6. ' ' → logprob: -12.267860412597656
    7. '=s' → logprob: -12.767860412597656
    8. 'sum' → logprob: -13.267860412597656
    9. ' =
' → logprob: -13.517860412597656
    10. 'l' → logprob: -13.767860412597656

Token 179: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.09484794735908508
    2. ' ps' → logprob: -2.9698479175567627
    3. 'pm' → logprob: -4.219848155975342
    4. 'cost' → logprob: -4.344848155975342
    5. '(ps' → logprob: -5.094848155975342
    6. ' cost' → logprob: -6.469848155975342
    7. 'min' → logprob: -6.469848155975342
    8. 'sum' → logprob: -7.469848155975342
    9. ' pm' → logprob: -7.719848155975342
    10. '(' → logprob: -8.094847679138184

Token 180: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6090490818023682
    2. ' -' → logprob: -0.8590490818023682
    3. '+' → logprob: -3.609049081802368
    4. ' +' → logprob: -5.234048843383789
    5. '-p' → logprob: -9.359048843383789
    6. '-pl' → logprob: -10.984048843383789
    7. '-(' → logprob: -11.109048843383789
    8. '+p' → logprob: -11.734048843383789
    9. 'pm' → logprob: -11.984048843383789
    10. ' ' → logprob: -12.359048843383789

Token 181: ' (' (ID: 350)
  Prédit: '(pm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pm' → logprob: -0.58235764503479
    2. '(min' → logprob: -0.95735764503479
    3. '(p' → logprob: -3.70735764503479
    4. 'min' → logprob: -4.082357406616211
    5. 'pm' → logprob: -5.082357406616211
    6. '(pl' → logprob: -5.332357406616211
    7. ' (' → logprob: -5.707357406616211
    8. ' min' → logprob: -7.207357406616211
    9. '(' → logprob: -7.707357406616211
    10. ' pm' → logprob: -8.582357406616211

Token 182: 'pl' (ID: 528)
  Prédit: '(pm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pm' → logprob: -0.0022544567473232746
    2. '(pl' → logprob: -6.252254486083984
    3. '(min' → logprob: -8.752254486083984
    4. '(p' → logprob: -9.252254486083984
    5. 'pm' → logprob: -10.127254486083984
    6. '(ps' → logprob: -11.002254486083984
    7. '(' → logprob: -12.502254486083984
    8. 'min' → logprob: -12.502254486083984
    9. ' (' → logprob: -12.502254486083984
    10. '(pd' → logprob: -14.002254486083984

Token 183: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6023313999176025
    2. ' -' → logprob: -1.4773313999176025
    3. '+' → logprob: -1.7273313999176025
    4. ' +' → logprob: -3.8523313999176025
    5. '*' → logprob: -4.227331161499023
    6. ')' → logprob: -4.852331161499023
    7. ')*' → logprob: -6.477331161499023
    8. ' *' → logprob: -6.977331161499023
    9. ' ' → logprob: -8.477331161499023
    10. '   ' → logprob: -9.852331161499023

Token 184: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3136556148529053
    2. '2' → logprob: -1.3136556148529053
    3. ' ' → logprob: -7.938655853271484
    4. ')' → logprob: -10.563655853271484
    5. '   ' → logprob: -11.938655853271484
    6. '```' → logprob: -13.188655853271484
    7. '
' → logprob: -14.063655853271484
    8. '  ' → logprob: -14.438655853271484
    9. ')
' → logprob: -15.188655853271484
    10. ' ' → logprob: -15.813655853271484

Token 185: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04862869903445244
    2. '2' → logprob: -3.048628807067871
    3. ' ' → logprob: -10.173628807067871
    4. ')' → logprob: -13.048628807067871
    5. '   ' → logprob: -15.048628807067871
    6. '```' → logprob: -15.048628807067871
    7. '
' → logprob: -15.423628807067871
    8. '  ' → logprob: -16.736127853393555
    9. '3' → logprob: -17.361127853393555
    10. '0' → logprob: -18.298627853393555

Token 186: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00772196426987648
    2. ')*' → logprob: -4.882721900939941
    3. ' )' → logprob: -9.257721900939941
    4. '*' → logprob: -10.882721900939941
    5. ')
' → logprob: -14.757721900939941
    6. '*)' → logprob: -14.882721900939941
    7. '）' → logprob: -15.257721900939941
    8. ' ' → logprob: -15.757721900939941
    9. ' ' → logprob: -16.007722854614258
    10. ' *' → logprob: -16.132722854614258

Token 187: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10021529346704483
    2. ' *' → logprob: -2.350215196609497
    3. ' ' → logprob: -12.725214958190918
    4. ' ' → logprob: -12.850214958190918
    5. '*p' → logprob: -13.600214958190918
    6. '**' → logprob: -14.350214958190918
    7. '```' → logprob: -14.975214958190918
    8. '   ' → logprob: -15.100214958190918
    9. '  ' → logprob: -15.725214958190918
    10. ')' → logprob: -15.850214958190918

Token 188: ' pm' (ID: 10074)
  Prédit: 'pm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pm' → logprob: -0.0003360582049936056
    2. ' pm' → logprob: -8.000335693359375
    3. '(pm' → logprob: -14.875335693359375
    4. '	pm' → logprob: -16.000335693359375
    5. 'min' → logprob: -16.750335693359375
    6. '_pm' → logprob: -18.000335693359375
    7. 'pmn' → logprob: -18.875335693359375
    8. 'p' → logprob: -19.750335693359375
    9. 'cm' → logprob: -20.000335693359375
    10. '.pm' → logprob: -20.125335693359375

Token 189: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7114489078521729
    2. 'p' → logprob: -0.8364489078521729
    3. '   ' → logprob: -2.961448907852173
    4. ' p' → logprob: -4.211448669433594
    5. '+' → logprob: -5.336448669433594
    6. '<|end|>' → logprob: -5.836448669433594
    7. '    
' → logprob: -8.336448669433594
    8. '+p' → logprob: -8.586448669433594
    9. ' ' → logprob: -8.586448669433594
    10. '1' → logprob: -8.711448669433594

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06593921780586243
    2. '
' → logprob: -2.81593918800354
    3. ' p' → logprob: -6.440939426422119
    4. 'p' → logprob: -6.565939426422119
    5. ' ' → logprob: -8.065938949584961
    6. '    
' → logprob: -8.815938949584961
    7. '  ' → logprob: -9.315938949584961
    8. '<|end|>' → logprob: -9.565938949584961
    9. '```' → logprob: -9.690938949584961
    10. ' 
' → logprob: -9.690938949584961

Token 191: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.33777812123298645
    2. 'p' (adapté à ' p') → logprob: -1.587778091430664
    3. '   ' → logprob: -2.587778091430664
    4. '
' → logprob: -5.462778091430664
    5. ' ' → logprob: -6.462778091430664
    6. ' 
' → logprob: -7.962778091430664
    7. ',' → logprob: -8.837778091430664
    8. '+' → logprob: -8.837778091430664
    9. ' +' → logprob: -9.212778091430664
    10. '  ' → logprob: -9.337778091430664

Token 192: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002158146962756291
    2. '1' → logprob: -9.250215530395508
    3. 'r' → logprob: -9.625215530395508
    4. 'l' → logprob: -10.625215530395508
    5. ' =' → logprob: -11.500215530395508
    6. '=' → logprob: -11.875215530395508
    7. 's' → logprob: -12.500215530395508
    8. '3' → logprob: -13.500215530395508
    9. '0' → logprob: -13.750215530395508
    10. 'p' → logprob: -13.875215530395508

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ' =
' → logprob: -17.773244857788086
    4. '＝' → logprob: -17.898244857788086
    5. ' ' → logprob: -18.523244857788086
    6. ',' → logprob: -18.648244857788086
    7. ' =(' → logprob: -19.898244857788086
    8. ' =)' → logprob: -19.898244857788086
    9. 'p' → logprob: -20.148244857788086
    10. ' =
' → logprob: -20.148244857788086

Token 194: ' ps' (ID: 10942)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.0025512888096272945
    2. ' ps' → logprob: -6.002551078796387
    3. '   ' → logprob: -10.127551078796387
    4. 'pm' → logprob: -11.252551078796387
    5. ' ' → logprob: -11.877551078796387
    6. '  ' → logprob: -13.252551078796387
    7. 'p' → logprob: -13.502551078796387
    8. '(ps' → logprob: -13.502551078796387
    9. '	ps' → logprob: -13.627551078796387
    10. '    ' → logprob: -13.627551078796387

Token 195: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0297551192343235
    2. '+' → logprob: -3.529755115509033
    3. ' +
' → logprob: -13.654755592346191
    4. ' ' → logprob: -13.779755592346191
    5. '```' → logprob: -14.279755592346191
    6. ' +(' → logprob: -14.529755592346191
    7. '+(' → logprob: -15.154755592346191
    8. ' ' → logprob: -15.154755592346191
    9. ' plus' → logprob: -15.654755592346191
    10. '   ' → logprob: -16.029754638671875

Token 196: ' pm' (ID: 10074)
  Prédit: 'pm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pm' → logprob: -0.35614436864852905
    2. 'min' → logprob: -1.2311444282531738
    3. 'pl' → logprob: -5.231144428253174
    4. ' pm' → logprob: -6.356144428253174
    5. ' min' → logprob: -7.981144428253174
    6. ' pl' → logprob: -9.731143951416016
    7. 'm' → logprob: -10.356143951416016
    8. ' ' → logprob: -10.606143951416016
    9. '(min' → logprob: -10.606143951416016
    10. '(pm' → logprob: -10.731143951416016

Token 197: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16025348007678986
    2. '+' → logprob: -1.9102535247802734
    3. '+(' → logprob: -11.785253524780273
    4. ' ' → logprob: -11.785253524780273
    5. ' +(' → logprob: -12.535253524780273
    6. 'import' → logprob: -13.035253524780273
    7. '-' → logprob: -13.660253524780273
    8. '+
' → logprob: -13.785253524780273
    9. ' +
' → logprob: -13.910253524780273
    10. '```' → logprob: -14.285253524780273

Token 198: ' (' (ID: 350)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.25340837240219116
    2. 'min' → logprob: -1.503408432006836
    3. '(' → logprob: -7.628408432006836
    4. '2' → logprob: -7.753408432006836
    5. ' (' → logprob: -8.503408432006836
    6. ' min' → logprob: -8.753408432006836
    7. '(pl' → logprob: -9.378408432006836
    8. ' ' → logprob: -10.753408432006836
    9. '(m' → logprob: -10.878408432006836
    10. '(loop' → logprob: -11.003408432006836

Token 199: 'pl' (ID: 528)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.28803932666778564
    2. 'pl' → logprob: -2.038039207458496
    3. '(pl' → logprob: -2.663039207458496
    4. '(min' → logprob: -3.038039207458496
    5. ' min' → logprob: -7.663039207458496
    6. 'pm' → logprob: -7.788039207458496
    7. '2' → logprob: -8.288039207458496
    8. 'len' → logprob: -8.413039207458496
    9. '(pm' → logprob: -8.538039207458496
    10. '(' → logprob: -8.663039207458496

Token 200: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4690368175506592
    2. ' -' → logprob: -1.2190368175506592
    3. '+' → logprob: -3.469036817550659
    4. ')' → logprob: -3.719036817550659
    5. ' +' → logprob: -4.094037055969238
    6. ' ' → logprob: -5.344037055969238
    7. '   ' → logprob: -6.969037055969238
    8. '*' → logprob: -7.469037055969238
    9. '```' → logprob: -8.969037055969238
    10. '  ' → logprob: -9.469037055969238

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.875004768371582
    3. '
' → logprob: -13.750004768371582
    4. '+' → logprob: -14.375004768371582
    5. '   ' → logprob: -15.125004768371582
    6. '```' → logprob: -15.500004768371582
    7. ' ' → logprob: -16.5000057220459
    8. '

' → logprob: -16.8750057220459
    9. '  ' → logprob: -17.0000057220459
    10. '{' → logprob: -17.3750057220459

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '
' → logprob: -14.250003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '```' → logprob: -17.000003814697266
    6. '  ' → logprob: -17.625003814697266
    7. '+' → logprob: -18.125003814697266
    8. '１' → logprob: -18.500003814697266
    9. '

' → logprob: -18.625003814697266
    10. '{
' → logprob: -18.875003814697266

Token 203: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006696671480312943
    2. ')*' → logprob: -7.750669479370117
    3. ' )' → logprob: -8.375669479370117
    4. '*' → logprob: -12.250669479370117
    5. ' ' → logprob: -13.625669479370117
    6. '）' → logprob: -14.250669479370117
    7. '   ' → logprob: -14.375669479370117
    8. '-' → logprob: -15.000669479370117
    9. '*)' → logprob: -15.125669479370117
    10. ' -' → logprob: -15.375669479370117

Token 204: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1806938350200653
    2. ' *' → logprob: -1.8056938648223877
    3. ' ' → logprob: -7.305693626403809
    4. '   ' → logprob: -8.805693626403809
    5. ')' → logprob: -10.055693626403809
    6. '  ' → logprob: -10.430693626403809
    7. ')*' → logprob: -10.930693626403809
    8. '```' → logprob: -10.930693626403809
    9. ' ' → logprob: -12.305693626403809
    10. '**' → logprob: -12.430693626403809

Token 205: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0003361774142831564
    2. ' min' → logprob: -8.000336647033691
    3. '[min' → logprob: -14.500336647033691
    4. '(min' → logprob: -16.125335693359375
    5. '	min' → logprob: -16.750335693359375
    6. '
' → logprob: -17.125335693359375
    7. 'n' → logprob: -18.125335693359375
    8. 'm' → logprob: -18.875335693359375
    9. '   ' → logprob: -19.625335693359375
    10. ' ' → logprob: -20.000335693359375

Token 206: 'p' (ID: 79)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4129539132118225
    2. 'p' → logprob: -1.1629538536071777
    3. '(min' → logprob: -3.6629538536071777
    4. '[min' → logprob: -9.787954330444336
    5. 'a' → logprob: -11.537954330444336
    6. 'b' → logprob: -12.162954330444336
    7. 'm' → logprob: -12.412954330444336
    8. '_min' → logprob: -12.537954330444336
    9. '```' → logprob: -12.787954330444336
    10. '(a' → logprob: -13.787954330444336

Token 207: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6389420628547668
    2. 'if' → logprob: -1.138942003250122
    3. '   ' → logprob: -2.013942003250122
    4. '
' → logprob: -4.888942241668701
    5. 'cost' → logprob: -5.013942241668701
    6. ' cost' → logprob: -6.638942241668701
    7. ')' → logprob: -7.388942241668701
    8. ')
' → logprob: -7.888942241668701
    9. '<|end|>' → logprob: -7.888942241668701
    10. '    
' → logprob: -8.388941764831543

Token 208: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.2844128906726837
    2. '   ' → logprob: -1.7844128608703613
    3. ' cost' → logprob: -2.5344128608703613
    4. 'if' → logprob: -9.28441333770752
    5. ' if' → logprob: -10.15941333770752
    6. '  ' → logprob: -10.28441333770752
    7. '    ' → logprob: -10.53441333770752
    8. '
' → logprob: -10.65941333770752
    9. '_cost' → logprob: -10.78441333770752
    10. '-cost' → logprob: -10.78441333770752

Token 209: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6887751817703247
    2. 'cost' (adapté à ' cost') → logprob: -0.9387751817703247
    3. ' if' → logprob: -2.688775062561035
    4. '   ' → logprob: -3.438775062561035
    5. ' cost' → logprob: -5.063775062561035
    6. '
' → logprob: -8.688775062561035
    7. ' ' → logprob: -10.688775062561035
    8. '[' → logprob: -10.938775062561035
    9. '  ' → logprob: -11.063775062561035
    10. '```' → logprob: -11.188775062561035

Token 210: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0024945642799139023
    2. '+=' → logprob: -6.1274943351745605
    3. ' =' → logprob: -8.127494812011719
    4. '=' → logprob: -11.252494812011719
    5. ' -=' → logprob: -14.627494812011719
    6. '+' → logprob: -16.25249481201172
    7. ' +' → logprob: -16.25249481201172
    8. ' ' → logprob: -16.37749481201172
    9. ']+=' → logprob: -16.37749481201172
    10. ' |=' → logprob: -16.75249481201172

Token 211: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014167741872370243
    2. ' min' → logprob: -4.264167785644531
    3. 'p' → logprob: -12.514167785644531
    4. ' p' → logprob: -15.264167785644531
    5. '(min' → logprob: -15.764167785644531
    6. '   ' → logprob: -17.01416778564453
    7. '	min' → logprob: -17.13916778564453
    8. '[min' → logprob: -17.63916778564453
    9. 'max' → logprob: -18.26416778564453
    10. '.min' → logprob: -19.13916778564453

Token 212: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -8.061054359131958e-06
    2. '(' → logprob: -11.750007629394531
    3. '(
' → logprob: -15.750007629394531
    4. '((' → logprob: -19.25000762939453
    5. 'p' → logprob: -19.50000762939453
    6. ' (' → logprob: -20.12500762939453
    7. '([' → logprob: -21.12500762939453
    8. '(

' → logprob: -21.12500762939453
    9. ' p' → logprob: -21.75000762939453
    10. '[p' → logprob: -22.25000762939453

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.023293538717553e-05
    2. '2' → logprob: -11.000030517578125
    3. '(' → logprob: -11.625030517578125
    4. '(p' → logprob: -12.375030517578125
    5. 'p' → logprob: -16.375030517578125
    6. '```' → logprob: -17.125030517578125
    7. ')' → logprob: -17.375030517578125
    8. '(i' → logprob: -17.500030517578125
    9. '
' → logprob: -17.875030517578125
    10. '   ' → logprob: -17.875030517578125

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0057871779426932335
    2. ',p' → logprob: -5.255787372589111
    3. ' ,' → logprob: -7.505787372589111
    4. ',
' → logprob: -12.755786895751953
    5. 'p' → logprob: -15.130786895751953
    6. ' p' → logprob: -16.755786895751953
    7. '，' → logprob: -17.505786895751953
    8. '(p' → logprob: -17.880786895751953
    9. '   ' → logprob: -18.255786895751953
    10. ',

' → logprob: -18.380786895751953

Token 215: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011048170737922192
    2. ' p' → logprob: -4.511048316955566
    3. '<p' → logprob: -16.63604736328125
    4. '   ' → logprob: -16.76104736328125
    5. ' ' → logprob: -16.88604736328125
    6. '(p' → logprob: -17.26104736328125
    7. ')' → logprob: -17.63604736328125
    8. '
' → logprob: -18.01104736328125
    9. '	p' → logprob: -18.26104736328125
    10. '  ' → logprob: -18.26104736328125

Token 216: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '1' → logprob: -15.875000953674316
    3. '
' → logprob: -16.0
    4. 'p' → logprob: -16.25
    5. '```' → logprob: -17.8125
    6. '(p' → logprob: -17.9375
    7. '₂' → logprob: -18.5
    8. '(' → logprob: -18.6875
    9. 's' → logprob: -18.8125
    10. '' → logprob: -18.875

Token 217: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.7159857786027715e-05
    2. ')
' → logprob: -10.000046730041504
    3. ' )' → logprob: -13.500046730041504
    4. ')return' → logprob: -16.37504768371582
    5. ')

' → logprob: -16.75004768371582
    6. ')#' → logprob: -16.87504768371582
    7. '))' → logprob: -17.00004768371582
    8. ')}' → logprob: -17.87504768371582
    9. ')
' → logprob: -18.12504768371582
    10. ')+' → logprob: -18.25004768371582

Token 218: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.3132803440093994
    2. '(' → logprob: -1.3132803440093994
    3. '()' → logprob: -11.68828010559082
    4. '(sum' → logprob: -12.56328010559082
    5. ' (' → logprob: -12.93828010559082
    6. '(
' → logprob: -14.18828010559082
    7. '('' → logprob: -14.31328010559082
    8. 'cost' → logprob: -14.43828010559082
    9. '(price' → logprob: -14.81328010559082
    10. '(c' → logprob: -14.81328010559082

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -14.750000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '())' → logprob: -15.500000953674316
    5. '))' → logprob: -16.125001907348633
    6. ')
' → logprob: -16.500001907348633
    7. ')`' → logprob: -16.750001907348633
    8. '(' → logprob: -18.250001907348633
    9. '')' → logprob: -19.125001907348633
    10. '`)' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 184
Précision stricte (1ère position): 37.61%
Précision adaptée (1ère position): 39.91%
Précision (top 10): 84.40%
================================================================================
