================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

def Solve():
    ans = 0
    for i in range(n):
        if V[i]:
            continue
        cur = i
        S, an = 0, 0
        m = VMAX
        while True:
            V[cur] = True
            an += 1
            v = A[cur]
            m = min(m, v)
            S += v
            cur = T[v]
            if V[cur]:
                break
        ans += min(S + (an - 2) * m, m + S + (an + 1) * s)
    return ans

MAX = 1000
VMAX = 10000

n = int(input())
A = [int(x) for x in input().split()]
s = min(A)
B = sorted(A)
T = [0] * (VMAX + 1)
for i, b in enumerate(B):
    T[b] = i
V =[False] * MAX
ans = Solve()
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0056168390437960625
    2. '.' → logprob: -5.255616664886475
    3. ' (' → logprob: -9.255617141723633
    4. '(
' → logprob: -9.380617141723633
    5. ')' → logprob: -9.755617141723633
    6. '()' → logprob: -10.005617141723633
    7. '[' → logprob: -11.005617141723633
    8. '('' → logprob: -11.130617141723633
    9. ' ' → logprob: -11.630617141723633
    10. '=' → logprob: -11.755617141723633

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013695230009034276
    2. ' .' → logprob: -7.376369476318359
    3. '.stdin' → logprob: -7.751369476318359
    4. '.import' → logprob: -9.25136947631836
    5. '.readline' → logprob: -9.50136947631836
    6. '.
' → logprob: -10.12636947631836
    7. '.argv' → logprob: -10.37636947631836
    8. '.stdout' → logprob: -11.37636947631836
    9. '.input' → logprob: -11.50136947631836
    10. '.exit' → logprob: -12.00136947631836

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3585807979106903
    2. '.' → logprob: -1.2335808277130127
    3. '.read' → logprob: -4.608580589294434
    4. '.readlines' → logprob: -9.733580589294434
    5. '```' → logprob: -10.733580589294434
    6. '.Read' → logprob: -11.483580589294434
    7. 'read' → logprob: -12.358580589294434
    8. ' .' → logprob: -12.983580589294434
    9. '().' → logprob: -12.983580589294434
    10. '.write' → logprob: -13.233580589294434

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17288635671138763
    2. '(' → logprob: -1.9228863716125488
    3. '()
' → logprob: -5.672886371612549
    4. '(
' → logprob: -6.047886371612549
    5. '\' → logprob: -6.297886371612549
    6. '\n' → logprob: -6.672886371612549
    7. '
' → logprob: -6.797886371612549
    8. '()\' → logprob: -6.922886371612549
    9. '().' → logprob: -7.172886371612549
    10. '()

' → logprob: -8.79788589477539

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130090832710266
    2. '(' → logprob: -1.8063008785247803
    3. '().' → logprob: -6.806301116943359
    4. '()
' → logprob: -8.80630111694336
    5. '(
' → logprob: -10.05630111694336
    6. '()

' → logprob: -10.30630111694336
    7. ')' → logprob: -10.43130111694336
    8. '#' → logprob: -10.43130111694336
    9. 'def' → logprob: -10.68130111694336
    10. 'a' → logprob: -10.68130111694336

Token 10: ' Solve' (ID: 116151)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002628096379339695
    2. ' space' → logprob: -7.252628326416016
    3. ' process' → logprob: -7.752628326416016
    4. '_' → logprob: -8.252628326416016
    5. ' calculate' → logprob: -8.627628326416016
    6. ' add' → logprob: -8.752628326416016
    7. ' read' → logprob: -9.002628326416016
    8. ' ' → logprob: -9.127628326416016
    9. ' my' → logprob: -9.252628326416016
    10. ' main' → logprob: -9.502628326416016

Token 11: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006695473100990057
    2. '():' → logprob: -5.38169527053833
    3. ':' → logprob: -6.63169527053833
    4. '):' → logprob: -8.506695747375488
    5. '(:' → logprob: -8.881695747375488
    6. '```' → logprob: -9.381695747375488
    7. ')' → logprob: -9.881695747375488
    8. '(":' → logprob: -9.881695747375488
    9. '(
' → logprob: -10.256695747375488
    10. ' (' → logprob: -10.631695747375488

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.154275044798851
    2. '(' → logprob: -2.1542749404907227
    3. '    
' → logprob: -5.029274940490723
    4. '\' → logprob: -5.779274940490723
    5. ' ' → logprob: -5.904274940490723
    6. '()' → logprob: -5.904274940490723
    7. '\n' → logprob: -6.029274940490723
    8. '    ' → logprob: -6.154274940490723
    9. '(n' → logprob: -6.279274940490723
    10. 'n' → logprob: -6.529274940490723

Token 13: ' ans' (ID: 3345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4998210668563843
    2. 'n' → logprob: -1.4998210668563843
    3. '   ' → logprob: -2.874821186065674
    4. 'x' → logprob: -3.749821186065674
    5. '    ' → logprob: -3.749821186065674
    6. ' n' → logprob: -4.124821186065674
    7. 'i' → logprob: -4.499821186065674
    8. 'r' → logprob: -4.749821186065674
    9. 'a' → logprob: -4.999821186065674
    10. 't' → logprob: -6.124821186065674

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006283902563154697
    2. '=' → logprob: -5.131283760070801
    3. ' +=' → logprob: -8.2562837600708
    4. ' ' → logprob: -9.6312837600708
    5. '[' → logprob: -11.8812837600708
    6. '[:]' → logprob: -12.6312837600708
    7. '   ' → logprob: -13.0062837600708
    8. '.append' → logprob: -13.2562837600708
    9. ')' → logprob: -13.2562837600708
    10. ',' → logprob: -13.3812837600708

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.043157897889614105
    2. '0' → logprob: -3.6681578159332275
    3. ' []' → logprob: -4.168158054351807
    4. '[]' → logprob: -7.168158054351807
    5. ' "' → logprob: -8.793157577514648
    6. '"' → logprob: -9.293157577514648
    7. ' input' → logprob: -9.668157577514648
    8. ' int' → logprob: -10.793157577514648
    9. 'input' → logprob: -10.793157577514648
    10. 'int' → logprob: -11.168157577514648

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18025115132331848
    2. 'int' → logprob: -1.930251121520996
    3. '[]' → logprob: -4.180251121520996
    4. 'input' → logprob: -5.680251121520996
    5. '1' → logprob: -7.430251121520996
    6. '[int' → logprob: -8.680251121520996
    7. 'sum' → logprob: -9.180251121520996
    8. '""' → logprob: -9.555251121520996
    9. ' ' → logprob: -10.305251121520996
    10. 'list' → logprob: -10.555251121520996

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009327114559710026
    2. '    
' → logprob: -5.384326934814453
    3. '
' → logprob: -6.384326934814453
    4. '\' → logprob: -6.509326934814453
    5. '    ' → logprob: -7.884326934814453
    6. '\n' → logprob: -7.884326934814453
    7. ' ' → logprob: -8.759326934814453
    8. '<|end|>' → logprob: -8.759326934814453
    9. 'for' → logprob: -10.009326934814453
    10. '' → logprob: -10.009326934814453

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010532823391258717
    2. '    
' → logprob: -5.885532855987549
    3. '
' → logprob: -6.010532855987549
    4. '\' → logprob: -6.510532855987549
    5. ' ' → logprob: -6.760532855987549
    6. '\n' → logprob: -7.260532855987549
    7. '    ' → logprob: -7.760532855987549
    8. '<|end|>' → logprob: -7.760532855987549
    9. ' 
' → logprob: -8.26053237915039
    10. 'for' → logprob: -8.88553237915039

Token 19: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32262083888053894
    2. 'for' (adapté à ' for') → logprob: -1.5726208686828613
    3. ' for' → logprob: -2.6976208686828613
    4. 'n' → logprob: -8.197620391845703
    5. ' ' → logprob: -8.947620391845703
    6. 'while' → logprob: -8.947620391845703
    7. ' while' → logprob: -9.572620391845703
    8. '    
' → logprob: -9.822620391845703
    9. '    ' → logprob: -9.822620391845703
    10. 'i' → logprob: -10.322620391845703

Token 20: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37591907382011414
    2. ' i' → logprob: -1.2509191036224365
    3. ' _' → logprob: -4.375918865203857
    4. ' range' → logprob: -4.375918865203857
    5. '_' → logprob: -6.875918865203857
    6. 'range' → logprob: -8.000919342041016
    7. '  ' → logprob: -8.250919342041016
    8. ' in' → logprob: -8.375919342041016
    9. 'i' → logprob: -9.875919342041016
    10. ' I' → logprob: -11.875919342041016

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01472444087266922
    2. 'in' → logprob: -4.264724254608154
    3. ' ' → logprob: -7.764724254608154
    4. 'n' → logprob: -9.889724731445312
    5. '  ' → logprob: -10.389724731445312
    6. ',' → logprob: -11.264724731445312
    7. 'range' → logprob: -11.389724731445312
    8. ' n' → logprob: -12.139724731445312
    9. '   ' → logprob: -12.389724731445312
    10. '	in' → logprob: -12.514724731445312

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.009769308380782604
    2. 'range' → logprob: -4.634769439697266
    3. ' ' → logprob: -12.134769439697266
    4. ' input' → logprob: -13.384769439697266
    5. '	range' → logprob: -13.884769439697266
    6. '```' → logprob: -14.009769439697266
    7. ' ra' → logprob: -14.259769439697266
    8. '  ' → logprob: -14.759769439697266
    9. '(range' → logprob: -14.759769439697266
    10. '   ' → logprob: -15.259769439697266

Token 23: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015717566711828113
    2. '(len' → logprob: -6.5015716552734375
    3. '(n' → logprob: -10.376571655273438
    4. ' (' → logprob: -11.126571655273438
    5. '(
' → logprob: -12.251571655273438
    6. '(int' → logprob: -12.376571655273438
    7. '(length' → logprob: -12.876571655273438
    8. '(s' → logprob: -13.001571655273438
    9. '(

' → logprob: -13.251571655273438
    10. '(range' → logprob: -13.251571655273438

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021587872877717018
    2. ')' → logprob: -3.89658784866333
    3. '+' → logprob: -7.39658784866333
    4. ' ):' → logprob: -7.89658784866333
    5. '):
' → logprob: -11.271588325500488
    6. ',' → logprob: -11.521588325500488
    7. ':' → logprob: -11.521588325500488
    8. ' +' → logprob: -12.271588325500488
    9. ' )' → logprob: -12.396588325500488
    10. '-' → logprob: -12.771588325500488

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05496601387858391
    2. '   ' → logprob: -3.8049659729003906
    3. ':' → logprob: -4.054965972900391
    4. '    ' → logprob: -4.679965972900391
    5. ' :' → logprob: -6.429965972900391
    6. '     ' → logprob: -7.679965972900391
    7. ' ' → logprob: -7.804965972900391
    8. '(' → logprob: -7.929965972900391
    9. '        ' → logprob: -8.05496597290039
    10. '      ' → logprob: -8.17996597290039

Token 26: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2103008031845093
    2. '       ' → logprob: -1.3353008031845093
    3. '    ' → logprob: -1.5853008031845093
    4. ' ' → logprob: -1.8353008031845093
    5. '        ' → logprob: -4.210300922393799
    6. ' if' → logprob: -4.335300922393799
    7. 'input' → logprob: -4.335300922393799
    8. ' input' → logprob: -4.585300922393799
    9. '  ' → logprob: -5.710300922393799
    10. '<|end|>' → logprob: -5.835300922393799

Token 27: ' V' (ID: 631)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.1276215314865112
    2. ' arr' → logprob: -1.5026215314865112
    3. ' a' → logprob: -1.8776215314865112
    4. ' data' → logprob: -2.752621650695801
    5. ' s' → logprob: -3.127621650695801
    6. ' ' → logprob: -3.377621650695801
    7. ' array' → logprob: -3.502621650695801
    8. 'a' → logprob: -3.627621650695801
    9. ' input' → logprob: -3.627621650695801
    10. ' n' → logprob: -3.752621650695801

Token 28: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005051348707638681
    2. '[' → logprob: -7.625504970550537
    3. '[I' → logprob: -12.250505447387695
    4. ' [' → logprob: -12.750505447387695
    5. '[n' → logprob: -13.000505447387695
    6. '[j' → logprob: -13.625505447387695
    7. '[V' → logprob: -14.125505447387695
    8. '[v' → logprob: -14.375505447387695
    9. '\[' → logprob: -14.375505447387695
    10. 'i' → logprob: -14.500505447387695

Token 29: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6028662323951721
    2. '>' → logprob: -1.1028661727905273
    3. ' >' → logprob: -3.2278661727905273
    4. '==' → logprob: -3.6028661727905273
    5. '[' → logprob: -3.9778661727905273
    6. ']>' → logprob: -4.727866172790527
    7. ']==' → logprob: -4.852866172790527
    8. ' ==' → logprob: -5.102866172790527
    9. '<' → logprob: -5.727866172790527
    10. '%' → logprob: -6.227866172790527

Token 30: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3826602101325989
    2. '       ' → logprob: -2.132660150527954
    3. '==' → logprob: -2.257660150527954
    4. ':' → logprob: -3.257660150527954
    5. ' ==' → logprob: -4.007660388946533
    6. '=' → logprob: -4.757660388946533
    7. '          ' → logprob: -5.007660388946533
    8. '        ' → logprob: -5.132660388946533
    9. '               ' → logprob: -5.382660388946533
    10. '   ' → logprob: -6.257660388946533

Token 31: ' continue' (ID: 4901)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.16185972094535828
    2. 'ans' → logprob: -2.9118597507476807
    3. '               ' → logprob: -3.0368597507476807
    4. '           ' → logprob: -3.6618597507476807
    5. ' continue' → logprob: -4.411859512329102
    6. ' for' → logprob: -5.911859512329102
    7. 'continue' (adapté à ' continue') → logprob: -6.286859512329102
    8. '       ' → logprob: -7.161859512329102
    9. '            ' → logprob: -7.161859512329102
    10. '   ' → logprob: -7.411859512329102

Token 32: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008474865928292274
    2. '        
' → logprob: -5.508474826812744
    3. '<|end|>' → logprob: -6.758474826812744
    4. '           ' → logprob: -7.008474826812744
    5. '   ' → logprob: -7.633474826812744
    6. '    ' → logprob: -8.133475303649902
    7. '        ' → logprob: -8.133475303649902
    8. 'n' → logprob: -8.758475303649902
    9. '    
' → logprob: -9.008475303649902
    10. '            
' → logprob: -9.133475303649902

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020255891140550375
    2. '           ' → logprob: -7.127025604248047
    3. '        
' → logprob: -7.502025604248047
    4. '   ' → logprob: -8.377025604248047
    5. '        ' → logprob: -9.752025604248047
    6. '<|end|>' → logprob: -9.752025604248047
    7. '    ' → logprob: -9.877025604248047
    8. '      ' → logprob: -10.002025604248047
    9. 'n' → logprob: -10.252025604248047
    10. '            
' → logprob: -10.502025604248047

Token 34: ' cur' (ID: 4396)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7676569223403931
    2. '    ' → logprob: -2.2676568031311035
    3. '   ' → logprob: -2.7676568031311035
    4. ' 
' → logprob: -2.8926568031311035
    5. ' for' → logprob: -3.0176568031311035
    6. '           ' → logprob: -3.0176568031311035
    7. '        ' → logprob: -3.0176568031311035
    8. ' ' → logprob: -3.7676568031311035
    9. '        
' → logprob: -4.0176568031311035
    10. 'n' → logprob: -4.1426568031311035

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0540270060300827
    2. '=' → logprob: -3.3040270805358887
    3. ' +=' → logprob: -5.179027080535889
    4. 't' → logprob: -6.179027080535889
    5. '_val' → logprob: -6.429027080535889
    6. 'nt' → logprob: -6.929027080535889
    7. '_' → logprob: -7.179027080535889
    8. '_sum' → logprob: -7.429027080535889
    9. '+=' → logprob: -7.554027080535889
    10. '_count' → logprob: -7.554027080535889

Token 36: ' i' (ID: 575)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1630487442016602
    2. 'i' → logprob: -1.2880487442016602
    3. '0' → logprob: -1.5380487442016602
    4. 'V' → logprob: -2.28804874420166
    5. ' i' → logprob: -3.28804874420166
    6. ' V' → logprob: -3.28804874420166
    7. ' ' → logprob: -4.03804874420166
    8. '[i' → logprob: -7.03804874420166
    9. '   ' → logprob: -8.16304874420166
    10. '[' → logprob: -8.28804874420166

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6046791672706604
    2. '<|end|>' → logprob: -1.1046791076660156
    3. '<|end|>' → logprob: -3.6046791076660156
    4. ' while' → logprob: -3.8546791076660156
    5. '   ' → logprob: -3.9796791076660156
    6. '    ' → logprob: -5.104679107666016
    7. '        ' → logprob: -5.229679107666016
    8. '           ' → logprob: -5.229679107666016
    9. ' ' → logprob: -5.229679107666016
    10. '
' → logprob: -5.354679107666016

Token 39: ' S' (ID: 336)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2689925730228424
    2. 'while' → logprob: -1.51899254322052
    3. '0' → logprob: -5.1439924240112305
    4. '   ' → logprob: -5.2689924240112305
    5. '    ' → logprob: -6.6439924240112305
    6. ' ' → logprob: -6.6439924240112305
    7. '1' → logprob: -6.8939924240112305
    8. '+' → logprob: -7.0189924240112305
    9. '       ' → logprob: -7.7689924240112305
    10. '           ' → logprob: -8.64399242401123

Token 40: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2612036466598511
    2. '=' → logprob: -1.511203646659851
    3. 'um' → logprob: -4.886203765869141
    4. '+=' → logprob: -7.886203765869141
    5. 't' → logprob: -8.26120376586914
    6. ' +=' → logprob: -8.63620376586914
    7. '   ' → logprob: -9.01120376586914
    8. 'ize' → logprob: -9.01120376586914
    9. 'UM' → logprob: -9.01120376586914
    10. '=sum' → logprob: -9.01120376586914

Token 41: ' an' (ID: 448)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0874980688095093
    2. ' T' → logprob: -1.9624980688095093
    3. ' ' → logprob: -2.087498188018799
    4. ' E' → logprob: -2.212498188018799
    5. '=' → logprob: -2.337498188018799
    6. ' cnt' → logprob: -3.337498188018799
    7. '0' → logprob: -3.587498188018799
    8. 'T' → logprob: -4.212498188018799
    9. 'E' → logprob: -4.212498188018799
    10. ' t' → logprob: -4.462498188018799

Token 42: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011280066333711147
    2. 'swer' → logprob: -4.511280059814453
    3. 'g' → logprob: -9.886280059814453
    4. 'sw' → logprob: -10.261280059814453
    5. 'S' → logprob: -10.511280059814453
    6. 'ss' → logprob: -10.886280059814453
    7. 'c' → logprob: -11.011280059814453
    8. 't' → logprob: -11.136280059814453
    9. 'sg' → logprob: -12.011280059814453
    10. 'sl' → logprob: -12.011280059814453

Token 43: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28558608889579773
    2. ' ' → logprob: -1.5355861186981201
    3. ' set' → logprob: -4.285585880279541
    4. '1' → logprob: -4.660585880279541
    5. 'set' → logprob: -5.285585880279541
    6. ' [' → logprob: -7.285585880279541
    7. ' True' → logprob: -7.535585880279541
    8. ' [],' → logprob: -7.660585880279541
    9. ' (' → logprob: -7.785585880279541
    10. '[' → logprob: -8.0355863571167

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09884724766016006
    2. 'set' → logprob: -2.8488471508026123
    3. '1' → logprob: -4.473847389221191
    4. ' ' → logprob: -4.723847389221191
    5. ' set' → logprob: -5.723847389221191
    6. '{' → logprob: -5.848847389221191
    7. '[],' → logprob: -6.223847389221191
    8. '[]' → logprob: -6.348847389221191
    9. '[' → logprob: -6.473847389221191
    10. 'True' → logprob: -6.973847389221191

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016117772087454796
    2. ' ,' → logprob: -4.641117572784424
    3. '=' → logprob: -5.891117572784424
    4. ' =' → logprob: -6.141117572784424
    5. ' ' → logprob: -8.016118049621582
    6. '0' → logprob: -8.391118049621582
    7. '+' → logprob: -8.391118049621582
    8. ',
' → logprob: -9.266118049621582
    9. ',n' → logprob: -9.391118049621582
    10. '+=' → logprob: -9.516118049621582

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17104870080947876
    2. ' ' → logprob: -1.921048641204834
    3. '1' → logprob: -4.671048641204834
    4. ' True' → logprob: -7.921048641204834
    5. '[]' → logprob: -8.171049118041992
    6. 'True' → logprob: -8.671049118041992
    7. '-' → logprob: -9.421049118041992
    8. '{}' → logprob: -9.671049118041992
    9. ' i' → logprob: -9.796049118041992
    10. ' []' → logprob: -9.796049118041992

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033806946128606796
    2. '1' → logprob: -4.158806800842285
    3. '[]' → logprob: -4.908806800842285
    4. '-' → logprob: -5.908806800842285
    5. '{}' → logprob: -6.283806800842285
    6. 'True' → logprob: -6.408806800842285
    7. 'False' → logprob: -6.783806800842285
    8. ' ' → logprob: -6.783806800842285
    9. 'i' → logprob: -7.783806800842285
    10. 'float' → logprob: -8.033806800842285

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006715370807796717
    2. '<|end|>' → logprob: -5.881715297698975
    3. '       ' → logprob: -7.381715297698975
    4. '
' → logprob: -7.381715297698975
    5. '\n' → logprob: -7.381715297698975
    6. ' 
' → logprob: -7.506715297698975
    7. '  
' → logprob: -7.631715297698975
    8. '        
' → logprob: -8.381715774536133
    9. '<|end|>' → logprob: -8.756715774536133
    10. '   ' → logprob: -9.256715774536133

Token 49: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2953186631202698
    2. '       ' → logprob: -2.420318603515625
    3. '   ' → logprob: -2.420318603515625
    4. '           ' → logprob: -3.420318603515625
    5. ' while' → logprob: -3.795318603515625
    6. '	while' → logprob: -5.295318603515625
    7. 'while' → logprob: -5.420318603515625
    8. '    ' → logprob: -6.045318603515625
    9. '<|end|>' → logprob: -6.420318603515625
    10. '\n' → logprob: -6.920318603515625

Token 50: ' m' (ID: 284)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.014414297416806221
    2. ' while' → logprob: -4.264414310455322
    3. '       ' → logprob: -8.639413833618164
    4. '   ' → logprob: -10.514413833618164
    5. '           ' → logprob: -10.889413833618164
    6. '
' → logprob: -11.014413833618164
    7. '```' → logprob: -12.389413833618164
    8. '	while' → logprob: -13.014413833618164
    9. 'While' → logprob: -13.139413833618164
    10. 'hile' → logprob: -14.639413833618164

Token 51: ' =' (ID: 314)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.044812798500061
    2. 'ax' → logprob: -1.044812798500061
    3. 'p' → logprob: -2.6698126792907715
    4. 'ask' → logprob: -3.0448126792907715
    5. 'in' → logprob: -3.1698126792907715
    6. 'x' → logprob: -3.5448126792907715
    7. 'ark' → logprob: -3.9198126792907715
    8. 'emo' → logprob: -4.4198126792907715
    9. ' =' → logprob: -4.5448126792907715
    10. '[V' → logprob: -4.5448126792907715

Token 52: ' V' (ID: 631)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.6468733549118042
    2. 'V' → logprob: -1.3968733549118042
    3. ' V' → logprob: -2.1468734741210938
    4. '{' → logprob: -3.5218734741210938
    5. ' ' → logprob: -4.146873474121094
    6. '1' → logprob: -4.521873474121094
    7. ' {}' → logprob: -4.771873474121094
    8. 'len' → logprob: -5.021873474121094
    9. 'int' → logprob: -5.021873474121094
    10. '10' → logprob: -5.396873474121094

Token 53: 'MAX' (ID: 21911)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0011292597046121955
    2. '.count' → logprob: -7.251129150390625
    3. '[i' → logprob: -9.126129150390625
    4. '.index' → logprob: -9.501129150390625
    5. '[' → logprob: -9.501129150390625
    6. '.size' → logprob: -10.876129150390625
    7. '[len' → logprob: -11.251129150390625
    8. '.' → logprob: -11.251129150390625
    9. '.pop' → logprob: -11.376129150390625
    10. 'cur' → logprob: -11.376129150390625

Token 54: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11659663915634155
    2. ' +' → logprob: -2.8665966987609863
    3. '
' → logprob: -3.7415966987609863
    4. '<|end|>' → logprob: -4.616596698760986
    5. '[' → logprob: -4.991596698760986
    6. '<|end|>' → logprob: -5.866596698760986
    7. '   ' → logprob: -6.616596698760986
    8. '-' → logprob: -6.616596698760986
    9. '```' → logprob: -7.116596698760986
    10. ')' → logprob: -7.241596698760986

Token 55: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2582968473434448
    2. ' +' → logprob: -2.6332969665527344
    3. '   ' → logprob: -3.3832969665527344
    4. '-' → logprob: -3.7582969665527344
    5. '       ' → logprob: -4.258296966552734
    6. 'while' → logprob: -4.258296966552734
    7. ' -' → logprob: -4.508296966552734
    8. ' while' → logprob: -4.633296966552734
    9. '[' → logprob: -5.133296966552734
    10. ' for' → logprob: -5.383296966552734

Token 56: ' while' (ID: 2049)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8102062940597534
    2. '[i' → logprob: -1.9352062940597534
    3. '+' → logprob: -2.060206413269043
    4. ' while' → logprob: -2.185206413269043
    5. 'while' (adapté à ' while') → logprob: -2.560206413269043
    6. '-' → logprob: -2.685206413269043
    7. '
' → logprob: -2.810206413269043
    8. '       ' → logprob: -3.310206413269043
    9. '   ' → logprob: -3.560206413269043
    10. ' //' → logprob: -3.560206413269043

Token 57: ' True' (ID: 6432)
  Prédit: ' V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' V' → logprob: -0.7936744689941406
    2. ' cur' → logprob: -1.9186744689941406
    3. ' True' → logprob: -2.0436744689941406
    4. ' not' → logprob: -2.1686744689941406
    5. 'V' → logprob: -2.7936744689941406
    6. 'cur' → logprob: -3.4186744689941406
    7. ' m' → logprob: -3.5436744689941406
    8. 'True' → logprob: -3.9186744689941406
    9. 'm' → logprob: -5.168674468994141
    10. ' S' → logprob: -5.918674468994141

Token 58: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005305858328938484
    2. ':
' → logprob: -6.130305767059326
    3. '           ' → logprob: -6.130305767059326
    4. ' and' → logprob: -7.380305767059326
    5. ' :' → logprob: -8.880306243896484
    6. '):' → logprob: -9.755306243896484
    7. '            ' → logprob: -10.755306243896484
    8. ',' → logprob: -11.130306243896484
    9. '[' → logprob: -11.380306243896484
    10. '       ' → logprob: -11.505306243896484

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3535213768482208
    2. '            ' → logprob: -2.4785213470458984
    3. '<|end|>' → logprob: -2.9785213470458984
    4. ' ' → logprob: -3.2285213470458984
    5. ' and' → logprob: -3.6035213470458984
    6. '               ' → logprob: -3.7285213470458984
    7. ':' → logprob: -3.8535213470458984
    8. ' 
' → logprob: -4.478521347045898
    9. ':
' → logprob: -4.603521347045898
    10. '            
' → logprob: -5.728521347045898

Token 60: ' V' (ID: 631)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2972550690174103
    2. '           ' → logprob: -2.047255039215088
    3. '            ' → logprob: -3.172255039215088
    4. 'if' → logprob: -3.797255039215088
    5. '               ' → logprob: -4.047255039215088
    6. ' ' → logprob: -4.672255039215088
    7. ' V' → logprob: -5.297255039215088
    8. ' S' → logprob: -5.797255039215088
    9. ' ' → logprob: -5.797255039215088
    10. '       ' → logprob: -6.047255039215088

Token 61: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -3.650518920039758e-06
    2. '[' → logprob: -13.875003814697266
    3. '[V' → logprob: -14.000003814697266
    4. 'cur' → logprob: -14.750003814697266
    5. '[c' → logprob: -15.250003814697266
    6. '[i' → logprob: -15.375003814697266
    7. '(cur' → logprob: -15.500003814697266
    8. '[current' → logprob: -15.625003814697266
    9. '[curr' → logprob: -15.875003814697266
    10. '[int' → logprob: -16.750003814697266

Token 62: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002775512868538499
    2. ']=' → logprob: -6.6277756690979
    3. ']==' → logprob: -7.2527756690979
    4. ']:' → logprob: -7.3777756690979
    5. '[' → logprob: -9.377775192260742
    6. ']:
' → logprob: -11.752775192260742
    7. ']>' → logprob: -12.377775192260742
    8. ']!=' → logprob: -12.627775192260742
    9. '][' → logprob: -13.127775192260742
    10. ' ]' → logprob: -13.127775192260742

Token 63: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42944493889808655
    2. ' =' → logprob: -1.0544449090957642
    3. '[' → logprob: -7.554444789886475
    4. '=True' → logprob: -9.554445266723633
    5. '=False' → logprob: -9.679445266723633
    6. ',' → logprob: -10.179445266723633
    7. ']' → logprob: -10.554445266723633
    8. ' ' → logprob: -12.304445266723633
    9. ')' → logprob: -12.554445266723633
    10. ']=' → logprob: -13.054445266723633

Token 64: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.2057555466890335
    2. ' True' → logprob: -2.2057554721832275
    3. '1' → logprob: -2.5807554721832275
    4. ' ' → logprob: -9.955755233764648
    5. '   ' → logprob: -10.580755233764648
    6. 'False' → logprob: -12.080755233764648
    7. '(True' → logprob: -13.205755233764648
    8. '    ' → logprob: -13.580755233764648
    9. '  ' → logprob: -14.080755233764648
    10. 'T' → logprob: -15.330755233764648

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02309277094900608
    2. ' 
' → logprob: -4.273092746734619
    3. '
' → logprob: -5.898092746734619
    4. '<|end|>' → logprob: -6.148092746734619
    5. ' ' → logprob: -6.648092746734619
    6. '           ' → logprob: -7.023092746734619
    7. '            ' → logprob: -7.523092746734619
    8. '  
' → logprob: -7.773092746734619
    9. '            
' → logprob: -8.148093223571777
    10. '\n' → logprob: -8.523093223571777

Token 66: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06442730873823166
    2. ' 
' → logprob: -3.439427375793457
    3. '<|end|>' → logprob: -4.064427375793457
    4. ' ' → logprob: -5.689427375793457
    5. '           ' → logprob: -5.689427375793457
    6. '            ' → logprob: -6.439427375793457
    7. '
' → logprob: -6.439427375793457
    8. '  
' → logprob: -6.814427375793457
    9. '            
' → logprob: -6.939427375793457
    10. '<|end|>' → logprob: -8.814427375793457

Token 67: ' an' (ID: 448)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.2388216257095337
    2. ' s' → logprob: -1.9888216257095337
    3. 'S' → logprob: -3.488821506500244
    4. 's' → logprob: -4.863821506500244
    5. ' x' → logprob: -4.863821506500244
    6. ' if' → logprob: -5.113821506500244
    7. ' ' → logprob: -5.363821506500244
    8. '           ' → logprob: -5.488821506500244
    9. ' cur' → logprob: -6.113821506500244
    10. ' m' → logprob: -6.613821506500244

Token 68: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.19039082527160645
    2. ' +=' → logprob: -2.4403908252716064
    3. '+' → logprob: -2.6903908252716064
    4. 'd' → logprob: -4.065390586853027
    5. '=' → logprob: -7.690390586853027
    6. 's' → logprob: -8.315390586853027
    7. ' +' → logprob: -9.065390586853027
    8. ' =' → logprob: -9.565390586853027
    9. ' ' → logprob: -10.065390586853027
    10. ']+=' → logprob: -10.190390586853027

Token 69: ' ' (ID: 220)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.41953137516975403
    2. '1' → logprob: -1.9195313453674316
    3. 'a' → logprob: -3.1695313453674316
    4. 'S' → logprob: -3.2945313453674316
    5. 'D' → logprob: -3.9195313453674316
    6. 'W' → logprob: -4.044531345367432
    7. 'C' → logprob: -4.294531345367432
    8. 'arr' → logprob: -4.419531345367432
    9. ' A' → logprob: -4.544531345367432
    10. 'P' → logprob: -5.044531345367432

Token 70: '1' (ID: 16)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5413079261779785
    2. '1' → logprob: -1.6663079261779785
    3. 'S' → logprob: -2.7913079261779785
    4. 'W' → logprob: -3.4163079261779785
    5. 'C' → logprob: -3.6663079261779785
    6. 'a' → logprob: -3.6663079261779785
    7. 'D' → logprob: -3.6663079261779785
    8. 'P' → logprob: -4.6663079261779785
    9. 'arr' → logprob: -4.7913079261779785
    10. 'V' → logprob: -5.0413079261779785

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007441924884915352
    2. ' 
' → logprob: -5.382441997528076
    3. '<|end|>' → logprob: -6.257441997528076
    4. '
' → logprob: -7.382441997528076
    5. '  
' → logprob: -9.257441520690918
    6. ' ' → logprob: -9.632441520690918
    7. '           ' → logprob: -10.257441520690918
    8. '            
' → logprob: -10.632441520690918
    9. '<|end|>' → logprob: -11.507441520690918
    10. ',' → logprob: -12.257441520690918

Token 72: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06789939850568771
    2. '<|end|>' → logprob: -3.317899465560913
    3. ' 
' → logprob: -3.942899465560913
    4. '           ' → logprob: -5.192899227142334
    5. ' ' → logprob: -6.192899227142334
    6. '
' → logprob: -7.192899227142334
    7. '  
' → logprob: -7.442899227142334
    8. '            
' → logprob: -8.567899703979492
    9. '<|end|>' → logprob: -8.942899703979492
    10. '            ' → logprob: -9.442899703979492

Token 73: ' v' (ID: 323)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6730155348777771
    2. ' S' → logprob: -0.7980155348777771
    3. 'm' → logprob: -4.048015594482422
    4. ' m' → logprob: -5.173015594482422
    5. 's' → logprob: -5.298015594482422
    6. '           ' → logprob: -5.923015594482422
    7. ' s' → logprob: -6.173015594482422
    8. 'A' → logprob: -6.923015594482422
    9. 'x' → logprob: -7.548015594482422
    10. ' A' → logprob: -7.548015594482422

Token 74: ' =' (ID: 314)
  Prédit: 'alue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alue' → logprob: -1.2036205530166626
    2. ' =' → logprob: -1.3286205530166626
    3. 'al' → logprob: -1.7036205530166626
    4. '[cur' → logprob: -1.9536205530166626
    5. '=' → logprob: -2.703620433807373
    6. 's' → logprob: -3.953620433807373
    7. 'als' → logprob: -4.578620433807373
    8. 'ar' → logprob: -5.453620433807373
    9. 'ALUE' → logprob: -5.578620433807373
    10. 'cur' → logprob: -6.953620433807373

Token 75: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.27448001503944397
    2. ' A' → logprob: -2.024480104446411
    3. 'a' → logprob: -3.399480104446411
    4. 'L' → logprob: -4.399479866027832
    5. 'V' → logprob: -4.649479866027832
    6. ' a' → logprob: -5.149479866027832
    7. 'D' → logprob: -5.149479866027832
    8. 'C' → logprob: -5.274479866027832
    9. 'P' → logprob: -5.399479866027832
    10. 'G' → logprob: -5.524479866027832

Token 76: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -2.6060808522743173e-05
    2. '[' → logprob: -11.375025749206543
    3. '[v' → logprob: -12.125025749206543
    4. '[c' → logprob: -12.500025749206543
    5. ' [' → logprob: -13.375025749206543
    6. 'cur' → logprob: -13.500025749206543
    7. '[curr' → logprob: -14.625025749206543
    8. 's' → logprob: -15.125025749206543
    9. '[s' → logprob: -15.250025749206543
    10. '[i' → logprob: -15.625025749206543

Token 77: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004591992124915123
    2. '[cur' → logprob: -5.754591941833496
    3. ']%' → logprob: -7.754591941833496
    4. ']-' → logprob: -8.379591941833496
    5. '][' → logprob: -8.504591941833496
    6. ']
' → logprob: -9.129591941833496
    7. ']+' → logprob: -9.129591941833496
    8. ' ]' → logprob: -9.379591941833496
    9. '[' → logprob: -9.754591941833496
    10. '-' → logprob: -9.879591941833496

Token 78: '           ' (ID: 352)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.0008003382245078683
    2. '[' → logprob: -7.875800132751465
    3. '
' → logprob: -9.250800132751465
    4. '[
' → logprob: -9.750800132751465
    5. '[m' → logprob: -9.875800132751465
    6. 'v' → logprob: -10.500800132751465
    7. '[min' → logprob: -10.750800132751465
    8. '+' → logprob: -10.875800132751465
    9. '-' → logprob: -10.875800132751465
    10. '[v' → logprob: -10.875800132751465

Token 79: ' m' (ID: 284)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1332964152097702
    2. '=' → logprob: -2.133296489715576
    3. 'in' → logprob: -5.133296489715576
    4. '=min' → logprob: -7.883296489715576
    5. 'ax' → logprob: -10.508296012878418
    6. 'inin' → logprob: -11.883296012878418
    7. 'i' → logprob: -12.008296012878418
    8. '=in' → logprob: -12.383296012878418
    9. '   ' → logprob: -13.008296012878418
    10. '=max' → logprob: -13.008296012878418

Token 81: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.00326517247594893
    2. 'min' → logprob: -5.753265380859375
    3. ' v' → logprob: -10.253265380859375
    4. ' ' → logprob: -10.753265380859375
    5. ' max' → logprob: -11.378265380859375
    6. ' m' → logprob: -11.378265380859375
    7. '	min' → logprob: -12.628265380859375
    8. ' ' → logprob: -13.003265380859375
    9. 'v' → logprob: -14.253265380859375
    10. '(min' → logprob: -14.503265380859375

Token 82: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0040865931659936905
    2. '(' → logprob: -5.504086494445801
    3. '(v' → logprob: -11.7540864944458
    4. '(
' → logprob: -16.004087448120117
    5. '(s' → logprob: -16.129087448120117
    6. ' (' → logprob: -16.754087448120117
    7. '(min' → logprob: -17.504087448120117
    8. '(M' → logprob: -17.504087448120117
    9. '(k' → logprob: -18.379087448120117
    10. '(n' → logprob: -18.504087448120117

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010118682868778706
    2. ',v' → logprob: -4.76011848449707
    3. ' ,' → logprob: -6.51011848449707
    4. 'v' → logprob: -11.38511848449707
    5. ' v' → logprob: -13.51011848449707
    6. ',
' → logprob: -13.76011848449707
    7. ',m' → logprob: -15.26011848449707
    8. ',value' → logprob: -16.01011848449707
    9. ' ' → logprob: -16.38511848449707
    10. ')' → logprob: -16.88511848449707

Token 84: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.11294785141944885
    2. 'v' → logprob: -2.237947940826416
    3. ' ' → logprob: -9.237947463989258
    4. ' ' → logprob: -10.987947463989258
    5. ' 
' → logprob: -13.112947463989258
    6. ')' → logprob: -13.237947463989258
    7. '	v' → logprob: -13.237947463989258
    8. ' A' → logprob: -13.362947463989258
    9. ' )' → logprob: -13.737947463989258
    10. 'A' → logprob: -14.112947463989258

Token 85: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05700361728668213
    2. ')' → logprob: -2.9320034980773926
    3. ')
' → logprob: -6.682003498077393
    4. ' )
' → logprob: -7.182003498077393
    5. ')

' → logprob: -10.05700397491455
    6. '           ' → logprob: -10.18200397491455
    7. ' )' → logprob: -11.18200397491455
    8. '
' → logprob: -12.55700397491455
    9. ' )
' → logprob: -13.05700397491455
    10. ',' → logprob: -14.30700397491455

Token 86: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14436744153499603
    2. ' 
' → logprob: -2.3943674564361572
    3. ' ' → logprob: -4.394367218017578
    4. '           ' → logprob: -4.894367218017578
    5. '  
' → logprob: -5.019367218017578
    6. '
' → logprob: -5.144367218017578
    7. ',' → logprob: -5.394367218017578
    8. '<|end|>' → logprob: -6.394367218017578
    9. 'S' → logprob: -6.894367218017578
    10. 's' → logprob: -7.269367218017578

Token 87: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' (adapté à ' S') → logprob: -0.103592149913311
    2. ' S' → logprob: -2.8535921573638916
    3. '           ' → logprob: -3.3535921573638916
    4. 'cur' → logprob: -5.8535919189453125
    5. '   ' → logprob: -6.8535919189453125
    6. '       ' → logprob: -7.7285919189453125
    7. ' ' → logprob: -8.103591918945312
    8. ' cur' → logprob: -8.103591918945312
    9. 's' → logprob: -8.228591918945312
    10. '    ' → logprob: -9.103591918945312

Token 88: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.09676714241504669
    2. '+=' → logprob: -2.7217671871185303
    3. '+' → logprob: -3.7217671871185303
    4. ' +' → logprob: -6.096766948699951
    5. ' =' → logprob: -11.34676742553711
    6. '<|end|>' → logprob: -11.84676742553711
    7. '=' → logprob: -12.34676742553711
    8. '<|end|>' → logprob: -13.09676742553711
    9. '+='' → logprob: -13.22176742553711
    10. ' ' → logprob: -13.47176742553711

Token 89: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20142608880996704
    2. ' v' → logprob: -1.7014260292053223
    3. 'A' → logprob: -11.95142650604248
    4. ' ' → logprob: -13.20142650604248
    5. ' A' → logprob: -13.20142650604248
    6. '<|end|>' → logprob: -14.20142650604248
    7. '	v' → logprob: -14.57642650604248
    8. 'a' → logprob: -14.95142650604248
    9. ' ' → logprob: -15.20142650604248
    10. 'm' → logprob: -15.32642650604248

Token 90: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007751317694783211
    2. '
' → logprob: -5.63275146484375
    3. '           ' → logprob: -5.75775146484375
    4. '[cur' → logprob: -7.75775146484375
    5. '<|end|>' → logprob: -8.63275146484375
    6. '            
' → logprob: -8.63275146484375
    7. '<|end|>' → logprob: -9.50775146484375
    8. ' 
' → logprob: -10.25775146484375
    9. '\n' → logprob: -10.63275146484375
    10. '  
' → logprob: -10.75775146484375

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22139617800712585
    2. '
' → logprob: -1.7213962078094482
    3. '<|end|>' → logprob: -5.096395969390869
    4. '            
' → logprob: -5.471395969390869
    5. 'cur' → logprob: -6.596395969390869
    6. '<|end|>' → logprob: -6.846395969390869
    7. ' ' → logprob: -7.096395969390869
    8. '  
' → logprob: -7.221395969390869
    9. '```' → logprob: -7.346395969390869
    10. ' 
' → logprob: -7.471395969390869

Token 92: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.5787284970283508
    2. ' cur' → logprob: -0.8287284970283508
    3. '           ' → logprob: -7.203728675842285
    4. ' if' → logprob: -7.703728675842285
    5. ' ' → logprob: -8.078728675842285
    6. '[cur' → logprob: -8.203728675842285
    7. ' c' → logprob: -8.453728675842285
    8. 'c' → logprob: -8.828728675842285
    9. '```' → logprob: -8.828728675842285
    10. 'if' → logprob: -9.453728675842285

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931583285331726
    2. ' =' → logprob: -0.6931583285331726
    3. '=A' → logprob: -12.193158149719238
    4. ' ' → logprob: -13.443158149719238
    5. '+=' → logprob: -13.693158149719238
    6. ',' → logprob: -13.818158149719238
    7. ' +=' → logprob: -13.943158149719238
    8. '＝' → logprob: -15.068158149719238
    9. '_' → logprob: -15.568158149719238
    10. '+' → logprob: -15.693158149719238

Token 94: ' T' (ID: 353)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.14871270954608917
    2. 'B' → logprob: -2.398712635040283
    3. 'T' → logprob: -5.023712635040283
    4. 'p' → logprob: -5.273712635040283
    5. 'A' → logprob: -5.523712635040283
    6. 'C' → logprob: -5.648712635040283
    7. 'E' → logprob: -5.773712635040283
    8. 'G' → logprob: -5.773712635040283
    9. 'D' → logprob: -5.898712635040283
    10. ' P' → logprob: -6.273712635040283

Token 95: '[v' (ID: 36561)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cur' → logprob: -8.180258191714529e-06
    2. 'cur' → logprob: -12.125008583068848
    3. '[c' → logprob: -14.250008583068848
    4. '[curr' → logprob: -14.250008583068848
    5. '[' → logprob: -14.625008583068848
    6. '(cur' → logprob: -15.500008583068848
    7. '	cur' → logprob: -15.625008583068848
    8. '[current' → logprob: -16.00000762939453
    9. '```' → logprob: -16.50000762939453
    10. ' [' → logprob: -17.37500762939453

Token 96: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8488317131996155
    2. '[cur' → logprob: -1.2238316535949707
    3. '-' → logprob: -1.4738316535949707
    4. '])' → logprob: -3.2238316535949707
    5. ' -' → logprob: -5.848831653594971
    6. ')' → logprob: -6.473831653594971
    7. '-cur' → logprob: -6.473831653594971
    8. '[' → logprob: -6.723831653594971
    9. ']-' → logprob: -7.098831653594971
    10. 'cur' → logprob: -8.098832130432129

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040603555738925934
    2. '<|end|>' → logprob: -3.9156036376953125
    3. '       ' → logprob: -4.9156036376953125
    4. ' if' → logprob: -5.5406036376953125
    5. '   ' → logprob: -6.1656036376953125
    6. 'if' → logprob: -6.4156036376953125
    7. '<|end|>' → logprob: -6.5406036376953125
    8. ' ' → logprob: -6.7906036376953125
    9. '               ' → logprob: -8.165603637695312
    10. ')' → logprob: -8.165603637695312

Token 98: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5442768335342407
    2. ' if' → logprob: -1.0442768335342407
    3. 'if' (adapté à ' if') → logprob: -2.919276714324951
    4. ' ' → logprob: -6.044276714324951
    5. '       ' → logprob: -6.169276714324951
    6. '<|end|>' → logprob: -6.169276714324951
    7. '            ' → logprob: -6.294276714324951
    8. '        ' → logprob: -6.294276714324951
    9. '               ' → logprob: -7.419276714324951
    10. '   ' → logprob: -7.544276714324951

Token 99: ' V' (ID: 631)
  Prédit: ' cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.06805120408535004
    2. 'cur' → logprob: -3.4430510997772217
    3. ' V' → logprob: -3.5680510997772217
    4. 'V' → logprob: -5.443051338195801
    5. ' ' → logprob: -6.943051338195801
    6. '   ' → logprob: -9.1930513381958
    7. '	cur' → logprob: -9.3180513381958
    8. '(cur' → logprob: -10.4430513381958
    9. '  ' → logprob: -10.5680513381958
    10. ' ' → logprob: -10.9430513381958

Token 100: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.625
    3. 'cur' → logprob: -17.0
    4. '[curr' → logprob: -18.25
    5. '[c' → logprob: -19.0
    6. '[v' → logprob: -19.25
    7. '[current' → logprob: -19.375
    8. ' [' → logprob: -19.5
    9. '	cur' → logprob: -19.75
    10. '(cur' → logprob: -19.75

Token 101: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.04262937232851982
    2. '):' → logprob: -3.6676294803619385
    3. ']' → logprob: -5.042629241943359
    4. ']==' → logprob: -5.042629241943359
    5. ':' → logprob: -6.167629241943359
    6. ' or' → logprob: -8.16762924194336
    7. ']:
' → logprob: -8.29262924194336
    8. '==' → logprob: -8.41762924194336
    9. '"]:' → logprob: -9.16762924194336
    10. ' ]' → logprob: -9.54262924194336

Token 102: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1482129842042923
    2. '           ' → logprob: -2.0232129096984863
    3. 'break' → logprob: -5.898212909698486
    4. ' break' → logprob: -6.023212909698486
    5. '       ' → logprob: -9.148213386535645
    6. '	break' → logprob: -9.523213386535645
    7. ':' → logprob: -9.648213386535645
    8. '   ' → logprob: -10.523213386535645
    9. ' or' → logprob: -10.773213386535645
    10. '                   ' → logprob: -11.398213386535645

Token 103: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10590018332004547
    2. 'break' (adapté à ' break') → logprob: -2.605900287628174
    3. '           ' → logprob: -3.730900287628174
    4. '       ' → logprob: -6.605900287628174
    5. '               ' → logprob: -6.855900287628174
    6. '	break' → logprob: -9.230899810791016
    7. ' if' → logprob: -9.355899810791016
    8. '   ' → logprob: -10.480899810791016
    9. 'if' → logprob: -11.105899810791016
    10. '
' → logprob: -11.730899810791016

Token 104: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3924541175365448
    2. '<|end|>' → logprob: -1.1424541473388672
    3. '<|end|>' → logprob: -5.642454147338867
    4. '       ' → logprob: -6.767454147338867
    5. '\n' → logprob: -7.642454147338867
    6. '   ' → logprob: -9.142454147338867
    7. '
' → logprob: -9.517454147338867
    8. '    
' → logprob: -10.142454147338867
    9. '```' → logprob: -10.392454147338867
    10. 'newline' → logprob: -10.392454147338867

Token 105: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11595259606838226
    2. '<|end|>' → logprob: -2.365952491760254
    3. '\n' → logprob: -5.490952491760254
    4. '       ' → logprob: -5.490952491760254
    5. '<|end|>' → logprob: -5.990952491760254
    6. '   ' → logprob: -6.115952491760254
    7. '```' → logprob: -6.615952491760254
    8. '
' → logprob: -8.365952491760254
    9. 'newline' → logprob: -8.490952491760254
    10. '           ' → logprob: -8.615952491760254

Token 106: ' ans' (ID: 3345)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.046648818999528885
    2. '       ' → logprob: -3.5466487407684326
    3. '<|end|>' → logprob: -4.421648979187012
    4. '   ' → logprob: -5.921648979187012
    5. '<|end|>' → logprob: -7.671648979187012
    6. '
' → logprob: -7.921648979187012
    7. '        
' → logprob: -8.171648979187012
    8. ' if' → logprob: -8.296648979187012
    9. 'if' → logprob: -8.796648979187012
    10. '```' → logprob: -8.796648979187012

Token 107: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0010586526477709413
    2. '+=' → logprob: -7.001058578491211
    3. '+' → logprob: -9.126058578491211
    4. ' =' → logprob: -11.126058578491211
    5. ' +' → logprob: -11.376058578491211
    6. ' -=' → logprob: -11.501058578491211
    7. ' ^=' → logprob: -13.751058578491211
    8. ' ' → logprob: -15.001058578491211
    9. ' |=' → logprob: -15.501058578491211
    10. '=' → logprob: -15.501058578491211

Token 108: ' min' (ID: 1349)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.3921268582344055
    2. 'S' → logprob: -1.1421267986297607
    3. '(S' → logprob: -6.26712703704834
    4. ' (' → logprob: -6.51712703704834
    5. ' max' → logprob: -7.14212703704834
    6. ' ' → logprob: -7.39212703704834
    7. 'max' → logprob: -8.51712703704834
    8. '   ' → logprob: -9.51712703704834
    9. ' min' → logprob: -10.26712703704834
    10. '(' → logprob: -10.39212703704834

Token 109: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.03688988834619522
    2. '(m' → logprob: -4.286890029907227
    3. '(s' → logprob: -4.786890029907227
    4. '(an' → logprob: -5.161890029907227
    5. '(ans' → logprob: -5.286890029907227
    6. '(' → logprob: -5.911890029907227
    7. '((' → logprob: -8.036890029907227
    8. '(min' → logprob: -8.536890029907227
    9. '(a' → logprob: -9.536890029907227
    10. '(M' → logprob: -10.911890029907227

Token 110: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07137587666511536
    2. ',' → logprob: -3.446375846862793
    3. '-' → logprob: -3.446375846862793
    4. ' ,' → logprob: -5.571375846862793
    5. ')' → logprob: -8.196375846862793
    6. ' +' → logprob: -8.321375846862793
    7. '-S' → logprob: -8.946375846862793
    8. ' ' → logprob: -8.946375846862793
    9. ',S' → logprob: -8.946375846862793
    10. '+' → logprob: -9.196375846862793

Token 111: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.02614225447177887
    2. '(m' → logprob: -4.526142120361328
    3. 'S' → logprob: -5.151142120361328
    4. 'M' → logprob: -5.901142120361328
    5. ' m' → logprob: -6.026142120361328
    6. '(S' → logprob: -7.651142120361328
    7. 'x' → logprob: -7.901142120361328
    8. ' ' → logprob: -8.276142120361328
    9. '   ' → logprob: -8.276142120361328
    10. ' (' → logprob: -8.401142120361328

Token 112: 'an' (ID: 270)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.022578569129109383
    2. '(m' → logprob: -4.772578716278076
    3. '-' → logprob: -5.772578716278076
    4. 'n' → logprob: -6.022578716278076
    5. ' m' → logprob: -6.647578716278076
    6. 'VM' → logprob: -6.647578716278076
    7. 'M' → logprob: -7.147578716278076
    8. 'min' → logprob: -7.147578716278076
    9. '(n' → logprob: -7.397578716278076
    10. 'S' → logprob: -7.522578716278076

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5849246382713318
    2. '-' → logprob: -0.8349246382713318
    3. '*' → logprob: -6.084924697875977
    4. ')' → logprob: -6.209924697875977
    5. ')*' → logprob: -6.334924697875977
    6. ' *' → logprob: -6.709924697875977
    7. '//' → logprob: -7.459924697875977
    8. '-m' → logprob: -8.084924697875977
    9. '+' → logprob: -8.459924697875977
    10. '*m' → logprob: -8.584924697875977

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001805010950192809
    2. ' ' → logprob: -6.626804828643799
    3. '2' → logprob: -7.876804828643799
    4. 'm' → logprob: -10.251805305480957
    5. '-' → logprob: -10.626805305480957
    6. ')' → logprob: -10.626805305480957
    7. ' m' → logprob: -12.126805305480957
    8. '   ' → logprob: -13.314305305480957
    9. ')m' → logprob: -13.626805305480957
    10. ' -' → logprob: -13.689305305480957

Token 115: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022642381372861564
    2. '2' → logprob: -8.750226020812988
    3. ' ' → logprob: -9.750226020812988
    4. 'm' → logprob: -12.875226020812988
    5. ')' → logprob: -12.875226020812988
    6. '-' → logprob: -13.562726020812988
    7. '   ' → logprob: -14.312726020812988
    8. '```' → logprob: -15.125226020812988
    9. '  ' → logprob: -15.562726020812988
    10. '#' → logprob: -15.937726020812988

Token 116: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2526329755783081
    2. ')*' → logprob: -1.502632975578308
    3. '*' → logprob: -7.502633094787598
    4. ' )' → logprob: -9.252633094787598
    5. '*m' → logprob: -10.627633094787598
    6. ' *' → logprob: -10.877633094787598
    7. ' ' → logprob: -12.502633094787598
    8. '*)' → logprob: -12.627633094787598
    9. ')*(' → logprob: -13.627633094787598
    10. ' ' → logprob: -14.252633094787598

Token 117: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17302855849266052
    2. ' *' → logprob: -2.0480284690856934
    3. '*m' → logprob: -3.5480284690856934
    4. ',' → logprob: -7.173028469085693
    5. ')' → logprob: -8.673028945922852
    6. ')*' → logprob: -9.548028945922852
    7. 'm' → logprob: -9.923028945922852
    8. ' ' → logprob: -10.548028945922852
    9. ',m' → logprob: -11.798028945922852
    10. ' ' → logprob: -12.173028945922852

Token 118: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1427089422941208
    2. ' m' → logprob: -2.0177090167999268
    3. ' ' → logprob: -11.142708778381348
    4. '	m' → logprob: -11.267708778381348
    5. '   ' → logprob: -13.642708778381348
    6. ' ' → logprob: -13.892708778381348
    7. '*m' → logprob: -14.142708778381348
    8. 'M' → logprob: -14.830208778381348
    9. ')m' → logprob: -15.267708778381348
    10. ')' → logprob: -15.517708778381348

Token 119: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003966317046433687
    2. ')
' → logprob: -5.628966331481934
    3. ',' → logprob: -8.753966331481934
    4. ' )' → logprob: -9.253966331481934
    5. '   ' → logprob: -10.003966331481934
    6. ')

' → logprob: -10.378966331481934
    7. ')\' → logprob: -12.128966331481934
    8. '       ' → logprob: -12.253966331481934
    9. '\n' → logprob: -12.503966331481934
    10. '
' → logprob: -12.878966331481934

Token 120: ' m' (ID: 284)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.11296509951353073
    2. ' S' → logprob: -2.2379651069641113
    3. ' ' → logprob: -9.612964630126953
    4. '   ' → logprob: -10.362964630126953
    5. '	S' → logprob: -11.737964630126953
    6. '  ' → logprob: -11.987964630126953
    7. ' ans' → logprob: -11.987964630126953
    8. '    ' → logprob: -12.612964630126953
    9. '(S' → logprob: -12.612964630126953
    10. 'ans' → logprob: -12.862964630126953

Token 121: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4222685992717743
    2. ' +' → logprob: -1.2972686290740967
    3. '+' → logprob: -2.6722686290740967
    4. ' )' → logprob: -7.422268390655518
    5. '+)' → logprob: -7.547268390655518
    6. '*' → logprob: -7.922268390655518
    7. ')
' → logprob: -8.422268867492676
    8. ')+' → logprob: -9.547268867492676
    9. ' *' → logprob: -9.797268867492676
    10. '*)' → logprob: -9.922268867492676

Token 122: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2555675804615021
    2. ' S' → logprob: -1.5055675506591797
    3. '(S' → logprob: -6.00556755065918
    4. ' (' → logprob: -7.13056755065918
    5. ' ' → logprob: -9.00556755065918
    6. 's' → logprob: -9.50556755065918
    7. '(' → logprob: -10.13056755065918
    8. '	S' → logprob: -11.31806755065918
    9. '_S' → logprob: -11.50556755065918
    10. ')' → logprob: -11.75556755065918

Token 123: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2371043711900711
    2. ' )' → logprob: -1.6121044158935547
    3. ' -' → logprob: -5.487104415893555
    4. ' +' → logprob: -5.612104415893555
    5. '+' → logprob: -6.112104415893555
    6. ')
' → logprob: -7.362104415893555
    7. ' )
' → logprob: -8.112104415893555
    8. '-' → logprob: -8.237104415893555
    9. '*' → logprob: -9.862104415893555
    10. '+)' → logprob: -10.362104415893555

Token 124: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8567542433738708
    2. ' (' → logprob: -1.2317543029785156
    3. 'min' → logprob: -2.7317543029785156
    4. ' m' → logprob: -2.7317543029785156
    5. '(m' → logprob: -3.7317543029785156
    6. '<|end|>' → logprob: -3.9817543029785156
    7. '(min' → logprob: -3.9817543029785156
    8. ' ' → logprob: -4.356754302978516
    9. ')' → logprob: -4.731754302978516
    10. '(' → logprob: -4.731754302978516

Token 125: 'an' (ID: 270)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18364307284355164
    2. ' (' → logprob: -2.433643102645874
    3. '(m' → logprob: -4.308642864227295
    4. 'an' → logprob: -4.308642864227295
    5. ' m' → logprob: -4.558642864227295
    6. '(an' → logprob: -4.808642864227295
    7. '(n' → logprob: -5.058642864227295
    8. '(' → logprob: -5.058642864227295
    9. '(min' → logprob: -5.808642864227295
    10. 'min' → logprob: -5.808642864227295

Token 126: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6329758763313293
    2. '-' → logprob: -0.7579758763313293
    3. ' ' → logprob: -8.382975578308105
    4. ')' → logprob: -9.257975578308105
    5. '<|end|>' → logprob: -10.507975578308105
    6. ' *' → logprob: -12.257975578308105
    7. '
' → logprob: -12.382975578308105
    8. '  ' → logprob: -12.632975578308105
    9. '1' → logprob: -13.382975578308105
    10. '*' → logprob: -13.757975578308105

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09081921726465225
    2. '-' → logprob: -2.9658191204071045
    3. 'm' → logprob: -4.215819358825684
    4. ' ' → logprob: -4.840819358825684
    5. ' -' → logprob: -4.965819358825684
    6. ' m' → logprob: -6.465819358825684
    7. ' (' → logprob: -6.715819358825684
    8. '(' → logprob: -7.090819358825684
    9. ')' → logprob: -7.590819358825684
    10. '0' → logprob: -7.715819358825684

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016706773021724075
    2. ' ' → logprob: -8.875166893005371
    3. '-' → logprob: -11.000166893005371
    4. '0' → logprob: -12.125166893005371
    5. ' -' → logprob: -14.000166893005371
    6. '
' → logprob: -14.250166893005371
    7. '```' → logprob: -14.375166893005371
    8. '2' → logprob: -14.625166893005371
    9. '   ' → logprob: -14.750166893005371
    10. '  ' → logprob: -14.750166893005371

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3465999364852905
    2. '*' → logprob: -2.09660005569458
    3. ' *' → logprob: -2.47160005569458
    4. ')*' → logprob: -2.59660005569458
    5. ' ' → logprob: -5.59660005569458
    6. '*m' → logprob: -5.84660005569458
    7. ' )' → logprob: -6.47160005569458
    8. 'm' → logprob: -7.22160005569458
    9. '   ' → logprob: -7.97160005569458
    10. '1' → logprob: -8.346599578857422

Token 130: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11530005186796188
    2. '*' → logprob: -2.240299940109253
    3. '*m' → logprob: -6.490300178527832
    4. ')' → logprob: -7.240300178527832
    5. ' ' → logprob: -9.615300178527832
    6. ')*' → logprob: -10.115300178527832
    7. '   ' → logprob: -10.365300178527832
    8. '
' → logprob: -11.115300178527832
    9. ' )' → logprob: -11.615300178527832
    10. '  ' → logprob: -11.740300178527832

Token 131: ' s' (ID: 265)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.288194477558136
    2. ' m' → logprob: -2.413194417953491
    3. 'M' → logprob: -2.538194417953491
    4. ' M' → logprob: -3.538194417953491
    5. 'min' → logprob: -4.66319465637207
    6. 'V' → logprob: -4.78819465637207
    7. 'VM' → logprob: -4.78819465637207
    8. 'MM' → logprob: -5.66319465637207
    9. ' ' → logprob: -6.03819465637207
    10. ' V' → logprob: -6.03819465637207

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013709260150790215
    2. 'min' → logprob: -4.76370906829834
    3. '_min' → logprob: -5.76370906829834
    4. '[' → logprob: -7.51370906829834
    5. 'mall' → logprob: -7.88870906829834
    6. 'm' → logprob: -8.01370906829834
    7. ' )' → logprob: -8.01370906829834
    8. '[min' → logprob: -9.63870906829834
    9. '_m' → logprob: -9.76370906829834
    10. ')m' → logprob: -10.63870906829834

Token 133: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 135: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.005966834723949432
    2. 'ans' → logprob: -5.130966663360596
    3. '(ans' → logprob: -10.505967140197754
    4. '	ans' → logprob: -11.755967140197754
    5. ' ' → logprob: -14.005967140197754
    6. ' ' → logprob: -14.380967140197754
    7. ' str' → logprob: -14.505967140197754
    8. 'str' → logprob: -14.630967140197754
    9. '_ans' → logprob: -14.755967140197754
    10. '   ' → logprob: -17.380966186523438

Token 136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: 'MAX' (ID: 21911)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4826532006263733
    2. 'n' → logprob: -1.3576531410217285
    3. '<|end|>' → logprob: -2.3576531410217285
    4. '#' → logprob: -4.6076531410217285
    5. 'def' → logprob: -5.4826531410217285
    6. 's' → logprob: -5.7326531410217285
    7. ':' → logprob: -5.7326531410217285
    8. '(n' → logprob: -5.9826531410217285
    9. ' ' → logprob: -6.9826531410217285
    10. '\n' → logprob: -6.9826531410217285

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.571637749671936
    2. '_' → logprob: -1.321637749671936
    3. '=' → logprob: -1.946637749671936
    4. '_SIZE' → logprob: -4.5716376304626465
    5. '_MAX' → logprob: -5.1966376304626465
    6. 'MAX' → logprob: -5.5716376304626465
    7. ')' → logprob: -6.5716376304626465
    8. 'S' → logprob: -7.1966376304626465
    9. '_V' → logprob: -7.1966376304626465
    10. 'SIZE' → logprob: -8.071638107299805

Token 139: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.28929731249809265
    2. '100' → logprob: -1.539297342300415
    3. '200' → logprob: -3.414297342300415
    4. 'int' → logprob: -7.414297103881836
    5. '300' → logprob: -7.414297103881836
    6. '400' → logprob: -7.414297103881836
    7. '500' → logprob: -7.664297103881836
    8. '2' → logprob: -7.914297103881836
    9. '1' → logprob: -8.164297103881836
    10. '101' → logprob: -8.539297103881836

Token 140: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5582215189933777
    2. '100' → logprob: -0.9332215189933777
    3. '200' → logprob: -3.4332215785980225
    4. '400' → logprob: -7.558221340179443
    5. '500' → logprob: -7.933221340179443
    6. '300' → logprob: -8.058221817016602
    7. '101' → logprob: -8.308221817016602
    8. '2' → logprob: -9.058221817016602
    9. '250' → logprob: -9.058221817016602
    10. 'int' → logprob: -9.058221817016602

Token 141: '0' (ID: 15)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.1627401113510132
    2. '=' → logprob: -1.4127401113510132
    3. '000' → logprob: -2.0377402305603027
    4. 'MAX' → logprob: -2.2877402305603027
    5. ' =' → logprob: -2.5377402305603027
    6. '_' → logprob: -3.1627402305603027
    7. '
' → logprob: -4.412740230560303
    8. '

' → logprob: -4.412740230560303
    9. '+' → logprob: -4.537740230560303
    10. ')' → logprob: -4.787740230560303

Token 142: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6422097682952881
    2. '
' → logprob: -0.8922097682952881
    3. '  
' → logprob: -3.767209768295288
    4. 's' → logprob: -5.142210006713867
    5. '(n' → logprob: -5.142210006713867
    6. 'VM' → logprob: -5.392210006713867
    7. ' 
' → logprob: -5.767210006713867
    8. '#' → logprob: -5.892210006713867
    9. '\n' → logprob: -6.017210006713867
    10. 'import' → logprob: -6.142210006713867

Token 143: 'VM' (ID: 17851)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02681409753859043
    2. '
' → logprob: -4.026813983917236
    3. '(n' → logprob: -6.026813983917236
    4. ' n' → logprob: -6.401813983917236
    5. '#' → logprob: -6.651813983917236
    6. ' 
' → logprob: -6.901813983917236
    7. 'import' → logprob: -7.401813983917236
    8. 's' → logprob: -7.776813983917236
    9. '  
' → logprob: -8.276814460754395
    10. '```' → logprob: -8.401814460754395

Token 144: 'AX' (ID: 5202)
  Prédit: 'AX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AX' → logprob: -1.5690089639974758e-05
    2. 'A' → logprob: -11.750015258789062
    3. 'MAX' → logprob: -12.875015258789062
    4. 'ax' → logprob: -13.125015258789062
    5. 'Ax' → logprob: -14.000015258789062
    6. 'AM' → logprob: -14.875015258789062
    7. 'X' → logprob: -15.000015258789062
    8. 'AC' → logprob: -15.250015258789062
    9. 'AP' → logprob: -15.250015258789062
    10. '   ' → logprob: -15.750015258789062

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6712629795074463
    2. '=' → logprob: -1.0462629795074463
    3. '+' → logprob: -2.0462629795074463
    4. ' +' → logprob: -4.796262741088867
    5. ',' → logprob: -9.421262741088867
    6. ' ' → logprob: -9.796262741088867
    7. '+=' → logprob: -10.671262741088867
    8. ' +=' → logprob: -11.296262741088867
    9. '_' → logprob: -12.046262741088867
    10. 'plus' → logprob: -12.171262741088867

Token 146: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.20997542142868042
    2. '10' → logprob: -2.084975481033325
    3. ' ' → logprob: -3.584975481033325
    4. '200' → logprob: -4.084975242614746
    5. 'MAX' → logprob: -4.084975242614746
    6. '500' → logprob: -6.959975242614746
    7. 'max' → logprob: -7.709975242614746
    8. '300' → logprob: -7.959975242614746
    9. 'int' → logprob: -7.959975242614746
    10. '101' → logprob: -8.334975242614746

Token 147: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.30498185753822327
    2. '10' → logprob: -1.5549818277359009
    3. '200' → logprob: -3.8049819469451904
    4. 'MAX' → logprob: -3.8049819469451904
    5. '500' → logprob: -6.304981708526611
    6. 'max' → logprob: -6.429981708526611
    7. 'int' → logprob: -7.179981708526611
    8. '300' → logprob: -7.429981708526611
    9. '20' → logprob: -8.05498218536377
    10. '0' → logprob: -8.17998218536377

Token 148: '00' (ID: 504)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7602189183235168
    2. '
' → logprob: -1.885218858718872
    3. 'n' → logprob: -2.010218858718872
    4. ' 
' → logprob: -2.510218858718872
    5. '#' → logprob: -3.510218858718872
    6. '  
' → logprob: -3.510218858718872
    7. '0' → logprob: -4.260219097137451
    8. ' =' → logprob: -4.260219097137451
    9. '=' → logprob: -4.510219097137451
    10. '+' → logprob: -4.760219097137451

Token 149: '

' (ID: 279)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3883238732814789
    2. 's' → logprob: -1.5133239030838013
    3. '
' → logprob: -2.3883237838745117
    4. '#' → logprob: -5.263323783874512
    5. ' 
' → logprob: -6.013323783874512
    6. 'A' → logprob: -7.763323783874512
    7. ' s' → logprob: -8.013323783874512
    8. '<|end|>' → logprob: -8.263323783874512
    9. ' n' → logprob: -8.388323783874512
    10. 'V' → logprob: -8.638323783874512

Token 150: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01647113263607025
    2. '#' → logprob: -4.391470909118652
    3. 's' → logprob: -6.016470909118652
    4. 'A' → logprob: -7.516470909118652
    5. 'import' → logprob: -8.391470909118652
    6. '
' → logprob: -9.016470909118652
    7. 'def' → logprob: -9.266470909118652
    8. 'input' → logprob: -9.266470909118652
    9. ',' → logprob: -9.516470909118652
    10. ' n' → logprob: -9.766470909118652

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012972099706530571
    2. '=' → logprob: -4.387971878051758
    3. ',' → logprob: -7.887971878051758
    4. ' =
' → logprob: -10.387971878051758
    5. ' ' → logprob: -10.887971878051758
    6. ' ,' → logprob: -11.012971878051758
    7. '=int' → logprob: -11.012971878051758
    8. ' =
' → logprob: -13.637971878051758
    9. ' =)' → logprob: -14.012971878051758
    10. '=input' → logprob: -14.512971878051758

Token 152: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06359326094388962
    2. 'int' → logprob: -2.8135931491851807
    3. ' ' → logprob: -6.43859338760376
    4. ' MAX' → logprob: -11.188592910766602
    5. ' 
' → logprob: -13.188592910766602
    6. ' ' → logprob: -13.188592910766602
    7. '0' → logprob: -13.188592910766602
    8. '10' → logprob: -13.688592910766602
    9. 'MAX' → logprob: -13.938592910766602
    10. '<int' → logprob: -13.938592910766602

Token 153: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.5790517926216125
    2. '(' → logprob: -0.8290517926216125
    3. '()' → logprob: -6.079051971435547
    4. 'input' → logprob: -7.204051971435547
    5. '('' → logprob: -10.204051971435547
    6. '(sys' → logprob: -11.204051971435547
    7. '(
' → logprob: -12.329051971435547
    8. '("' → logprob: -12.704051971435547
    9. '(raw' → logprob: -13.079051971435547
    10. ' input' → logprob: -13.204051971435547

Token 154: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004122803919017315
    2. '()' → logprob: -5.504122734069824
    3. '().' → logprob: -10.254122734069824
    4. ')' → logprob: -11.879122734069824
    5. '())
' → logprob: -13.629122734069824
    6. ' ())' → logprob: -14.754122734069824
    7. '(' → logprob: -15.379122734069824
    8. '();)' → logprob: -15.754122734069824
    9. '())

' → logprob: -16.25412368774414
    10. '()),' → logprob: -17.12912368774414

Token 155: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.004737226292490959
    2. 's' → logprob: -5.379737377166748
    3. 'V' → logprob: -9.25473690032959
    4. ' A' → logprob: -11.87973690032959
    5. 'VM' → logprob: -12.12973690032959
    6. 'S' → logprob: -12.87973690032959
    7. '#' → logprob: -12.87973690032959
    8. 'a' → logprob: -14.00473690032959
    9. ')' → logprob: -14.50473690032959
    10. 'T' → logprob: -15.00473690032959

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761146545410156
    2. '=' → logprob: -0.8261146545410156
    3. '=[]' → logprob: -8.951114654541016
    4. ',' → logprob: -10.201114654541016
    5. '=list' → logprob: -12.951114654541016
    6. '=[' → logprob: -13.576114654541016
    7. ' =[' → logprob: -13.701114654541016
    8. '[]' → logprob: -13.826114654541016
    9. '[' → logprob: -13.826114654541016
    10. '[:]' → logprob: -14.576114654541016

Token 157: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7399348616600037
    2. ' list' → logprob: -0.9899348616600037
    3. '[list' → logprob: -1.9899349212646484
    4. '[' → logprob: -4.489934921264648
    5. ' [' → logprob: -5.864934921264648
    6. '[]' → logprob: -7.989934921264648
    7. '[int' → logprob: -9.989934921264648
    8. '[input' → logprob: -10.364934921264648
    9. ' []' → logprob: -10.739934921264648
    10. '=list' → logprob: -10.989934921264648

Token 158: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002682496269699186
    2. '0' → logprob: -9.00026798248291
    3. ']int' → logprob: -9.50026798248291
    4. '*' → logprob: -9.87526798248291
    5. '(int' → logprob: -12.00026798248291
    6. ']' → logprob: -12.00026798248291
    7. ' int' → logprob: -12.50026798248291
    8. ']*' → logprob: -13.50026798248291
    9. '[int' → logprob: -15.12526798248291
    10. '<int' → logprob: -15.50026798248291

Token 159: '(x' (ID: 4061)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.20141547918319702
    2. '(x' → logprob: -2.201415538787842
    3. '(' → logprob: -3.076415538787842
    4. '()]' → logprob: -4.201415538787842
    5. '()' → logprob: -4.576415538787842
    6. '(i' → logprob: -8.701415061950684
    7. '(
' → logprob: -8.951415061950684
    8. '(

' → logprob: -10.701415061950684
    9. ']' → logprob: -10.826415061950684
    10. ' ()' → logprob: -11.701415061950684

Token 160: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03328278660774231
    2. '()]' → logprob: -4.03328275680542
    3. '())' → logprob: -4.40828275680542
    4. ')' → logprob: -6.15828275680542
    5. '(' → logprob: -7.65828275680542
    6. ' ()' → logprob: -9.283283233642578
    7. '(input' → logprob: -9.908283233642578
    8. '(x' → logprob: -10.033283233642578
    9. '()
' → logprob: -11.533283233642578
    10. 'for' → logprob: -11.908283233642578

Token 161: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.130545973777771
    2. 'for' → logprob: -2.1305460929870605
    3. ' for' → logprob: -6.1305460929870605
    4. '()]' → logprob: -7.2555460929870605
    5. '(' → logprob: -7.6305460929870605
    6. ')' → logprob: -8.880545616149902
    7. ' ()' → logprob: -10.380545616149902
    8. '())' → logprob: -11.005545616149902
    9. ']' → logprob: -11.255545616149902
    10. 'in' → logprob: -11.505545616149902

Token 162: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.15498997271060944
    2. 'input' → logprob: -2.0299899578094482
    3. 'x' → logprob: -4.904990196228027
    4. ' x' → logprob: -5.404990196228027
    5. ' sys' → logprob: -8.529990196228027
    6. '_' → logprob: -9.779990196228027
    7. 'sys' → logprob: -10.029990196228027
    8. ' in' → logprob: -11.279990196228027
    9. ' ' → logprob: -11.654990196228027
    10. '_input' → logprob: -12.154990196228027

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004682884085923433
    2. 'in' → logprob: -5.754683017730713
    3. 'input' → logprob: -6.629683017730713
    4. ' input' → logprob: -8.879682540893555
    5. 'import' → logprob: -10.379682540893555
    6. '(input' → logprob: -12.629682540893555
    7. '=input' → logprob: -12.754682540893555
    8. ' ' → logprob: -13.254682540893555
    9. 'sys' → logprob: -13.629682540893555
    10. ' sys' → logprob: -13.629682540893555

Token 164: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889264822006226
    2. ' input' → logprob: -2.578892707824707
    3. 'sys' → logprob: -13.203892707824707
    4. ' sys' → logprob: -14.078892707824707
    5. ' ' → logprob: -16.07889175415039
    6. '(input' → logprob: -16.45389175415039
    7. 'range' → logprob: -17.32889175415039
    8. '	input' → logprob: -17.45389175415039
    9. '<input' → logprob: -17.70389175415039
    10. '=input' → logprob: -17.70389175415039

Token 165: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -14.500000953674316
    3. ' ().' → logprob: -17.625
    4. '.split' → logprob: -18.375
    5. '()].' → logprob: -19.625
    6. '(' → logprob: -20.125
    7. 'split' → logprob: -20.25
    8. '()]' → logprob: -20.375
    9. '.strip' → logprob: -21.5
    10. '.' → logprob: -22.125

Token 166: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.01117007341235876
    2. 'strip' → logprob: -4.511169910430908
    3. 'rstrip' → logprob: -9.011170387268066
    4. ' split' → logprob: -15.136170387268066
    5. '(split' → logprob: -17.88616943359375
    6. 'spl' → logprob: -18.26116943359375
    7. ' strip' → logprob: -18.63616943359375
    8. 'read' → logprob: -19.76116943359375
    9. '.split' → logprob: -22.01116943359375
    10. '_split' → logprob: -23.01116943359375

Token 167: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.00010080150241265073
    2. '()' → logprob: -9.250101089477539
    3. '()]
' → logprob: -12.500101089477539
    4. '(' → logprob: -14.500101089477539
    5. ']' → logprob: -15.125101089477539
    6. '())' → logprob: -16.25010108947754
    7. ' ()' → logprob: -17.25010108947754
    8. '()][' → logprob: -18.62510108947754
    9. '（）' → logprob: -18.75010108947754
    10. ']()' → logprob: -19.25010108947754

Token 168: 's' (ID: 82)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00017398154886905104
    2. ' T' → logprob: -8.875173568725586
    3. 's' → logprob: -10.875173568725586
    4. 'V' → logprob: -11.250173568725586
    5. 't' → logprob: -13.125173568725586
    6. '[' → logprob: -16.875173568725586
    7. ' 
' → logprob: -17.000173568725586
    8. ' =' → logprob: -17.500173568725586
    9. '<|end|>' → logprob: -17.625173568725586
    10. ']' → logprob: -17.750173568725586

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11283721029758453
    2. '=' → logprob: -2.237837314605713
    3. ',' → logprob: -11.987836837768555
    4. ' ' → logprob: -12.612836837768555
    5. '=int' → logprob: -12.987836837768555
    6. ' ' → logprob: -13.862836837768555
    7. '=input' → logprob: -15.112836837768555
    8. '	' → logprob: -15.487836837768555
    9. '  ' → logprob: -15.737836837768555
    10. 's' → logprob: -15.862836837768555

Token 170: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.006848807912319899
    2. 'VM' → logprob: -5.5068488121032715
    3. ' min' → logprob: -6.0068488121032715
    4. 'A' → logprob: -8.506848335266113
    5. 'V' → logprob: -10.506848335266113
    6. 'max' → logprob: -11.631848335266113
    7. '100' → logprob: -11.631848335266113
    8. ' A' → logprob: -11.756848335266113
    9. 'MIN' → logprob: -11.881848335266113
    10. ' VM' → logprob: -11.881848335266113

Token 171: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00011605957115534693
    2. '(' → logprob: -9.875116348266602
    3. '(V' → logprob: -10.000116348266602
    4. 'A' → logprob: -11.750116348266602
    5. '(a' → logprob: -12.000116348266602
    6. '(
' → logprob: -13.875116348266602
    7. '(S' → logprob: -14.000116348266602
    8. '(s' → logprob: -14.250116348266602
    9. '((' → logprob: -14.500116348266602
    10. '([' → logprob: -14.625116348266602

Token 172: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5288631916046143
    2. '())' → logprob: -0.9038631916046143
    3. '()' → logprob: -5.278862953186035
    4. ')
' → logprob: -8.778862953186035
    5. '())
' → logprob: -8.778862953186035
    6. ' )' → logprob: -9.278862953186035
    7. '()]' → logprob: -9.653862953186035
    8. ')]' → logprob: -9.778862953186035
    9. '])' → logprob: -10.903862953186035
    10. '(' → logprob: -11.028862953186035

Token 173: 'B' (ID: 33)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.0001490716531407088
    2. 'V' → logprob: -8.87514877319336
    3. ' T' → logprob: -12.50014877319336
    4. 't' → logprob: -12.87514877319336
    5. '#' → logprob: -14.37514877319336
    6. 'A' → logprob: -15.12514877319336
    7. 'True' → logprob: -15.25014877319336
    8. ' 
' → logprob: -15.37514877319336
    9. 's' → logprob: -15.37514877319336
    10. '[' → logprob: -15.75014877319336

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04308585450053215
    2. '=' → logprob: -3.168085813522339
    3. '=[' → logprob: -10.543086051940918
    4. '=[]' → logprob: -10.793086051940918
    5. '[' → logprob: -10.918086051940918
    6. ' =[' → logprob: -12.043086051940918
    7. ',' → logprob: -12.168086051940918
    8. ' ' → logprob: -12.668086051940918
    9. ' ' → logprob: -12.918086051940918
    10. '=input' → logprob: -14.168086051940918

Token 175: ' sorted' (ID: 20099)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.35217729210853577
    2. '[int' → logprob: -1.7271772623062134
    3. ' [' → logprob: -2.727177381515503
    4. '[A' → logprob: -3.727177381515503
    5. '[len' → logprob: -4.852177143096924
    6. '[n' → logprob: -5.102177143096924
    7. '[s' → logprob: -5.227177143096924
    8. '[T' → logprob: -6.227177143096924
    9. '[list' → logprob: -6.477177143096924
    10. '{}' → logprob: -6.727177143096924

Token 176: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -1.4855663721391466e-05
    2. '(' → logprob: -11.375015258789062
    3. '(B' → logprob: -13.000015258789062
    4. 'A' → logprob: -14.625015258789062
    5. '([' → logprob: -15.000015258789062
    6. '(a' → logprob: -16.625015258789062
    7. '((' → logprob: -16.625015258789062
    8. '(
' → logprob: -16.625015258789062
    9. '(list' → logprob: -17.000015258789062
    10. '(set' → logprob: -17.125015258789062

Token 177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14547792077064514
    2. '())' → logprob: -2.0204780101776123
    3. '()' → logprob: -5.895477771759033
    4. '())
' → logprob: -11.520478248596191
    5. ')
' → logprob: -12.020478248596191
    6. '))' → logprob: -12.395478248596191
    7. ')]' → logprob: -12.520478248596191
    8. '(' → logprob: -12.645478248596191
    9. ' ())' → logprob: -12.645478248596191
    10. '])' → logprob: -12.770478248596191

Token 178: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00030972150852903724
    2. 'idx' → logprob: -9.250309944152832
    3. 'V' → logprob: -9.375309944152832
    4. 'index' → logprob: -9.750309944152832
    5. '#' → logprob: -10.125309944152832
    6. 't' → logprob: -12.125309944152832
    7. 'pos' → logprob: -12.500309944152832
    8. 'm' → logprob: -12.625309944152832
    9. 'for' → logprob: -12.875309944152832
    10. 'from' → logprob: -13.125309944152832

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02631562203168869
    2. ' =' → logprob: -3.651315689086914
    3. '[' → logprob: -12.026315689086914
    4. '=[]' → logprob: -12.651315689086914
    5. '=[' → logprob: -12.651315689086914
    6. '={}' → logprob: -13.276315689086914
    7. ',' → logprob: -14.526315689086914
    8. ' =[' → logprob: -15.026315689086914
    9. ']' → logprob: -16.526315689086914
    10. ' ' → logprob: -16.526315689086914

Token 180: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5441853404045105
    2. '{}' → logprob: -1.0441854000091553
    3. '{' → logprob: -2.7941854000091553
    4. '[A' → logprob: -6.294185161590576
    5. '[B' → logprob: -6.294185161590576
    6. '[-' → logprob: -6.669185161590576
    7. '{}
' → logprob: -6.919185161590576
    8. '[len' → logprob: -8.544185638427734
    9. '{}

' → logprob: -9.044185638427734
    10. ' [' → logprob: -9.544185638427734

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007719844579696655
    2. '-' → logprob: -5.132719993591309
    3. 'B' → logprob: -6.382719993591309
    4. 'A' → logprob: -9.757719993591309
    5. 'VM' → logprob: -11.882719993591309
    6. 'b' → logprob: -12.257719993591309
    7. 'None' → logprob: -12.382719993591309
    8. 'V' → logprob: -12.382719993591309
    9. 'n' → logprob: -12.632719993591309
    10. 'len' → logprob: -13.007719993591309

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.46106186509132385
    2. ']*' → logprob: -1.0860618352890015
    3. 'for' → logprob: -4.086061954498291
    4. ' for' → logprob: -4.586061954498291
    5. ']*(' → logprob: -5.336061954498291
    6. '	for' → logprob: -12.086061477661133
    7. 'n' → logprob: -12.211061477661133
    8. '0' → logprob: -12.336061477661133
    9. '*' → logprob: -13.211061477661133
    10. ')' → logprob: -13.336061477661133

Token 183: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3811405301094055
    2. '*' → logprob: -1.5061404705047607
    3. '*n' → logprob: -3.2561404705047607
    4. ' for' → logprob: -4.00614070892334
    5. '
' → logprob: -4.00614070892334
    6. '<|end|>' → logprob: -4.75614070892334
    7. ' *' → logprob: -5.63114070892334
    8. '[n' → logprob: -5.88114070892334
    9. '[' → logprob: -6.75614070892334
    10. '(n' → logprob: -6.75614070892334

Token 184: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7436460256576538
    2. '(MAX' → logprob: -1.2436460256576538
    3. 'MAX' → logprob: -1.7436460256576538
    4. '(n' → logprob: -3.3686461448669434
    5. 'VM' → logprob: -4.118646144866943
    6. '(' → logprob: -5.493646144866943
    7. '(V' → logprob: -5.618646144866943
    8. 'len' → logprob: -6.868646144866943
    9. '(len' → logprob: -7.493646144866943
    10. '(max' → logprob: -8.243645668029785

Token 185: 'VM' (ID: 17851)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.14931856095790863
    2. 'MAX' → logprob: -2.0243184566497803
    3. '(MAX' → logprob: -6.524318695068359
    4. 'len' → logprob: -6.524318695068359
    5. '(n' → logprob: -6.649318695068359
    6. 'VM' → logprob: -6.899318695068359
    7. 'max' → logprob: -7.024318695068359
    8. '(' → logprob: -8.02431869506836
    9. '100' → logprob: -10.14931869506836
    10. '(max' → logprob: -10.27431869506836

Token 186: 'AX' (ID: 5202)
  Prédit: 'AX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AX' → logprob: -0.0022664708085358143
    2. 'MAX' → logprob: -6.8772664070129395
    3. 'ax' → logprob: -7.0022664070129395
    4. '
' → logprob: -8.877266883850098
    5. 'X' → logprob: -9.752266883850098
    6. 'A' → logprob: -9.752266883850098
    7. 'AL' → logprob: -11.252266883850098
    8. 'max' → logprob: -11.502266883850098
    9. ')' → logprob: -12.127266883850098
    10. 'N' → logprob: -12.377266883850098

Token 187: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4825323820114136
    2. '+' → logprob: -0.9825323820114136
    3. ')
' → logprob: -4.982532501220703
    4. '*' → logprob: -6.857532501220703
    5. ' +' → logprob: -7.857532501220703
    6. '1' → logprob: -10.357532501220703
    7. '0' → logprob: -10.857532501220703
    8. '+)' → logprob: -10.857532501220703
    9. ')

' → logprob: -11.107532501220703
    10. '+n' → logprob: -11.982532501220703

Token 188: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009967254009097815
    2. ' ' → logprob: -7.6259965896606445
    3. '2' → logprob: -7.7509965896606445
    4. '10' → logprob: -10.500996589660645
    5. '100' → logprob: -10.875996589660645
    6. 'MAX' → logprob: -11.125996589660645
    7. 'n' → logprob: -11.875996589660645
    8. '5' → logprob: -13.625996589660645
    9. '   ' → logprob: -13.625996589660645
    10. '(' → logprob: -14.125996589660645

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.17420256882906e-05
    2. '2' → logprob: -10.000091552734375
    3. ' ' → logprob: -10.500091552734375
    4. '10' → logprob: -11.125091552734375
    5. '5' → logprob: -12.750091552734375
    6. '100' → logprob: -14.500091552734375
    7. '１' → logprob: -15.500091552734375
    8. '11' → logprob: -16.500091552734375
    9. '   ' → logprob: -16.875091552734375
    10. '7' → logprob: -16.875091552734375

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10025336593389511
    2. ')
' → logprob: -2.3502533435821533
    3. ')
' → logprob: -10.600253105163574
    4. ')

' → logprob: -10.850253105163574
    5. ' )' → logprob: -13.850253105163574
    6. '
' → logprob: -14.475253105163574
    7. ' )
' → logprob: -14.975253105163574
    8. ')n' → logprob: -15.475253105163574
    9. '0' → logprob: -15.975253105163574
    10. '<|end|>' → logprob: -16.60025405883789

Token 191: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044723328202962875
    2. ' for' → logprob: -3.2947232723236084
    3. '<|end|>' → logprob: -5.0447235107421875
    4. 'i' → logprob: -9.919723510742188
    5. 'n' → logprob: -10.294723510742188
    6. '
' → logprob: -10.419723510742188
    7. ' 
' → logprob: -10.669723510742188
    8. ')' → logprob: -10.919723510742188
    9. '0' → logprob: -11.044723510742188
    10. ' ' → logprob: -11.544723510742188

Token 192: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001076514832675457
    2. ' i' → logprob: -7.251076698303223
    3. 'v' → logprob: -8.126076698303223
    4. 'x' → logprob: -9.626076698303223
    5. 'a' → logprob: -13.376076698303223
    6. 'b' → logprob: -14.001076698303223
    7. '_i' → logprob: -14.376076698303223
    8. 'value' → logprob: -14.626076698303223
    9. '(i' → logprob: -14.626076698303223
    10. ' v' → logprob: -15.251076698303223

Token 193: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09596148133277893
    2. 'in' → logprob: -2.470961570739746
    3. ',' → logprob: -4.970961570739746
    4. ' ,' → logprob: -10.345961570739746
    5. ' ' → logprob: -11.220961570739746
    6. ',in' → logprob: -12.095961570739746
    7. 'range' → logprob: -12.845961570739746
    8. '	in' → logprob: -13.345961570739746
    9. ',v' → logprob: -14.470961570739746
    10. ' i' → logprob: -14.470961570739746

Token 194: ' b' (ID: 287)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2082255631685257
    2. 'a' → logprob: -1.8332256078720093
    3. 'x' → logprob: -3.9582254886627197
    4. 'b' → logprob: -5.083225727081299
    5. ' v' → logprob: -6.208225727081299
    6. 'value' → logprob: -7.958225727081299
    7. ' a' → logprob: -8.70822525024414
    8. 'val' → logprob: -8.95822525024414
    9. ' x' → logprob: -9.95822525024414
    10. 'ai' → logprob: -10.33322525024414

Token 195: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4744538962841034
    2. ' in' → logprob: -0.9744539260864258
    3. 'n' → logprob: -7.974453926086426
    4. 'b' → logprob: -11.599453926086426
    5. 'v' → logprob: -11.974453926086426
    6. ',' → logprob: -12.224453926086426
    7. 't' → logprob: -12.599453926086426
    8. ' ' → logprob: -12.849453926086426
    9. 'x' → logprob: -13.224453926086426
    10. 'i' → logprob: -13.474453926086426

Token 196: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10020678490400314
    2. ' enumerate' → logprob: -2.3502068519592285
    3. 'enum' → logprob: -16.97520637512207
    4. '(en' → logprob: -18.10020637512207
    5. 'en' → logprob: -18.22520637512207
    6. '.enumer' → logprob: -18.60020637512207
    7. 'zip' → logprob: -18.72520637512207
    8. '
' → logprob: -18.85020637512207
    9. 'Enumer' → logprob: -19.22520637512207
    10. '(' → logprob: -19.47520637512207

Token 197: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.009259906597435474
    2. 'B' → logprob: -5.1342597007751465
    3. '(A' → logprob: -5.7592597007751465
    4. 'A' → logprob: -8.759260177612305
    5. '(b' → logprob: -11.759260177612305
    6. '(' → logprob: -12.634260177612305
    7. ' B' → logprob: -14.509260177612305
    8. '((' → logprob: -14.759260177612305
    9. '(sorted' → logprob: -14.759260177612305
    10. 'b' → logprob: -14.884260177612305

Token 198: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5760243535041809
    2. '):' → logprob: -0.8260243535041809
    3. ':' → logprob: -10.201024055480957
    4. '):
' → logprob: -10.576024055480957
    5. ')' → logprob: -11.951024055480957
    6. '):

' → logprob: -12.076024055480957
    7. ':
' → logprob: -12.826024055480957
    8. 'A' → logprob: -13.076024055480957
    9. '[' → logprob: -13.701024055480957
    10. ',' → logprob: -13.951024055480957

Token 199: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.6593989729881287
    2. ' T' → logprob: -0.7843989729881287
    3. '   ' → logprob: -3.6593990325927734
    4. ':
' → logprob: -7.909399032592773
    5. ':' → logprob: -9.034399032592773
    6. '	T' → logprob: -9.284399032592773
    7. '):
' → logprob: -9.909399032592773
    8. ' ' → logprob: -11.284399032592773
    9. '.T' → logprob: -11.784399032592773
    10. ':T' → logprob: -11.909399032592773

Token 200: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.014183126389980316
    2. ' T' → logprob: -4.264183044433594
    3. 't' → logprob: -12.139183044433594
    4. ' ' → logprob: -12.514183044433594
    5. '   ' → logprob: -12.639183044433594
    6. 'v' → logprob: -13.139183044433594
    7. 'idx' → logprob: -13.264183044433594
    8. '
' → logprob: -14.389183044433594
    9. 'index' → logprob: -14.389183044433594
    10. '#' → logprob: -15.639183044433594

Token 201: '[b' (ID: 40800)
  Prédit: '[A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.5781938433647156
    2. '[b' → logprob: -0.8281938433647156
    3. '[' → logprob: -7.078193664550781
    4. '[i' → logprob: -7.453193664550781
    5. 'b' → logprob: -7.953193664550781
    6. '[B' → logprob: -8.828193664550781
    7. 'A' → logprob: -9.078193664550781
    8. '[a' → logprob: -9.328193664550781
    9. '[V' → logprob: -10.203193664550781
    10. '[T' → logprob: -11.078193664550781

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1434100717306137
    2. '=' → logprob: -2.3934099674224854
    3. ']=' → logprob: -3.7684099674224854
    4. ' =' → logprob: -4.1434102058410645
    5. '=i' → logprob: -5.7684102058410645
    6. '[i' → logprob: -9.393409729003906
    7. ' ]' → logprob: -10.143409729003906
    8. ')' → logprob: -10.643409729003906
    9. ')=' → logprob: -11.643409729003906
    10. ' i' → logprob: -11.893409729003906

Token 203: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030467769131064415
    2. ' =' → logprob: -3.5304677486419678
    3. '=i' → logprob: -7.280467987060547
    4. '=int' → logprob: -11.655467987060547
    5. '=
' → logprob: -12.405467987060547
    6. '=index' → logprob: -12.405467987060547
    7. '=n' → logprob: -12.780467987060547
    8. '=A' → logprob: -13.280467987060547
    9. '=s' → logprob: -13.280467987060547
    10. '=user' → logprob: -14.155467987060547

Token 204: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5763682723045349
    2. 'A' → logprob: -0.8263682723045349
    3. 'a' → logprob: -8.82636833190918
    4. ' A' → logprob: -8.82636833190918
    5. ' i' → logprob: -9.32636833190918
    6. ' ' → logprob: -11.07636833190918
    7. 'b' → logprob: -11.20136833190918
    8. 'n' → logprob: -12.82636833190918
    9. 'V' → logprob: -13.20136833190918
    10. '0' → logprob: -13.20136833190918

Token 205: '
' (ID: 198)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.2426205575466156
    2. '<|end|>' → logprob: -1.742620587348938
    3. 'n' → logprob: -3.7426204681396484
    4. 'print' → logprob: -4.867620468139648
    5. 'True' → logprob: -6.117620468139648
    6. '#' → logprob: -6.367620468139648
    7. ' V' → logprob: -6.742620468139648
    8. ')' → logprob: -7.242620468139648
    9. '...' → logprob: -7.742620468139648
    10. '```' → logprob: -7.992620468139648

Token 206: 'V' (ID: 53)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09051916003227234
    2. '<|end|>' → logprob: -2.7155191898345947
    3. 'V' → logprob: -4.840518951416016
    4. ')' → logprob: -5.590518951416016
    5. 'for' → logprob: -6.090518951416016
    6. '#' → logprob: -6.215518951416016
    7. 'n' → logprob: -6.215518951416016
    8. '```' → logprob: -7.840518951416016
    9. '()' → logprob: -8.340518951416016
    10. '(' → logprob: -8.340518951416016

Token 207: ' =[' (ID: 187949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26263871788978577
    2. 'M' → logprob: -1.5126386880874634
    3. '=' → logprob: -4.762638568878174
    4. '[i' → logprob: -7.137638568878174
    5. '[:]' → logprob: -8.387639045715332
    6. '[n' → logprob: -8.512639045715332
    7. '=[' → logprob: -8.887639045715332
    8. 'i' → logprob: -9.137639045715332
    9. 'n' → logprob: -9.262639045715332
    10. 'V' → logprob: -9.262639045715332

Token 208: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0008359544444829226
    2. '[' → logprob: -7.25083589553833
    3. ' False' → logprob: -9.000836372375488
    4. ' [' → logprob: -13.500836372375488
    5. '(False' → logprob: -14.125836372375488
    6. '0' → logprob: -15.250836372375488
    7. '   ' → logprob: -15.375836372375488
    8. '
' → logprob: -17.500835418701172
    9. 'True' → logprob: -18.000835418701172
    10. ']' → logprob: -18.125835418701172

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0577465295791626
    2. ' for' → logprob: -3.182746410369873
    3. ']*' → logprob: -4.682746410369873
    4. ' ]' → logprob: -5.557746410369873
    5. '(n' → logprob: -6.807746410369873
    6. 'for' → logprob: -8.807746887207031
    7. '[n' → logprob: -9.182746887207031
    8. ']*(' → logprob: -9.557746887207031
    9. ' n' → logprob: -10.182746887207031
    10. ' *' → logprob: -11.057746887207031

Token 210: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.683844268321991
    2. '(n' → logprob: -1.6838443279266357
    3. ' *' → logprob: -1.8088443279266357
    4. ' for' → logprob: -2.8088443279266357
    5. '*n' → logprob: -3.4338443279266357
    6. ']*' → logprob: -4.058844089508057
    7. ']' → logprob: -4.308844089508057
    8. ' n' → logprob: -4.558844089508057
    9. ' (' → logprob: -5.433844089508057
    10. '(' → logprob: -6.183844089508057

Token 211: ' MAX' (ID: 16960)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014879583613947034
    2. '(n' → logprob: -7.126487731933594
    3. ' n' → logprob: -7.626487731933594
    4. 'MAX' → logprob: -8.876487731933594
    5. '(MAX' → logprob: -10.376487731933594
    6. '(' → logprob: -11.251487731933594
    7. ' (' → logprob: -11.751487731933594
    8. 'max' → logprob: -13.001487731933594
    9. '(max' → logprob: -14.001487731933594
    10. '100' → logprob: -15.126487731933594

Token 212: '
' (ID: 198)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4629098176956177
    2. '<|end|>' → logprob: -1.8379098176956177
    3. '
' → logprob: -1.9629098176956177
    4. 'n' → logprob: -3.337909698486328
    5. '[n' → logprob: -3.712909698486328
    6. '\n' → logprob: -5.212909698486328
    7. '(' → logprob: -5.712909698486328
    8. '<|end|>' → logprob: -7.337909698486328
    9. '  
' → logprob: -7.837909698486328
    10. 'for' → logprob: -8.337909698486328

Token 213: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38329869508743286
    2. 'n' → logprob: -1.758298635482788
    3. 'print' → logprob: -2.008298635482788
    4. ' for' → logprob: -4.758298873901367
    5. '#' → logprob: -7.383298873901367
    6. 'V' → logprob: -8.133298873901367
    7. ')' → logprob: -8.133298873901367
    8. 'i' → logprob: -8.383298873901367
    9. '_' → logprob: -8.383298873901367
    10. '<|end|>' → logprob: -8.508298873901367

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.348682165145874
    2. ' =' → logprob: -1.223682165145874
    3. ',' → logprob: -8.723682403564453
    4. ' ' → logprob: -10.348682403564453
    5. '(' → logprob: -11.473682403564453
    6. ' +=' → logprob: -11.598682403564453
    7. ')' → logprob: -12.348682403564453
    8. '.' → logprob: -12.598682403564453
    9. '  ' → logprob: -13.098682403564453
    10. '＝' → logprob: -13.098682403564453

Token 215: ' Solve' (ID: 116151)
  Prédit: 'Solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solve' → logprob: -0.17809191346168518
    2. '0' → logprob: -1.9280918836593628
    3. ' Solve' → logprob: -4.053092002868652
    4. ' ' → logprob: -8.053092002868652
    5. 'Solver' → logprob: -12.553092002868652
    6. 'solve' → logprob: -12.678092002868652
    7. '   ' → logprob: -12.803092002868652
    8. 'Solved' → logprob: -13.303092002868652
    9. '	S' → logprob: -13.553092002868652
    10. 'Sol' → logprob: -13.803092002868652

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2113979209971149e-05
    2. '()
' → logprob: -12.125012397766113
    3. '(' → logprob: -12.250012397766113
    4. ' ()' → logprob: -14.625012397766113
    5. '()`' → logprob: -14.875012397766113
    6. '()

' → logprob: -15.500012397766113
    7. '()]' → logprob: -15.500012397766113
    8. '().' → logprob: -16.250011444091797
    9. '（）' → logprob: -16.250011444091797
    10. '();' → logprob: -16.375011444091797

Token 217: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.875
    3. '#print' → logprob: -19.375
    4. 'pr' → logprob: -19.625
    5. 'for' → logprob: -20.125
    6. '(print' → logprob: -20.625
    7. '
' → logprob: -20.75
    8. '<|end|>' → logprob: -21.25
    9. '```' → logprob: -21.25
    10. 'prin' → logprob: -21.375

Token 218: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. '(answer' → logprob: -16.50009536743164
    4. ' (' → logprob: -16.87509536743164
    5. 'ans' → logprob: -18.12509536743164
    6. '(
' → logprob: -18.25009536743164
    7. '()' → logprob: -18.50009536743164
    8. '(an' → logprob: -18.75009536743164
    9. '(a' → logprob: -19.12509536743164
    10. '(`' → logprob: -19.37509536743164

Token 219: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')`' → logprob: -15.625001907348633
    4. '()' → logprob: -15.750001907348633
    5. ')
' → logprob: -16.125001907348633
    6. '))' → logprob: -16.875001907348633
    7. '())' → logprob: -17.000001907348633
    8. '(' → logprob: -17.375001907348633
    9. '`)' → logprob: -17.750001907348633
    10. '')' → logprob: -18.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 217
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 169
Précision stricte (1ère position): 36.41%
Précision adaptée (1ère position): 37.79%
Précision (top 10): 77.88%
================================================================================
