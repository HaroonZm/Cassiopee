================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
#!python3

iim = lambda: map(int, input().rstrip().split())

def resolve():
    N, W = iim()
    S = [list(iim()) for i in range(N)]

    dp = [0] * (W + 1)

    def f1(s):
        v, w, m = s
        mm = []
        i = 1
        while i <= m:
            mm.append(i)
            m -= i
            i <<= 1

        if m:
            mm.append(m)
        return (v, w, mm)

    SS = map(f1, S)

    for v, w, m in SS:
        for k in m:
            v1, w1 = v * k, w * k
            for i in range(W, w1-1, -1):
                j = i - w1
                v2 = dp[j] + v1
                if dp[i] < v2:
                    dp[i] = v2
    print(dp[W])

if __name__ == "__main__":
    resolve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#!' (ID: 18666)
  → Token d'amorce (pas de prédiction)

Token 1: 'python' (ID: 29010)
  → Token d'amorce (pas de prédiction)

Token 2: '3' (ID: 18)
  → Token d'amorce (pas de prédiction)

Token 3: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2557367980480194
    2. 'import' → logprob: -2.130736827850342
    3. ' 
' → logprob: -3.005736827850342
    4. '\' → logprob: -3.630736827850342
    5. '```' → logprob: -4.630736827850342
    6. '  
' → logprob: -5.255736827850342
    7. '' → logprob: -5.380736827850342
    8. '#!/' → logprob: -5.755736827850342
    9. ' import' → logprob: -6.505736827850342
    10. '
' → logprob: -6.880736827850342

Token 4: 'i' (ID: 72)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.37762898206710815
    2. 'import' → logprob: -1.627629041671753
    3. ' 
' → logprob: -2.752629041671753
    4. '\' → logprob: -4.002628803253174
    5. '
' → logprob: -4.502628803253174
    6. '' → logprob: -4.877628803253174
    7. '```' → logprob: -5.377628803253174
    8. '  
' → logprob: -5.502628803253174
    9. '#!/' → logprob: -6.127628803253174
    10. ' import' → logprob: -6.127628803253174

Token 5: 'im' (ID: 321)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3287580609321594
    2. 'n' → logprob: -1.3287580013275146
    3. '=' → logprob: -4.328758239746094
    4. 'f' → logprob: -6.453758239746094
    5. ' =' → logprob: -8.078758239746094
    6. 'nt' → logprob: -9.078758239746094
    7. 't' → logprob: -10.078758239746094
    8. '#' → logprob: -10.203758239746094
    9. 'mp' → logprob: -10.203758239746094
    10. ' n' → logprob: -10.703758239746094

Token 6: ' =' (ID: 314)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.5420847535133362
    2. '.' → logprob: -0.9170847535133362
    3. 'p' → logprob: -4.792084693908691
    4. 't' → logprob: -5.417084693908691
    5. ' .' → logprob: -6.792084693908691
    6. '=' → logprob: -7.042084693908691
    7. 'plement' → logprob: -7.542084693908691
    8. 'porter' → logprob: -7.667084693908691
    9. 'l' → logprob: -8.292084693908691
    10. ' =' → logprob: -8.292084693908691

Token 7: ' lambda' (ID: 27871)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7532325983047485
    2. ' []' → logprob: -1.8782325983047485
    3. ' __' → logprob: -2.128232479095459
    4. ' input' → logprob: -2.128232479095459
    5. 'input' → logprob: -2.753232479095459
    6. ' iim' → logprob: -4.128232479095459
    7. '__' → logprob: -4.253232479095459
    8. '[]' → logprob: -4.628232479095459
    9. '1' → logprob: -4.753232479095459
    10. ' [' → logprob: -5.628232479095459

Token 8: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0025523616932332516
    2. ' ' → logprob: -6.627552509307861
    3. 'x' → logprob: -7.627552509307861
    4. ' s' → logprob: -8.002552032470703
    5. ' i' → logprob: -9.252552032470703
    6. '  ' → logprob: -9.252552032470703
    7. ':' → logprob: -9.752552032470703
    8. ' :' → logprob: -9.752552032470703
    9. ' a' → logprob: -10.127552032470703
    10. ' n' → logprob: -11.002552032470703

Token 9: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1204919815063477
    2. ' input' → logprob: -1.1204919815063477
    3. 'int' → logprob: -1.4954919815063477
    4. ' int' → logprob: -2.1204919815063477
    5. ' iter' → logprob: -6.495491981506348
    6. '[]' → logprob: -7.870491981506348
    7. ' list' → logprob: -8.245491981506348
    8. '__' → logprob: -8.245491981506348
    9. ' []' → logprob: -8.495491981506348
    10. ' map' → logprob: -8.745491981506348

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2110348343849182
    2. '(' → logprob: -1.7110347747802734
    3. '(str' → logprob: -5.336034774780273
    4. '<|end|>' → logprob: -6.086034774780273
    5. '(lambda' → logprob: -6.461034774780273
    6. '(input' → logprob: -7.961034774780273
    7. '(list' → logprob: -9.336034774780273
    8. 'int' → logprob: -9.711034774780273
    9. '```' → logprob: -9.961034774780273
    10. '(
' → logprob: -9.961034774780273

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.018727611750364304
    2. '(' → logprob: -4.268727779388428
    3. 'input' → logprob: -5.893727779388428
    4. ')' → logprob: -6.768727779388428
    5. ' input' → logprob: -9.26872730255127
    6. '<|end|>' → logprob: -9.26872730255127
    7. ',input' → logprob: -9.64372730255127
    8. ' (' → logprob: -10.01872730255127
    9. '(stdin' → logprob: -10.01872730255127
    10. '(open' → logprob: -10.14372730255127

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01604856364428997
    2. ' input' → logprob: -4.141048431396484
    3. '(input' → logprob: -11.891048431396484
    4. 'open' → logprob: -12.766048431396484
    5. ')' → logprob: -13.266048431396484
    6. ' ' → logprob: -14.516048431396484
    7. '=input' → logprob: -14.516048431396484
    8. '	input' → logprob: -14.766048431396484
    9. 'raw' → logprob: -15.016048431396484
    10. '<input' → logprob: -15.141048431396484

Token 13: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7024844884872437
    2. '())' → logprob: -0.7024844884872437
    3. '(' → logprob: -5.577484607696533
    4. '().' → logprob: -6.452484607696533
    5. '(()' → logprob: -6.827484607696533
    6. '());' → logprob: -6.952484607696533
    7. '();)' → logprob: -7.077484607696533
    8. '()]' → logprob: -8.577484130859375
    9. '('' → logprob: -9.327484130859375
    10. '()))' → logprob: -9.452484130859375

Token 14: 'rstrip' (ID: 180429)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00044377794256433845
    2. 'strip' → logprob: -7.750443935394287
    3. ' split' → logprob: -11.875443458557129
    4. 'rstrip' → logprob: -12.250443458557129
    5. '(split' → logprob: -14.000443458557129
    6. ')' → logprob: -15.125443458557129
    7. 'spl' → logprob: -15.625443458557129
    8. 'read' → logprob: -17.625444412231445
    9. 's' → logprob: -18.750444412231445
    10. ' strip' → logprob: -19.000444412231445

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.28035449981689453
    2. '('' → logprob: -1.6553544998168945
    3. '()' → logprob: -3.6553544998168945
    4. '())' → logprob: -4.2803544998168945
    5. '(' → logprob: -4.4053544998168945
    6. '("' → logprob: -7.6553544998168945
    7. ' ().' → logprob: -8.530354499816895
    8. ' ()' → logprob: -9.155354499816895
    9. '(()' → logprob: -9.280354499816895
    10. ' ())' → logprob: -9.280354499816895

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.4121114822482923e-06
    2. ' split' → logprob: -13.125003814697266
    3. 'rstrip' → logprob: -14.500003814697266
    4. 'spl' → logprob: -15.250003814697266
    5. 'strip' → logprob: -15.375003814697266
    6. ')' → logprob: -15.625003814697266
    7. '(split' → logprob: -16.750003814697266
    8. ' ' → logprob: -17.250003814697266
    9. 's' → logprob: -18.125003814697266
    10. 'plit' → logprob: -18.125003814697266

Token 17: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.010451061651110649
    2. '()' → logprob: -5.385450839996338
    3. ')' → logprob: -6.010450839996338
    4. '()))' → logprob: -6.010450839996338
    5. '(' → logprob: -7.260450839996338
    6. '))' → logprob: -8.885451316833496
    7. ' ())' → logprob: -10.135451316833496
    8. '();)' → logprob: -12.260451316833496
    9. '()]' → logprob: -12.760451316833496
    10. '());' → logprob: -12.885451316833496

Token 18: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7803636193275452
    2. 'a' → logprob: -1.0303635597229004
    3. '(' → logprob: -1.9053635597229004
    4. 'for' → logprob: -4.1553635597229
    5. 'x' → logprob: -4.9053635597229
    6. '(n' → logprob: -5.0303635597229
    7. 'd' → logprob: -6.1553635597229
    8. '[' → logprob: -6.6553635597229
    9. '(
' → logprob: -7.2803635597229
    10. '#' → logprob: -7.7803635597229

Token 19: ' resolve' (ID: 14062)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016200117766857147
    2. ' ' → logprob: -4.266200065612793
    3. ' solve' → logprob: -6.391200065612793
    4. ' solution' → logprob: -9.141200065612793
    5. ' my' → logprob: -10.266200065612793
    6. ' factorial' → logprob: -10.641200065612793
    7. ' ma' → logprob: -11.141200065612793
    8. ' input' → logprob: -11.141200065612793
    9. ' read' → logprob: -11.141200065612793
    10. ' add' → logprob: -11.266200065612793

Token 20: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.815280696377158e-05
    2. ' ():' → logprob: -9.625078201293945
    3. '(' → logprob: -11.500078201293945
    4. '()' → logprob: -14.500078201293945
    5. '():
' → logprob: -14.750078201293945
    6. '(:' → logprob: -15.000078201293945
    7. '(":' → logprob: -15.125078201293945
    8. ':' → logprob: -15.625078201293945
    9. '_' → logprob: -16.625078201293945
    10. '):' → logprob: -17.000078201293945

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020240074023604393
    2. '<|end|>' → logprob: -5.270240306854248
    3. 'n' → logprob: -5.645240306854248
    4. '```' → logprob: -5.895240306854248
    5. '    
' → logprob: -6.395240306854248
    6. 'x' → logprob: -6.520240306854248
    7. '<|end|>' → logprob: -6.895240306854248
    8. 'i' → logprob: -7.145240306854248
    9. 'input' → logprob: -7.395240306854248
    10. ' ' → logprob: -7.520240306854248

Token 22: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.725456178188324
    2. 'n' → logprob: -1.3504562377929688
    3. ' a' → logprob: -1.9754562377929688
    4. ' n' → logprob: -2.7254562377929688
    5. '   ' → logprob: -4.350456237792969
    6. 'A' → logprob: -4.600456237792969
    7. 'h' → logprob: -4.975456237792969
    8. 'N' (adapté à ' N') → logprob: -5.350456237792969
    9. ' A' → logprob: -5.725456237792969
    10. 'x' → logprob: -5.850456237792969

Token 23: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011883500963449478
    2. '=' → logprob: -4.761883735656738
    3. ' ' → logprob: -6.136883735656738
    4. ',' → logprob: -7.011883735656738
    5. ' ,' → logprob: -8.761883735656738
    6. '=int' → logprob: -11.136883735656738
    7. ' =)' → logprob: -12.136883735656738
    8. ')' → logprob: -12.386883735656738
    9. ' =
' → logprob: -12.511883735656738
    10. '  ' → logprob: -12.761883735656738

Token 24: ' W' (ID: 486)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6465767621994019
    2. 'K' → logprob: -1.3965767621994019
    3. ' M' → logprob: -2.0215768814086914
    4. ' K' → logprob: -2.3965768814086914
    5. 'Q' → logprob: -6.771576881408691
    6. '*' → logprob: -7.271576881408691
    7. 'N' → logprob: -7.521576881408691
    8. '=' → logprob: -7.771576881408691
    9. '*M' → logprob: -7.771576881408691
    10. ' =' → logprob: -8.146576881408691

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326404213905334
    2. ' =' → logprob: -1.313264012336731
    3. ' ' → logprob: -14.188263893127441
    4. '=i' → logprob: -14.438263893127441
    5. '=input' → logprob: -14.813263893127441
    6. ',' → logprob: -15.563263893127441
    7. '＝' → logprob: -16.438264846801758
    8. '   ' → logprob: -16.563264846801758
    9. '=int' → logprob: -16.688264846801758
    10. '  ' → logprob: -16.938264846801758

Token 26: ' iim' (ID: 182704)
  Prédit: ' iim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iim' → logprob: -0.03238669037818909
    2. 'i' → logprob: -3.5323867797851562
    3. ' i' → logprob: -6.032386779785156
    4. ' next' → logprob: -9.282386779785156
    5. ' map' → logprob: -9.782386779785156
    6. 'im' → logprob: -11.032386779785156
    7. ' ' → logprob: -11.032386779785156
    8. 'iin' → logprob: -11.907386779785156
    9. ' iib' → logprob: -12.532386779785156
    10. ' iom' → logprob: -12.532386779785156

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.438573680294212e-06
    2. '()
' → logprob: -12.750005722045898
    3. '()`' → logprob: -14.250005722045898
    4. '())' → logprob: -14.500005722045898
    5. ' ()' → logprob: -14.625005722045898
    6. '(' → logprob: -15.000005722045898
    7. ')' → logprob: -15.875005722045898
    8. '()

' → logprob: -16.5000057220459
    9. '()]' → logprob: -16.5000057220459
    10. '`()' → logprob: -16.6250057220459

Token 28: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' S' (ID: 336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.772188663482666
    2. 'for' → logprob: -1.147188663482666
    3. ' for' → logprob: -2.772188663482666
    4. 'weights' → logprob: -2.897188663482666
    5. 'items' → logprob: -4.022188663482666
    6. ' weights' → logprob: -4.147188663482666
    7. ' items' → logprob: -4.522188663482666
    8. 'weight' → logprob: -5.022188663482666
    9. 'w' → logprob: -5.272188663482666
    10. 'A' → logprob: -5.272188663482666

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5482282638549805
    2. '=' → logprob: -0.9232282638549805
    3. ',' → logprob: -3.7982282638549805
    4. ' ' → logprob: -7.5482282638549805
    5. '   ' → logprob: -7.6732282638549805
    6. 'um' → logprob: -7.9232282638549805
    7. 'w' → logprob: -8.04822826385498
    8. 'W' → logprob: -8.92322826385498
    9. '=list' → logprob: -9.92322826385498
    10. ',W' → logprob: -10.04822826385498

Token 31: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5976131558418274
    2. 'list' → logprob: -1.3476130962371826
    3. ' input' → logprob: -2.5976130962371826
    4. 'input' → logprob: -2.9726130962371826
    5. ' [' → logprob: -3.3476130962371826
    6. '[i' → logprob: -4.597613334655762
    7. '[input' → logprob: -4.722613334655762
    8. '[' → logprob: -5.597613334655762
    9. '[int' → logprob: -7.222613334655762
    10. '[]' → logprob: -7.222613334655762

Token 32: 'list' (ID: 2641)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6671370267868042
    2. 'int' → logprob: -0.7921370267868042
    3. '*' → logprob: -3.7921371459960938
    4. 'tuple' → logprob: -4.917137145996094
    5. '*i' → logprob: -6.042137145996094
    6. '(i' → logprob: -8.167137145996094
    7. '0' → logprob: -8.542137145996094
    8. 'next' → logprob: -8.667137145996094
    9. '(int' → logprob: -8.792137145996094
    10. 'input' → logprob: -8.917137145996094

Token 33: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.09096964448690414
    2. '(map' → logprob: -2.4659695625305176
    3. '(' → logprob: -6.465969562530518
    4. '(input' → logprob: -8.090970039367676
    5. '(range' → logprob: -9.715970039367676
    6. '()' → logprob: -9.965970039367676
    7. 'map' → logprob: -10.840970039367676
    8. ']' → logprob: -10.965970039367676
    9. 'i' → logprob: -12.090970039367676
    10. '()]' → logprob: -12.840970039367676

Token 34: 'im' (ID: 321)
  Prédit: 'im'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.03262197971343994
    2. 'm' → logprob: -3.7826218605041504
    3. 'mm' → logprob: -5.15762186050415
    4. 'am' → logprob: -7.03262186050415
    5. 'i' → logprob: -7.15762186050415
    6. 'om' → logprob: -8.282622337341309
    7. 'in' → logprob: -8.657622337341309
    8. 'input' → logprob: -8.720122337341309
    9. 'nm' → logprob: -8.720122337341309
    10. 'n' → logprob: -9.220122337341309

Token 35: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.000156577822053805
    2. '()' → logprob: -9.37515640258789
    3. '()))' → logprob: -10.12515640258789
    4. '()]' → logprob: -11.50015640258789
    5. ')' → logprob: -12.00015640258789
    6. '()),' → logprob: -12.50015640258789
    7. ')]' → logprob: -12.62515640258789
    8. ' ())' → logprob: -12.75015640258789
    9. '())
' → logprob: -12.87515640258789
    10. '());' → logprob: -14.12515640258789

Token 36: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.19778646528720856
    2. ' for' → logprob: -2.197786569595337
    3. 'for' → logprob: -3.322786569595337
    4. '()]' → logprob: -4.197786331176758
    5. ')' → logprob: -4.697786331176758
    6. ']' → logprob: -4.947786331176758
    7. '   ' → logprob: -8.197786331176758
    8. '(N' → logprob: -8.947786331176758
    9. '())' → logprob: -8.947786331176758
    10. ' ' → logprob: -9.072786331176758

Token 37: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09540952742099762
    2. ' range' → logprob: -2.470409631729126
    3. 'range' → logprob: -5.220409393310547
    4. ' _' → logprob: -7.595409393310547
    5. ' in' → logprob: -7.970409393310547
    6. '_range' → logprob: -8.970409393310547
    7. 'in' → logprob: -10.970409393310547
    8. '	range' → logprob: -11.220409393310547
    9. '_in' → logprob: -11.470409393310547
    10. ' ' → logprob: -11.720409393310547

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28696730732917786
    2. 'in' → logprob: -1.4119672775268555
    3. '_' → logprob: -5.4119672775268555
    4. ' ' → logprob: -7.7869672775268555
    5. '  ' → logprob: -8.036967277526855
    6. 'n' → logprob: -8.411967277526855
    7. 'range' → logprob: -8.411967277526855
    8. '_in' → logprob: -10.161967277526855
    9. '	in' → logprob: -10.286967277526855
    10. '   ' → logprob: -11.036967277526855

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5760045647621155
    2. ' range' → logprob: -0.8260045647621155
    3. ' ' → logprob: -10.826004981994629
    4. '(range' → logprob: -11.076004981994629
    5. '	range' → logprob: -11.326004981994629
    6. '   ' → logprob: -11.576004981994629
    7. '  ' → logprob: -12.076004981994629
    8. 'rang' → logprob: -14.326004981994629
    9. 'r' → logprob: -14.451004981994629
    10. '[' → logprob: -15.201004981994629

Token 40: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001266613689949736
    2. '(' → logprob: -9.000126838684082
    3. 'N' → logprob: -13.125126838684082
    4. '(n' → logprob: -14.125126838684082
    5. '(
' → logprob: -15.375126838684082
    6. ' (' → logprob: -16.625125885009766
    7. '((' → logprob: -17.625125885009766
    8. '(W' → logprob: -17.750125885009766
    9. '(int' → logprob: -17.875125885009766
    10. '(S' → logprob: -18.000125885009766

Token 41: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -7.755678961984813e-05
    2. ')' → logprob: -9.875077247619629
    3. ']' → logprob: -10.750077247619629
    4. ')]
' → logprob: -13.750077247619629
    5. ')])' → logprob: -14.250077247619629
    6. '   ' → logprob: -14.500077247619629
    7. ')],' → logprob: -14.500077247619629
    8. ' )' → logprob: -15.000077247619629
    9. '])]' → logprob: -15.000077247619629
    10. ' ' → logprob: -15.500077247619629

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03905133157968521
    2. '<|end|>' → logprob: -3.4140512943267822
    3. '
' → logprob: -5.664051532745361
    4. '    
' → logprob: -6.664051532745361
    5. '<|end|>' → logprob: -8.914051055908203
    6. ')' → logprob: -9.039051055908203
    7. '#' → logprob: -9.789051055908203
    8. '    ' → logprob: -10.039051055908203
    9. '```' → logprob: -10.039051055908203
    10. 'for' → logprob: -10.539051055908203

Token 43: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.5375473499298096
    2. 'S' → logprob: -1.0375473499298096
    3. ' dp' → logprob: -3.9125473499298096
    4. ' S' → logprob: -4.6625471115112305
    5. 'DP' → logprob: -5.5375471115112305
    6. '   ' → logprob: -5.6625471115112305
    7. 'W' → logprob: -5.7875471115112305
    8. 'max' → logprob: -5.9125471115112305
    9. 'for' → logprob: -6.0375471115112305
    10. 'D' → logprob: -6.0375471115112305

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002833649516105652
    2. '=' → logprob: -5.877833843231201
    3. '[' → logprob: -11.252833366394043
    4. ' ' → logprob: -11.627833366394043
    5. ' =[' → logprob: -13.002833366394043
    6. '=[' → logprob: -13.877833366394043
    7. ']' → logprob: -14.002833366394043
    8. '   ' → logprob: -14.502833366394043
    9. '0' → logprob: -14.627833366394043
    10. '  ' → logprob: -14.877833366394043

Token 45: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12835948169231415
    2. ' [' → logprob: -2.12835955619812
    3. '[-' → logprob: -6.878359317779541
    4. '[[' → logprob: -8.2533597946167
    5. ' [-' → logprob: -9.6283597946167
    6. ' [[' → logprob: -9.8783597946167
    7. '{' → logprob: -11.6283597946167
    8. '[len' → logprob: -13.2533597946167
    9. '[(' → logprob: -13.5033597946167
    10. '[n' → logprob: -13.6283597946167

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005498172249644995
    2. 'float' → logprob: -5.75549840927124
    3. 'False' → logprob: -6.75549840927124
    4. '-' → logprob: -7.50549840927124
    5. '(' → logprob: -8.755497932434082
    6. ' ' → logprob: -8.755497932434082
    7. '[' → logprob: -9.005497932434082
    8. '10' → logprob: -10.130497932434082
    9. '-W' → logprob: -10.505497932434082
    10. '-(' → logprob: -10.755497932434082

Token 47: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07026418298482895
    2. ']*(' → logprob: -2.6952641010284424
    3. ']+' → logprob: -8.945263862609863
    4. ' ]' → logprob: -9.320263862609863
    5. ']*' → logprob: -9.570263862609863
    6. ' for' → logprob: -10.695263862609863
    7. 'for' → logprob: -11.445263862609863
    8. '   ' → logprob: -13.195263862609863
    9. ',' → logprob: -14.320263862609863
    10. '](' → logprob: -14.820263862609863

Token 48: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7159008979797363
    2. ']*(' → logprob: -0.7159008979797363
    3. ' for' → logprob: -4.465900897979736
    4. '*(' → logprob: -5.090900897979736
    5. ']+' → logprob: -6.590900897979736
    6. 'for' → logprob: -6.590900897979736
    7. '*' → logprob: -7.215900897979736
    8. ' *' → logprob: -7.590900897979736
    9. ']*' → logprob: -8.090900421142578
    10. ',' → logprob: -8.465900421142578

Token 49: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -7.374227425316349e-05
    2. ' (' → logprob: -10.125073432922363
    3. '(' → logprob: -10.750073432922363
    4. '(w' → logprob: -11.500073432922363
    5. '   ' → logprob: -14.250073432922363
    6. 'W' → logprob: -14.375073432922363
    7. '((' → logprob: -15.875073432922363
    8. '(wx' → logprob: -16.12507438659668
    9. ' ' → logprob: -16.50007438659668
    10. '(max' → logprob: -16.62507438659668

Token 50: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0029567815363407135
    2. '(W' → logprob: -6.252956867218018
    3. ' W' → logprob: -7.002956867218018
    4. '   ' → logprob: -9.37795639038086
    5. ' ' → logprob: -10.87795639038086
    6. ' (' → logprob: -11.75295639038086
    7. '	W' → logprob: -13.00295639038086
    8. '  ' → logprob: -13.50295639038086
    9. '(' → logprob: -13.87795639038086
    10. '<W' → logprob: -14.75295639038086

Token 51: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008615042082965374
    2. ' +' → logprob: -4.758615016937256
    3. '＋' → logprob: -15.633615493774414
    4. '+
' → logprob: -15.758615493774414
    5. '1' → logprob: -16.008615493774414
    6. ' plus' → logprob: -17.133615493774414
    7. ' ' → logprob: -17.258615493774414
    8. ' +
' → logprob: -17.883615493774414
    9. '```' → logprob: -18.258615493774414
    10. '+)' → logprob: -18.758615493774414

Token 52: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017036291537806392
    2. ' ' → logprob: -6.37670373916626
    3. '   ' → logprob: -14.001703262329102
    4. '  ' → logprob: -15.376703262329102
    5. '```' → logprob: -16.0017032623291
    6. '2' → logprob: -16.9392032623291
    7. '１' → logprob: -17.2517032623291
    8. '100' → logprob: -17.2517032623291
    9. ')' → logprob: -17.3142032623291
    10. '    ' → logprob: -17.3142032623291

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1888679839321412e-05
    2. ' ' → logprob: -10.750021934509277
    3. '2' → logprob: -16.37502098083496
    4. '100' → logprob: -16.50002098083496
    5. '10' → logprob: -16.87502098083496
    6. '   ' → logprob: -17.25002098083496
    7. '１' → logprob: -17.75002098083496
    8. '```' → logprob: -18.12502098083496
    9. '0' → logprob: -18.18752098083496
    10. '  ' → logprob: -18.37502098083496

Token 54: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.735893965815194e-05
    2. ' )' → logprob: -11.500017166137695
    3. ')
' → logprob: -12.125017166137695
    4. '))' → logprob: -14.625017166137695
    5. ')

' → logprob: -14.750017166137695
    6. ')
' → logprob: -15.875017166137695
    7. '}' → logprob: -15.875017166137695
    8. '```' → logprob: -16.000017166137695
    9. ')}' → logprob: -16.625017166137695
    10. '   ' → logprob: -16.625017166137695

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21976906061172485
    2. ' for' → logprob: -2.09476900100708
    3. 'for' → logprob: -3.46976900100708
    4. '
' → logprob: -3.59476900100708
    5. '    
' → logprob: -4.84476900100708
    6. '<|end|>' → logprob: -5.21976900100708
    7. '\n' → logprob: -7.34476900100708
    8. '  
' → logprob: -7.59476900100708
    9. '	for' → logprob: -8.094769477844238
    10. ' ' → logprob: -8.094769477844238

Token 56: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000455340719781816
    2. ' for' → logprob: -7.750455379486084
    3. '   ' → logprob: -10.625454902648926
    4. '	for' → logprob: -14.875454902648926
    5. '    
' → logprob: -17.875455856323242
    6. '
' → logprob: -17.875455856323242
    7. '```' → logprob: -18.875455856323242
    8. ' ' → logprob: -19.625455856323242
    9. 'For' → logprob: -20.375455856323242
    10. 'from' → logprob: -20.375455856323242

Token 57: ' f' (ID: 285)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.8706489205360413
    2. ' dfs' → logprob: -1.8706488609313965
    3. ' main' → logprob: -1.9956488609313965
    4. ' ' → logprob: -2.7456488609313965
    5. ' kn' → logprob: -2.7456488609313965
    6. '_' → logprob: -4.3706488609313965
    7. 'dfs' → logprob: -4.4956488609313965
    8. ' update' → logprob: -4.7456488609313965
    9. ' helper' → logprob: -4.7456488609313965
    10. 'solve' → logprob: -4.7456488609313965

Token 58: '1' (ID: 16)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.6926155686378479
    2. '(i' → logprob: -0.8176155686378479
    3. '(j' → logprob: -3.692615509033203
    4. '(weight' → logprob: -4.192615509033203
    5. '(k' → logprob: -5.192615509033203
    6. '(x' → logprob: -5.567615509033203
    7. '(cap' → logprob: -5.942615509033203
    8. '(' → logprob: -6.442615509033203
    9. '(s' → logprob: -6.942615509033203
    10. '(v' → logprob: -7.692615509033203

Token 59: '(s' (ID: 1858)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.55387282371521
    2. '(i' → logprob: -1.55387282371521
    3. '():' → logprob: -2.42887282371521
    4. '(k' → logprob: -3.17887282371521
    5. '(' → logprob: -3.80387282371521
    6. '(weight' → logprob: -3.80387282371521
    7. '(j' → logprob: -3.92887282371521
    8. '(cap' → logprob: -5.053873062133789
    9. '(s' → logprob: -5.678873062133789
    10. '(x' → logprob: -6.303873062133789

Token 60: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08819069713354111
    2. '):' → logprob: -2.838190793991089
    3. 't' → logprob: -4.21319055557251
    4. 'um' → logprob: -6.08819055557251
    5. ' ,' → logprob: -6.96319055557251
    6. ',i' → logprob: -7.08819055557251
    7. 'e' → logprob: -7.21319055557251
    8. '   ' → logprob: -7.46319055557251
    9. '):
' → logprob: -7.46319055557251
    10. ',n' → logprob: -7.58819055557251

Token 61: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03823300078511238
    2. '    ' → logprob: -3.7882330417633057
    3. ' for' → logprob: -5.538232803344727
    4. ' s' → logprob: -5.663232803344727
    5. '       ' → logprob: -6.538232803344727
    6. ' ' → logprob: -6.788232803344727
    7. ')' → logprob: -6.913232803344727
    8. ',' → logprob: -7.038232803344727
    9. 'for' → logprob: -7.163232803344727
    10. 's' → logprob: -7.788232803344727

Token 62: ' v' (ID: 323)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5224827527999878
    2. '   ' → logprob: -1.7724827527999878
    3. ' s' → logprob: -2.0224828720092773
    4. ' res' → logprob: -2.3974828720092773
    5. 'for' → logprob: -2.5224828720092773
    6. ' dp' → logprob: -2.7724828720092773
    7. ' if' → logprob: -3.0224828720092773
    8. ' n' → logprob: -3.2724828720092773
    9. 'dp' → logprob: -3.6474828720092773
    10. 's' → logprob: -3.6474828720092773

Token 63: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.852870762348175
    2. ',' → logprob: -1.4778707027435303
    3. 'al' → logprob: -1.8528707027435303
    4. '=' → logprob: -2.1028707027435303
    5. '   ' → logprob: -4.227870941162109
    6. 'alue' → logprob: -4.227870941162109
    7. ',v' → logprob: -4.727870941162109
    8. 'alid' → logprob: -5.352870941162109
    9. ' ' → logprob: -6.102870941162109
    10. 'a' → logprob: -6.102870941162109

Token 64: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.47526246309280396
    2. ' w' → logprob: -0.975262463092804
    3. '```' → logprob: -7.975262641906738
    4. '   ' → logprob: -9.100262641906738
    5. 'wt' → logprob: -9.100262641906738
    6. 'c' → logprob: -9.225262641906738
    7. ' ' → logprob: -9.225262641906738
    8. '  ' → logprob: -9.350262641906738
    9. ' c' → logprob: -9.850262641906738
    10. 's' → logprob: -9.975262641906738

Token 65: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47426947951316833
    2. '=' → logprob: -0.9742695093154907
    3. ',' → logprob: -9.47426986694336
    4. ')' → logprob: -9.47426986694336
    5. ' ' → logprob: -11.22426986694336
    6. '  ' → logprob: -12.47426986694336
    7. '   ' → logprob: -12.47426986694336
    8. ']' → logprob: -12.72426986694336
    9. 's' → logprob: -12.97426986694336
    10. ')=' → logprob: -12.97426986694336

Token 66: ' m' (ID: 284)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9466249942779541
    2. '_' → logprob: -1.196624994277954
    3. '_=' → logprob: -2.321624994277954
    4. ' c' → logprob: -2.821624994277954
    5. ' =' → logprob: -3.446624994277954
    6. 'k' → logprob: -4.071624755859375
    7. 'd' → logprob: -4.696624755859375
    8. ' _' → logprob: -4.696624755859375
    9. 'cnt' → logprob: -4.821624755859375
    10. 'i' → logprob: -5.071624755859375

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6729210019111633
    2. '=' → logprob: -0.7979210019111633
    3. ')' → logprob: -3.2979209423065186
    4. ')=' → logprob: -6.922921180725098
    5. ',' → logprob: -7.797921180725098
    6. '   ' → logprob: -8.297921180725098
    7. ' ' → logprob: -8.422921180725098
    8. 'ax' → logprob: -8.922921180725098
    9. ']' → logprob: -9.297921180725098
    10. 's' → logprob: -9.422921180725098

Token 68: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1452888697385788
    2. ' s' → logprob: -2.0202889442443848
    3. 'S' → logprob: -6.145288944244385
    4. ' S' → logprob: -8.520288467407227
    5. '0' → logprob: -9.145288467407227
    6. ' ' → logprob: -9.895288467407227
    7. '   ' → logprob: -10.145288467407227
    8. '  ' → logprob: -11.520288467407227
    9. ' =' → logprob: -11.770288467407227
    10. '_s' → logprob: -11.895288467407227

Token 69: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6923927068710327
    2. ' =' → logprob: -1.1923927068710327
    3. '=' → logprob: -1.6923927068710327
    4. ',' → logprob: -5.692392826080322
    5. '  ' → logprob: -6.692392826080322
    6. '[:]' → logprob: -6.942392826080322
    7. '   ' → logprob: -7.192392826080322
    8. 'v' → logprob: -7.317392826080322
    9. ' ' → logprob: -7.442392826080322
    10. '[]' → logprob: -7.567392826080322

Token 70: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4103519916534424
    2. '<|end|>' → logprob: -1.5353519916534424
    3. '   ' → logprob: -3.6603519916534424
    4. '       ' → logprob: -3.7853519916534424
    5. ' if' → logprob: -4.535351753234863
    6. ':' → logprob: -4.660351753234863
    7. ',' → logprob: -4.660351753234863
    8. '  
' → logprob: -4.785351753234863
    9. ' 
' → logprob: -5.410351753234863
    10. '  ' → logprob: -5.410351753234863

Token 71: ' mm' (ID: 8957)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5234696269035339
    2. 'for' → logprob: -1.3984696865081787
    3. ' res' → logprob: -2.5234696865081787
    4. ' if' → logprob: -3.7734696865081787
    5. 'dp' → logprob: -4.2734694480896
    6. 'res' → logprob: -4.3984694480896
    7. ' dp' → logprob: -4.5234694480896
    8. 'if' → logprob: -5.5234694480896
    9. 'r' → logprob: -5.7734694480896
    10. ' result' → logprob: -6.1484694480896

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11874151229858398
    2. ' =' → logprob: -2.493741512298584
    3. 'ax' → logprob: -3.993741512298584
    4. '   ' → logprob: -6.118741512298584
    5. 'w' → logprob: -6.243741512298584
    6. ',' → logprob: -6.618741512298584
    7. '=w' → logprob: -6.868741512298584
    8. '=max' → logprob: -7.243741512298584
    9. 'v' → logprob: -7.368741512298584
    10. 'x' → logprob: -7.743741512298584

Token 73: ' []
' (ID: 8911)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.0081740617752075
    2. ' w' → logprob: -1.6331740617752075
    3. 'm' → logprob: -2.133173942565918
    4. ' min' → logprob: -2.383173942565918
    5. 'w' → logprob: -2.508173942565918
    6. ' ' → logprob: -3.008173942565918
    7. '0' → logprob: -3.383173942565918
    8. '1' → logprob: -3.758173942565918
    9. 'min' → logprob: -4.258173942565918
    10. ' [' → logprob: -5.133173942565918

Token 74: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1676729917526245
    2. 'for' → logprob: -1.2926729917526245
    3. ' for' → logprob: -1.6676729917526245
    4. '    ' → logprob: -2.667673110961914
    5. ' =' → logprob: -3.167673110961914
    6. '[' → logprob: -3.792673110961914
    7. '=' → logprob: -4.417673110961914
    8. '   ' → logprob: -4.417673110961914
    9. '[]' → logprob: -4.667673110961914
    10. ')' → logprob: -4.917673110961914

Token 75: ' i' (ID: 575)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40971535444259644
    2. ' for' → logprob: -1.7847154140472412
    3. 'q' → logprob: -2.659715414047241
    4. 'c' → logprob: -3.659715414047241
    5. 'x' → logprob: -4.784715175628662
    6. '       ' → logprob: -4.909715175628662
    7. 'j' → logprob: -5.034715175628662
    8. 'k' → logprob: -5.034715175628662
    9. 'while' → logprob: -5.284715175628662
    10. 'l' → logprob: -5.409715175628662

Token 76: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2200009971857071
    2. ' =' → logprob: -1.720000982284546
    3. 'n' → logprob: -4.595001220703125
    4. 'nd' → logprob: -5.470001220703125
    5. 'f' → logprob: -6.720001220703125
    6. 'd' → logprob: -6.970001220703125
    7. '0' → logprob: -7.470001220703125
    8. 'nt' → logprob: -7.845001220703125
    9. ',' → logprob: -8.095001220703125
    10. 't' → logprob: -9.220001220703125

Token 77: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07088316231966019
    2. ' ' → logprob: -3.320883274078369
    3. '1' → logprob: -3.445883274078369
    4. 'm' → logprob: -8.320882797241211
    5. ' m' → logprob: -9.070882797241211
    6. 'w' → logprob: -10.320882797241211
    7. '  ' → logprob: -11.820882797241211
    8. '2' → logprob: -11.820882797241211
    9. ' w' → logprob: -12.070882797241211
    10. '<|end|>' → logprob: -12.445882797241211

Token 78: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035655632615089417
    2. '1' → logprob: -3.4106557369232178
    3. 'm' → logprob: -6.910655498504639
    4. ' ' → logprob: -7.410655498504639
    5. 'w' → logprob: -8.160655975341797
    6. '-' → logprob: -10.660655975341797
    7. '<|end|>' → logprob: -10.785655975341797
    8. '2' → logprob: -11.785655975341797
    9. ' m' → logprob: -11.973155975341797
    10. ''m' → logprob: -12.035655975341797

Token 79: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32054078578948975
    2. '<|end|>' → logprob: -1.3205407857894897
    3. '<|end|>' → logprob: -5.695540904998779
    4. ' 
' → logprob: -6.445540904998779
    5. 'while' → logprob: -6.820540904998779
    6. ' while' → logprob: -7.820540904998779
    7. '  
' → logprob: -8.070540428161621
    8. ',' → logprob: -8.945540428161621
    9. ' ' → logprob: -9.070540428161621
    10. '
' → logprob: -10.195540428161621

Token 81: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16154666244983673
    2. 'while' (adapté à ' while') → logprob: -2.1615467071533203
    3. ' while' → logprob: -4.03654670715332
    4. '<|end|>' → logprob: -4.41154670715332
    5. ' 
' → logprob: -7.28654670715332
    6. '	while' → logprob: -7.41154670715332
    7. ',' → logprob: -7.66154670715332
    8. '0' → logprob: -8.28654670715332
    9. '  
' → logprob: -8.41154670715332
    10. ' ' → logprob: -8.41154670715332

Token 82: ' i' (ID: 575)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.42406779527664185
    2. 'm' → logprob: -1.174067735671997
    3. ' i' → logprob: -3.674067735671997
    4. 'i' → logprob: -4.549067974090576
    5. ' w' → logprob: -8.799067497253418
    6. 'w' → logprob: -9.299067497253418
    7. ' ' → logprob: -9.924067497253418
    8. ' True' → logprob: -9.924067497253418
    9. '	m' → logprob: -10.299067497253418
    10. 'True' → logprob: -10.549067497253418

Token 83: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.25243905186653137
    2. '<=' → logprob: -1.502439022064209
    3. ' *' → logprob: -8.502439498901367
    4. '*' → logprob: -8.877439498901367
    5. ' <' → logprob: -10.002439498901367
    6. ' <<=' → logprob: -10.127439498901367
    7. '<' → logprob: -10.252439498901367
    8. '<<' → logprob: -11.252439498901367
    9. ' ' → logprob: -11.502439498901367
    10. ' <<' → logprob: -13.127439498901367

Token 84: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4740838408470154
    2. ' m' → logprob: -0.9740838408470154
    3. '	m' → logprob: -12.84908390045166
    4. ' ' → logprob: -12.97408390045166
    5. 'w' → logprob: -14.34908390045166
    6. ' w' → logprob: -15.09908390045166
    7. ' ' → logprob: -15.47408390045166
    8. '   ' → logprob: -15.59908390045166
    9. '    ' → logprob: -16.099082946777344
    10. ' min' → logprob: -16.599082946777344

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15037360787391663
    2. ' and' → logprob: -2.025373697280884
    3. ':
' → logprob: -5.650373458862305
    4. 'and' → logprob: -6.150373458862305
    5. ' :' → logprob: -6.650373458862305
    6. '<|end|>' → logprob: -7.775373458862305
    7. ' *' → logprob: -9.650373458862305
    8. ' :
' → logprob: -10.150373458862305
    9. ' ' → logprob: -10.275373458862305
    10. '<|end|>' → logprob: -10.400373458862305

Token 86: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5014537572860718
    2. '<|end|>' → logprob: -1.3764537572860718
    3. ' ' → logprob: -2.8764538764953613
    4. ' :' → logprob: -4.126453876495361
    5. '<|end|>' → logprob: -4.126453876495361
    6. ':
' → logprob: -4.126453876495361
    7. '
' → logprob: -4.626453876495361
    8. '       ' → logprob: -5.126453876495361
    9. ',' → logprob: -5.126453876495361
    10. ' :
' → logprob: -5.626453876495361

Token 87: ' mm' (ID: 8957)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.1480644941329956
    2. ' ' → logprob: -1.3980644941329956
    3. 'w' → logprob: -1.8980644941329956
    4. ' k' → logprob: -2.148064613342285
    5. 'k' → logprob: -3.148064613342285
    6. '<|end|>' → logprob: -3.648064613342285
    7. ' s' → logprob: -4.398064613342285
    8. ' x' → logprob: -5.023064613342285
    9. 'count' → logprob: -5.273064613342285
    10. ' t' → logprob: -5.398064613342285

Token 88: '.append' (ID: 3709)
  Prédit: ' <<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<=' → logprob: -0.7541602253913879
    2. ' =' → logprob: -1.0041601657867432
    3. '=' → logprob: -1.8791601657867432
    4. ',' → logprob: -5.629160404205322
    5. ' ' → logprob: -6.379160404205322
    6. '   ' → logprob: -6.879160404205322
    7. ' >>=' → logprob: -7.254160404205322
    8. ' *=' → logprob: -7.879160404205322
    9. '*=' → logprob: -7.879160404205322
    10. '.append' → logprob: -7.879160404205322

Token 89: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.029715893790125847
    2. ' i' → logprob: -4.6547160148620605
    3. '(min' → logprob: -4.6547160148620605
    4. 'i' → logprob: -5.2797160148620605
    5. '(' → logprob: -6.1547160148620605
    6. ' (' → logprob: -6.2797160148620605
    7. 'min' → logprob: -7.5297160148620605
    8. ' min' → logprob: -7.9047160148620605
    9. '((' → logprob: -9.029715538024902
    10. '	i' → logprob: -9.654715538024902

Token 90: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1328338086605072
    2. ')' → logprob: -2.13283371925354
    3. ' )
' → logprob: -5.257833957672119
    4. ' )' → logprob: -8.132833480834961
    5. ')

' → logprob: -8.507833480834961
    6. ')
' → logprob: -9.132833480834961
    7. ');' → logprob: -10.882833480834961
    8. '
' → logprob: -11.132833480834961
    9. '*i' → logprob: -12.132833480834961
    10. '*' → logprob: -12.382833480834961

Token 91: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42791131138801575
    2. '           ' → logprob: -1.4279112815856934
    3. '<|end|>' → logprob: -3.0529112815856934
    4. ' 
' → logprob: -3.5529112815856934
    5. '  
' → logprob: -4.427911281585693
    6. ' ' → logprob: -5.552911281585693
    7. ',' → logprob: -5.927911281585693
    8. '
' → logprob: -5.927911281585693
    9. '    
' → logprob: -6.052911281585693
    10. '            
' → logprob: -6.052911281585693

Token 92: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.13531818985939026
    2. 'm' (adapté à ' m') → logprob: -2.1353182792663574
    3. ' i' → logprob: -4.885318279266357
    4. 'i' → logprob: -7.260318279266357
    5. '           ' → logprob: -10.1353178024292
    6. ' ' → logprob: -10.2603178024292
    7. ' w' → logprob: -12.0103178024292
    8. '	m' → logprob: -13.2603178024292
    9. 'w' → logprob: -13.6353178024292
    10. '```' → logprob: -13.7603178024292

Token 93: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6935855150222778
    2. '-=' → logprob: -0.6935855150222778
    3. '-' → logprob: -8.443585395812988
    4. '=' → logprob: -8.818585395812988
    5. ' -' → logprob: -10.193585395812988
    6. ' =' → logprob: -10.318585395812988
    7. ' ' → logprob: -12.818585395812988
    8. ' >>=' → logprob: -14.943585395812988
    9. '```' → logprob: -15.193585395812988
    10. ',' → logprob: -15.693585395812988

Token 94: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005933297798037529
    2. ' i' → logprob: -5.1309332847595215
    3. '<|end|>' → logprob: -13.38093376159668
    4. ' ' → logprob: -13.63093376159668
    5. '	i' → logprob: -14.00593376159668
    6. '<|end|>' → logprob: -14.50593376159668
    7. '           ' → logprob: -15.88093376159668
    8. '```' → logprob: -16.13093376159668
    9. '*i' → logprob: -16.38093376159668
    10. ')i' → logprob: -16.75593376159668

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6429648995399475
    2. '<|end|>' → logprob: -0.8929648995399475
    3. '           ' → logprob: -3.2679648399353027
    4. '<|end|>' → logprob: -3.8929648399353027
    5. ' ' → logprob: -6.017964839935303
    6. ' 
' → logprob: -6.892964839935303
    7. '  
' → logprob: -7.142964839935303
    8. 'i' → logprob: -7.642964839935303
    9. '   ' → logprob: -7.892964839935303
    10. ',' → logprob: -7.892964839935303

Token 96: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5786511898040771
    2. '<|end|>' → logprob: -1.5786511898040771
    3. ' ' → logprob: -2.203651189804077
    4. '
' → logprob: -2.578651189804077
    5. '<|end|>' → logprob: -4.078651428222656
    6. '   ' → logprob: -4.453651428222656
    7. '       ' → logprob: -5.578651428222656
    8. 'i' → logprob: -5.578651428222656
    9. ' 
' → logprob: -6.203651428222656
    10. '
' → logprob: -6.203651428222656

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4741031527519226
    2. 'i' (adapté à ' i') → logprob: -0.9741031527519226
    3. ' ' → logprob: -11.849102973937988
    4. '           ' → logprob: -12.099102973937988
    5. '   ' → logprob: -12.349102973937988
    6. '	i' → logprob: -12.474102973937988
    7. ',i' → logprob: -13.349102973937988
    8. ' ' → logprob: -14.349102973937988
    9. '=i' → logprob: -14.474102973937988
    10. '2' → logprob: -14.724102973937988

Token 98: ' <<=' (ID: 134025)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.5657302737236023
    2. '<<' → logprob: -1.065730333328247
    3. ' <<=' → logprob: -2.440730333328247
    4. ' *=' → logprob: -8.315730094909668
    5. '=' → logprob: -8.440730094909668
    6. '<' → logprob: -12.440730094909668
    7. '```' → logprob: -12.565730094909668
    8. '<<<' → logprob: -12.565730094909668
    9. '2' → logprob: -12.815730094909668
    10. ' ' → logprob: -13.440730094909668

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.87515926361084
    4. '```' → logprob: -16.000158309936523
    5. '0' → logprob: -17.250158309936523
    6. ' ' → logprob: -17.687658309936523
    7. '１' → logprob: -17.875158309936523
    8. '=' → logprob: -17.937658309936523
    9. '2' → logprob: -18.187658309936523
    10. '  ' → logprob: -18.312658309936523

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '0' → logprob: -16.12500762939453
    4. '```' → logprob: -16.12500762939453
    5. '   ' → logprob: -16.37500762939453
    6. '`' → logprob: -18.00000762939453
    7. '<|end|>' → logprob: -18.43750762939453
    8. '#' → logprob: -18.50000762939453
    9. '[' → logprob: -18.87500762939453
    10. '2' → logprob: -18.93750762939453

Token 101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40840134024620056
    2. '<|end|>' → logprob: -2.1584012508392334
    3. ' 
' → logprob: -2.2834012508392334
    4. '       ' → logprob: -2.5334012508392334
    5. ' ' → logprob: -4.0334014892578125
    6. '  
' → logprob: -4.6584014892578125
    7. '<|end|>' → logprob: -6.0334014892578125
    8. '        
' → logprob: -6.0334014892578125
    9. '    
' → logprob: -6.7834014892578125
    10. '        ' → logprob: -6.7834014892578125

Token 102: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6153376698493958
    2. '       ' → logprob: -0.8653376698493958
    3. ' 
' → logprob: -4.11533784866333
    4. '        
' → logprob: -4.61533784866333
    5. '    
' → logprob: -5.74033784866333
    6. '  
' → logprob: -5.99033784866333
    7. '<|end|>' → logprob: -6.24033784866333
    8. '   ' → logprob: -6.36533784866333
    9. '        ' → logprob: -6.99033784866333
    10. ' ' → logprob: -7.86533784866333

Token 103: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3645276725292206
    2. 'mm' → logprob: -2.114527702331543
    3. ' if' → logprob: -2.864527702331543
    4. '   ' → logprob: -2.864527702331543
    5. 'if' (adapté à ' if') → logprob: -3.114527702331543
    6. ' mm' → logprob: -3.989527702331543
    7. '
' → logprob: -5.239527702331543
    8. ' ' → logprob: -6.989527702331543
    9. '```' → logprob: -8.739527702331543
    10. '    ' → logprob: -8.989527702331543

Token 104: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.10389891266822815
    2. 'm' → logprob: -3.1038990020751953
    3. ' not' → logprob: -3.2288990020751953
    4. ' len' → logprob: -5.103899002075195
    5. ' mm' → logprob: -5.228899002075195
    6. 'mm' → logprob: -7.353899002075195
    7. ' s' → logprob: -7.728899002075195
    8. 'not' → logprob: -7.978899002075195
    9. ' w' → logprob: -8.103899002075195
    10. ' ' → logprob: -8.228899002075195

Token 105: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.13699793815612793
    2. ' >' → logprob: -2.136997938156128
    3. ':' → logprob: -4.636998176574707
    4. '&gt' → logprob: -8.886998176574707
    5. '>:' → logprob: -9.761998176574707
    6. '">' → logprob: -9.886998176574707
    7. ')>' → logprob: -10.636998176574707
    8. '!=' → logprob: -11.011998176574707
    9. ' !=' → logprob: -11.636998176574707
    10. ':
' → logprob: -11.761998176574707

Token 106: '           ' (ID: 352)
  Prédit: ' mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mm' → logprob: -0.00895052868872881
    2. 'mm' → logprob: -4.758950710296631
    3. '           ' → logprob: -8.258950233459473
    4. ':mm' → logprob: -10.258950233459473
    5. '       ' → logprob: -12.383950233459473
    6. ':' → logprob: -12.383950233459473
    7. '        ' → logprob: -12.508950233459473
    8. ':
' → logprob: -12.633950233459473
    9. '   ' → logprob: -12.758950233459473
    10. ' ' → logprob: -12.758950233459473

Token 107: ' mm' (ID: 8957)
  Prédit: ' mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mm' → logprob: -0.16024717688560486
    2. 'mm' (adapté à ' mm') → logprob: -1.9102472066879272
    3. '           ' → logprob: -12.160246849060059
    4. '    ' → logprob: -12.410246849060059
    5. '_mm' → logprob: -12.410246849060059
    6. ' ' → logprob: -13.035246849060059
    7. '(mm' → logprob: -13.285246849060059
    8. '   ' → logprob: -13.660246849060059
    9. '            ' → logprob: -14.160246849060059
    10. '        ' → logprob: -14.160246849060059

Token 108: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005616117268800735
    2. '.' → logprob: -7.500561714172363
    3. '.app' → logprob: -12.750561714172363
    4. ' .' → logprob: -12.750561714172363
    5. 'append' → logprob: -13.500561714172363
    6. '           ' → logprob: -14.625561714172363
    7. 'app' → logprob: -15.125561714172363
    8. '.Append' → logprob: -15.250561714172363
    9. '.ap' → logprob: -16.000560760498047
    10. '       ' → logprob: -16.250560760498047

Token 109: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.002513712039217353
    2. 'm' → logprob: -6.002513885498047
    3. ' m' → logprob: -10.377513885498047
    4. '(' → logprob: -12.002513885498047
    5. '	m' → logprob: -14.877513885498047
    6. ' (' → logprob: -14.877513885498047
    7. '   ' → logprob: -18.127513885498047
    8. '(
' → logprob: -19.002513885498047
    9. '(int' → logprob: -19.127513885498047
    10. ')m' → logprob: -19.127513885498047

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006266489624977112
    2. ')
' → logprob: -5.1312665939331055
    3. ')

' → logprob: -8.631266593933105
    4. ' )' → logprob: -9.006266593933105
    5. '       ' → logprob: -10.506266593933105
    6. ')
' → logprob: -12.506266593933105
    7. ' )
' → logprob: -13.506266593933105
    8. '   ' → logprob: -14.006266593933105
    9. '))' → logprob: -14.006266593933105
    10. ')

' → logprob: -14.631266593933105

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018416577950119972
    2. '
' → logprob: -4.768416404724121
    3. '   ' → logprob: -5.768416404724121
    4. ' for' → logprob: -6.018416404724121
    5. '<|end|>' → logprob: -6.768416404724121
    6. '        
' → logprob: -7.018416404724121
    7. ',' → logprob: -7.643416404724121
    8. '    
' → logprob: -7.643416404724121
    9. '  
' → logprob: -8.143416404724121
    10. ',
' → logprob: -9.018416404724121

Token 112: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29084375500679016
    2. ' for' → logprob: -1.5408437252044678
    3. '   ' → logprob: -3.5408437252044678
    4. 'for' → logprob: -5.665843963623047
    5. '        
' → logprob: -6.290843963623047
    6. '
' → logprob: -6.665843963623047
    7. '    
' → logprob: -7.415843963623047
    8. ',' → logprob: -8.415843963623047
    9. '  
' → logprob: -8.415843963623047
    10. '	for' → logprob: -8.478343963623047

Token 113: ' (' (ID: 350)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.10582801699638367
    2. 'mm' → logprob: -2.855828046798706
    3. '[v' → logprob: -3.855828046798706
    4. '[' → logprob: -4.355827808380127
    5. ' [(' → logprob: -6.230827808380127
    6. '[[' → logprob: -6.230827808380127
    7. ' mm' → logprob: -6.855827808380127
    8. '[
' → logprob: -6.855827808380127
    9. 'v' → logprob: -7.105827808380127
    10. '[m' → logprob: -7.605827808380127

Token 114: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2635376453399658
    2. '[v' → logprob: -2.013537645339966
    3. '[(' → logprob: -2.638537645339966
    4. '(v' → logprob: -4.638537406921387
    5. 'mm' → logprob: -5.263537406921387
    6. ' v' → logprob: -5.513537406921387
    7. '[i' → logprob: -6.388537406921387
    8. '[' → logprob: -6.638537406921387
    9. '[
' → logprob: -7.013537406921387
    10. '(mm' → logprob: -7.263537406921387

Token 115: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5881505608558655
    2. '*w' → logprob: -0.9631505608558655
    3. '*' → logprob: -3.2131505012512207
    4. ',' → logprob: -3.8381505012512207
    5. '*,' → logprob: -7.713150501251221
    6. ' ' → logprob: -9.463150978088379
    7. ',w' → logprob: -9.463150978088379
    8. ' ,' → logprob: -9.588150978088379
    9. 'w' → logprob: -9.588150978088379
    10. '*i' → logprob: -9.713150978088379

Token 116: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.42875081300735474
    2. ' w' → logprob: -1.05375075340271
    3. '    ' → logprob: -11.303750991821289
    4. ' ' → logprob: -11.428750991821289
    5. '   ' → logprob: -12.303750991821289
    6. '        ' → logprob: -12.928750991821289
    7. '       ' → logprob: -13.241250991821289
    8. '  ' → logprob: -13.428750991821289
    9. '           ' → logprob: -13.491250991821289
    10. '     ' → logprob: -13.616250991821289

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002188449027016759
    2. '),' → logprob: -7.127188682556152
    3. ' ,' → logprob: -7.502188682556152
    4. '*' → logprob: -8.127188682556152
    5. ' *' → logprob: -8.627188682556152
    6. ')' → logprob: -9.002188682556152
    7. '       ' → logprob: -9.252188682556152
    8. '   ' → logprob: -9.877188682556152
    9. ',m' → logprob: -11.002188682556152
    10. '           ' → logprob: -11.877188682556152

Token 118: ' mm' (ID: 8957)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.007687662728130817
    2. ' mm' → logprob: -4.882687568664551
    3. 'm' → logprob: -10.25768756866455
    4. '   ' → logprob: -11.38268756866455
    5. ' ' → logprob: -12.00768756866455
    6. '           ' → logprob: -12.38268756866455
    7. '       ' → logprob: -12.63268756866455
    8. ')' → logprob: -12.75768756866455
    9. 'mmm' → logprob: -12.75768756866455
    10. 'ms' → logprob: -12.88268756866455

Token 119: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. ')
' → logprob: -11.000045776367188
    3. ' )' → logprob: -11.000045776367188
    4. '<|end|>' → logprob: -12.125045776367188
    5. '   ' → logprob: -12.750045776367188
    6. '       ' → logprob: -13.250045776367188
    7. '`)' → logprob: -14.000045776367188
    8. '')' → logprob: -15.125045776367188
    9. '))' → logprob: -15.625045776367188
    10. ')return' → logprob: -15.875045776367188

Token 120: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7739225625991821
    2. '
' → logprob: -1.3989225625991821
    3. '<|end|>' → logprob: -1.6489225625991821
    4. '   ' → logprob: -2.6489224433898926
    5. ')
' → logprob: -4.648922443389893
    6. '<|end|>' → logprob: -4.898922443389893
    7. '    
' → logprob: -5.773922443389893
    8. 'def' → logprob: -6.148922443389893
    9. '  
' → logprob: -6.398922443389893
    10. ',' → logprob: -7.273922443389893

Token 121: ' SS' (ID: 30354)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20601479709148407
    2. ' for' → logprob: -2.58101487159729
    3. 'for' → logprob: -2.70601487159729
    4. '
' → logprob: -4.206014633178711
    5. '    
' → logprob: -4.331014633178711
    6. 'v' → logprob: -5.081014633178711
    7. 's' → logprob: -5.831014633178711
    8. ')' → logprob: -6.081014633178711
    9. ' 
' → logprob: -7.206014633178711
    10. 'def' → logprob: -7.581014633178711

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3874000906944275
    2. '=' → logprob: -1.1374001502990723
    3. '_' → logprob: -8.137399673461914
    4. '=[]' → logprob: -10.012399673461914
    5. '   ' → logprob: -10.387399673461914
    6. '.append' → logprob: -10.512399673461914
    7. '+=' → logprob: -10.887399673461914
    8. 's' → logprob: -11.012399673461914
    9. ' +=' → logprob: -11.012399673461914
    10. '.extend' → logprob: -11.137399673461914

Token 123: ' map' (ID: 4014)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7249332666397095
    2. '[list' → logprob: -1.3499332666397095
    3. '[' → logprob: -1.9749332666397095
    4. '[s' → logprob: -3.22493314743042
    5. '[f' → logprob: -3.47493314743042
    6. ' [' → logprob: -3.97493314743042
    7. '[i' → logprob: -4.59993314743042
    8. '[S' → logprob: -5.22493314743042
    9. 'list' → logprob: -5.34993314743042
    10. ' []' → logprob: -5.97493314743042

Token 124: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0010872321436181664
    2. '(lambda' → logprob: -7.001087188720703
    3. 'f' → logprob: -9.001087188720703
    4. '(' → logprob: -10.126087188720703
    5. ' (' → logprob: -11.751087188720703
    6. ' f' → logprob: -14.251087188720703
    7. '   ' → logprob: -14.376087188720703
    8. 'lambda' → logprob: -14.626087188720703
    9. '((' → logprob: -14.751087188720703
    10. '(func' → logprob: -15.001087188720703

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 's' → logprob: -15.250001907348633
    3. '(lambda' → logprob: -15.375001907348633
    4. ' ' → logprob: -15.625001907348633
    5. 'ilter' → logprob: -15.625001907348633
    6. 'irst' → logprob: -15.875001907348633
    7. '(' → logprob: -16.000001907348633
    8. '   ' → logprob: -16.000001907348633
    9. '(S' → logprob: -16.000001907348633
    10. 'lambda' → logprob: -16.000001907348633

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5522653460502625
    2. ',S' → logprob: -1.5522654056549072
    3. '(S' → logprob: -1.6772654056549072
    4. '(lambda' → logprob: -4.427265167236328
    5. ')' → logprob: -4.927265167236328
    6. '(' → logprob: -6.677265167236328
    7. '   ' → logprob: -6.677265167236328
    8. ' ,' → logprob: -7.052265167236328
    9. '(s' → logprob: -7.052265167236328
    10. ',(' → logprob: -7.302265167236328

Token 127: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.062034789472818375
    2. ' S' → logprob: -2.812034845352173
    3. '   ' → logprob: -9.687034606933594
    4. ' ' → logprob: -12.437034606933594
    5. '  ' → logprob: -14.437034606933594
    6. '	S' → logprob: -15.812034606933594
    7. ')' → logprob: -16.062034606933594
    8. '(S' → logprob: -16.312034606933594
    9. 'SS' → logprob: -16.812034606933594
    10. '    ' → logprob: -16.812034606933594

Token 128: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5451681974809617e-05
    2. ')
' → logprob: -11.750015258789062
    3. ' )' → logprob: -12.125015258789062
    4. '))' → logprob: -14.125015258789062
    5. '   ' → logprob: -14.125015258789062
    6. ')

' → logprob: -15.250015258789062
    7. '())' → logprob: -15.625015258789062
    8. ')))' → logprob: -16.750015258789062
    9. ')}' → logprob: -17.125015258789062
    10. ')`' → logprob: -17.625015258789062

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.678936243057251
    2. ')' → logprob: -0.928936243057251
    3. ' for' → logprob: -2.928936243057251
    4. 'for' → logprob: -4.303936004638672
    5. '
' → logprob: -4.678936004638672
    6. '    
' → logprob: -5.428936004638672
    7. ',' → logprob: -5.553936004638672
    8. ')
' → logprob: -5.678936004638672
    9. '<|end|>' → logprob: -5.803936004638672
    10. ':' → logprob: -6.178936004638672

Token 130: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4414491355419159
    2. 'dp' → logprob: -1.1914491653442383
    3. ' for' → logprob: -3.5664491653442383
    4. 'new' → logprob: -4.691449165344238
    5. 'result' → logprob: -5.316449165344238
    6. 'res' → logprob: -5.566449165344238
    7. ' dp' → logprob: -6.316449165344238
    8. 'S' → logprob: -7.191449165344238
    9. 'ans' → logprob: -7.191449165344238
    10. 'v' → logprob: -7.691449165344238

Token 131: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.23171159625053406
    2. 'v' → logprob: -1.9817116260528564
    3. ' s' → logprob: -3.4817116260528564
    4. '(v' → logprob: -4.231711387634277
    5. 's' → logprob: -4.606711387634277
    6. ' (' → logprob: -4.731711387634277
    7. ' ' → logprob: -6.481711387634277
    8. '(' → logprob: -7.481711387634277
    9. '(s' → logprob: -7.731711387634277
    10. ' vs' → logprob: -8.231711387634277

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009801539592444897
    2. 's' → logprob: -5.009801387786865
    3. 'w' → logprob: -7.259801387786865
    4. ' ,' → logprob: -7.259801387786865
    5. ',w' → logprob: -7.634801387786865
    6. ',s' → logprob: -7.759801387786865
    7. '_,' → logprob: -8.134801864624023
    8. ',(' → logprob: -8.634801864624023
    9. ' in' → logprob: -9.509801864624023
    10. ' s' → logprob: -10.509801864624023

Token 133: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3868774473667145
    2. 'w' → logprob: -1.136877417564392
    3. ' ' → logprob: -12.761877059936523
    4. '    ' → logprob: -14.011877059936523
    5. '   ' → logprob: -14.636877059936523
    6. '(w' → logprob: -15.261877059936523
    7. '	w' → logprob: -15.386877059936523
    8. ',' → logprob: -15.386877059936523
    9. '  ' → logprob: -15.511877059936523
    10. '
' → logprob: -15.886877059936523

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011689399980241433
    2. ' ,' → logprob: -9.125117301940918
    3. ',m' → logprob: -13.125117301940918
    4. 's' → logprob: -14.000117301940918
    5. 'm' → logprob: -14.500117301940918
    6. 'for' → logprob: -14.500117301940918
    7. '   ' → logprob: -14.875117301940918
    8. ',(' → logprob: -15.125117301940918
    9. ' ' → logprob: -15.562617301940918
    10. ',
' → logprob: -15.625117301940918

Token 135: ' m' (ID: 284)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.0901937410235405
    2. 'm' → logprob: -2.715193748474121
    3. 'ms' → logprob: -4.340193748474121
    4. ' mm' → logprob: -5.465193748474121
    5. 'mmm' → logprob: -6.465193748474121
    6. 'ml' → logprob: -7.090193748474121
    7. ' m' → logprob: -8.590193748474121
    8. ' ms' → logprob: -10.340193748474121
    9. 'mul' → logprob: -10.840193748474121
    10. 'mult' → logprob: -11.090193748474121

Token 136: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31210270524024963
    2. ' in' → logprob: -1.4371026754379272
    3. 's' → logprob: -3.562102794647217
    4. '_list' → logprob: -7.312102794647217
    5. 'list' → logprob: -7.687102794647217
    6. ' ' → logprob: -8.312102317810059
    7. 'mm' → logprob: -9.062102317810059
    8. 'count' → logprob: -9.187102317810059
    9. 'm' → logprob: -9.437102317810059
    10. '   ' → logprob: -9.687102317810059

Token 137: ' SS' (ID: 30354)
  Prédit: 'SS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SS' → logprob: -1.318681188422488e-05
    2. ' SS' → logprob: -11.37501335144043
    3. 'list' → logprob: -13.75001335144043
    4. 'S' → logprob: -14.62501335144043
    5. '   ' → logprob: -16.87501335144043
    6. 'ss' → logprob: -17.25001335144043
    7. '_SS' → logprob: -17.25001335144043
    8. ' ' → logprob: -18.00001335144043
    9. '  ' → logprob: -19.00001335144043
    10. 'SSID' → logprob: -19.75001335144043

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02057528868317604
    2. ':
' → logprob: -3.8955752849578857
    3. '       ' → logprob: -11.395575523376465
    4. '   ' → logprob: -11.645575523376465
    5. ',' → logprob: -12.270575523376465
    6. ':
' → logprob: -12.895575523376465
    7. '):
' → logprob: -13.020575523376465
    8. ':

' → logprob: -13.520575523376465
    9. '):' → logprob: -14.145575523376465
    10. '<|end|>' → logprob: -14.145575523376465

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5373760461807251
    2. ':' → logprob: -0.9123760461807251
    3. ':
' → logprob: -5.5373759269714355
    4. ',' → logprob: -5.6623759269714355
    5. '    ' → logprob: -6.2873759269714355
    6. '<|end|>' → logprob: -6.4123759269714355
    7. '
' → logprob: -6.6623759269714355
    8. '   ' → logprob: -7.4123759269714355
    9. ' for' → logprob: -7.6623759269714355
    10. '        
' → logprob: -8.912376403808594

Token 140: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014851877465844154
    2. '        ' → logprob: -5.889852046966553
    3. ' k' → logprob: -5.889852046966553
    4. 'for' (adapté à ' for') → logprob: -5.889852046966553
    5. '       ' → logprob: -6.514852046966553
    6. '           ' → logprob: -6.639852046966553
    7. '    ' → logprob: -7.014852046966553
    8. ' j' → logprob: -7.264852046966553
    9. '   ' → logprob: -7.639852046966553
    10. ' n' → logprob: -8.264851570129395

Token 141: ' k' (ID: 372)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7632360458374023
    2. ' x' → logprob: -1.8882360458374023
    3. 'count' → logprob: -2.6382360458374023
    4. 'mm' → logprob: -3.1382360458374023
    5. 'c' → logprob: -3.3882360458374023
    6. 'j' → logprob: -3.6382360458374023
    7. 'k' → logprob: -3.7632360458374023
    8. 'cnt' → logprob: -3.7632360458374023
    9. 'weight' → logprob: -4.138236045837402
    10. 'i' → logprob: -4.263236045837402

Token 142: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0062453956343233585
    2. 'in' → logprob: -5.1312456130981445
    3. '   ' → logprob: -9.631245613098145
    4. ' ' → logprob: -9.881245613098145
    5. '  ' → logprob: -10.006245613098145
    6. 'w' → logprob: -10.756245613098145
    7. 'x' → logprob: -10.756245613098145
    8. 'm' → logprob: -10.881245613098145
    9. '    ' → logprob: -10.881245613098145
    10. ',' → logprob: -11.131245613098145

Token 143: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005267549771815538
    2. ' m' → logprob: -5.25526762008667
    3. 'range' → logprob: -10.880267143249512
    4. ' range' → logprob: -12.005267143249512
    5. 'mm' → logprob: -12.630267143249512
    6. ' ' → logprob: -13.505267143249512
    7. '   ' → logprob: -13.630267143249512
    8. 'w' → logprob: -13.755267143249512
    9. '	m' → logprob: -14.505267143249512
    10. '    ' → logprob: -14.880267143249512

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6828306913375854
    2. '[::-' → logprob: -1.3078306913375854
    3. ':
' → logprob: -1.8078306913375854
    4. '           ' → logprob: -3.932830810546875
    5. ' in' → logprob: -4.307830810546875
    6. '.reverse' → logprob: -5.432830810546875
    7. '       ' → logprob: -5.557830810546875
    8. ',' → logprob: -5.682830810546875
    9. '   ' → logprob: -5.932830810546875
    10. '[' → logprob: -6.057830810546875

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014620233559980989
    2. ' for' → logprob: -6.751461982727051
    3. '```' → logprob: -9.87646198272705
    4. ',' → logprob: -10.25146198272705
    5. '	       ' → logprob: -10.25146198272705
    6. '          ' → logprob: -10.62646198272705
    7. '               ' → logprob: -10.87646198272705
    8. ' w' → logprob: -11.12646198272705
    9. '       ' → logprob: -11.25146198272705
    10. 'for' → logprob: -11.25146198272705

Token 146: ' v' (ID: 323)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7137451767921448
    2. 'for' → logprob: -1.2137451171875
    3. '           ' → logprob: -1.7137451171875
    4. ' w' → logprob: -4.7137451171875
    5. 'w' → logprob: -4.9637451171875
    6. '               ' → logprob: -5.7137451171875
    7. 'weight' → logprob: -5.7137451171875
    8. ' weight' → logprob: -6.0887451171875
    9. '            ' → logprob: -6.3387451171875
    10. '   ' → logprob: -6.9637451171875

Token 147: '1' (ID: 16)
  Prédit: '*w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.8076816201210022
    2. '*k' → logprob: -1.6826815605163574
    3. ' *' → logprob: -2.1826815605163574
    4. '*' → logprob: -2.5576815605163574
    5. ' =' → logprob: -2.5576815605163574
    6. '*v' → logprob: -3.1826815605163574
    7. '=' → logprob: -3.6826815605163574
    8. 'w' → logprob: -4.807681560516357
    9. ',' → logprob: -5.307681560516357
    10. '*=' → logprob: -5.307681560516357

Token 148: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16391895711421967
    2. '=' → logprob: -2.538918972015381
    3. ',' → logprob: -2.663918972015381
    4. ',w' → logprob: -7.538918972015381
    5. 'w' → logprob: -7.788918972015381
    6. ',v' → logprob: -7.913918972015381
    7. '   ' → logprob: -8.163918495178223
    8. ' ,' → logprob: -8.913918495178223
    9. '=w' → logprob: -9.038918495178223
    10. '=v' → logprob: -9.538918495178223

Token 149: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.13419367372989655
    2. 'w' → logprob: -2.1341936588287354
    3. ' k' → logprob: -5.1341938972473145
    4. 'k' → logprob: -7.2591938972473145
    5. ' ' → logprob: -8.259193420410156
    6. ' v' → logprob: -8.759193420410156
    7. 'v' → logprob: -10.009193420410156
    8. '<|end|>' → logprob: -10.134193420410156
    9. '    ' → logprob: -11.196693420410156
    10. '   ' → logprob: -11.571693420410156

Token 150: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4876852035522461
    2. '=' → logprob: -0.9876852035522461
    3. ',' → logprob: -4.612685203552246
    4. 'k' → logprob: -6.737685203552246
    5. '1' → logprob: -6.987685203552246
    6. '=k' → logprob: -7.612685203552246
    7. '=w' → logprob: -7.987685203552246
    8. 'w' → logprob: -8.362685203552246
    9. 'v' → logprob: -9.237685203552246
    10. '*=' → logprob: -9.862685203552246

Token 151: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18137957155704498
    2. '=' → logprob: -1.8063795566558838
    3. ',' → logprob: -6.431379795074463
    4. ' ,' → logprob: -12.306379318237305
    5. ')' → logprob: -12.931379318237305
    6. '           ' → logprob: -13.056379318237305
    7. ' ' → logprob: -13.306379318237305
    8. '=w' → logprob: -13.556379318237305
    9. '=k' → logprob: -13.556379318237305
    10. '    ' → logprob: -13.681379318237305

Token 152: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.020925231277942657
    2. 'k' → logprob: -4.520925045013428
    3. ' v' → logprob: -4.645925045013428
    4. ' k' → logprob: -8.645925521850586
    5. '   ' → logprob: -11.020925521850586
    6. ' ' → logprob: -11.145925521850586
    7. '  ' → logprob: -11.645925521850586
    8. '	v' → logprob: -12.145925521850586
    9. 'w' → logprob: -12.770925521850586
    10. 'kv' → logprob: -13.645925521850586

Token 153: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6705226898193359
    2. '*k' → logprob: -0.7955226898193359
    3. '*' → logprob: -3.295522689819336
    4. ',' → logprob: -9.670522689819336
    5. '*w' → logprob: -10.170522689819336
    6. '           ' → logprob: -11.045522689819336
    7. 'k' → logprob: -11.920522689819336
    8. '*p' → logprob: -12.420522689819336
    9. '*x' → logprob: -12.670522689819336
    10. '*=' → logprob: -12.670522689819336

Token 154: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00038038729690015316
    2. ' k' → logprob: -7.875380516052246
    3. '	k' → logprob: -16.75037956237793
    4. ' ' → logprob: -16.87537956237793
    5. '*k' → logprob: -17.00037956237793
    6. '           ' → logprob: -17.37537956237793
    7. '  ' → logprob: -17.87537956237793
    8. ',k' → logprob: -18.00037956237793
    9. '<|end|>' → logprob: -18.00037956237793
    10. '   ' → logprob: -18.50037956237793

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007130446378141642
    2. ' ,' → logprob: -5.0071306228637695
    3. ',w' → logprob: -7.8821306228637695
    4. '           ' → logprob: -10.50713062286377
    5. 'w' → logprob: -12.75713062286377
    6. ',
' → logprob: -13.75713062286377
    7. ',k' → logprob: -13.88213062286377
    8. '   ' → logprob: -14.13213062286377
    9. '               ' → logprob: -14.25713062286377
    10. '```' → logprob: -14.25713062286377

Token 156: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.31326642632484436
    2. 'w' → logprob: -1.313266396522522
    3. '	w' → logprob: -13.68826675415039
    4. '           ' → logprob: -13.93826675415039
    5. '    ' → logprob: -14.43826675415039
    6. ' ' → logprob: -14.68826675415039
    7. '   ' → logprob: -14.93826675415039
    8. '*w' → logprob: -15.31326675415039
    9. '<|end|>' → logprob: -15.56326675415039
    10. '            ' → logprob: -16.06326675415039

Token 157: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.002905443077906966
    2. '*' → logprob: -6.002905368804932
    3. '*k' → logprob: -7.752905368804932
    4. ' ' → logprob: -16.127904891967773
    5. 'k' → logprob: -17.627904891967773
    6. ' ' → logprob: -18.502904891967773
    7. '*num' → logprob: -18.752904891967773
    8. '*s' → logprob: -18.877904891967773
    9. '*w' → logprob: -19.002904891967773
    10. '*x' → logprob: -19.252904891967773

Token 158: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005244429688900709
    2. ' k' → logprob: -5.255244255065918
    3. '<|end|>' → logprob: -11.755244255065918
    4. '*k' → logprob: -13.255244255065918
    5. ' ' → logprob: -14.880244255065918
    6. '	k' → logprob: -15.380244255065918
    7. '<|end|>' → logprob: -15.630244255065918
    8. '  ' → logprob: -16.880245208740234
    9. '_k' → logprob: -17.005245208740234
    10. ' *' → logprob: -17.380245208740234

Token 159: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0047218031249940395
    2. '
' → logprob: -6.004721641540527
    3. ' for' → logprob: -6.504721641540527
    4. '<|end|>' → logprob: -8.629721641540527
    5. 'for' → logprob: -8.879721641540527
    6. '            
' → logprob: -9.504721641540527
    7. '  
' → logprob: -9.629721641540527
    8. ',' → logprob: -9.879721641540527
    9. '   ' → logprob: -10.004721641540527
    10. '          ' → logprob: -10.379721641540527

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00819585844874382
    2. ' for' → logprob: -5.383195877075195
    3. 'for' → logprob: -6.383195877075195
    4. '
' → logprob: -7.133195877075195
    5. '       ' → logprob: -8.008195877075195
    6. '<|end|>' → logprob: -8.883195877075195
    7. '   ' → logprob: -9.133195877075195
    8. '  
' → logprob: -9.383195877075195
    9. '```' → logprob: -9.383195877075195
    10. ',' → logprob: -9.508195877075195

Token 161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18137459456920624
    2. ' for' → logprob: -1.8063745498657227
    3. '   ' → logprob: -6.681374549865723
    4. '           ' → logprob: -8.056374549865723
    5. '       ' → logprob: -10.181374549865723
    6. '
' → logprob: -11.806374549865723
    7. 'r' → logprob: -12.306374549865723
    8. '    ' → logprob: -13.806374549865723
    9. ' ' → logprob: -13.806374549865723
    10. '	for' → logprob: -13.806374549865723

Token 162: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0612926110625267
    2. ' j' → logprob: -3.4362926483154297
    3. 'x' → logprob: -4.43629264831543
    4. 'i' → logprob: -4.56129264831543
    5. 'weight' → logprob: -6.18629264831543
    6. ' weight' → logprob: -7.06129264831543
    7. ' x' → logprob: -7.31129264831543
    8. ' i' → logprob: -7.43629264831543
    9. 'cap' → logprob: -8.68629264831543
    10. 'c' → logprob: -8.81129264831543

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001966104842722416
    2. 'in' → logprob: -6.2519659996032715
    3. 'w' → logprob: -11.00196647644043
    4. ' ' → logprob: -12.37696647644043
    5. 'n' → logprob: -12.50196647644043
    6. '   ' → logprob: -13.12696647644043
    7. 'range' → logprob: -13.25196647644043
    8. 'd' → logprob: -13.37696647644043
    9. '  ' → logprob: -13.37696647644043
    10. '1' → logprob: -13.37696647644043

Token 164: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868810832500458
    2. 'range' → logprob: -1.1368811130523682
    3. '(range' → logprob: -12.386880874633789
    4. ' reversed' → logprob: -13.011880874633789
    5. 'W' → logprob: -13.886880874633789
    6. '   ' → logprob: -14.511880874633789
    7. ' xrange' → logprob: -14.761880874633789
    8. '	range' → logprob: -14.761880874633789
    9. ' ' → logprob: -14.886880874633789
    10. 'rang' → logprob: -15.011880874633789

Token 165: '(W' (ID: 26031)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.6949332356452942
    2. '(W' → logprob: -0.6949332356452942
    3. '           ' → logprob: -7.5699334144592285
    4. '   ' → logprob: -7.5699334144592285
    5. ' W' → logprob: -7.5699334144592285
    6. 'w' → logprob: -9.56993293762207
    7. '(w' → logprob: -10.06993293762207
    8. '               ' → logprob: -10.19493293762207
    9. '	W' → logprob: -10.19493293762207
    10. '(' → logprob: -11.06993293762207

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008853725739754736
    2. ',w' → logprob: -8.000885009765625
    3. ' ,' → logprob: -8.000885009765625
    4. '1' → logprob: -9.000885009765625
    5. '-w' → logprob: -10.500885009765625
    6. 'w' → logprob: -10.750885009765625
    7. '   ' → logprob: -11.625885009765625
    8. '+' → logprob: -11.625885009765625
    9. ' -' → logprob: -11.625885009765625
    10. ',
' → logprob: -12.250885009765625

Token 167: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0486164316534996
    2. ' w' → logprob: -3.048616409301758
    3. '   ' → logprob: -12.048616409301758
    4. '           ' → logprob: -12.173616409301758
    5. '	w' → logprob: -12.298616409301758
    6. 'v' → logprob: -13.298616409301758
    7. '            
' → logprob: -13.548616409301758
    8. '    ' → logprob: -13.673616409301758
    9. '=w' → logprob: -14.173616409301758
    10. '
' → logprob: -14.298616409301758

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -18.125
    3. '```' → logprob: -19.0
    4. ',' → logprob: -19.75
    5. ' ' → logprob: -19.75
    6. ' -' → logprob: -20.125
    7. '-' → logprob: -20.5
    8. '

' → logprob: -20.5
    9. '' → logprob: -20.875
    10. '_' → logprob: -21.4375

Token 169: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031781906727701426
    2. ' -' → logprob: -5.753178119659424
    3. '   ' → logprob: -14.753178596496582
    4. '1' → logprob: -17.128177642822266
    5. '−' → logprob: -17.253177642822266
    6. ' ' → logprob: -17.503177642822266
    7. '  ' → logprob: -17.753177642822266
    8. '```' → logprob: -18.253177642822266
    9. '           ' → logprob: -19.878177642822266
    10. '
' → logprob: -20.003177642822266

Token 170: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -15.25000286102295
    4. '   ' → logprob: -17.625003814697266
    5. '0' → logprob: -18.125003814697266
    6. ')' → logprob: -18.625003814697266
    7. '...' → logprob: -18.625003814697266
    8. 'w' → logprob: -19.125003814697266
    9. '
' → logprob: -19.125003814697266
    10. ',' → logprob: -19.500003814697266

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07340337336063385
    2. ',-' → logprob: -2.8234033584594727
    3. '-' → logprob: -4.823403358459473
    4. ' ,' → logprob: -6.323403358459473
    5. ' -' → logprob: -6.698403358459473
    6. ' ,-' → logprob: -9.323403358459473
    7. '   ' → logprob: -10.073403358459473
    8. '       ' → logprob: -10.198403358459473
    9. '      ' → logprob: -10.823403358459473
    10. '  ' → logprob: -11.198403358459473

Token 172: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38688328862190247
    2. ' -' → logprob: -1.13688325881958
    3. '-w' → logprob: -12.136883735656738
    4. ' ' → logprob: -12.761883735656738
    5. '   ' → logprob: -13.511883735656738
    6. '  ' → logprob: -13.886883735656738
    7. ')' → logprob: -15.136883735656738
    8. '    ' → logprob: -15.261883735656738
    9. '-)' → logprob: -15.386883735656738
    10. '-i' → logprob: -15.886883735656738

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. ')' → logprob: -15.00000286102295
    4. '):
' → logprob: -17.875003814697266
    5. 'w' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.625003814697266
    7. '```' → logprob: -19.250003814697266
    8. '１' → logprob: -20.250003814697266
    9. '):

' → logprob: -20.375003814697266
    10. '-' → logprob: -20.937503814697266

Token 174: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16270945966243744
    2. '):' → logprob: -1.9127094745635986
    3. '-' → logprob: -6.4127092361450195
    4. '):
' → logprob: -8.28770923614502
    5. ' -' → logprob: -9.03770923614502
    6. ' ):
' → logprob: -9.41270923614502
    7. ')' → logprob: -9.66270923614502
    8. ':' → logprob: -9.91270923614502
    9. ' ):' → logprob: -10.03770923614502
    10. '):

' → logprob: -10.28770923614502

Token 175: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00398377375677228
    2. ' dp' → logprob: -5.628983974456787
    3. '           ' → logprob: -9.003983497619629
    4. 'dp' → logprob: -9.753983497619629
    5. '<|end|>' → logprob: -9.753983497619629
    6. '```' → logprob: -10.003983497619629
    7. '[' → logprob: -11.128983497619629
    8. '                ' → logprob: -11.253983497619629
    9. '            ' → logprob: -11.378983497619629
    10. '(dp' → logprob: -11.503983497619629

Token 176: ' j' (ID: 441)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.03911541774868965
    2. 'dp' → logprob: -3.2891154289245605
    3. '                   ' → logprob: -7.0391154289245605
    4. '	dp' → logprob: -9.289114952087402
    5. '               ' → logprob: -9.414114952087402
    6. '   ' → logprob: -11.914114952087402
    7. '(dp' → logprob: -12.539114952087402
    8. '                       ' → logprob: -12.664114952087402
    9. ' if' → logprob: -13.164114952087402
    10. '           ' → logprob: -13.664114952087402

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2781814336776733
    2. 'dp' → logprob: -1.2781814336776733
    3. ']' → logprob: -1.5281814336776733
    4. ' =' → logprob: -1.7781814336776733
    5. 'f' → logprob: -4.278181552886963
    6. '               ' → logprob: -4.903181552886963
    7. '           ' → logprob: -4.903181552886963
    8. ' dp' → logprob: -5.653181552886963
    9. '   ' → logprob: -5.778181552886963
    10. '[' → logprob: -5.903181552886963

Token 178: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06178424507379532
    2. ' i' → logprob: -3.811784267425537
    3. 'dp' → logprob: -3.811784267425537
    4. 'max' → logprob: -4.436784267425537
    5. ' max' → logprob: -6.686784267425537
    6. '   ' → logprob: -6.811784267425537
    7. ' dp' → logprob: -7.186784267425537
    8. 'min' → logprob: -7.561784267425537
    9. ' ' → logprob: -9.311783790588379
    10. ' min' → logprob: -9.811783790588379

Token 179: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8043485879898071
    2. '               ' → logprob: -1.3043485879898071
    3. ' -' → logprob: -2.4293484687805176
    4. ']' → logprob: -2.8043484687805176
    5. 'w' → logprob: -3.3043484687805176
    6. '-w' → logprob: -4.054348468780518
    7. '<|end|>' → logprob: -4.429348468780518
    8. '                   ' → logprob: -4.554348468780518
    9. ' w' → logprob: -5.179348468780518
    10. '           ' → logprob: -5.429348468780518

Token 180: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0011705794604495168
    2. ' w' → logprob: -6.751170635223389
    3. '               ' → logprob: -15.75117015838623
    4. '                   ' → logprob: -17.251171112060547
    5. '   ' → logprob: -17.501171112060547
    6. '	w' → logprob: -17.501171112060547
    7. '<|end|>' → logprob: -17.501171112060547
    8. '           ' → logprob: -17.876171112060547
    9. ' ' → logprob: -18.126171112060547
    10. 'wj' → logprob: -18.501171112060547

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '...' → logprob: -19.25
    4. '１' → logprob: -19.625
    5. '<|end|>' → logprob: -19.625
    6. '```' → logprob: -20.0
    7. '_' → logprob: -20.25
    8. 't' → logprob: -20.625
    9. 'k' → logprob: -20.9375
    10. 'w' → logprob: -21.125

Token 182: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3606795072555542
    2. 'dp' → logprob: -1.8606795072555542
    3. ']' → logprob: -2.3606796264648438
    4. '
' → logprob: -3.6106796264648438
    5. ' dp' → logprob: -4.235679626464844
    6. '                
' → logprob: -5.485679626464844
    7. ']
' → logprob: -6.235679626464844
    8. 'if' → logprob: -6.985679626464844
    9. ' if' → logprob: -7.110679626464844
    10. '                ' → logprob: -7.610679626464844

Token 183: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3075539767742157
    2. 'dp' → logprob: -1.432554006576538
    3. ' dp' → logprob: -3.682554006576538
    4. 'if' → logprob: -7.682553768157959
    5. ' if' → logprob: -8.432554244995117
    6. '	dp' → logprob: -10.182554244995117
    7. '                
' → logprob: -10.432554244995117
    8. '           ' → logprob: -10.557554244995117
    9. '
' → logprob: -10.682554244995117
    10. ']' → logprob: -10.682554244995117

Token 184: ' v' (ID: 323)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3688044250011444
    2. ' dp' → logprob: -1.7438044548034668
    3. '               ' → logprob: -2.618804454803467
    4. 'if' → logprob: -2.993804454803467
    5. ' if' → logprob: -4.618804454803467
    6. '
' → logprob: -8.368803977966309
    7. '                
' → logprob: -9.618803977966309
    8. '           ' → logprob: -9.868803977966309
    9. '	dp' → logprob: -9.868803977966309
    10. '                ' → logprob: -9.993803977966309

Token 185: '2' (ID: 17)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1798263788223267
    2. ' =' → logprob: -2.054826259613037
    3. '1' → logprob: -2.304826259613037
    4. 'alue' → logprob: -2.554826259613037
    5. '[' → logprob: -2.679826259613037
    6. ',' → logprob: -2.804826259613037
    7. '<|end|>' → logprob: -3.179826259613037
    8. 'dp' → logprob: -3.679826259613037
    9. '<|end|>' → logprob: -3.679826259613037
    10. 's' → logprob: -3.929826259613037

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5856139659881592
    2. '=' → logprob: -0.8356139659881592
    3. '+' → logprob: -5.210614204406738
    4. ' +' → logprob: -5.835614204406738
    5. 'v' → logprob: -7.460614204406738
    6. ',' → logprob: -8.335614204406738
    7. '1' → logprob: -8.835614204406738
    8. ' ' → logprob: -9.835614204406738
    9. '2' → logprob: -10.335614204406738
    10. ']' → logprob: -10.460614204406738

Token 187: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011420666240155697
    2. ' dp' → logprob: -4.511420726776123
    3. '               ' → logprob: -8.886420249938965
    4. 'v' → logprob: -9.261420249938965
    5. '   ' → logprob: -10.011420249938965
    6. '           ' → logprob: -10.261420249938965
    7. '	dp' → logprob: -11.261420249938965
    8. '                   ' → logprob: -11.511420249938965
    9. ' ' → logprob: -12.011420249938965
    10. '(dp' → logprob: -12.761420249938965

Token 188: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.253090865968261e-06
    2. '[i' → logprob: -11.875009536743164
    3. '[' → logprob: -13.750009536743164
    4. ' [' → logprob: -14.375009536743164
    5. 'j' → logprob: -14.500009536743164
    6. '   ' → logprob: -16.875009536743164
    7. ' j' → logprob: -18.250009536743164
    8. '```' → logprob: -18.375009536743164
    9. '
' → logprob: -18.750009536743164
    10. ' ' → logprob: -19.250009536743164

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000718626833986491
    2. ']+' → logprob: -7.250718593597412
    3. '+' → logprob: -12.00071907043457
    4. ' ]' → logprob: -13.50071907043457
    5. ')' → logprob: -14.37571907043457
    6. '']' → logprob: -15.25071907043457
    7. ' +' → logprob: -15.62571907043457
    8. ']
' → logprob: -16.75071907043457
    9. '
' → logprob: -17.00071907043457
    10. '   ' → logprob: -17.50071907043457

Token 190: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38688650727272034
    2. '+' → logprob: -1.136886477470398
    3. '+k' → logprob: -12.136886596679688
    4. 'v' → logprob: -12.886886596679688
    5. '＋' → logprob: -13.511886596679688
    6. ' ' → logprob: -14.136886596679688
    7. '+j' → logprob: -14.136886596679688
    8. ' ' → logprob: -14.261886596679688
    9. '+
' → logprob: -14.511886596679688
    10. '+w' → logprob: -14.636886596679688

Token 191: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.000553151941858232
    2. ' v' → logprob: -7.500553131103516
    3. '	v' → logprob: -16.000553131103516
    4. '           ' → logprob: -17.875553131103516
    5. '   ' → logprob: -19.125553131103516
    6. '               ' → logprob: -19.375553131103516
    7. '                   ' → logprob: -19.875553131103516
    8. 'value' → logprob: -20.000553131103516
    9. ' ' → logprob: -20.125553131103516
    10. '       ' → logprob: -20.250553131103516

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'v' → logprob: -18.125
    3. '```' → logprob: -18.75
    4. ' ' → logprob: -19.625
    5. ' v' → logprob: -21.0
    6. '`' → logprob: -21.75
    7. '   ' → logprob: -22.0
    8. '[' → logprob: -22.1875
    9. '[v' → logprob: -22.625
    10. ',' → logprob: -22.6875

Token 193: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023033717647194862
    2. ' if' → logprob: -4.398033618927002
    3. 'if' → logprob: -5.148033618927002
    4. '       ' → logprob: -6.273033618927002
    5. '
' → logprob: -6.398033618927002
    6. '           ' → logprob: -7.148033618927002
    7. ',' → logprob: -9.27303409576416
    8. '```' → logprob: -9.77303409576416
    9. 'dp' → logprob: -10.64803409576416
    10. '
' → logprob: -10.77303409576416

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02258906699717045
    2. ' if' → logprob: -4.022589206695557
    3. '
' → logprob: -6.147589206695557
    4. 'if' → logprob: -6.272589206695557
    5. '```' → logprob: -8.897588729858398
    6. '           ' → logprob: -9.522588729858398
    7. ',' → logprob: -9.897588729858398
    8. '       ' → logprob: -10.022588729858398
    9. '
' → logprob: -10.647588729858398
    10. ')' → logprob: -11.522588729858398

Token 195: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2661467492580414
    2. ' if' → logprob: -1.5161467790603638
    3. '               ' → logprob: -4.266146659851074
    4. 'dp' → logprob: -10.016146659851074
    5. ' dp' → logprob: -10.766146659851074
    6. '           ' → logprob: -11.891146659851074
    7. ' ' → logprob: -12.266146659851074
    8. '	if' → logprob: -13.766146659851074
    9. '   ' → logprob: -13.891146659851074
    10. '                   ' → logprob: -14.266146659851074

Token 196: ' dp' (ID: 21546)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5007785558700562
    2. ' v' → logprob: -1.8757785558700562
    3. 'dp' → logprob: -2.0007786750793457
    4. ' dp' → logprob: -2.2507786750793457
    5. '   ' → logprob: -9.625778198242188
    6. ' ' → logprob: -9.875778198242188
    7. '	dp' → logprob: -11.250778198242188
    8. '(dp' → logprob: -11.375778198242188
    9. '	v' → logprob: -12.000778198242188
    10. '  ' → logprob: -12.500778198242188

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004329341172706336
    2. '[j' → logprob: -7.750432968139648
    3. '[' → logprob: -14.000432968139648
    4. '               ' → logprob: -14.250432968139648
    5. '                   ' → logprob: -15.000432968139648
    6. 'i' → logprob: -16.12543296813965
    7. '[k' → logprob: -16.50043296813965
    8. '           ' → logprob: -16.75043296813965
    9. '[v' → logprob: -17.37543296813965
    10. '```' → logprob: -17.75043296813965

Token 198: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.44099941849708557
    2. ' <' → logprob: -1.0659993886947632
    3. ']' → logprob: -5.190999507904053
    4. '<v' → logprob: -5.565999507904053
    5. ']<' → logprob: -6.565999507904053
    6. '[' → logprob: -7.815999507904053
    7. '<i' → logprob: -8.315999031066895
    8. '<int' → logprob: -9.190999031066895
    9. '<n' → logprob: -9.315999031066895
    10. '<p' → logprob: -9.440999031066895

Token 199: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03913433477282524
    2. ' <' → logprob: -3.2891342639923096
    3. '<v' → logprob: -6.914134502410889
    4. '<int' → logprob: -10.53913402557373
    5. '<
' → logprob: -11.41413402557373
    6. '<class' → logprob: -12.03913402557373
    7. '[' → logprob: -12.03913402557373
    8. '<p' → logprob: -12.28913402557373
    9. '<const' → logprob: -12.28913402557373
    10. '<i' → logprob: -12.41413402557373

Token 200: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.018151935189962387
    2. ' v' → logprob: -4.018151760101318
    3. '	v' → logprob: -14.393152236938477
    4. '                   ' → logprob: -14.643152236938477
    5. '   ' → logprob: -14.768152236938477
    6. '               ' → logprob: -15.768152236938477
    7. ' ' → logprob: -15.893152236938477
    8. '
' → logprob: -16.143152236938477
    9. '           ' → logprob: -16.518152236938477
    10. '  ' → logprob: -16.893152236938477

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.62500286102295
    3. '   ' → logprob: -15.12500286102295
    4. '[i' → logprob: -15.12500286102295
    5. '                   ' → logprob: -15.62500286102295
    6. '           ' → logprob: -16.000001907348633
    7. '```' → logprob: -16.125001907348633
    8. '               ' → logprob: -16.375001907348633
    9. '[' → logprob: -16.750001907348633
    10. '       ' → logprob: -17.375001907348633

Token 202: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.06253637373447418
    2. ':' → logprob: -2.8125364780426025
    3. '                   ' → logprob: -7.937536239624023
    4. '               ' → logprob: -9.937536239624023
    5. '                       ' → logprob: -10.062536239624023
    6. '():
' → logprob: -10.187536239624023
    7. '=' → logprob: -10.437536239624023
    8. '):
' → logprob: -10.812536239624023
    9. ':
' → logprob: -11.437536239624023
    10. '           ' → logprob: -11.937536239624023

Token 203: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2424233853816986
    2. ' dp' → logprob: -1.617423415184021
    3. 'dp' → logprob: -4.1174235343933105
    4. '(dp' → logprob: -8.242423057556152
    5. '               ' → logprob: -9.617423057556152
    6. '                       ' → logprob: -9.742423057556152
    7. '	dp' → logprob: -9.992423057556152
    8. '```' → logprob: -10.617423057556152
    9. '_dp' → logprob: -10.617423057556152
    10. '                           ' → logprob: -10.742423057556152

Token 204: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3151625394821167
    2. 'dp' (adapté à ' dp') → logprob: -1.3151625394821167
    3. '                   ' → logprob: -6.940162658691406
    4. '                       ' → logprob: -7.065162658691406
    5. '               ' → logprob: -10.565162658691406
    6. '	dp' → logprob: -10.690162658691406
    7. '(dp' → logprob: -11.190162658691406
    8. '_dp' → logprob: -12.440162658691406
    9. '           ' → logprob: -13.065162658691406
    10. '```' → logprob: -13.190162658691406

Token 205: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. 'i' → logprob: -17.0
    4. '=' → logprob: -17.0
    5. '[
' → logprob: -17.375
    6. ' =' → logprob: -18.0
    7. '<|end|>' → logprob: -18.125
    8. '[j' → logprob: -18.875
    9. '```' → logprob: -18.875
    10. '=i' → logprob: -19.25

Token 206: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009265808388590813
    2. ' =' → logprob: -5.634265899658203
    3. ']=' → logprob: -5.884265899658203
    4. '=' → logprob: -5.884265899658203
    5. ' ]' → logprob: -9.509265899658203
    6. '<|end|>' → logprob: -12.384265899658203
    7. ')' → logprob: -12.634265899658203
    8. ',' → logprob: -14.884265899658203
    9. ' ' → logprob: -15.009265899658203
    10. '=i' → logprob: -15.259265899658203

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804171830415726
    2. '=' → logprob: -3.288041830062866
    3. '=v' → logprob: -15.538042068481445
    4. ' ' → logprob: -17.038042068481445
    5. ',' → logprob: -17.038042068481445
    6. ' =
' → logprob: -17.913042068481445
    7. '＝' → logprob: -18.163042068481445
    8. ' =)' → logprob: -19.288042068481445
    9. '=k' → logprob: -19.413042068481445
    10. '.=' → logprob: -19.538042068481445

Token 208: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005234002135694027
    2. ' v' → logprob: -5.2552337646484375
    3. '                   ' → logprob: -16.755233764648438
    4. '	v' → logprob: -18.130233764648438
    5. 'value' → logprob: -19.380233764648438
    6. '<v' → logprob: -20.130233764648438
    7. 'val' → logprob: -20.380233764648438
    8. '(v' → logprob: -20.755233764648438
    9. 'va' → logprob: -21.005233764648438
    10. '$v' → logprob: -21.005233764648438

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. '[i' → logprob: -13.750001907348633
    3. 'v' → logprob: -14.875001907348633
    4. '```' → logprob: -16.375001907348633
    5. '
' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.125001907348633
    7. 'i' → logprob: -18.875001907348633
    8. '[' → logprob: -19.625001907348633
    9. '[v' → logprob: -19.750001907348633
    10. ' ' → logprob: -19.750001907348633

Token 210: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 213: '(dp' (ID: 68843)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.16781748831272125
    2. '(' → logprob: -1.91781747341156
    3. '()' → logprob: -5.66781759262085
    4. '(dp' → logprob: -6.04281759262085
    5. '(sum' → logprob: -6.54281759262085
    6. '(
' → logprob: -8.917817115783691
    7. '(*' → logprob: -9.792817115783691
    8. 'max' → logprob: -10.042817115783691
    9. ' (' → logprob: -10.292817115783691
    10. '(np' → logprob: -12.042817115783691

Token 214: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6994836926460266
    2. '[-' → logprob: -0.6994836926460266
    3. ')' → logprob: -5.074483871459961
    4. '])' → logprob: -11.324483871459961
    5. '[max' → logprob: -11.699483871459961
    6. ')
' → logprob: -12.199483871459961
    7. '.index' → logprob: -12.199483871459961
    8. '   ' → logprob: -12.199483871459961
    9. '[:-' → logprob: -12.449483871459961
    10. '[:' → logprob: -12.574483871459961

Token 215: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.975612187583465e-05
    2. ' W' → logprob: -10.750029563903809
    3. '-' → logprob: -12.250029563903809
    4. '-W' → logprob: -12.625029563903809
    5. '   ' → logprob: -16.750030517578125
    6. ' -' → logprob: -17.375030517578125
    7. '	W' → logprob: -18.000030517578125
    8. '```' → logprob: -18.500030517578125
    9. '<W' → logprob: -18.750030517578125
    10. '
' → logprob: -18.750030517578125

Token 216: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00024834630312398076
    2. ')' → logprob: -8.375247955322266
    3. '])
' → logprob: -11.125247955322266
    4. '))' → logprob: -14.125247955322266
    5. ']' → logprob: -14.375247955322266
    6. ' ])' → logprob: -14.375247955322266
    7. ')])' → logprob: -15.000247955322266
    8. ')]' → logprob: -15.375247955322266
    9. ''])' → logprob: -15.500247955322266
    10. '})' → logprob: -15.625247955322266

Token 217: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.012516953982412815
    2. '__' → logprob: -4.387516975402832
    3. ' ' → logprob: -12.512516975402832
    4. ' ' → logprob: -13.137516975402832
    5. '_name' → logprob: -14.262516975402832
    6. 'name' → logprob: -15.387516975402832
    7. ' name' → logprob: -15.512516975402832
    8. 'Name' → logprob: -16.137516021728516
    9. '﻿' → logprob: -16.387516021728516
    10. '<|end|>' → logprob: -16.512516021728516

Token 219: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23231051862239838
    2. 'name' → logprob: -1.7323105335235596
    3. ' __' → logprob: -3.9823105335235596
    4. ' ==' → logprob: -4.6073102951049805
    5. '==' → logprob: -6.4823102951049805
    6. 'if' → logprob: -9.85731029510498
    7. '```' → logprob: -10.10731029510498
    8. ' ' → logprob: -10.35731029510498
    9. '=="' → logprob: -10.73231029510498
    10. '_' → logprob: -11.10731029510498

Token 220: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2200749754119897e-06
    2. '==' → logprob: -13.625001907348633
    3. '__.__' → logprob: -15.375001907348633
    4. '___' → logprob: -15.500001907348633
    5. ' ==' → logprob: -16.500001907348633
    6. '__
' → logprob: -16.625001907348633
    7. '__.' → logprob: -16.875001907348633
    8. '_' → logprob: -17.000001907348633
    9. '__["' → logprob: -17.250001907348633
    10. '____' → logprob: -17.250001907348633

Token 221: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07022950798273087
    2. '==' → logprob: -2.8202295303344727
    3. '__' → logprob: -5.445229530334473
    4. '=="' → logprob: -5.570229530334473
    5. '=='' → logprob: -9.945229530334473
    6. ' =="' → logprob: -10.195229530334473
    7. '=' → logprob: -12.570229530334473
    8. ' ' → logprob: -12.945229530334473
    9. '==
' → logprob: -12.945229530334473
    10. '_' → logprob: -13.570229530334473

Token 222: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011913890019059181
    2. ''' → logprob: -4.511913776397705
    3. '__' → logprob: -7.261913776397705
    4. ' "__' → logprob: -8.761914253234863
    5. ' '__' → logprob: -12.386914253234863
    6. '"name' → logprob: -13.886914253234863
    7. '"user' → logprob: -14.136914253234863
    8. '"class' → logprob: -15.886914253234863
    9. '("__' → logprob: -15.886914253234863
    10. '   ' → logprob: -16.011913299560547

Token 223: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004609911236912012
    2. '__' → logprob: -5.504610061645508
    3. 'name' → logprob: -7.879610061645508
    4. '"' → logprob: -9.254610061645508
    5. ''' → logprob: -9.879610061645508
    6. ' main' → logprob: -13.254610061645508
    7. '_main' → logprob: -13.754610061645508
    8. '   ' → logprob: -14.379610061645508
    9. ''name' → logprob: -14.879610061645508
    10. 'built' → logprob: -15.379610061645508

Token 224: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.13165000081062317
    2. '__' → logprob: -2.131649971008301
    3. '__':
' → logprob: -5.381649971008301
    4. '__:' → logprob: -9.7566499710083
    5. '__.' → logprob: -10.6316499710083
    6. '():
' → logprob: -11.1316499710083
    7. '__["' → logprob: -12.5066499710083
    8. '__.__' → logprob: -13.2566499710083
    9. '__
' → logprob: -13.3816499710083
    10. '_' → logprob: -13.3816499710083

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1729542464017868
    2. ' resolve' → logprob: -2.2979543209075928
    3. 'resolve' → logprob: -3.0479543209075928
    4. '	resolve' → logprob: -4.547954082489014
    5. '(resolve' → logprob: -8.172954559326172
    6. 'solve' → logprob: -11.422954559326172
    7. ' ' → logprob: -11.547954559326172
    8. '  ' → logprob: -12.297954559326172
    9. '.resolve' → logprob: -13.047954559326172
    10. ' solve' → logprob: -13.172954559326172

Token 226: ' resolve' (ID: 14062)
  Prédit: 'resolve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resolve' (adapté à ' resolve') → logprob: -9.088346359931165e-07
    2. ' resolve' → logprob: -14.875000953674316
    3. 'solve' → logprob: -15.250000953674316
    4. '	resolve' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.625
    6. '(resolve' → logprob: -18.375
    7. 'import' → logprob: -19.875
    8. 'decode' → logprob: -21.375
    9. '  ' → logprob: -21.375
    10. '.resolve' → logprob: -22.25

Token 227: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000967083964496851
    2. '()
' → logprob: -7.125967025756836
    3. '(' → logprob: -9.250967025756836
    4. '
' → logprob: -10.500967025756836
    5. '<|end|>' → logprob: -11.000967025756836
    6. '(
' → logprob: -12.000967025756836
    7. '()\' → logprob: -12.500967025756836
    8. '```' → logprob: -12.875967025756836
    9. ')' → logprob: -13.125967025756836
    10. '\n' → logprob: -13.375967025756836


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 225
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 96
Tokens correctement prédits (top 10): 180
Précision stricte (1ère position): 40.44%
Précision adaptée (1ère position): 42.67%
Précision (top 10): 80.00%
================================================================================
