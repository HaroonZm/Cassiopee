================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

sys.setrecursionlimit(10 ** 6)
int1 = lambda x: int(x) - 1
p2D = lambda x: print(*x, sep="\n")
def II(): return int(sys.stdin.readline())
def MI(): return map(int, sys.stdin.readline().split())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
def SI(): return sys.stdin.readline()[:-1]

# http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=DPL_1_G&lang=ja
from collections import deque

def main():
    n, wn = MI()
    dp = [0] * (wn + 1)
    for _ in range(n):
        v, w, m = MI()
        # wのmodごとに１つの数列として扱う
        for md in range(w):
            # スライド最大値をいれておくdeque
            q = deque()
            # インデックスのmodが等しい要素だけ取り出した数列のi番目に対しての処理
            for i in range((wn - md) // w + 1):
                # 更新したい場所の今の値を、先頭まで戻したと仮定した値で持っておく
                val = dp[i * w + md] - v * i
                # deque内は単調減少にしたいのでこれから追加するval以下の値は削除
                while q and q[-1][1] <= val: q.pop()
                # 今の値を追加
                q.append((i, val))
                # dequeの先頭を使って更新
                dp[i * w + md] = q[0][1] + v * i
                # 先頭が次に範囲外に出るようであれば削除
                if q[0][0] == i - m: q.popleft()
    print(dp[-1])

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12579083442687988
    2. 'import' → logprob: -3.25079083442688
    3. '\n' → logprob: -3.50079083442688
    4. '' → logprob: -4.250790596008301
    5. '<|end|>' → logprob: -4.625790596008301
    6. 'print' → logprob: -5.000790596008301
    7. '#' → logprob: -5.125790596008301
    8. '\' → logprob: -6.500790596008301
    9. ',' → logprob: -6.500790596008301
    10. '
' → logprob: -6.625790596008301

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.253090865968261e-06
    2. ' .' → logprob: -13.375009536743164
    3. '.readline' → logprob: -13.875009536743164
    4. '.user' → logprob: -14.000009536743164
    5. '."""' → logprob: -14.125009536743164
    6. '.​' → logprob: -14.375009536743164
    7. '.)' → logprob: -14.375009536743164
    8. '.`' → logprob: -14.375009536743164
    9. '.import' → logprob: -15.125009536743164
    10. ')' → logprob: -15.125009536743164

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06828917562961578
    2. ' _' → logprob: -3.068289279937744
    3. '_trace' → logprob: -5.068289279937744
    4. '_version' → logprob: -5.943289279937744
    5. '_sys' → logprob: -6.318289279937744
    6. '_encoding' → logprob: -6.693289279937744
    7. 'attr' → logprob: -7.193289279937744
    8. 's' → logprob: -7.443289279937744
    9. '```' → logprob: -7.818289279937744
    10. '_soft' → logprob: -7.943289279937744

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.05686049908399582
    2. 'ut' → logprob: -4.306860446929932
    3. 't' → logprob: -4.431860446929932
    4. 'limit' → logprob: -4.681860446929932
    5. 'ursive' → logprob: -5.306860446929932
    6. 'urs' → logprob: -6.181860446929932
    7. 'set' → logprob: -6.306860446929932
    8. 'omp' → logprob: -6.431860446929932
    9. 'ur' → logprob: -6.556860446929932
    10. '_limit' → logprob: -6.931860446929932

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07038117945194244
    2. '_limit' → logprob: -2.6953811645507812
    3. '_depth' → logprob: -8.195381164550781
    4. 'lim' → logprob: -9.445381164550781
    5. 'depth' → logprob: -10.070381164550781
    6. ' limit' → logprob: -11.070381164550781
    7. '_lim' → logprob: -12.445381164550781
    8. '(limit' → logprob: -12.695381164550781
    9. 'al' → logprob: -12.820381164550781
    10. 'error' → logprob: -12.945381164550781

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.537868779967539e-06
    2. '(
' → logprob: -12.625008583068848
    3. ' (' → logprob: -12.875008583068848
    4. '("("' → logprob: -13.750008583068848
    5. '(

' → logprob: -14.500008583068848
    6. '((' → logprob: -15.125008583068848
    7. '('' → logprob: -15.250008583068848
    8. '```' → logprob: -16.12500762939453
    9. '()' → logprob: -16.37500762939453
    10. '(`' → logprob: -17.12500762939453

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4741895794868469
    2. '100' → logprob: -0.9741895794868469
    3. ' ' → logprob: -9.224189758300781
    4. '500' → logprob: -11.849189758300781
    5. '1' → logprob: -12.724189758300781
    6. '300' → logprob: -13.224189758300781
    7. '  ' → logprob: -14.474189758300781
    8. '   ' → logprob: -15.099189758300781
    9. '999' → logprob: -15.099189758300781
    10. '(' → logprob: -15.224189758300781

Token 10: ' **' (ID: 6240)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013852359261363745
    2. '4' → logprob: -7.12638521194458
    3. '6' → logprob: -7.75138521194458
    4. '5' → logprob: -9.751385688781738
    5. '00' → logprob: -10.251385688781738
    6. '000' → logprob: -10.251385688781738
    7. '7' → logprob: -11.626385688781738
    8. '3' → logprob: -12.376385688781738
    9. '1' → logprob: -12.751385688781738
    10. ')' → logprob: -13.251385688781738

Token 11: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004594607278704643
    2. '8' → logprob: -6.254594802856445
    3. '9' → logprob: -6.504594802856445
    4. '6' → logprob: -6.754594802856445
    5. ' ' → logprob: -14.754594802856445
    6. '```' → logprob: -17.504594802856445
    7. ')' → logprob: -17.754594802856445
    8. '5' → logprob: -18.504594802856445
    9. '(' → logprob: -20.129594802856445
    10. '4' → logprob: -20.254594802856445

Token 12: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0074666584841907024
    2. '6' → logprob: -5.007466793060303
    3. '9' → logprob: -7.507466793060303
    4. '8' → logprob: -8.507466316223145
    5. '```' → logprob: -17.00746726989746
    6. ' ' → logprob: -17.75746726989746
    7. '**' → logprob: -20.00746726989746
    8. '(' → logprob: -21.25746726989746
    9. '5' → logprob: -21.38246726989746
    10. '

' → logprob: -21.38246726989746

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ' )' → logprob: -12.875004768371582
    3. ')
' → logprob: -13.750004768371582
    4. '))' → logprob: -14.125004768371582
    5. ')

' → logprob: -16.5000057220459
    6. '0' → logprob: -16.8750057220459
    7. ' ' → logprob: -17.2500057220459
    8. '')' → logprob: -17.6250057220459
    9. '```' → logprob: -17.7500057220459
    10. ')`' → logprob: -18.0000057220459

Token 14: 'int' (ID: 491)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25681522488594055
    2. '\' → logprob: -2.506815195083618
    3. '\n' → logprob: -3.006815195083618
    4. '

' → logprob: -3.381815195083618
    5. '' → logprob: -3.756815195083618
    6. '
' → logprob: -4.006815433502197
    7. '```' → logprob: -5.381815433502197
    8. ')' → logprob: -5.506815433502197
    9. 'def' → logprob: -5.631815433502197
    10. '(' → logprob: -5.881815433502197

Token 15: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06436549872159958
    2. 'er' → logprob: -3.8143653869628906
    3. ' ' → logprob: -4.314365386962891
    4. 'eger' → logprob: -4.939365386962891
    5. '_' → logprob: -5.689365386962891
    6. '32' → logprob: -5.814365386962891
    7. '()' → logprob: -6.189365386962891
    8. '('' → logprob: -6.814365386962891
    9. 'ent' → logprob: -6.939365386962891
    10. ' (' → logprob: -7.189365386962891

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003088871017098427
    2. '_' → logprob: -9.875308990478516
    3. '('' → logprob: -10.000308990478516
    4. '0' → logprob: -10.125308990478516
    5. 'o' → logprob: -10.375308990478516
    6. '(`' → logprob: -10.500308990478516
    7. '32' → logprob: -10.750308990478516
    8. '1' → logprob: -11.625308990478516
    9. '(a' → logprob: -11.750308990478516
    10. 'a' → logprob: -11.875308990478516

Token 17: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5668330192565918
    2. '0' → logprob: -1.9418330192565918
    3. 'int' → logprob: -1.9418330192565918
    4. ' input' → logprob: -2.816833019256592
    5. '(' → logprob: -3.441833019256592
    6. ' int' → logprob: -3.816833019256592
    7. ' ' → logprob: -4.441833019256592
    8. '1' → logprob: -5.191833019256592
    9. '(int' → logprob: -5.191833019256592
    10. '(input' → logprob: -6.066833019256592

Token 18: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.322329044342041
    2. 'x' → logprob: -1.447329044342041
    3. ' ' → logprob: -3.322329044342041
    4. ' n' → logprob: -6.572329044342041
    5. '  ' → logprob: -6.697329044342041
    6. ' s' → logprob: -6.947329044342041
    7. 's' → logprob: -8.447328567504883
    8. ' a' → logprob: -8.572328567504883
    9. 'n' → logprob: -9.322328567504883
    10. '_' → logprob: -10.572328567504883

Token 19: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22665908932685852
    2. ' :' → logprob: -1.6016590595245361
    3. ':x' → logprob: -7.976659297943115
    4. ' x' → logprob: -8.351658821105957
    5. '(' → logprob: -8.476658821105957
    6. ',' → logprob: -9.226658821105957
    7. ' ' → logprob: -9.226658821105957
    8. '_:' → logprob: -10.226658821105957
    9. '(x' → logprob: -10.476658821105957
    10. ':int' → logprob: -10.726658821105957

Token 20: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.577312707901001
    2. 'int' → logprob: -0.827312707901001
    3. ' x' → logprob: -7.077312469482422
    4. 'x' → logprob: -8.327312469482422
    5. ' ' → logprob: -8.327312469482422
    6. '(int' → logprob: -11.077312469482422
    7. '  ' → logprob: -12.327312469482422
    8. '	int' → logprob: -12.702312469482422
    9. ' sys' → logprob: -12.827312469482422
    10. '0' → logprob: -13.077312469482422

Token 21: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.024597851559519768
    2. '(x' → logprob: -3.7745978832244873
    3. '32' → logprob: -7.024597644805908
    4. '('' → logprob: -8.649598121643066
    5. '("("' → logprob: -10.024598121643066
    6. '40' → logprob: -10.149598121643066
    7. '<|end|>' → logprob: -10.649598121643066
    8. '((' → logprob: -10.899598121643066
    9. '()' → logprob: -10.899598121643066
    10. ' (' → logprob: -10.899598121643066

Token 22: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002670575922820717
    2. '(' → logprob: -8.375267028808594
    3. ' )' → logprob: -11.375267028808594
    4. '(x' → logprob: -11.375267028808594
    5. '[' → logprob: -12.250267028808594
    6. '))' → logprob: -13.375267028808594
    7. '),' → logprob: -13.750267028808594
    8. ')x' → logprob: -13.750267028808594
    9. ')return' → logprob: -13.875267028808594
    10. ')>' → logprob: -14.750267028808594

Token 23: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003064699238166213
    2. '(
' → logprob: -6.0030646324157715
    3. '\n' → logprob: -9.12806510925293
    4. '(x' → logprob: -9.37806510925293
    5. ',' → logprob: -9.62806510925293
    6. '
' → logprob: -9.87806510925293
    7. '(

' → logprob: -9.87806510925293
    8. '(\' → logprob: -10.12806510925293
    9. '('\' → logprob: -10.37806510925293
    10. '\' → logprob: -10.37806510925293

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326169371604919
    2. ' ' → logprob: -0.7576169371604919
    3. '32' → logprob: -12.257616996765137
    4. '	' → logprob: -12.882616996765137
    5. '0' → logprob: -13.007616996765137
    6. ' ' → logprob: -13.257616996765137
    7. '2' → logprob: -13.882616996765137
    8. '<|end|>' → logprob: -14.257616996765137
    9. '9' → logprob: -14.882616996765137
    10. '7' → logprob: -15.195116996765137

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026304252445697784
    2. ' ' → logprob: -3.651304244995117
    3. '2' → logprob: -14.151304244995117
    4. '32' → logprob: -14.901304244995117
    5. '4' → logprob: -15.151304244995117
    6. '7' → logprob: -15.276304244995117
    7. '9' → logprob: -15.276304244995117
    8. '0' → logprob: -15.526304244995117
    9. '100' → logprob: -15.963804244995117
    10. '48' → logprob: -16.026304244995117

Token 26: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028650609776377678
    2. '\n' → logprob: -4.653650760650635
    3. '' → logprob: -4.903650760650635
    4. 'newline' → logprob: -5.778650760650635
    5. '
' → logprob: -6.028650760650635
    6. '\' → logprob: -6.403650760650635
    7. '<|end|>' → logprob: -6.653650760650635
    8. '

' → logprob: -6.903650760650635
    9. '```' → logprob: -7.778650760650635
    10. ')' → logprob: -8.778650283813477

Token 27: 'p' (ID: 79)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13525249063968658
    2. '\n' → logprob: -2.5102524757385254
    3. 'n' → logprob: -4.135252475738525
    4. '\' → logprob: -5.385252475738525
    5. 'for' → logprob: -5.385252475738525
    6. '

' → logprob: -5.510252475738525
    7. '' → logprob: -5.510252475738525
    8. 'def' → logprob: -5.510252475738525
    9. 'newline' → logprob: -5.510252475738525
    10. '
' → logprob: -6.760252475738525

Token 28: '2' (ID: 17)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.016662131994962692
    2. ' =' → logprob: -5.016662120819092
    3. '=' → logprob: -5.266662120819092
    4. '=[]' → logprob: -7.266662120819092
    5. ')' → logprob: -7.891662120819092
    6. 'rocess' → logprob: -8.01666259765625
    7. 'rocessing' → logprob: -8.26666259765625
    8. '[]' → logprob: -8.51666259765625
    9. 'ar' → logprob: -8.51666259765625
    10. ',' → logprob: -8.64166259765625

Token 29: 'D' (ID: 35)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.012323742732405663
    2. '**' → logprob: -5.38732385635376
    3. '2' → logprob: -5.76232385635376
    4. 'ower' → logprob: -6.63732385635376
    5. 'r' → logprob: -7.38732385635376
    6. 'o' → logprob: -7.63732385635376
    7. ' =' → logprob: -8.012323379516602
    8. 'w' → logprob: -8.262323379516602
    9. 'owl' → logprob: -8.262323379516602
    10. '0' → logprob: -8.637323379516602

Token 30: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29022216796875
    2. '(' → logprob: -1.91522216796875
    3. ' =' → logprob: -2.91522216796875
    4. ')' → logprob: -3.91522216796875
    5. '=' → logprob: -4.04022216796875
    6. ']' → logprob: -5.41522216796875
    7. '[]' → logprob: -5.79022216796875
    8. '(p' → logprob: -7.04022216796875
    9. ',' → logprob: -7.29022216796875
    10. '_' → logprob: -7.29022216796875

Token 31: ' lambda' (ID: 27871)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6405938863754272
    2. '[' → logprob: -1.0155938863754272
    3. ' []' → logprob: -3.390594005584717
    4. 'lambda' → logprob: -3.390594005584717
    5. ' [' → logprob: -3.765594005584717
    6. ' lambda' → logprob: -5.140594005584717
    7. '[][]' → logprob: -5.765594005584717
    8. '(lambda' → logprob: -6.015594005584717
    9. ' [[]' → logprob: -6.140594005584717
    10. '[int' → logprob: -6.265594005584717

Token 32: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.9781853556632996
    2. 'lambda' → logprob: -1.7281854152679443
    3. ' x' → logprob: -1.9781854152679443
    4. 'list' → logprob: -2.1031854152679443
    5. ' list' → logprob: -2.2281854152679443
    6. 'x' → logprob: -3.2281854152679443
    7. '(lambda' → logprob: -4.353185176849365
    8. 'pow' → logprob: -4.853185176849365
    9. 'int' → logprob: -5.603185176849365
    10. ' p' → logprob: -5.603185176849365

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01497531309723854
    2. ' :' → logprob: -4.264975547790527
    3. '[' → logprob: -7.389975547790527
    4. ',' → logprob: -9.389975547790527
    5. ':x' → logprob: -10.014975547790527
    6. ':[' → logprob: -11.014975547790527
    7. '[x' → logprob: -12.264975547790527
    8. '[:]' → logprob: -12.389975547790527
    9. '_:' → logprob: -12.514975547790527
    10. '[:' → logprob: -12.514975547790527

Token 34: ' print' (ID: 2123)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.4021259844303131
    2. '[' → logprob: -2.4021260738372803
    3. 'list' → logprob: -2.4021260738372803
    4. ' [' → logprob: -2.6521260738372803
    5. '[int' → logprob: -3.2771260738372803
    6. '[[' → logprob: -4.152125835418701
    7. '[list' → logprob: -4.277125835418701
    8. ' list' → logprob: -5.277125835418701
    9. 'x' → logprob: -6.277125835418701
    10. 'print' → logprob: -6.777125835418701

Token 35: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47394001483917236
    2. '(*' → logprob: -1.0989400148391724
    3. '(x' → logprob: -3.223939895629883
    4. '((' → logprob: -5.973939895629883
    5. '('' → logprob: -6.848939895629883
    6. '(len' → logprob: -8.473939895629883
    7. '()' → logprob: -8.473939895629883
    8. '(*(' → logprob: -9.723939895629883
    9. '(tuple' → logprob: -9.848939895629883
    10. '([' → logprob: -10.098939895629883

Token 36: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00047368707600980997
    2. '[' → logprob: -7.875473499298096
    3. ' x' → logprob: -10.250473976135254
    4. 'map' → logprob: -10.875473976135254
    5. '[x' → logprob: -11.500473976135254
    6. ')' → logprob: -11.500473976135254
    7. '(x' → logprob: -11.625473976135254
    8. 'list' → logprob: -12.625473976135254
    9. '['' → logprob: -13.125473976135254
    10. '[(' → logprob: -13.250473976135254

Token 37: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5822400857578032e-05
    2. '))' → logprob: -11.875025749206543
    3. ')
' → logprob: -12.000025749206543
    4. '[' → logprob: -12.500025749206543
    5. ' )' → logprob: -12.500025749206543
    6. ',' → logprob: -13.625025749206543
    7. ')`' → logprob: -14.375025749206543
    8. ',)' → logprob: -14.875025749206543
    9. '())' → logprob: -14.875025749206543
    10. '()' → logprob: -14.875025749206543

Token 38: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.06426791101694107
    2. ')' → logprob: -3.189267873764038
    3. ' sep' → logprob: -3.939267873764038
    4. 'se' → logprob: -7.189268112182617
    5. 'end' → logprob: -8.314268112182617
    6. ' ' → logprob: -8.314268112182617
    7. '  ' → logprob: -9.314268112182617
    8. '*' → logprob: -9.814268112182617
    9. ' )' → logprob: -9.939268112182617
    10. '2' → logprob: -10.189268112182617

Token 39: '="\' (ID: 129534)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18025849759578705
    2. '='' → logprob: -1.8052585124969482
    3. '='\' → logprob: -8.180258750915527
    4. ''' → logprob: -8.805258750915527
    5. '="' → logprob: -10.430258750915527
    6. '=''' → logprob: -11.055258750915527
    7. '=

' → logprob: -11.555258750915527
    8. '=\' → logprob: -11.805258750915527
    9. '=',' → logprob: -12.305258750915527
    10. '=
' → logprob: -12.305258750915527

Token 40: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006805602926760912
    2. ' ' → logprob: -5.006805419921875
    3. ' n' → logprob: -9.631805419921875
    4. 's' → logprob: -11.131805419921875
    5. 't' → logprob: -12.506805419921875
    6. ' \' → logprob: -13.631805419921875
    7. ' 

' → logprob: -13.631805419921875
    8. 'u' → logprob: -13.881805419921875
    9. ' 
' → logprob: -14.256805419921875
    10. ' )' → logprob: -14.756805419921875

Token 41: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0024283365346491337
    2. ')' → logprob: -6.1274285316467285
    3. ')")' → logprob: -8.37742805480957
    4. '"' → logprob: -12.25242805480957
    5. ')"' → logprob: -12.62742805480957
    6. '")
' → logprob: -13.12742805480957
    7. ' ")' → logprob: -13.50242805480957
    8. ' )' → logprob: -14.37742805480957
    9. '`)' → logprob: -15.00242805480957
    10. '}")' → logprob: -15.37742805480957

Token 42: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6048324108123779
    2. '\n' → logprob: -1.354832410812378
    3. 'n' → logprob: -1.979832410812378
    4. '

' → logprob: -3.354832410812378
    5. '<|end|>' → logprob: -4.854832649230957
    6. 'def' → logprob: -4.979832649230957
    7. 'for' → logprob: -6.354832649230957
    8. '\' → logprob: -6.604832649230957
    9. '```' → logprob: -7.229832649230957
    10. '#' → logprob: -7.479832649230957

Token 43: ' II' (ID: 9839)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2659510374069214
    2. ' dfs' → logprob: -1.6409510374069214
    3. ' solve' → logprob: -3.515951156616211
    4. ' factorial' → logprob: -5.140951156616211
    5. ' factor' → logprob: -6.515951156616211
    6. ' process' → logprob: -7.890951156616211
    7. ' input' → logprob: -7.890951156616211
    8. ' bfs' → logprob: -8.640951156616211
    9. ' f' → logprob: -8.765951156616211
    10. ' ' → logprob: -8.890951156616211

Token 44: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00464657275006175
    2. '()' → logprob: -5.3796467781066895
    3. '():
' → logprob: -11.629646301269531
    4. ' ():' → logprob: -11.879646301269531
    5. 'n' → logprob: -12.629646301269531
    6. '(' → logprob: -13.129646301269531
    7. '()]' → logprob: -13.754646301269531
    8. '（）' → logprob: -14.629646301269531
    9. ' ()' → logprob: -14.629646301269531
    10. '();' → logprob: -14.879646301269531

Token 45: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07073988020420074
    2. 'return' → logprob: -3.070739984512329
    3. '   ' → logprob: -3.945739984512329
    4. ' input' → logprob: -7.07073974609375
    5. ' int' → logprob: -7.19573974609375
    6. 'int' → logprob: -7.69573974609375
    7. 'input' → logprob: -8.82073974609375
    8. '    ' → logprob: -8.82073974609375
    9. ' ' → logprob: -9.07073974609375
    10. '	return' → logprob: -10.69573974609375

Token 46: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1687850952148438
    2. 'list' → logprob: -1.2937850952148438
    3. ' list' → logprob: -2.0437850952148438
    4. 'map' → logprob: -2.2937850952148438
    5. ' map' → logprob: -2.4187850952148438
    6. 'input' → logprob: -2.9187850952148438
    7. ' int' → logprob: -3.7937850952148438
    8. ' input' → logprob: -4.293785095214844
    9. 'sys' → logprob: -5.918785095214844
    10. ' sys' → logprob: -6.293785095214844

Token 47: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1477019041776657
    2. '(' → logprob: -2.1477019786834717
    3. '(sys' → logprob: -3.8977019786834717
    4. '()' → logprob: -9.14770221710205
    5. '(
' → logprob: -9.77270221710205
    6. 'input' → logprob: -10.14770221710205
    7. '(next' → logprob: -11.27270221710205
    8. '((' → logprob: -11.77270221710205
    9. '(

' → logprob: -11.89770221710205
    10. '(I' → logprob: -12.02270221710205

Token 48: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.7755875129951164e-05
    2. '.' → logprob: -10.25004768371582
    3. '.readline' → logprob: -11.62504768371582
    4. '.argv' → logprob: -13.37504768371582
    5. 'stdin' → logprob: -13.62504768371582
    6. '(stdin' → logprob: -15.25004768371582
    7. ' stdin' → logprob: -15.62504768371582
    8. '.stdout' → logprob: -16.50004768371582
    9. '.std' → logprob: -17.75004768371582
    10. ' .' → logprob: -18.00004768371582

Token 49: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -11.875008583068848
    3. ' readline' → logprob: -13.750008583068848
    4. '.read' → logprob: -15.750008583068848
    5. ' .' → logprob: -19.12500762939453
    6. '.stdin' → logprob: -19.75000762939453
    7. '.buffer' → logprob: -19.87500762939453
    8. '.Read' → logprob: -19.87500762939453
    9. '().' → logprob: -20.00000762939453
    10. ').' → logprob: -20.12500762939453

Token 50: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4748179316520691
    2. '().' → logprob: -0.9748179316520691
    3. '()' → logprob: -7.224817752838135
    4. ' ())' → logprob: -12.224818229675293
    5. '(' → logprob: -12.724818229675293
    6. '())
' → logprob: -13.349818229675293
    7. '();)' → logprob: -14.099818229675293
    8. ')' → logprob: -14.349818229675293
    9. '()[' → logprob: -14.974818229675293
    10. '()]' → logprob: -15.224818229675293

Token 51: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15571804344654083
    2. '
' → logprob: -2.0307180881500244
    3. '<|end|>' → logprob: -5.155717849731445
    4. '\n' → logprob: -5.780717849731445
    5. '\' → logprob: -7.155717849731445
    6. 'n' → logprob: -7.655717849731445
    7. ' def' → logprob: -7.780717849731445
    8. 'd' → logprob: -8.030717849731445
    9. '<|end|>' → logprob: -8.030717849731445
    10. '

' → logprob: -8.530717849731445

Token 52: ' MI' (ID: 32682)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.5518658757209778
    2. ' MI' → logprob: -1.176865816116333
    3. 'LI' → logprob: -2.676865816116333
    4. 'SI' → logprob: -4.176866054534912
    5. 'S' → logprob: -4.426866054534912
    6. ' LI' → logprob: -5.301866054534912
    7. ' SI' → logprob: -5.801866054534912
    8. 'MIS' → logprob: -6.051866054534912
    9. ' MIS' → logprob: -6.176866054534912
    10. 'LS' → logprob: -6.176866054534912

Token 53: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.060078319162130356
    2. 'N' → logprob: -3.5600783824920654
    3. '()' → logprob: -4.185078144073486
    4. 'S' → logprob: -4.685078144073486
    5. 'A' → logprob: -6.810078144073486
    6. 'ST' → logprob: -6.935078144073486
    7. 'C' → logprob: -7.560078144073486
    8. '():
' → logprob: -8.060078620910645
    9. 'n' → logprob: -8.185078620910645
    10. 'D' → logprob: -8.185078620910645

Token 54: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9311274290084839
    2. ' map' → logprob: -1.0561274290084839
    3. 'list' → logprob: -1.9311274290084839
    4. 'map' → logprob: -2.1811275482177734
    5. ' tuple' → logprob: -9.931127548217773
    6. '[' → logprob: -10.556127548217773
    7. 'return' → logprob: -10.806127548217773
    8. 'tuple' → logprob: -10.806127548217773
    9. ' return' → logprob: -11.056127548217773
    10. ' [' → logprob: -11.306127548217773

Token 55: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.12319038808345795
    2. ' map' → logprob: -2.748190402984619
    3. 'list' → logprob: -2.998190402984619
    4. ' list' → logprob: -6.248190402984619
    5. '[' → logprob: -10.748189926147461
    6. '	map' → logprob: -11.498189926147461
    7. '(map' → logprob: -12.123189926147461
    8. 'sys' → logprob: -12.873189926147461
    9. 'tuple' → logprob: -13.373189926147461
    10. '[list' → logprob: -13.623189926147461

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010773492977023125
    2. 'int' → logprob: -7.001077175140381
    3. '(' → logprob: -8.751077651977539
    4. '<int' → logprob: -12.751077651977539
    5. ' int' → logprob: -13.376077651977539
    6. '[int' → logprob: -13.876077651977539
    7. ' (' → logprob: -14.126077651977539
    8. '=int' → logprob: -14.626077651977539
    9. '(lambda' → logprob: -14.751077651977539
    10. '	int' → logprob: -15.251077651977539

Token 57: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.0003009041247423738
    2. ' (' → logprob: -8.625301361083984
    3. 'sys' → logprob: -9.375301361083984
    4. '=sys' → logprob: -11.000301361083984
    5. ',' → logprob: -11.625301361083984
    6. '(' → logprob: -12.500301361083984
    7. ' sys' → logprob: -12.500301361083984
    8. '	sys' → logprob: -13.750301361083984
    9. ',(' → logprob: -14.125301361083984
    10. ')(' → logprob: -14.250301361083984

Token 58: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.313273549079895
    2. ' sys' → logprob: -1.313273549079895
    3. '(sys' → logprob: -11.938273429870605
    4. '	sys' → logprob: -12.563273429870605
    5. ' ' → logprob: -14.188273429870605
    6. '=sys' → logprob: -14.313273429870605
    7. ')' → logprob: -15.813273429870605
    8. '.sys' → logprob: -15.938273429870605
    9. '  ' → logprob: -16.813274383544922
    10. '/sys' → logprob: -16.938274383544922

Token 59: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -9.877503907773644e-05
    2. 'stdin' → logprob: -9.250099182128906
    3. '.' → logprob: -13.250099182128906
    4. '.stdout' → logprob: -14.750099182128906
    5. '.std' → logprob: -14.875099182128906
    6. '.readline' → logprob: -16.250099182128906
    7. ' stdin' → logprob: -17.000099182128906
    8. '(stdin' → logprob: -17.750099182128906
    9. '.argv' → logprob: -18.250099182128906
    10. '.stderr' → logprob: -18.875099182128906

Token 60: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00026419671485200524
    2. '().' → logprob: -8.375264167785645
    3. '.' → logprob: -10.500264167785645
    4. '.stdin' → logprob: -13.000264167785645
    5. 'stdin' → logprob: -13.375264167785645
    6. ' .' → logprob: -14.000264167785645
    7. ' readline' → logprob: -14.000264167785645
    8. 'read' → logprob: -15.875264167785645
    9. '()' → logprob: -15.875264167785645
    10. '.readlines' → logprob: -16.37526512145996

Token 61: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.003175456076860428
    2. '())' → logprob: -5.878175258636475
    3. '()' → logprob: -8.628175735473633
    4. '.readline' → logprob: -8.628175735473633
    5. ')' → logprob: -12.253175735473633
    6. ' ().' → logprob: -12.378175735473633
    7. 'line' → logprob: -13.878175735473633
    8. ' ())' → logprob: -13.878175735473633
    9. '()))' → logprob: -14.878175735473633
    10. '.' → logprob: -15.253175735473633

Token 62: 'split' (ID: 13627)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0020476016215980053
    2. 'rstrip' → logprob: -6.752047538757324
    3. 'strip' → logprob: -7.377047538757324
    4. 'split' → logprob: -8.752047538757324
    5. '.readline' → logprob: -10.002047538757324
    6. ' readline' → logprob: -10.127047538757324
    7. ')' → logprob: -12.002047538757324
    8. ' ' → logprob: -14.002047538757324
    9. 'readonly' → logprob: -15.502047538757324
    10. 'r' → logprob: -15.627047538757324

Token 63: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0029545240104198456
    2. '()' → logprob: -6.377954483032227
    3. ')' → logprob: -6.752954483032227
    4. '())
' → logprob: -9.877954483032227
    5. '()))' → logprob: -10.627954483032227
    6. ' ())' → logprob: -12.377954483032227
    7. '))' → logprob: -13.002954483032227
    8. '();)' → logprob: -14.502954483032227
    9. '(' → logprob: -14.752954483032227
    10. '()
' → logprob: -14.877954483032227

Token 64: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03159467875957489
    2. '\' → logprob: -4.156594753265381
    3. 'd' → logprob: -5.531594753265381
    4. 'n' → logprob: -5.531594753265381
    5. '\n' → logprob: -6.031594753265381
    6. '```' → logprob: -6.406594753265381
    7. 'class' → logprob: -7.156594753265381
    8. 's' → logprob: -7.656594753265381
    9. '#' → logprob: -8.406594276428223
    10. 'data' → logprob: -8.531594276428223

Token 65: ' LI' (ID: 14875)
  Prédit: 'LI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.004661403596401215
    2. ' LI' → logprob: -6.254661560058594
    3. 'LS' → logprob: -6.754661560058594
    4. 'L' → logprob: -7.129661560058594
    5. 'SI' → logprob: -7.629661560058594
    6. 'input' → logprob: -9.504661560058594
    7. 'I' → logprob: -10.004661560058594
    8. ' LS' → logprob: -10.129661560058594
    9. ' L' → logprob: -10.879661560058594
    10. 'li' → logprob: -11.004661560058594

Token 66: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.039215948432683945
    2. '()' → logprob: -3.2892160415649414
    3. 'ist' → logprob: -8.289216041564941
    4. 'n' → logprob: -8.914216041564941
    5. 'st' → logprob: -9.039216041564941
    6. 'ST' → logprob: -9.164216041564941
    7. '[]' → logprob: -9.289216041564941
    8. ' ()' → logprob: -9.414216041564941
    9. 'N' → logprob: -9.539216041564941
    10. 'ine' → logprob: -9.539216041564941

Token 67: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.18558864295482635
    2. ' list' → logprob: -2.1855885982513428
    3. 'return' → logprob: -2.9355885982513428
    4. 'list' → logprob: -5.560588836669922
    5. ' ' → logprob: -11.310588836669922
    6. ' lambda' → logprob: -12.560588836669922
    7. '    ' → logprob: -13.060588836669922
    8. ' sys' → logprob: -13.310588836669922
    9. 'lambda' → logprob: -13.435588836669922
    10. '   ' → logprob: -13.685588836669922

Token 68: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06202325597405434
    2. ' list' → logprob: -2.812023162841797
    3. '[list' → logprob: -10.062023162841797
    4. 'sys' → logprob: -11.687023162841797
    5. ' sys' → logprob: -13.562023162841797
    6. '[' → logprob: -13.812023162841797
    7. '	list' → logprob: -14.437023162841797
    8. ' [' → logprob: -14.562023162841797
    9. '(list' → logprob: -15.687023162841797
    10. 'ist' → logprob: -15.687023162841797

Token 69: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002164890756830573
    2. '(int' → logprob: -6.377164840698242
    3. '(' → logprob: -7.752164840698242
    4. '(sys' → logprob: -10.877164840698242
    5. 'map' → logprob: -11.752164840698242
    6. ' (' → logprob: -13.002164840698242
    7. '_map' → logprob: -14.377164840698242
    8. '[int' → logprob: -14.502164840698242
    9. '(list' → logprob: -14.627164840698242
    10. '(
' → logprob: -14.877164840698242

Token 70: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015493794344365597
    2. 'int' → logprob: -6.626549243927002
    3. ',int' → logprob: -9.37654972076416
    4. '=int' → logprob: -9.62654972076416
    5. '<int' → logprob: -10.50154972076416
    6. '[int' → logprob: -10.87654972076416
    7. ']int' → logprob: -11.00154972076416
    8. ':int' → logprob: -12.37654972076416
    9. ' int' → logprob: -13.12654972076416
    10. ' (' → logprob: -13.87654972076416

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010227719321846962
    2. '(sys' → logprob: -4.635227680206299
    3. ' ,' → logprob: -8.010228157043457
    4. 'sys' → logprob: -9.635228157043457
    5. ' sys' → logprob: -11.010228157043457
    6. ',int' → logprob: -11.010228157043457
    7. '=sys' → logprob: -11.010228157043457
    8. ',s' → logprob: -12.010228157043457
    9. ',System' → logprob: -12.010228157043457
    10. ',(' → logprob: -12.260228157043457

Token 72: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.06197698414325714
    2. ' sys' → logprob: -2.811976909637451
    3. '(sys' → logprob: -11.93697738647461
    4. '	sys' → logprob: -13.68697738647461
    5. '=sys' → logprob: -13.93697738647461
    6. ')' → logprob: -14.56197738647461
    7. 's' → logprob: -16.18697738647461
    8. ' ' → logprob: -16.56197738647461
    9. '.sys' → logprob: -16.81197738647461
    10. '/sys' → logprob: -17.06197738647461

Token 73: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003872974484693259
    2. '.' → logprob: -8.125387191772461
    3. '.readline' → logprob: -9.625387191772461
    4. '(stdin' → logprob: -11.625387191772461
    5. '.stdout' → logprob: -11.875387191772461
    6. 'stdin' → logprob: -12.000387191772461
    7. ' .' → logprob: -13.875387191772461
    8. '.stderr' → logprob: -14.875387191772461
    9. '```' → logprob: -15.250387191772461
    10. '=sys' → logprob: -15.500387191772461

Token 74: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06204723194241524
    2. '.readline' → logprob: -2.812047243118286
    3. '.' → logprob: -10.687047004699707
    4. ')' → logprob: -10.812047004699707
    5. '()' → logprob: -11.187047004699707
    6. '.readlines' → logprob: -11.687047004699707
    7. '())' → logprob: -12.437047004699707
    8. '.read' → logprob: -12.562047004699707
    9. ').' → logprob: -13.187047004699707
    10. '.stdin' → logprob: -13.437047004699707

Token 75: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.537868779967539e-06
    2. '()' → logprob: -12.375008583068848
    3. ' ().' → logprob: -13.750008583068848
    4. '()))' → logprob: -13.875008583068848
    5. ')' → logprob: -13.875008583068848
    6. '())' → logprob: -14.250008583068848
    7. '))' → logprob: -15.625008583068848
    8. '.' → logprob: -15.875008583068848
    9. '()));' → logprob: -16.12500762939453
    10. '(' → logprob: -16.75000762939453

Token 76: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.017452698200941086
    2. 'read' → logprob: -4.517452716827393
    3. 'strip' → logprob: -5.267452716827393
    4. 'rstrip' → logprob: -6.767452716827393
    5. ')' → logprob: -9.642452239990234
    6. ' readline' → logprob: -12.142452239990234
    7. ' split' → logprob: -13.267452239990234
    8. '.readline' → logprob: -13.267452239990234
    9. 'spl' → logprob: -13.892452239990234
    10. '(split' → logprob: -14.642452239990234

Token 77: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2438221275806427
    2. '()))' → logprob: -1.9938220977783203
    3. ')' → logprob: -2.7438220977783203
    4. '())' → logprob: -4.49382209777832
    5. '()' → logprob: -5.36882209777832
    6. '(' → logprob: -11.36882209777832
    7. ')))' → logprob: -11.74382209777832
    8. ' ))' → logprob: -12.11882209777832
    9. '()))
' → logprob: -12.24382209777832
    10. '))
' → logprob: -13.11882209777832

Token 78: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9711177945137024
    2. '\n' → logprob: -1.3461177349090576
    3. 'd' → logprob: -1.8461177349090576
    4. 'def' → logprob: -2.4711177349090576
    5. '\' → logprob: -2.7211177349090576
    6. '
' → logprob: -4.096117973327637
    7. '' → logprob: -4.596117973327637
    8. '#' → logprob: -5.096117973327637
    9. '```' → logprob: -6.096117973327637
    10. ' ' → logprob: -6.221117973327637

Token 79: ' L' (ID: 451)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.8117077350616455
    2. 'S' → logprob: -1.5617077350616455
    3. ' input' → logprob: -1.6867077350616455
    4. 'input' → logprob: -3.4367077350616455
    5. ' SI' → logprob: -3.5617077350616455
    6. ' main' → logprob: -3.9367077350616455
    7. 'SI' → logprob: -4.186707496643066
    8. ' ' → logprob: -4.311707496643066
    9. 's' → logprob: -4.936707496643066
    10. ' MI' → logprob: -4.936707496643066

Token 80: 'LI' (ID: 14313)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -1.2948405128554441e-05
    2. '```' → logprob: -12.25001335144043
    3. ' I' → logprob: -13.00001335144043
    4. '1' → logprob: -13.75001335144043
    5. 'LI' → logprob: -14.62501335144043
    6. '2' → logprob: -14.87501335144043
    7. 'ambda' → logprob: -15.12501335144043
    8. 'S' → logprob: -15.12501335144043
    9. 'Is' → logprob: -15.43751335144043
    10. '#' → logprob: -15.43751335144043

Token 81: '(rows' (ID: 69648)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0025085974484682083
    2. '()' → logprob: -6.002508640289307
    3. '()>' → logprob: -11.252508163452148
    4. ' ():' → logprob: -12.252508163452148
    5. '(' → logprob: -12.627508163452148
    6. '():
' → logprob: -12.877508163452148
    7. '()">' → logprob: -13.502508163452148
    8. '()[' → logprob: -13.877508163452148
    9. ' ()' → logprob: -14.127508163452148
    10. '()*' → logprob: -14.127508163452148

Token 82: '_number' (ID: 11733)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01696326769888401
    2. ',' → logprob: -4.141963481903076
    3. ')' → logprob: -7.641963481903076
    4. ' ):' → logprob: -8.516963005065918
    5. ',n' → logprob: -8.516963005065918
    6. ',num' → logprob: -11.766963005065918
    7. ' ,' → logprob: -11.891963005065918
    8. ' ' → logprob: -12.516963005065918
    9. '):
' → logprob: -12.516963005065918
    10. ',int' → logprob: -12.516963005065918

Token 83: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009140860638581216
    2. ',' → logprob: -7.625914096832275
    3. ')' → logprob: -7.875914096832275
    4. ' ):' → logprob: -10.625913619995117
    5. ':' → logprob: -11.125913619995117
    6. '=' → logprob: -12.625913619995117
    7. '):
' → logprob: -13.875913619995117
    8. ' ' → logprob: -14.000913619995117
    9. ',n' → logprob: -14.750913619995117
    10. '   ' → logprob: -15.125913619995117

Token 84: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10211867839097977
    2. ' ' → logprob: -2.727118730545044
    3. '   ' → logprob: -3.602118730545044
    4. '    ' → logprob: -6.852118492126465
    5. 'return' → logprob: -6.852118492126465
    6. '	return' → logprob: -6.977118492126465
    7. ' ' → logprob: -7.602118492126465
    8. '<|end|>' → logprob: -8.477118492126465
    9. ':return' → logprob: -8.727118492126465
    10. ' []' → logprob: -9.102118492126465

Token 85: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07974783331155777
    2. '[list' → logprob: -2.5797479152679443
    3. ' [' → logprob: -7.329747676849365
    4. '[List' → logprob: -8.704748153686523
    5. '[int' → logprob: -10.579748153686523
    6. '[line' → logprob: -12.829748153686523
    7. '[str' → logprob: -13.579748153686523
    8. '[p' → logprob: -13.579748153686523
    9. '[array' → logprob: -14.079748153686523
    10. '[input' → logprob: -14.204748153686523

Token 86: 'LI' (ID: 14313)
  Prédit: 'LI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LI' → logprob: -0.01431534718722105
    2. 'list' → logprob: -4.264315128326416
    3. ' LI' → logprob: -9.514315605163574
    4. 'LL' → logprob: -10.014315605163574
    5. ' list' → logprob: -10.514315605163574
    6. 'li' → logprob: -12.639315605163574
    7. '[' → logprob: -14.014315605163574
    8. 'List' → logprob: -14.764315605163574
    9. 'LIST' → logprob: -15.014315605163574
    10. '[list' → logprob: -15.514315605163574

Token 87: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.3080716346157715e-05
    2. '()]' → logprob: -10.750022888183594
    3. '()
' → logprob: -14.625022888183594
    4. ' ()' → logprob: -14.750022888183594
    5. '(' → logprob: -15.250022888183594
    6. '())' → logprob: -15.375022888183594
    7. '（）' → logprob: -16.625022888183594
    8. ')' → logprob: -16.750022888183594
    9. 'for' → logprob: -17.625022888183594
    10. '()

' → logprob: -17.875022888183594

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6513661742210388
    2. 'for' → logprob: -0.7763661742210388
    3. '()' → logprob: -4.276366233825684
    4. ')' → logprob: -5.401366233825684
    5. ' ' → logprob: -9.276366233825684
    6. '	for' → logprob: -10.151366233825684
    7. ']' → logprob: -10.276366233825684
    8. '```' → logprob: -12.276366233825684
    9. '()]' → logprob: -12.776366233825684
    10. '  ' → logprob: -13.151366233825684

Token 89: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0028108209371566772
    2. ' _' → logprob: -5.877810955047607
    3. ' ' → logprob: -12.87781047821045
    4. ' ' → logprob: -13.37781047821045
    5. '_i' → logprob: -14.00281047821045
    6. '_range' → logprob: -14.87781047821045
    7. ' in' → logprob: -15.87781047821045
    8. ' i' → logprob: -16.002811431884766
    9. 'i' → logprob: -16.627811431884766
    10. '<|end|>' → logprob: -16.627811431884766

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10127437114715576
    2. 'in' → logprob: -2.3512744903564453
    3. ' ' → logprob: -6.976274490356445
    4. 'range' → logprob: -9.351274490356445
    5. ' _' → logprob: -10.601274490356445
    6. '_' → logprob: -11.726274490356445
    7. '<|end|>' → logprob: -12.101274490356445
    8. ' range' → logprob: -12.726274490356445
    9. '  ' → logprob: -13.226274490356445
    10. '	in' → logprob: -13.476274490356445

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00672448705881834
    2. ' range' → logprob: -5.0067243576049805
    3. '	range' → logprob: -12.13172435760498
    4. '_' → logprob: -12.75672435760498
    5. ' ' → logprob: -15.00672435760498
    6. '(range' → logprob: -15.63172435760498
    7. '_range' → logprob: -15.75672435760498
    8. 'rang' → logprob: -16.631725311279297
    9. '  ' → logprob: -16.881725311279297
    10. 'ran' → logprob: -17.506725311279297

Token 92: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -2.1054253011243418e-05
    2. '(' → logprob: -10.875020980834961
    3. 'rows' → logprob: -13.250020980834961
    4. ' (' → logprob: -15.750020980834961
    5. '	rows' → logprob: -16.75002098083496
    6. '(columns' → logprob: -17.37502098083496
    7. ' rows' → logprob: -17.75002098083496
    8. '(row' → logprob: -18.50002098083496
    9. '(
' → logprob: -19.25002098083496
    10. '(lines' → logprob: -19.62502098083496

Token 93: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -6.897412822581828e-05
    2. 'number' → logprob: -10.000068664550781
    3. '_' → logprob: -11.125068664550781
    4. ')' → logprob: -12.750068664550781
    5. '_n' → logprob: -13.625068664550781
    6. '_rows' → logprob: -14.000068664550781
    7. 'umber' → logprob: -14.000068664550781
    8. 's' → logprob: -14.250068664550781
    9. '_)' → logprob: -14.250068664550781
    10. '_NUMBER' → logprob: -14.875068664550781

Token 94: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018214678391814232
    2. ')' → logprob: -4.018214702606201
    3. ']' → logprob: -9.768214225769043
    4. ')])' → logprob: -12.518214225769043
    5. '))' → logprob: -13.893214225769043
    6. ')]
' → logprob: -14.018214225769043
    7. '])' → logprob: -14.518214225769043
    8. ')],' → logprob: -14.643214225769043
    9. ')
' → logprob: -14.893214225769043
    10. ' )' → logprob: -15.018214225769043

Token 95: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7433202862739563
    2. '
' → logprob: -1.6183202266693115
    3. 'n' → logprob: -1.7433202266693115
    4. '' → logprob: -3.6183202266693115
    5. 'd' → logprob: -3.7433202266693115
    6. '\' → logprob: -3.8683202266693115
    7. '<|end|>' → logprob: -3.8683202266693115
    8. 'def' → logprob: -4.493320465087891
    9. ' ' → logprob: -4.618320465087891
    10. '10' → logprob: -5.368320465087891

Token 96: ' SI' (ID: 41958)
  Prédit: 'SI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SI' → logprob: -1.1589539051055908
    2. ' SI' → logprob: -1.2839539051055908
    3. ' main' → logprob: -1.9089539051055908
    4. ' S' → logprob: -2.408953905105591
    5. 'S' → logprob: -3.158953905105591
    6. ' MI' → logprob: -3.408953905105591
    7. 'MI' → logprob: -4.408953666687012
    8. 'main' → logprob: -4.533953666687012
    9. ' sys' → logprob: -4.783953666687012
    10. ' s' → logprob: -5.283953666687012

Token 97: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.7755875129951164e-05
    2. '()' → logprob: -10.12504768371582
    3. ' ():' → logprob: -11.87504768371582
    4. '():
' → logprob: -14.25004768371582
    5. '()>' → logprob: -16.75004768371582
    6. ' ()' → logprob: -17.87504768371582
    7. '():

' → logprob: -17.87504768371582
    8. '():
' → logprob: -19.12504768371582
    9. '()">' → logprob: -19.25004768371582
    10. '().' → logprob: -19.75004768371582

Token 98: ' return' (ID: 622)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.09055595844984055
    2. 'sys' → logprob: -2.4655559062957764
    3. ' return' → logprob: -6.7155561447143555
    4. 'return' → logprob: -8.215556144714355
    5. ' input' → logprob: -10.090556144714355
    6. 'input' → logprob: -10.590556144714355
    7. '=sys' → logprob: -10.715556144714355
    8. ' ' → logprob: -11.590556144714355
    9. '	sys' → logprob: -11.590556144714355
    10. '(sys' → logprob: -11.590556144714355

Token 99: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759536027908325
    2. 'sys' → logprob: -0.8259536027908325
    3. ' input' → logprob: -11.950953483581543
    4. 'input' → logprob: -12.200953483581543
    5. '	sys' → logprob: -13.200953483581543
    6. 'str' → logprob: -15.075953483581543
    7. ' ' → logprob: -15.325953483581543
    8. '(sys' → logprob: -15.575953483581543
    9. '=sys' → logprob: -15.825953483581543
    10. ' ' → logprob: -17.82595443725586

Token 100: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00028398085851222277
    2. 'stdin' → logprob: -9.250284194946289
    3. '.stdout' → logprob: -9.375284194946289
    4. '<|end|>' → logprob: -9.625284194946289
    5. '.readline' → logprob: -11.250284194946289
    6. '.' → logprob: -11.375284194946289
    7. '.std' → logprob: -12.625284194946289
    8. '.argv' → logprob: -12.875284194946289
    9. '(stdin' → logprob: -13.250284194946289
    10. '.st' → logprob: -13.500284194946289

Token 101: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.2520517408847809
    2. 'read' → logprob: -1.5020517110824585
    3. ' readline' → logprob: -9.75205135345459
    4. 'buffer' → logprob: -10.87705135345459
    5. '_read' → logprob: -11.37705135345459
    6. 'stdin' → logprob: -11.50205135345459
    7. '.read' → logprob: -11.62705135345459
    8. 'readonly' → logprob: -12.25205135345459
    9. 'reader' → logprob: -12.62705135345459
    10. 'rea' → logprob: -12.75205135345459

Token 102: '()' (ID: 416)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00103352265432477
    2. '()' → logprob: -6.876033306121826
    3. ' ().' → logprob: -15.751033782958984
    4. '()
' → logprob: -15.876033782958984
    5. '()).' → logprob: -16.626033782958984
    6. '().__' → logprob: -16.876033782958984
    7. '()

' → logprob: -17.126033782958984
    8. '(' → logprob: -17.251033782958984
    9. ')' → logprob: -17.376033782958984
    10. '()[' → logprob: -17.501033782958984

Token 103: '[:-' (ID: 63556)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0238962322473526
    2. '()
' → logprob: -4.523896217346191
    3. '(' → logprob: -4.898896217346191
    4. '
' → logprob: -6.398896217346191
    5. '()\' → logprob: -6.523896217346191
    6. '()

' → logprob: -7.148896217346191
    7. '().' → logprob: -7.523896217346191
    8. '()[' → logprob: -8.773896217346191
    9. '\n' → logprob: -8.898896217346191
    10. ')' → logprob: -9.023896217346191

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.875
    4. 'newline' → logprob: -18.875
    5. '１' → logprob: -19.625
    6. '  ' → logprob: -19.875
    7. '   ' → logprob: -19.875
    8. '
' → logprob: -20.375
    9. '

' → logprob: -20.5
    10. '-' → logprob: -21.125

Token 105: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4987974029500037e-05
    2. ')
' → logprob: -10.625024795532227
    3. ')

' → logprob: -15.125024795532227
    4. ' )' → logprob: -16.375024795532227
    5. '<|end|>' → logprob: -16.750024795532227
    6. ']' → logprob: -16.875024795532227
    7. '）' → logprob: -17.125024795532227
    8. '')' → logprob: -17.375024795532227
    9. '```' → logprob: -17.500024795532227
    10. '()' → logprob: -17.500024795532227

Token 106: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5261821150779724
    2. 'n' → logprob: -1.2761821746826172
    3. 'def' → logprob: -2.776182174682617
    4. 'D' → logprob: -3.526182174682617
    5. 'N' → logprob: -4.026182174682617
    6. 'class' → logprob: -5.151182174682617
    7. 'a' → logprob: -5.276182174682617
    8. '#' → logprob: -5.401182174682617
    9. 'c' → logprob: -6.776182174682617
    10. 's' → logprob: -7.151182174682617

Token 107: ' http' (ID: 3958)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5590418577194214
    2. 'N' → logprob: -1.3090418577194214
    3. 'd' → logprob: -2.559041976928711
    4. 'def' → logprob: -3.184041976928711
    5. '#' → logprob: -4.059041976928711
    6. 'D' → logprob: -5.059041976928711
    7. 'from' → logprob: -5.809041976928711
    8. 's' → logprob: -6.059041976928711
    9. 'a' → logprob: -6.559041976928711
    10. 'A' → logprob: -6.559041976928711

Token 108: '://' (ID: 1684)
  Prédit: '://'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '://' → logprob: -0.5718623399734497
    2. ':' → logprob: -0.9468623399734497
    3. 's' → logprob: -3.82186222076416
    4. '#' → logprob: -3.82186222076416
    5. '<|end|>' → logprob: -6.32186222076416
    6. ' ' → logprob: -7.82186222076416
    7. '=' → logprob: -7.94686222076416
    8. ')' → logprob: -8.44686222076416
    9. '[:]' → logprob: -8.69686222076416
    10. ' #' → logprob: -8.69686222076416

Token 109: 'judge' (ID: 163735)
  Prédit: 'judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.059892747551202774
    2. 'code' → logprob: -3.5598926544189453
    3. 'at' → logprob: -4.309892654418945
    4. 'y' → logprob: -5.559892654418945
    5. 'ac' → logprob: -6.184892654418945
    6. 'qi' → logprob: -6.309892654418945
    7. 'ros' → logprob: -6.934892654418945
    8. 'abc' → logprob: -7.059892654418945
    9. 'www' → logprob: -7.434892654418945
    10. 'poj' → logprob: -7.559892654418945

Token 110: '.u' (ID: 22262)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.6432865858078003
    2. 'at' → logprob: -1.7682865858078003
    3. '0' → logprob: -2.76828670501709
    4. 'py' → logprob: -3.01828670501709
    5. '.py' → logprob: -3.26828670501709
    6. '.y' → logprob: -3.64328670501709
    7. 'soft' → logprob: -3.64328670501709
    8. 'contest' → logprob: -3.89328670501709
    9. 'submit' → logprob: -4.14328670501709
    10. 'code' → logprob: -4.14328670501709

Token 111: '-a' (ID: 8575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.18896636366844177
    2. 's' → logprob: -3.0639662742614746
    3. '-a' → logprob: -3.9389662742614746
    4. 'so' → logprob: -4.063966274261475
    5. 'cs' → logprob: -4.188966274261475
    6. 'sage' → logprob: -4.688966274261475
    7. 'code' → logprob: -4.813966274261475
    8. 'coder' → logprob: -5.063966274261475
    9. '```' → logprob: -5.313966274261475
    10. 'z' → logprob: -5.688966274261475

Token 112: 'izu' (ID: 75080)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10799649357795715
    2. 'cs' → logprob: -3.4829964637756348
    3. '```' → logprob: -4.732996463775635
    4. 'cas' → logprob: -4.982996463775635
    5. '-c' → logprob: -5.232996463775635
    6. 'cc' → logprob: -5.232996463775635
    7. 'coder' → logprob: -5.357996463775635
    8. 'ca' → logprob: -5.482996463775635
    9. 'cz' → logprob: -5.857996463775635
    10. 'cu' → logprob: -5.982996463775635

Token 113: '.ac' (ID: 25905)
  Prédit: '.jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.jp' → logprob: -0.7305289506912231
    2. '.ac' → logprob: -1.3555289506912231
    3. '.net' → logprob: -2.4805288314819336
    4. '.org' → logprob: -3.2305288314819336
    5. 'online' → logprob: -3.3555288314819336
    6. '.com' → logprob: -3.7305288314819336
    7. 'A' → logprob: -4.980528831481934
    8. '.' → logprob: -4.980528831481934
    9. '.info' → logprob: -5.230528831481934
    10. 'archive' → logprob: -5.355528831481934

Token 114: '.jp' (ID: 39524)
  Prédit: 'jp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jp' → logprob: -0.2114942967891693
    2. '.jp' → logprob: -1.7114943265914917
    3. 'm' → logprob: -5.461494445800781
    4. 'mp' → logprob: -6.336494445800781
    5. 'mj' → logprob: -6.711494445800781
    6. 'p' → logprob: -7.336494445800781
    7. 'ml' → logprob: -7.711494445800781
    8. ' jp' → logprob: -8.336494445800781
    9. 'mic' → logprob: -8.836494445800781
    10. 'ac' → logprob: -9.086494445800781

Token 115: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0173894464969635
    2. '/problems' → logprob: -4.267389297485352
    3. '/users' → logprob: -7.517389297485352
    4. '/projects' → logprob: -7.892389297485352
    5. '#' → logprob: -8.142389297485352
    6. '/rest' → logprob: -8.642389297485352
    7. '/problem' → logprob: -8.642389297485352
    8. '/tasks' → logprob: -8.642389297485352
    9. '/A' → logprob: -9.017389297485352
    10. 'import' → logprob: -9.142389297485352

Token 116: 'online' (ID: 34978)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.08101870119571686
    2. '/' → logprob: -4.206018924713135
    3. 'solutions' → logprob: -4.206018924713135
    4. 'problem' → logprob: -4.706018924713135
    5. 'cont' → logprob: -4.956018924713135
    6. 'at' → logprob: -5.581018924713135
    7. 'online' → logprob: -5.956018924713135
    8. 'src' → logprob: -5.956018924713135
    9. '/problems' → logprob: -6.206018924713135
    10. 'tasks' → logprob: -6.331018924713135

Token 117: 'judge' (ID: 163735)
  Prédit: 'judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'judge' → logprob: -0.12235025316476822
    2. '/' → logprob: -2.4973502159118652
    3. '-' → logprob: -4.622350215911865
    4. 'sub' → logprob: -5.122350215911865
    5. '_' → logprob: -5.622350215911865
    6. '_j' → logprob: -6.247350215911865
    7. '<|end|>' → logprob: -6.497350215911865
    8. 'program' → logprob: -6.872350215911865
    9. 'problem' → logprob: -7.122350215911865
    10. '```' → logprob: -7.122350215911865

Token 118: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02828691340982914
    2. '/problems' → logprob: -3.778286933898926
    3. '/tasks' → logprob: -6.653286933898926
    4. '/sub' → logprob: -6.903286933898926
    5. 'solutions' → logprob: -7.653286933898926
    6. '/library' → logprob: -8.278286933898926
    7. '#' → logprob: -8.403286933898926
    8. 'sub' → logprob: -8.528286933898926
    9. '/re' → logprob: -9.028286933898926
    10. '/users' → logprob: -9.278286933898926

Token 119: 'description' (ID: 9186)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.2509569823741913
    2. 'solutions' → logprob: -2.3759570121765137
    3. 'sub' → logprob: -3.7509570121765137
    4. 'courses' → logprob: -4.250957012176514
    5. 'problem' → logprob: -4.500957012176514
    6. 'status' → logprob: -4.500957012176514
    7. 'services' → logprob: -4.625957012176514
    8. 'library' → logprob: -5.125957012176514
    9. 'submit' → logprob: -5.250957012176514
    10. 'sys' → logprob: -5.500957012176514

Token 120: '.jsp' (ID: 45294)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.00046570412814617157
    2. '/problems' → logprob: -9.125465393066406
    3. '.php' → logprob: -10.250465393066406
    4. 's' → logprob: -10.375465393066406
    5. '/python' → logprob: -10.375465393066406
    6. '/de' → logprob: -10.625465393066406
    7. '?id' → logprob: -10.875465393066406
    8. '/tasks' → logprob: -10.875465393066406
    9. '/dev' → logprob: -11.250465393066406
    10. '?' → logprob: -11.375465393066406

Token 121: '?id' (ID: 41628)
  Prédit: '?id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?id' → logprob: -0.5846920609474182
    2. '/' → logprob: -0.9596920609474182
    3. '/problems' → logprob: -3.5846920013427734
    4. '?' → logprob: -4.084692001342773
    5. '/tasks' → logprob: -5.209692001342773
    6. '?q' → logprob: -5.334692001342773
    7. '?page' → logprob: -6.959692001342773
    8. '?action' → logprob: -7.084692001342773
    9. '/users' → logprob: -7.709692001342773
    10. '#!/' → logprob: -8.584692001342773

Token 122: '=D' (ID: 128772)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0018942449241876602
    2. '=A' → logprob: -6.751894474029541
    3. '=C' → logprob: -8.001893997192383
    4. '=D' → logprob: -9.001893997192383
    5. '=B' → logprob: -9.001893997192383
    6. '=a' → logprob: -9.876893997192383
    7. '=M' → logprob: -10.376893997192383
    8. '=_' → logprob: -11.626893997192383
    9. '=int' → logprob: -12.251893997192383
    10. '=s' → logprob: -12.376893997192383

Token 123: 'PL' (ID: 5173)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.9497387409210205
    2. 'P' → logprob: -2.1997387409210205
    3. 'p' → logprob: -2.4497387409210205
    4. 'ijkstra' → logprob: -2.4497387409210205
    5. 'EF' → logprob: -2.4497387409210205
    6. 'def' → logprob: -3.1997387409210205
    7. 'E' → logprob: -3.4497387409210205
    8. 'F' → logprob: -3.6997387409210205
    9. 'FS' → logprob: -4.262238502502441
    10. ' ' → logprob: -4.387238502502441

Token 124: '_' (ID: 62)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.8900583386421204
    2. 'B' → logprob: -1.2650582790374756
    3. 'A' → logprob: -2.0150582790374756
    4. 'F' → logprob: -2.6400582790374756
    5. 'D' → logprob: -3.2650582790374756
    6. 'E' → logprob: -4.015058517456055
    7. 'H' → logprob: -4.515058517456055
    8. 'b' → logprob: -5.390058517456055
    9. 'a' → logprob: -5.640058517456055
    10. '/' → logprob: -5.765058517456055

Token 125: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010975074023008347
    2. '1' → logprob: -4.635974884033203
    3. '2' → logprob: -7.635974884033203
    4. '3' → logprob: -8.760974884033203
    5. '_a' → logprob: -9.010974884033203
    6. '4' → logprob: -9.260974884033203
    7. '5' → logprob: -9.385974884033203
    8. '_f' → logprob: -9.760974884033203
    9. '_
' → logprob: -10.760974884033203
    10. '0' → logprob: -11.010974884033203

Token 126: '_G' (ID: 5459)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.0066510438919067
    2. 'A' → logprob: -1.3816510438919067
    3. 'C' → logprob: -1.3816510438919067
    4. 'F' → logprob: -3.631650924682617
    5. '_' → logprob: -4.381650924682617
    6. 'E' → logprob: -4.381650924682617
    7. 'a' → logprob: -4.756650924682617
    8. 'S' → logprob: -5.131650924682617
    9. '1' → logprob: -5.131650924682617
    10. '_A' → logprob: -5.256650924682617

Token 127: '&' (ID: 5)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.63913893699646
    2. 'N' → logprob: -1.38913893699646
    3. 'def' → logprob: -1.76413893699646
    4. 'from' → logprob: -4.014139175415039
    5. '
' → logprob: -4.389139175415039
    6. 'import' → logprob: -5.639139175415039
    7. 'class' → logprob: -5.889139175415039
    8. 'dp' → logprob: -6.014139175415039
    9. 'INF' → logprob: -6.139139175415039
    10. '#' → logprob: -6.139139175415039

Token 128: 'lang' (ID: 7585)
  Prédit: 'lang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lang' → logprob: -0.7784996628761292
    2. 'from' → logprob: -2.2784996032714844
    3. 'cat' → logprob: -2.6534996032714844
    4. 'code' → logprob: -3.4034996032714844
    5. 'lt' → logprob: -3.6534996032714844
    6. 'text' → logprob: -3.7784996032714844
    7. 'title' → logprob: -3.9034996032714844
    8. 'nbsp' → logprob: -3.9034996032714844
    9. 'color' → logprob: -4.028499603271484
    10. 'import' → logprob: -4.028499603271484

Token 129: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3107229471206665
    2. '=en' → logprob: -1.4357229471206665
    3. 'py' → logprob: -4.060722827911377
    4. 'python' → logprob: -5.685722827911377
    5. 'en' → logprob: -6.310722827911377
    6. '#' → logprob: -6.685722827911377
    7. '=C' → logprob: -7.185722827911377
    8. 'Python' → logprob: -7.310722827911377
    9. '=p' → logprob: -7.310722827911377
    10. '-python' → logprob: -7.685722827911377

Token 130: 'ja' (ID: 2067)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8856818079948425
    2. 'ja' → logprob: -1.5106818675994873
    3. 'python' → logprob: -1.6356818675994873
    4. 'py' → logprob: -2.3856818675994873
    5. 'jp' → logprob: -2.6356818675994873
    6. 'Python' → logprob: -5.260681629180908
    7. '2' → logprob: -7.885681629180908
    8. 'cpp' → logprob: -8.010682106018066
    9. 'p' → logprob: -8.260682106018066
    10. 'JA' → logprob: -8.260682106018066

Token 131: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5907793641090393
    2. 'N' → logprob: -1.4657793045043945
    3. 'def' → logprob: -1.8407793045043945
    4. 'from' → logprob: -4.4657793045043945
    5. 'INF' → logprob: -4.8407793045043945
    6. '
' → logprob: -4.9657793045043945
    7. 'H' → logprob: -5.0907793045043945
    8. 'class' → logprob: -5.0907793045043945
    9. 'MOD' → logprob: -5.3407793045043945
    10. '#' → logprob: -5.8407793045043945

Token 132: 'from' (ID: 2845)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5707882046699524
    2. 'N' → logprob: -1.3207881450653076
    3. 'def' → logprob: -1.9457881450653076
    4. 'from' → logprob: -5.195788383483887
    5. 'class' → logprob: -5.320788383483887
    6. 'INF' → logprob: -5.570788383483887
    7. 'dp' → logprob: -6.070788383483887
    8. 'import' → logprob: -6.195788383483887
    9. '#' → logprob: -6.695788383483887
    10. 'H' → logprob: -7.070788383483887

Token 133: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.055053792893886566
    2. 'collections' → logprob: -3.1800537109375
    3. '_' → logprob: -5.4300537109375
    4. ' heap' → logprob: -5.4300537109375
    5. ' sys' → logprob: -6.8050537109375
    6. ' ' → logprob: -7.4300537109375
    7. ' functools' → logprob: -7.4300537109375
    8. ' math' → logprob: -7.9300537109375
    9. ' itertools' → logprob: -8.8050537109375
    10. ' copy' → logprob: -9.1800537109375

Token 134: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.033859603106975555
    2. ' import' → logprob: -3.4088594913482666
    3. '<|end|>' → logprob: -9.408859252929688
    4. ' ' → logprob: -9.908859252929688
    5. 'port' → logprob: -10.783859252929688
    6. '	import' → logprob: -11.283859252929688
    7. '```' → logprob: -11.533859252929688
    8. '#import' → logprob: -12.033859252929688
    9. '_import' → logprob: -12.283859252929688
    10. 'deque' → logprob: -12.658859252929688

Token 135: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.11886727064847946
    2. ' deque' → logprob: -2.2438671588897705
    3. ' defaultdict' → logprob: -5.24386739730835
    4. 'default' → logprob: -7.36886739730835
    5. 'de' → logprob: -9.243866920471191
    6. 'collections' → logprob: -10.993866920471191
    7. 'named' → logprob: -14.743866920471191
    8. ' de' → logprob: -14.868866920471191
    9. 'sys' → logprob: -15.118866920471191
    10. ' functools' → logprob: -15.243866920471191

Token 136: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.892877995967865
    2. '
' → logprob: -1.6428780555725098
    3. 'n' → logprob: -1.7678780555725098
    4. '

' → logprob: -2.6428780555725098
    5. 'deque' → logprob: -2.7678780555725098
    6. 'class' → logprob: -3.2678780555725098
    7. 'N' → logprob: -4.39287805557251
    8. 'dq' → logprob: -4.76787805557251
    9. 'dp' → logprob: -5.26787805557251
    10. '
' → logprob: -5.39287805557251

Token 137: 'def' (ID: 1314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6013440489768982
    2. 'def' → logprob: -1.476344108581543
    3. 'N' → logprob: -1.726344108581543
    4. 'H' → logprob: -3.726344108581543
    5. 'class' → logprob: -4.476344108581543
    6. 'V' → logprob: -5.226344108581543
    7. 'q' → logprob: -6.226344108581543
    8. 'h' → logprob: -7.601344108581543
    9. 'Q' → logprob: -7.726344108581543
    10. 'd' → logprob: -7.851344108581543

Token 138: ' main' (ID: 2758)
  Prédit: ' bfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.6710085272789001
    2. ' shortest' → logprob: -0.7960085272789001
    3. ' main' → logprob: -4.421008586883545
    4. ' ' → logprob: -4.546008586883545
    5. ' solve' → logprob: -5.421008586883545
    6. ' b' → logprob: -5.546008586883545
    7. ' BFS' → logprob: -5.921008586883545
    8. ' top' → logprob: -6.421008586883545
    9. 'b' → logprob: -7.171008586883545
    10. ' bf' → logprob: -8.421008110046387

Token 139: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.259079363080673e-05
    2. ' ():' → logprob: -11.625012397766113
    3. '():
' → logprob: -12.875012397766113
    4. '()' → logprob: -14.500012397766113
    5. '(' → logprob: -14.625012397766113
    6. '(:' → logprob: -17.75001335144043
    7. ':' → logprob: -18.62501335144043
    8. '():
' → logprob: -18.75001335144043
    9. '(":' → logprob: -18.75001335144043
    10. '()>' → logprob: -19.12501335144043

Token 140: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.0095207691192627
    2. 'n' → logprob: -1.1345207691192627
    3. ' ' → logprob: -1.5095207691192627
    4. '   ' → logprob: -2.8845207691192627
    5. '    ' → logprob: -3.7595207691192627
    6. '<|end|>' → logprob: -5.759520530700684
    7. '	n' → logprob: -6.134520530700684
    8. ' A' → logprob: -6.384520530700684
    9. '(n' → logprob: -6.759520530700684
    10. ' input' → logprob: -6.884520530700684

Token 141: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.44678783416748047
    2. 'n' (adapté à ' n') → logprob: -1.3217878341674805
    3. ' N' → logprob: -3.5717878341674805
    4. 'N' → logprob: -4.0717878341674805
    5. ' Q' → logprob: -4.4467878341674805
    6. ' h' → logprob: -4.6967878341674805
    7. ' q' → logprob: -4.9467878341674805
    8. 'q' → logprob: -5.0717878341674805
    9. 'h' → logprob: -5.4467878341674805
    10. 'Q' → logprob: -5.4467878341674805

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35857662558555603
    2. ' =' → logprob: -1.2335766553878784
    3. '=' → logprob: -4.733576774597168
    4. ' ,' → logprob: -6.858576774597168
    5. '=int' → logprob: -8.733576774597168
    6. ' ' → logprob: -10.858576774597168
    7. ',n' → logprob: -11.608576774597168
    8. ')' → logprob: -11.858576774597168
    9. ',k' → logprob: -11.983576774597168
    10. ',int' → logprob: -11.983576774597168

Token 143: ' wn' (ID: 114982)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3469763398170471
    2. 'm' → logprob: -1.5969762802124023
    3. 'q' → logprob: -2.8469762802124023
    4. ' k' → logprob: -4.221976280212402
    5. ' m' → logprob: -5.471976280212402
    6. 'x' → logprob: -5.721976280212402
    7. 'K' → logprob: -5.971976280212402
    8. ' q' → logprob: -6.471976280212402
    9. 'd' → logprob: -6.971976280212402
    10. 'Q' → logprob: -7.096976280212402

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5802228450775146
    2. ' =' → logprob: -0.8302228450775146
    3. ',' → logprob: -6.955223083496094
    4. 'um' → logprob: -7.580223083496094
    5. 'w' → logprob: -7.705223083496094
    6. ')' → logprob: -7.830223083496094
    7. '=int' → logprob: -7.955223083496094
    8. ')=' → logprob: -8.080223083496094
    9. '=sum' → logprob: -8.330223083496094
    10. 'ight' → logprob: -8.580223083496094

Token 145: ' MI' (ID: 32682)
  Prédit: 'MI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MI' → logprob: -0.006789143662899733
    2. ' MI' → logprob: -5.131789207458496
    3. 'map' → logprob: -7.756789207458496
    4. 'LI' → logprob: -8.131789207458496
    5. ' map' → logprob: -9.131789207458496
    6. ' ' → logprob: -11.756789207458496
    7. 'MAP' → logprob: -12.256789207458496
    8. 'ML' → logprob: -12.506789207458496
    9. 'M' → logprob: -13.631789207458496
    10. 'list' → logprob: -13.756789207458496

Token 146: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00011272187111899257
    2. '()
' → logprob: -9.125112533569336
    3. ')' → logprob: -13.500112533569336
    4. '()
' → logprob: -14.000112533569336
    5. '(' → logprob: -14.375112533569336
    6. '()

' → logprob: -14.750112533569336
    7. ' ()' → logprob: -15.125112533569336
    8. '()`' → logprob: -16.000112533569336
    9. '();' → logprob: -16.125112533569336
    10. '())' → logprob: -17.000112533569336

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5169075727462769
    2. '
' → logprob: -1.0169075727462769
    3. '    
' → logprob: -3.6419076919555664
    4. ' 
' → logprob: -5.391907691955566
    5. '   
' → logprob: -6.266907691955566
    6. 'weights' → logprob: -6.391907691955566
    7. 'n' → logprob: -6.641907691955566
    8. 'wn' → logprob: -7.016907691955566
    9. ')' → logprob: -7.516907691955566
    10. ' weights' → logprob: -7.766907691955566

Token 148: ' dp' (ID: 21546)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.09507117420434952
    2. 'wv' → logprob: -3.3450710773468018
    3. 'ws' → logprob: -3.8450710773468018
    4. ' w' → logprob: -4.470071315765381
    5. 'weights' → logprob: -5.095071315765381
    6. 'W' → logprob: -5.595071315765381
    7. 'wl' → logprob: -6.345071315765381
    8. 'dp' (adapté à ' dp') → logprob: -6.345071315765381
    9. '   ' → logprob: -6.595071315765381
    10. 'a' → logprob: -6.720071315765381

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25196772813796997
    2. '=' → logprob: -1.5019676685333252
    3. '[' → logprob: -11.001967430114746
    4. '=[' → logprob: -11.626967430114746
    5. '=[]' → logprob: -12.251967430114746
    6. ',' → logprob: -13.626967430114746
    7. ')' → logprob: -13.626967430114746
    8. ']' → logprob: -13.876967430114746
    9. '＝' → logprob: -14.376967430114746
    10. 'w' → logprob: -14.501967430114746

Token 150: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07378421723842621
    2. '[-' → logprob: -2.698784112930298
    3. ' [' → logprob: -6.448784351348877
    4. '[[' → logprob: -6.948784351348877
    5. '[n' → logprob: -7.698784351348877
    6. 'deque' → logprob: -7.823784351348877
    7. '[(' → logprob: -8.823783874511719
    8. '{' → logprob: -8.948783874511719
    9. ' [-' → logprob: -9.448783874511719
    10. '[b' → logprob: -11.573783874511719

Token 151: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.312240332365036
    2. 'float' → logprob: -2.0622403621673584
    3. 'False' → logprob: -2.8122403621673584
    4. '0' → logprob: -3.3122403621673584
    5. '[-' → logprob: -3.9372403621673584
    6. '[' → logprob: -4.937240123748779
    7. 'deque' → logprob: -5.187240123748779
    8. '-de' → logprob: -5.812240123748779
    9. '-w' → logprob: -6.437240123748779
    10. 'wn' → logprob: -6.562240123748779

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049385916441679
    2. ']*(' → logprob: -3.0493860244750977
    3. ']*' → logprob: -7.799386024475098
    4. ']+' → logprob: -8.674386024475098
    5. ' ]' → logprob: -9.174386024475098
    6. ' for' → logprob: -9.549386024475098
    7. ',' → logprob: -10.424386024475098
    8. 'for' → logprob: -12.049386024475098
    9. '.' → logprob: -14.049386024475098
    10. ' ' → logprob: -14.174386024475098

Token 153: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0722317695617676
    2. '*' → logprob: -1.1972317695617676
    3. '*(' → logprob: -1.8222317695617676
    4. ']*(' → logprob: -2.3222317695617676
    5. ' for' → logprob: -3.1972317695617676
    6. ']' → logprob: -3.1972317695617676
    7. ']+' → logprob: -5.072231769561768
    8. '+' → logprob: -5.197231769561768
    9. ']*' → logprob: -6.822231769561768
    10. ' *' → logprob: -8.07223129272461

Token 154: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04752233996987343
    2. ' (' → logprob: -3.7975223064422607
    3. '(n' → logprob: -3.7975223064422607
    4. '(w' → logprob: -6.67252254486084
    5. '(nn' → logprob: -9.67252254486084
    6. '(max' → logprob: -9.79752254486084
    7. '(win' → logprob: -10.29752254486084
    8. '   ' → logprob: -10.54752254486084
    9. '(wx' → logprob: -10.67252254486084
    10. ' ' → logprob: -11.54752254486084

Token 155: 'wn' (ID: 1772)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7012600302696228
    2. 'wn' → logprob: -0.7012600302696228
    3. ' (' → logprob: -5.326260089874268
    4. ' wn' → logprob: -6.076260089874268
    5. '   ' → logprob: -7.951260089874268
    6. '(w' → logprob: -8.45125961303711
    7. ' ' → logprob: -8.70125961303711
    8. '100' → logprob: -10.57625961303711
    9. '  ' → logprob: -10.70125961303711
    10. '(n' → logprob: -10.70125961303711

Token 156: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029751529917120934
    2. ' +' → logprob: -3.5297515392303467
    3. '＋' → logprob: -14.529751777648926
    4. '+
' → logprob: -14.904751777648926
    5. ' +
' → logprob: -16.65475082397461
    6. ' ' → logprob: -16.77975082397461
    7. '+n' → logprob: -16.90475082397461
    8. ' plus' → logprob: -17.40475082397461
    9. '+)' → logprob: -17.90475082397461
    10. ')+' → logprob: -18.15475082397461

Token 157: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. '   ' → logprob: -15.126032829284668
    4. '１' → logprob: -16.251033782958984
    5. '  ' → logprob: -17.251033782958984
    6. '10' → logprob: -17.501033782958984
    7. '100' → logprob: -17.563533782958984
    8. '    ' → logprob: -17.751033782958984
    9. '2' → logprob: -17.751033782958984
    10. '```' → logprob: -17.876033782958984

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -10.625025749206543
    3. '10' → logprob: -14.375025749206543
    4. '100' → logprob: -15.375025749206543
    5. '１' → logprob: -16.000024795532227
    6. '2' → logprob: -16.250024795532227
    7. '101' → logprob: -16.750024795532227
    8. '
' → logprob: -17.875024795532227
    9. '   ' → logprob: -18.437524795532227
    10. '01' → logprob: -18.562524795532227

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.179569077678025e-05
    2. ' )' → logprob: -10.250041961669922
    3. ')
' → logprob: -12.125041961669922
    4. ')

' → logprob: -15.000041961669922
    5. ')
' → logprob: -15.750041961669922
    6. ' ' → logprob: -17.000041961669922
    7. '))' → logprob: -17.000041961669922
    8. ']' → logprob: -17.125041961669922
    9. '),' → logprob: -17.250041961669922
    10. '
' → logprob: -17.375041961669922

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3261958062648773
    2. '
' → logprob: -1.4511958360671997
    3. '<|end|>' → logprob: -4.07619571685791
    4. ' for' → logprob: -4.45119571685791
    5. '    
' → logprob: -4.70119571685791
    6. '  
' → logprob: -6.07619571685791
    7. '	for' → logprob: -7.07619571685791
    8. ' 
' → logprob: -7.32619571685791
    9. 'for' → logprob: -7.70119571685791
    10. ' ' → logprob: -8.07619571685791

Token 161: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0178638007491827
    2. ' for' → logprob: -4.892863750457764
    3. 'items' → logprob: -5.517863750457764
    4. 'w' → logprob: -5.767863750457764
    5. '   ' → logprob: -6.642863750457764
    6. 'weights' → logprob: -6.642863750457764
    7. 'wv' → logprob: -9.392864227294922
    8. ' items' → logprob: -9.517864227294922
    9. 'ws' → logprob: -10.017864227294922
    10. 'weight' → logprob: -10.017864227294922

Token 162: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.023476069793105125
    2. '_' → logprob: -4.0234761238098145
    3. ' i' → logprob: -5.2734761238098145
    4. '_i' → logprob: -9.148475646972656
    5. ' ' → logprob: -10.273475646972656
    6. 'i' → logprob: -10.398475646972656
    7. ' in' → logprob: -12.273475646972656
    8. ' ' → logprob: -12.398475646972656
    9. '　' → logprob: -13.648475646972656
    10. ' n' → logprob: -14.523475646972656

Token 163: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09094658493995667
    2. 'in' → logprob: -2.465946674346924
    3. ' ' → logprob: -6.965946674346924
    4. 'range' → logprob: -8.215946197509766
    5. 'n' → logprob: -8.340946197509766
    6. '_' → logprob: -8.840946197509766
    7. '(' → logprob: -8.965946197509766
    8. ' (' → logprob: -10.215946197509766
    9. '  ' → logprob: -10.590946197509766
    10. ' n' → logprob: -10.715946197509766

Token 164: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10038523375988007
    2. ' range' → logprob: -2.3503851890563965
    3. 'p' → logprob: -8.975385665893555
    4. '(range' → logprob: -10.475385665893555
    5. ' p' → logprob: -11.475385665893555
    6. ' ' → logprob: -13.225385665893555
    7. 'rang' → logprob: -13.475385665893555
    8. 'ra' → logprob: -13.600385665893555
    9. '	range' → logprob: -13.600385665893555
    10. 'r' → logprob: -13.850385665893555

Token 165: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.288163083605468e-05
    2. '(' → logprob: -9.875052452087402
    3. 'n' → logprob: -14.125052452087402
    4. ' (' → logprob: -14.875052452087402
    5. ' n' → logprob: -15.625052452087402
    6. '(
' → logprob: -15.750052452087402
    7. '	n' → logprob: -18.25005340576172
    8. '   ' → logprob: -20.37505340576172
    9. '(int' → logprob: -21.00005340576172
    10. ',n' → logprob: -21.12505340576172

Token 166: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026953011751174927
    2. '):
' → logprob: -3.6519529819488525
    3. ':' → logprob: -7.526953220367432
    4. ' ):' → logprob: -9.526952743530273
    5. '):
' → logprob: -11.151952743530273
    6. ')' → logprob: -12.151952743530273
    7. ',' → logprob: -12.651952743530273
    8. '():' → logprob: -12.651952743530273
    9. '   ' → logprob: -12.776952743530273
    10. ' ):
' → logprob: -12.901952743530273

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07078053802251816
    2. ':' → logprob: -2.9457805156707764
    3. ',' → logprob: -5.0707807540893555
    4. '	' → logprob: -6.1957807540893555
    5. '	   ' → logprob: -6.6957807540893555
    6. '   ' → logprob: -6.8207807540893555
    7. '):' → logprob: -6.9457807540893555
    8. ' :' → logprob: -6.9457807540893555
    9. ' ' → logprob: -7.4457807540893555
    10. '    ' → logprob: -7.8207807540893555

Token 168: ' v' (ID: 323)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00047475993051193655
    2. 'v' (adapté à ' v') → logprob: -8.75047492980957
    3. 'weight' → logprob: -9.37547492980957
    4. 'wi' → logprob: -9.62547492980957
    5. ' w' → logprob: -10.00047492980957
    6. '   ' → logprob: -10.25047492980957
    7. 'wt' → logprob: -10.62547492980957
    8. 'wv' → logprob: -10.87547492980957
    9. 'W' → logprob: -11.12547492980957
    10. '    
' → logprob: -12.50047492980957

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006706377491354942
    2. 'w' → logprob: -5.756706237792969
    3. ',w' → logprob: -5.881706237792969
    4. ' ,' → logprob: -7.381706237792969
    5. '_,' → logprob: -9.506706237792969
    6. 'n' → logprob: -11.631706237792969
    7. ' w' → logprob: -12.006706237792969
    8. 'a' → logprob: -12.756706237792969
    9. ',v' → logprob: -13.131706237792969
    10. 'i' → logprob: -13.131706237792969

Token 170: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00770091125741601
    2. ' w' → logprob: -4.8827009201049805
    3. ' ' → logprob: -10.50770092010498
    4. '   ' → logprob: -10.63270092010498
    5. '```' → logprob: -11.25770092010498
    6. 'wv' → logprob: -11.63270092010498
    7. '  ' → logprob: -11.88270092010498
    8. '    ' → logprob: -12.88270092010498
    9. 'wt' → logprob: -13.13270092010498
    10. '	w' → logprob: -13.50770092010498

Token 171: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38689273595809937
    2. ' =' → logprob: -1.1368927955627441
    3. ',' → logprob: -11.886892318725586
    4. ')' → logprob: -12.011892318725586
    5. ')=' → logprob: -13.761892318725586
    6. '<|end|>' → logprob: -13.761892318725586
    7. '=int' → logprob: -14.011892318725586
    8. 'w' → logprob: -14.136892318725586
    9. ' ' → logprob: -14.136892318725586
    10. '＝' → logprob: -14.511892318725586

Token 172: ' m' (ID: 284)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6320077180862427
    2. ' =' → logprob: -1.6320077180862427
    3. 'q' → logprob: -1.6320077180862427
    4. 'c' → logprob: -3.257007598876953
    5. 'd' → logprob: -4.382007598876953
    6. '_' → logprob: -5.132007598876953
    7. '_=' → logprob: -5.632007598876953
    8. ' ' → logprob: -5.757007598876953
    9. 'b' → logprob: -6.132007598876953
    10. 't' → logprob: -6.382007598876953

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35577133297920227
    2. '=' → logprob: -1.2307713031768799
    3. 'ax' → logprob: -5.355771541595459
    4. 'a' → logprob: -6.355771541595459
    5. 'ultip' → logprob: -8.1057710647583
    6. ' ' → logprob: -9.1057710647583
    7. '=int' → logprob: -9.8557710647583
    8. 'ulti' → logprob: -10.1057710647583
    9. 'ultiple' → logprob: -10.1057710647583
    10. 'x' → logprob: -10.3557710647583

Token 174: ' MI' (ID: 32682)
  Prédit: ' MI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MI' → logprob: -0.011095333844423294
    2. 'MI' → logprob: -4.5110955238342285
    3. ' ' → logprob: -10.76109504699707
    4. ' ' → logprob: -11.38609504699707
    5. ' map' → logprob: -12.13609504699707
    6. ' M' → logprob: -12.26109504699707
    7. '_MI' → logprob: -12.63609504699707
    8. '   ' → logprob: -15.51109504699707
    9. 'map' → logprob: -15.51109504699707
    10. '  ' → logprob: -15.63609504699707

Token 175: '()
' (ID: 1234)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5962018370628357
    2. ')' → logprob: -1.3462018966674805
    3. '<|end|>' → logprob: -2.7212018966674805
    4. ',' → logprob: -2.9712018966674805
    5. '
' → logprob: -4.4712018966674805
    6. ':' → logprob: -4.4712018966674805
    7. 'while' → logprob: -4.9712018966674805
    8. '   ' → logprob: -4.9712018966674805
    9. ' v' → logprob: -5.2212018966674805
    10. '<|end|>' → logprob: -5.2212018966674805

Token 176: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09638919681310654
    2. '
' → logprob: -2.9713892936706543
    3. '<|end|>' → logprob: -4.721389293670654
    4. ' ' → logprob: -5.221389293670654
    5. '       ' → logprob: -5.346389293670654
    6. '' → logprob: -5.596389293670654
    7. '    
' → logprob: -5.846389293670654
    8. ' 
' → logprob: -6.096389293670654
    9. ' for' → logprob: -6.721389293670654
    10. '    ' → logprob: -6.721389293670654

Token 177: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.414176344871521
    2. '       ' → logprob: -1.914176344871521
    3. ' if' → logprob: -2.2891764640808105
    4. '    ' → logprob: -2.4141764640808105
    5. '        ' → logprob: -2.6641764640808105
    6. 's' → logprob: -2.6641764640808105
    7. '   ' → logprob: -3.0391764640808105
    8. 'd' → logprob: -3.1641764640808105
    9. 'for' → logprob: -3.2891764640808105
    10. ' ' → logprob: -3.4141764640808105

Token 178: ' w' (ID: 286)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0533820390701294
    2. ' if' → logprob: -1.0533820390701294
    3. 'for' → logprob: -1.9283820390701294
    4. 'if' → logprob: -2.55338191986084
    5. ' q' → logprob: -4.05338191986084
    6. ' k' → logprob: -4.67838191986084
    7. 'q' → logprob: -5.05338191986084
    8. '       ' → logprob: -5.05338191986084
    9. ' items' → logprob: -5.30338191986084
    10. ' queue' → logprob: -5.80338191986084

Token 179: 'の' (ID: 3385)
  Prédit: 'hile'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hile' → logprob: -0.04263108968734741
    2. '*=' → logprob: -4.417631149291992
    3. 'e' → logprob: -5.292631149291992
    4. 'ith' → logprob: -5.542631149291992
    5. '=' → logprob: -5.667631149291992
    6. '*' → logprob: -5.667631149291992
    7. ' =' → logprob: -5.792631149291992
    8. 'idth' → logprob: -6.542631149291992
    9. ',' → logprob: -7.042631149291992
    10. ' *=' → logprob: -7.167631149291992

Token 180: 'mod' (ID: 4847)
  Prédit: '数'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '数' → logprob: -1.394774317741394
    2. '倍' → logprob: -1.769774317741394
    3. '値' → logprob: -2.0197744369506836
    4. '個' → logprob: -2.8947744369506836
    5. '量' → logprob: -2.8947744369506836
    6. 'b' → logprob: -3.5197744369506836
    7. '使' → logprob: -3.6447744369506836
    8. 'bit' → logprob: -3.8947744369506836
    9. 'm' → logprob: -3.8947744369506836
    10. '単' → logprob: -4.144774436950684

Token 181: 'ご' (ID: 16211)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43758925795555115
    2. '=' → logprob: -2.187589168548584
    3. '_' → logprob: -2.562589168548584
    4. '_val' → logprob: -2.937589168548584
    5. 'v' → logprob: -4.312589168548584
    6. 'val' → logprob: -4.562589168548584
    7. '_vals' → logprob: -4.687589168548584
    8. '_list' → logprob: -4.812589168548584
    9. '_num' → logprob: -4.937589168548584
    10. '_value' → logprob: -5.062589168548584

Token 182: 'と' (ID: 5330)
  Prédit: 'と'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'と' → logprob: -0.00979103334248066
    2. 'との' → logprob: -4.634790897369385
    3. 'との差' → logprob: -10.509791374206543
    4. 'to' → logprob: -13.259791374206543
    5. 'に' → logprob: -13.384791374206543
    6. 'とな' → logprob: -13.759791374206543
    7. '```' → logprob: -13.884791374206543
    8. 'ろ' → logprob: -15.134791374206543
    9. 'の' → logprob: -15.134791374206543
    10. 'とは' → logprob: -15.259791374206543

Token 183: 'に' (ID: 5280)
  Prédit: 'に'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.17676089704036713
    2. 'の' → logprob: -3.5517609119415283
    3. 'で' → logprob: -3.6767609119415283
    4. '[]' → logprob: -4.051760673522949
    5. 'と' → logprob: -4.426760673522949
    6. 'for' → logprob: -4.426760673522949
    7. '0' → logprob: -4.676760673522949
    8. '<|end|>' → logprob: -4.926760673522949
    9. '[:]' → logprob: -5.051760673522949
    10. 'with' → logprob: -5.676760673522949

Token 184: '１' (ID: 10888)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6352537274360657
    2. 'b' → logprob: -1.510253667831421
    3. 'dp' → logprob: -2.135253667831421
    4. 'new' → logprob: -2.885253667831421
    5. 'tmp' → logprob: -3.385253667831421
    6. ' for' → logprob: -5.01025390625
    7. 'nd' → logprob: -5.13525390625
    8. 'next' → logprob: -5.51025390625
    9. 'cnt' → logprob: -5.63525390625
    10. 'if' → logprob: -6.01025390625

Token 185: 'つ' (ID: 18290)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4416178464889526
    2. ' for' → logprob: -1.6916178464889526
    3. 'for' → logprob: -1.8166178464889526
    4. 'の' → logprob: -1.9416178464889526
    5. '   ' → logprob: -2.316617965698242
    6. '    ' → logprob: -3.316617965698242
    7. 'を' → logprob: -4.441617965698242
    8. '+' → logprob: -4.566617965698242
    9. 'は' → logprob: -4.941617965698242
    10. '：' → logprob: -5.191617965698242

Token 186: 'の' (ID: 3385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: '数' (ID: 7135)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.048430077731609344
    2. 'queue' → logprob: -4.2984299659729
    3. ' deque' → logprob: -4.2984299659729
    4. '[]' → logprob: -4.5484299659729
    5. 'dp' → logprob: -5.7984299659729
    6. '0' → logprob: -7.0484299659729
    7. 'de' → logprob: -7.1734299659729
    8. ' queue' → logprob: -7.2984299659729
    9. 'list' → logprob: -7.6734299659729
    10. 's' → logprob: -7.9234299659729

Token 188: '列' (ID: 19047)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8237818479537964
    2. 'を' → logprob: -1.6987818479537964
    3. 'で' → logprob: -2.323781967163086
    4. 'が' → logprob: -2.948781967163086
    5. 'while' → logprob: -3.073781967163086
    6. '=' → logprob: -3.823781967163086
    7. '分' → logprob: -4.198781967163086
    8. 'div' → logprob: -4.323781967163086
    9. 'の' → logprob: -4.323781967163086
    10. 'ず' → logprob: -4.323781967163086

Token 189: 'として' (ID: 176315)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10736997425556183
    2. '<|end|>' → logprob: -3.857369899749756
    3. ' ' → logprob: -3.982369899749756
    4. ' for' → logprob: -4.357369899749756
    5. ',' → logprob: -4.857369899749756
    6. '    ' → logprob: -4.982369899749756
    7. '       ' → logprob: -5.107369899749756
    8. 'for' → logprob: -5.107369899749756
    9. '<|end|>' → logprob: -5.357369899749756
    10. '[' → logprob: -5.607369899749756

Token 190: '扱' (ID: 161953)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11220243573188782
    2. ' for' → logprob: -3.3622024059295654
    3. 's' → logprob: -4.3622026443481445
    4. ',' → logprob: -5.1122026443481445
    5. 'each' → logprob: -5.3622026443481445
    6. '<|end|>' → logprob: -5.3622026443481445
    7. '        ' → logprob: -5.4872026443481445
    8. 'for' → logprob: -5.7372026443481445
    9. 'の' → logprob: -5.8622026443481445
    10. ' each' → logprob: -5.9872026443481445

Token 191: 'う' (ID: 8574)
  Prédit: 'う'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'う' → logprob: -0.36056190729141235
    2. 'い' → logprob: -1.2355618476867676
    3. 'って' → logprob: -5.485561847686768
    4. 'え' → logprob: -5.485561847686768
    5. 'お' → logprob: -6.860561847686768
    6. '```' → logprob: -6.860561847686768
    7. 'います' → logprob: -7.860561847686768
    8. 'える' → logprob: -7.985561847686768
    9. 'っ' → logprob: -8.360562324523926
    10. 'われ' → logprob: -8.360562324523926

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15513013303279877
    2. '
' → logprob: -2.78013014793396
    3. '   ' → logprob: -3.28013014793396
    4. '<|end|>' → logprob: -4.280129909515381
    5. '        
' → logprob: -4.905129909515381
    6. '    ' → logprob: -5.530129909515381
    7. ' for' → logprob: -5.655129909515381
    8. ' 
' → logprob: -5.655129909515381
    9. ',' → logprob: -6.155129909515381
    10. '        ' → logprob: -6.280129909515381

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010097680613398552
    2. ' for' → logprob: -5.885097503662109
    3. '
' → logprob: -6.385097503662109
    4. '   ' → logprob: -6.385097503662109
    5. 'for' → logprob: -6.760097503662109
    6. '        
' → logprob: -7.385097503662109
    7. '<|end|>' → logprob: -7.385097503662109
    8. ',' → logprob: -7.635097503662109
    9. ' ' → logprob: -8.38509750366211
    10. '    ' → logprob: -9.01009750366211

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09717697650194168
    2. ' for' → logprob: -3.222177028656006
    3. 'q' → logprob: -4.097177028656006
    4. 'k' → logprob: -4.597177028656006
    5. 'rem' → logprob: -5.972177028656006
    6. 'if' → logprob: -5.972177028656006
    7. 'r' → logprob: -5.972177028656006
    8. 'dp' → logprob: -5.972177028656006
    9. 'mod' → logprob: -6.097177028656006
    10. 'b' → logprob: -6.097177028656006

Token 195: ' md' (ID: 17280)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -1.2127615213394165
    2. ' i' → logprob: -1.4627615213394165
    3. ' j' → logprob: -1.4627615213394165
    4. ' x' → logprob: -2.962761402130127
    5. ' r' → logprob: -3.087761402130127
    6. ' b' → logprob: -3.587761402130127
    7. 'j' → logprob: -4.087761402130127
    8. 'k' → logprob: -4.337761402130127
    9. ' s' → logprob: -4.587761402130127
    10. ' c' → logprob: -4.587761402130127

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20264558494091034
    2. 'in' → logprob: -1.7026455402374268
    3. 'i' → logprob: -7.077645778656006
    4. ' i' → logprob: -9.202645301818848
    5. 'w' → logprob: -10.202645301818848
    6. ' ' → logprob: -10.452645301818848
    7. ',' → logprob: -10.452645301818848
    8. 'e' → logprob: -10.827645301818848
    9. 'x' → logprob: -10.952645301818848
    10. 'a' → logprob: -10.952645301818848

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04300559684634209
    2. ' range' → logprob: -3.1680057048797607
    3. ' ' → logprob: -13.04300594329834
    4. '(range' → logprob: -13.54300594329834
    5. '	range' → logprob: -13.54300594329834
    6. '   ' → logprob: -14.29300594329834
    7. 'r' → logprob: -14.79300594329834
    8. '  ' → logprob: -15.66800594329834
    9. 'rang' → logprob: -15.91800594329834
    10. ' xrange' → logprob: -16.668004989624023

Token 198: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0004216170927975327
    2. '(' → logprob: -8.000421524047852
    3. '(v' → logprob: -10.125421524047852
    4. '(m' → logprob: -10.625421524047852
    5. 'w' → logprob: -11.000421524047852
    6. '(min' → logprob: -12.875421524047852
    7. '(
' → logprob: -14.125421524047852
    8. '((' → logprob: -14.250421524047852
    9. '(n' → logprob: -15.250421524047852
    10. ' (' → logprob: -15.250421524047852

Token 199: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47873249650001526
    2. '):' → logprob: -0.9787324666976929
    3. '+' → logprob: -6.603732585906982
    4. ' ):' → logprob: -7.103732585906982
    5. ' +' → logprob: -7.728732585906982
    6. '):
' → logprob: -7.728732585906982
    7. 'w' → logprob: -7.853732585906982
    8. ')' → logprob: -7.978732585906982
    9. ' ,' → logprob: -8.228732109069824
    10. ')):' → logprob: -8.853732109069824

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002391587011516094
    2. '       ' → logprob: -6.377391815185547
    3. 'q' → logprob: -8.752391815185547
    4. '	       ' → logprob: -8.877391815185547
    5. '        ' → logprob: -10.002391815185547
    6. 'count' → logprob: -10.252391815185547
    7. ',' → logprob: -10.252391815185547
    8. '         ' → logprob: -10.377391815185547
    9. 'num' → logprob: -10.502391815185547
    10. '   ' → logprob: -10.877391815185547

Token 201: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.31776678562164307
    2. 'dq' → logprob: -3.1927666664123535
    3. 'de' → logprob: -3.5677666664123535
    4. 'dp' → logprob: -3.8177666664123535
    5. 'd' → logprob: -3.9427666664123535
    6. '   ' → logprob: -4.1927666664123535
    7. 'que' → logprob: -4.1927666664123535
    8. 'buf' → logprob: -4.5677666664123535
    9. ' q' → logprob: -4.5677666664123535
    10. '       ' → logprob: -4.8177666664123535

Token 202: ' ス' (ID: 35372)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.27292490005493164
    2. 'que' → logprob: -2.0229249000549316
    3. 'de' → logprob: -3.3979249000549316
    4. 'dq' → logprob: -3.5229249000549316
    5. 'd' → logprob: -4.522924900054932
    6. 'deque' → logprob: -5.397924900054932
    7. 'Q' → logprob: -5.522924900054932
    8. 'queue' → logprob: -5.772924900054932
    9. 'nd' → logprob: -6.397924900054932
    10. '#' → logprob: -6.397924900054932

Token 203: 'ライ' (ID: 61503)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6060028672218323
    2. 'q' → logprob: -1.3560028076171875
    3. '   ' → logprob: -3.3560028076171875
    4. '
' → logprob: -3.8560028076171875
    5. 'que' → logprob: -3.8560028076171875
    6. 'l' → logprob: -4.2310028076171875
    7. '```' → logprob: -4.2310028076171875
    8. '       ' → logprob: -4.2310028076171875
    9. 'k' → logprob: -4.4810028076171875
    10. 'queue' → logprob: -4.7310028076171875

Token 204: 'ド' (ID: 14383)
  Prédit: 'ド'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ド' → logprob: -0.11314918100833893
    2. 'ディ' → logprob: -2.6131491661071777
    3. 'ス' → logprob: -4.238149166107178
    4. 'ding' → logprob: -4.863149166107178
    5. '```' → logprob: -5.613149166107178
    6. 'd' → logprob: -5.988149166107178
    7. '#' → logprob: -7.113149166107178
    8. 'デ' → logprob: -7.613149166107178
    9. 'de' → logprob: -7.738149166107178
    10. 'д' → logprob: -7.738149166107178

Token 205: '最大' (ID: 44721)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.18467490375041962
    2. '_window' → logprob: -2.8096749782562256
    3. 'max' → logprob: -3.3096749782562256
    4. 'ing' → logprob: -3.4346749782562256
    5. '_max' → logprob: -4.8096747398376465
    6. '   ' → logprob: -5.4346747398376465
    7. ' window' → logprob: -5.4346747398376465
    8. 'd' → logprob: -5.6846747398376465
    9. 'win' → logprob: -5.6846747398376465
    10. 'ng' → logprob: -6.0596747398376465

Token 206: '値' (ID: 69555)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.16895106434822083
    2. '_window' → logprob: -3.4189510345458984
    3. '_' → logprob: -3.6689510345458984
    4. 'w' → logprob: -3.7939510345458984
    5. 'sum' → logprob: -4.043951034545898
    6. ' window' → logprob: -4.293951034545898
    7. 'ウ' → logprob: -4.543951034545898
    8. 's' → logprob: -4.918951034545898
    9. 'queue' → logprob: -5.793951034545898
    10. 'deque' → logprob: -6.043951034545898

Token 207: 'を' (ID: 7277)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0437530279159546
    2. 'queue' → logprob: -1.7937530279159546
    3. 'de' → logprob: -2.293753147125244
    4. ' deque' → logprob: -2.668753147125244
    5. 's' → logprob: -2.793753147125244
    6. 'window' → logprob: -3.043753147125244
    7. '_queue' → logprob: -3.168753147125244
    8. 'imum' → logprob: -3.918753147125244
    9. ' queue' → logprob: -4.293753147125244
    10. 'を' → logprob: -4.293753147125244

Token 208: 'い' (ID: 3826)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.023858986794948578
    2. '求' → logprob: -4.273859024047852
    3. 'de' → logprob: -5.273859024047852
    4. ' deque' → logprob: -6.273859024047852
    5. '計' → logprob: -6.898859024047852
    6. 'dq' → logprob: -7.398859024047852
    7. '使' → logprob: -7.898859024047852
    8. 'デ' → logprob: -8.523859024047852
    9. 'Deque' → logprob: -9.773859024047852
    10. 'd' → logprob: -10.398859024047852

Token 209: 'れて' (ID: 185887)
  Prédit: 'れる'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れる' → logprob: -0.9827349781990051
    2. 'れ' → logprob: -1.4827349185943604
    3. 'れて' → logprob: -1.7327349185943604
    4. 'く' → logprob: -2.9827349185943604
    5. 'か' → logprob: -3.2327349185943604
    6. 'た' → logprob: -3.4827349185943604
    7. 'る' → logprob: -3.8577349185943604
    8. 'つ' → logprob: -4.2327351570129395
    9. 'け' → logprob: -5.3577351570129395
    10. '用' → logprob: -5.3577351570129395

Token 210: 'お' (ID: 8930)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.13923117518424988
    2. 'de' → logprob: -3.0142312049865723
    3. 'dq' → logprob: -3.1392312049865723
    4. ' deque' → logprob: -3.7642312049865723
    5. 'q' → logprob: -5.639231204986572
    6. ' dq' → logprob: -5.764231204986572
    7. ' de' → logprob: -5.764231204986572
    8. 'd' → logprob: -5.889231204986572
    9. 'que' → logprob: -7.264231204986572
    10. 'queue' → logprob: -8.264230728149414

Token 211: 'く' (ID: 10459)
  Prédit: 'れる'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れる' → logprob: -0.7783437967300415
    2. 'れて' → logprob: -1.1533437967300415
    3. 'く' → logprob: -2.778343677520752
    4. 'て' → logprob: -2.903343677520752
    5. 'れ' → logprob: -3.153343677520752
    6. 'け' → logprob: -3.653343677520752
    7. 'か' → logprob: -4.653343677520752
    8. 'る' → logprob: -5.028343677520752
    9. 'queue' → logprob: -5.653343677520752
    10. '```' → logprob: -5.653343677520752

Token 212: 'deque' (ID: 143563)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.6644430756568909
    2. 'd' → logprob: -1.289443016052246
    3. 'q' → logprob: -2.164443016052246
    4. 'de' → logprob: -2.789443016052246
    5. 'que' → logprob: -4.664443016052246
    6. ' dq' → logprob: -5.039443016052246
    7. 'deque' → logprob: -5.164443016052246
    8. 'queue' → logprob: -5.664443016052246
    9. '   ' → logprob: -6.039443016052246
    10. 'dp' → logprob: -6.539443016052246

Token 213: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005208263173699379
    2. '[]' → logprob: -6.630208492279053
    3. ' =' → logprob: -7.130208492279053
    4. 's' → logprob: -7.755208492279053
    5. '()
' → logprob: -7.880208492279053
    6. '(' → logprob: -8.005208015441895
    7. ' ()' → logprob: -8.005208015441895
    8. 'deque' → logprob: -8.255208015441895
    9. '=' → logprob: -8.630208015441895
    10. ')' → logprob: -8.630208015441895

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1390238255262375
    2. ' =' → logprob: -2.639023780822754
    3. '()' → logprob: -3.514023780822754
    4. '=' → logprob: -4.389023780822754
    5. ':' → logprob: -5.514023780822754
    6. '            ' → logprob: -5.639023780822754
    7. ')' → logprob: -6.764023780822754
    8. ',' → logprob: -7.014023780822754
    9. '(' → logprob: -7.014023780822754
    10. '       ' → logprob: -7.139023780822754

Token 215: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.985573947429657
    2. 'dq' → logprob: -1.1105740070343018
    3. 'que' → logprob: -1.8605740070343018
    4. 'd' → logprob: -3.1105740070343018
    5. 'Q' → logprob: -3.1105740070343018
    6. 'de' → logprob: -3.2355740070343018
    7. ' dq' → logprob: -5.610573768615723
    8. ' que' → logprob: -5.985573768615723
    9. ' q' → logprob: -6.235573768615723
    10. ' de' → logprob: -6.610573768615723

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31330180168151855
    2. '=' → logprob: -1.3133018016815186
    3. 'u' → logprob: -10.438302040100098
    4. '=[]' → logprob: -12.813302040100098
    5. 'ue' → logprob: -12.938302040100098
    6. '＝' → logprob: -13.438302040100098
    7. ' ' → logprob: -13.688302040100098
    8. ',' → logprob: -14.438302040100098
    9. 'e' → logprob: -14.813302040100098
    10. 'deque' → logprob: -14.813302040100098

Token 217: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.008623793721199036
    2. ' deque' → logprob: -4.7586236000061035
    3. 'de' → logprob: -11.633624076843262
    4. 'Deque' → logprob: -15.633624076843262
    5. 'collections' → logprob: -15.883624076843262
    6. '	de' → logprob: -16.883623123168945
    7. ' ' → logprob: -17.258623123168945
    8. '(de' → logprob: -18.258623123168945
    9. 'dq' → logprob: -18.383623123168945
    10. '   ' → logprob: -18.383623123168945

Token 218: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.11996734328568e-05
    2. '()
' → logprob: -10.375041007995605
    3. '([]' → logprob: -12.625041007995605
    4. '()]' → logprob: -13.500041007995605
    5. '(' → logprob: -13.750041007995605
    6. '()\' → logprob: -14.000041007995605
    7. '()

' → logprob: -14.125041007995605
    8. '[]' → logprob: -14.250041007995605
    9. '()>' → logprob: -14.625041007995605
    10. '()<' → logprob: -15.375041007995605

Token 219: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7567217946052551
    2. '       ' → logprob: -1.0067217350006104
    3. '   ' → logprob: -2.1317217350006104
    4. '<|end|>' → logprob: -3.8817217350006104
    5. ' ' → logprob: -4.6317219734191895
    6. '    ' → logprob: -5.6317219734191895
    7. ' 
' → logprob: -6.2567219734191895
    8. '    
' → logprob: -6.2567219734191895
    9. '        
' → logprob: -6.3817219734191895
    10. '
' → logprob: -6.6317219734191895

Token 220: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5337501764297485
    2. 'for' → logprob: -0.9087501764297485
    3. '   ' → logprob: -4.908750057220459
    4. '           ' → logprob: -5.908750057220459
    5. '    ' → logprob: -8.408750534057617
    6. '       ' → logprob: -9.283750534057617
    7. 'dp' → logprob: -10.408750534057617
    8. ' dp' → logprob: -10.658750534057617
    9. '            ' → logprob: -10.908750534057617
    10. ' ' → logprob: -10.908750534057617

Token 221: ' イン' (ID: 152245)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1362883448600769
    2. ' for' → logprob: -2.1362884044647217
    3. 'r' → logprob: -5.636288166046143
    4. 'dp' → logprob: -6.136288166046143
    5. 'start' → logprob: -8.1362886428833
    6. ' r' → logprob: -8.3862886428833
    7. '   ' → logprob: -8.3862886428833
    8. 'i' → logprob: -8.3862886428833
    9. 'offset' → logprob: -8.5112886428833
    10. ' dp' → logprob: -8.5112886428833

Token 222: 'デ' (ID: 20951)
  Prédit: 'デ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'デ' → logprob: -0.6200824975967407
    2. 'd' → logprob: -1.4950824975967407
    3. 'dex' → logprob: -2.370082378387451
    4. 'д' → logprob: -2.995082378387451
    5. 'for' → logprob: -3.370082378387451
    6. 'dx' → logprob: -3.495082378387451
    7. 'de' → logprob: -4.745082378387451
    8. 'x' → logprob: -4.745082378387451
    9. '   ' → logprob: -6.120082378387451
    10. '```' → logprob: -6.370082378387451

Token 223: 'ックス' (ID: 77123)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.237474262714386
    2. 'ックス' → logprob: -2.112474203109741
    3. 'ント' → logprob: -2.487474203109741
    4. 'xes' → logprob: -6.36247444152832
    5. 'ク' → logprob: -6.48747444152832
    6. 'ット' → logprob: -7.11247444152832
    7. 'xed' → logprob: -7.23747444152832
    8. '```' → logprob: -7.36247444152832
    9. 'xs' → logprob: -8.23747444152832
    10. 'キ' → logprob: -8.48747444152832

Token 224: 'の' (ID: 3385)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7697396874427795
    2. ' =' → logprob: -1.3947396278381348
    3. ' for' → logprob: -1.6447396278381348
    4. 'for' → logprob: -3.5197396278381348
    5. 's' → logprob: -4.269739627838135
    6. ' in' → logprob: -4.519739627838135
    7. 'start' → logprob: -5.019739627838135
    8. '<|end|>' → logprob: -5.519739627838135
    9. ',' → logprob: -5.644739627838135
    10. ' s' → logprob: -5.769739627838135

Token 225: 'mod' (ID: 4847)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3105805218219757
    2. 'dp' → logprob: -2.3105804920196533
    3. 'for' → logprob: -2.4355804920196533
    4. 'r' → logprob: -4.060580730438232
    5. 'md' → logprob: -4.185580730438232
    6. ' range' → logprob: -4.685580730438232
    7. 'start' → logprob: -5.060580730438232
    8. 're' → logprob: -5.435580730438232
    9. 'mod' → logprob: -5.685580730438232
    10. '0' → logprob: -5.935580730438232

Token 226: 'が' (ID: 6632)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.14080579578876495
    2. ' w' → logprob: -2.140805721282959
    3. '=' → logprob: -5.265805721282959
    4. ' =' → logprob: -5.515805721282959
    5. ' ' → logprob: -7.015805721282959
    6. 'を' → logprob: -7.015805721282959
    7. 'が' → logprob: -7.640805721282959
    8. '=w' → logprob: -7.765805721282959
    9. ' ==' → logprob: -8.515806198120117
    10. '   ' → logprob: -8.515806198120117

Token 227: '等' (ID: 11167)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.002136101946234703
    2. ' md' → logprob: -6.50213623046875
    3. 'w' → logprob: -7.50213623046875
    4. '	md' → logprob: -10.62713623046875
    5. '(md' → logprob: -10.75213623046875
    6. '0' → logprob: -11.75213623046875
    7. 'wd' → logprob: -12.12713623046875
    8. ' ' → logprob: -12.50213623046875
    9. ' w' → logprob: -12.62713623046875
    10. 'm' → logprob: -13.12713623046875

Token 228: 'しい' (ID: 63386)
  Prédit: 'しい'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'しい' → logprob: -0.6139030456542969
    2. '=' → logprob: -1.3639030456542969
    3. 'w' → logprob: -2.613903045654297
    4. 'a' → logprob: -3.113903045654297
    5. 'しく' → logprob: -3.738903045654297
    6. 'md' → logprob: -4.113903045654297
    7. '==' → logprob: -4.488903045654297
    8. 'い' → logprob: -5.113903045654297
    9. '(md' → logprob: -5.488903045654297
    10. '```' → logprob: -5.738903045654297

Token 229: '要' (ID: 7724)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12960869073867798
    2. 'for' → logprob: -2.254608631134033
    3. '   ' → logprob: -5.379608631134033
    4. '           ' → logprob: -5.379608631134033
    5. '       ' → logprob: -6.629608631134033
    6. 'で' → logprob: -6.879608631134033
    7. ' =' → logprob: -7.129608631134033
    8. ' range' → logprob: -7.379608631134033
    9. 'の' → logprob: -7.629608631134033
    10. ',' → logprob: -7.879608631134033

Token 230: '素' (ID: 31399)
  Prédit: '素'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '素' → logprob: -0.064078189432621
    2. 'う' → logprob: -3.5640780925750732
    3. 'る' → logprob: -5.189078330993652
    4. 'す' → logprob: -5.689078330993652
    5. 'じ' → logprob: -5.814078330993652
    6. 'と' → logprob: -6.189078330993652
    7. 'た' → logprob: -6.314078330993652
    8. 'な' → logprob: -6.689078330993652
    9. 'て' → logprob: -6.689078330993652
    10. 'ス' → logprob: -6.814078330993652

Token 231: 'だけ' (ID: 121885)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.3972488641738892
    2. 'で' → logprob: -1.3972488641738892
    3. 'を' → logprob: -1.6472488641738892
    4. '   ' → logprob: -2.1472487449645996
    5. ' for' → logprob: -3.2722487449645996
    6. 'は' → logprob: -3.5222487449645996
    7. 'for' → logprob: -3.8972487449645996
    8. 'として' → logprob: -4.2722487449646
    9. ' を' → logprob: -4.3972487449646
    10. 'だけ' → logprob: -4.3972487449646

Token 232: '取り' (ID: 129758)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6648027896881104
    2. '           ' → logprob: -1.2898027896881104
    3. 'for' → logprob: -2.0398027896881104
    4. '   ' → logprob: -3.0398027896881104
    5. 'を' → logprob: -4.039802551269531
    6. '       ' → logprob: -5.039802551269531
    7. 'で' → logprob: -5.289802551269531
    8. 'の' → logprob: -6.539802551269531
    9. ' in' → logprob: -8.414802551269531
    10. 'とな' → logprob: -8.789802551269531

Token 233: '出' (ID: 6390)
  Prédit: '出'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '出' → logprob: -0.11508885025978088
    2. '扱' → logprob: -3.740088939666748
    3. 'だ' → logprob: -3.990088939666748
    4. '入' → logprob: -4.115088939666748
    5. '込' → logprob: -4.490088939666748
    6. '```' → logprob: -4.740088939666748
    7. '除' → logprob: -5.240088939666748
    8. 'なが' → logprob: -5.490088939666748
    9. '、' → logprob: -5.615088939666748
    10. 'deque' → logprob: -6.240088939666748

Token 234: 'した' (ID: 23085)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.1718151569366455
    2. 'し' → logprob: -2.2968151569366455
    3. 'して' → logprob: -3.0468151569366455
    4. '   ' → logprob: -5.046814918518066
    5. 'され' → logprob: -6.546814918518066
    6. '```' → logprob: -7.671814918518066
    7. 's' → logprob: -8.296814918518066
    8. 'せ' → logprob: -8.546814918518066
    9. ' ' → logprob: -8.671814918518066
    10. 'します' → logprob: -9.171814918518066

Token 235: '数' (ID: 7135)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4582839906215668
    2. 'for' → logprob: -1.0832840204238892
    3. ' range' → logprob: -4.7082839012146
    4. 'range' → logprob: -4.7082839012146
    5. '   ' → logprob: -6.3332839012146
    6. 'dp' → logprob: -6.5832839012146
    7. ' i' → logprob: -6.8332839012146
    8. ',' → logprob: -6.9582839012146
    9. 'idx' → logprob: -7.2082839012146
    10. ' ' → logprob: -7.2082839012146

Token 236: '列' (ID: 19047)
  Prédit: '列'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '列' → logprob: -0.15644578635692596
    2. '           ' → logprob: -2.4064457416534424
    3. '       ' → logprob: -3.9064457416534424
    4. '=' → logprob: -4.4064459800720215
    5. ' =' → logprob: -4.6564459800720215
    6. '   ' → logprob: -5.7814459800720215
    7. '[]' → logprob: -6.4064459800720215
    8. 'for' → logprob: -6.6564459800720215
    9. '               ' → logprob: -6.9064459800720215
    10. 'を' → logprob: -7.4064459800720215

Token 237: 'の' (ID: 3385)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0778825283050537
    2. '           ' → logprob: -1.0778825283050537
    3. ',' → logprob: -2.2028825283050537
    4. 'を' → logprob: -2.3278825283050537
    5. 'の' → logprob: -3.7028825283050537
    6. ' for' → logprob: -4.327882766723633
    7. '=' → logprob: -4.452882766723633
    8. ':' → logprob: -4.577882766723633
    9. '   ' → logprob: -4.702882766723633
    10. 'for' → logprob: -4.702882766723633

Token 238: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23380151391029358
    2. '部分' → logprob: -2.7338016033172607
    3. 'dp' → logprob: -3.2338016033172607
    4. '長' → logprob: -3.8588016033172607
    5. 'length' → logprob: -3.8588016033172607
    6. 'values' → logprob: -4.108801364898682
    7. ' for' → logprob: -4.108801364898682
    8. 'indices' → logprob: -5.483801364898682
    9. 'vals' → logprob: -5.608801364898682
    10. 'len' → logprob: -5.983801364898682

Token 239: '番' (ID: 30357)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0697543621063232
    2. ' =' → logprob: -1.3197543621063232
    3. '=' → logprob: -1.5697543621063232
    4. 'nd' → logprob: -1.8197543621063232
    5. 'f' → logprob: -5.194754600524902
    6. 'for' → logprob: -5.819754600524902
    7. '=n' → logprob: -6.694754600524902
    8. 'dx' → logprob: -6.819754600524902
    9. ' for' → logprob: -7.069754600524902
    10. 'nt' → logprob: -7.319754600524902

Token 240: '目' (ID: 10441)
  Prédit: '目'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '目' → logprob: -0.022224657237529755
    2. ']' → logprob: -4.897224426269531
    3. ')' → logprob: -6.022224426269531
    4. '   ' → logprob: -6.397224426269531
    5. '=' → logprob: -6.772224426269531
    6. 'の' → logprob: -6.897224426269531
    7. 'を' → logprob: -7.272224426269531
    8. '...' → logprob: -7.397224426269531
    9. 'token' → logprob: -7.522224426269531
    10. '```' → logprob: -7.522224426269531

Token 241: 'に' (ID: 5280)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8860604763031006
    2. ' =' → logprob: -1.5110604763031006
    3. ' for' → logprob: -1.7610604763031006
    4. 'for' → logprob: -2.2610604763031006
    5. ',' → logprob: -3.2610604763031006
    6. ':' → logprob: -4.26106071472168
    7. ' in' → logprob: -4.51106071472168
    8. ')' → logprob: -5.26106071472168
    9. 'の' → logprob: -5.76106071472168
    10. '   ' → logprob: -5.88606071472168

Token 242: '対' (ID: 44518)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9116771221160889
    2. ' for' → logprob: -2.161677122116089
    3. 'w' → logprob: -2.286677122116089
    4. 'v' → logprob: -2.536677122116089
    5. ')' → logprob: -2.661677122116089
    6. 'value' → logprob: -3.911677122116089
    7. ' ' → logprob: -4.036677360534668
    8. ' i' → logprob: -4.161677360534668
    9. '対応' → logprob: -4.286677360534668
    10. 'i' → logprob: -4.536677360534668

Token 243: 'して' (ID: 22440)
  Prédit: '応'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '応' → logprob: -0.6093408465385437
    2. 'して' → logprob: -0.9843408465385437
    3. 'し' → logprob: -3.1093409061431885
    4. 'する' → logprob: -3.3593409061431885
    5. '응' → logprob: -6.859340667724609
    6. '```' → logprob: -7.359340667724609
    7. 'す' → logprob: -7.484340667724609
    8. 'じ' → logprob: -8.23434066772461
    9. '应' → logprob: -8.48434066772461
    10. '象' → logprob: -9.35934066772461

Token 244: 'の' (ID: 3385)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11911892890930176
    2. 'for' → logprob: -3.1191189289093018
    3. ' i' → logprob: -4.119118690490723
    4. '    ' → logprob: -4.369118690490723
    5. ' ' → logprob: -4.494118690490723
    6. ' w' → logprob: -5.619118690490723
    7. '            ' → logprob: -5.744118690490723
    8. ' dp' → logprob: -6.244118690490723
    9. ')' → logprob: -6.431618690490723
    10. '           ' → logprob: -6.494118690490723

Token 245: '処' (ID: 158556)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8635353446006775
    2. 'dp' → logprob: -1.2385354042053223
    3. ' for' → logprob: -2.3635354042053223
    4. 'value' → logprob: -2.6135354042053223
    5. ' dp' → logprob: -2.8635354042053223
    6. ' value' → logprob: -3.7385354042053223
    7. 'val' → logprob: -4.488535404205322
    8. 'max' → logprob: -5.363535404205322
    9. 'v' → logprob: -5.988535404205322
    10. ' val' → logprob: -6.238535404205322

Token 246: '理' (ID: 5584)
  Prédit: '理'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '理' → logprob: -4.215330409351736e-05
    2. '```' → logprob: -10.625041961669922
    3. '置' → logprob: -11.500041961669922
    4. '   ' → logprob: -12.875041961669922
    5. '分' → logprob: -13.500041961669922
    6. '論' → logprob: -14.375041961669922
    7. '続' → logprob: -14.375041961669922
    8. '里' → logprob: -15.000041961669922
    9. '       ' → logprob: -15.500041961669922
    10. '
' → logprob: -15.625041961669922

Token 247: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04344888776540756
    2. ' for' → logprob: -4.1684489250183105
    3. ':' → logprob: -4.7934489250183105
    4. '   ' → logprob: -5.1684489250183105
    5. '
' → logprob: -5.9184489250183105
    6. ',' → logprob: -6.5434489250183105
    7. '       ' → logprob: -6.6684489250183105
    8. '    
' → logprob: -6.7934489250183105
    9. '\n' → logprob: -6.9184489250183105
    10. '<|end|>' → logprob: -7.1684489250183105

Token 248: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6009783148765564
    2. ' ' → logprob: -1.6009783744812012
    3. ' 
' → logprob: -2.725978374481201
    4. '    ' → logprob: -2.850978374481201
    5. ' for' → logprob: -3.350978374481201
    6. '       ' → logprob: -3.850978374481201
    7. '   ' → logprob: -4.100978374481201
    8. '    
' → logprob: -4.350978374481201
    9. '            ' → logprob: -4.975978374481201
    10. '     
' → logprob: -5.100978374481201

Token 249: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0426565557718277
    2. 'for' (adapté à ' for') → logprob: -3.417656660079956
    3. '           ' → logprob: -4.917656421661377
    4. '            ' → logprob: -7.542656421661377
    5. '    ' → logprob: -8.042656898498535
    6. ' i' → logprob: -8.292656898498535
    7. '   ' → logprob: -8.917656898498535
    8. 'n' → logprob: -8.917656898498535
    9. ' n' → logprob: -9.417656898498535
    10. 'i' → logprob: -9.667656898498535

Token 250: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6568755507469177
    2. ' i' → logprob: -1.1568756103515625
    3. 'j' → logprob: -2.5318756103515625
    4. ' j' → logprob: -3.4068756103515625
    5. 'x' → logprob: -4.0318756103515625
    6. 'k' → logprob: -4.1568756103515625
    7. ' x' → logprob: -5.0318756103515625
    8. ' k' → logprob: -5.2818756103515625
    9. 'v' → logprob: -6.0318756103515625
    10. ' v' → logprob: -6.6568756103515625

Token 251: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28228792548179626
    2. 'in' → logprob: -1.4072879552841187
    3. ' ' → logprob: -6.907288074493408
    4. '	in' → logprob: -10.15728759765625
    5. ',' → logprob: -10.53228759765625
    6. '_in' → logprob: -11.28228759765625
    7. '<|end|>' → logprob: -11.53228759765625
    8. '　' → logprob: -11.90728759765625
    9. 'n' → logprob: -12.40728759765625
    10. 'range' → logprob: -12.40728759765625

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009118211455643177
    2. ' range' → logprob: -7.000911712646484
    3. '(range' → logprob: -15.125911712646484
    4. '	range' → logprob: -17.000911712646484
    5. 'rang' → logprob: -17.250911712646484
    6. ' ' → logprob: -18.500911712646484
    7. 'r' → logprob: -18.750911712646484
    8. '
' → logprob: -19.750911712646484
    9. '   ' → logprob: -19.875911712646484
    10. ' xrange' → logprob: -20.375911712646484

Token 253: '((' (ID: 2054)
  Prédit: '(md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(md' → logprob: -0.015565255656838417
    2. '((' → logprob: -4.265565395355225
    3. '(' → logprob: -6.640565395355225
    4. 'md' → logprob: -10.265564918518066
    5. '(((' → logprob: -10.515564918518066
    6. '(m' → logprob: -10.765564918518066
    7. '	md' → logprob: -13.140564918518066
    8. '(w' → logprob: -13.640564918518066
    9. '()' → logprob: -13.765564918518066
    10. ' (' → logprob: -14.015564918518066

Token 254: 'wn' (ID: 1772)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01028849370777607
    2. ' (' → logprob: -5.135288715362549
    3. '(md' → logprob: -6.010288715362549
    4. '(w' → logprob: -7.260288715362549
    5. 'wn' → logprob: -7.385288715362549
    6. '   ' → logprob: -8.26028823852539
    7. '((' → logprob: -9.13528823852539
    8. 'md' → logprob: -9.76028823852539
    9. ' ' → logprob: -9.88528823852539
    10. '(n' → logprob: -10.63528823852539

Token 255: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08046150952577591
    2. '-' → logprob: -2.8304615020751953
    3. '-md' → logprob: -4.080461502075195
    4. '-m' → logprob: -7.455461502075195
    5. '-d' → logprob: -7.705461502075195
    6. '-w' → logprob: -8.080461502075195
    7. '+' → logprob: -10.330461502075195
    8. ' ' → logprob: -11.080461502075195
    9. '   ' → logprob: -11.330461502075195
    10. 'md' → logprob: -11.830461502075195

Token 256: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.00034702493576332927
    2. ' md' → logprob: -8.000347137451172
    3. 'w' → logprob: -11.750347137451172
    4. '   ' → logprob: -13.625347137451172
    5. '	md' → logprob: -14.125347137451172
    6. '(md' → logprob: -14.875347137451172
    7. 'mn' → logprob: -15.000347137451172
    8. 'wd' → logprob: -15.250347137451172
    9. 'm' → logprob: -15.625347137451172
    10. '    ' → logprob: -15.750347137451172

Token 257: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008741151541471481
    2. ')//' → logprob: -4.75874137878418
    3. ' )' → logprob: -10.25874137878418
    4. '-' → logprob: -10.38374137878418
    5. ' -' → logprob: -10.75874137878418
    6. '+' → logprob: -10.75874137878418
    7. '   ' → logprob: -12.13374137878418
    8. ')
' → logprob: -12.63374137878418
    9. '0' → logprob: -12.75874137878418
    10. ')#' → logprob: -13.50874137878418

Token 258: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04885066673159599
    2. ')//' → logprob: -3.5488507747650146
    3. '//' → logprob: -4.4238505363464355
    4. ' //' → logprob: -5.5488505363464355
    5. ' )' → logprob: -6.1738505363464355
    6. '+' → logprob: -7.5488505363464355
    7. '   ' → logprob: -8.923851013183594
    8. ' ' → logprob: -9.923851013183594
    9. ' +' → logprob: -10.173851013183594
    10. '
' → logprob: -10.798851013183594

Token 259: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0036017363891005516
    2. ' w' → logprob: -5.628601551055908
    3. '   ' → logprob: -14.253602027893066
    4. '	w' → logprob: -14.628602027893066
    5. ' ' → logprob: -15.253602027893066
    6. '    ' → logprob: -16.12860107421875
    7. '       ' → logprob: -16.12860107421875
    8. '           ' → logprob: -17.00360107421875
    9. '  ' → logprob: -17.62860107421875
    10. '     ' → logprob: -17.75360107421875

Token 260: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2748444080352783
    2. ' +' → logprob: -1.7748444080352783
    3. '):' → logprob: -2.6498444080352783
    4. '):
' → logprob: -9.3998441696167
    5. '+:' → logprob: -11.0248441696167
    6. ' ):' → logprob: -11.2748441696167
    7. ',' → logprob: -11.8998441696167
    8. ')' → logprob: -12.3998441696167
    9. ' plus' → logprob: -12.7748441696167
    10. ')+' → logprob: -13.1498441696167

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009148012613877654
    2. ' ' → logprob: -7.000914573669434
    3. '   ' → logprob: -12.875914573669434
    4. ')' → logprob: -16.12591552734375
    5. '2' → logprob: -16.25091552734375
    6. '    ' → logprob: -16.25091552734375
    7. '１' → logprob: -16.37591552734375
    8. '  ' → logprob: -16.75091552734375
    9. '       ' → logprob: -17.37591552734375
    10. '	' → logprob: -17.50091552734375

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.32392441527918e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.500053405761719
    4. ')' → logprob: -16.50005340576172
    5. '１' → logprob: -17.12505340576172
    6. '2' → logprob: -17.25005340576172
    7. '```' → logprob: -17.25005340576172
    8. '
' → logprob: -17.75005340576172
    9. '	' → logprob: -17.87505340576172
    10. '  ' → logprob: -18.00005340576172

Token 263: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003261679667048156
    2. ' ):' → logprob: -8.625326156616211
    3. '):
' → logprob: -9.125326156616211
    4. ':' → logprob: -10.875326156616211
    5. ')' → logprob: -11.125326156616211
    6. '       ' → logprob: -13.250326156616211
    7. ',' → logprob: -14.250326156616211
    8. '):
' → logprob: -14.750326156616211
    9. '   ' → logprob: -14.875326156616211
    10. ')：' → logprob: -15.750326156616211

Token 264: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07806330919265747
    2. '<|end|>' → logprob: -3.4530632495880127
    3. '               ' → logprob: -4.953063488006592
    4. '       ' → logprob: -4.953063488006592
    5. ' 
' → logprob: -5.328063488006592
    6. '        ' → logprob: -5.578063488006592
    7. ',' → logprob: -5.578063488006592
    8. '           ' → logprob: -5.703063488006592
    9. ')' → logprob: -6.078063488006592
    10. ' )' → logprob: -6.203063488006592

Token 265: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4246811866760254
    2. 'j' → logprob: -1.9246811866760254
    3. 'pos' → logprob: -3.0496811866760254
    4. 'x' → logprob: -3.5496811866760254
    5. 'index' → logprob: -3.6746811866760254
    6. '           ' → logprob: -3.7996811866760254
    7. 'val' → logprob: -4.049681186676025
    8. ' idx' → logprob: -4.674681186676025
    9. ' j' → logprob: -4.799681186676025
    10. 'ind' → logprob: -4.924681186676025

Token 266: ' 更新' (ID: 73885)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7081431150436401
    2. 'x' → logprob: -1.8331431150436401
    3. 'val' → logprob: -1.8331431150436401
    4. 'j' → logprob: -2.5831432342529297
    5. 'pos' → logprob: -3.4581432342529297
    6. 'index' → logprob: -4.45814323425293
    7. 'if' → logprob: -4.95814323425293
    8. 'while' → logprob: -5.08314323425293
    9. 'cur' → logprob: -5.20814323425293
    10. 'ind' → logprob: -5.20814323425293

Token 267: 'した' (ID: 23085)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0910134315490723
    2. ' val' → logprob: -1.5910134315490723
    3. '                   ' → logprob: -1.9660134315490723
    4. '               ' → logprob: -2.4660134315490723
    5. 'val' → logprob: -3.2160134315490723
    6. '                ' → logprob: -3.8410134315490723
    7. ' value' → logprob: -4.091013431549072
    8. ' v' → logprob: -4.091013431549072
    9. ' dp' → logprob: -4.591013431549072
    10. ' idx' → logprob: -4.716013431549072

Token 268: 'い' (ID: 3826)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.1549464464187622
    2. 'v' → logprob: -1.4049464464187622
    3. ' val' → logprob: -1.4049464464187622
    4. ' v' → logprob: -2.6549463272094727
    5. '_val' → logprob: -3.4049463272094727
    6. ' dp' → logprob: -3.9049463272094727
    7. 'value' → logprob: -4.154946327209473
    8. 'dp' → logprob: -4.529946327209473
    9. ' value' → logprob: -5.029946327209473
    10. ' =' → logprob: -5.529946327209473

Token 269: '場所' (ID: 159205)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7287783026695251
    2. 'val' → logprob: -1.22877836227417
    3. 'pos' → logprob: -2.10377836227417
    4. 'j' → logprob: -3.72877836227417
    5. 'index' → logprob: -3.85377836227417
    6. 'cost' → logprob: -3.97877836227417
    7. 'value' → logprob: -4.10377836227417
    8. 'cur' → logprob: -5.60377836227417
    9. 'v' → logprob: -5.60377836227417
    10. 'dp' → logprob: -5.97877836227417

Token 270: 'の' (ID: 3385)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07216307520866394
    2. '=' → logprob: -3.1971631050109863
    3. 'idx' → logprob: -3.6971631050109863
    4. '                ' → logprob: -7.197163105010986
    5. '               ' → logprob: -7.572163105010986
    6. 's' → logprob: -8.072162628173828
    7. ' idx' → logprob: -8.072162628173828
    8. '_idx' → logprob: -8.072162628173828
    9. ',' → logprob: -8.322162628173828
    10. '                   ' → logprob: -8.322162628173828

Token 271: '今' (ID: 10941)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8533732295036316
    2. 'j' → logprob: -1.4783732891082764
    3. 'index' → logprob: -2.2283732891082764
    4. 'val' → logprob: -2.6033732891082764
    5. 'pos' → logprob: -2.7283732891082764
    6. 'value' → logprob: -2.9783732891082764
    7. 'dp' → logprob: -4.103373050689697
    8. 'weight' → logprob: -4.603373050689697
    9. 'ind' → logprob: -4.978373050689697
    10. 'x' → logprob: -5.353373050689697

Token 272: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.05006908252835274
    2. 'dp' → logprob: -3.4250690937042236
    3. '_value' → logprob: -5.3000688552856445
    4. 'value' → logprob: -5.5500688552856445
    5. '_dp' → logprob: -5.6750688552856445
    6. '_' → logprob: -6.5500688552856445
    7. '値' → logprob: -7.1750688552856445
    8. '回' → logprob: -8.050068855285645
    9. '_val' → logprob: -8.175068855285645
    10. 'val' → logprob: -9.050068855285645

Token 273: '値' (ID: 69555)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0062586660496890545
    2. 'value' → logprob: -5.631258487701416
    3. '値' → logprob: -6.131258487701416
    4. ' dp' → logprob: -8.631258964538574
    5. 'i' → logprob: -9.256258964538574
    6. 'val' → logprob: -9.506258964538574
    7. 'idx' → logprob: -10.256258964538574
    8. 'index' → logprob: -10.756258964538574
    9. '価' → logprob: -10.881258964538574
    10. 'score' → logprob: -11.131258964538574

Token 274: 'を' (ID: 7277)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07645824551582336
    2. '=' → logprob: -2.826458215713501
    3. ',' → logprob: -5.07645845413208
    4. '                ' → logprob: -5.57645845413208
    5. '               ' → logprob: -5.70145845413208
    6. 'idx' → logprob: -8.701457977294922
    7. '                   ' → logprob: -9.451457977294922
    8. 'to' → logprob: -9.576457977294922
    9. 'v' → logprob: -9.826457977294922
    10. '                    ' → logprob: -9.951457977294922

Token 275: '、' (ID: 1395)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0029694996774196625
    2. ' dp' → logprob: -6.252969264984131
    3. '-' → logprob: -8.127969741821289
    4. '-d' → logprob: -8.127969741821289
    5. 'i' → logprob: -8.877969741821289
    6. '0' → logprob: -10.002969741821289
    7. '   ' → logprob: -10.002969741821289
    8. 'd' → logprob: -10.377969741821289
    9. 'tmp' → logprob: -10.377969741821289
    10. ' -' → logprob: -10.502969741821289

Token 276: '先' (ID: 12231)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12490102648735046
    2. ' dp' → logprob: -2.999901056289673
    3. 'val' → logprob: -3.374901056289673
    4. 'cur' → logprob: -4.874900817871094
    5. 'v' → logprob: -4.999900817871094
    6. 'i' → logprob: -5.624900817871094
    7. 'tmp' → logprob: -6.249900817871094
    8. ' val' → logprob: -6.499900817871094
    9. 'idx' → logprob: -6.499900817871094
    10. 'value' → logprob: -6.499900817871094

Token 277: '頭' (ID: 73036)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7482017278671265
    2. 'q' → logprob: -2.248201847076416
    3. '頭' → logprob: -2.373201847076416
    4. 'deque' → logprob: -2.498201847076416
    5. 'pop' → logprob: -3.123201847076416
    6. '0' → logprob: -3.123201847076416
    7. '#' → logprob: -3.123201847076416
    8. 'dp' → logprob: -3.373201847076416
    9. 'append' → logprob: -3.498201847076416
    10. 'op' → logprob: -3.623201847076416

Token 278: 'まで' (ID: 54342)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.6410704851150513
    2. 'q' → logprob: -2.1410703659057617
    3. 'の' → logprob: -2.2660703659057617
    4. ' ' → logprob: -2.5160703659057617
    5. 'と' → logprob: -2.8910703659057617
    6. '[' → logprob: -3.8910703659057617
    7. ')' → logprob: -4.016070365905762
    8. ' の' → logprob: -4.141070365905762
    9. ' -' → logprob: -4.391070365905762
    10. ' )' → logprob: -5.391070365905762

Token 279: '戻' (ID: 175677)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.9080572128295898
    2. 'dp' → logprob: -1.5330572128295898
    3. 'while' → logprob: -2.28305721282959
    4. ' q' → logprob: -2.65805721282959
    5. ' dp' → logprob: -3.03305721282959
    6. 'の' → logprob: -3.40805721282959
    7. 'と' → logprob: -3.40805721282959
    8. ' while' → logprob: -3.40805721282959
    9. 'dq' → logprob: -3.90805721282959
    10. ' dq' → logprob: -5.40805721282959

Token 280: 'した' (ID: 23085)
  Prédit: 'り'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'り' → logprob: -0.5630940198898315
    2. 'って' → logprob: -1.1880940198898315
    3. 'る' → logprob: -3.313094139099121
    4. 'し' → logprob: -3.438094139099121
    5. 'っ' → logprob: -3.813094139099121
    6. '```' → logprob: -4.188094139099121
    7. 'す' → logprob: -4.813094139099121
    8. 'して' → logprob: -5.313094139099121
    9. '
' → logprob: -6.313094139099121
    10. '(' → logprob: -7.063094139099121

Token 281: 'と' (ID: 5330)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.500491738319397
    2. ' while' → logprob: -1.500491738319397
    3. 'dp' → logprob: -2.8754916191101074
    4. 'q' → logprob: -3.1254916191101074
    5. 'と' → logprob: -4.000491619110107
    6. '値' → logprob: -4.500491619110107
    7. ' q' → logprob: -4.875491619110107
    8. ' dp' → logprob: -4.875491619110107
    9. 'り' → logprob: -5.625491619110107
    10. 'd' → logprob: -6.125491619110107

Token 282: '�' (ID: 1467)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.002899974351748824
    2. 'いて' → logprob: -7.377900123596191
    3. '```' → logprob: -7.377900123596191
    4. 'ば' → logprob: -8.002900123596191
    5. 'q' → logprob: -8.377900123596191
    6. 'じ' → logprob: -8.502900123596191
    7. 'り' → logprob: -9.127900123596191
    8. 'こ' → logprob: -9.502900123596191
    9. 'して' → logprob: -9.627900123596191
    10. 'i' → logprob: -9.752900123596191

Token 283: '�' (ID: 106)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.0011334281880408525
    2. 'ころ' → logprob: -7.626133441925049
    3. 'きを' → logprob: -8.37613296508789
    4. '```' → logprob: -8.50113296508789
    5. 'して' → logprob: -9.37613296508789
    6. 'こ' → logprob: -10.37613296508789
    7. '#' → logprob: -11.12613296508789
    8. 'いて' → logprob: -11.25113296508789
    9. 'ろ' → logprob: -12.12613296508789
    10. '�' → logprob: -12.12613296508789

Token 284: '定' (ID: 8745)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.002682541264221072
    2. 'きを' → logprob: -6.377682685852051
    3. '```' → logprob: -8.62768268585205
    4. 'こ' → logprob: -9.25268268585205
    5. 'け' → logprob: -9.50268268585205
    6. '1' → logprob: -9.62768268585205
    7. 'じ' → logprob: -9.62768268585205
    8. 'ろ' → logprob: -10.25268268585205
    9. 'た' → logprob: -10.25268268585205
    10. 'ころ' → logprob: -10.25268268585205

Token 285: 'した' (ID: 23085)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.009987685829401016
    2. 'た' → logprob: -6.384987831115723
    3. '0' → logprob: -6.509987831115723
    4. '```' → logprob: -7.259987831115723
    5. 'け' → logprob: -7.384987831115723
    6. '1' → logprob: -7.634987831115723
    7. 'こ' → logprob: -7.884987831115723
    8. 'い' → logprob: -8.009987831115723
    9. 'きを' → logprob: -8.009987831115723
    10. '#' → logprob: -8.134987831115723

Token 286: '値' (ID: 69555)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.011664948426187038
    2. '```' → logprob: -5.636664867401123
    3. 'こ' → logprob: -6.261664867401123
    4. 'け' → logprob: -6.261664867401123
    5. 'た' → logprob: -7.136664867401123
    6. 'ころ' → logprob: -7.761664867401123
    7. 'い' → logprob: -7.886664867401123
    8. 'x' → logprob: -8.136665344238281
    9. 'して' → logprob: -8.511665344238281
    10. 'いて' → logprob: -8.886665344238281

Token 287: 'で' (ID: 4344)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.14854946732521057
    2. 'v' → logprob: -3.0235495567321777
    3. 'いて' → logprob: -4.148549556732178
    4. 'いた' → logprob: -4.523549556732178
    5. '```' → logprob: -4.773549556732178
    6. 'ころ' → logprob: -5.148549556732178
    7. ' v' → logprob: -5.273549556732178
    8. '#' → logprob: -5.648549556732178
    9. 'た' → logprob: -5.773549556732178
    10. 'して' → logprob: -5.773549556732178

Token 288: '持' (ID: 17592)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4070113897323608
    2. 'す' → logprob: -1.9070113897323608
    3. 'は' → logprob: -2.1570115089416504
    4. '比較' → logprob: -2.2820115089416504
    5. '#' → logprob: -2.6570115089416504
    6. 'dp' → logprob: -2.7820115089416504
    7. 'き' → logprob: -3.5320115089416504
    8. 'dq' → logprob: -3.7820115089416504
    9. 'w' → logprob: -4.03201150894165
    10. 'いて' → logprob: -4.15701150894165

Token 289: 'って' (ID: 30677)
  Prédit: 'って'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'って' → logprob: -0.47712817788124084
    2. 'つ' → logprob: -2.602128267288208
    3. '続' → logprob: -2.727128267288208
    4. '```' → logprob: -2.852128267288208
    5. 'った' → logprob: -2.977128267288208
    6. 'っています' → logprob: -3.477128267288208
    7. 'ち' → logprob: -3.602128267288208
    8. '#' → logprob: -4.102128028869629
    9. 'q' → logprob: -4.477128028869629
    10. '0' → logprob: -5.102128028869629

Token 290: 'お' (ID: 8930)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -1.2571126222610474
    2. 'き' → logprob: -1.6321126222610474
    3. 'い' → logprob: -1.7571126222610474
    4. 'います' → logprob: -2.257112503051758
    5. 'お' → logprob: -2.882112503051758
    6. 'く' → logprob: -3.007112503051758
    7. 'いる' → logprob: -3.382112503051758
    8. '```' → logprob: -3.632112503051758
    9. 'いて' → logprob: -3.882112503051758
    10. 'ら' → logprob: -4.382112503051758

Token 291: 'く' (ID: 10459)
  Prédit: 'き'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -1.0934487581253052
    2. 'く' → logprob: -1.2184487581253052
    3. 'け' → logprob: -2.0934486389160156
    4. '```' → logprob: -2.4684486389160156
    5. 'いて' → logprob: -3.0934486389160156
    6. 'ら' → logprob: -3.7184486389160156
    7. 'か' → logprob: -4.218448638916016
    8. 'い' → logprob: -4.468448638916016
    9. '   ' → logprob: -4.843448638916016
    10. 'る' → logprob: -5.218448638916016

Token 292: '
' (ID: 198)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.8515398502349854
    2. 'き' → logprob: -2.1015398502349854
    3. 'いて' → logprob: -2.3515398502349854
    4. 'いた' → logprob: -2.3515398502349854
    5. 'ころ' → logprob: -2.7265398502349854
    6. 'も' → logprob: -3.2265398502349854
    7. '```' → logprob: -3.6015398502349854
    8. 'お' → logprob: -3.7265398502349854
    9. 'は' → logprob: -3.8515398502349854
    10. 'け' → logprob: -4.226539611816406

Token 293: '               ' (ID: 506)
  Prédit: 'い'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'い' → logprob: -0.6470363736152649
    2. 'き' → logprob: -2.02203631401062
    3. 'す' → logprob: -2.39703631401062
    4. 'け' → logprob: -2.64703631401062
    5. 'いた' → logprob: -3.52203631401062
    6. 'る' → logprob: -4.147036552429199
    7. 'も' → logprob: -4.147036552429199
    8. 'こ' → logprob: -4.147036552429199
    9. 'う' → logprob: -4.647036552429199
    10. 'は' → logprob: -4.647036552429199

Token 294: ' val' (ID: 1459)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3221633434295654
    2. 'い' → logprob: -1.9471633434295654
    3. 'q' → logprob: -2.0721633434295654
    4. 'き' → logprob: -2.4471633434295654
    5. ' dp' → logprob: -2.6971633434295654
    6. '       ' → logprob: -3.1971633434295654
    7. 'す' → logprob: -3.1971633434295654
    8. '           ' → logprob: -3.9471633434295654
    9. 'w' → logprob: -4.0721635818481445
    10. '0' → logprob: -4.1971635818481445

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232184529304504
    2. '=' → logprob: -0.8982184529304504
    3. ')' → logprob: -10.023218154907227
    4. ',' → logprob: -11.273218154907227
    5. '                ' → logprob: -12.273218154907227
    6. '+' → logprob: -12.523218154907227
    7. ' ' → logprob: -12.523218154907227
    8. '＝' → logprob: -12.648218154907227
    9. '               ' → logprob: -12.773218154907227
    10. ' +' → logprob: -12.773218154907227

Token 296: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.07042217999696732
    2. ' dp' → logprob: -2.6954221725463867
    3. '(dp' → logprob: -9.070422172546387
    4. '0' → logprob: -9.445422172546387
    5. ' ' → logprob: -9.695422172546387
    6. '-' → logprob: -9.820422172546387
    7. '   ' → logprob: -10.570422172546387
    8. ' (' → logprob: -10.820422172546387
    9. ' -' → logprob: -10.945422172546387
    10. '	dp' → logprob: -10.945422172546387

Token 297: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006052040029317141
    2. '[' → logprob: -5.131052017211914
    3. '[w' → logprob: -9.381052017211914
    4. 'i' → logprob: -10.756052017211914
    5. '[m' → logprob: -12.381052017211914
    6. 'w' → logprob: -12.756052017211914
    7. '```' → logprob: -13.131052017211914
    8. 'md' → logprob: -13.256052017211914
    9. '[min' → logprob: -13.256052017211914
    10. '[ip' → logprob: -14.006052017211914

Token 298: ' *' (ID: 425)
  Prédit: '*w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.10439398884773254
    2. '*' → logprob: -2.35439395904541
    3. ' *' → logprob: -5.47939395904541
    4. ']' → logprob: -12.47939395904541
    5. ' ' → logprob: -14.10439395904541
    6. '*u' → logprob: -15.47939395904541
    7. '*p' → logprob: -15.72939395904541
    8. '   ' → logprob: -15.85439395904541
    9. '**' → logprob: -15.85439395904541
    10. '*k' → logprob: -15.97939395904541

Token 299: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0007137430948205292
    2. ' w' → logprob: -7.25071382522583
    3. '*w' → logprob: -12.875713348388672
    4. ' ' → logprob: -14.500713348388672
    5. '[w' → logprob: -16.000713348388672
    6. ']' → logprob: -16.000713348388672
    7. '	w' → logprob: -16.625713348388672
    8. '<|end|>' → logprob: -16.750713348388672
    9. '<w' → logprob: -17.000713348388672
    10. '[' → logprob: -17.000713348388672

Token 300: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11283306032419205
    2. ' +' → logprob: -2.237833023071289
    3. '＋' → logprob: -12.737833023071289
    4. '+
' → logprob: -12.862833023071289
    5. ' ' → logprob: -13.112833023071289
    6. ' +
' → logprob: -14.862833023071289
    7. '	' → logprob: -14.987833023071289
    8. '+m' → logprob: -15.237833023071289
    9. '
' → logprob: -15.425333023071289
    10. '+k' → logprob: -15.550333023071289

Token 301: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -9.491498531133402e-06
    2. ' md' → logprob: -11.625009536743164
    3. '	md' → logprob: -15.250009536743164
    4. ' ' → logprob: -16.500009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '(md' → logprob: -17.500009536743164
    7. 'm' → logprob: -18.750009536743164
    8. 'dm' → logprob: -19.000009536743164
    9. '﻿' → logprob: -19.125009536743164
    10. '.md' → logprob: -19.250009536743164

Token 302: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023522183764725924
    2. '])' → logprob: -6.127352237701416
    3. ' ]' → logprob: -9.377351760864258
    4. ']-' → logprob: -10.502351760864258
    5. ' -' → logprob: -10.627351760864258
    6. ']
' → logprob: -11.627351760864258
    7. '-' → logprob: -12.002351760864258
    8. '],' → logprob: -12.377351760864258
    9. ']]' → logprob: -13.252351760864258
    10. ')' → logprob: -13.377351760864258

Token 303: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12913189828395844
    2. '-' → logprob: -2.87913179397583
    3. '<|end|>' → logprob: -3.87913179397583
    4. ' ' → logprob: -4.25413179397583
    5. ' +' → logprob: -4.50413179397583
    6. '+' → logprob: -4.50413179397583
    7. ')' → logprob: -5.25413179397583
    8. '
' → logprob: -7.25413179397583
    9. ',' → logprob: -7.50413179397583
    10. '    ' → logprob: -8.629132270812988

Token 304: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031907858792692423
    2. ' i' → logprob: -5.753190994262695
    3. '   ' → logprob: -12.253190994262695
    4. ' ' → logprob: -13.378190994262695
    5. 'w' → logprob: -13.503190994262695
    6. '           ' → logprob: -13.753190994262695
    7. 'v' → logprob: -13.753190994262695
    8. '(i' → logprob: -14.003190994262695
    9. '    ' → logprob: -14.628190994262695
    10. '	i' → logprob: -14.753190994262695

Token 305: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.37266334891319275
    2. '*' → logprob: -1.7476633787155151
    3. '*i' → logprob: -1.9976633787155151
    4. 'i' → logprob: -6.747663497924805
    5. '           ' → logprob: -10.372663497924805
    6. ' i' → logprob: -11.122663497924805
    7. '               ' → logprob: -11.247663497924805
    8. ' ' → logprob: -11.872663497924805
    9. '   ' → logprob: -12.247663497924805
    10. '                   ' → logprob: -12.747663497924805

Token 306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019294669618830085
    2. ' i' → logprob: -6.25192928314209
    3. ' ' → logprob: -14.87692928314209
    4. '   ' → logprob: -15.12692928314209
    5. '	i' → logprob: -16.126930236816406
    6. '           ' → logprob: -17.001930236816406
    7. '*i' → logprob: -17.626930236816406
    8. '               ' → logprob: -18.001930236816406
    9. '
' → logprob: -18.001930236816406
    10. ' ' → logprob: -18.251930236816406

Token 307: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2731548249721527
    2. ' ' → logprob: -2.1481547355651855
    3. '<|end|>' → logprob: -3.1481547355651855
    4. '               ' → logprob: -3.6481547355651855
    5. '            ' → logprob: -4.1481547355651855
    6. '                ' → logprob: -4.8981547355651855
    7. '           ' → logprob: -4.8981547355651855
    8. ' 
' → logprob: -5.5231547355651855
    9. '              ' → logprob: -6.2731547355651855
    10. '        ' → logprob: -6.2731547355651855

Token 308: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0184781551361084
    2. '
' → logprob: -1.2684781551361084
    3. ' ' → logprob: -1.8934781551361084
    4. '\n' → logprob: -3.3934781551361084
    5. ' 
' → logprob: -3.6434781551361084
    6. '               ' → logprob: -3.8934781551361084
    7. '<|end|>' → logprob: -4.1434783935546875
    8. ' if' → logprob: -4.5184783935546875
    9. '           ' → logprob: -4.6434783935546875
    10. ')
' → logprob: -4.7684783935546875

Token 309: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.684485673904419
    2. 'while' → logprob: -0.809485673904419
    3. '	while' → logprob: -3.684485673904419
    4. ' ' → logprob: -5.18448543548584
    5. 'if' → logprob: -5.18448543548584
    6. '<|end|>' → logprob: -5.43448543548584
    7. ' if' → logprob: -6.43448543548584
    8. ')' → logprob: -7.18448543548584
    9. '	' → logprob: -7.18448543548584
    10. '1' → logprob: -7.30948543548584

Token 310: ' deque' (ID: 90347)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2015010565519333
    2. ' while' → logprob: -1.7015010118484497
    3. '           ' → logprob: -9.95150089263916
    4. '               ' → logprob: -10.82650089263916
    5. '       ' → logprob: -11.57650089263916
    6. '	while' → logprob: -12.07650089263916
    7. '
' → logprob: -13.32650089263916
    8. '   ' → logprob: -13.82650089263916
    9. 'While' → logprob: -14.82650089263916
    10. ' ' → logprob: -15.32650089263916

Token 311: '内' (ID: 9227)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6426339745521545
    2. '.pop' → logprob: -1.6426339149475098
    3. '.p' → logprob: -1.7676339149475098
    4. '.clear' → logprob: -2.7676339149475098
    5. '.append' → logprob: -3.8926339149475098
    6. '.' → logprob: -3.8926339149475098
    7. ':' → logprob: -6.26763391494751
    8. 'pop' → logprob: -6.64263391494751
    9. 'and' → logprob: -7.39263391494751
    10. ')' → logprob: -7.89263391494751

Token 312: 'は' (ID: 5205)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6849623322486877
    2. 'while' → logprob: -1.184962272644043
    3. 'and' → logprob: -2.184962272644043
    4. 'pop' → logprob: -3.809962272644043
    5. 'と' → logprob: -4.559962272644043
    6. ' while' → logprob: -4.684962272644043
    7. 'で' → logprob: -4.934962272644043
    8. '.pop' → logprob: -4.934962272644043
    9. 'を' → logprob: -5.059962272644043
    10. 'の' → logprob: -5.559962272644043

Token 313: '単' (ID: 87236)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.23954276740550995
    2. ' q' → logprob: -1.6145427227020264
    3. 'len' → logprob: -5.1145429611206055
    4. ' not' → logprob: -5.8645429611206055
    5. 'val' → logprob: -6.7395429611206055
    6. ' and' → logprob: -6.8645429611206055
    7. ' ' → logprob: -6.9895429611206055
    8. 'not' → logprob: -7.7395429611206055
    9. 'while' → logprob: -7.8645429611206055
    10. ')' → logprob: -8.614542961120605

Token 314: '調' (ID: 65541)
  Prédit: '調'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '調' → logprob: -0.0013939269119873643
    2. '純' → logprob: -7.126393795013428
    3. 'ton' → logprob: -7.751393795013428
    4. '[' → logprob: -10.376394271850586
    5. '```' → logprob: -10.376394271850586
    6. '>' → logprob: -10.876394271850586
    7. '{' → logprob: -11.126394271850586
    8. '调' → logprob: -11.251394271850586
    9. 't' → logprob: -11.751394271850586
    10. '峰' → logprob: -12.251394271850586

Token 315: '減' (ID: 162831)
  Prédit: '増'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '増' → logprob: -1.0184051990509033
    2. 'de' → logprob: -1.1434051990509033
    3. ' decreasing' → logprob: -2.0184051990509033
    4. 'queue' → logprob: -2.5184051990509033
    5. '減' → logprob: -3.6434051990509033
    6. 'q' → logprob: -3.8934051990509033
    7. 'deque' → logprob: -4.143404960632324
    8. 'creasing' → logprob: -5.143404960632324
    9. 'c' → logprob: -5.393404960632324
    10. '降' → logprob: -5.768404960632324

Token 316: '少' (ID: 11389)
  Prédit: '少'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '少' → logprob: -0.7852742075920105
    2. '減' → logprob: -2.1602742671966553
    3. '下' → logprob: -2.9102742671966553
    4. '
' → logprob: -2.9102742671966553
    5. '```' → logprob: -2.9102742671966553
    6. 'な' → logprob: -3.0352742671966553
    7. '#' → logprob: -3.4102742671966553
    8. '長' → logprob: -4.160274028778076
    9. '順' → logprob: -4.285274028778076
    10. '   ' → logprob: -4.410274028778076

Token 317: 'に' (ID: 5280)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0332551002502441
    2. ' while' → logprob: -1.1582551002502441
    3. 'while' → logprob: -2.158255100250244
    4. ':
' → logprob: -2.908255100250244
    5. ':' → logprob: -2.908255100250244
    6. '       ' → logprob: -3.908255100250244
    7. '   ' → logprob: -3.908255100250244
    8. '()' → logprob: -4.533255100250244
    9. 'and' → logprob: -4.658255100250244
    10. '():
' → logprob: -4.783255100250244

Token 318: 'した' (ID: 23085)
  Prédit: 'な'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.35775378346443176
    2. 'なる' → logprob: -1.9827537536621094
    3. 'while' → logprob: -2.1077537536621094
    4. ' while' → logprob: -3.8577537536621094
    5. '保' → logprob: -3.9827537536621094
    6. 'なら' → logprob: -7.982753753662109
    7. 'なが' → logprob: -8.10775375366211
    8. 'する' → logprob: -8.48275375366211
    9. ' 保' → logprob: -9.23275375366211
    10. '       ' → logprob: -9.23275375366211

Token 319: 'い' (ID: 3826)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14519888162612915
    2. ' while' → logprob: -2.1451988220214844
    3. 'い' → logprob: -4.895198822021484
    4. '       ' → logprob: -5.520198822021484
    5. 'て' → logprob: -6.520198822021484
    6. 'り' → logprob: -7.020198822021484
    7. '           ' → logprob: -7.145198822021484
    8. 'なが' → logprob: -7.520198822021484
    9. 'が' → logprob: -7.770198822021484
    10. '   ' → logprob: -7.770198822021484

Token 320: 'ので' (ID: 69719)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.452619731426239
    2. 'while' → logprob: -1.0776197910308838
    3. '       ' → logprob: -3.827619791030884
    4. '               ' → logprob: -7.077619552612305
    5. '           ' → logprob: -7.952619552612305
    6. '	while' → logprob: -8.452619552612305
    7. '   ' → logprob: -8.577619552612305
    8. '      ' → logprob: -9.952619552612305
    9. '                   ' → logprob: -10.327619552612305
    10. ' ' → logprob: -10.327619552612305

Token 321: 'これ' (ID: 54459)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.12694701552391052
    2. 'while' → logprob: -2.1269469261169434
    3. '               ' → logprob: -11.501947402954102
    4. '	while' → logprob: -11.876947402954102
    5. '                   ' → logprob: -14.001947402954102
    6. '                ' → logprob: -14.876947402954102
    7. '           ' → logprob: -15.376947402954102
    8. ' ' → logprob: -16.1269474029541
    9. '                       ' → logprob: -16.5019474029541
    10. '            ' → logprob: -16.8769474029541

Token 322: 'から' (ID: 27500)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4813426434993744
    2. ' while' → logprob: -1.1063426733016968
    3. ':' → logprob: -3.8563425540924072
    4. '>' → logprob: -4.981342792510986
    5. ' <=' → logprob: -5.231342792510986
    6. '<=' → logprob: -5.731342792510986
    7. ' <' → logprob: -5.856342792510986
    8. ' >' → logprob: -6.231342792510986
    9. '               ' → logprob: -6.231342792510986
    10. '	while' → logprob: -6.231342792510986

Token 323: '追加' (ID: 136463)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.28370174765586853
    2. 'while' → logprob: -1.408701777458191
    3. ' <=' → logprob: -7.1587018966674805
    4. ' <' → logprob: -7.2837018966674805
    5. 'val' → logprob: -8.65870189666748
    6. ' q' → logprob: -9.03370189666748
    7. ' ' → logprob: -9.03370189666748
    8. 'q' → logprob: -9.03370189666748
    9. '<=' → logprob: -9.15870189666748
    10. '               ' → logprob: -9.65870189666748

Token 324: 'する' (ID: 39065)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.2713165283203125
    2. 'while' → logprob: -2.0213165283203125
    3. ' val' → logprob: -2.1463165283203125
    4. '               ' → logprob: -2.2713165283203125
    5. 'と' → logprob: -2.5213165283203125
    6. 'val' → logprob: -2.7713165283203125
    7. 'る' → logprob: -2.8963165283203125
    8. 'を' → logprob: -3.2713165283203125
    9. '           ' → logprob: -4.0213165283203125
    10. ',' → logprob: -4.3963165283203125

Token 325: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6126295924186707
    2. ' while' → logprob: -1.6126296520233154
    3. ' val' → logprob: -1.8626296520233154
    4. 'while' → logprob: -2.8626296520233154
    5. ' <' → logprob: -4.112629413604736
    6. ' <=' → logprob: -4.737629413604736
    7. ')' → logprob: -5.737629413604736
    8. 'と' → logprob: -6.237629413604736
    9. ' >' → logprob: -6.612629413604736
    10. 'の' → logprob: -6.612629413604736

Token 326: '以下' (ID: 39985)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.247123122215271
    2. ' <' → logprob: -1.997123122215271
    3. '<=' → logprob: -2.9971232414245605
    4. '<' → logprob: -4.8721232414245605
    5. ')' → logprob: -5.2471232414245605
    6. ',' → logprob: -5.4971232414245605
    7. 'を' → logprob: -5.9971232414245605
    8. 'と' → logprob: -6.1221232414245605
    9. ' >=' → logprob: -6.2471232414245605
    10. ' ' → logprob: -6.4971232414245605

Token 327: 'の' (ID: 3385)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.468027263879776
    2. ' and' → logprob: -1.4680272340774536
    3. 'と' → logprob: -3.968027353286743
    4. ' ==' → logprob: -4.093027114868164
    5. 'の' → logprob: -4.218027114868164
    6. 'and' → logprob: -4.343027114868164
    7. 'val' → logprob: -4.718027114868164
    8. ' >=' → logprob: -4.718027114868164
    9. '==' → logprob: -5.343027114868164
    10. ' ' → logprob: -5.343027114868164

Token 328: '値' (ID: 69555)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5143368244171143
    2. ' q' → logprob: -1.0143368244171143
    3. 'while' → logprob: -4.014336585998535
    4. 'len' → logprob: -4.264336585998535
    5. ' while' → logprob: -5.014336585998535
    6. ' len' → logprob: -9.014336585998535
    7. 'val' → logprob: -9.389336585998535
    8. ')' → logprob: -9.514336585998535
    9. '```' → logprob: -9.639336585998535
    10. '	q' → logprob: -10.014336585998535

Token 329: 'は' (ID: 5205)
  Prédit: 'を'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'を' → logprob: -0.24252860248088837
    2. 'は' → logprob: -2.4925286769866943
    3. ' を' → logprob: -3.1175286769866943
    4. 'while' → logprob: -3.7425286769866943
    5. 'が' → logprob: -3.9925286769866943
    6. 'と' → logprob: -4.117528438568115
    7. ' while' → logprob: -4.867528438568115
    8. 'に' → logprob: -5.617528438568115
    9. ' ==' → logprob: -5.742528438568115
    10. 'の' → logprob: -5.742528438568115

Token 330: '削' (ID: 156018)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06201361492276192
    2. ' q' → logprob: -2.812013626098633
    3. 'pop' → logprob: -10.562013626098633
    4. '.pop' → logprob: -12.187013626098633
    5. '	q' → logprob: -12.187013626098633
    6. 'p' → logprob: -12.562013626098633
    7. 'que' → logprob: -13.312013626098633
    8. 'while' → logprob: -14.062013626098633
    9. ' ' → logprob: -14.437013626098633
    10. 'deque' → logprob: -14.437013626098633

Token 331: '除' (ID: 18593)
  Prédit: '除'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '除' → logprob: -0.0011063982965424657
    2. 'き' → logprob: -7.626106262207031
    3. 'り' → logprob: -8.876106262207031
    4. '```' → logprob: -8.876106262207031
    5. 'q' → logprob: -9.001106262207031
    6. 'し' → logprob: -10.126106262207031
    7. 'く' → logprob: -10.751106262207031
    8. 'が' → logprob: -11.001106262207031
    9. 'る' → logprob: -11.251106262207031
    10. 'す' → logprob: -11.376106262207031

Token 332: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3490871787071228
    2. ' while' → logprob: -1.2240872383117676
    3. 'q' → logprob: -8.59908676147461
    4. ' q' → logprob: -9.22408676147461
    5. ':' → logprob: -9.72408676147461
    6. '	while' → logprob: -9.84908676147461
    7. '       ' → logprob: -10.09908676147461
    8. 'と' → logprob: -10.22408676147461
    9. 'if' → logprob: -10.34908676147461
    10. ':
' → logprob: -10.97408676147461

Token 333: '               ' (ID: 506)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.13320741057395935
    2. ' while' → logprob: -2.133207321166992
    3. '       ' → logprob: -5.133207321166992
    4. '   ' → logprob: -8.133207321166992
    5. '	while' → logprob: -10.633207321166992
    6. '           ' → logprob: -10.758207321166992
    7. '```' → logprob: -11.883207321166992
    8. '     ' → logprob: -13.008207321166992
    9. 'While' → logprob: -13.008207321166992
    10. 'り' → logprob: -13.633207321166992

Token 334: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.25193843245506287
    2. ' while' → logprob: -1.5019384622573853
    3. '	while' → logprob: -11.876938819885254
    4. 'While' → logprob: -14.376938819885254
    5. '   ' → logprob: -15.001938819885254
    6. '       ' → logprob: -15.001938819885254
    7. '               ' → logprob: -15.126938819885254
    8. '           ' → logprob: -15.376938819885254
    9. ' ' → logprob: -15.626938819885254
    10. '    ' → logprob: -16.001937866210938

Token 335: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2015998661518097
    2. ' q' → logprob: -1.7015998363494873
    3. ' len' → logprob: -9.076600074768066
    4. 'len' → logprob: -9.701600074768066
    5. ' ' → logprob: -12.326600074768066
    6. '	q' → logprob: -12.701600074768066
    7. '(q' → logprob: -13.201600074768066
    8. '   ' → logprob: -14.576600074768066
    9. '(len' → logprob: -15.201600074768066
    10. ' ' → logprob: -15.826600074768066

Token 336: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16030384600162506
    2. 'and' → logprob: -1.9103038311004639
    3. ' ' → logprob: -9.660304069519043
    4. '	and' → logprob: -12.160304069519043
    5. '   ' → logprob: -12.910304069519043
    6. '  ' → logprob: -13.035304069519043
    7. '    ' → logprob: -13.285304069519043
    8. ' и' → logprob: -14.035304069519043
    9. '```' → logprob: -14.410304069519043
    10. 'と' → logprob: -14.660304069519043

Token 337: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005673625972121954
    2. ' q' → logprob: -5.255673408508301
    3. 'val' → logprob: -7.755673408508301
    4. ' val' → logprob: -11.6306734085083
    5. '	q' → logprob: -14.0056734085083
    6. '
' → logprob: -15.1306734085083
    7. '[q' → logprob: -15.5056734085083
    8. ' ' → logprob: -15.5056734085083
    9. 'len' → logprob: -15.7556734085083
    10. '   ' → logprob: -15.7556734085083

Token 338: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9623810658231378e-05
    2. ' and' → logprob: -11.125020027160645
    3. '[' → logprob: -12.625020027160645
    4. 'and' → logprob: -13.625020027160645
    5. '][-' → logprob: -15.625020027160645
    6. '[q' → logprob: -16.500019073486328
    7. 'q' → logprob: -17.875019073486328
    8. '[len' → logprob: -18.250019073486328
    9. ' ' → logprob: -18.375019073486328
    10. '```' → logprob: -18.625019073486328

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05594313144683838
    2. '[' → logprob: -3.305943012237549
    3. '][' → logprob: -4.680943012237549
    4. 'val' → logprob: -5.805943012237549
    5. 'q' → logprob: -6.055943012237549
    6. '()[' → logprob: -6.055943012237549
    7. ' ' → logprob: -8.805943489074707
    8. '()][' → logprob: -8.930943489074707
    9. '0' → logprob: -9.555943489074707
    10. '(' → logprob: -9.680943489074707

Token 340: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009037243202328682
    2. '[' → logprob: -4.759037017822266
    3. '()[' → logprob: -8.509037017822266
    4. '()][' → logprob: -8.759037017822266
    5. ''][' → logprob: -10.634037017822266
    6. ' ][' → logprob: -11.009037017822266
    7. '"][' → logprob: -11.759037017822266
    8. ']' → logprob: -11.884037017822266
    9. '>[' → logprob: -13.509037017822266
    10. '[][' → logprob: -13.759037017822266

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. '
' → logprob: -12.875003814697266
    3. '```' → logprob: -15.500003814697266
    4. '-' → logprob: -15.875003814697266
    5. ' ' → logprob: -16.125003814697266
    6. '

' → logprob: -16.125003814697266
    7. '0' → logprob: -16.500003814697266
    8. '' → logprob: -17.250003814697266
    9. '][' → logprob: -17.250003814697266
    10. '::-' → logprob: -17.500003814697266

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009363364428281784
    2. ']<' → logprob: -4.884363174438477
    3. '<' → logprob: -7.134363174438477
    4. ']<=' → logprob: -7.259363174438477
    5. '<=' → logprob: -9.134363174438477
    6. ' ]' → logprob: -9.259363174438477
    7. ' <' → logprob: -10.634363174438477
    8. '[' → logprob: -11.134363174438477
    9. ' <=' → logprob: -11.634363174438477
    10. '][' → logprob: -13.634363174438477

Token 343: ' <=' (ID: 5017)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7671996355056763
    2. '<=' → logprob: -1.3921996355056763
    3. ' <=' → logprob: -1.6421996355056763
    4. ' <' → logprob: -2.3921995162963867
    5. '[' → logprob: -6.142199516296387
    6. ' ' → logprob: -11.392199516296387
    7. '>=' → logprob: -12.642199516296387
    8. '≤' → logprob: -13.142199516296387
    9. '<int' → logprob: -14.017199516296387
    10. '<v' → logprob: -14.017199516296387

Token 344: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.04859338700771332
    2. ' val' → logprob: -3.048593282699585
    3. '	val' → logprob: -12.298593521118164
    4. '(val' → logprob: -14.548593521118164
    5. '[val' → logprob: -15.048593521118164
    6. '_val' → logprob: -15.798593521118164
    7. ',val' → logprob: -16.048593521118164
    8. ' ' → logprob: -16.423593521118164
    9. 'v' → logprob: -16.923593521118164
    10. '
' → logprob: -17.298593521118164

Token 345: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34853091835975647
    2. ':' → logprob: -1.223530888557434
    3. '):
' → logprob: -10.348530769348145
    4. ':q' → logprob: -10.848530769348145
    5. '():
' → logprob: -11.473530769348145
    6. ':
' → logprob: -11.598530769348145
    7. ' :
' → logprob: -12.723530769348145
    8. '：
' → logprob: -12.848530769348145
    9. ':

' → logprob: -12.973530769348145
    10. ',' → logprob: -13.098530769348145

Token 346: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.03576192259788513
    2. 'q' → logprob: -3.410761833190918
    3. 'pop' → logprob: -6.660761833190918
    4. '.pop' → logprob: -8.035761833190918
    5. ' pop' → logprob: -8.035761833190918
    6. '	q' → logprob: -9.160761833190918
    7. ' _' → logprob: -11.160761833190918
    8. ',q' → logprob: -11.535761833190918
    9. '_pop' → logprob: -11.535761833190918
    10. '   ' → logprob: -11.910761833190918

Token 347: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.01605900563299656
    2. 'pop' → logprob: -4.141058921813965
    3. '	pop' → logprob: -11.641058921813965
    4. '.' → logprob: -12.016058921813965
    5. '_pop' → logprob: -13.141058921813965
    6. ' pop' → logprob: -13.391058921813965
    7. '.p' → logprob: -13.641058921813965
    8. '-pop' → logprob: -13.641058921813965
    9. 'Pop' → logprob: -13.641058921813965
    10. '[-' → logprob: -13.766058921813965

Token 348: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3684093654155731
    2. ')' → logprob: -1.4934093952178955
    3. '()
' → logprob: -3.1184093952178955
    4. '<|end|>' → logprob: -4.243409156799316
    5. ')
' → logprob: -5.368409156799316
    6. '
' → logprob: -5.618409156799316
    7. '<|end|>' → logprob: -5.743409156799316
    8. '(' → logprob: -6.368409156799316
    9. '               ' → logprob: -6.618409156799316
    10. ' 
' → logprob: -6.618409156799316

Token 349: '               ' (ID: 506)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3638468384742737
    2. '               ' → logprob: -1.988846778869629
    3. '
' → logprob: -2.613846778869629
    4. ' q' → logprob: -2.738846778869629
    5. '[' → logprob: -4.863846778869629
    6. ' ' → logprob: -5.863846778869629
    7. ' ' → logprob: -5.988846778869629
    8. '  
' → logprob: -6.113846778869629
    9. ')' → logprob: -6.113846778869629
    10. '                
' → logprob: -6.363846778869629

Token 350: ' #' (ID: 1069)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.03180601820349693
    2. 'q' → logprob: -3.781805992126465
    3. '	q' → logprob: -5.281805992126465
    4. ' ' → logprob: -6.906805992126465
    5. '               ' → logprob: -7.531805992126465
    6. ')' → logprob: -7.781805992126465
    7. '	' → logprob: -7.906805992126465
    8. '(q' → logprob: -8.281805992126465
    9. '\t' → logprob: -9.156805992126465
    10. ' (' → logprob: -9.406805992126465

Token 351: ' 今' (ID: 89677)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10078980773687363
    2. ' q' → logprob: -2.350789785385132
    3. '               ' → logprob: -7.475790023803711
    4. '           ' → logprob: -12.725790023803711
    5. '	q' → logprob: -13.100790023803711
    6. '                   ' → logprob: -13.475790023803711
    7. 'deque' → logprob: -13.600790023803711
    8. 'while' → logprob: -13.725790023803711
    9. '                
' → logprob: -14.350790023803711
    10. '   ' → logprob: -14.350790023803711

Token 352: 'の' (ID: 3385)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5573167204856873
    2. '.append' → logprob: -1.057316780090332
    3. ')' → logprob: -3.807316780090332
    4. 'q' → logprob: -4.182316780090332
    5. 'append' → logprob: -4.557316780090332
    6. ',' → logprob: -5.057316780090332
    7. 'val' → logprob: -5.932316780090332
    8. '(' → logprob: -6.307316780090332
    9. ' (' → logprob: -6.557316780090332
    10. ' =' → logprob: -6.682316780090332

Token 353: '値' (ID: 69555)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.027504388242959976
    2. ' q' → logprob: -3.9025044441223145
    3. 'val' → logprob: -5.6525044441223145
    4. '(' → logprob: -6.6525044441223145
    5. 'i' → logprob: -7.5275044441223145
    6. '(i' → logprob: -7.5275044441223145
    7. ' (' → logprob: -8.027503967285156
    8. '   ' → logprob: -9.027503967285156
    9. '(q' → logprob: -9.027503967285156
    10. ' val' → logprob: -9.277503967285156

Token 354: 'を' (ID: 7277)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12535344064235687
    2. '.append' → logprob: -3.1253533363342285
    3. ')' → logprob: -3.5003533363342285
    4. ',q' → logprob: -4.7503533363342285
    5. ' ,' → logprob: -4.8753533363342285
    6. 'を' → logprob: -5.0003533363342285
    7. ' =' → logprob: -5.3753533363342285
    8. ' q' → logprob: -5.5003533363342285
    9. '=' → logprob: -5.6253533363342285
    10. 's' → logprob: -6.8753533363342285

Token 355: '追加' (ID: 136463)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.005080176051706076
    2. ' q' → logprob: -5.380080223083496
    3. 'append' → logprob: -7.755080223083496
    4. '	q' → logprob: -11.130080223083496
    5. ' append' → logprob: -11.630080223083496
    6. '.append' → logprob: -12.505080223083496
    7. '(q' → logprob: -13.255080223083496
    8. '_q' → logprob: -14.505080223083496
    9. '(' → logprob: -15.005080223083496
    10. '   ' → logprob: -15.130080223083496

Token 356: '
' (ID: 198)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.4887219965457916
    2. '               ' → logprob: -1.4887219667434692
    3. ' (' → logprob: -1.9887219667434692
    4. ',' → logprob: -4.98872184753418
    5. ' ()' → logprob: -5.36372184753418
    6. '			' → logprob: -5.98872184753418
    7. '(q' → logprob: -6.11372184753418
    8. '	q' → logprob: -6.48872184753418
    9. '()' → logprob: -6.73872184753418
    10. 'q' → logprob: -6.73872184753418

Token 357: '               ' (ID: 506)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.06679586321115494
    2. '               ' → logprob: -2.816795825958252
    3. 'q' → logprob: -6.191795825958252
    4. '	q' → logprob: -6.191795825958252
    5. '			' → logprob: -7.941795825958252
    6. '	' → logprob: -9.81679630279541
    7. ',q' → logprob: -10.44179630279541
    8. ',' → logprob: -10.44179630279541
    9. '                
' → logprob: -10.56679630279541
    10. '
' → logprob: -10.56679630279541

Token 358: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.043153561651706696
    2. ' q' → logprob: -3.1681535243988037
    3. '	q' → logprob: -9.293153762817383
    4. '               ' → logprob: -9.793153762817383
    5. '(q' → logprob: -13.293153762817383
    6. '   ' → logprob: -13.918153762817383
    7. ' (' → logprob: -14.043153762817383
    8. '(' → logprob: -14.168153762817383
    9. '                   ' → logprob: -14.418153762817383
    10. '			' → logprob: -14.668153762817383

Token 359: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.2471589798224159e-05
    2. '.' → logprob: -11.500012397766113
    3. 'append' → logprob: -13.125012397766113
    4. '.app' → logprob: -16.12501335144043
    5. '_append' → logprob: -16.50001335144043
    6. '.extend' → logprob: -17.50001335144043
    7. '.Append' → logprob: -17.62501335144043
    8. '.ap' → logprob: -17.75001335144043
    9. ' .' → logprob: -17.75001335144043
    10. ' append' → logprob: -18.00001335144043

Token 360: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003365350130479783
    2. '(' → logprob: -8.000336647033691
    3. '([' → logprob: -14.125336647033691
    4. '(((' → logprob: -15.625336647033691
    5. '(i' → logprob: -16.250335693359375
    6. '(
' → logprob: -16.750335693359375
    7. '   ' → logprob: -17.875335693359375
    8. ' ' → logprob: -18.125335693359375
    9. ' ((' → logprob: -18.125335693359375
    10. '[(' → logprob: -19.375335693359375

Token 361: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.392202976712724e-06
    2. ' i' → logprob: -12.000006675720215
    3. '(i' → logprob: -16.8750057220459
    4. '   ' → logprob: -17.0000057220459
    5. '	i' → logprob: -17.6250057220459
    6. ' ' → logprob: -17.7500057220459
    7. ')i' → logprob: -18.3750057220459
    8. '
' → logprob: -19.0000057220459
    9. '{i' → logprob: -19.0000057220459
    10. ''i' → logprob: -19.0000057220459

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044711565715260804
    2. ',val' → logprob: -7.7504472732543945
    3. ',q' → logprob: -11.750447273254395
    4. ' ,' → logprob: -12.000447273254395
    5. ',value' → logprob: -13.875447273254395
    6. ',
' → logprob: -14.500447273254395
    7. ',v' → logprob: -14.875447273254395
    8. '，' → logprob: -16.500446319580078
    9. ' ' → logprob: -16.875446319580078
    10. '
' → logprob: -17.250446319580078

Token 363: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.01416350994259119
    2. ' val' → logprob: -4.264163494110107
    3. '	val' → logprob: -17.139163970947266
    4. '[val' → logprob: -18.139163970947266
    5. '(val' → logprob: -19.014163970947266
    6. '_val' → logprob: -20.014163970947266
    7. ',val' → logprob: -20.264163970947266
    8. '.val' → logprob: -20.389163970947266
    9. 'v' → logprob: -21.014163970947266
    10. ' ' → logprob: -21.264163970947266

Token 364: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017224266193807125
    2. '))
' → logprob: -7.00172233581543
    3. ')' → logprob: -7.12672233581543
    4. ')
' → logprob: -12.50172233581543
    5. ' ))' → logprob: -13.12672233581543
    6. '))

' → logprob: -14.12672233581543
    7. '));' → logprob: -15.12672233581543
    8. '))
' → logprob: -15.87672233581543
    9. ')))' → logprob: -16.00172233581543
    10. '),' → logprob: -16.00172233581543

Token 365: '               ' (ID: 506)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1975598931312561
    2. 'while' → logprob: -2.3225598335266113
    3. '               ' → logprob: -2.8225598335266113
    4. '```' → logprob: -4.447559833526611
    5. '           ' → logprob: -5.572559833526611
    6. '#' → logprob: -6.697559833526611
    7. '       ' → logprob: -6.822559833526611
    8. '
' → logprob: -7.572559833526611
    9. ' #' → logprob: -7.822559833526611
    10. ',' → logprob: -7.947559833526611

Token 366: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.29617759585380554
    2. ' while' → logprob: -1.796177625656128
    3. '               ' → logprob: -2.421177625656128
    4. '#' (adapté à ' #') → logprob: -6.671177387237549
    5. '           ' → logprob: -9.296177864074707
    6. ' #' → logprob: -9.546177864074707
    7. '                
' → logprob: -10.546177864074707
    8. '```' → logprob: -10.546177864074707
    9. 'if' → logprob: -10.671177864074707
    10. '       ' → logprob: -11.046177864074707

Token 367: ' deque' (ID: 90347)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00821489654481411
    2. 'if' → logprob: -4.883214950561523
    3. ' while' → logprob: -7.633214950561523
    4. '#' → logprob: -9.633214950561523
    5. '               ' → logprob: -11.258214950561523
    6. 'idx' → logprob: -11.258214950561523
    7. 'start' → logprob: -11.508214950561523
    8. 'i' → logprob: -11.758214950561523
    9. 'l' → logprob: -12.758214950561523
    10. '
' → logprob: -13.383214950561523

Token 368: 'の' (ID: 3385)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007344625773839653
    2. '=' → logprob: -7.750734329223633
    3. ' and' → logprob: -9.375734329223633
    4. '
' → logprob: -10.625734329223633
    5. '=[' → logprob: -10.750734329223633
    6. '0' → logprob: -10.875734329223633
    7. 'p' → logprob: -10.875734329223633
    8. 'and' → logprob: -11.000734329223633
    9. 'q' → logprob: -11.125734329223633
    10. 'while' → logprob: -11.250734329223633

Token 369: '先' (ID: 12231)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0723477602005005
    2. 'i' → logprob: -1.1973477602005005
    3. 'while' → logprob: -1.8223477602005005
    4. '0' → logprob: -2.947347640991211
    5. ' q' → logprob: -3.072347640991211
    6. ' i' → logprob: -3.072347640991211
    7. ' while' → logprob: -3.322347640991211
    8. '(' → logprob: -5.947347640991211
    9. '[' → logprob: -6.072347640991211
    10. ' ' → logprob: -6.072347640991211

Token 370: '頭' (ID: 73036)
  Prédit: '頭'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '頭' → logprob: -0.06947691738605499
    2. 'head' → logprob: -3.069476842880249
    3. '头' → logprob: -4.319477081298828
    4. 'p' → logprob: -6.319477081298828
    5. 'while' → logprob: -6.819477081298828
    6. '端' → logprob: -7.069477081298828
    7. 'opleft' → logprob: -7.069477081298828
    8. '0' → logprob: -7.194477081298828
    9. 'front' → logprob: -7.819477081298828
    10. 'pop' → logprob: -8.319477081298828

Token 371: 'を' (ID: 7277)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1680011749267578
    2. 'while' → logprob: -1.2930011749267578
    3. 'if' → logprob: -1.5430011749267578
    4. 'idx' → logprob: -2.793001174926758
    5. '_idx' → logprob: -3.418001174926758
    6. '_index' → logprob: -3.918001174926758
    7. '()[' → logprob: -4.043001174926758
    8. '=' → logprob: -4.043001174926758
    9. '<|end|>' → logprob: -4.668001174926758
    10. 'index' → logprob: -4.918001174926758

Token 372: '使' (ID: 15159)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.707459032535553
    2. 'if' → logprob: -2.332458972930908
    3. '0' → logprob: -2.457458972930908
    4. '[' → logprob: -2.457458972930908
    5. '(' → logprob: -2.582458972930908
    6. ' while' → logprob: -2.957458972930908
    7. 'q' → logprob: -3.082458972930908
    8. ' q' → logprob: -3.832458972930908
    9. ' (' → logprob: -4.082458972930908
    10. ' if' → logprob: -4.707458972930908

Token 373: 'って' (ID: 30677)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5382129549980164
    2. '()' → logprob: -2.038213014602661
    3. 'って' → logprob: -2.538213014602661
    4. '用' → logprob: -2.788213014602661
    5. 'った' → logprob: -3.163213014602661
    6. 'い' → logprob: -3.288213014602661
    7. '0' → logprob: -4.163212776184082
    8. 'q' → logprob: -4.288212776184082
    9. 'う' → logprob: -4.913212776184082
    10. '(' → logprob: -5.413212776184082

Token 374: '更新' (ID: 26889)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03178834915161133
    2. ' dp' → logprob: -3.5317883491516113
    3. 'max' → logprob: -7.031788349151611
    4. 'while' → logprob: -7.531788349151611
    5. '
' → logprob: -8.656787872314453
    6. 'val' → logprob: -8.781787872314453
    7. 'if' → logprob: -9.656787872314453
    8. '               ' → logprob: -9.906787872314453
    9. ' max' → logprob: -10.031787872314453
    10. ' while' → logprob: -10.156787872314453

Token 375: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.2870418429374695
    2. ' dp' → logprob: -2.0370419025421143
    3. '               ' → logprob: -2.1620419025421143
    4. '(dp' → logprob: -6.412041664123535
    5. '[' → logprob: -7.412041664123535
    6. 'if' → logprob: -7.412041664123535
    7. '   ' → logprob: -8.287041664123535
    8. '           ' → logprob: -8.412041664123535
    9. ' if' → logprob: -8.787041664123535
    10. '	dp' → logprob: -9.287041664123535

Token 376: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3618389070034027
    2. '               ' → logprob: -1.861838936805725
    3. ' dp' → logprob: -2.1118388175964355
    4. '   ' → logprob: -4.2368388175964355
    5. '           ' → logprob: -4.9868388175964355
    6. '       ' → logprob: -5.8618388175964355
    7. '	dp' → logprob: -7.1118388175964355
    8. '(dp' → logprob: -7.2368388175964355
    9. '[' → logprob: -7.7368388175964355
    10. '                   ' → logprob: -8.111839294433594

Token 377: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00981181114912033
    2. ' dp' → logprob: -4.759811878204346
    3. 'idx' → logprob: -6.884811878204346
    4. '               ' → logprob: -10.259811401367188
    5. 'index' → logprob: -10.259811401367188
    6. 'pos' → logprob: -10.259811401367188
    7. '	dp' → logprob: -11.259811401367188
    8. 'if' → logprob: -11.384811401367188
    9. '   ' → logprob: -12.259811401367188
    10. '                   ' → logprob: -12.259811401367188

Token 378: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012082771718269214
    2. '[q' → logprob: -9.625121116638184
    3. '[' → logprob: -9.875121116638184
    4. '[j' → logprob: -14.000121116638184
    5. ' [' → logprob: -14.000121116638184
    6. '[
' → logprob: -15.000121116638184
    7. '[(' → logprob: -15.125121116638184
    8. 'i' → logprob: -15.625121116638184
    9. '   ' → logprob: -15.750121116638184
    10. '[min' → logprob: -15.875121116638184

Token 379: ' *' (ID: 425)
  Prédit: '*w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*w' → logprob: -0.24140159785747528
    2. ' *' → logprob: -1.7414015531539917
    3. '*' → logprob: -3.2414016723632812
    4. '[' → logprob: -10.241401672363281
    5. 'w' → logprob: -10.366401672363281
    6. '[w' → logprob: -11.491401672363281
    7. ' ' → logprob: -13.241401672363281
    8. '```' → logprob: -13.366401672363281
    9. '*q' → logprob: -13.741401672363281
    10. '*[' → logprob: -14.116401672363281

Token 380: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.004081128165125847
    2. ' w' → logprob: -5.5040812492370605
    3. ' ' → logprob: -14.879080772399902
    4. 'wj' → logprob: -15.129080772399902
    5. '   ' → logprob: -15.504080772399902
    6. '```' → logprob: -15.504080772399902
    7. '<w' → logprob: -15.754080772399902
    8. '[w' → logprob: -15.754080772399902
    9. '+' → logprob: -16.00408172607422
    10. 'ｗ' → logprob: -16.12908172607422

Token 381: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012518366798758507
    2. ' +' → logprob: -4.387518405914307
    3. '[' → logprob: -12.012517929077148
    4. '<|end|>' → logprob: -14.012517929077148
    5. '+
' → logprob: -14.387517929077148
    6. '＋' → logprob: -14.387517929077148
    7. '+m' → logprob: -15.512517929077148
    8. '+xml' → logprob: -16.26251792907715
    9. '+[' → logprob: -16.26251792907715
    10. '<|end|>' → logprob: -17.01251792907715

Token 382: ' md' (ID: 17280)
  Prédit: 'md'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'md' → logprob: -0.00010962257510982454
    2. ' md' → logprob: -9.125109672546387
    3. '	md' → logprob: -14.625109672546387
    4. 'mod' → logprob: -16.00010871887207
    5. '_md' → logprob: -17.62510871887207
    6. '.md' → logprob: -17.62510871887207
    7. 'mdl' → logprob: -17.62510871887207
    8. ' ' → logprob: -18.00010871887207
    9. 'm' → logprob: -18.37510871887207
    10. '(md' → logprob: -18.37510871887207

Token 383: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014442270912695676
    2. ']=' → logprob: -8.875144004821777
    3. ' ]' → logprob: -12.625144004821777
    4. ']+=' → logprob: -13.750144004821777
    5. ']
' → logprob: -16.125144958496094
    6. ']+' → logprob: -16.500144958496094
    7. '=' → logprob: -17.250144958496094
    8. '])' → logprob: -19.000144958496094
    9. ')' → logprob: -19.000144958496094
    10. '],' → logprob: -19.125144958496094

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.218449667096138
    2. ' =' → logprob: -1.7184497117996216
    3. '=max' → logprob: -4.093449592590332
    4. 'max' → logprob: -8.843449592590332
    5. ' max' → logprob: -9.718449592590332
    6. ',max' → logprob: -13.593449592590332
    7. ']=' → logprob: -13.718449592590332
    8. ')=' → logprob: -14.093449592590332
    9. '(max' → logprob: -14.968449592590332
    10. 's' → logprob: -15.093449592590332

Token 385: ' q' (ID: 2335)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002614421071484685
    2. 'q' → logprob: -6.377614498138428
    3. ' max' → logprob: -7.002614498138428
    4. ' q' → logprob: -13.75261402130127
    5. '   ' → logprob: -14.50261402130127
    6. '	max' → logprob: -14.87761402130127
    7. '(max' → logprob: -15.87761402130127
    8. '
' → logprob: -17.127614974975586
    9. 'maximum' → logprob: -17.377614974975586
    10. '_max' → logprob: -17.502614974975586

Token 386: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.250000953674316
    3. '
' → logprob: -16.625
    4. '[-' → logprob: -16.75
    5. ' [' → logprob: -17.25
    6. '```' → logprob: -17.875
    7. ' ' → logprob: -18.625
    8. '   ' → logprob: -19.5
    9. '][' → logprob: -19.625
    10. '1' → logprob: -19.75

Token 387: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.000006675720215
    4. '
' → logprob: -17.62500762939453
    5. '   ' → logprob: -17.62500762939453
    6. '	' → logprob: -18.00000762939453
    7. '０' → logprob: -19.12500762939453
    8. '```' → logprob: -19.50000762939453
    9. '][' → logprob: -19.75000762939453
    10. '۰' → logprob: -20.00000762939453

Token 388: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -2.165027217415627e-05
    2. ']' → logprob: -11.500021934509277
    3. '[' → logprob: -12.125021934509277
    4. '1' → logprob: -12.125021934509277
    5. ' ][' → logprob: -14.500021934509277
    6. '   ' → logprob: -17.00002098083496
    7. '"][' → logprob: -17.62502098083496
    8. ''s' → logprob: -17.62502098083496
    9. ' ' → logprob: -17.75002098083496
    10. ''][' → logprob: -18.00002098083496

Token 389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007189844618551433
    2. '0' → logprob: -7.25071907043457
    3. '
' → logprob: -11.87571907043457
    4. '' → logprob: -14.37571907043457
    5. '][' → logprob: -15.25071907043457
    6. ' ' → logprob: -15.25071907043457
    7. '[' → logprob: -15.50071907043457
    8. '
' → logprob: -15.75071907043457
    9. '   ' → logprob: -16.37571907043457
    10. '```' → logprob: -16.50071907043457

Token 390: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48621493577957153
    2. ' +' → logprob: -0.9862149357795715
    3. ']' → logprob: -4.486215114593506
    4. ']+' → logprob: -7.861215114593506
    5. ')' → logprob: -7.986215114593506
    6. ' ' → logprob: -10.986214637756348
    7. '   ' → logprob: -11.486214637756348
    8. ' plus' → logprob: -11.736214637756348
    9. '    ' → logprob: -11.736214637756348
    10. ' ]' → logprob: -11.736214637756348

Token 391: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20146293938159943
    2. '+' → logprob: -1.701462984085083
    3. '+i' → logprob: -10.826462745666504
    4. '               ' → logprob: -11.201462745666504
    5. '
' → logprob: -13.076462745666504
    6. ' ' → logprob: -13.326462745666504
    7. '+b' → logprob: -13.701462745666504
    8. '                ' → logprob: -13.951462745666504
    9. '+k' → logprob: -13.951462745666504
    10. ' +
' → logprob: -14.076462745666504

Token 392: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0564331205387134e-05
    2. ' v' → logprob: -12.12501049041748
    3. 'i' → logprob: -12.25001049041748
    4. '   ' → logprob: -15.00001049041748
    5. 'vi' → logprob: -17.375011444091797
    6. '_v' → logprob: -19.250011444091797
    7. 'vq' → logprob: -19.500011444091797
    8. ' i' → logprob: -20.000011444091797
    9. '```' → logprob: -20.000011444091797
    10. '	v' → logprob: -20.000011444091797

Token 393: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.11478439718484879
    2. '*i' → logprob: -2.6147844791412354
    3. '*' → logprob: -3.3647844791412354
    4. 'i' → logprob: -7.364784240722656
    5. ' ' → logprob: -10.864784240722656
    6. ' i' → logprob: -10.989784240722656
    7. ' ' → logprob: -11.489784240722656
    8. '   ' → logprob: -12.739784240722656
    9. '```' → logprob: -13.489784240722656
    10. '[i' → logprob: -13.989784240722656

Token 394: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007100477814674377
    2. ' i' → logprob: -7.2507100105285645
    3. '*i' → logprob: -17.125709533691406
    4. '	i' → logprob: -17.625709533691406
    5. '<|end|>' → logprob: -18.625709533691406
    6. ' ' → logprob: -19.875709533691406
    7. '[i' → logprob: -20.250709533691406
    8. '$i' → logprob: -20.625709533691406
    9. '_i' → logprob: -20.750709533691406
    10. '{i' → logprob: -20.750709533691406

Token 395: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12751078605651855
    2. '<|end|>' → logprob: -2.3775107860565186
    3. ',' → logprob: -5.127511024475098
    4. '                ' → logprob: -5.377511024475098
    5. ' ' → logprob: -5.877511024475098
    6. '       ' → logprob: -6.377511024475098
    7. '              ' → logprob: -6.502511024475098
    8. '           ' → logprob: -6.627511024475098
    9. '```' → logprob: -6.627511024475098
    10. ')' → logprob: -7.002511024475098

Token 396: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6928706169128418
    2. '<|end|>' → logprob: -1.0678706169128418
    3. ' 
' → logprob: -2.317870616912842
    4. '               ' → logprob: -3.442870616912842
    5. '                ' → logprob: -5.442870616912842
    6. '  
' → logprob: -5.817870616912842
    7. '                
' → logprob: -5.817870616912842
    8. '[' → logprob: -6.317870616912842
    9. '<|end|>' → logprob: -6.692870616912842
    10. '\' → logprob: -6.817870616912842

Token 397: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5819559097290039
    2. ' 
' → logprob: -1.456955909729004
    3. '<|end|>' → logprob: -3.081955909729004
    4. '1' → logprob: -3.331955909729004
    5. ' if' → logprob: -3.706955909729004
    6. ' while' → logprob: -4.456955909729004
    7. '<|end|>' → logprob: -4.831955909729004
    8. '                ' → logprob: -4.956955909729004
    9. '[' → logprob: -4.956955909729004
    10. ''' → logprob: -5.081955909729004

Token 398: ' ' (ID: 220)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4361535310745239
    2. 'if' → logprob: -1.311153531074524
    3. '               ' → logprob: -3.0611534118652344
    4. ' while' → logprob: -3.6861534118652344
    5. ' if' → logprob: -4.561153411865234
    6. '#' → logprob: -6.686153411865234
    7. '           ' → logprob: -9.311153411865234
    8. 'idx' → logprob: -9.811153411865234
    9. 'q' → logprob: -10.061153411865234
    10. '                
' → logprob: -10.061153411865234

Token 399: '先' (ID: 12231)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14452840387821198
    2. 'if' → logprob: -2.019528388977051
    3. ' while' → logprob: -6.894528388977051
    4. '#' → logprob: -8.51952838897705
    5. 'limit' → logprob: -8.76952838897705
    6. 'idx' → logprob: -8.89452838897705
    7. 'count' → logprob: -9.26952838897705
    8. ' if' → logprob: -10.01952838897705
    9. 'cnt' → logprob: -10.01952838897705
    10. 'k' → logprob: -10.39452838897705

Token 400: '頭' (ID: 73036)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.08834818005561829
    2. '[' → logprob: -3.088348150253296
    3. 'idx' → logprob: -4.963348388671875
    4. 'x' → logprob: -5.213348388671875
    5. 'if' → logprob: -5.338348388671875
    6. 'opleft' → logprob: -5.588348388671875
    7. ' while' → logprob: -5.713348388671875
    8. '1' → logprob: -5.713348388671875
    9. 'q' → logprob: -7.088348388671875
    10. 'mp' → logprob: -7.088348388671875

Token 401: 'が' (ID: 6632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3878228962421417
    2. 'idx' → logprob: -1.6378228664398193
    3. 'index' → logprob: -2.8878228664398193
    4. '_index' → logprob: -3.2628228664398193
    5. '_idx' → logprob: -3.7628228664398193
    6. 'i' → logprob: -5.512823104858398
    7. '_i' → logprob: -7.137823104858398
    8. 'x' → logprob: -7.387823104858398
    9. 'while' → logprob: -7.637823104858398
    10. '0' → logprob: -7.762823104858398

Token 402: '次' (ID: 11445)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2137368619441986
    2. 'i' → logprob: -1.838736891746521
    3. '(i' → logprob: -3.5887367725372314
    4. '(q' → logprob: -5.3387370109558105
    5. ' q' → logprob: -7.4637370109558105
    6. ' i' → logprob: -8.713736534118652
    7. '(' → logprob: -9.463736534118652
    8. '[i' → logprob: -9.588736534118652
    9. '[q' → logprob: -10.463736534118652
    10. ' (' → logprob: -10.463736534118652

Token 403: 'に' (ID: 5280)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.05954889580607414
    2. ' q' → logprob: -3.059548854827881
    3. 'i' → logprob: -4.934548854827881
    4. '[' → logprob: -7.059548854827881
    5. '0' → logprob: -7.309548854827881
    6. '(' → logprob: -8.059549331665039
    7. '[q' → logprob: -8.184549331665039
    8. '[i' → logprob: -8.309549331665039
    9. ' ' → logprob: -8.309549331665039
    10. 'の' → logprob: -9.059549331665039

Token 404: '�' (ID: 18788)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00762934610247612
    2. '[' → logprob: -5.13262939453125
    3. 'i' → logprob: -7.25762939453125
    4. ' q' → logprob: -7.38262939453125
    5. '0' → logprob: -9.00762939453125
    6. '[q' → logprob: -9.00762939453125
    7. '[i' → logprob: -10.75762939453125
    8. 'md' → logprob: -11.13262939453125
    9. 'idx' → logprob: -11.63262939453125
    10. '=q' → logprob: -11.88262939453125

Token 405: '�' (ID: 226)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0014282134361565113
    2. '0' → logprob: -6.876428127288818
    3. 'i' → logprob: -8.501428604125977
    4. '[' → logprob: -8.751428604125977
    5. ' q' → logprob: -10.501428604125977
    6. '=q' → logprob: -13.626428604125977
    7. '1' → logprob: -13.751428604125977
    8. '[q' → logprob: -13.876428604125977
    9. '	q' → logprob: -14.376428604125977
    10. '``' → logprob: -15.001428604125977

Token 406: '囲' (ID: 173970)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.011964541859924793
    2. '0' → logprob: -4.511964321136475
    3. ' q' → logprob: -7.261964321136475
    4. '[' → logprob: -8.636964797973633
    5. 'i' → logprob: -11.136964797973633
    6. '=q' → logprob: -11.386964797973633
    7. '	q' → logprob: -13.136964797973633
    8. '[q' → logprob: -13.261964797973633
    9. '1' → logprob: -13.886964797973633
    10. ' ' → logprob: -14.011964797973633

Token 407: '外' (ID: 10727)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.008718342520296574
    2. '[' → logprob: -5.883718490600586
    3. '数' → logprob: -6.383718490600586
    4. ' q' → logprob: -6.758718490600586
    5. 'i' → logprob: -6.883718490600586
    6. '[q' → logprob: -7.633718490600586
    7. '<' → logprob: -8.633718490600586
    8. '=q' → logprob: -9.383718490600586
    9. 'う' → logprob: -9.633718490600586
    10. '_q' → logprob: -9.633718490600586

Token 408: 'に' (ID: 5280)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004234985448420048
    2. '[' → logprob: -6.379234790802002
    3. 'の' → logprob: -7.004234790802002
    4. ' q' → logprob: -7.879234790802002
    5. 'i' → logprob: -8.25423526763916
    6. 'か' → logprob: -8.75423526763916
    7. '((' → logprob: -9.12923526763916
    8. 'k' → logprob: -9.25423526763916
    9. 'い' → logprob: -9.37923526763916
    10. '(' → logprob: -9.62923526763916

Token 409: '出' (ID: 6390)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0065872324630618095
    2. '0' → logprob: -5.631587028503418
    3. ' q' → logprob: -6.006587028503418
    4. 'i' → logprob: -9.506587028503418
    5. 'range' → logprob: -9.631587028503418
    6. '(' → logprob: -9.756587028503418
    7. 'k' → logprob: -9.881587028503418
    8. '1' → logprob: -10.381587028503418
    9. '[' → logprob: -10.506587028503418
    10. ' ' → logprob: -10.506587028503418

Token 410: 'る' (ID: 6996)
  Prédit: 'た'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'た' → logprob: -0.7867801189422607
    2. 'る' → logprob: -1.1617801189422607
    3. 'て' → logprob: -2.0367801189422607
    4. 'q' → logprob: -2.7867801189422607
    5. '```' → logprob: -3.9117801189422607
    6. '0' → logprob: -5.66178035736084
    7. 'か' → logprob: -5.78678035736084
    8. 'され' → logprob: -6.16178035736084
    9. '(' → logprob: -6.66178035736084
    10. 'そう' → logprob: -7.03678035736084

Token 411: 'よう' (ID: 72683)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0402330718934536
    2. ' q' → logprob: -3.4152331352233887
    3. '[' → logprob: -5.790233135223389
    4. 'i' → logprob: -6.540233135223389
    5. '0' → logprob: -7.415233135223389
    6. '(' → logprob: -8.16523265838623
    7. '(q' → logprob: -8.41523265838623
    8. '=q' → logprob: -8.54023265838623
    9. '[q' → logprob: -8.54023265838623
    10. '	q' → logprob: -8.91523265838623

Token 412: 'で' (ID: 4344)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11726848036050797
    2. 'q' → logprob: -2.7422685623168945
    3. ' if' → logprob: -3.6172685623168945
    4. 'while' → logprob: -4.9922685623168945
    5. '   ' → logprob: -5.6172685623168945
    6. ' q' → logprob: -5.8672685623168945
    7. '  ' → logprob: -6.6172685623168945
    8. ' ' → logprob: -6.9922685623168945
    9. '(' → logprob: -7.2422685623168945
    10. '#' → logprob: -7.2422685623168945

Token 413: 'あ' (ID: 10294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4393482804298401
    2. ' if' → logprob: -1.4393482208251953
    3. 'q' → logprob: -2.5643482208251953
    4. ' q' → logprob: -3.6893482208251953
    5. 'i' → logprob: -5.689348220825195
    6. ' ' → logprob: -6.189348220825195
    7. '(' → logprob: -6.189348220825195
    8. '  ' → logprob: -6.189348220825195
    9. '#' → logprob: -6.314348220825195
    10. '(q' → logprob: -6.564348220825195

Token 414: 'れば' (ID: 139693)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5741353034973145
    2. '           ' → logprob: -2.3241353034973145
    3. ' if' → logprob: -2.5741353034973145
    4. 'き' → logprob: -2.9491353034973145
    5. '   ' → logprob: -3.1991353034973145
    6. 'q' → logprob: -3.1991353034973145
    7. '    ' → logprob: -3.3241353034973145
    8. 'れば' → logprob: -4.5741353034973145
    9. '               ' → logprob: -4.6991353034973145
    10. '  ' → logprob: -4.9491353034973145

Token 415: '削' (ID: 156018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14818337559700012
    2. ' if' → logprob: -2.2731833457946777
    3. 'while' → logprob: -3.6481833457946777
    4. ' while' → logprob: -5.148183345794678
    5. 'i' → logprob: -7.023183345794678
    6. ' i' → logprob: -7.148183345794678
    7. '0' → logprob: -7.898183345794678
    8. '```' → logprob: -8.398183822631836
    9. ' ' → logprob: -8.773183822631836
    10. ' q' → logprob: -8.898183822631836

Token 416: '除' (ID: 18593)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06764931231737137
    2. 'p' → logprob: -3.3176493644714355
    3. 'while' → logprob: -5.3176493644714355
    4. '```' → logprob: -5.5676493644714355
    5. '           ' → logprob: -5.6926493644714355
    6. 'ー' → logprob: -5.9426493644714355
    7. '0' → logprob: -6.4426493644714355
    8. '       ' → logprob: -6.5676493644714355
    9. '``' → logprob: -6.9426493644714355
    10. 'ム' → logprob: -7.1926493644714355

Token 417: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6489354968070984
    2. ' if' → logprob: -0.7739354968070984
    3. '               ' → logprob: -5.023935317993164
    4. 'while' → logprob: -5.648935317993164
    5. '(' → logprob: -6.773935317993164
    6. ' while' → logprob: -7.148935317993164
    7. '[' → logprob: -7.273935317993164
    8. '()' → logprob: -7.648935317993164
    9. ' (' → logprob: -7.773935317993164
    10. '```' → logprob: -7.773935317993164

Token 418: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3501056730747223
    2. 'if' → logprob: -1.8501056432724
    3. '               ' → logprob: -2.3501057624816895
    4. 'while' → logprob: -4.2251057624816895
    5. ' while' → logprob: -4.3501057624816895
    6. ' and' → logprob: -4.7251057624816895
    7. '           ' → logprob: -6.3501057624816895
    8. '[' → logprob: -6.6001057624816895
    9. 'and' → logprob: -7.3501057624816895
    10. '(' → logprob: -7.8501057624816895

Token 419: ' if' (ID: 538)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.22424264252185822
    2. 'if' (adapté à ' if') → logprob: -1.7242426872253418
    3. ' q' → logprob: -4.099242687225342
    4. ' if' → logprob: -5.349242687225342
    5. '0' → logprob: -7.349242687225342
    6. 'while' → logprob: -8.599242210388184
    7. '               ' → logprob: -9.099242210388184
    8. '(' → logprob: -9.224242210388184
    9. '1' → logprob: -9.974242210388184
    10. '(q' → logprob: -10.724242210388184

Token 420: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10138370096683502
    2. ' q' → logprob: -2.476383686065674
    3. 'i' → logprob: -4.601383686065674
    4. ' i' → logprob: -6.101383686065674
    5. 'len' → logprob: -10.601384162902832
    6. ' ' → logprob: -10.726384162902832
    7. '   ' → logprob: -11.476384162902832
    8. '(q' → logprob: -11.476384162902832
    9. '(i' → logprob: -11.976384162902832
    10. ' len' → logprob: -12.101384162902832

Token 421: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3993339538574219
    2. 'and' → logprob: -1.1493339538574219
    3. ' and' → logprob: -4.399333953857422
    4. '0' → logprob: -9.524333953857422
    5. ' ' → logprob: -10.899333953857422
    6. '```' → logprob: -12.774333953857422
    7. '[-' → logprob: -13.149333953857422
    8. ' [' → logprob: -13.274333953857422
    9. '   ' → logprob: -14.024333953857422
    10. '	and' → logprob: -14.524333953857422

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.347765181795694e-05
    2. ' and' → logprob: -10.000053405761719
    3. ' ' → logprob: -11.875053405761719
    4. 'and' → logprob: -14.000053405761719
    5. '   ' → logprob: -16.75005340576172
    6. '０' → logprob: -16.75005340576172
    7. '۰' → logprob: -17.37505340576172
    8. '[' → logprob: -18.12505340576172
    9. '٠' → logprob: -18.50005340576172
    10. '```' → logprob: -18.50005340576172

Token 423: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0017224266193807125
    2. '[' → logprob: -6.37672233581543
    3. '0' → logprob: -11.62672233581543
    4. '   ' → logprob: -12.37672233581543
    5. ' ][' → logprob: -13.00172233581543
    6. ']' → logprob: -13.62672233581543
    7. 'and' → logprob: -13.87672233581543
    8. ' ' → logprob: -14.62672233581543
    9. ''][' → logprob: -14.62672233581543
    10. ')[' → logprob: -15.00172233581543

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.200166469876422e-06
    2. 'i' → logprob: -12.250004768371582
    3. '1' → logprob: -14.875004768371582
    4. '
' → logprob: -18.2500057220459
    5. ' ' → logprob: -18.7500057220459
    6. '   ' → logprob: -18.7500057220459
    7. '０' → logprob: -19.0000057220459
    8. '۰' → logprob: -19.0000057220459
    9. '[' → logprob: -19.1250057220459
    10. '(i' → logprob: -19.8750057220459

Token 425: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.13381293416023254
    2. ']' → logprob: -2.88381290435791
    3. ']<=' → logprob: -3.50881290435791
    4. '==' → logprob: -4.00881290435791
    5. ' <=' → logprob: -4.50881290435791
    6. ']==' → logprob: -4.75881290435791
    7. ')<=' → logprob: -7.63381290435791
    8. '<' → logprob: -7.63381290435791
    9. ')' → logprob: -8.50881290435791
    10. ' ==' → logprob: -8.63381290435791

Token 426: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.26630303263664246
    2. '<=' → logprob: -1.5163030624389648
    3. '==' → logprob: -4.391303062438965
    4. ' <' → logprob: -6.766303062438965
    5. '<i' → logprob: -7.516303062438965
    6. ' <=' → logprob: -8.766303062438965
    7. ' ==' → logprob: -10.766303062438965
    8. '<u' → logprob: -13.141303062438965
    9. '<int' → logprob: -13.516303062438965
    10. '<
' → logprob: -13.766303062438965

Token 427: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010374527191743255
    2. ' i' → logprob: -6.87603759765625
    3. ' ' → logprob: -13.12603759765625
    4. '   ' → logprob: -13.87603759765625
    5. '  ' → logprob: -14.12603759765625
    6. '(i' → logprob: -14.62603759765625
    7. '	i' → logprob: -15.00103759765625
    8. '{i' → logprob: -16.87603759765625
    9. '    ' → logprob: -17.00103759765625
    10. '     ' → logprob: -17.00103759765625

Token 428: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6941432952880859
    2. '-' → logprob: -0.9441432952880859
    3. '-m' → logprob: -2.194143295288086
    4. 'm' → logprob: -10.944143295288086
    5. '-M' → logprob: -11.819143295288086
    6. ' m' → logprob: -12.694143295288086
    7. '-n' → logprob: -13.819143295288086
    8. ' ' → logprob: -13.944143295288086
    9. '-q' → logprob: -14.944143295288086
    10. '−' → logprob: -15.069143295288086

Token 429: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015198609326034784
    2. ' m' → logprob: -6.501519680023193
    3. '(m' → logprob: -11.126520156860352
    4. '	m' → logprob: -13.626520156860352
    5. ' (' → logprob: -14.251520156860352
    6. '1' → logprob: -14.876520156860352
    7. '   ' → logprob: -15.001520156860352
    8. ' ' → logprob: -15.626520156860352
    9. '_m' → logprob: -17.00152015686035
    10. '(' → logprob: -17.50152015686035

Token 430: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0944603756070137
    2. ':
' → logprob: -2.8444604873657227
    3. '+' → logprob: -3.5944604873657227
    4. ':q' → logprob: -6.219460487365723
    5. ' +' → logprob: -7.344460487365723
    6. '<|end|>' → logprob: -7.844460487365723
    7. ' :' → logprob: -8.469460487365723
    8. '):
' → logprob: -8.594460487365723
    9. '):' → logprob: -8.844460487365723
    10. ':return' → logprob: -8.844460487365723

Token 431: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.018167849630117416
    2. ' q' → logprob: -4.018167972564697
    3. '	q' → logprob: -11.018167495727539
    4. ',q' → logprob: -14.643167495727539
    5. '   ' → logprob: -14.768167495727539
    6. '.q' → logprob: -15.893167495727539
    7. ' 
' → logprob: -16.64316749572754
    8. '```' → logprob: -16.76816749572754
    9. ':q' → logprob: -16.89316749572754
    10. '[q' → logprob: -17.01816749572754

Token 432: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005949704209342599
    2. '.pop' → logprob: -7.5005950927734375
    3. '.' → logprob: -10.125595092773438
    4. 'p' → logprob: -13.875595092773438
    5. '.u' → logprob: -15.250595092773438
    6. 'opleft' → logprob: -15.375595092773438
    7. '.q' → logprob: -15.500595092773438
    8. 'pop' → logprob: -15.875595092773438
    9. ' .' → logprob: -16.625595092773438
    10. 'u' → logprob: -17.375595092773438

Token 433: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.006778134498745203
    2. 'op' → logprob: -5.006778240203857
    3. 'opl' → logprob: -10.3817777633667
    4. 'ople' → logprob: -10.3817777633667
    5. 'opt' → logprob: -15.1317777633667
    6. '```' → logprob: -15.6317777633667
    7. 'oph' → logprob: -16.131778717041016
    8. 'opf' → logprob: -16.256778717041016
    9. 'opy' → logprob: -17.381778717041016
    10. 'p' → logprob: -17.506778717041016

Token 434: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.319370302458992e-06
    2. '()
' → logprob: -12.250005722045898
    3. '(' → logprob: -15.125005722045898
    4. '()

' → logprob: -16.2500057220459
    5. '()
' → logprob: -16.7500057220459
    6. '()]' → logprob: -17.1250057220459
    7. ' ()' → logprob: -17.3750057220459
    8. '()\' → logprob: -17.3750057220459
    9. '()`' → logprob: -17.7500057220459
    10. '()>' → logprob: -18.0000057220459

Token 435: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 437: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.07969599217176437
    2. '(' → logprob: -2.5796959400177
    3. '(max' → logprob: -7.954696178436279
    4. '(sum' → logprob: -8.079695701599121
    5. '(*' → logprob: -9.579695701599121
    6. '()' → logprob: -9.704695701599121
    7. '(
' → logprob: -12.454695701599121
    8. 'dp' → logprob: -12.454695701599121
    9. '(p' → logprob: -13.329695701599121
    10. '(*)' → logprob: -13.829695701599121

Token 438: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.1002185270190239
    2. '[' → logprob: -2.3502185344696045
    3. ')' → logprob: -11.475218772888184
    4. '[end' → logprob: -14.725218772888184
    5. '[w' → logprob: -15.225218772888184
    6. '[n' → logprob: -15.475218772888184
    7. '[max' → logprob: -15.975218772888184
    8. '   ' → logprob: -16.100217819213867
    9. ' [-' → logprob: -16.100217819213867
    10. '))' → logprob: -16.725217819213867

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '１' → logprob: -14.500000953674316
    3. ' ' → logprob: -14.500000953674316
    4. '```' → logprob: -17.375001907348633
    5. ']' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.812501907348633
    7. '۱' → logprob: -19.000001907348633
    8. '])' → logprob: -19.000001907348633
    9. ')' → logprob: -19.562501907348633
    10. '`' → logprob: -19.750001907348633

Token 440: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012171403504908085
    2. '])' → logprob: -6.751217365264893
    3. ' )' → logprob: -11.001216888427734
    4. '）' → logprob: -11.626216888427734
    5. '})' → logprob: -11.751216888427734
    6. '))' → logprob: -12.126216888427734
    7. ')
' → logprob: -12.751216888427734
    8. '`)' → logprob: -13.501216888427734
    9. '())' → logprob: -13.626216888427734
    10. '>)' → logprob: -14.001216888427734

Token 441: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7661343812942505
    2. 'main' → logprob: -0.7661343812942505
    3. '<|end|>' → logprob: -3.141134262084961
    4. '
' → logprob: -4.016134262084961
    5. '(main' → logprob: -5.391134262084961
    6. ' main' → logprob: -6.641134262084961
    7. ')' → logprob: -6.891134262084961
    8. '```' → logprob: -7.516134262084961
    9. '\n' → logprob: -8.016134262084961
    10. ' if' → logprob: -8.516134262084961

Token 442: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 440
Tokens correctement prédits (1ère position, stricte): 135
Tokens correctement prédits (1ère position, avec adaptation): 141
Tokens correctement prédits (top 10): 295
Précision stricte (1ère position): 30.68%
Précision adaptée (1ère position): 32.05%
Précision (top 10): 67.05%
================================================================================
