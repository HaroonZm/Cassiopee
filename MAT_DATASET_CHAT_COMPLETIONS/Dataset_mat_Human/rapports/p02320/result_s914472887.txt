================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N,W,*L=map(int,open(0).read().split())
d={}
for v,w,m in zip(*[iter(L)]*3):
	d[(v,w)]=d.get((v,w),0)+m
dp=[0]*(W+1)
for (v,w),m in d.items():
	cw,cv=w,v
	b=m.bit_length()
	for i in range(b):
		if i==b-1:
			w=cw*(m-2**(b-1)+1)
			v=cv*(m-2**(b-1)+1)
		for j in range(W,w-1,-1):
			t=dp[j-w]+v
			if t>dp[j]:dp[j]=t
		w*=2
		v*=2
print(dp[W])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',W' (ID: 117252)
  → Token d'amorce (pas de prédiction)

Token 2: ',*' (ID: 65674)
  → Token d'amorce (pas de prédiction)

Token 3: 'L' (ID: 43)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012713411822915077
    2. ',' → logprob: -5.012713432312012
    3. ' =' → logprob: -5.137713432312012
    4. ')' → logprob: -10.387713432312012
    5. '.' → logprob: -11.887713432312012
    6. ' ' → logprob: -11.887713432312012
    7. '=[]' → logprob: -12.387713432312012
    8. ',W' → logprob: -12.387713432312012
    9. ',N' → logprob: -12.512713432312012
    10. ',*' → logprob: -12.762713432312012

Token 4: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09068270027637482
    2. ',' → logprob: -2.5906827449798584
    3. ' =' → logprob: -4.590682506561279
    4. ')' → logprob: -6.840682506561279
    5. '.' → logprob: -8.840682983398438
    6. ';' → logprob: -9.465682983398438
    7. '[' → logprob: -9.965682983398438
    8. '```' → logprob: -10.090682983398438
    9. '(' → logprob: -10.590682983398438
    10. ' ' → logprob: -10.840682983398438

Token 5: 'map' (ID: 3726)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8107061982154846
    2. 'map' → logprob: -1.3107061386108398
    3. 'input' → logprob: -1.4357061386108398
    4. '[]' → logprob: -4.43570613861084
    5. ' map' → logprob: -4.81070613861084
    6. ' range' → logprob: -4.93570613861084
    7. '[' → logprob: -4.93570613861084
    8. ' input' → logprob: -5.56070613861084
    9. '0' → logprob: -5.93570613861084
    10. 'list' → logprob: -6.06070613861084

Token 6: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007941396324895322
    2. '(lambda' → logprob: -8.000794410705566
    3. '<|end|>' → logprob: -8.750794410705566
    4. '```' → logprob: -9.500794410705566
    5. '(int' → logprob: -10.000794410705566
    6. '(user' → logprob: -10.125794410705566
    7. '(open' → logprob: -11.125794410705566
    8. ' (' → logprob: -11.125794410705566
    9. '(
' → logprob: -11.500794410705566
    10. '(input' → logprob: -11.500794410705566

Token 7: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.3957546055316925
    2. ')' → logprob: -1.3957545757293701
    3. '(' → logprob: -2.64575457572937
    4. ')(' → logprob: -5.645754814147949
    5. '`)' → logprob: -7.270754814147949
    6. '```' → logprob: -7.395754814147949
    7. '(token' → logprob: -8.14575481414795
    8. '(raw' → logprob: -8.27075481414795
    9. ')(__' → logprob: -8.52075481414795
    10. '<|end|>' → logprob: -8.52075481414795

Token 8: 'open' (ID: 3843)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020742513239383698
    2. ' input' → logprob: -3.895742416381836
    3. '(input' → logprob: -8.645742416381836
    4. ')' → logprob: -11.770742416381836
    5. ',input' → logprob: -12.270742416381836
    6. 'open' → logprob: -12.395742416381836
    7. '=input' → logprob: -13.395742416381836
    8. '```' → logprob: -13.770742416381836
    9. '[input' → logprob: -13.895742416381836
    10. '(' → logprob: -14.020742416381836

Token 9: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6935668587684631
    2. '('' → logprob: -0.8185668587684631
    3. '("' → logprob: -2.9435667991638184
    4. '<|end|>' → logprob: -5.943566799163818
    5. '(open' → logprob: -7.443566799163818
    6. '(""))' → logprob: -7.943566799163818
    7. '<|end|>' → logprob: -8.443567276000977
    8. ' (' → logprob: -8.443567276000977
    9. '(user' → logprob: -8.693567276000977
    10. '```' → logprob: -8.693567276000977

Token 10: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1098807156085968
    2. ''' → logprob: -2.7348806858062744
    3. '"' → logprob: -3.8598806858062744
    4. '(' → logprob: -4.2348809242248535
    5. '('' → logprob: -6.2348809242248535
    6. ')' → logprob: -7.6098809242248535
    7. '("' → logprob: -8.859880447387695
    8. '1' → logprob: -9.234880447387695
    9. ''s' → logprob: -9.359880447387695
    10. '```' → logprob: -9.609880447387695

Token 11: ').' (ID: 741)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.30230122804641724
    2. '()).' → logprob: -2.0523011684417725
    3. '()' → logprob: -3.1773011684417725
    4. '().' → logprob: -3.5523011684417725
    5. '()))' → logprob: -3.5523011684417725
    6. ').' → logprob: -4.302301406860352
    7. ')' → logprob: -4.427301406860352
    8. '(),' → logprob: -5.927301406860352
    9. '.readline' → logprob: -5.927301406860352
    10. '))' → logprob: -6.677301406860352

Token 12: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.8624639324116288e-06
    2. '.readline' → logprob: -14.250001907348633
    3. ' readline' → logprob: -14.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. ')' → logprob: -16.375001907348633
    6. 'split' → logprob: -16.500001907348633
    7. ' read' → logprob: -16.750001907348633
    8. 'rea' → logprob: -16.875001907348633
    9. '__' → logprob: -17.375001907348633
    10. 'buffer' → logprob: -17.625001907348633

Token 13: '().' (ID: 1454)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6948118209838867
    2. ')' → logprob: -1.6948118209838867
    3. 'line' → logprob: -2.0698118209838867
    4. '().' → logprob: -2.4448118209838867
    5. '_lines' → logprob: -2.9448118209838867
    6. '```' → logprob: -4.069811820983887
    7. '_tokens' → logprob: -4.569811820983887
    8. '_line' → logprob: -4.819811820983887
    9. '())' → logprob: -5.194811820983887
    10. '()' → logprob: -5.569811820983887

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005435001221485436
    2. 'read' → logprob: -7.875543594360352
    3. 'strip' → logprob: -8.875543594360352
    4. 'rstrip' → logprob: -11.000543594360352
    5. ' split' → logprob: -12.375543594360352
    6. '```' → logprob: -13.375543594360352
    7. 'decode' → logprob: -15.000543594360352
    8. 'replace' → logprob: -15.125543594360352
    9. '(split' → logprob: -15.625543594360352
    10. ')' → logprob: -15.625543594360352

Token 15: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2851606011390686
    2. '())' → logprob: -2.535160541534424
    3. '('' → logprob: -2.785160541534424
    4. ')' → logprob: -3.035160541534424
    5. '(()' → logprob: -4.410160541534424
    6. '()' → logprob: -4.410160541534424
    7. '((' → logprob: -5.035160541534424
    8. '```' → logprob: -5.035160541534424
    9. '<|end|>' → logprob: -5.410160541534424
    10. '([' → logprob: -5.410160541534424

Token 16: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9708602428436279
    2. 'a' → logprob: -1.220860242843628
    3. 'r' → logprob: -1.845860242843628
    4. 'for' → logprob: -3.095860242843628
    5. 'D' → logprob: -3.970860242843628
    6. 'n' → logprob: -4.220860481262207
    7. 'R' → logprob: -4.220860481262207
    8. 'A' → logprob: -4.220860481262207
    9. 'L' → logprob: -5.095860481262207
    10. 'x' → logprob: -5.220860481262207

Token 17: '={}
' (ID: 146130)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10611741244792938
    2. '={}' → logprob: -2.6061174869537354
    3. '={' → logprob: -4.106117248535156
    4. '=[]' → logprob: -5.106117248535156
    5. 'ef' → logprob: -6.731117248535156
    6. '=dict' → logprob: -6.981117248535156
    7. '=[' → logprob: -7.481117248535156
    8. '={}
' → logprob: -8.106117248535156
    9. ' =' → logprob: -8.481117248535156
    10. 'i' → logprob: -8.481117248535156

Token 18: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019361276645213366
    2. 'f' → logprob: -6.376935958862305
    3. '=' → logprob: -9.376935958862305
    4. 'r' → logprob: -9.751935958862305
    5. ' for' → logprob: -9.876935958862305
    6. '```' → logprob: -11.251935958862305
    7. '_' → logprob: -12.251935958862305
    8. '[' → logprob: -12.376935958862305
    9. ' ' → logprob: -12.876935958862305
    10. 'n' → logprob: -12.876935958862305

Token 19: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3596877455711365
    2. 'i' → logprob: -1.8596878051757812
    3. '_' → logprob: -2.8596878051757812
    4. ' w' → logprob: -3.7346878051757812
    5. ' _' → logprob: -3.8596878051757812
    6. ' x' → logprob: -4.109687805175781
    7. 'x' → logprob: -4.859687805175781
    8. 'w' → logprob: -5.109687805175781
    9. ' ' → logprob: -5.484687805175781
    10. ' v' → logprob: -5.734687805175781

Token 20: ',w' (ID: 49598)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42915424704551697
    2. 'in' → logprob: -1.0541542768478394
    3. ' ' → logprob: -8.304154396057129
    4. 'n' → logprob: -9.554154396057129
    5. 'i' → logprob: -10.179154396057129
    6. '	in' → logprob: -11.054154396057129
    7. ',' → logprob: -11.429154396057129
    8. '  ' → logprob: -11.554154396057129
    9. ' i' → logprob: -11.804154396057129
    10. 'v' → logprob: -11.804154396057129

Token 21: ',m' (ID: 26648)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14607851207256317
    2. 'in' → logprob: -2.021078586578369
    3. ',' → logprob: -5.896078586578369
    4. ',in' → logprob: -7.771078586578369
    5. ' ' → logprob: -9.396078109741211
    6. ',v' → logprob: -10.146078109741211
    7. '	in' → logprob: -11.146078109741211
    8. 's' → logprob: -11.271078109741211
    9. ',n' → logprob: -11.396078109741211
    10. ' ,' → logprob: -11.521078109741211

Token 22: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5235721468925476
    2. ' in' → logprob: -0.8985721468925476
    3. ',' → logprob: -8.398571968078613
    4. ' ' → logprob: -10.398571968078613
    5. ',in' → logprob: -10.398571968078613
    6. '```' → logprob: -10.648571968078613
    7. ',v' → logprob: -10.898571968078613
    8. 's' → logprob: -11.023571968078613
    9. 'n' → logprob: -11.273571968078613
    10. ',n' → logprob: -11.648571968078613

Token 23: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.07966307550668716
    2. 'zip' → logprob: -3.829663038253784
    3. '[' → logprob: -3.954663038253784
    4. ' range' → logprob: -4.954663276672363
    5. ' [' → logprob: -4.954663276672363
    6. '[w' → logprob: -5.454663276672363
    7. ' d' → logprob: -5.704663276672363
    8. ' map' → logprob: -5.829663276672363
    9. '[L' → logprob: -6.079663276672363
    10. 'range' → logprob: -6.454663276672363

Token 24: '(*' (ID: 9000)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.8001275658607483
    2. '(W' → logprob: -0.9251275658607483
    3. '(' → logprob: -2.3001275062561035
    4. '(*' → logprob: -3.8001275062561035
    5. '(N' → logprob: -4.0501275062561035
    6. '(range' → logprob: -4.5501275062561035
    7. '((' → logprob: -6.1751275062561035
    8. '([' → logprob: -6.8001275062561035
    9. '(V' → logprob: -9.425127983093262
    10. '(v' → logprob: -9.425127983093262

Token 25: '[' (ID: 58)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.2265361547470093
    2. '[' → logprob: -1.7265361547470093
    3. '(L' → logprob: -1.8515361547470093
    4. '(N' → logprob: -2.601536273956299
    5. '[L' → logprob: -2.601536273956299
    6. '([' → logprob: -2.726536273956299
    7. '[N' → logprob: -2.851536273956299
    8. '[[' → logprob: -3.226536273956299
    9. '(_,' → logprob: -4.351536273956299
    10. '(' → logprob: -4.351536273956299

Token 26: 'iter' (ID: 2340)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.7257058024406433
    2. '[' → logprob: -1.100705862045288
    3. '(L' → logprob: -3.350705862045288
    4. '[[' → logprob: -3.725705862045288
    5. '[N' → logprob: -3.850705862045288
    6. 'open' → logprob: -4.100705623626709
    7. 'map' → logprob: -4.350705623626709
    8. '(W' → logprob: -4.350705623626709
    9. '[*' → logprob: -4.350705623626709
    10. '([' → logprob: -4.600705623626709

Token 27: '(L' (ID: 11075)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.26032960414886475
    2. '(W' → logprob: -1.6353296041488647
    3. '(L' → logprob: -3.8853297233581543
    4. '((' → logprob: -4.510329723358154
    5. '(' → logprob: -6.885329723358154
    6. '(_' → logprob: -7.760329723358154
    7. '(open' → logprob: -8.135329246520996
    8. '[' → logprob: -8.135329246520996
    9. '(range' → logprob: -8.635329246520996
    10. '(w' → logprob: -9.260329246520996

Token 28: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.05152484029531479
    2. '),' → logprob: -3.8015248775482178
    3. ')],' → logprob: -3.9265248775482178
    4. ',' → logprob: -6.301524639129639
    5. ')])' → logprob: -6.301524639129639
    6. '],' → logprob: -6.551524639129639
    7. ')' → logprob: -6.676524639129639
    8. ')][' → logprob: -8.426525115966797
    9. ',n' → logprob: -8.551525115966797
    10. '   ' → logprob: -8.551525115966797

Token 29: '*' (ID: 9)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22388553619384766
    2. ',' → logprob: -1.7238855361938477
    3. '(N' → logprob: -4.223885536193848
    4. ',N' → logprob: -5.348885536193848
    5. ' ,' → logprob: -7.473885536193848
    6. '(n' → logprob: -7.723885536193848
    7. ',n' → logprob: -7.848885536193848
    8. '```' → logprob: -8.223885536193848
    9. '(),' → logprob: -8.473885536193848
    10. ')' → logprob: -8.473885536193848

Token 30: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00046796895912848413
    2. '2' → logprob: -8.250468254089355
    3. ' ' → logprob: -8.500468254089355
    4. '  ' → logprob: -12.750468254089355
    5. '   ' → logprob: -15.625468254089355
    6. '4' → logprob: -16.37546730041504
    7. '```' → logprob: -17.12546730041504
    8. '    ' → logprob: -18.12546730041504
    9. '３' → logprob: -18.37546730041504
    10. '1' → logprob: -18.37546730041504

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014432379975914955
    2. ':' → logprob: -4.389432430267334
    3. ')' → logprob: -6.389432430267334
    4. '):
' → logprob: -9.014431953430176
    5. ':)' → logprob: -9.389431953430176
    6. ' ):' → logprob: -10.639431953430176
    7. ',' → logprob: -12.764431953430176
    8. ' ' → logprob: -12.889431953430176
    9. '}:' → logprob: -13.889431953430176
    10. '):
' → logprob: -14.139431953430176

Token 32: '	d' (ID: 5971)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.26205065846443176
    2. 'd' → logprob: -2.1370506286621094
    3. ' ' → logprob: -2.2620506286621094
    4. '   ' → logprob: -5.637050628662109
    5. '	d' → logprob: -6.012050628662109
    6. '<|end|>' → logprob: -8.01205062866211
    7. ' if' → logprob: -8.26205062866211
    8. ' `' → logprob: -8.38705062866211
    9. ' 
' → logprob: -8.51205062866211
    10. ' w' → logprob: -8.51205062866211

Token 33: '[(' (ID: 20542)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.04042360559105873
    2. '[(' → logprob: -3.790423631668091
    3. '.setdefault' → logprob: -4.415423393249512
    4. '[w' → logprob: -6.165423393249512
    5. '[' → logprob: -6.165423393249512
    6. '[d' → logprob: -8.165423393249512
    7. '[f' → logprob: -8.665423393249512
    8. '[m' → logprob: -10.040423393249512
    9. '[c' → logprob: -10.165423393249512
    10. '[e' → logprob: -10.290423393249512

Token 34: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.4418171455617994e-05
    2. 'w' → logprob: -11.000044822692871
    3. '	v' → logprob: -11.000044822692871
    4. ' v' → logprob: -12.250044822692871
    5. ')v' → logprob: -12.500044822692871
    6. ')' → logprob: -14.250044822692871
    7. ',v' → logprob: -15.250044822692871
    8. '(v' → logprob: -15.500044822692871
    9. 'd' → logprob: -15.500044822692871
    10. '   ' → logprob: -15.625044822692871

Token 35: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.01418289914727211
    2. ',' → logprob: -4.264183044433594
    3. ',W' → logprob: -11.889183044433594
    4. ' ,' → logprob: -12.014183044433594
    5. '	' → logprob: -12.639183044433594
    6. ',m' → logprob: -14.514183044433594
    7. '-' → logprob: -14.639183044433594
    8. '	w' → logprob: -14.764183044433594
    9. ',v' → logprob: -14.764183044433594
    10. ',
' → logprob: -15.139183044433594

Token 36: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6328638195991516
    2. ')]' → logprob: -0.7578638195991516
    3. ']' → logprob: -9.132863998413086
    4. ' )' → logprob: -9.257863998413086
    5. ')=' → logprob: -11.007863998413086
    6. ',m' → logprob: -11.632863998413086
    7. ',' → logprob: -11.632863998413086
    8. ')])' → logprob: -12.632863998413086
    9. ']=' → logprob: -12.757863998413086
    10. ')],' → logprob: -12.882863998413086

Token 37: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.022450247779488564
    2. ']' → logprob: -3.8974502086639404
    3. ']+=' → logprob: -6.3974504470825195
    4. '=' → logprob: -9.14745044708252
    5. '=m' → logprob: -9.89745044708252
    6. ']=(' → logprob: -10.02245044708252
    7. ')=' → logprob: -11.14745044708252
    8. '+=' → logprob: -12.77245044708252
    9. ',m' → logprob: -13.02245044708252
    10. ']={' → logprob: -13.14745044708252

Token 38: 'd' (ID: 67)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.010263475589454174
    2. 'max' → logprob: -5.260263442993164
    3. 'd' → logprob: -6.135263442993164
    4. ' m' → logprob: -6.260263442993164
    5. '	m' → logprob: -7.510263442993164
    6. ' max' → logprob: -9.510263442993164
    7. 'int' → logprob: -9.760263442993164
    8. 'min' → logprob: -9.760263442993164
    9. '1' → logprob: -10.135263442993164
    10. '0' → logprob: -10.385263442993164

Token 39: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.07509524375200272
    2. '.setdefault' → logprob: -2.7000951766967773
    3. '[(' → logprob: -6.200095176696777
    4. '.' → logprob: -6.325095176696777
    5. 'get' → logprob: -6.950095176696777
    6. ' .' → logprob: -9.450095176696777
    7. '(' → logprob: -9.450095176696777
    8. '0' → logprob: -10.200095176696777
    9. '{}' → logprob: -10.450095176696777
    10. '[' → logprob: -10.575095176696777

Token 40: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.023561300709843636
    2. '(' → logprob: -4.023561477661133
    3. '(v' → logprob: -5.273561477661133
    4. ' (' → logprob: -9.148561477661133
    5. '<|end|>' → logprob: -9.648561477661133
    6. '(d' → logprob: -9.773561477661133
    7. '(value' → logprob: -10.898561477661133
    8. '(k' → logprob: -12.648561477661133
    9. '(key' → logprob: -12.648561477661133
    10. '(
' → logprob: -12.648561477661133

Token 41: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003421375877223909
    2. '(v' → logprob: -8.00034236907959
    3. ' v' → logprob: -12.75034236907959
    4. ')v' → logprob: -13.25034236907959
    5. '	v' → logprob: -14.25034236907959
    6. ' (' → logprob: -14.37534236907959
    7. ')' → logprob: -15.25034236907959
    8. ',v' → logprob: -15.37534236907959
    9. '?v' → logprob: -16.750341415405273
    10. 'w' → logprob: -16.875341415405273

Token 42: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.00016074994346126914
    2. ',' → logprob: -8.750161170959473
    3. ' ,' → logprob: -13.750161170959473
    4. ',z' → logprob: -15.375161170959473
    5. ',v' → logprob: -15.625161170959473
    6. '	' → logprob: -15.875161170959473
    7. '	w' → logprob: -16.000160217285156
    8. ',d' → logprob: -16.125160217285156
    9. ',s' → logprob: -16.375160217285156
    10. ',W' → logprob: -16.750160217285156

Token 43: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.14157076179981232
    2. ',' → logprob: -2.141570806503296
    3. ',),' → logprob: -4.266570568084717
    4. ')+' → logprob: -8.641571044921875
    5. ')' → logprob: -9.141571044921875
    6. '	' → logprob: -9.891571044921875
    7. ',)' → logprob: -10.391571044921875
    8. ',None' → logprob: -10.641571044921875
    9. '0' → logprob: -11.016571044921875
    10. ' ' → logprob: -11.141571044921875

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024544880725443363
    2. ' ' → logprob: -7.1274542808532715
    3. '-' → logprob: -7.7524542808532715
    4. '[]' → logprob: -7.8774542808532715
    5. 'float' → logprob: -8.12745475769043
    6. 'm' → logprob: -8.50245475769043
    7. ')' → logprob: -8.75245475769043
    8. '[])' → logprob: -10.25245475769043
    9. '999' → logprob: -11.00245475769043
    10. '-m' → logprob: -11.00245475769043

Token 45: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.009773559868335724
    2. ')' → logprob: -4.6347737312316895
    3. ' )' → logprob: -11.634773254394531
    4. ')+(' → logprob: -12.759773254394531
    5. '+' → logprob: -13.134773254394531
    6. '	' → logprob: -13.759773254394531
    7. ']+' → logprob: -14.634773254394531
    8. ' ' → logprob: -14.884773254394531
    9. '```' → logprob: -14.884773254394531
    10. '")+' → logprob: -15.009773254394531

Token 46: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.4868770196917467e-05
    2. ' m' → logprob: -10.625024795532227
    3. '	m' → logprob: -14.875024795532227
    4. '1' → logprob: -16.250024795532227
    5. ' ' → logprob: -17.875024795532227
    6. '*m' → logprob: -18.750024795532227
    7. '+m' → logprob: -19.500024795532227
    8. '   ' → logprob: -20.000024795532227
    9. '  ' → logprob: -20.375024795532227
    10. ' ' → logprob: -20.625024795532227

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08822573721408844
    2. '\n' → logprob: -3.463225841522217
    3. '<|end|>' → logprob: -3.838225841522217
    4. ' 
' → logprob: -4.338225841522217
    5. ' ' → logprob: -5.463225841522217
    6. '  
' → logprob: -6.588225841522217
    7. '
' → logprob: -6.713225841522217
    8. ')' → logprob: -6.838225841522217
    9. '```' → logprob: -6.963225841522217
    10. ',
' → logprob: -6.963225841522217

Token 48: 'dp' (ID: 19037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5223703980445862
    2. '<|end|>' → logprob: -2.3973703384399414
    3. ' ' → logprob: -2.7723703384399414
    4. 'for' → logprob: -2.7723703384399414
    5. '\n' → logprob: -3.0223703384399414
    6. ' 
' → logprob: -3.3973703384399414
    7. '+' → logprob: -4.147370338439941
    8. 'if' → logprob: -4.397370338439941
    9. 's' → logprob: -4.522370338439941
    10. '```' → logprob: -4.647370338439941

Token 49: '=[' (ID: 13370)
  Prédit: '={}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={}' → logprob: -0.27133503556251526
    2. '=' → logprob: -2.0213351249694824
    3. ' =' → logprob: -2.2713351249694824
    4. '={' → logprob: -7.646335124969482
    5. '=[' → logprob: -7.896335124969482
    6. '={(' → logprob: -8.021334648132324
    7. '=[]' → logprob: -8.646334648132324
    8. '={'' → logprob: -9.021334648132324
    9. '={}
' → logprob: -9.021334648132324
    10. '=dict' → logprob: -9.521334648132324

Token 50: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042142052203416824
    2. '[' → logprob: -3.667142152786255
    3. '-' → logprob: -5.167141914367676
    4. '(' → logprob: -5.292141914367676
    5. '{' → logprob: -6.292141914367676
    6. '[-' → logprob: -7.292141914367676
    7. 'float' → logprob: -7.417141914367676
    8. '{}' → logprob: -8.292141914367676
    9. '1' → logprob: -8.417141914367676
    10. '-(' → logprob: -8.542141914367676

Token 51: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.25007879734039307
    2. ']*' → logprob: -1.750078797340393
    3. ']' → logprob: -3.1250786781311035
    4. ']+' → logprob: -6.1250786781311035
    5. ',' → logprob: -6.7500786781311035
    6. '])' → logprob: -9.125079154968262
    7. ' for' → logprob: -11.125079154968262
    8. 'for' → logprob: -11.125079154968262
    9. ']*)' → logprob: -11.375079154968262
    10. ' ]' → logprob: -11.500079154968262

Token 52: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.31671562790870667
    2. 'N' → logprob: -1.3167155981063843
    3. '100' → logprob: -7.066715717315674
    4. '10' → logprob: -7.191715717315674
    5. ' W' → logprob: -7.691715717315674
    6. '101' → logprob: -8.191715240478516
    7. '2' → logprob: -8.316715240478516
    8. '1' → logprob: -8.441715240478516
    9. '(W' → logprob: -9.191715240478516
    10. ' N' → logprob: -9.441715240478516

Token 53: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.534558552724775e-05
    2. ' +' → logprob: -10.625025749206543
    3. '+)' → logprob: -15.375025749206543
    4. '+n' → logprob: -15.500025749206543
    5. ')+' → logprob: -16.125024795532227
    6. '+
' → logprob: -16.250024795532227
    7. '*' → logprob: -16.375024795532227
    8. '1' → logprob: -16.875024795532227
    9. '```' → logprob: -16.875024795532227
    10. ')' → logprob: -17.375024795532227

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001980570232262835
    2. ' ' → logprob: -8.625198364257812
    3. '2' → logprob: -11.000198364257812
    4. '10' → logprob: -14.250198364257812
    5. '100' → logprob: -14.875198364257812
    6. '5' → logprob: -15.250198364257812
    7. '3' → logprob: -16.500198364257812
    8. '  ' → logprob: -16.562698364257812
    9. '11' → logprob: -16.750198364257812
    10. '101' → logprob: -16.812698364257812

Token 55: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.551721889991313e-05
    2. ')
' → logprob: -9.875065803527832
    3. ' )' → logprob: -11.750065803527832
    4. '+' → logprob: -13.000065803527832
    5. ')

' → logprob: -13.375065803527832
    6. ')
' → logprob: -13.750065803527832
    7. '}' → logprob: -15.125065803527832
    8. '```' → logprob: -15.375065803527832
    9. '<|end|>' → logprob: -16.000064849853516
    10. '*' → logprob: -16.500064849853516

Token 56: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11696353554725647
    2. ' for' → logprob: -3.1169636249542236
    3. '
' → logprob: -3.2419636249542236
    4. '\n' → logprob: -3.7419636249542236
    5. '
' → logprob: -6.7419633865356445
    6. '' → logprob: -7.3669633865356445
    7. '```' → logprob: -7.6169633865356445
    8. ' 
' → logprob: -7.9919633865356445
    9. '<|end|>' → logprob: -8.366963386535645
    10. '	for' → logprob: -9.741963386535645

Token 57: ' (' (ID: 350)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.7365314960479736
    2. ' w' → logprob: -1.8615314960479736
    3. ' i' → logprob: -1.9865314960479736
    4. 'v' → logprob: -2.1115314960479736
    5. 'w' → logprob: -2.9865314960479736
    6. 'i' → logprob: -3.6115314960479736
    7. '_' → logprob: -3.8615314960479736
    8. ' _' → logprob: -4.9865312576293945
    9. '_i' → logprob: -7.7365312576293945
    10. '_v' → logprob: -7.9865312576293945

Token 58: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003825252642855048
    2. 'w' → logprob: -6.0038251876831055
    3. ' v' → logprob: -7.1288251876831055
    4. 'k' → logprob: -7.8788251876831055
    5. ',v' → logprob: -10.003825187683105
    6. ')' → logprob: -10.503825187683105
    7. ')v' → logprob: -10.753825187683105
    8. '	v' → logprob: -11.253825187683105
    9. ',' → logprob: -11.503825187683105
    10. ' ' → logprob: -11.753825187683105

Token 59: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.048842377960681915
    2. ',' → logprob: -3.048842430114746
    3. ' ,' → logprob: -8.548842430114746
    4. 'w' → logprob: -10.173842430114746
    5. ',d' → logprob: -12.548842430114746
    6. ',v' → logprob: -12.673842430114746
    7. ',t' → logprob: -12.923842430114746
    8. ',W' → logprob: -13.423842430114746
    9. ',n' → logprob: -13.548842430114746
    10. ',x' → logprob: -13.923842430114746

Token 60: '),' (ID: 936)
  Prédit: ',m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.399612158536911
    2. ',' → logprob: -1.1496121883392334
    3. '),' → logprob: -4.649611949920654
    4. ',),' → logprob: -7.274611949920654
    5. '),(' → logprob: -7.524611949920654
    6. ',)' → logprob: -7.899611949920654
    7. ')' → logprob: -8.399612426757812
    8. ',w' → logprob: -8.524612426757812
    9. ',d' → logprob: -8.524612426757812
    10. ',v' → logprob: -8.649612426757812

Token 61: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0061342609114944935
    2. ' m' → logprob: -5.131134033203125
    3. 'c' → logprob: -9.506134033203125
    4. 'mv' → logprob: -10.256134033203125
    5. 'M' → logprob: -11.131134033203125
    6. 'mw' → logprob: -11.631134033203125
    7. 'v' → logprob: -11.756134033203125
    8. 'mm' → logprob: -11.881134033203125
    9. 'k' → logprob: -12.131134033203125
    10. 'val' → logprob: -12.256134033203125

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14287656545639038
    2. 'in' → logprob: -2.017876625061035
    3. ' ' → logprob: -9.642876625061035
    4. ',' → logprob: -9.892876625061035
    5. '	in' → logprob: -10.017876625061035
    6. '<|end|>' → logprob: -11.142876625061035
    7. 's' → logprob: -11.767876625061035
    8. ',in' → logprob: -13.142876625061035
    9. '```' → logprob: -13.267876625061035
    10. 'to' → logprob: -13.267876625061035

Token 63: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08897381275892258
    2. ' d' → logprob: -2.4639737606048584
    3. ')d' → logprob: -10.838973999023438
    4. 'sorted' → logprob: -12.463973999023438
    5. '*d' → logprob: -12.838973999023438
    6. '	d' → logprob: -13.338973999023438
    7. '>d' → logprob: -13.588973999023438
    8. ' sorted' → logprob: -13.588973999023438
    9. ' ' → logprob: -13.713973999023438
    10. '.d' → logprob: -14.338973999023438

Token 64: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0003476209531072527
    2. 'items' → logprob: -8.250348091125488
    3. '.iteritems' → logprob: -10.250348091125488
    4. '.' → logprob: -10.625348091125488
    5. '.values' → logprob: -11.250348091125488
    6. '.Items' → logprob: -12.125348091125488
    7. ' items' → logprob: -12.750348091125488
    8. '	items' → logprob: -13.125348091125488
    9. '.setdefault' → logprob: -13.750348091125488
    10. '```' → logprob: -13.875348091125488

Token 65: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005109758349135518
    2. '()' → logprob: -7.875511169433594
    3. ':' → logprob: -9.250511169433594
    4. '():
' → logprob: -11.000511169433594
    5. '):' → logprob: -11.375511169433594
    6. '(' → logprob: -12.750511169433594
    7. ' ():' → logprob: -12.875511169433594
    8. '():
' → logprob: -15.500511169433594
    9. '()>' → logprob: -15.750511169433594
    10. '(),' → logprob: -15.750511169433594

Token 66: '	c' (ID: 2736)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	for' → logprob: -0.051275141537189484
    2. ' for' → logprob: -3.4262752532958984
    3. '	' → logprob: -4.801275253295898
    4. '	if' → logprob: -5.051275253295898
    5. '	w' → logprob: -6.426275253295898
    6. '	range' → logprob: -8.426275253295898
    7. '	dp' → logprob: -8.551275253295898
    8. 'for' → logprob: -8.551275253295898
    9. '	v' → logprob: -8.676275253295898
    10. '	W' → logprob: -9.676275253295898

Token 67: 'w' (ID: 86)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2348533272743225
    2. 'for' → logprob: -1.8598532676696777
    3. 'ost' → logprob: -3.8598532676696777
    4. ' for' → logprob: -4.984853267669678
    5. '=[]' → logprob: -5.109853267669678
    6. 'ap' → logprob: -5.109853267669678
    7. '=w' → logprob: -5.359853267669678
    8. '=[' → logprob: -5.984853267669678
    9. '=f' → logprob: -7.109853267669678
    10. '	for' → logprob: -7.234853267669678

Token 68: ',' (ID: 11)
  Prédit: '=w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=w' → logprob: -0.6280458569526672
    2. '=' → logprob: -1.3780457973480225
    3. '=W' → logprob: -1.6280457973480225
    4. '=v' → logprob: -4.253046035766602
    5. ' =' → logprob: -7.253046035766602
    6. '=int' → logprob: -7.378046035766602
    7. 'range' → logprob: -7.753046035766602
    8. ',w' → logprob: -8.378046035766602
    9. '=p' → logprob: -8.503046035766602
    10. '=d' → logprob: -8.753046035766602

Token 69: 'cv' (ID: 20484)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.13711310923099518
    2. 'm' → logprob: -3.512113094329834
    3. 'wv' → logprob: -3.762113094329834
    4. 'cv' → logprob: -4.012113094329834
    5. '=' → logprob: -4.637113094329834
    6. 'c' → logprob: -4.762113094329834
    7. 'v' → logprob: -5.012113094329834
    8. 'wm' → logprob: -5.137113094329834
    9. 'cw' → logprob: -5.137113094329834
    10. '```' → logprob: -5.887113094329834

Token 70: '=w' (ID: 147163)
  Prédit: '=w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=w' → logprob: -0.4555049538612366
    2. '=' → logprob: -1.3305048942565918
    3. '=v' → logprob: -2.330504894256592
    4. ' =' → logprob: -6.080504894256592
    5. '=W' → logprob: -7.080504894256592
    6. '=m' → logprob: -8.08050537109375
    7. ',w' → logprob: -9.20550537109375
    8. '=[]' → logprob: -9.33050537109375
    9. '=int' → logprob: -9.45550537109375
    10. '=len' → logprob: -9.58050537109375

Token 71: ',v' (ID: 30680)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.562107503414154
    2. ',' → logprob: -1.3121075630187988
    3. '<|end|>' → logprob: -3.187107563018799
    4. '*' → logprob: -3.437107563018799
    5. '=' → logprob: -3.562107563018799
    6. ',v' → logprob: -4.062107563018799
    7. '-' → logprob: -4.562107563018799
    8. ',m' → logprob: -5.687107563018799
    9. 'm' → logprob: -5.812107563018799
    10. 'v' → logprob: -5.812107563018799

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '	b' (ID: 3722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.766291081905365
    2. ' for' → logprob: -1.1412911415100098
    3. '	for' → logprob: -1.7662911415100098
    4. '
' → logprob: -3.2662911415100098
    5. ',' → logprob: -6.89129114151001
    6. 'or' → logprob: -7.01629114151001
    7. 'm' → logprob: -7.51629114151001
    8. '=' → logprob: -7.64129114151001
    9. '```' → logprob: -7.64129114151001
    10. '<|end|>' → logprob: -7.89129114151001

Token 74: '=m' (ID: 66606)
  Prédit: 'ound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ound' → logprob: -1.1210970878601074
    2. 'p' → logprob: -1.7460970878601074
    3. 's' → logprob: -2.1210970878601074
    4. 'reak' → logprob: -2.2460970878601074
    5. '=' → logprob: -2.8710970878601074
    6. 'r' → logprob: -2.9960970878601074
    7. 'in' → logprob: -3.9960970878601074
    8. '=[' → logprob: -3.9960970878601074
    9. 'for' → logprob: -4.121097087860107
    10. 'g' → logprob: -4.246097087860107

Token 75: '.bit' (ID: 61866)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '_length' (ID: 11514)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.0856456756591797
    2. 'ength' → logprob: -1.2106456756591797
    3. '_length' → logprob: -2.3356456756591797
    4. 'nd' → logprob: -2.9606456756591797
    5. 'len' → logprob: -3.4606456756591797
    6. 'ng' → logprob: -3.7106456756591797
    7. 't' → logprob: -3.8356456756591797
    8. 'lt' → logprob: -3.9606456756591797
    9. 'r' → logprob: -3.9606456756591797
    10. 'n' → logprob: -4.08564567565918

Token 77: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02228447049856186
    2. '()-' → logprob: -3.897284507751465
    3. '-' → logprob: -7.772284507751465
    4. '(' → logprob: -8.147284507751465
    5. '()>' → logprob: -8.397284507751465
    6. '()}' → logprob: -9.022284507751465
    7. ' ()' → logprob: -9.272284507751465
    8. '()<' → logprob: -9.397284507751465
    9. 's' → logprob: -9.522284507751465
    10. '=' → logprob: -9.522284507751465

Token 78: '	for' (ID: 3903)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2428345680236816
    2. ' ' → logprob: -1.4928345680236816
    3. '
' → logprob: -1.9928345680236816
    4. 'for' → logprob: -2.1178345680236816
    5. '+' → logprob: -2.8678345680236816
    6. ' while' → logprob: -3.2428345680236816
    7. 'while' → logprob: -3.4928345680236816
    8. '1' → logprob: -3.7428345680236816
    9. '0' → logprob: -4.242834568023682
    10. ' 
' → logprob: -4.617834568023682

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5153433680534363
    2. ' j' → logprob: -2.140343427658081
    3. ' k' → logprob: -2.140343427658081
    4. ' s' → logprob: -2.390343427658081
    5. ' b' → logprob: -3.390343427658081
    6. ' _' → logprob: -3.765343427658081
    7. ' ' → logprob: -5.015343189239502
    8. '_' → logprob: -5.890343189239502
    9. 'i' → logprob: -6.390343189239502
    10. 'j' → logprob: -6.515343189239502

Token 80: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014178554527461529
    2. 'in' → logprob: -4.26417875289917
    3. 'range' → logprob: -11.639178276062012
    4. '	in' → logprob: -12.639178276062012
    5. ' ' → logprob: -13.764178276062012
    6. ' range' → logprob: -14.514178276062012
    7. 'n' → logprob: -15.264178276062012
    8. '1' → logprob: -15.639178276062012
    9. '0' → logprob: -15.764178276062012
    10. ' ' → logprob: -16.264179229736328

Token 81: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023268774151802063
    2. 'range' → logprob: -3.773268699645996
    3. ' reversed' → logprob: -11.523268699645996
    4. '	range' → logprob: -11.523268699645996
    5. ' ' → logprob: -13.273268699645996
    6. '   ' → logprob: -14.648268699645996
    7. '  ' → logprob: -15.023268699645996
    8. 'rang' → logprob: -15.398268699645996
    9. 'r' → logprob: -15.773268699645996
    10. ' xrange' → logprob: -16.148269653320312

Token 82: '(b' (ID: 3229)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.07986901700496674
    2. '(c' → logprob: -3.204869031906128
    3. '(b' → logprob: -3.454869031906128
    4. '(' → logprob: -5.954868793487549
    5. '(w' → logprob: -6.829868793487549
    6. '(C' → logprob: -7.579868793487549
    7. '(dp' → logprob: -9.329869270324707
    8. 'W' → logprob: -9.579869270324707
    9. 'b' → logprob: -9.704869270324707
    10. ' (' → logprob: -10.079869270324707

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012862532399594784
    2. '):
' → logprob: -5.262862682342529
    3. '+' → logprob: -5.387862682342529
    4. '-' → logprob: -7.137862682342529
    5. ' ):' → logprob: -7.262862682342529
    6. '1' → logprob: -8.137862205505371
    7. '):
' → logprob: -8.262862205505371
    8. ',' → logprob: -8.387862205505371
    9. ')' → logprob: -8.387862205505371
    10. '7' → logprob: -9.262862205505371

Token 84: '	' (ID: 197)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15244413912296295
    2. '	' → logprob: -2.9024441242218018
    3. '	if' → logprob: -3.9024441242218018
    4. '	c' → logprob: -4.027444362640381
    5. '<|end|>' → logprob: -4.152444362640381
    6. '   ' → logprob: -5.152444362640381
    7. '	s' → logprob: -5.902444362640381
    8. '    ' → logprob: -6.027444362640381
    9. ' ' → logprob: -6.277444362640381
    10. '	v' → logprob: -6.402444362640381

Token 85: '	if' (ID: 1224)
  Prédit: '	c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	c' → logprob: -1.326812744140625
    2. '	if' → logprob: -1.576812744140625
    3. '	' → logprob: -2.576812744140625
    4. '	m' → logprob: -2.701812744140625
    5. '	w' → logprob: -2.826812744140625
    6. ' ' → logprob: -3.076812744140625
    7. '	s' → logprob: -3.326812744140625
    8. '	k' → logprob: -3.451812744140625
    9. ' if' → logprob: -3.701812744140625
    10. '		' → logprob: -3.826812744140625

Token 86: ' i' (ID: 575)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0835068225860596
    2. ' m' → logprob: -1.0835068225860596
    3. ' cw' → logprob: -1.5835068225860596
    4. 'cw' → logprob: -2.9585068225860596
    5. ' i' → logprob: -4.2085065841674805
    6. 'i' → logprob: -4.2085065841674805
    7. '	m' → logprob: -4.3335065841674805
    8. ' cv' → logprob: -4.7085065841674805
    9. 'cv' → logprob: -5.2085065841674805
    10. '	c' → logprob: -6.5835065841674805

Token 87: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4912959635257721
    2. 's' → logprob: -1.2412959337234497
    3. '<|end|>' → logprob: -3.1162960529327393
    4. '<n' → logprob: -4.61629581451416
    5. '==' → logprob: -4.86629581451416
    6. ' <' → logprob: -5.24129581451416
    7. ' ' → logprob: -5.49129581451416
    8. '<=' → logprob: -5.49129581451416
    9. '+' → logprob: -6.11629581451416
    10. '0' → logprob: -6.11629581451416

Token 88: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01962258853018284
    2. ' b' → logprob: -4.019622802734375
    3. '0' → logprob: -6.769622802734375
    4. ' ' → logprob: -8.394622802734375
    5. '	b' → logprob: -9.394622802734375
    6. '>b' → logprob: -12.644622802734375
    7. '=b' → logprob: -12.894622802734375
    8. '
' → logprob: -13.394622802734375
    9. '1' → logprob: -13.769622802734375
    10. '<b' → logprob: -13.894622802734375

Token 89: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003087678924202919
    2. '1' → logprob: -9.000308990478516
    3. '	' → logprob: -9.125308990478516
    4. ' -' → logprob: -9.625308990478516
    5. '−' → logprob: -12.250308990478516
    6. '		' → logprob: -13.375308990478516
    7. ' ' → logprob: -14.000308990478516
    8. '()-' → logprob: -14.250308990478516
    9. '–' → logprob: -14.500308990478516
    10. 's' → logprob: -14.625308990478516

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020902375399600714
    2. ' ' → logprob: -8.750208854675293
    3. '-' → logprob: -10.375208854675293
    4. '	' → logprob: -11.875208854675293
    5. ':' → logprob: -12.625208854675293
    6. '```' → logprob: -13.250208854675293
    7. '' → logprob: -13.937708854675293
    8. '
' → logprob: -14.125208854675293
    9. ' -' → logprob: -14.312708854675293
    10. ' ' → logprob: -14.437708854675293

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005609492771327496
    2. ':
' → logprob: -5.255609512329102
    3. ' and' → logprob: -8.505609512329102
    4. ' :' → logprob: -9.255609512329102
    5. '	' → logprob: -11.255609512329102
    6. ':

' → logprob: -11.255609512329102
    7. ',' → logprob: -11.255609512329102
    8. '	and' → logprob: -11.380609512329102
    9. '		' → logprob: -11.505609512329102
    10. '):' → logprob: -13.005609512329102

Token 92: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.4104185700416565
    2. ':' → logprob: -1.5354185104370117
    3. '	' → logprob: -2.7854185104370117
    4. ' and' → logprob: -4.035418510437012
    5. '	c' → logprob: -4.660418510437012
    6. ' c' → logprob: -5.535418510437012
    7. ',' → logprob: -5.910418510437012
    8. ' s' → logprob: -5.910418510437012
    9. '<|end|>' → logprob: -6.035418510437012
    10. ' ' → logprob: -6.160418510437012

Token 93: '	w' (ID: 12910)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '		' → logprob: -0.2280665785074234
    2. ' cw' → logprob: -1.9780665636062622
    3. 'cw' → logprob: -3.7280666828155518
    4. '	c' → logprob: -4.978066444396973
    5. '			' → logprob: -5.478066444396973
    6. ' and' → logprob: -5.853066444396973
    7. 's' → logprob: -6.478066444396973
    8. 'dp' → logprob: -6.478066444396973
    9. '	' → logprob: -6.603066444396973
    10. 'm' → logprob: -6.603066444396973

Token 94: '=c' (ID: 43473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6746997237205505
    2. 'hile' → logprob: -1.7996997833251953
    3. 'i' → logprob: -2.6746997833251953
    4. 'e' → logprob: -3.2996997833251953
    5. 'ight' → logprob: -3.2996997833251953
    6. '	' → logprob: -3.9246997833251953
    7. 'dp' → logprob: -4.299699783325195
    8. 'eight' → logprob: -4.424699783325195
    9. ' =' → logprob: -4.674699783325195
    10. 'w' → logprob: -4.674699783325195

Token 95: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.008934929035604
    2. 'm' → logprob: -4.88393497467041
    3. '	m' → logprob: -8.13393497467041
    4. 'v' → logprob: -8.50893497467041
    5. 'cw' → logprob: -8.63393497467041
    6. '	w' → logprob: -8.75893497467041
    7. 'wv' → logprob: -8.88393497467041
    8. 'wm' → logprob: -9.00893497467041
    9. 'mw' → logprob: -9.50893497467041
    10. ' w' → logprob: -10.88393497467041

Token 96: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.199936181306839
    2. '*m' → logprob: -1.8249361515045166
    3. '	' → logprob: -4.699936389923096
    4. '		' → logprob: -5.449936389923096
    5. '*' → logprob: -5.574936389923096
    6. '	m' → logprob: -6.449936389923096
    7. ' *' → logprob: -7.574936389923096
    8. '*w' → logprob: -8.199935913085938
    9. '*((' → logprob: -9.699935913085938
    10. '			' → logprob: -9.949935913085938

Token 97: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002557369298301637
    2. '(m' → logprob: -8.875255584716797
    3. ' m' → logprob: -9.375255584716797
    4. '1' → logprob: -10.875255584716797
    5. ')m' → logprob: -11.750255584716797
    6. '	m' → logprob: -13.750255584716797
    7. '2' → logprob: -14.125255584716797
    8. ')' → logprob: -14.625255584716797
    9. ' (' → logprob: -14.750255584716797
    10. '(' → logprob: -15.000255584716797

Token 98: '-' (ID: 12)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.053202204406261444
    2. '-' → logprob: -3.3032021522521973
    3. '%' → logprob: -5.053202152252197
    4. ' &' → logprob: -5.553202152252197
    5. '>>' → logprob: -5.553202152252197
    6. ' -' → logprob: -7.303202152252197
    7. '&(' → logprob: -10.178202629089355
    8. '>>(' → logprob: -10.178202629089355
    9. '-(' → logprob: -10.303202629089355
    10. ')' → logprob: -10.428202629089355

Token 99: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006981384940445423
    2. '(sum' → logprob: -7.875698089599609
    3. '((' → logprob: -8.50069808959961
    4. ' (' → logprob: -10.25069808959961
    5. 'sum' → logprob: -10.50069808959961
    6. '(pow' → logprob: -11.50069808959961
    7. '2' → logprob: -11.62569808959961
    8. '	' → logprob: -12.25069808959961
    9. '(i' → logprob: -12.37569808959961
    10. '   ' → logprob: -12.87569808959961

Token 100: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.000776038970798254
    2. '^' → logprob: -8.125776290893555
    3. '(i' → logprob: -8.250776290893555
    4. '(' → logprob: -9.250776290893555
    5. '*i' → logprob: -10.125776290893555
    6. '^(' → logprob: -11.250776290893555
    7. 'i' → logprob: -11.375776290893555
    8. '```' → logprob: -11.625776290893555
    9. 'pow' → logprob: -12.000776290893555
    10. '	' → logprob: -12.125776290893555

Token 101: '(' (ID: 7)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002273774443892762
    2. ' i' → logprob: -8.750226974487305
    3. '	i' → logprob: -9.875226974487305
    4. '(i' → logprob: -11.250226974487305
    5. 'b' → logprob: -13.500226974487305
    6. ' ' → logprob: -13.625226974487305
    7. '(' → logprob: -14.375226974487305
    8. '   ' → logprob: -15.375226974487305
    9. '```' → logprob: -15.500226974487305
    10. ' (' → logprob: -15.625226974487305

Token 102: 'b' (ID: 65)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.4034345187828876e-05
    2. ' i' → logprob: -10.75002384185791
    3. '	i' → logprob: -13.00002384185791
    4. ' ' → logprob: -16.250024795532227
    5. 'b' → logprob: -16.375024795532227
    6. '(i' → logprob: -17.250024795532227
    7. '_i' → logprob: -18.375024795532227
    8. '<i' → logprob: -18.500024795532227
    9. ')i' → logprob: -18.750024795532227
    10. '
' → logprob: -19.250024795532227

Token 103: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.039372630417346954
    2. '	i' → logprob: -3.539372682571411
    3. '	' → logprob: -5.664372444152832
    4. '		' → logprob: -6.289372444152832
    5. '-' → logprob: -6.789372444152832
    6. '+' → logprob: -7.039372444152832
    7. ' i' → logprob: -7.039372444152832
    8. '+i' → logprob: -7.164372444152832
    9. '_i' → logprob: -9.039372444152832
    10. ',i' → logprob: -9.539372444152832

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00878451019525528
    2. 'i' → logprob: -4.758784294128418
    3. '(i' → logprob: -9.008784294128418
    4. ' ' → logprob: -10.883784294128418
    5. '(' → logprob: -11.383784294128418
    6. ' i' → logprob: -11.883784294128418
    7. '	i' → logprob: -13.133784294128418
    8. ')' → logprob: -13.633784294128418
    9. '```' → logprob: -13.633784294128418
    10. '2' → logprob: -14.133784294128418

Token 105: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.621560275554657
    2. ')' → logprob: -1.7465603351593018
    3. '))' → logprob: -1.7465603351593018
    4. ')+' → logprob: -2.4965603351593018
    5. '	' → logprob: -4.371560096740723
    6. '		' → logprob: -4.996560096740723
    7. ' +' → logprob: -5.871560096740723
    8. '+i' → logprob: -5.871560096740723
    9. '))+' → logprob: -6.371560096740723
    10. ')))' → logprob: -7.121560096740723

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2166411478538066e-05
    2. ' ' → logprob: -9.875052452087402
    3. ')' → logprob: -14.500052452087402
    4. '<|end|>' → logprob: -17.250051498413086
    5. '  ' → logprob: -18.000051498413086
    6. '	' → logprob: -18.625051498413086
    7. '```' → logprob: -18.750051498413086
    8. '   ' → logprob: -18.875051498413086
    9. '2' → logprob: -19.625051498413086
    10. '),' → logprob: -19.812551498413086

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030573900789022446
    2. ')
' → logprob: -3.530573844909668
    3. ')
' → logprob: -7.280573844909668
    4. '	' → logprob: -9.405573844909668
    5. '		' → logprob: -10.530573844909668
    6. ' )' → logprob: -11.530573844909668
    7. ')return' → logprob: -13.530573844909668
    8. ')

' → logprob: -13.655573844909668
    9. ')#' → logprob: -13.655573844909668
    10. ')*' → logprob: -13.655573844909668

Token 108: '		' (ID: 335)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: '	v' (ID: 20800)
  Prédit: '		'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.45799970626831055
    2. '	v' → logprob: -1.8329997062683105
    3. 'v' → logprob: -2.0829997062683105
    4. '	c' → logprob: -3.3329997062683105
    5. '	for' → logprob: -4.8329997062683105
    6. ' for' → logprob: -5.0829997062683105
    7. '	' → logprob: -5.2079997062683105
    8. '	       ' → logprob: -5.2079997062683105
    9. '	cv' → logprob: -5.3329997062683105
    10. '			' → logprob: -6.0829997062683105

Token 110: '=cv' (ID: 170270)
  Prédit: '=cv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=cv' → logprob: -0.0009337326046079397
    2. '=c' → logprob: -7.375933647155762
    3. '=' → logprob: -8.125933647155762
    4. 'cv' → logprob: -11.750933647155762
    5. ' =' → logprob: -13.375933647155762
    6. '=C' → logprob: -14.625933647155762
    7. '=cut' → logprob: -14.875933647155762
    8. '=
' → logprob: -15.250933647155762
    9. ' cv' → logprob: -15.375933647155762
    10. 'cw' → logprob: -15.625933647155762

Token 111: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.005223444197326899
    2. '*' → logprob: -5.755223274230957
    3. ' *' → logprob: -7.130223274230957
    4. '*w' → logprob: -7.255223274230957
    5. '<|end|>' → logprob: -7.630223274230957
    6. '*((' → logprob: -11.505223274230957
    7. '*m' → logprob: -12.130223274230957
    8. ' *(' → logprob: -12.130223274230957
    9. '<|end|>' → logprob: -12.130223274230957
    10. 'w' → logprob: -12.755223274230957

Token 112: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00016635251813568175
    2. ' m' → logprob: -8.750165939331055
    3. '(m' → logprob: -12.125165939331055
    4. '	m' → logprob: -13.125165939331055
    5. ' (' → logprob: -15.625165939331055
    6. ' ' → logprob: -15.625165939331055
    7. '(' → logprob: -16.125165939331055
    8. ')m' → logprob: -17.000165939331055
    9. '   ' → logprob: -17.625165939331055
    10. '  ' → logprob: -18.000165939331055

Token 113: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00015872348740231246
    2. ' -' → logprob: -8.750158309936523
    3. '2' → logprob: -15.125158309936523
    4. '	' → logprob: -18.250158309936523
    5. ' ' → logprob: -18.250158309936523
    6. '+' → logprob: -18.375158309936523
    7. '-(' → logprob: -18.500158309936523
    8. '–' → logprob: -18.875158309936523
    9. '−' → logprob: -19.187658309936523
    10. '' → logprob: -19.375158309936523

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00012284684635233134
    2. ' ' → logprob: -9.125123023986816
    3. '(' → logprob: -11.250123023986816
    4. '-' → logprob: -14.750123023986816
    5. '1' → logprob: -15.875123023986816
    6. ' (' → logprob: -16.6251220703125
    7. '	' → logprob: -17.0001220703125
    8. '  ' → logprob: -17.0001220703125
    9. '   ' → logprob: -17.1251220703125
    10. '```' → logprob: -17.2501220703125

Token 115: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.843177233240567e-05
    2. '2' → logprob: -11.750018119812012
    3. '(' → logprob: -12.875018119812012
    4. ' **' → logprob: -13.000018119812012
    5. '```' → logprob: -13.000018119812012
    6. '##' → logprob: -13.875018119812012
    7. '^' → logprob: -14.500018119812012
    8. ' ' → logprob: -15.250018119812012
    9. '^(' → logprob: -15.625018119812012
    10. '*' → logprob: -15.875018119812012

Token 116: '(' (ID: 7)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.16053859889507294
    2. '(' → logprob: -1.9105385541915894
    3. '(i' → logprob: -8.160538673400879
    4. ' (' → logprob: -10.535538673400879
    5. '(x' → logprob: -14.535538673400879
    6. '(v' → logprob: -14.785538673400879
    7. '(B' → logprob: -14.910538673400879
    8. '{' → logprob: -15.410538673400879
    9. '((' → logprob: -15.410538673400879
    10. '(ii' → logprob: -16.535537719726562

Token 117: 'b' (ID: 65)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.008773515932261944
    2. '(' → logprob: -4.758773326873779
    3. 'b' → logprob: -9.008773803710938
    4. '(i' → logprob: -10.508773803710938
    5. ' (' → logprob: -11.883773803710938
    6. 'i' → logprob: -13.508773803710938
    7. ' ' → logprob: -15.633773803710938
    8. '{' → logprob: -15.758773803710938
    9. '(
' → logprob: -15.758773803710938
    10. '[b' → logprob: -16.133773803710938

Token 118: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003795565338805318
    2. '1' → logprob: -5.628795623779297
    3. '(' → logprob: -9.503795623779297
    4. '	' → logprob: -10.628795623779297
    5. '[' → logprob: -10.753795623779297
    6. ' -' → logprob: -10.753795623779297
    7. ' ' → logprob: -11.253795623779297
    8. 'i' → logprob: -11.378795623779297
    9. '```' → logprob: -12.253795623779297
    10. '   ' → logprob: -12.378795623779297

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007418495370075107
    2. '(' → logprob: -7.250741958618164
    3. '(i' → logprob: -11.250741958618164
    4. ' ' → logprob: -11.875741958618164
    5. ' (' → logprob: -12.375741958618164
    6. 'i' → logprob: -12.500741958618164
    7. '(b' → logprob: -14.000741958618164
    8. '(n' → logprob: -14.500741958618164
    9. '```' → logprob: -14.750741958618164
    10. 'b' → logprob: -15.000741958618164

Token 120: ')+' (ID: 16161)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06285267323255539
    2. ')+' → logprob: -2.812852621078491
    3. ' +' → logprob: -7.93785285949707
    4. ']+' → logprob: -8.06285285949707
    5. '	' → logprob: -9.31285285949707
    6. '		' → logprob: -9.93785285949707
    7. '```' → logprob: -10.56285285949707
    8. '()+' → logprob: -11.06285285949707
    9. ')' → logprob: -11.56285285949707
    10. '}+' → logprob: -11.93785285949707

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013417120499070734
    2. '0' → logprob: -9.125134468078613
    3. ' ' → logprob: -11.250134468078613
    4. '+' → logprob: -11.375134468078613
    5. '<|end|>' → logprob: -14.875134468078613
    6. '(' → logprob: -15.750134468078613
    7. ')' → logprob: -16.250133514404297
    8. '```' → logprob: -16.750133514404297
    9. '	' → logprob: -18.125133514404297
    10. ')+' → logprob: -18.125133514404297

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013950283639132977
    2. ')
' → logprob: -4.638950347900391
    3. '	' → logprob: -5.513950347900391
    4. ')
' → logprob: -9.13895034790039
    5. '       ' → logprob: -10.76395034790039
    6. '		' → logprob: -11.01395034790039
    7. ' )' → logprob: -12.51395034790039
    8. ')\' → logprob: -13.88895034790039
    9. ')

' → logprob: -14.01395034790039
    10. ')\
' → logprob: -14.13895034790039

Token 123: '	' (ID: 197)
  Prédit: '	'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.01018607709556818
    2. '		' → logprob: -5.135186195373535
    3. '	for' → logprob: -6.635186195373535
    4. '
' → logprob: -6.760186195373535
    5. '	else' → logprob: -7.260186195373535
    6. '		
' → logprob: -8.385186195373535
    7. '<|end|>' → logprob: -8.385186195373535
    8. '```' → logprob: -8.760186195373535
    9. '	elif' → logprob: -9.635186195373535
    10. '	
' → logprob: -9.885186195373535

Token 124: '	for' (ID: 3903)
  Prédit: '	'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	' → logprob: -0.037189140915870667
    2. '	for' → logprob: -3.412189245223999
    3. ' for' → logprob: -6.03718900680542
    4. 'for' → logprob: -7.53718900680542
    5. '		
' → logprob: -8.537189483642578
    6. '		' → logprob: -8.787189483642578
    7. '
' → logprob: -9.912189483642578
    8. '	dp' → logprob: -10.162189483642578
    9. '       ' → logprob: -10.537189483642578
    10. '	
' → logprob: -10.537189483642578

Token 125: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6382653117179871
    2. 'j' → logprob: -0.7632653117179871
    3. ' x' → logprob: -6.138265132904053
    4. 'x' → logprob: -6.388265132904053
    5. 'i' → logprob: -8.138265609741211
    6. ' i' → logprob: -8.263265609741211
    7. ' c' → logprob: -8.638265609741211
    8. ' w' → logprob: -9.013265609741211
    9. 'w' → logprob: -9.013265609741211
    10. ' cap' → logprob: -9.388265609741211

Token 126: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20145183801651
    2. 'in' → logprob: -1.7014517784118652
    3. '	in' → logprob: -10.451452255249023
    4. 'range' → logprob: -11.951452255249023
    5. ' ' → logprob: -13.701452255249023
    6. '	' → logprob: -14.826452255249023
    7. '
' → logprob: -15.201452255249023
    8. 'from' → logprob: -15.576452255249023
    9. '  ' → logprob: -15.701452255249023
    10. ' i' → logprob: -15.826452255249023

Token 127: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023248156532645226
    2. ' range' → logprob: -3.7732481956481934
    3. 're' → logprob: -13.773247718811035
    4. '	range' → logprob: -13.898247718811035
    5. ' reversed' → logprob: -15.023247718811035
    6. 'reverse' → logprob: -15.648247718811035
    7. 'r' → logprob: -16.27324867248535
    8. 'rang' → logprob: -16.77324867248535
    9. 'ran' → logprob: -16.89824867248535
    10. '(range' → logprob: -17.77324867248535

Token 128: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -8.888114098226652e-05
    2. 'W' → logprob: -9.625088691711426
    3. '	W' → logprob: -11.125088691711426
    4. '(w' → logprob: -12.125088691711426
    5. '	' → logprob: -13.250088691711426
    6. 'dp' → logprob: -15.750088691711426
    7. '(C' → logprob: -15.750088691711426
    8. '(' → logprob: -16.125089645385742
    9. '(c' → logprob: -16.250089645385742
    10. '(dp' → logprob: -16.375089645385742

Token 129: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.10358840227127075
    2. ',' → logprob: -2.728588342666626
    3. ',c' → logprob: -3.853588342666626
    4. ',-' → logprob: -4.728588581085205
    5. '	' → logprob: -6.228588581085205
    6. ',v' → logprob: -7.228588581085205
    7. ',W' → logprob: -9.103588104248047
    8. ',j' → logprob: -9.478588104248047
    9. '-w' → logprob: -9.603588104248047
    10. '	w' → logprob: -10.228588104248047

Token 130: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9036114811897278
    2. ',-' → logprob: -0.9036114811897278
    3. ',' → logprob: -2.403611421585083
    4. '	' → logprob: -2.778611421585083
    5. '-w' → logprob: -4.028611660003662
    6. ' -' → logprob: -4.528611660003662
    7. '-' → logprob: -5.778611660003662
    8. ',w' → logprob: -6.278611660003662
    9. '-W' → logprob: -6.528611660003662
    10. ' +' → logprob: -7.028611660003662

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003647826088126749
    2. '-' → logprob: -8.125365257263184
    3. ' -' → logprob: -10.500365257263184
    4. '```' → logprob: -10.500365257263184
    5. ' ' → logprob: -11.875365257263184
    6. '+' → logprob: -13.250365257263184
    7. 'j' → logprob: -13.875365257263184
    8. '``' → logprob: -14.625365257263184
    9. ',-' → logprob: -14.750365257263184
    10. '(-' → logprob: -14.875365257263184

Token 132: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.012985502369701862
    2. ',' → logprob: -4.637985706329346
    3. '	' → logprob: -6.262985706329346
    4. '-' → logprob: -6.762985706329346
    5. ' -' → logprob: -9.262985229492188
    6. '		' → logprob: -10.262985229492188
    7. ' ,-' → logprob: -11.262985229492188
    8. '```' → logprob: -12.637985229492188
    9. ' ,' → logprob: -12.762985229492188
    10. '			' → logprob: -12.887985229492188

Token 133: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.500000953674316
    3. '```' → logprob: -15.625000953674316
    4. ')' → logprob: -17.625
    5. '   ' → logprob: -18.125
    6. '１' → logprob: -18.125
    7. 'j' → logprob: -18.5
    8. '):
' → logprob: -18.625
    9. '``' → logprob: -18.9375
    10. '2' → logprob: -19.6875

Token 134: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4320756793022156
    2. '):' → logprob: -1.0570757389068604
    3. ':' → logprob: -6.932075500488281
    4. '	' → logprob: -7.307075500488281
    5. ')' → logprob: -7.432075500488281
    6. '):-' → logprob: -7.682075500488281
    7. '):
' → logprob: -7.807075500488281
    8. '		' → logprob: -9.557075500488281
    9. ':
' → logprob: -9.557075500488281
    10. '):

' → logprob: -10.432075500488281

Token 135: '		' (ID: 335)
  Prédit: '		'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '		' → logprob: -0.6176964044570923
    2. '	dp' → logprob: -1.1176964044570923
    3. ' dp' → logprob: -2.3676962852478027
    4. '	' → logprob: -3.8676962852478027
    5. 'dp' → logprob: -5.867696285247803
    6. '	if' → logprob: -5.867696285247803
    7. '<|end|>' → logprob: -5.867696285247803
    8. '           ' → logprob: -6.117696285247803
    9. '	       ' → logprob: -6.492696285247803
    10. '			
' → logprob: -6.867696285247803

Token 136: '	t' (ID: 6264)
  Prédit: '	dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '	dp' → logprob: -0.04731224477291107
    2. 'dp' → logprob: -3.7973122596740723
    3. ' dp' → logprob: -3.7973122596740723
    4. '		' → logprob: -6.922312259674072
    5. '	if' → logprob: -9.172311782836914
    6. '	' → logprob: -9.422311782836914
    7. '			' → logprob: -10.422311782836914
    8. '```' → logprob: -10.672311782836914
    9. '(dp' → logprob: -10.922311782836914
    10. '           ' → logprob: -11.047311782836914

Token 137: '=' (ID: 28)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1494361311197281
    2. 'dp' → logprob: -2.0244362354278564
    3. ' dp' → logprob: -6.274435997009277
    4. '[j' → logprob: -6.274435997009277
    5. '=' → logprob: -6.649435997009277
    6. '[' → logprob: -7.274435997009277
    7. '[p' → logprob: -8.524435997009277
    8. ' =' → logprob: -8.899435997009277
    9. '[i' → logprob: -8.899435997009277
    10. '	dp' → logprob: -9.149435997009277

Token 138: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.013770407065749168
    2. 'max' → logprob: -4.388770580291748
    3. ' dp' → logprob: -6.763770580291748
    4. ' max' → logprob: -9.38877010345459
    5. '	dp' → logprob: -11.01377010345459
    6. 'd' → logprob: -13.76377010345459
    7. 'j' → logprob: -14.51377010345459
    8. ' ' → logprob: -14.63877010345459
    9. '(dp' → logprob: -14.76377010345459
    10. ' ' → logprob: -14.88877010345459

Token 139: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. 'j' → logprob: -15.0
    3. '[' → logprob: -16.875
    4. '[js' → logprob: -18.75
    5. '```' → logprob: -19.25
    6. '[i' → logprob: -19.375
    7. '[t' → logprob: -20.625
    8. ',j' → logprob: -20.875
    9. '[
' → logprob: -21.0
    10. '	j' → logprob: -21.625

Token 140: '-w' (ID: 4450)
  Prédit: '-w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-w' → logprob: -0.01231762021780014
    2. ']' → logprob: -5.012317657470703
    3. ' -' → logprob: -5.262317657470703
    4. ']-' → logprob: -8.762317657470703
    5. '])' → logprob: -9.512317657470703
    6. '	' → logprob: -10.012317657470703
    7. ']+' → logprob: -10.512317657470703
    8. '-' → logprob: -11.137317657470703
    9. '],' → logprob: -11.137317657470703
    10. '−' → logprob: -11.762317657470703

Token 141: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.0028180740773677826
    2. ']' → logprob: -5.8778181076049805
    3. ']+=' → logprob: -11.75281810760498
    4. ')+' → logprob: -13.62781810760498
    5. '])+' → logprob: -13.87781810760498
    6. '	' → logprob: -14.50281810760498
    7. ' ]' → logprob: -14.75281810760498
    8. ']-' → logprob: -15.25281810760498
    9. '-' → logprob: -15.25281810760498
    10. ']
' → logprob: -15.37781810760498

Token 142: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.7432603272027336e-06
    2. ' v' → logprob: -13.375001907348633
    3. '	v' → logprob: -15.750001907348633
    4. 'int' → logprob: -20.125001907348633
    5. 'value' → logprob: -20.375001907348633
    6. '*v' → logprob: -20.500001907348633
    7. '[v' → logprob: -20.500001907348633
    8. ' ' → logprob: -20.750001907348633
    9. '   ' → logprob: -20.875001907348633
    10. '```' → logprob: -20.875001907348633

Token 143: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04601331055164337
    2. ' if' → logprob: -3.296013355255127
    3. '
' → logprob: -5.546013355255127
    4. '	if' → logprob: -6.421013355255127
    5. 'dp' → logprob: -6.671013355255127
    6. '		' → logprob: -7.421013355255127
    7. ';if' → logprob: -8.171012878417969
    8. ';' → logprob: -9.296012878417969
    9. '<|end|>' → logprob: -9.921012878417969
    10. '           ' → logprob: -10.796012878417969

Token 144: '		' (ID: 335)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.72093665599823
    2. '		' → logprob: -1.09593665599823
    3. ' if' → logprob: -2.2209367752075195
    4. '	if' → logprob: -3.0959367752075195
    5. 'dp' → logprob: -3.9709367752075195
    6. '	dp' → logprob: -5.0959367752075195
    7. ' dp' → logprob: -7.5959367752075195
    8. '           ' → logprob: -9.22093677520752
    9. '			' → logprob: -9.97093677520752
    10. '(dp' → logprob: -10.09593677520752

Token 145: '	if' (ID: 1224)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014626816846430302
    2. ' if' → logprob: -4.514626979827881
    3. '		' → logprob: -6.264626979827881
    4. '	if' → logprob: -6.514626979827881
    5. 'dp' → logprob: -8.639626502990723
    6. '           ' → logprob: -12.139626502990723
    7. '	dp' → logprob: -12.639626502990723
    8. ' dp' → logprob: -13.639626502990723
    9. '			' → logprob: -14.014626502990723
    10. '
' → logprob: -15.014626502990723

Token 146: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.018309378996491432
    2. ' t' → logprob: -4.018309593200684
    3. 'dp' → logprob: -9.018309593200684
    4. '	t' → logprob: -10.393309593200684
    5. ' dp' → logprob: -11.893309593200684
    6. ' ' → logprob: -14.393309593200684
    7. '	dp' → logprob: -15.643309593200684
    8. ' ' → logprob: -17.518308639526367
    9. 'tp' → logprob: -17.768308639526367
    10. '<t' → logprob: -18.018308639526367

Token 147: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0005050156614743173
    2. ' >' → logprob: -7.625504970550537
    3. '>
' → logprob: -12.500505447387695
    4. '">' → logprob: -12.875505447387695
    5. '<|end|>' → logprob: -12.875505447387695
    6. ')>' → logprob: -13.625505447387695
    7. ']>' → logprob: -13.750505447387695
    8. '>d' → logprob: -13.875505447387695
    9. '[' → logprob: -14.375505447387695
    10. '>

' → logprob: -14.500505447387695

Token 148: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00020687808864749968
    2. ' dp' → logprob: -8.50020694732666
    3. '	dp' → logprob: -12.62520694732666
    4. '(dp' → logprob: -18.250205993652344
    5. '_dp' → logprob: -18.250205993652344
    6. '
' → logprob: -18.875205993652344
    7. 'd' → logprob: -19.875205993652344
    8. '.dp' → logprob: -20.500205993652344
    9. ' ' → logprob: -20.625205993652344
    10. '0' → logprob: -21.500205993652344

Token 149: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00020354038861114532
    2. 'j' → logprob: -8.500203132629395
    3. '	j' → logprob: -17.75020408630371
    4. '```' → logprob: -19.25020408630371
    5. '[' → logprob: -19.62520408630371
    6. '[
' → logprob: -19.87520408630371
    7. '_j' → logprob: -20.00020408630371
    8. '[i' → logprob: -20.37520408630371
    9. ',j' → logprob: -21.37520408630371
    10. ' j' → logprob: -21.37520408630371

Token 150: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.019099602475762367
    2. ']:
' → logprob: -4.394099712371826
    3. '[j' → logprob: -6.019099712371826
    4. '):' → logprob: -6.144099712371826
    5. ':' → logprob: -6.394099712371826
    6. '):
' → logprob: -9.144099235534668
    7. ']' → logprob: -9.394099235534668
    8. ':j' → logprob: -10.519099235534668
    9. ':
' → logprob: -10.644099235534668
    10. ']):' → logprob: -10.894099235534668

Token 151: 'dp' (ID: 19037)
  Prédit: '	dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	dp' → logprob: -0.7005152702331543
    2. ' dp' → logprob: -1.2005152702331543
    3. '			' → logprob: -1.8255152702331543
    4. 'dp' → logprob: -3.2005152702331543
    5. '(dp' → logprob: -7.700515270233154
    6. '		' → logprob: -9.075515747070312
    7. '				' → logprob: -9.575515747070312
    8. '_dp' → logprob: -9.950515747070312
    9. '					' → logprob: -10.325515747070312
    10. '							' → logprob: -11.825515747070312

Token 152: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9361264946837764e-07
    2. 'j' → logprob: -15.875
    3. '```' → logprob: -18.5
    4. '[i' → logprob: -18.625
    5. '[' → logprob: -18.625
    6. '	j' → logprob: -18.75
    7. '[js' → logprob: -19.125
    8. '=j' → logprob: -20.125
    9. '\[' → logprob: -20.125
    10. ',j' → logprob: -20.5

Token 153: ']=' (ID: 9539)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0007812766125425696
    2. '=j' → logprob: -7.750781059265137
    3. ']=' → logprob: -8.875781059265137
    4. 'j' → logprob: -9.000781059265137
    5. ']' → logprob: -9.750781059265137
    6. '[' → logprob: -11.750781059265137
    7. '=' → logprob: -11.875781059265137
    8. '][' → logprob: -12.250781059265137
    9. ',j' → logprob: -13.000781059265137
    10. '	j' → logprob: -13.625781059265137

Token 154: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.56102097814437e-05
    2. ' t' → logprob: -10.000045776367188
    3. '	t' → logprob: -16.625045776367188
    4. '`t' → logprob: -18.375045776367188
    5. '<t' → logprob: -21.125045776367188
    6. '
' → logprob: -21.125045776367188
    7. ' ' → logprob: -22.375045776367188
    8. ')t' → logprob: -22.375045776367188
    9. ' ' → logprob: -22.625045776367188
    10. '[t' → logprob: -22.750045776367188

Token 155: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: '	' (ID: 197)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '	w' (ID: 12910)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: '*=' (ID: 93955)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.32987159490585327
    2. ',' → logprob: -1.579871654510498
    3. ',c' → logprob: -2.829871654510498
    4. ',v' → logprob: -5.079871654510498
    5. '*=' → logprob: -5.704871654510498
    6. '<<' → logprob: -5.954871654510498
    7. '=' → logprob: -6.329871654510498
    8. ' <<=' → logprob: -6.954871654510498
    9. '=w' → logprob: -8.07987117767334
    10. 'w' → logprob: -8.70487117767334

Token 159: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '	' → logprob: -16.250019073486328
    4. '   ' → logprob: -16.375019073486328
    5. '1' → logprob: -16.750019073486328
    6. '
' → logprob: -17.250019073486328
    7. '  ' → logprob: -17.375019073486328
    8. '２' → logprob: -17.375019073486328
    9. '(' → logprob: -17.500019073486328
    10. '```' → logprob: -17.750019073486328

Token 160: '
' (ID: 198)
  Prédit: '	v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	v' → logprob: -0.09286151081323624
    2. 'v' → logprob: -2.5928614139556885
    3. '	' → logprob: -5.342861652374268
    4. '
' → logprob: -6.342861652374268
    5. ' v' → logprob: -6.467861652374268
    6. ',v' → logprob: -6.592861652374268
    7. '		
' → logprob: -7.092861652374268
    8. '	w' → logprob: -7.092861652374268
    9. ' 
' → logprob: -7.342861652374268
    10. 'w' → logprob: -7.342861652374268

Token 161: '	' (ID: 197)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3885193467140198
    2. '	v' → logprob: -1.138519287109375
    3. ' v' → logprob: -6.638519287109375
    4. '	' → logprob: -8.763519287109375
    5. ',v' → logprob: -9.263519287109375
    6. '<|end|>' → logprob: -10.638519287109375
    7. 'w' → logprob: -11.263519287109375
    8. '*v' → logprob: -11.388519287109375
    9. '```' → logprob: -11.513519287109375
    10. '		' → logprob: -11.763519287109375

Token 162: '	v' (ID: 20800)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0003598952607717365
    2. '	v' → logprob: -8.375359535217285
    3. ' v' → logprob: -9.250359535217285
    4. 'cv' → logprob: -10.375359535217285
    5. '	' → logprob: -14.250359535217285
    6. '	cv' → logprob: -14.500359535217285
    7. ',v' → logprob: -15.125359535217285
    8. 'vq' → logprob: -15.625359535217285
    9. 'val' → logprob: -16.6253604888916
    10. ' cv' → logprob: -16.7503604888916

Token 163: '*=' (ID: 93955)
  Prédit: '*='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -5.264322317088954e-05
    2. '*' → logprob: -9.875052452087402
    3. ' *=' → logprob: -13.875052452087402
    4. '=' → logprob: -15.875052452087402
    5. '```' → logprob: -17.50005340576172
    6. '**' → logprob: -17.62505340576172
    7. ''*' → logprob: -18.37505340576172
    8. '2' → logprob: -19.12505340576172
    9. '	' → logprob: -19.25005340576172
    10. '+=' → logprob: -20.00005340576172

Token 164: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '２' → logprob: -17.500001907348633
    4. '۲' → logprob: -18.000001907348633
    5. '	' → logprob: -19.375001907348633
    6. '  ' → logprob: -19.812501907348633
    7. '```' → logprob: -19.937501907348633
    8. '   ' → logprob: -20.000001907348633
    9. '२' → logprob: -20.062501907348633
    10. ' ' → logprob: -20.437501907348633

Token 165: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 166: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: '(dp' (ID: 68843)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.31336086988449097
    2. '(dp' → logprob: -1.3133609294891357
    3. 'max' → logprob: -9.438361167907715
    4. 'dp' → logprob: -11.313361167907715
    5. '(' → logprob: -12.063361167907715
    6. '(min' → logprob: -14.313361167907715
    7. ' max' → logprob: -15.063361167907715
    8. '=max' → logprob: -15.313361167907715
    9. ' dp' → logprob: -16.0633602142334
    10. '((' → logprob: -16.4383602142334

Token 168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1602804809808731
    2. '[-' → logprob: -1.910280466079712
    3. '[N' → logprob: -10.535280227661133
    4. 'W' → logprob: -10.660280227661133
    5. '(W' → logprob: -13.160280227661133
    6. '[w' → logprob: -13.410280227661133
    7. '-W' → logprob: -13.410280227661133
    8. '-' → logprob: -15.035280227661133
    9. ')' → logprob: -15.035280227661133
    10. '<W' → logprob: -15.535280227661133

Token 169: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -4.429896944202483e-05
    2. '-W' → logprob: -10.125043869018555
    3. ' W' → logprob: -12.625043869018555
    4. '-' → logprob: -15.000043869018555
    5. '(W' → logprob: -15.625043869018555
    6. '	W' → logprob: -15.750043869018555
    7. '<W' → logprob: -16.375043869018555
    8. ',W' → logprob: -16.625043869018555
    9. '-w' → logprob: -17.125043869018555
    10. '.W' → logprob: -17.375043869018555

Token 170: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.165027217415627e-05
    2. ')' → logprob: -11.000021934509277
    3. '])
' → logprob: -13.250021934509277
    4. ')])' → logprob: -13.750021934509277
    5. ']' → logprob: -14.125021934509277
    6. ''])' → logprob: -15.125021934509277
    7. '})' → logprob: -15.250021934509277
    8. '))' → logprob: -15.500021934509277
    9. ' ])' → logprob: -15.625021934509277
    10. ')]' → logprob: -15.625021934509277


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 168
Tokens correctement prédits (1ère position, stricte): 84
Tokens correctement prédits (1ère position, avec adaptation): 84
Tokens correctement prédits (top 10): 141
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 83.93%
================================================================================
