================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class BinarySearchTree:
    def __init__(self):
        self.root = None
        self.order_list = []
    def insert(self, z):
        y = None
        x = self.root
        while x != None:
            y = x
            if z.key < x.key:
                x = x.left
            else:
                x = x.right
        z.parent = y
        if y == None:
            self.root = z
        elif z.key < y.key:
            y.left = z
        else:
            y.right = z
            
    def walk_preorder(self, node):
        if node == None:
            return None
        self.order_list.append(node.key)
        self.walk_preorder(node.left)
        self.walk_preorder(node.right)
    def walk_inorder(self, node):
        if node == None:
            return None
        self.walk_inorder(node.left)
        self.order_list.append(node.key)
        self.walk_inorder(node.right)
    def print_nodes(self):
        self.order_list = []
        self.walk_inorder(self.root)
        inorder_str = ' '.join(map(str, self.order_list))
        print(' {}'.format(inorder_str))
        self.order_list = []
        self.walk_preorder(self.root)
        preorder_str = ' '.join(map(str, self.order_list))
        print(' {}'.format(preorder_str))
        
class Node:
    def __init__(self, key):
        self.key = key
        self.parent = None
        self.left = None
        self.right = None

n = int(input())
tree = BinarySearchTree()
for _ in range(n):
    command = input().split(' ')
    if len(command) == 1:
        tree.print_nodes()
    else:
        opecode, operand = command[0], int(command[1])
        node = Node(operand)
        tree.insert(node)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Binary' (ID: 32672)
  → Token d'amorce (pas de prédiction)

Token 2: 'Search' (ID: 5975)
  → Token d'amorce (pas de prédiction)

Token 3: 'Tree' (ID: 8062)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5972354412078857
    2. '{' → logprob: -0.9722354412078857
    3. ':' → logprob: -3.3472354412078857
    4. ' {' → logprob: -3.7222354412078857
    5. ' ' → logprob: -5.222235679626465
    6. '.' → logprob: -5.972235679626465
    7. '[' → logprob: -6.472235679626465
    8. ' (' → logprob: -7.097235679626465
    9. '```' → logprob: -7.097235679626465
    10. '<' → logprob: -9.222235679626465

Token 4: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.5627707242965698
    2. '(' → logprob: -1.1877707242965698
    3. ' {' → logprob: -2.9377708435058594
    4. ':' → logprob: -3.1877708435058594
    5. '.' → logprob: -3.5627708435058594
    6. '```' → logprob: -6.937770843505859
    7. '[' → logprob: -7.437770843505859
    8. ' ' → logprob: -7.562770843505859
    9. ' (' → logprob: -8.31277084350586
    10. ' .' → logprob: -9.81277084350586

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17754027247428894
    2. '(' → logprob: -2.1775403022766113
    3. '```' → logprob: -3.4275403022766113
    4. '   ' → logprob: -4.427540302276611
    5. '():' → logprob: -7.302540302276611
    6. '.' → logprob: -7.302540302276611
    7. ':
' → logprob: -7.427540302276611
    8. ''' → logprob: -7.427540302276611
    9. '(
' → logprob: -7.677540302276611
    10. '`' → logprob: -8.427539825439453

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2938266098499298
    2. '```' → logprob: -2.2938265800476074
    3. ':' → logprob: -2.7938265800476074
    4. '(' → logprob: -2.7938265800476074
    5. ' ' → logprob: -4.918826580047607
    6. '\' → logprob: -5.293826580047607
    7. 'def' (adapté à ' def') → logprob: -5.793826580047607
    8. ' def' → logprob: -5.918826580047607
    9. '`' → logprob: -6.168826580047607
    10. ''' → logprob: -6.418826580047607

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0017317025922238827
    2. ' ' → logprob: -7.501731872558594
    3. ' find' → logprob: -8.876731872558594
    4. '  ' → logprob: -9.001731872558594
    5. ' def' → logprob: -9.001731872558594
    6. '_' → logprob: -9.126731872558594
    7. '    ' → logprob: -9.251731872558594
    8. '     ' → logprob: -9.376731872558594
    9. '__' → logprob: -9.626731872558594
    10. '<|end|>' → logprob: -9.751731872558594

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.8961017202818766e-05
    2. ' init' → logprob: -10.000059127807617
    3. '_init' → logprob: -11.250059127807617
    4. 'ini' → logprob: -15.125059127807617
    5. '_' → logprob: -16.500059127807617
    6. '	init' → logprob: -17.125059127807617
    7. 'i' → logprob: -18.375059127807617
    8. 'innit' → logprob: -18.750059127807617
    9. '__' → logprob: -18.875059127807617
    10. 'in' → logprob: -19.000059127807617

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1214679479598999
    2. '__' → logprob: -2.2464680671691895
    3. '(' → logprob: -5.3714680671691895
    4. '(self' → logprob: -6.2464680671691895
    5. '__(
' → logprob: -6.7464680671691895
    6. '__((' → logprob: -8.121467590332031
    7. '```' → logprob: -8.996467590332031
    8. '_' → logprob: -9.371467590332031
    9. '__('' → logprob: -9.496467590332031
    10. '__(*' → logprob: -9.996467590332031

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00044032474397681653
    2. ' self' → logprob: -7.7504401206970215
    3. ')' → logprob: -12.00044059753418
    4. '(self' → logprob: -13.37544059753418
    5. ' ' → logprob: -14.37544059753418
    6. '	self' → logprob: -15.00044059753418
    7. '       ' → logprob: -15.00044059753418
    8. '   ' → logprob: -15.62544059753418
    9. 'sel' → logprob: -16.12544059753418
    10. ',self' → logprob: -16.25044059753418

Token 11: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6351259350776672
    2. ',' → logprob: -1.6351258754730225
    3. '<|end|>' → logprob: -2.2601258754730225
    4. 'self' → logprob: -2.3851258754730225
    5. '_' → logprob: -4.010126113891602
    6. '(self' → logprob: -4.260126113891602
    7. '(' → logprob: -4.260126113891602
    8. ' )' → logprob: -5.010126113891602
    9. '[' → logprob: -5.260126113891602
    10. '):' → logprob: -5.760126113891602

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07284139096736908
    2. 'self' → logprob: -2.8228414058685303
    3. '(self' → logprob: -5.822841167449951
    4. ' self' → logprob: -6.072841167449951
    5. '<|end|>' → logprob: -6.447841167449951
    6. '   ' → logprob: -6.947841167449951
    7. '(' → logprob: -7.197841167449951
    8. '()' → logprob: -7.822841167449951
    9. '        
' → logprob: -7.947841167449951
    10. '\' → logprob: -8.57284164428711

Token 13: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.040785081684589386
    2. ' self' → logprob: -4.165785312652588
    3. 'None' → logprob: -4.290785312652588
    4. ' None' → logprob: -4.665785312652588
    5. '       ' → logprob: -7.290785312652588
    6. ' ' → logprob: -7.915785312652588
    7. '   ' → logprob: -8.41578483581543
    8. 'pass' → logprob: -10.04078483581543
    9. '  ' → logprob: -11.91578483581543
    10. '0' → logprob: -11.91578483581543

Token 14: '.root' (ID: 25375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1613081842660904
    2. '.root' → logprob: -1.9113081693649292
    3. ' .' → logprob: -8.286308288574219
    4. '.data' → logprob: -8.536308288574219
    5. '.left' → logprob: -8.786308288574219
    6. '.value' → logprob: -8.786308288574219
    7. '.right' → logprob: -9.036308288574219
    8. '.tree' → logprob: -9.536308288574219
    9. '.parent' → logprob: -10.286308288574219
    10. 'root' → logprob: -10.536308288574219

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12700097262859344
    2. '=' → logprob: -2.1270010471343994
    3. '<|end|>' → logprob: -10.12700080871582
    4. ' ' → logprob: -10.75200080871582
    5. '=None' → logprob: -11.75200080871582
    6. ' =
' → logprob: -14.12700080871582
    7. ' =)' → logprob: -14.12700080871582
    8. ')' → logprob: -14.87700080871582
    9. '_' → logprob: -15.12700080871582
    10. '<|end|>' → logprob: -15.62700080871582

Token 16: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.00861456897109747
    2. 'None' → logprob: -4.758614540100098
    3. '_None' → logprob: -18.258615493774414
    4. '(None' → logprob: -18.383615493774414
    5. ',None' → logprob: -19.633615493774414
    6. ' ' → logprob: -19.758615493774414
    7. '=None' → logprob: -20.633615493774414
    8. '.None' → logprob: -20.758615493774414
    9. ' none' → logprob: -21.258615493774414
    10. '_none' → logprob: -21.758615493774414

Token 17: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: '       ' (ID: 309)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2754812240600586
    2. '\' → logprob: -1.7754812240600586
    3. '   ' → logprob: -1.9004812240600586
    4. '<|end|>' → logprob: -2.1504812240600586
    5. '\n' → logprob: -2.5254812240600586
    6. '```' → logprob: -2.6504812240600586
    7. '    
' → logprob: -3.4004812240600586
    8. ' ' → logprob: -3.6504812240600586
    9. '' → logprob: -3.7754812240600586
    10. '
' → logprob: -4.525481224060059

Token 19: ' self' (ID: 1051)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9747149348258972
    2. '
' → logprob: -1.849714994430542
    3. '   ' → logprob: -1.974714994430542
    4. ' ' → logprob: -2.474714994430542
    5. '<|end|>' → logprob: -2.724714994430542
    6. '\n' → logprob: -2.849714994430542
    7. '\' → logprob: -3.974714994430542
    8. '    
' → logprob: -4.099714756011963
    9. 'n' → logprob: -4.224714756011963
    10. ' 
' → logprob: -4.474714756011963

Token 20: '.order' (ID: 25549)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016241880075540394
    2. ' .' → logprob: -8.750162124633789
    3. '.user' → logprob: -13.375162124633789
    4. ' ' → logprob: -14.375162124633789
    5. '.next' → logprob: -15.500162124633789
    6. '.space' → logprob: -16.12516212463379
    7. '.s' → logprob: -16.25016212463379
    8. '.e' → logprob: -16.62516212463379
    9. '.is' → logprob: -16.75016212463379
    10. '.target' → logprob: -17.12516212463379

Token 21: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4114287793636322
    2. '=' → logprob: -2.161428689956665
    3. ' =' → logprob: -2.161428689956665
    4. 'ing' → logprob: -2.536428689956665
    5. 's' → logprob: -4.536428928375244
    6. '_type' → logprob: -5.286428928375244
    7. 'ed' → logprob: -5.536428928375244
    8. '=[]' → logprob: -5.536428928375244
    9. ' ' → logprob: -7.411428928375244
    10. '_stack' → logprob: -7.661428928375244

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0485982745885849
    2. '=' → logprob: -3.048598289489746
    3. '=[]' → logprob: -11.673598289489746
    4. ' ' → logprob: -13.923598289489746
    5. '_' → logprob: -14.423598289489746
    6. ' =
' → logprob: -15.673598289489746
    7. '  ' → logprob: -15.673598289489746
    8. 's' → logprob: -15.923598289489746
    9. '[:]' → logprob: -15.923598289489746
    10. '[]' → logprob: -16.79859733581543

Token 23: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001528194174170494
    2. ' []' → logprob: -6.501528263092041
    3. '[' → logprob: -10.751527786254883
    4. ' ' → logprob: -13.251527786254883
    5. '[]
' → logprob: -13.376527786254883
    6. '[]}' → logprob: -14.251527786254883
    7. '[]

' → logprob: -15.626527786254883
    8. '   ' → logprob: -16.501527786254883
    9. '  ' → logprob: -16.751527786254883
    10. '[]"' → logprob: -16.876527786254883

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4288352131843567
    2. '\' → logprob: -2.428835153579712
    3. '<|end|>' → logprob: -2.803835153579712
    4. '```' → logprob: -2.928835153579712
    5. '\n' → logprob: -3.303835153579712
    6. 'def' → logprob: -4.053835391998291
    7. '    
' → logprob: -4.053835391998291
    8. '
' → logprob: -4.053835391998291
    9. ' def' → logprob: -4.928835391998291
    10. '' → logprob: -5.053835391998291

Token 25: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2395472675561905
    2. 'def' (adapté à ' def') → logprob: -2.7395472526550293
    3. '    
' → logprob: -3.4895472526550293
    4. ' ' → logprob: -3.6145472526550293
    5. '<|end|>' → logprob: -4.114547252655029
    6. ' def' → logprob: -4.239547252655029
    7. 'd' → logprob: -4.489547252655029
    8. '    ' → logprob: -4.989547252655029
    9. '\' → logprob: -5.114547252655029
    10. 'n' → logprob: -5.239547252655029

Token 26: ' insert' (ID: 10898)
  Prédit: ' insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.022169165313243866
    2. ' space' → logprob: -4.02216911315918
    3. ' ' → logprob: -6.39716911315918
    4. 'insert' → logprob: -6.64716911315918
    5. '_insert' → logprob: -7.89716911315918
    6. ' ‌' → logprob: -8.89716911315918
    7. '_' → logprob: -8.89716911315918
    8. 'space' → logprob: -9.39716911315918
    9. ' insertion' → logprob: -9.39716911315918
    10. ' ```' → logprob: -10.02216911315918

Token 27: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09858135133981705
    2. ' (' → logprob: -2.598581314086914
    3. ' ' → logprob: -3.973581314086914
    4. '_' → logprob: -7.973581314086914
    5. '<|end|>' → logprob: -8.848581314086914
    6. '(space' → logprob: -10.223581314086914
    7. ' ```' → logprob: -10.723581314086914
    8. ' (
' → logprob: -11.348581314086914
    9. '_space' → logprob: -11.348581314086914
    10. '  ' → logprob: -11.348581314086914

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3495538234710693
    2. ' )' → logprob: -1.3495538234710693
    3. ' ' → logprob: -1.7245538234710693
    4. ' ,' → logprob: -1.9745538234710693
    5. ')' → logprob: -2.0995538234710693
    6. '_' → logprob: -4.474554061889648
    7. ' _' → logprob: -4.474554061889648
    8. '<|end|>' → logprob: -5.349554061889648
    9. 'self' → logprob: -5.474554061889648
    10. ' self' → logprob: -6.224554061889648

Token 29: ' z' (ID: 579)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.18695570528507233
    2. ' value' → logprob: -2.436955690383911
    3. 'self' → logprob: -3.061955690383911
    4. ' node' → logprob: -4.31195592880249
    5. 'value' → logprob: -5.06195592880249
    6. ' val' → logprob: -5.31195592880249
    7. ' data' → logprob: -5.31195592880249
    8. ' root' → logprob: -5.43695592880249
    9. ' key' → logprob: -6.68695592880249
    10. 'data' → logprob: -7.81195592880249

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4307146668434143
    2. ')' → logprob: -1.0557146072387695
    3. ' ):' → logprob: -6.8057146072387695
    4. '.' → logprob: -8.05571460723877
    5. ' )' → logprob: -8.30571460723877
    6. ',' → logprob: -8.80571460723877
    7. ':' → logprob: -9.55571460723877
    8. '.):' → logprob: -10.55571460723877
    9. ' ' → logprob: -10.68071460723877
    10. ').' → logprob: -11.68071460723877

Token 31: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11046349257230759
    2. '       ' → logprob: -3.4854633808135986
    3. '<|end|>' → logprob: -3.7354633808135986
    4. ':' → logprob: -4.110463619232178
    5. '        ' → logprob: -4.985463619232178
    6. '    ' → logprob: -5.235463619232178
    7. '\' → logprob: -5.610463619232178
    8. '  ' → logprob: -5.985463619232178
    9. '   ' → logprob: -6.235463619232178
    10. ''' → logprob: -6.235463619232178

Token 32: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013433732092380524
    2. ' 
' → logprob: -5.388433933258057
    3. ' if' → logprob: -5.888433933258057
    4. '        ' → logprob: -6.638433933258057
    5. 'if' → logprob: -7.013433933258057
    6. '    ' → logprob: -7.138433933258057
    7. '  ' → logprob: -7.138433933258057
    8. '       ' → logprob: -7.263433933258057
    9. '   ' → logprob: -8.263433456420898
    10. '  
' → logprob: -8.638433456420898

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001293331733904779
    2. '=' → logprob: -7.001293182373047
    3. ' ' → logprob: -7.876293182373047
    4. '  ' → logprob: -14.001293182373047
    5. ',' → logprob: -14.751293182373047
    6. ' =
' → logprob: -15.626293182373047
    7. ' ,' → logprob: -16.126293182373047
    8. ' =)' → logprob: -16.251293182373047
    9. ' ='' → logprob: -16.251293182373047
    10. ')' → logprob: -16.626293182373047

Token 34: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.014169861562550068
    2. 'None' → logprob: -4.264169692993164
    3. ' self' → logprob: -12.139169692993164
    4. ' ' → logprob: -14.639169692993164
    5. 'self' → logprob: -14.764169692993164
    6. '   ' → logprob: -17.389169692993164
    7. '=None' → logprob: -18.014169692993164
    8. ' N' → logprob: -18.389169692993164
    9. ' none' → logprob: -18.514169692993164
    10. '    ' → logprob: -18.889169692993164

Token 35: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5577160716056824
    2. '<|end|>' → logprob: -0.9327160716056824
    3. ' 
' → logprob: -3.682716131210327
    4. '<|end|>' → logprob: -5.307715892791748
    5. '  
' → logprob: -6.432715892791748
    6. '  ' → logprob: -7.682715892791748
    7. ',' → logprob: -8.182716369628906
    8. '   
' → logprob: -8.682716369628906
    9. '\n' → logprob: -9.057716369628906
    10. ' ,' → logprob: -9.057716369628906

Token 36: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6093565821647644
    2. ' while' → logprob: -2.234356641769409
    3. '
' → logprob: -2.609356641769409
    4. '  
' → logprob: -2.609356641769409
    5. '       ' → logprob: -3.109356641769409
    6. '        
' → logprob: -3.359356641769409
    7. '        ' → logprob: -4.23435640335083
    8. '   
' → logprob: -4.23435640335083
    9. '<|end|>' → logprob: -4.48435640335083
    10. '     
' → logprob: -4.73435640335083

Token 37: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.5721795558929443
    2. ' x' → logprob: -1.0721795558929443
    3. ' ' → logprob: -2.9471795558929443
    4. 'n' → logprob: -4.322179794311523
    5. ' 
' → logprob: -4.447179794311523
    6. 'current' → logprob: -5.447179794311523
    7. ' current' → logprob: -6.322179794311523
    8. ' p' → logprob: -6.572179794311523
    9. 'node' → logprob: -6.697179794311523
    10. 'p' → logprob: -6.947179794311523

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -8.804671233519912e-05
    2. '=' → logprob: -9.62508773803711
    3. ' ' → logprob: -10.75008773803711
    4. '<|end|>' → logprob: -14.87508773803711
    5. '<|end|>' → logprob: -17.25008773803711
    6. ' ' → logprob: -17.25008773803711
    7. ' =
' → logprob: -17.87508773803711
    8. ',' → logprob: -17.87508773803711
    9. '.' → logprob: -18.12508773803711
    10. ')' → logprob: -18.25008773803711

Token 39: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759533643722534
    2. ' self' → logprob: -0.8259533643722534
    3. ' ' → logprob: -11.325953483581543
    4. '<|end|>' → logprob: -14.200953483581543
    5. ' ' → logprob: -14.575953483581543
    6. '  ' → logprob: -15.075953483581543
    7. '	self' → logprob: -15.825953483581543
    8. '(self' → logprob: -16.325952529907227
    9. '[self' → logprob: -16.700952529907227
    10. '=self' → logprob: -17.200952529907227

Token 40: '.root' (ID: 25375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18119151890277863
    2. '.root' → logprob: -1.8061915636062622
    3. ' .' → logprob: -6.806191444396973
    4. 'root' → logprob: -8.181191444396973
    5. '.tree' → logprob: -11.556191444396973
    6. ' root' → logprob: -12.056191444396973
    7. ' ' → logprob: -12.181191444396973
    8. '[root' → logprob: -12.181191444396973
    9. '.
' → logprob: -12.681191444396973
    10. '​.' → logprob: -13.056191444396973

Token 41: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.0789695456624031
    2. '
' → logprob: -3.2039694786071777
    3. '  
' → logprob: -3.7039694786071777
    4. '\n' → logprob: -5.953969478607178
    5. '<|end|>' → logprob: -6.203969478607178
    6. '   
' → logprob: -6.578969478607178
    7. '    
' → logprob: -6.953969478607178
    8. '        
' → logprob: -7.328969478607178
    9. '' → logprob: -7.453969478607178
    10. ' ' → logprob: -7.578969478607178

Token 42: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.03748255968093872
    2. '
' → logprob: -4.162482738494873
    3. '  
' → logprob: -4.162482738494873
    4. '<|end|>' → logprob: -6.162482738494873
    5. '        
' → logprob: -7.287482738494873
    6. '   
' → logprob: -7.537482738494873
    7. ' ' → logprob: -7.662482738494873
    8. '\n' → logprob: -7.662482738494873
    9. '    
' → logprob: -7.912482738494873
    10. '' → logprob: -8.787482261657715

Token 43: ' while' (ID: 2049)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5710282325744629
    2. '
' → logprob: -1.446028232574463
    3. '<|end|>' → logprob: -2.196028232574463
    4. ' ' → logprob: -3.071028232574463
    5. '  
' → logprob: -4.446028232574463
    6. '\n' → logprob: -4.696028232574463
    7. 'while' (adapté à ' while') → logprob: -5.196028232574463
    8. ' while' → logprob: -5.446028232574463
    9. '```' → logprob: -6.071028232574463
    10. '    
' → logprob: -6.696028232574463

Token 44: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1917213797569275
    2. ' ' → logprob: -1.8167214393615723
    3. 'x' → logprob: -4.441721439361572
    4. '	x' → logprob: -9.441720962524414
    5. ' ' → logprob: -10.191720962524414
    6. ' ‌' → logprob: -11.941720962524414
    7. '  ' → logprob: -13.316720962524414
    8. '<|end|>' → logprob: -13.816720962524414
    9. '	' → logprob: -14.191720962524414
    10. ' not' → logprob: -14.316720962524414

Token 45: ' !=' (ID: 1666)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014549743384122849
    2. ' ' → logprob: -5.264549732208252
    3. ' !=' → logprob: -5.389549732208252
    4. ' and' → logprob: -6.389549732208252
    5. '.' → logprob: -6.639549732208252
    6. ':' → logprob: -7.139549732208252
    7. '<|end|>' → logprob: -8.01455020904541
    8. '!=' → logprob: -8.63955020904541
    9. ' :' → logprob: -9.01455020904541
    10. 'is' → logprob: -9.13955020904541

Token 46: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.03864792734384537
    2. 'None' → logprob: -3.2886478900909424
    3. ' ' → logprob: -7.4136481285095215
    4. ' ' → logprob: -13.413647651672363
    5. ' N' → logprob: -13.913647651672363
    6. '_None' → logprob: -15.163647651672363
    7. '(None' → logprob: -15.288647651672363
    8. '=None' → logprob: -15.413647651672363
    9. '  ' → logprob: -16.66364860534668
    10. 'N' → logprob: -17.28864860534668

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027310517616569996
    2. ' :' → logprob: -6.377730846405029
    3. ':
' → logprob: -7.877730846405029
    4. '<|end|>' → logprob: -8.502731323242188
    5. ' and' → logprob: -9.252731323242188
    6. ':**' → logprob: -9.502731323242188
    7. '       ' → logprob: -9.627731323242188
    8. ' ' → logprob: -9.627731323242188
    9. '):' → logprob: -9.752731323242188
    10. '   ' → logprob: -11.502731323242188

Token 48: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3388032615184784
    2. ' :' → logprob: -1.3388032913208008
    3. ' ' → logprob: -4.588803291320801
    4. ':
' → logprob: -5.213803291320801
    5. ' :
' → logprob: -5.588803291320801
    6. '    ' → logprob: -6.963803291320801
    7. '       ' → logprob: -7.088803291320801
    8. '```' → logprob: -7.088803291320801
    9. '        ' → logprob: -7.338803291320801
    10. ' 
' → logprob: -7.838803291320801

Token 49: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023737573996186256
    2. ' 
' → logprob: -3.773737668991089
    3. '  
' → logprob: -9.648737907409668
    4. ' ' → logprob: -9.773737907409668
    5. ' 

' → logprob: -10.148737907409668
    6. '         
' → logprob: -10.398737907409668
    7. '<|end|>' → logprob: -10.523737907409668
    8. '        ' → logprob: -10.648737907409668
    9. '     
' → logprob: -10.648737907409668
    10. '             
' → logprob: -10.648737907409668

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003799834754317999
    2. '=' → logprob: -6.128799915313721
    3. ' ' → logprob: -6.503799915313721
    4. '<|end|>' → logprob: -9.128799438476562
    5. ' =)' → logprob: -13.878799438476562
    6. 'space' → logprob: -13.878799438476562
    7. ',' → logprob: -14.128799438476562
    8. ' =
' → logprob: -14.378799438476562
    9. '.' → logprob: -14.503799438476562
    10. '<|end|>' → logprob: -14.753799438476562

Token 51: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.25193047523498535
    2. ' x' → logprob: -1.5019304752349854
    3. ' ' → logprob: -14.001930236816406
    4. '	x' → logprob: -15.251930236816406
    5. '<|end|>' → logprob: -15.376930236816406
    6. ' ' → logprob: -16.501930236816406
    7. ')x' → logprob: -17.126930236816406
    8. '>x' → logprob: -18.376930236816406
    9. '$x' → logprob: -19.626930236816406
    10. '<|end|>' → logprob: -19.876930236816406

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1550055891275406
    2. ' 
' → logprob: -2.530005693435669
    3. ' ' → logprob: -4.40500545501709
    4. '\n' → logprob: -4.53000545501709
    5. '<|end|>' → logprob: -4.90500545501709
    6. '.' → logprob: -5.15500545501709
    7. '    
' → logprob: -5.15500545501709
    8. '            
' → logprob: -5.53000545501709
    9. '  
' → logprob: -5.53000545501709
    10. '
' → logprob: -6.03000545501709

Token 53: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.3437899351119995
    2. ' ' → logprob: -1.5937899351119995
    3. '
' → logprob: -2.718790054321289
    4. '<|end|>' → logprob: -4.718790054321289
    5. '  
' → logprob: -5.593790054321289
    6. ' if' → logprob: -5.968790054321289
    7. '    
' → logprob: -7.093790054321289
    8. '   
' → logprob: -7.468790054321289
    9. '\' → logprob: -7.718790054321289
    10. 'if' → logprob: -7.718790054321289

Token 54: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8618209958076477
    2. ' if' → logprob: -0.8618209958076477
    3. 'if' (adapté à ' if') → logprob: -1.986820936203003
    4. ' 
' → logprob: -5.236821174621582
    5. '    ' → logprob: -5.611821174621582
    6. ' x' → logprob: -5.736821174621582
    7. 'x' → logprob: -6.361821174621582
    8. '        ' → logprob: -7.111821174621582
    9. '            ' → logprob: -7.611821174621582
    10. '           ' → logprob: -8.111821174621582

Token 55: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.0077775754034519196
    2. 'z' → logprob: -4.882777690887451
    3. ' ' → logprob: -8.757777214050293
    4. '	z' → logprob: -11.757777214050293
    5. ' ' → logprob: -12.132777214050293
    6. ' 
' → logprob: -15.382777214050293
    7. '    ' → logprob: -15.632777214050293
    8. ' x' → logprob: -16.13277816772461
    9. ' `' → logprob: -16.25777816772461
    10. ' ' → logprob: -17.13277816772461

Token 56: '.key' (ID: 8839)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5365957021713257
    2. '.key' → logprob: -1.0365957021713257
    3. '<' → logprob: -3.4115958213806152
    4. '.data' → logprob: -4.661595821380615
    5. '.' → logprob: -4.786595821380615
    6. '.value' → logprob: -4.911595821380615
    7. '.val' → logprob: -6.286595821380615
    8. '<data' → logprob: -8.661595344543457
    9. '.<' → logprob: -9.161595344543457
    10. '[' → logprob: -9.411595344543457

Token 57: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0005413581384345889
    2. ' ' → logprob: -8.375541687011719
    3. '<' → logprob: -8.625541687011719
    4. '<|end|>' → logprob: -9.125541687011719
    5. ' >' → logprob: -11.500541687011719
    6. ' <",' → logprob: -12.625541687011719
    7. ' <=' → logprob: -13.125541687011719
    8. '<|end|>' → logprob: -13.875541687011719
    9. ')' → logprob: -14.000541687011719
    10. '  ' → logprob: -14.000541687011719

Token 58: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.024831749498844147
    2. ' ' → logprob: -4.024831771850586
    3. 'x' → logprob: -5.024831771850586
    4. ' ' → logprob: -10.149831771850586
    5. ' z' → logprob: -10.524831771850586
    6. '<|end|>' → logprob: -12.149831771850586
    7. ')' → logprob: -12.774831771850586
    8. '	x' → logprob: -13.399831771850586
    9. 'space' → logprob: -13.524831771850586
    10. '0' → logprob: -13.649831771850586

Token 59: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00219866749830544
    2. '.' → logprob: -6.127198696136475
    3. ' .' → logprob: -11.502198219299316
    4. ''.' → logprob: -14.502198219299316
    5. '.keys' → logprob: -14.627198219299316
    6. '.Key' → logprob: -14.752198219299316
    7. '`.' → logprob: -15.002198219299316
    8. '.token' → logprob: -15.377198219299316
    9. 'key' → logprob: -15.627198219299316
    10. ').' → logprob: -15.877198219299316

Token 60: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001309882733039558
    2. ' :' → logprob: -7.501309871673584
    3. ':
' → logprob: -8.126310348510742
    4. '<|end|>' → logprob: -8.251310348510742
    5. '):' → logprob: -8.751310348510742
    6. ')' → logprob: -11.376310348510742
    7. '<|end|>' → logprob: -12.001310348510742
    8. ':return' → logprob: -12.626310348510742
    9. ':**' → logprob: -13.001310348510742
    10. '               ' → logprob: -13.001310348510742

Token 61: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5508203506469727
    2. ' 
' → logprob: -1.5508203506469727
    3. '                
' → logprob: -2.8008203506469727
    4. ' ' → logprob: -3.1758203506469727
    5. '            
' → logprob: -3.4258203506469727
    6. '           ' → logprob: -3.5508203506469727
    7. ' x' → logprob: -4.050820350646973
    8. '<|end|>' → logprob: -4.550820350646973
    9. 'x' → logprob: -5.425820350646973
    10. '            ' → logprob: -5.675820350646973

Token 62: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.45909276604652405
    2. ' 
' → logprob: -1.5840927362442017
    3. 'x' (adapté à ' x') → logprob: -2.459092855453491
    4. '               ' → logprob: -2.959092855453491
    5. '                
' → logprob: -4.459092617034912
    6. ' ' → logprob: -5.834092617034912
    7. '           ' → logprob: -6.084092617034912
    8. '                ' → logprob: -6.084092617034912
    9. '            
' → logprob: -6.209092617034912
    10. '\n' → logprob: -6.709092617034912

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3902033970225602e-05
    2. '=' → logprob: -11.375014305114746
    3. ' ' → logprob: -13.375014305114746
    4. '.' → logprob: -14.750014305114746
    5. ' =
' → logprob: -14.875014305114746
    6. '<|end|>' → logprob: -17.12501335144043
    7. ' =
' → logprob: -17.75001335144043
    8. '```' → logprob: -18.87501335144043
    9. '	' → logprob: -19.00001335144043
    10. '.space' → logprob: -19.25001335144043

Token 64: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.014164921827614307
    2. 'x' → logprob: -4.264164924621582
    3. '	x' → logprob: -13.639164924621582
    4. ' ' → logprob: -15.139164924621582
    5. ' ' → logprob: -17.639163970947266
    6. ')x' → logprob: -18.014163970947266
    7. '>x' → logprob: -19.639163970947266
    8. '.x' → logprob: -19.764163970947266
    9. '<|end|>' → logprob: -20.014163970947266
    10. '(x' → logprob: -20.139163970947266

Token 65: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.3877584934234619
    2. '.' → logprob: -1.137758493423462
    3. '.right' → logprob: -7.137758255004883
    4. ' .' → logprob: -9.637758255004883
    5. '.Left' → logprob: -11.262758255004883
    6. '.l' → logprob: -12.512758255004883
    7. '".' → logprob: -13.012758255004883
    8. '`.' → logprob: -13.012758255004883
    9. '.le' → logprob: -13.262758255004883
    10. ''.' → logprob: -13.887758255004883

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16895046830177307
    2. '           ' → logprob: -2.6689505577087402
    3. ' else' → logprob: -2.9189505577087402
    4. ' 
' → logprob: -4.29395055770874
    5. 'else' → logprob: -4.91895055770874
    6. '            
' → logprob: -4.91895055770874
    7. '    
' → logprob: -7.04395055770874
    8. '  
' → logprob: -7.16895055770874
    9. '   
' → logprob: -8.043950080871582
    10. '```' → logprob: -8.043950080871582

Token 67: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07384788990020752
    2. 'else' → logprob: -3.573847770690918
    3. ' else' → logprob: -3.823847770690918
    4. ' 
' → logprob: -4.323847770690918
    5. '
' → logprob: -6.198847770690918
    6. '           ' → logprob: -6.323847770690918
    7. '            
' → logprob: -6.823847770690918
    8. '```' → logprob: -6.948847770690918
    9. '                
' → logprob: -7.323847770690918
    10. '  
' → logprob: -7.698847770690918

Token 68: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.05500177666544914
    2. 'else' (adapté à ' else') → logprob: -2.930001735687256
    3. ' ' → logprob: -9.680002212524414
    4. '	else' → logprob: -10.805002212524414
    5. ' elif' → logprob: -11.680002212524414
    6. ' 
' → logprob: -11.930002212524414
    7. '```' → logprob: -11.930002212524414
    8. ' )' → logprob: -12.180002212524414
    9. 'elif' → logprob: -13.305002212524414
    10. '           ' → logprob: -13.680002212524414

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007675722241401672
    2. ':
' → logprob: -5.132675647735596
    3. '               ' → logprob: -6.757675647735596
    4. ' x' → logprob: -8.257676124572754
    5. ' :' → logprob: -9.007676124572754
    6. '           ' → logprob: -9.632676124572754
    7. ' :
' → logprob: -10.507676124572754
    8. '```' → logprob: -10.882676124572754
    9. '<|end|>' → logprob: -11.257676124572754
    10. 'x' → logprob: -11.382676124572754

Token 70: '               ' (ID: 506)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.002653774805366993
    2. '               ' → logprob: -6.0026535987854
    3. 'x' → logprob: -9.002654075622559
    4. '           ' → logprob: -10.627654075622559
    5. ' ' → logprob: -11.127654075622559
    6. '                ' → logprob: -12.252654075622559
    7. ' ' → logprob: -12.627654075622559
    8. '            ' → logprob: -13.252654075622559
    9. ':' → logprob: -13.377654075622559
    10. '```' → logprob: -13.627654075622559

Token 71: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.033668287098407745
    2. 'x' (adapté à ' x') → logprob: -3.408668279647827
    3. '               ' → logprob: -11.033668518066406
    4. '                ' → logprob: -12.783668518066406
    5. ' ' → logprob: -13.908668518066406
    6. '           ' → logprob: -14.283668518066406
    7. '                   ' → logprob: -14.658668518066406
    8. '	x' → logprob: -14.783668518066406
    9. ' 
' → logprob: -15.158668518066406
    10. ' ' → logprob: -15.283668518066406

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014169970527291298
    2. '=' → logprob: -4.264170169830322
    3. '.right' → logprob: -12.389169692993164
    4. '.' → logprob: -13.389169692993164
    5. ' ' → logprob: -14.389169692993164
    6. '.left' → logprob: -16.514169692993164
    7. ')' → logprob: -16.764169692993164
    8. '＝' → logprob: -17.139169692993164
    9. '.=' → logprob: -17.264169692993164
    10. '.key' → logprob: -17.764169692993164

Token 73: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.10020828247070312
    2. 'x' → logprob: -2.350208282470703
    3. '	x' → logprob: -13.600208282470703
    4. ' ' → logprob: -16.100208282470703
    5. 'right' → logprob: -16.350208282470703
    6. ' ' → logprob: -16.600208282470703
    7. 's' → logprob: -16.850208282470703
    8. ')x' → logprob: -16.975208282470703
    9. '>x' → logprob: -17.350208282470703
    10. '<|end|>' → logprob: -17.975208282470703

Token 74: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.007612066809087992
    2. '.' → logprob: -4.882612228393555
    3. '>.' → logprob: -13.132612228393555
    4. '.left' → logprob: -14.132612228393555
    5. '.r' → logprob: -14.257612228393555
    6. ').' → logprob: -14.632612228393555
    7. '```' → logprob: -15.007612228393555
    8. '`.' → logprob: -15.257612228393555
    9. ' .' → logprob: -15.257612228393555
    10. 'right' → logprob: -15.382612228393555

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22567786276340485
    2. ' 
' → logprob: -2.100677967071533
    3. '       ' → logprob: -3.350677967071533
    4. '        
' → logprob: -4.350677967071533
    5. '<|end|>' → logprob: -4.475677967071533
    6. '  
' → logprob: -4.600677967071533
    7. '\n' → logprob: -5.600677967071533
    8. '    
' → logprob: -6.600677967071533
    9. '   
' → logprob: -6.975677967071533
    10. '\' → logprob: -7.225677967071533

Token 76: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40185546875
    2. '       ' → logprob: -1.15185546875
    3. '        
' → logprob: -5.02685546875
    4. ' 
' → logprob: -6.02685546875
    5. '  
' → logprob: -6.90185546875
    6. '\n' → logprob: -6.90185546875
    7. '   ' → logprob: -7.27685546875
    8. '
' → logprob: -7.27685546875
    9. '    
' → logprob: -7.52685546875
    10. '```' → logprob: -7.52685546875

Token 77: ' z' (ID: 579)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7413986325263977
    2. ' 
' → logprob: -1.491398572921753
    3. 'z' (adapté à ' z') → logprob: -1.991398572921753
    4. '       ' → logprob: -3.116398572921753
    5. '        
' → logprob: -3.366398572921753
    6. 'new' → logprob: -3.991398572921753
    7. ' new' → logprob: -4.116398811340332
    8. '  
' → logprob: -4.491398811340332
    9. ' z' → logprob: -4.991398811340332
    10. '        ' → logprob: -5.491398811340332

Token 78: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.006719759665429592
    2. '.' → logprob: -5.381719589233398
    3. '.p' → logprob: -6.256719589233398
    4. '.prev' → logprob: -9.881719589233398
    5. '.par' → logprob: -10.006719589233398
    6. '.Parent' → logprob: -10.631719589233398
    7. ' .' → logprob: -11.256719589233398
    8. '.left' → logprob: -11.256719589233398
    9. 'parent' → logprob: -12.006719589233398
    10. ').' → logprob: -12.131719589233398

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022758185863495
    2. '=' → logprob: -1.9102275371551514
    3. ' =
' → logprob: -13.28522777557373
    4. '=z' → logprob: -14.66022777557373
    5. '<|end|>' → logprob: -15.03522777557373
    6. ' ' → logprob: -15.03522777557373
    7. '=
' → logprob: -15.28522777557373
    8. ')' → logprob: -15.53522777557373
    9. '=y' → logprob: -16.535226821899414
    10. '=

' → logprob: -16.785226821899414

Token 80: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759394764900208
    2. 'y' → logprob: -0.8259394764900208
    3. '	y' → logprob: -17.700939178466797
    4. ')y' → logprob: -17.825939178466797
    5. ' ' → logprob: -18.700939178466797
    6. ' ' → logprob: -18.825939178466797
    7. '@y' → logprob: -20.325939178466797
    8. ''y' → logprob: -20.825939178466797
    9. '‘y' → logprob: -21.075939178466797
    10. '[y' → logprob: -21.450939178466797

Token 81: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 83: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004485461104195565
    2. ' if' → logprob: -7.875448703765869
    3. '```' → logprob: -10.125448226928711
    4. '       ' → logprob: -10.875448226928711
    5. 'If' → logprob: -11.750448226928711
    6. ')' → logprob: -14.750448226928711
    7. '<|end|>' → logprob: -15.125448226928711
    8. '	if' → logprob: -15.125448226928711
    9. '``' → logprob: -15.875448226928711
    10. '   ' → logprob: -15.875448226928711

Token 84: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.0013270224444568157
    2. 'y' → logprob: -6.626327037811279
    3. ' ' → logprob: -13.876326560974121
    4. '	y' → logprob: -15.876326560974121
    5. ' ' → logprob: -17.251327514648438
    6. '  ' → logprob: -18.001327514648438
    7. ' z' → logprob: -20.001327514648438
    8. '<|end|>' → logprob: -20.126327514648438
    9. ' self' → logprob: -20.376327514648438
    10. ' not' → logprob: -20.626327514648438

Token 85: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10780278593301773
    2. ' ==' → logprob: -2.3578028678894043
    3. '==' → logprob: -5.107802867889404
    4. '<|end|>' → logprob: -7.232802867889404
    5. 'is' → logprob: -7.732802867889404
    6. ' =' → logprob: -9.107802391052246
    7. ' ' → logprob: -9.357802391052246
    8. '=' → logprob: -9.982802391052246
    9. 's' → logprob: -10.482802391052246
    10. '<|end|>' → logprob: -10.607802391052246

Token 86: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.061970822513103485
    2. ' None' → logprob: -2.8119707107543945
    3. 'N' → logprob: -13.436970710754395
    4. 'No' → logprob: -14.061970710754395
    5. '=None' → logprob: -15.186970710754395
    6. '_None' → logprob: -15.561970710754395
    7. '   ' → logprob: -15.936970710754395
    8. 'Non' → logprob: -16.06197166442871
    9. ' ' → logprob: -16.06197166442871
    10. ' N' → logprob: -16.68697166442871

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025871701654978096
    2. ' :' → logprob: -8.750258445739746
    3. '<|end|>' → logprob: -9.375258445739746
    4. ':
' → logprob: -11.250258445739746
    5. '<|end|>' → logprob: -14.000258445739746
    6. '):' → logprob: -14.875258445739746
    7. ':**' → logprob: -15.125258445739746
    8. ':

' → logprob: -15.250258445739746
    9. ' ' → logprob: -15.500258445739746
    10. '：' → logprob: -16.125259399414062

Token 88: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38687849044799805
    2. 'self' (adapté à ' self') → logprob: -1.136878490447998
    3. '	self' → logprob: -12.261878967285156
    4. ' ' → logprob: -13.386878967285156
    5. ' ' → logprob: -14.761878967285156
    6. '  ' → logprob: -15.886878967285156
    7. '   ' → logprob: -15.886878967285156
    8. '<|end|>' → logprob: -16.511878967285156
    9. 'Self' → logprob: -16.636878967285156
    10. '           ' → logprob: -16.636878967285156

Token 90: '.root' (ID: 25375)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030070384964346886
    2. '.root' → logprob: -3.5300703048706055
    3. ' .' → logprob: -8.405070304870605
    4. '<|end|>' → logprob: -10.530070304870605
    5. '.ro' → logprob: -11.405070304870605
    6. '.user' → logprob: -12.030070304870605
    7. 'root' → logprob: -12.655070304870605
    8. '.
' → logprob: -12.780070304870605
    9. '.mainloop' → logprob: -12.905070304870605
    10. '
' → logprob: -12.905070304870605

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07944046705961227
    2. '=' → logprob: -2.5794403553009033
    3. ' ' → logprob: -7.579440593719482
    4. '<|end|>' → logprob: -10.204440116882324
    5. '=z' → logprob: -13.829440116882324
    6. ')' → logprob: -14.704440116882324
    7. '=None' → logprob: -15.579440116882324
    8. ' =
' → logprob: -15.829440116882324
    9. ',' → logprob: -15.954440116882324
    10. '＝' → logprob: -16.32944107055664

Token 92: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2254170924425125
    2. ' z' → logprob: -1.600417137145996
    3. '	z' → logprob: -12.725417137145996
    4. ' ' → logprob: -14.100417137145996
    5. ' ' → logprob: -14.725417137145996
    6. 'x' → logprob: -16.72541618347168
    7. ''z' → logprob: -17.10041618347168
    8. ' 
' → logprob: -17.10041618347168
    9. '[z' → logprob: -17.22541618347168
    10. '```' → logprob: -17.47541618347168

Token 93: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.9479355216026306
    2. '       ' → logprob: -1.3229355812072754
    3. '
' → logprob: -1.9479355812072754
    4. '<|end|>' → logprob: -2.1979355812072754
    5. ' else' → logprob: -2.9479355812072754
    6. '```' → logprob: -3.9479355812072754
    7. 'elif' → logprob: -4.822935581207275
    8. '  
' → logprob: -6.197935581207275
    9. '    
' → logprob: -6.697935581207275
    10. '   ' → logprob: -6.697935581207275

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4323938190937042
    2. 'else' → logprob: -1.5573937892913818
    3. 'elif' → logprob: -3.057393789291382
    4. ' else' → logprob: -3.182393789291382
    5. '<|end|>' → logprob: -4.182394027709961
    6. '
' → logprob: -4.307394027709961
    7. '```' → logprob: -4.307394027709961
    8. ' elif' → logprob: -5.307394027709961
    9. '	elif' → logprob: -6.682394027709961
    10. '   ' → logprob: -6.932394027709961

Token 95: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.004125772975385189
    2. 'else' → logprob: -6.004125595092773
    3. ' elif' → logprob: -6.504125595092773
    4. '       ' → logprob: -9.379125595092773
    5. '	elif' → logprob: -10.004125595092773
    6. 'elseif' → logprob: -12.004125595092773
    7. ' else' → logprob: -12.129125595092773
    8. '   ' → logprob: -12.504125595092773
    9. '```' → logprob: -12.504125595092773
    10. 'el' → logprob: -13.754125595092773

Token 96: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.02054644376039505
    2. 'z' → logprob: -3.8955464363098145
    3. ' ' → logprob: -13.020546913146973
    4. ' ' → logprob: -13.770546913146973
    5. '	z' → logprob: -14.645546913146973
    6. ' y' → logprob: -14.895546913146973
    7. '    ' → logprob: -15.270546913146973
    8. 'y' → logprob: -17.395545959472656
    9. '(z' → logprob: -18.020545959472656
    10. '.z' → logprob: -18.020545959472656

Token 97: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -4.060365608893335e-05
    2. '.' → logprob: -10.125041007995605
    3. 'key' → logprob: -16.00004005432129
    4. '.Key' → logprob: -16.50004005432129
    5. ' .' → logprob: -17.00004005432129
    6. '".' → logprob: -17.62504005432129
    7. '[key' → logprob: -17.75004005432129
    8. '```' → logprob: -17.75004005432129
    9. '.keys' → logprob: -17.87504005432129

Token 98: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0007408959208987653
    2. '<' → logprob: -7.500741004943848
    3. '<|end|>' → logprob: -9.000741004943848
    4. ' ' → logprob: -9.750741004943848
    5. ' <",' → logprob: -12.625741004943848
    6. '  ' → logprob: -14.500741004943848
    7. ')' → logprob: -14.625741004943848
    8. ' >' → logprob: -14.875741004943848
    9. ' <
' → logprob: -14.875741004943848
    10. ' ' → logprob: -15.875741004943848

Token 99: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.023246292024850845
    2. 'y' → logprob: -3.7732462882995605
    3. '	y' → logprob: -15.023246765136719
    4. ' ' → logprob: -15.273246765136719
    5. ' ' → logprob: -15.398246765136719
    6. '    ' → logprob: -18.39824676513672
    7. '   ' → logprob: -18.89824676513672
    8. ' 
' → logprob: -19.77324676513672
    9. ')y' → logprob: -19.89824676513672
    10. '  ' → logprob: -19.89824676513672

Token 100: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.004081485792994499
    2. '.' → logprob: -5.5040812492370605
    3. ' .' → logprob: -13.504081726074219
    4. '".' → logprob: -14.629081726074219
    5. '.Key' → logprob: -15.254081726074219
    6. '.k' → logprob: -15.379081726074219
    7. '.keys' → logprob: -16.00408172607422
    8. ''.' → logprob: -16.25408172607422
    9. 'key' → logprob: -16.25408172607422
    10. '`.' → logprob: -16.25408172607422

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001706367009319365
    2. ':
' → logprob: -6.376706600189209
    3. ' :' → logprob: -13.62670612335205
    4. ':

' → logprob: -13.75170612335205
    5. '):' → logprob: -14.37670612335205
    6. '<|end|>' → logprob: -14.50170612335205
    7. '           ' → logprob: -15.12670612335205
    8. ':
' → logprob: -15.87670612335205
    9. '):
' → logprob: -16.251707077026367
    10. ':**' → logprob: -16.626707077026367

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057142119854688644
    2. ' y' → logprob: -3.8071420192718506
    3. ' ' → logprob: -4.18214225769043
    4. ' 
' → logprob: -5.55714225769043
    5. '            ' → logprob: -5.68214225769043
    6. ' ' → logprob: -5.93214225769043
    7. ' z' → logprob: -6.30714225769043
    8. ' self' → logprob: -6.68214225769043
    9. ' x' → logprob: -6.93214225769043
    10. ':' → logprob: -7.18214225769043

Token 103: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.002974733477458358
    2. 'y' (adapté à ' y') → logprob: -5.877974510192871
    3. ' z' → logprob: -10.002974510192871
    4. '           ' → logprob: -10.252974510192871
    5. ' ' → logprob: -10.377974510192871
    6. ' x' → logprob: -11.252974510192871
    7. ' ' → logprob: -11.377974510192871
    8. ' 
' → logprob: -11.502974510192871
    9. ' self' → logprob: -11.752974510192871
    10. '            ' → logprob: -12.002974510192871

Token 104: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.001177012687548995
    2. '.' → logprob: -6.751176834106445
    3. '.right' → logprob: -12.501176834106445
    4. ' .' → logprob: -13.626176834106445
    5. '.Left' → logprob: -14.126176834106445
    6. '.le' → logprob: -14.626176834106445
    7. '.next' → logprob: -15.751176834106445
    8. '.children' → logprob: -16.251176834106445
    9. '.parent' → logprob: -16.501176834106445
    10. '.child' → logprob: -16.626176834106445

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246292024850845
    2. '=' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.398246765136719
    4. ' =
' → logprob: -15.648246765136719
    5. '＝' → logprob: -17.27324676513672
    6. '=z' → logprob: -17.27324676513672
    7. '<|end|>' → logprob: -17.64824676513672
    8. ' =
' → logprob: -18.77324676513672
    9. ' ' → logprob: -18.89824676513672
    10. ' =)' → logprob: -19.14824676513672

Token 106: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.3868729770183563
    2. 'z' → logprob: -1.1368730068206787
    3. '	z' → logprob: -13.261873245239258
    4. ' ' → logprob: -16.011873245239258
    5. ' ' → logprob: -16.636873245239258
    6. '
' → logprob: -18.761873245239258
    7. '    ' → logprob: -19.011873245239258
    8. ' 
' → logprob: -19.261873245239258
    9. ''z' → logprob: -19.261873245239258
    10. '_z' → logprob: -19.761873245239258

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048596687614917755
    2. ' else' → logprob: -3.7985966205596924
    3. 'else' → logprob: -3.9235966205596924
    4. '
' → logprob: -5.2985968589782715
    5. '```' → logprob: -9.673596382141113
    6. '  
' → logprob: -10.173596382141113
    7. '<|end|>' → logprob: -10.173596382141113
    8. '	else' → logprob: -10.423596382141113
    9. '   
' → logprob: -10.798596382141113
    10. ' 
' → logprob: -10.798596382141113

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13672326505184174
    2. 'else' → logprob: -2.136723279953003
    3. ' else' → logprob: -4.636723041534424
    4. '```' → logprob: -10.261723518371582
    5. '	else' → logprob: -11.761723518371582
    6. '   ' → logprob: -12.136723518371582
    7. '<|end|>' → logprob: -13.636723518371582
    8. 'Else' → logprob: -13.761723518371582
    9. '      ' → logprob: -13.886723518371582
    10. '_else' → logprob: -14.261723518371582

Token 109: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.29882222414016724
    2. ' else' → logprob: -1.4238221645355225
    3. '       ' → logprob: -4.048822402954102
    4. '	else' → logprob: -10.298822402954102
    5. '   ' → logprob: -10.798822402954102
    6. '```' → logprob: -11.923822402954102
    7. ' ' → logprob: -12.673822402954102
    8. 'z' → logprob: -13.548822402954102
    9. 'Else' → logprob: -13.673822402954102
    10. 'y' → logprob: -13.798822402954102

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18137559294700623
    2. '           ' → logprob: -1.8063756227493286
    3. ':
' → logprob: -6.556375503540039
    4. ' y' → logprob: -9.681375503540039
    5. '               ' → logprob: -9.806375503540039
    6. '       ' → logprob: -10.806375503540039
    7. '          ' → logprob: -10.931375503540039
    8. '   ' → logprob: -11.681375503540039
    9. ' :' → logprob: -11.681375503540039
    10. '            ' → logprob: -11.806375503540039

Token 111: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.049452513456344604
    2. '           ' → logprob: -3.049452543258667
    3. ' z' → logprob: -7.424452304840088
    4. 'y' → logprob: -8.424452781677246
    5. ' x' → logprob: -10.674452781677246
    6. 'z' → logprob: -11.424452781677246
    7. ' ' → logprob: -11.674452781677246
    8. ' ' → logprob: -13.049452781677246
    9. '            ' → logprob: -13.799452781677246
    10. '          ' → logprob: -14.174452781677246

Token 112: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10020699352025986
    2. 'y' (adapté à ' y') → logprob: -2.3502070903778076
    3. 'z' → logprob: -16.10020637512207
    4. '           ' → logprob: -16.35020637512207
    5. ' z' → logprob: -16.47520637512207
    6. '	y' → logprob: -17.10020637512207
    7. ' ' → logprob: -18.22520637512207
    8. ' ' → logprob: -19.47520637512207
    9. '            ' → logprob: -20.35020637512207
    10. ')y' → logprob: -20.47520637512207

Token 113: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.008629352785646915
    2. '.' → logprob: -4.758629322052002
    3. '.left' → logprob: -11.25862979888916
    4. ' .' → logprob: -13.63362979888916
    5. '.Right' → logprob: -14.25862979888916
    6. '	right' → logprob: -17.883628845214844
    7. '.r' → logprob: -17.883628845214844
    8. '.RIGHT' → logprob: -17.883628845214844
    9. '.parent' → logprob: -18.258628845214844
    10. ').' → logprob: -18.383628845214844

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -14.453890800476074
    4. ' =
' → logprob: -18.203889846801758
    5. '=z' → logprob: -18.453889846801758
    6. '<|end|>' → logprob: -19.078889846801758
    7. '＝' → logprob: -19.703889846801758
    8. ')' → logprob: -20.078889846801758
    9. ' =
' → logprob: -21.078889846801758
    10. ' =)' → logprob: -21.328889846801758

Token 115: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3868778944015503
    2. ' z' → logprob: -1.1368778944015503
    3. '	z' → logprob: -12.13687801361084
    4. ' ' → logprob: -14.01187801361084
    5. ' ' → logprob: -15.63687801361084
    6. 'x' → logprob: -15.88687801361084
    7. '-z' → logprob: -16.761877059936523
    8. '   ' → logprob: -16.761877059936523
    9. '[z' → logprob: -16.761877059936523
    10. ''z' → logprob: -17.011877059936523

Token 116: '
            
' (ID: 45334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 117: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 119: ' walk' (ID: 5229)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2830825746059418
    2. ' inorder' → logprob: -1.5330826044082642
    3. ' in' → logprob: -3.7830824851989746
    4. '_in' → logprob: -5.908082485198975
    5. 'search' → logprob: -5.908082485198975
    6. ' search' → logprob: -7.283082485198975
    7. 'insert' → logprob: -7.783082485198975
    8. 'order' → logprob: -8.283082962036133
    9. ' ' → logprob: -8.408082962036133
    10. '   ' → logprob: -8.658082962036133

Token 120: '_pre' (ID: 18599)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7932339310646057
    2. '_in' → logprob: -0.7932339310646057
    3. '(self' → logprob: -2.668233871459961
    4. 'In' → logprob: -3.918233871459961
    5. '(' → logprob: -6.043233871459961
    6. '   ' → logprob: -6.918233871459961
    7. 'in' → logprob: -7.043233871459961
    8. '_(' → logprob: -7.293233871459961
    9. '_tree' → logprob: -8.293233871459961
    10. '_order' → logprob: -9.043233871459961

Token 121: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.002527979901060462
    2. '_order' → logprob: -6.002528190612793
    3. '```' → logprob: -11.877528190612793
    4. 'o' → logprob: -12.127528190612793
    5. '(self' → logprob: -12.252528190612793
    6. '_' → logprob: -12.502528190612793
    7. '-order' → logprob: -12.502528190612793
    8. 'fix' → logprob: -12.627528190612793
    9. '   ' → logprob: -12.627528190612793
    10. 'Order' → logprob: -12.627528190612793

Token 122: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03812181577086449
    2. '(' → logprob: -3.2881217002868652
    3. '(
' → logprob: -10.163122177124023
    4. ' (' → logprob: -10.288122177124023
    5. '(s' → logprob: -12.413122177124023
    6. 'self' → logprob: -13.288122177124023
    7. '   ' → logprob: -14.038122177124023
    8. ' ' → logprob: -14.788122177124023
    9. '	self' → logprob: -15.288122177124023
    10. ' self' → logprob: -15.913122177124023

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008690637187100947
    2. ' ,' → logprob: -7.750869274139404
    3. 'self' → logprob: -8.125868797302246
    4. ',self' → logprob: -9.375868797302246
    5. ',node' → logprob: -11.250868797302246
    6. '   ' → logprob: -11.250868797302246
    7. ')' → logprob: -11.750868797302246
    8. '):' → logprob: -12.000868797302246
    9. ',
' → logprob: -12.125868797302246
    10. '       ' → logprob: -13.000868797302246

Token 124: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5909314751625061
    2. 'node' → logprob: -1.7159314155578613
    3. ' self' → logprob: -1.8409314155578613
    4. ' node' → logprob: -2.4659314155578613
    5. 'root' → logprob: -4.840931415557861
    6. 'x' → logprob: -4.840931415557861
    7. ' root' → logprob: -5.715931415557861
    8. ' x' → logprob: -6.090931415557861
    9. ' ' → logprob: -7.965931415557861
    10. ')' → logprob: -8.09093189239502

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00021831797494087368
    2. ' ):' → logprob: -9.250218391418457
    3. ')' → logprob: -9.750218391418457
    4. ':' → logprob: -10.250218391418457
    5. '):
' → logprob: -10.625218391418457
    6. ',' → logprob: -13.500218391418457
    7. '=None' → logprob: -13.750218391418457
    8. '   ' → logprob: -14.125218391418457
    9. '):
' → logprob: -15.250218391418457
    10. ' ' → logprob: -15.625218391418457

Token 126: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052610065788030624
    2. ' if' → logprob: -3.052610158920288
    3. 'if' → logprob: -5.802609920501709
    4. '   ' → logprob: -7.552609920501709
    5. '	if' → logprob: -9.177610397338867
    6. '        
' → logprob: -9.427610397338867
    7. '    ' → logprob: -9.552610397338867
    8. ' ' → logprob: -9.552610397338867
    9. '    
' → logprob: -10.677610397338867
    10. ',' → logprob: -10.677610397338867

Token 127: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3209531903266907
    2. 'if' (adapté à ' if') → logprob: -1.320953130722046
    3. '       ' → logprob: -5.570953369140625
    4. 'self' → logprob: -5.695953369140625
    5. ' self' → logprob: -8.320953369140625
    6. '	if' → logprob: -9.195953369140625
    7. '   ' → logprob: -9.945953369140625
    8. ' ' → logprob: -10.195953369140625
    9. '
' → logprob: -10.695953369140625
    10. '        ' → logprob: -11.195953369140625

Token 128: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.00071695790393278
    2. 'node' → logprob: -7.2507171630859375
    3. ' not' → logprob: -12.375717163085938
    4. '	node' → logprob: -13.625717163085938
    5. ' ' → logprob: -13.750717163085938
    6. '(node' → logprob: -15.375717163085938
    7. ' self' → logprob: -16.250717163085938
    8. ' ' → logprob: -17.250717163085938
    9. 'not' → logprob: -17.625717163085938
    10. '[node' → logprob: -18.125717163085938

Token 129: ' ==' (ID: 951)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0392652302980423
    2. ':' → logprob: -4.164265155792236
    3. ' !=' → logprob: -4.539265155792236
    4. '!=' → logprob: -4.539265155792236
    5. 'is' → logprob: -6.664265155792236
    6. ' ' → logprob: -8.914265632629395
    7. '<|end|>' → logprob: -10.289265632629395
    8. ')' → logprob: -10.414265632629395
    9. '	is' → logprob: -10.664265632629395
    10. '   ' → logprob: -11.289265632629395

Token 130: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.16023722290992737
    2. ' None' → logprob: -1.910237193107605
    3. ' ' → logprob: -11.785237312316895
    4. '_None' → logprob: -13.785237312316895
    5. '(None' → logprob: -14.285237312316895
    6. '   ' → logprob: -14.285237312316895
    7. 'self' → logprob: -14.410237312316895
    8. '=None' → logprob: -14.410237312316895
    9. ',None' → logprob: -15.160237312316895
    10. ' ' → logprob: -15.285237312316895

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0044303592294454575
    2. ':
' → logprob: -5.629430294036865
    3. ':return' → logprob: -7.129430294036865
    4. '           ' → logprob: -11.379430770874023
    5. '       ' → logprob: -11.629430770874023
    6. '):' → logprob: -13.129430770874023
    7. '<|end|>' → logprob: -13.379430770874023
    8. ' :' → logprob: -13.629430770874023
    9. ',' → logprob: -14.254430770874023
    10. '.' → logprob: -14.379430770874023

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7607970833778381
    2. ':' → logprob: -0.8857970833778381
    3. ':return' → logprob: -2.6357970237731934
    4. ':
' → logprob: -3.7607970237731934
    5. ' return' → logprob: -4.635797023773193
    6. '       ' → logprob: -4.885797023773193
    7. 'return' → logprob: -5.635797023773193
    8. '
' → logprob: -6.385797023773193
    9. '   ' → logprob: -7.260797023773193
    10. '<|end|>' → logprob: -7.635797023773193

Token 133: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04053087159991264
    2. ' return' → logprob: -3.2905309200286865
    3. '           ' → logprob: -6.040530681610107
    4. '   ' → logprob: -10.040531158447266
    5. '	return' → logprob: -10.540531158447266
    6. ':return' → logprob: -11.040531158447266
    7. '       ' → logprob: -11.790531158447266
    8. '               ' → logprob: -12.165531158447266
    9. '
' → logprob: -12.790531158447266
    10. '{return' → logprob: -13.540531158447266

Token 134: ' None' (ID: 4662)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05218755453824997
    2. '       ' → logprob: -3.302187442779541
    3. ' 
' → logprob: -5.052187442779541
    4. '  
' → logprob: -6.302187442779541
    5. '\n' → logprob: -6.302187442779541
    6. '        
' → logprob: -6.427187442779541
    7. '    
' → logprob: -7.552187442779541
    8. '<|end|>' → logprob: -7.552187442779541
    9. '
' → logprob: -7.802187442779541
    10. ' self' → logprob: -8.1771879196167

Token 135: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20974765717983246
    2. '       ' → logprob: -1.7097476720809937
    3. '        
' → logprob: -5.584747791290283
    4. '  
' → logprob: -6.709747791290283
    5. ' 
' → logprob: -7.209747791290283
    6. '\n' → logprob: -7.209747791290283
    7. '    
' → logprob: -7.209747791290283
    8. '<|end|>' → logprob: -7.584747791290283
    9. '
' → logprob: -8.209747314453125
    10. '   ' → logprob: -9.709747314453125

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06487541645765305
    2. '
' → logprob: -3.064875364303589
    3. '        
' → logprob: -4.439875602722168
    4. '  
' → logprob: -6.814875602722168
    5. '    
' → logprob: -6.814875602722168
    6. ' 
' → logprob: -7.064875602722168
    7. '<|end|>' → logprob: -7.564875602722168
    8. '\n' → logprob: -8.189875602722168
    9. '   ' → logprob: -8.439875602722168
    10. '            
' → logprob: -10.064875602722168

Token 137: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2804170250892639
    2. '       ' → logprob: -1.5304169654846191
    3. ' self' → logprob: -4.280416965484619
    4. '   ' → logprob: -4.280416965484619
    5. ' ' → logprob: -8.655417442321777
    6. '	self' → logprob: -8.905417442321777
    7. '  ' → logprob: -10.280417442321777
    8. '    ' → logprob: -10.905417442321777
    9. '[self' → logprob: -12.155417442321777
    10. '     ' → logprob: -12.155417442321777

Token 138: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.001393688376992941
    2. '.' → logprob: -6.626393795013428
    3. 'order' → logprob: -10.25139331817627
    4. ' .' → logprob: -12.25139331817627
    5. '.output' → logprob: -12.25139331817627
    6. '.append' → logprob: -12.50139331817627
    7. '.user' → logprob: -12.87639331817627
    8. '.print' → logprob: -13.75139331817627
    9. '.queue' → logprob: -13.75139331817627
    10. '.operation' → logprob: -14.00139331817627

Token 139: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.125
    3. ' _' → logprob: -18.25
    4. '_lst' → logprob: -19.625
    5. '_l' → logprob: -19.875
    6. '.append' → logprob: -20.375
    7. '_lists' → logprob: -20.375
    8. '_lista' → logprob: -20.5
    9. '_List' → logprob: -20.75
    10. '._' → logprob: -21.375

Token 140: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3663626305060461e-05
    2. '.' → logprob: -11.25001335144043
    3. '.app' → logprob: -14.75001335144043
    4. '.ap' → logprob: -15.87501335144043
    5. ' .' → logprob: -17.12501335144043
    6. 'append' → logprob: -17.50001335144043
    7. '.extend' → logprob: -17.62501335144043
    8. '.add' → logprob: -18.37501335144043
    9. '.push' → logprob: -18.62501335144043
    10. '.Append' → logprob: -18.87501335144043

Token 141: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.023255029693245888
    2. '(' → logprob: -3.7732551097869873
    3. '(
' → logprob: -11.648255348205566
    4. '(n' → logprob: -14.648255348205566
    5. '(token' → logprob: -16.27325439453125
    6. '(

' → logprob: -16.52325439453125
    7. '(nodes' → logprob: -16.89825439453125
    8. '((' → logprob: -17.14825439453125
    9. '(Node' → logprob: -17.27325439453125
    10. ' (' → logprob: -17.52325439453125

Token 142: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0008291634730994701
    2. '.' → logprob: -7.375829219818115
    3. ')' → logprob: -9.500828742980957
    4. ').' → logprob: -9.625828742980957
    5. '.value' → logprob: -10.125828742980957
    6. '.data' → logprob: -11.250828742980957
    7. ' .' → logprob: -13.125828742980957
    8. '.val' → logprob: -13.625828742980957
    9. '`.' → logprob: -14.000828742980957
    10. '.keys' → logprob: -14.125828742980957

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004236174281686544
    2. ')
' → logprob: -5.504236221313477
    3. '       ' → logprob: -8.879236221313477
    4. ' )' → logprob: -12.004236221313477
    5. ',' → logprob: -12.129236221313477
    6. ')
' → logprob: -12.629236221313477
    7. '   ' → logprob: -13.879236221313477
    8. '),' → logprob: -14.379236221313477
    9. ' ' → logprob: -15.004236221313477
    10. ')\' → logprob: -15.379236221313477

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5815645456314087
    2. '
' → logprob: -0.8315645456314087
    3. '        
' → logprob: -5.456564426422119
    4. 'self' → logprob: -8.206564903259277
    5. '
' → logprob: -8.456564903259277
    6. '  
' → logprob: -8.581564903259277
    7. '    
' → logprob: -8.956564903259277
    8. ' 
' → logprob: -9.081564903259277
    9. '<|end|>' → logprob: -9.081564903259277
    10. '   ' → logprob: -9.331564903259277

Token 145: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010797296417877078
    2. 'if' → logprob: -7.501079559326172
    3. '       ' → logprob: -8.251079559326172
    4. ' self' → logprob: -8.251079559326172
    5. '        
' → logprob: -13.501079559326172
    6. ' if' → logprob: -13.751079559326172
    7. 'for' → logprob: -13.876079559326172
    8. '
' → logprob: -14.501079559326172
    9. '	self' → logprob: -15.001079559326172
    10. '   ' → logprob: -15.251079559326172

Token 146: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -6.8497312895488e-05
    2. '.' → logprob: -9.750068664550781
    3. ' .' → logprob: -12.125068664550781
    4. '.w' → logprob: -13.000068664550781
    5. 'walk' → logprob: -13.125068664550781
    6. '.visit' → logprob: -16.00006866455078
    7. '​.' → logprob: -16.62506866455078
    8. ').' → logprob: -17.50006866455078
    9. '\.' → logprob: -17.87506866455078
    10. '
' → logprob: -18.12506866455078

Token 147: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.000001907348633
    3. 'pre' → logprob: -15.250001907348633
    4. '_left' → logprob: -15.750001907348633
    5. '(node' → logprob: -15.875001907348633
    6. '_pres' → logprob: -16.375001907348633
    7. 'Pre' → logprob: -16.625001907348633
    8. '_post' → logprob: -16.750001907348633
    9. '_PRE' → logprob: -17.000001907348633
    10. '_per' → logprob: -17.000001907348633

Token 148: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.125
    3. '
' → logprob: -17.875
    4. 'oder' → logprob: -18.125
    5. ' order' → logprob: -18.25
    6. '_order' → logprob: -18.625
    7. 'or' → logprob: -19.375
    8. 'o' → logprob: -19.875
    9. '

' → logprob: -19.875
    10. '```' → logprob: -20.0

Token 149: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0380634106695652
    2. '(' → logprob: -3.2880635261535645
    3. '(
' → logprob: -10.788063049316406
    4. '(n' → logprob: -14.663063049316406
    5. '(

' → logprob: -14.663063049316406
    6. ' (' → logprob: -15.538063049316406
    7. '(Node' → logprob: -16.663063049316406
    8. '(x' → logprob: -16.788063049316406
    9. '(self' → logprob: -17.163063049316406
    10. '(left' → logprob: -17.413063049316406

Token 150: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.786196975852363e-05
    2. '.' → logprob: -10.500038146972656
    3. '.right' → logprob: -12.375038146972656
    4. ').' → logprob: -12.500038146972656
    5. ' .' → logprob: -13.250038146972656
    6. ')' → logprob: -15.125038146972656
    7. '.Left' → logprob: -16.375038146972656
    8. 'left' → logprob: -16.500038146972656
    9. '".' → logprob: -17.250038146972656
    10. '`.' → logprob: -17.625038146972656

Token 151: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519741356372833
    2. ')
' → logprob: -1.501974105834961
    3. '       ' → logprob: -10.126974105834961
    4. ' )
' → logprob: -13.251974105834961
    5. '   ' → logprob: -13.876974105834961
    6. ' )' → logprob: -14.001974105834961
    7. ')

' → logprob: -14.001974105834961
    8. ')
' → logprob: -14.376974105834961
    9. '),' → logprob: -17.50197410583496
    10. ' ' → logprob: -17.62697410583496

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038777426816523075
    2. 'self' → logprob: -6.128877639770508
    3. '        
' → logprob: -7.128877639770508
    4. ' self' → logprob: -8.253877639770508
    5. '
' → logprob: -8.753877639770508
    6. '   ' → logprob: -8.753877639770508
    7. ' ' → logprob: -9.128877639770508
    8. '	' → logprob: -10.003877639770508
    9. '  
' → logprob: -10.253877639770508
    10. '	self' → logprob: -10.878877639770508

Token 153: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012155943550169468
    2. ' self' → logprob: -6.75121545791626
    3. '       ' → logprob: -10.001215934753418
    4. '	self' → logprob: -17.7512149810791
    5. '   ' → logprob: -18.5012149810791
    6. ' ' → logprob: -18.6262149810791
    7. '        ' → logprob: -20.1262149810791
    8. '    ' → logprob: -20.5012149810791
    9. '      ' → logprob: -20.5012149810791
    10. '  ' → logprob: -20.8762149810791

Token 154: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.00014716439181938767
    2. '.' → logprob: -8.875146865844727
    3. 'walk' → logprob: -12.875146865844727
    4. ' .' → logprob: -12.875146865844727
    5. '.w' → logprob: -13.500146865844727
    6. '.right' → logprob: -15.125146865844727
    7. '.visit' → logprob: -15.875146865844727
    8. '.wave' → logprob: -16.125146865844727
    9. '.watch' → logprob: -16.375146865844727
    10. '\.' → logprob: -17.375146865844727

Token 155: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.006701634731143713
    2. 'pre' → logprob: -5.881701469421387
    3. 'order' → logprob: -6.131701469421387
    4. '_post' → logprob: -6.881701469421387
    5. '_order' → logprob: -7.881701469421387
    6. '_right' → logprob: -8.756701469421387
    7. 'right' → logprob: -9.756701469421387
    8. 'post' → logprob: -9.756701469421387
    9. ' preorder' → logprob: -11.506701469421387
    10. '_' → logprob: -11.631701469421387

Token 156: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.0280383548888494e-06
    2. '_order' → logprob: -15.250000953674316
    3. '
' → logprob: -16.125001907348633
    4. '```' → logprob: -16.125001907348633
    5. 'ordering' → logprob: -16.375001907348633
    6. 'oder' → logprob: -16.625001907348633
    7. 'o' → logprob: -16.750001907348633
    8. ' order' → logprob: -16.750001907348633
    9. 'orde' → logprob: -17.125001907348633
    10. 'ord' → logprob: -17.125001907348633

Token 157: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. '(
' → logprob: -17.000431060791016
    4. '(Node' → logprob: -17.625431060791016
    5. ' (' → logprob: -17.875431060791016
    6. '(n' → logprob: -18.000431060791016
    7. '(nodes' → logprob: -18.875431060791016
    8. 'node' → logprob: -19.500431060791016
    9. ',node' → logprob: -19.875431060791016
    10. '(

' → logprob: -20.500431060791016

Token 158: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00012415809032972902
    2. '.' → logprob: -9.000123977661133
    3. ' .' → logprob: -15.000123977661133
    4. 'right' → logprob: -15.000123977661133
    5. '.left' → logprob: -16.375123977661133
    6. '.Right' → logprob: -17.125123977661133
    7. ').' → logprob: -17.375123977661133
    8. '	right' → logprob: -18.750123977661133
    9. '[right' → logprob: -19.500123977661133
    10. '.r' → logprob: -19.750123977661133

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.107425062713446e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -14.500006675720215
    4. '   ' → logprob: -15.750006675720215
    5. '       ' → logprob: -15.875006675720215
    6. ')return' → logprob: -16.25000762939453
    7. ')

' → logprob: -17.37500762939453
    8. '<|end|>' → logprob: -17.37500762939453
    9. ' ' → logprob: -18.12500762939453
    10. ')#' → logprob: -18.50000762939453

Token 160: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' walk' (ID: 5229)
  Prédit: ' walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' walk' → logprob: -0.26067227125167847
    2. 'walk' → logprob: -1.5106723308563232
    3. ' inorder' → logprob: -5.135672092437744
    4. 'in' → logprob: -6.635672092437744
    5. '_walk' → logprob: -7.885672092437744
    6. ' in' → logprob: -8.510672569274902
    7. ' traverse' → logprob: -9.010672569274902
    8. ' get' → logprob: -9.135672569274902
    9. '_in' → logprob: -9.260672569274902
    10. ' search' → logprob: -9.635672569274902

Token 163: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0003384422743692994
    2. '_' → logprob: -8.125338554382324
    3. '_post' → logprob: -10.875338554382324
    4. 'in' → logprob: -11.125338554382324
    5. ' inorder' → logprob: -13.375338554382324
    6. 'In' → logprob: -13.500338554382324
    7. '_order' → logprob: -13.750338554382324
    8. '_
' → logprob: -14.000338554382324
    9. '__' → logprob: -14.250338554382324
    10. '_pre' → logprob: -14.625338554382324

Token 164: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -5.347765181795694e-05
    2. '_order' → logprob: -9.875053405761719
    3. 'pre' → logprob: -13.500053405761719
    4. '_' → logprob: -15.250053405761719
    5. 'orders' → logprob: -16.62505340576172
    6. 'oder' → logprob: -17.00005340576172
    7. '_pre' → logprob: -17.50005340576172
    8. 'in' → logprob: -17.62505340576172
    9. 'ordering' → logprob: -17.62505340576172
    10. 'post' → logprob: -17.75005340576172

Token 165: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001239196863025427
    2. '(' → logprob: -9.000123977661133
    3. ' (' → logprob: -15.250123977661133
    4. '(s' → logprob: -16.000123977661133
    5. '(
' → logprob: -16.875123977661133
    6. 'self' → logprob: -17.000123977661133
    7. '   ' → logprob: -18.000123977661133
    8. '(sel' → logprob: -18.125123977661133
    9. ' ' → logprob: -18.500123977661133
    10. '(Self' → logprob: -19.375123977661133

Token 166: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2603901015827432e-05
    2. '(' → logprob: -11.375022888183594
    3. 'self' → logprob: -11.500022888183594
    4. ' (' → logprob: -15.000022888183594
    5. ',' → logprob: -15.250022888183594
    6. ')' → logprob: -16.375022888183594
    7. ',self' → logprob: -16.875022888183594
    8. '   ' → logprob: -17.000022888183594
    9. ' self' → logprob: -17.625022888183594
    10. '       ' → logprob: -17.750022888183594

Token 167: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1706567108631134
    2. ' self' → logprob: -1.920656681060791
    3. 'node' → logprob: -5.045656681060791
    4. ' node' → logprob: -5.545656681060791
    5. '(self' → logprob: -11.04565715789795
    6. ' ' → logprob: -12.17065715789795
    7. '   ' → logprob: -12.17065715789795
    8. '	self' → logprob: -12.79565715789795
    9. '       ' → logprob: -13.04565715789795
    10. '
' → logprob: -13.42065715789795

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1072651594877243
    2. ':' → logprob: -3.3572652339935303
    3. '       ' → logprob: -3.3572652339935303
    4. '):
' → logprob: -3.4822652339935303
    5. '   ' → logprob: -6.857264995574951
    6. ':
' → logprob: -9.23226547241211
    7. ')' → logprob: -9.35726547241211
    8. '():' → logprob: -10.98226547241211
    9. '	' → logprob: -11.10726547241211
    10. '):
' → logprob: -11.35726547241211

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004082699597347528
    2. ' if' → logprob: -8.125408172607422
    3. '   ' → logprob: -9.750408172607422
    4. 'if' → logprob: -9.875408172607422
    5. '<|end|>' → logprob: -13.375408172607422
    6. '	if' → logprob: -15.375408172607422
    7. ' ' → logprob: -15.750408172607422
    8. '```' → logprob: -15.875408172607422
    9. '	   ' → logprob: -16.000408172607422
    10. '	' → logprob: -16.250408172607422

Token 170: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03508017957210541
    2. ' if' → logprob: -3.5350801944732666
    3. '       ' → logprob: -5.2850799560546875
    4. '   ' → logprob: -8.410079956054688
    5. '	if' → logprob: -10.910079956054688
    6. ' ' → logprob: -12.035079956054688
    7. '```' → logprob: -14.285079956054688
    8. '    ' → logprob: -14.785079956054688
    9. '
' → logprob: -15.035079956054688
    10. '  ' → logprob: -15.410079956054688

Token 171: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.0015048631466925144
    2. 'node' → logprob: -6.501504898071289
    3. '(node' → logprob: -13.376504898071289
    4. '	node' → logprob: -14.751504898071289
    5. ' ' → logprob: -15.001504898071289
    6. ' not' → logprob: -16.25150489807129
    7. '[node' → logprob: -16.87650489807129
    8. ' ' → logprob: -17.00150489807129
    9. ' None' → logprob: -17.62650489807129
    10. '_node' → logprob: -18.12650489807129

Token 172: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.035530466586351395
    2. '==' → logprob: -3.4105305671691895
    3. ' is' → logprob: -6.2855305671691895
    4. 'is' → logprob: -11.285530090332031
    5. ' ' → logprob: -12.285530090332031
    6. ' =' → logprob: -13.410530090332031
    7. ' !=' → logprob: -15.160530090332031
    8. '=' → logprob: -15.285530090332031
    9. ' ' → logprob: -16.41053009033203
    10. '==
' → logprob: -16.53553009033203

Token 173: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.47408872842788696
    2. 'None' → logprob: -0.974088728427887
    3. ' ' → logprob: -12.224088668823242
    4. '_None' → logprob: -12.974088668823242
    5. '(None' → logprob: -14.099088668823242
    6. 'No' → logprob: -14.349088668823242
    7. '=None' → logprob: -14.724088668823242
    8. ' ' → logprob: -14.724088668823242
    9. 'Node' → logprob: -14.724088668823242
    10. ' node' → logprob: -15.099088668823242

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018108386546373367
    2. ':
' → logprob: -4.143108367919922
    3. '       ' → logprob: -6.268108367919922
    4. ':return' → logprob: -9.643108367919922
    5. '           ' → logprob: -10.018108367919922
    6. '<|end|>' → logprob: -10.143108367919922
    7. '   ' → logprob: -11.893108367919922
    8. '):' → logprob: -12.518108367919922
    9. '<|end|>' → logprob: -12.768108367919922
    10. ':

' → logprob: -13.018108367919922

Token 175: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3675313889980316
    2. '           ' → logprob: -1.242531418800354
    3. 'return' → logprob: -4.9925312995910645
    4. ' return' → logprob: -5.3675312995910645
    5. '<|end|>' → logprob: -5.4925312995910645
    6. '   ' → logprob: -6.6175312995910645
    7. ':return' → logprob: -6.7425312995910645
    8. ' ' → logprob: -8.617531776428223
    9. ':' → logprob: -9.117531776428223
    10. '
' → logprob: -9.367531776428223

Token 176: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.12936687469482422
    2. 'return' (adapté à ' return') → logprob: -2.129366874694824
    3. '       ' → logprob: -6.254366874694824
    4. '   ' → logprob: -7.754366874694824
    5. '           ' → logprob: -10.254366874694824
    6. '	return' → logprob: -10.504366874694824
    7. '
' → logprob: -11.754366874694824
    8. ' ' → logprob: -12.379366874694824
    9. ':return' → logprob: -12.629366874694824
    10. ' ' → logprob: -12.879366874694824

Token 177: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20141586661338806
    2. ' None' → logprob: -1.7014158964157104
    3. '
' → logprob: -13.951416015625
    4. '_None' → logprob: -14.076416015625
    5. '(None' → logprob: -14.451416015625
    6. ' ' → logprob: -15.951416015625
    7. ' 
' → logprob: -16.201416015625
    8. ',None' → logprob: -16.951416015625
    9. '.None' → logprob: -17.576416015625
    10. '  
' → logprob: -17.576416015625

Token 178: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04881615936756134
    2. '
' → logprob: -3.048816204071045
    3. 'self' → logprob: -9.173815727233887
    4. '<|end|>' → logprob: -10.298815727233887
    5. '        
' → logprob: -10.423815727233887
    6. '   ' → logprob: -10.673815727233887
    7. ' self' → logprob: -11.048815727233887
    8. '
' → logprob: -12.423815727233887
    9. ',' → logprob: -12.548815727233887
    10. '  
' → logprob: -12.798815727233887

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008910943870432675
    2. '
' → logprob: -7.250891208648682
    3. ' self' → logprob: -9.875890731811523
    4. '   ' → logprob: -10.000890731811523
    5. 'self' → logprob: -10.375890731811523
    6. '        
' → logprob: -11.250890731811523
    7. '	' → logprob: -11.500890731811523
    8. ' ' → logprob: -12.000890731811523
    9. '<|end|>' → logprob: -12.000890731811523
    10. '      ' → logprob: -12.250890731811523

Token 180: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5877771377563477
    2. 'self' (adapté à ' self') → logprob: -0.9627771377563477
    3. ' self' → logprob: -2.9627771377563477
    4. '   ' → logprob: -4.587777137756348
    5. ' ' → logprob: -7.712777137756348
    6. '	self' → logprob: -9.337777137756348
    7. '  ' → logprob: -9.837777137756348
    8. '
' → logprob: -9.962777137756348
    9. '    ' → logprob: -10.087777137756348
    10. '        
' → logprob: -10.712777137756348

Token 181: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.003814330091699958
    2. '.' → logprob: -5.628814220428467
    3. ' .' → logprob: -8.878814697265625
    4. '.order' → logprob: -9.628814697265625
    5. 'walk' → logprob: -12.753814697265625
    6. '.w' → logprob: -12.878814697265625
    7. '.visit' → logprob: -14.253814697265625
    8. '   ' → logprob: -14.753814697265625
    9. '​.' → logprob: -14.878814697265625
    10. '.wait' → logprob: -14.878814697265625

Token 182: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.000000953674316
    3. 'in' → logprob: -16.625001907348633
    4. 'In' → logprob: -17.875001907348633
    5. '_inode' → logprob: -19.750001907348633
    6. '_pre' → logprob: -19.875001907348633
    7. '_left' → logprob: -20.125001907348633
    8. '_
' → logprob: -20.250001907348633
    9. '_In' → logprob: -20.375001907348633
    10. ' inorder' → logprob: -20.375001907348633

Token 183: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -7.958325295476243e-05
    2. 'node' → logprob: -9.500079154968262
    3. 'in' → logprob: -12.500079154968262
    4. 'or' → logprob: -15.000079154968262
    5. '
' → logprob: -15.875079154968262
    6. '```' → logprob: -16.125080108642578
    7. 'orde' → logprob: -16.250080108642578
    8. '_order' → logprob: -16.750080108642578
    9. '_in' → logprob: -16.875080108642578
    10. '   ' → logprob: -17.125080108642578

Token 184: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.493430894101039e-05
    2. '(' → logprob: -9.500075340270996
    3. '(n' → logprob: -17.75007438659668
    4. ' (' → logprob: -18.12507438659668
    5. '(
' → logprob: -18.25007438659668
    6. 'node' → logprob: -19.37507438659668
    7. '(Node' → logprob: -19.50007438659668
    8. '(x' → logprob: -20.12507438659668
    9. '[node' → logprob: -20.25007438659668
    10. ' node' → logprob: -21.37507438659668

Token 185: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.796184723294573e-06
    2. '.' → logprob: -12.250005722045898
    3. 'left' → logprob: -14.250005722045898
    4. '.node' → logprob: -16.0000057220459
    5. ' .' → logprob: -16.8750057220459
    6. '(left' → logprob: -17.0000057220459
    7. '.Left' → logprob: -17.1250057220459
    8. '.right' → logprob: -17.8750057220459
    9. ')' → logprob: -18.3750057220459
    10. ').' → logprob: -18.5000057220459

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5329570174217224
    2. ')
' → logprob: -1.4079570770263672
    3. '       ' → logprob: -1.7829570770263672
    4. '
' → logprob: -8.282957077026367
    5. ' )
' → logprob: -10.407957077026367
    6. ')
' → logprob: -10.907957077026367
    7. ' )' → logprob: -11.282957077026367
    8. '   ' → logprob: -12.032957077026367
    9. ')n' → logprob: -12.032957077026367
    10. '<|end|>' → logprob: -12.032957077026367

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007396010681986809
    2. 'self' → logprob: -5.382396221160889
    3. '
' → logprob: -6.382396221160889
    4. ' self' → logprob: -7.382396221160889
    5. '        
' → logprob: -8.13239574432373
    6. '   ' → logprob: -9.13239574432373
    7. ' 
' → logprob: -11.63239574432373
    8. '    
' → logprob: -11.63239574432373
    9. '	self' → logprob: -12.00739574432373
    10. ' ' → logprob: -12.00739574432373

Token 188: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00038693982060067356
    2. ' self' → logprob: -8.250387191772461
    3. '       ' → logprob: -9.000387191772461
    4. '
' → logprob: -13.500387191772461
    5. '   ' → logprob: -14.250387191772461
    6. '	self' → logprob: -15.500387191772461
    7. ' ' → logprob: -17.50038719177246
    8. '        
' → logprob: -18.50038719177246
    9. '```' → logprob: -18.87538719177246
    10. '  ' → logprob: -19.25038719177246

Token 189: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.00013536323967855424
    2. 'order' → logprob: -9.12513542175293
    3. '.' → logprob: -10.87513542175293
    4. ' .' → logprob: -11.87513542175293
    5. 'self' → logprob: -15.12513542175293
    6. ' order' → logprob: -16.00013542175293
    7. '	order' → logprob: -16.87513542175293
    8. '.self' → logprob: -17.37513542175293
    9. '.
' → logprob: -17.75013542175293
    10. '$order' → logprob: -17.87513542175293

Token 190: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.8074162653647363e-05
    2. '.append' → logprob: -11.125018119812012
    3. '_' → logprob: -13.500018119812012
    4. '_append' → logprob: -14.250018119812012
    5. 'append' → logprob: -14.625018119812012
    6. 'list' → logprob: -14.750018119812012
    7. 'List' → logprob: -15.625018119812012
    8. '_pre' → logprob: -16.500017166137695
    9. '_in' → logprob: -16.500017166137695
    10. 's' → logprob: -17.000017166137695

Token 191: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.225939872208983e-05
    2. '.' → logprob: -10.375032424926758
    3. '.app' → logprob: -14.625032424926758
    4. 'append' → logprob: -15.750032424926758
    5. '.Append' → logprob: -16.125032424926758
    6. '.extend' → logprob: -16.500032424926758
    7. '.add' → logprob: -17.250032424926758
    8. '.setdefault' → logprob: -17.750032424926758
    9. 'Append' → logprob: -17.875032424926758
    10. ' .' → logprob: -18.875032424926758

Token 192: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00020354038861114532
    2. '(' → logprob: -8.500203132629395
    3. '(
' → logprob: -17.00020408630371
    4. '(n' → logprob: -17.37520408630371
    5. 'node' → logprob: -18.12520408630371
    6. '(token' → logprob: -18.62520408630371
    7. ' (' → logprob: -19.25020408630371
    8. '(Node' → logprob: -20.37520408630371
    9. '[node' → logprob: -20.87520408630371
    10. ',node' → logprob: -21.12520408630371

Token 193: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -13.625000953674316
    3. 'key' → logprob: -17.625001907348633
    4. ' .' → logprob: -18.000001907348633
    5. '(key' → logprob: -19.125001907348633
    6. ').' → logprob: -20.375001907348633
    7. '.node' → logprob: -20.875001907348633
    8. '[key' → logprob: -21.000001907348633
    9. ' key' → logprob: -21.125001907348633
    10. ')' → logprob: -21.125001907348633

Token 194: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029835760593414307
    2. '       ' → logprob: -3.7798357009887695
    3. ')
' → logprob: -5.0298357009887695
    4. '   ' → logprob: -11.52983570098877
    5. ' )' → logprob: -12.52983570098877
    6. ')n' → logprob: -12.52983570098877
    7. '<|end|>' → logprob: -12.65483570098877
    8. '
' → logprob: -12.65483570098877
    9. ')\
' → logprob: -14.27983570098877
    10. '()' → logprob: -14.40483570098877

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008940708357840776
    2. 'self' → logprob: -7.250894069671631
    3. '   ' → logprob: -8.750894546508789
    4. '
' → logprob: -11.625894546508789
    5. ' self' → logprob: -12.000894546508789
    6. '\' → logprob: -12.875894546508789
    7. '```' → logprob: -13.000894546508789
    8. '        
' → logprob: -13.125894546508789
    9. ' ' → logprob: -13.625894546508789
    10. '           ' → logprob: -14.875894546508789

Token 196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006730287801474333
    2. '       ' → logprob: -5.256730079650879
    3. ' self' → logprob: -6.506730079650879
    4. '   ' → logprob: -13.756730079650879
    5. ' ' → logprob: -14.506730079650879
    6. '	self' → logprob: -15.006730079650879
    7. '        
' → logprob: -17.131731033325195
    8. '```' → logprob: -17.131731033325195
    9. '[self' → logprob: -17.256731033325195
    10. '  ' → logprob: -17.631731033325195

Token 197: '.walk' (ID: 103978)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.004097635392099619
    2. '.walk' → logprob: -5.5040974617004395
    3. ' walk' → logprob: -10.879097938537598
    4. '_walk' → logprob: -16.12909698486328
    5. '.' → logprob: -16.50409698486328
    6. 'walker' → logprob: -16.87909698486328
    7. 'watch' → logprob: -17.87909698486328
    8. 'walking' → logprob: -17.87909698486328
    9. 'w' → logprob: -18.37909698486328
    10. ' ' → logprob: -18.50409698486328

Token 198: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0001499060745118186
    2. 'order' → logprob: -9.375149726867676
    3. 'in' → logprob: -9.875149726867676
    4. '_' → logprob: -12.375149726867676
    5. '_order' → logprob: -12.625149726867676
    6. 'right' → logprob: -13.000149726867676
    7. 'node' → logprob: -13.750149726867676
    8. 'o' → logprob: -14.375149726867676
    9. 'or' → logprob: -15.375149726867676
    10. 'r' → logprob: -15.375149726867676

Token 199: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0005133562372066081
    2. 'node' → logprob: -7.625513553619385
    3. 'oder' → logprob: -12.250513076782227
    4. '   ' → logprob: -12.500513076782227
    5. 'or' → logprob: -12.875513076782227
    6. 'right' → logprob: -13.250513076782227
    7. 'orde' → logprob: -13.250513076782227
    8. 'ode' → logprob: -13.375513076782227
    9. '
' → logprob: -13.500513076782227
    10. 'o' → logprob: -13.625513076782227

Token 200: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -4.56102097814437e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -15.875045776367188
    4. '(
' → logprob: -16.750045776367188
    5. '(n' → logprob: -17.250045776367188
    6. '(Node' → logprob: -19.875045776367188
    7. '(x' → logprob: -20.250045776367188
    8. ',node' → logprob: -20.375045776367188
    9. '(nodes' → logprob: -21.000045776367188
    10. 'node' → logprob: -21.000045776367188

Token 201: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0035911600571125746
    2. '.left' → logprob: -5.753591060638428
    3. '(node' → logprob: -8.503591537475586
    4. '.' → logprob: -8.628591537475586
    5. 'right' → logprob: -10.878591537475586
    6. ')' → logprob: -12.253591537475586
    7. '.node' → logprob: -12.503591537475586
    8. '(right' → logprob: -13.253591537475586
    9. ' .' → logprob: -13.378591537475586
    10. ').' → logprob: -15.003591537475586

Token 202: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.5252596464706585e-05
    2. ')
' → logprob: -10.125044822692871
    3. '       ' → logprob: -12.875044822692871
    4. '   ' → logprob: -13.625044822692871
    5. '<|end|>' → logprob: -14.750044822692871
    6. '()' → logprob: -14.875044822692871
    7. ' )' → logprob: -15.000044822692871
    8. '```' → logprob: -16.750045776367188
    9. ')

' → logprob: -16.875045776367188
    10. ')return' → logprob: -17.125045776367188

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030588123947381973
    2. 'def' → logprob: -3.530588150024414
    3. ' def' → logprob: -7.155588150024414
    4. ' ' → logprob: -10.405588150024414
    5. '  ' → logprob: -11.780588150024414
    6. '```' → logprob: -12.030588150024414
    7. '    
' → logprob: -12.155588150024414
    8. '	def' → logprob: -12.530588150024414
    9. '
' → logprob: -13.030588150024414
    10. '        
' → logprob: -14.530588150024414

Token 204: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2590465843677521
    2. '   ' → logprob: -1.5090465545654297
    3. ' def' → logprob: -5.00904655456543
    4. '
' → logprob: -8.50904655456543
    5. '    
' → logprob: -9.25904655456543
    6. ' ' → logprob: -9.75904655456543
    7. '        
' → logprob: -11.00904655456543
    8. '	def' → logprob: -11.25904655456543
    9. '  ' → logprob: -11.50904655456543
    10. ' 
' → logprob: -12.00904655456543

Token 205: ' print' (ID: 2123)
  Prédit: 'walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'walk' → logprob: -0.06198998540639877
    2. ' walk' → logprob: -2.8119900226593018
    3. '_walk' → logprob: -11.686989784240723
    4. ' ' → logprob: -11.936989784240723
    5. '  ' → logprob: -13.561989784240723
    6. '   ' → logprob: -13.686989784240723
    7. 'def' → logprob: -13.936989784240723
    8. '.walk' → logprob: -14.436989784240723
    9. 'search' → logprob: -14.936989784240723
    10. 'wrap' → logprob: -15.186989784240723

Token 206: '_nodes' (ID: 34593)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.48268505930900574
    2. '_' → logprob: -1.7326850891113281
    3. '_in' → logprob: -1.9826850891113281
    4. '_tree' → logprob: -3.357685089111328
    5. '_pre' → logprob: -3.607685089111328
    6. '_post' → logprob: -6.107685089111328
    7. '_orders' → logprob: -6.607685089111328
    8. '_list' → logprob: -7.107685089111328
    9. '_nodes' → logprob: -7.982685089111328
    10. '_tr' → logprob: -8.357685089111328

Token 207: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.008665982633829117
    2. '(' → logprob: -4.758666038513184
    3. ' (' → logprob: -10.008666038513184
    4. 'self' → logprob: -12.883666038513184
    5. '   ' → logprob: -13.008666038513184
    6. ' ' → logprob: -14.133666038513184
    7. '(
' → logprob: -14.758666038513184
    8. '(s' → logprob: -15.258666038513184
    9. '       ' → logprob: -16.008665084838867
    10. '(Self' → logprob: -16.008665084838867

Token 208: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008015058934688568
    2. '):' → logprob: -5.758015155792236
    3. 'self' → logprob: -5.883015155792236
    4. '(self' → logprob: -6.883015155792236
    5. '):
' → logprob: -7.633015155792236
    6. ',self' → logprob: -8.008014678955078
    7. ' ,' → logprob: -9.633014678955078
    8. '   ' → logprob: -10.008014678955078
    9. ')' → logprob: -10.133014678955078
    10. '       ' → logprob: -10.508014678955078

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008987627923488617
    2. ' for' → logprob: -5.0089874267578125
    3. 'for' → logprob: -6.2589874267578125
    4. 'print' → logprob: -8.258987426757812
    5. '   ' → logprob: -9.508987426757812
    6. ' print' → logprob: -11.258987426757812
    7. ' if' → logprob: -12.883987426757812
    8. 'if' → logprob: -13.383987426757812
    9. '      ' → logprob: -13.758987426757812
    10. '    ' → logprob: -14.008987426757812

Token 210: ' self' (ID: 1051)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4216676950454712
    2. 'for' → logprob: -1.7966676950454712
    3. ' for' → logprob: -2.1716675758361816
    4. ' print' → logprob: -2.7966675758361816
    5. '       ' → logprob: -5.796667575836182
    6. '   ' → logprob: -10.04666805267334
    7. 'if' → logprob: -10.29666805267334
    8. ' if' → logprob: -10.54666805267334
    9. ' ' → logprob: -10.67166805267334
    10. 'self' (adapté à ' self') → logprob: -11.29666805267334

Token 211: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.005174574442207813
    2. '.' → logprob: -5.38017463684082
    3. '.print' → logprob: -7.63017463684082
    4. ' .' → logprob: -10.38017463684082
    5. 'order' → logprob: -10.88017463684082
    6. '.output' → logprob: -11.63017463684082
    7. '._' → logprob: -12.88017463684082
    8. 'print' → logprob: -14.00517463684082
    9. '.user' → logprob: -14.00517463684082
    10. '.status' → logprob: -14.63017463684082

Token 212: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -14.875
    3. 'list' → logprob: -16.75
    4. '_lists' → logprob: -18.875
    5. ' _' → logprob: -19.25
    6. '_print' → logprob: -19.625
    7. 'List' → logprob: -19.875
    8. '\' → logprob: -20.25
    9. 'print' → logprob: -20.625
    10. '_l' → logprob: -21.375

Token 213: ' =' (ID: 314)
  Prédit: '.clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.01784037984907627
    2. '[:]' → logprob: -4.392840385437012
    3. '.append' → logprob: -6.267840385437012
    4. '.' → logprob: -7.142840385437012
    5. '.sort' → logprob: -7.267840385437012
    6. 'print' → logprob: -7.392840385437012
    7. ')' → logprob: -8.142840385437012
    8. '.print' → logprob: -8.642840385437012
    9. ' =' → logprob: -8.642840385437012
    10. '=' → logprob: -9.017840385437012

Token 214: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.702754474943504e-05
    2. ' []' → logprob: -10.25003719329834
    3. '[]
' → logprob: -13.62503719329834
    4. '[' → logprob: -14.87503719329834
    5. '[]

' → logprob: -17.250036239624023
    6. '[]}' → logprob: -18.000036239624023
    7. '[]"' → logprob: -19.125036239624023
    8. '[]>' → logprob: -19.500036239624023
    9. '[],' → logprob: -19.750036239624023
    10. ' ' → logprob: -20.125036239624023

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12366854399442673
    2. 'self' → logprob: -2.6236684322357178
    3. 'for' → logprob: -3.4986684322357178
    4. 'print' → logprob: -5.373668670654297
    5. ' for' → logprob: -5.623668670654297
    6. 'if' → logprob: -5.748668670654297
    7. ' self' → logprob: -7.123668670654297
    8. 'def' → logprob: -7.373668670654297
    9. ' if' → logprob: -8.123668670654297
    10. '   ' → logprob: -8.623668670654297

Token 216: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0026628158520907164
    2. 'if' → logprob: -6.002662658691406
    3. 'def' → logprob: -8.877662658691406
    4. ' self' → logprob: -10.627662658691406
    5. '       ' → logprob: -10.752662658691406
    6. ' if' → logprob: -14.127662658691406
    7. '   ' → logprob: -14.502662658691406
    8. 'print' → logprob: -15.002662658691406
    9. '        
' → logprob: -15.877662658691406
    10. '	self' → logprob: -16.252662658691406

Token 217: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.0638432428240776
    2. '.print' → logprob: -2.813843250274658
    3. '.' → logprob: -6.313843250274658
    4. 'walk' → logprob: -10.3138427734375
    5. 'print' → logprob: -11.8138427734375
    6. ' .' → logprob: -12.3138427734375
    7. '.root' → logprob: -12.5638427734375
    8. '._' → logprob: -13.0638427734375
    9. '.visit' → logprob: -13.0638427734375
    10. '.pre' → logprob: -13.1888427734375

Token 218: '_in' (ID: 2267)
  Prédit: '_pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -0.07916439324617386
    2. '_in' → logprob: -2.579164505004883
    3. 'pre' → logprob: -8.454164505004883
    4. 'in' → logprob: -10.079164505004883
    5. '_' → logprob: -10.954164505004883
    6. ' preorder' → logprob: -14.329164505004883
    7. 'Pre' → logprob: -14.454164505004883
    8. '_post' → logprob: -15.204164505004883
    9. '_order' → logprob: -15.329164505004883
    10. '_nodes' → logprob: -16.454164505004883

Token 219: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.8624639324116288e-06
    2. 'in' → logprob: -13.625001907348633
    3. 'node' → logprob: -15.125001907348633
    4. 'or' → logprob: -15.875001907348633
    5. 'o' → logprob: -16.750001907348633
    6. '
' → logprob: -17.000001907348633
    7. 'oder' → logprob: -17.125001907348633
    8. '```' → logprob: -17.125001907348633
    9. '_order' → logprob: -17.375001907348633
    10. 'print' → logprob: -17.875001907348633

Token 220: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014171270653605461
    2. '(' → logprob: -4.264171123504639
    3. ' (' → logprob: -12.389171600341797
    4. 'self' → logprob: -13.764171600341797
    5. '(root' → logprob: -14.014171600341797
    6. '(
' → logprob: -14.514171600341797
    7. '(this' → logprob: -14.764171600341797
    8. '(node' → logprob: -15.014171600341797
    9. '()' → logprob: -15.139171600341797
    10. '(

' → logprob: -16.014171600341797

Token 221: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0002286886883666739
    2. 'root' → logprob: -8.500228881835938
    3. '.' → logprob: -11.125228881835938
    4. ' .' → logprob: -11.750228881835938
    5. ' root' → logprob: -13.750228881835938
    6. 'self' → logprob: -13.875228881835938
    7. '.self' → logprob: -15.375228881835938
    8. ').' → logprob: -15.875228881835938
    9. '.
' → logprob: -16.500228881835938
    10. ',' → logprob: -17.125228881835938

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804768621921539
    2. ')
' → logprob: -3.2880477905273438
    3. '       ' → logprob: -12.413047790527344
    4. ' )' → logprob: -13.663047790527344
    5. ')
' → logprob: -14.788047790527344
    6. ')

' → logprob: -15.288047790527344
    7. ' )
' → logprob: -15.413047790527344
    8. '   ' → logprob: -16.163047790527344
    9. ')return' → logprob: -17.163047790527344
    10. '
' → logprob: -17.663047790527344

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001332263695076108
    2. 'print' → logprob: -6.7513322830200195
    3. 'for' → logprob: -9.25133228302002
    4. ' for' → logprob: -10.00133228302002
    5. '   ' → logprob: -11.50133228302002
    6. ' print' → logprob: -11.62633228302002
    7. '      ' → logprob: -14.75133228302002
    8. '	' → logprob: -15.12633228302002
    9. '        
' → logprob: -15.50133228302002
    10. '           ' → logprob: -15.62633228302002

Token 224: ' inorder' (ID: 139692)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005350090097635984
    2. 'for' → logprob: -5.255350112915039
    3. ' print' → logprob: -9.880350112915039
    4. 'return' → logprob: -10.005350112915039
    5. '       ' → logprob: -11.255350112915039
    6. ' for' → logprob: -11.880350112915039
    7. '   ' → logprob: -16.13035011291504
    8. '```' → logprob: -17.25535011291504
    9. '#print' → logprob: -18.38035011291504
    10. '        
' → logprob: -18.75535011291504

Token 225: '_str' (ID: 6182)
  Prédit: '_keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_keys' → logprob: -0.8855215907096863
    2. ' =' → logprob: -1.385521650314331
    3. '()' → logprob: -2.010521650314331
    4. '_list' → logprob: -2.510521650314331
    5. '=' → logprob: -3.010521650314331
    6. '_nodes' → logprob: -3.510521650314331
    7. '_' → logprob: -4.510521411895752
    8. '_order' → logprob: -4.510521411895752
    9. '_str' → logprob: -5.510521411895752
    10. 'Keys' → logprob: -6.385521411895752

Token 226: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20147453248500824
    2. '=' → logprob: -1.7014745473861694
    3. ' ' → logprob: -11.0764741897583
    4. '   ' → logprob: -11.4514741897583
    5. '()' → logprob: -12.0764741897583
    6. 's' → logprob: -12.4514741897583
    7. ',' → logprob: -12.7014741897583
    8. ')' → logprob: -12.8264741897583
    9. ' +=' → logprob: -13.2014741897583
    10. '"' → logprob: -13.2014741897583

Token 227: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12824329733848572
    2. ''' → logprob: -2.1282432079315186
    3. ' "' → logprob: -7.378243446350098
    4. ' '' → logprob: -8.003243446350098
    5. '",' → logprob: -8.378243446350098
    6. '""' → logprob: -10.003243446350098
    7. '',' → logprob: -10.128243446350098
    8. '','.' → logprob: -11.628243446350098
    9. '''' → logprob: -11.628243446350098
    10. '",".' → logprob: -12.378243446350098

Token 228: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.028030551970005035
    2. '"' → logprob: -4.6530303955078125
    3. ' '' → logprob: -4.6530303955078125
    4. '',' → logprob: -5.0280303955078125
    5. '','.' → logprob: -7.4030303955078125
    6. ' '.' → logprob: -7.7780303955078125
    7. ',' → logprob: -8.153030395507812
    8. ' ' → logprob: -8.653030395507812
    9. ' ',' → logprob: -8.778030395507812
    10. ''.' → logprob: -9.153030395507812

Token 229: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.173704271830502e-06
    2. ' join' → logprob: -13.75000286102295
    3. ''' → logprob: -13.87500286102295
    4. ''.' → logprob: -14.50000286102295
    5. '.join' → logprob: -15.62500286102295
    6. '.' → logprob: -15.75000286102295
    7. 'jo' → logprob: -16.000003814697266
    8. 'j' → logprob: -16.125003814697266
    9. '```' → logprob: -17.000003814697266
    10. ''s' → logprob: -18.375003814697266

Token 230: '(map' (ID: 16946)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.029918374493718147
    2. '(map' → logprob: -3.5299184322357178
    3. '([' → logprob: -8.779918670654297
    4. '(' → logprob: -11.404918670654297
    5. '[str' → logprob: -13.529918670654297
    6. 'map' → logprob: -14.404918670654297
    7. 'str' → logprob: -14.404918670654297
    8. '(list' → logprob: -14.904918670654297
    9. '(self' → logprob: -17.154918670654297
    10. ' (' → logprob: -17.654918670654297

Token 231: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -4.68022444692906e-05
    2. 'str' → logprob: -10.000046730041504
    3. ' str' → logprob: -14.625046730041504
    4. '(' → logprob: -15.000046730041504
    5. '=str' → logprob: -15.500046730041504
    6. '[str' → logprob: -16.12504768371582
    7. '(lambda' → logprob: -16.37504768371582
    8. '```' → logprob: -17.00004768371582
    9. '	str' → logprob: -18.12504768371582
    10. ')' → logprob: -18.25004768371582

Token 232: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02209394983947277
    2. ',' → logprob: -4.522093772888184
    3. ',self' → logprob: -4.522093772888184
    4. ' (' → logprob: -9.272093772888184
    5. '(' → logprob: -11.397093772888184
    6. 'self' → logprob: -12.022093772888184
    7. ' ,' → logprob: -12.897093772888184
    8. '   ' → logprob: -13.647093772888184
    9. ' self' → logprob: -13.647093772888184
    10. ',(' → logprob: -14.647093772888184

Token 233: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07890906929969788
    2. ' self' → logprob: -2.578909158706665
    3. '(self' → logprob: -11.328908920288086
    4. '[self' → logprob: -12.203908920288086
    5. '       ' → logprob: -14.078908920288086
    6. '	self' → logprob: -14.703908920288086
    7. '   ' → logprob: -15.328908920288086
    8. ' ' → logprob: -15.328908920288086
    9. ',self' → logprob: -15.703908920288086
    10. ')' → logprob: -16.328908920288086

Token 234: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -7.24310302757658e-05
    2. '.' → logprob: -9.875072479248047
    3. ' .' → logprob: -11.750072479248047
    4. '.self' → logprob: -12.000072479248047
    5. 'order' → logprob: -12.500072479248047
    6. '.user' → logprob: -13.000072479248047
    7. 'self' → logprob: -14.750072479248047
    8. '.orders' → logprob: -15.875072479248047
    9. ').' → logprob: -16.625072479248047
    10. '	order' → logprob: -16.750072479248047

Token 235: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.107425062713446e-06
    2. 'list' → logprob: -12.000006675720215
    3. 'List' → logprob: -14.625006675720215
    4. 'self' → logprob: -15.000006675720215
    5. '_' → logprob: -18.12500762939453
    6. ')' → logprob: -18.37500762939453
    7. '))' → logprob: -19.12500762939453
    8. '_lists' → logprob: -19.25000762939453
    9. '_lst' → logprob: -19.50000762939453
    10. '_List' → logprob: -19.62500762939453

Token 236: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0004976287018507719
    2. '))
' → logprob: -7.625497817993164
    3. '()))' → logprob: -12.250497817993164
    4. ' ))' → logprob: -13.375497817993164
    5. ')' → logprob: -13.500497817993164
    6. '       ' → logprob: -14.250497817993164
    7. ')))' → logprob: -14.500497817993164
    8. '()' → logprob: -15.250497817993164
    9. '))

' → logprob: -16.000497817993164
    10. '   ' → logprob: -16.125497817993164

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030396245419979095
    2. '
' → logprob: -6.503039836883545
    3. 'print' → logprob: -6.628039836883545
    4. '        
' → logprob: -9.628039360046387
    5. 'return' → logprob: -9.878039360046387
    6. '<|end|>' → logprob: -9.878039360046387
    7. ' print' → logprob: -11.628039360046387
    8. '   ' → logprob: -11.753039360046387
    9. '```' → logprob: -12.378039360046387
    10. ' return' → logprob: -12.878039360046387

Token 238: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0011888028820976615
    2. '       ' → logprob: -6.7511887550354
    3. ' print' → logprob: -11.251189231872559
    4. 'return' → logprob: -12.126189231872559
    5. '```' → logprob: -16.501188278198242
    6. '	print' → logprob: -17.251188278198242
    7. '   ' → logprob: -17.751188278198242
    8. '
' → logprob: -18.501188278198242
    9. '#print' → logprob: -18.626188278198242
    10. 'self' → logprob: -19.376188278198242

Token 239: '('' (ID: 706)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.0031986311078071594
    2. '(' → logprob: -5.753198623657227
    3. '('' → logprob: -11.128198623657227
    4. 'in' → logprob: -12.878198623657227
    5. '("("' → logprob: -13.378198623657227
    6. '(f' → logprob: -13.878198623657227
    7. '(inplace' → logprob: -14.253198623657227
    8. ' (' → logprob: -15.628198623657227
    9. '()' → logprob: -16.753198623657227
    10. '("' → logprob: -16.878198623657227

Token 240: ' {}'.' (ID: 62777)
  Prédit: 'In'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.10223233699798584
    2. 'in' → logprob: -3.3522324562072754
    3. ''' → logprob: -4.227232456207275
    4. 'Nodes' → logprob: -4.227232456207275
    5. '('' → logprob: -4.602232456207275
    6. 'BST' → logprob: -4.977232456207275
    7. ' In' → logprob: -5.477232456207275
    8. 'Binary' → logprob: -5.977232456207275
    9. '',' → logprob: -5.977232456207275
    10. 'IN' → logprob: -6.227232456207275

Token 241: 'format' (ID: 4078)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.28294333815574646
    2. 'format' → logprob: -1.4079433679580688
    3. 'strip' → logprob: -7.157943248748779
    4. 'join' → logprob: -7.282943248748779
    5. ')' → logprob: -9.407943725585938
    6. 'order' → logprob: -9.782943725585938
    7. '(in' → logprob: -10.282943725585938
    8. '.format' → logprob: -10.282943725585938
    9. '(format' → logprob: -10.407943725585938
    10. 'str' → logprob: -11.532943725585938

Token 242: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.00017278951418120414
    2. 'in' → logprob: -9.50017261505127
    3. '(' → logprob: -9.87517261505127
    4. ' (' → logprob: -10.00017261505127
    5. '(inplace' → logprob: -14.50017261505127
    6. ')' → logprob: -15.75017261505127
    7. '(i' → logprob: -16.250173568725586
    8. ',in' → logprob: -16.625173568725586
    9. ' inorder' → logprob: -16.875173568725586
    10. '('' → logprob: -17.000173568725586

Token 243: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.004013576544821262
    2. 'oder' → logprob: -6.504013538360596
    3. 'ore' → logprob: -6.879013538360596
    4. 'o' → logprob: -7.504013538360596
    5. 'ode' → logprob: -7.629013538360596
    6. 'orer' → logprob: -9.129014015197754
    7. 'or' → logprob: -9.879014015197754
    8. '`' → logprob: -10.504014015197754
    9. '   ' → logprob: -10.629014015197754
    10. 'r' → logprob: -10.754014015197754

Token 244: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.02114911749958992
    2. '))' → logprob: -3.896149158477783
    3. '_list' → logprob: -8.396148681640625
    4. ')' → logprob: -9.146148681640625
    5. '   ' → logprob: -9.521148681640625
    6. 'str' → logprob: -9.771148681640625
    7. ' ))' → logprob: -9.771148681640625
    8. '_' → logprob: -10.646148681640625
    9. '()))' → logprob: -10.896148681640625
    10. ' ' → logprob: -11.396148681640625

Token 245: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2519410252571106
    2. ')' → logprob: -1.5019409656524658
    3. '       ' → logprob: -12.626940727233887
    4. ' ))' → logprob: -12.626940727233887
    5. ' )' → logprob: -13.126940727233887
    6. '))
' → logprob: -13.751940727233887
    7. '   ' → logprob: -13.876940727233887
    8. ')))' → logprob: -14.001940727233887
    9. ''))' → logprob: -15.751940727233887
    10. '),' → logprob: -16.001941680908203

Token 246: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29283419251441956
    2. '<|end|>' → logprob: -1.4178341627120972
    3. '\n' → logprob: -5.542834281921387
    4. '   ' → logprob: -6.042834281921387
    5. '    
' → logprob: -6.667834281921387
    6. ' 
' → logprob: -6.917834281921387
    7. ')' → logprob: -7.042834281921387
    8. 'newline' → logprob: -7.417834281921387
    9. '<|end|>' → logprob: -7.542834281921387
    10. '  
' → logprob: -8.167834281921387

Token 247: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.1769973188638687
    2. '.walk' → logprob: -1.9269973039627075
    3. '.' → logprob: -4.301997184753418
    4. '.print' → logprob: -5.926997184753418
    5. ' .' → logprob: -8.426997184753418
    6. '.w' → logprob: -9.801997184753418
    7. 'order' → logprob: -10.301997184753418
    8. '.visit' → logprob: -10.551997184753418
    9. 'walk' → logprob: -11.426997184753418
    10. '.write' → logprob: -12.051997184753418

Token 249: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.1008713702030946e-06
    2. 'list' → logprob: -13.375001907348633
    3. 'List' → logprob: -15.625001907348633
    4. '_str' → logprob: -16.250001907348633
    5. '_' → logprob: -16.625001907348633
    6. '_lists' → logprob: -16.625001907348633
    7. '\' → logprob: -16.875001907348633
    8. '_order' → logprob: -17.625001907348633
    9. ' _' → logprob: -18.500001907348633
    10. '_lst' → logprob: -18.750001907348633

Token 250: ' =' (ID: 314)
  Prédit: '.clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.20719526708126068
    2. ' =' → logprob: -2.332195281982422
    3. '=' → logprob: -2.457195281982422
    4. '=[]' → logprob: -5.832195281982422
    5. '<|end|>' → logprob: -6.832195281982422
    6. ' ' → logprob: -9.207195281982422
    7. '[:]' → logprob: -9.457195281982422
    8. '.' → logprob: -9.832195281982422
    9. 'clear' → logprob: -9.957195281982422
    10. '.append' → logprob: -10.332195281982422

Token 251: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00016897499153856188
    2. ' []' → logprob: -8.750168800354004
    3. '[]
' → logprob: -11.500168800354004
    4. '[]}' → logprob: -15.875168800354004
    5. 'None' → logprob: -16.25016975402832
    6. '[' → logprob: -16.75016975402832
    7. '[]

' → logprob: -17.12516975402832
    8. '[]>' → logprob: -17.87516975402832
    9. ' ' → logprob: -18.62516975402832
    10. '[:]' → logprob: -18.75016975402832

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021001815795898438
    2. 'self' → logprob: -3.8960018157958984
    3. '   ' → logprob: -8.021001815795898
    4. ' self' → logprob: -9.521001815795898
    5. '	self' → logprob: -10.646001815795898
    6. '	' → logprob: -11.521001815795898
    7. 'def' → logprob: -11.896001815795898
    8. '<|end|>' → logprob: -12.646001815795898
    9. ' ' → logprob: -12.896001815795898
    10. '           ' → logprob: -13.521001815795898

Token 253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00017386233957950026
    2. '       ' → logprob: -8.875173568725586
    3. 'def' → logprob: -11.000173568725586
    4. ' self' → logprob: -11.125173568725586
    5. '   ' → logprob: -13.750173568725586
    6. '```' → logprob: -14.375173568725586
    7. '	self' → logprob: -15.250173568725586
    8. '
' → logprob: -15.750173568725586
    9. '#' → logprob: -15.750173568725586
    10. '        
' → logprob: -16.000173568725586

Token 254: '.walk' (ID: 103978)
  Prédit: '.walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.walk' → logprob: -0.0014239257434383035
    2. '.' → logprob: -6.7514238357543945
    3. '.print' → logprob: -8.376423835754395
    4. ' .' → logprob: -10.876423835754395
    5. 'walk' → logprob: -13.251423835754395
    6. '.w' → logprob: -13.626423835754395
    7. '.write' → logprob: -14.376423835754395
    8. '.visit' → logprob: -15.501423835754395
    9. '​.' → logprob: -15.876423835754395
    10. '..' → logprob: -16.25142478942871

Token 255: '_pre' (ID: 18599)
  Prédit: '_pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pre' → logprob: -6.980854959692806e-05
    2. '_' → logprob: -10.125069618225098
    3. 'pre' → logprob: -10.500069618225098
    4. '_post' → logprob: -13.250069618225098
    5. '_in' → logprob: -16.125070571899414
    6. '_PRE' → logprob: -16.250070571899414
    7. '_p' → logprob: -17.000070571899414
    8. ' preorder' → logprob: -17.750070571899414
    9. '_pres' → logprob: -18.000070571899414
    10. 'Pre' → logprob: -18.000070571899414

Token 256: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: 0.0
    2. '_order' → logprob: -17.125
    3. 'oder' → logprob: -19.25
    4. '
' → logprob: -19.75
    5. '(order' → logprob: -20.125
    6. '```' → logprob: -20.25
    7. 'root' → logprob: -20.375
    8. 'or' → logprob: -20.5
    9. 'pre' → logprob: -20.625
    10. 'ordre' → logprob: -20.625

Token 257: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.949026571121067e-05
    2. '(' → logprob: -9.250099182128906
    3. 'self' → logprob: -12.750099182128906
    4. ' (' → logprob: -15.625099182128906
    5. '(node' → logprob: -16.250099182128906
    6. '(root' → logprob: -16.375099182128906
    7. '(this' → logprob: -17.000099182128906
    8. '(
' → logprob: -17.125099182128906
    9. '(Self' → logprob: -18.375099182128906
    10. '<|end|>' → logprob: -18.375099182128906

Token 258: '.root' (ID: 25375)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.041823022067546844
    2. '(self' → logprob: -3.291822910308838
    3. ' self' → logprob: -5.791822910308838
    4. 'root' → logprob: -7.291822910308838
    5. '(' → logprob: -10.791823387145996
    6. ')' → logprob: -11.541823387145996
    7. ',self' → logprob: -12.916823387145996
    8. '(root' → logprob: -13.166823387145996
    9. '(
' → logprob: -13.541823387145996
    10. ' root' → logprob: -14.166823387145996

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010008628305513412
    2. ')
' → logprob: -9.375100135803223
    3. '       ' → logprob: -12.000100135803223
    4. ' )' → logprob: -12.750100135803223
    5. '(node' → logprob: -13.000100135803223
    6. '<|end|>' → logprob: -13.875100135803223
    7. '   ' → logprob: -14.750100135803223
    8. ')n' → logprob: -14.875100135803223
    9. ')return' → logprob: -15.125100135803223
    10. ')view' → logprob: -15.125100135803223

Token 260: '       ' (ID: 309)
  Prédit: ' preorder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preorder' → logprob: -0.5865780115127563
    2. 'pre' → logprob: -0.8365780115127563
    3. '       ' → logprob: -4.711577892303467
    4. '
' → logprob: -7.336577892303467
    5. '        
' → logprob: -7.836577892303467
    6. ' pre' → logprob: -8.336578369140625
    7. 'print' → logprob: -9.086578369140625
    8. '(pre' → logprob: -9.586578369140625
    9. '	pre' → logprob: -10.711578369140625
    10. '  
' → logprob: -10.836578369140625

Token 261: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -9.925185440806672e-05
    2. ' preorder' → logprob: -10.000099182128906
    3. 'prefix' → logprob: -10.625099182128906
    4. 'post' → logprob: -11.375099182128906
    5. 'print' → logprob: -12.250099182128906
    6. 'self' → logprob: -12.750099182128906
    7. 'per' → logprob: -12.875099182128906
    8. 'pr' → logprob: -14.000099182128906
    9. 'node' → logprob: -14.000099182128906
    10. 'order' → logprob: -14.125099182128906

Token 262: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.463036435074173e-05
    2. 'str' → logprob: -11.125024795532227
    3. '_' → logprob: -12.375024795532227
    4. '_list' → logprob: -12.500024795532227
    5. ''_' → logprob: -14.000024795532227
    6. '('_' → logprob: -15.250024795532227
    7. '_string' → logprob: -15.500024795532227
    8. 'Str' → logprob: -16.375024795532227
    9. '_s' → logprob: -17.000024795532227
    10. ''' → logprob: -17.125024795532227

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602274775505066
    2. '=' → logprob: -1.9102275371551514
    3. ' ='' → logprob: -12.78522777557373
    4. '='' → logprob: -15.53522777557373
    5. ' ' → logprob: -16.035226821899414
    6. ')' → logprob: -16.160226821899414
    7. ' =
' → logprob: -17.285226821899414
    8. ''' → logprob: -17.660226821899414
    9. ' +=' → logprob: -18.160226821899414
    10. ' ="' → logprob: -18.160226821899414

Token 264: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008622847497463226
    2. ' '' → logprob: -4.758622646331787
    3. '"' → logprob: -12.133623123168945
    4. ''s' → logprob: -13.508623123168945
    5. ' ' → logprob: -13.883623123168945
    6. ' ' → logprob: -15.758623123168945
    7. '('' → logprob: -16.133623123168945
    8. '`' → logprob: -16.383623123168945
    9. '  ' → logprob: -16.883623123168945
    10. '
' → logprob: -17.133623123168945

Token 265: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006305903079919517
    2. ' '' → logprob: -7.3756303787231445
    3. ''s' → logprob: -12.500630378723145
    4. '"' → logprob: -16.25063133239746
    5. '''.' → logprob: -16.62563133239746
    6. ' ' → logprob: -16.87563133239746
    7. 'self' → logprob: -17.50063133239746
    8. ' '{}' → logprob: -17.75063133239746
    9. ''user' → logprob: -17.75063133239746
    10. '','.' → logprob: -18.12563133239746

Token 266: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0004338877333793789
    2. ''.' → logprob: -8.125433921813965
    3. ''' → logprob: -9.000433921813965
    4. '.join' → logprob: -11.625433921813965
    5. 'format' → logprob: -13.000433921813965
    6. ' join' → logprob: -13.375433921813965
    7. '''.' → logprob: -14.000433921813965
    8. '(join' → logprob: -14.500433921813965
    9. ''s' → logprob: -16.00043296813965
    10. '('' → logprob: -16.50043296813965

Token 267: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.250007629394531
    3. 'map' → logprob: -13.000007629394531
    4. '(str' → logprob: -14.500007629394531
    5. ' (' → logprob: -17.50000762939453
    6. '(list' → logprob: -18.62500762939453
    7. ' map' → logprob: -18.87500762939453
    8. '(m' → logprob: -19.12500762939453
    9. ',map' → logprob: -19.50000762939453
    10. '(
' → logprob: -20.50000762939453

Token 268: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00021748353901784867
    2. 'str' → logprob: -9.12521743774414
    3. '(' → logprob: -9.25021743774414
    4. ' (' → logprob: -12.25021743774414
    5. '=str' → logprob: -12.62521743774414
    6. '[str' → logprob: -13.00021743774414
    7. ' str' → logprob: -14.37521743774414
    8. ')' → logprob: -14.62521743774414
    9. ',str' → logprob: -14.75021743774414
    10. '	str' → logprob: -15.25021743774414

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031973462319001555
    2. ',self' → logprob: -8.250319480895996
    3. '(self' → logprob: -10.000319480895996
    4. ' ,' → logprob: -11.750319480895996
    5. 'self' → logprob: -12.250319480895996
    6. '(' → logprob: -15.250319480895996
    7. ' self' → logprob: -16.250320434570312
    8. ',
' → logprob: -17.125320434570312
    9. '<|end|>' → logprob: -17.875320434570312
    10. ' (' → logprob: -17.875320434570312

Token 270: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018195712938904762
    2. ' self' → logprob: -4.018195629119873
    3. '(self' → logprob: -10.018196105957031
    4. '[self' → logprob: -13.768196105957031
    5. ')' → logprob: -16.26819610595703
    6. '	self' → logprob: -16.89319610595703
    7. '[' → logprob: -18.51819610595703
    8. ' ' → logprob: -18.64319610595703
    9. '
' → logprob: -19.26819610595703
    10. '=self' → logprob: -19.39319610595703

Token 271: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.013929012231528759
    2. 'order' → logprob: -4.7639288902282715
    3. 'self' → logprob: -5.2639288902282715
    4. '.user' → logprob: -9.26392936706543
    5. '.self' → logprob: -11.38892936706543
    6. '_order' → logprob: -11.51392936706543
    7. '.' → logprob: -12.76392936706543
    8. ' order' → logprob: -13.26392936706543
    9. '$order' → logprob: -13.51392936706543
    10. ' self' → logprob: -13.63892936706543

Token 272: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.652451464906335e-05
    2. 'list' → logprob: -11.125016212463379
    3. 'self' → logprob: -13.750016212463379
    4. 'order' → logprob: -15.000016212463379
    5. 'List' → logprob: -16.250017166137695
    6. ')' → logprob: -16.875017166137695
    7. '_pre' → logprob: -17.000017166137695
    8. 'pre' → logprob: -17.000017166137695
    9. '_' → logprob: -17.500017166137695
    10. '       ' → logprob: -17.875017166137695

Token 273: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.7707219123840332
    2. ')' → logprob: -1.2707219123840332
    3. '))
' → logprob: -1.5207219123840332
    4. ')
' → logprob: -3.270721912384033
    5. '       ' → logprob: -8.895721435546875
    6. '))

' → logprob: -12.520721435546875
    7. ' )' → logprob: -12.520721435546875
    8. ' ))
' → logprob: -12.645721435546875
    9. ' ))' → logprob: -12.895721435546875
    10. '))
' → logprob: -13.145721435546875

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2578306496143341
    2. 'print' → logprob: -1.5078306198120117
    3. '
' → logprob: -5.507830619812012
    4. ')' → logprob: -7.507830619812012
    5. ' print' → logprob: -7.757830619812012
    6. '        
' → logprob: -7.882830619812012
    7. '\n' → logprob: -9.007830619812012
    8. '   ' → logprob: -9.507830619812012
    9. ')
' → logprob: -10.007830619812012
    10. '        ' → logprob: -10.382830619812012

Token 275: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1967390924692154
    2. ' print' → logprob: -2.1967391967773438
    3. '       ' → logprob: -2.6967391967773438
    4. '
' → logprob: -13.696739196777344
    5. '	print' → logprob: -13.821739196777344
    6. '        ' → logprob: -14.321739196777344
    7. '      ' → logprob: -14.446739196777344
    8. '   ' → logprob: -14.571739196777344
    9. ' ' → logprob: -14.821739196777344
    10. ' ' → logprob: -15.071739196777344

Token 276: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011155696120113134
    2. '(f' → logprob: -7.376115798950195
    3. '(' → logprob: -7.626115798950195
    4. '("' → logprob: -14.751115798950195
    5. '(('' → logprob: -14.876115798950195
    6. '('(' → logprob: -15.251115798950195
    7. ' ('' → logprob: -16.126115798950195
    8. '('{}' → logprob: -16.251115798950195
    9. '(
' → logprob: -16.876115798950195
    10. 'f' → logprob: -17.001115798950195

Token 277: ' {}'.' (ID: 62777)
  Prédit: '{}'.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}'.' → logprob: -0.5762060284614563
    2. ' {}'.' → logprob: -0.8262060284614563
    3. '({' → logprob: -9.07620620727539
    4. '{}' → logprob: -9.07620620727539
    5. ' {}' → logprob: -11.32620620727539
    6. '{' → logprob: -12.20120620727539
    7. ' {}".' → logprob: -12.32620620727539
    8. ''' → logprob: -12.82620620727539
    9. '{}".' → logprob: -12.82620620727539
    10. '')' → logprob: -13.07620620727539

Token 278: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -3.273621405242011e-05
    2. '(format' → logprob: -10.625032424926758
    3. ' format' → logprob: -12.250032424926758
    4. '.format' → logprob: -13.250032424926758
    5. 'ormat' → logprob: -13.375032424926758
    6. 'pre' → logprob: -15.875032424926758
    7. 'form' → logprob: -17.375032424926758
    8. '	format' → logprob: -17.625032424926758
    9. '_format' → logprob: -18.375032424926758
    10. '('' → logprob: -18.875032424926758

Token 279: '(pre' (ID: 48018)
  Prédit: '(pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pre' → logprob: -1.0445127372804563e-05
    2. 'pre' → logprob: -11.50001049041748
    3. ' (' → logprob: -15.75001049041748
    4. '(' → logprob: -16.625009536743164
    5. ' preorder' → logprob: -18.875009536743164
    6. '(
' → logprob: -20.000009536743164
    7. '/pre' → logprob: -20.375009536743164
    8. '	pre' → logprob: -20.875009536743164
    9. ')' → logprob: -21.125009536743164
    10. '_pre' → logprob: -21.125009536743164

Token 280: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -5.512236498361744e-07
    2. 'o' → logprob: -16.375
    3. '_order' → logprob: -16.5
    4. 'pre' → logprob: -16.5
    5. 'oder' → logprob: -17.0
    6. 'or' → logprob: -18.125
    7. '
' → logprob: -18.25
    8. 'ord' → logprob: -18.375
    9. 'ore' → logprob: -18.75
    10. 'user' → logprob: -19.125

Token 281: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.3199920178740285e-05
    2. 'str' → logprob: -10.750022888183594
    3. ')' → logprob: -14.000022888183594
    4. '_' → logprob: -14.500022888183594
    5. 's' → logprob: -16.250022888183594
    6. '_s' → logprob: -16.750022888183594
    7. '))' → logprob: -17.500022888183594
    8. ' _' → logprob: -17.750022888183594
    9. '_pre' → logprob: -17.750022888183594
    10. '_list' → logprob: -17.875022888183594

Token 282: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10022921115159988
    2. ')' → logprob: -2.350229263305664
    3. '))
' → logprob: -10.975229263305664
    4. ')
' → logprob: -12.725229263305664
    5. '       ' → logprob: -13.600229263305664
    6. '   ' → logprob: -14.350229263305664
    7. ')))' → logprob: -15.600229263305664
    8. ' ))' → logprob: -15.600229263305664
    9. ' )' → logprob: -16.350229263305664
    10. ''))' → logprob: -17.225229263305664

Token 283: '        
' (ID: 3564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7133552432060242
    2. '<|end|>' → logprob: -0.7133552432060242
    3. 'class' → logprob: -4.58835506439209
    4. '```' → logprob: -4.96335506439209
    5. '\n' → logprob: -7.33835506439209
    6. '#' → logprob: -7.33835506439209
    7. '<|end|>' → logprob: -7.71335506439209
    8. ')' → logprob: -7.96335506439209
    9. ' class' → logprob: -8.21335506439209
    10. '   ' → logprob: -8.96335506439209

Token 284: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.01588103361427784
    2. '<|end|>' → logprob: -5.015881061553955
    3. ' class' → logprob: -5.265881061553955
    4. '
' → logprob: -6.265881061553955
    5. '#' → logprob: -7.015881061553955
    6. 'c' → logprob: -7.390881061553955
    7. ' ' → logprob: -8.890880584716797
    8. '   ' → logprob: -9.140880584716797
    9. '```' → logprob: -9.265880584716797
    10. '.' → logprob: -9.890880584716797

Token 285: ' Node' (ID: 10882)
  Prédit: ' Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.0018228584667667747
    2. 'Node' → logprob: -6.8768229484558105
    3. ' node' → logprob: -8.001822471618652
    4. ' Tree' → logprob: -8.001822471618652
    5. ' Binary' → logprob: -9.501822471618652
    6. ' BST' → logprob: -11.126822471618652
    7. '_Node' → logprob: -11.501822471618652
    8. ' Nodo' → logprob: -11.626822471618652
    9. '.Node' → logprob: -12.626822471618652
    10. 'Binary' → logprob: -13.626822471618652

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016873658751137555
    2. ':
' → logprob: -9.125168800354004
    3. '(object' → logprob: -10.875168800354004
    4. '<|end|>' → logprob: -11.250168800354004
    5. '():' → logprob: -11.375168800354004
    6. ' :' → logprob: -11.875168800354004
    7. '(' → logprob: -12.250168800354004
    8. '):' → logprob: -13.375168800354004
    9. ':

' → logprob: -14.250168800354004
    10. '：' → logprob: -14.375168800354004

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006371428607963026
    2. 'def' → logprob: -8.00063705444336
    3. ' def' → logprob: -8.25063705444336
    4. 'class' → logprob: -10.37563705444336
    5. '    ' → logprob: -13.12563705444336
    6. '```' → logprob: -13.25063705444336
    7. '  ' → logprob: -13.62563705444336
    8. '<|end|>' → logprob: -13.75063705444336
    9. ' class' → logprob: -14.50063705444336
    10. '    
' → logprob: -14.62563705444336

Token 288: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04936230927705765
    2. ' def' → logprob: -3.0493624210357666
    3. 'class' → logprob: -7.1743621826171875
    4. '   ' → logprob: -12.174362182617188
    5. '__' → logprob: -12.799362182617188
    6. ' class' → logprob: -14.799362182617188
    7. ' __' → logprob: -15.674362182617188
    8. ' ' → logprob: -16.174362182617188
    9. '	def' → logprob: -16.299362182617188
    10. '```' → logprob: -17.174362182617188

Token 289: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3133566081523895
    2. '__' → logprob: -1.313356637954712
    3. 'init' → logprob: -9.688356399536133
    4. '_init' → logprob: -11.188356399536133
    5. 'class' → logprob: -11.438356399536133
    6. '.__' → logprob: -12.563356399536133
    7. ' init' → logprob: -13.813356399536133
    8. '_' → logprob: -13.813356399536133
    9. 'def' → logprob: -14.188356399536133
    10. '___' → logprob: -14.313356399536133

Token 290: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.25
    3. 'def' → logprob: -18.25
    4. '   ' → logprob: -20.625
    5. '_init' → logprob: -21.0
    6. '	init' → logprob: -21.25
    7. ' ' → logprob: -21.375
    8. 'int' → logprob: -21.625
    9. 'ini' → logprob: -21.75
    10. '  ' → logprob: -22.0

Token 291: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0012441592989489436
    2. '(self' → logprob: -6.876244068145752
    3. '__' → logprob: -8.50124454498291
    4. '__(
' → logprob: -12.50124454498291
    5. '(' → logprob: -12.75124454498291
    6. '__((' → logprob: -14.12624454498291
    7. '_(' → logprob: -14.87624454498291
    8. ' (' → logprob: -14.87624454498291
    9. '__('' → logprob: -16.501243591308594
    10. 'self' → logprob: -16.751243591308594

Token 292: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.558399319241289e-05
    2. ' self' → logprob: -10.625025749206543
    3. '(self' → logprob: -13.875025749206543
    4. '0' → logprob: -17.000024795532227
    5. '   ' → logprob: -17.125024795532227
    6. '
' → logprob: -17.375024795532227
    7. '<|end|>' → logprob: -17.875024795532227
    8. ',self' → logprob: -18.375024795532227
    9. '	self' → logprob: -18.500024795532227
    10. '1' → logprob: -18.625024795532227

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15619896352291107
    2. '(self' → logprob: -2.4061989784240723
    3. 'self' → logprob: -3.4061989784240723
    4. ' (' → logprob: -4.406198978424072
    5. ' ,' → logprob: -5.156198978424072
    6. ' self' → logprob: -6.281198978424072
    7. ',self' → logprob: -7.531198978424072
    8. '<|end|>' → logprob: -7.531198978424072
    9. '(' → logprob: -8.656198501586914
    10. '__(' → logprob: -10.156198501586914

Token 294: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.4741414487361908
    2. 'key' → logprob: -0.9741414785385132
    3. 'self' → logprob: -9.724141120910645
    4. ' self' → logprob: -12.599141120910645
    5. '	key' → logprob: -14.724141120910645
    6. ' ' → logprob: -15.099141120910645
    7. '   ' → logprob: -15.474141120910645
    8. 'Key' → logprob: -16.47414207458496
    9. '  ' → logprob: -16.59914207458496
    10. '_key' → logprob: -17.09914207458496

Token 295: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009852652437984943
    2. ',' → logprob: -5.259852886199951
    3. '):
' → logprob: -5.384852886199951
    4. ' ):' → logprob: -11.509852409362793
    5. ')' → logprob: -12.259852409362793
    6. '   ' → logprob: -13.384852409362793
    7. ' ,' → logprob: -13.634852409362793
    8. '<|end|>' → logprob: -13.759852409362793
    9. '=None' → logprob: -14.009852409362793
    10. '):
' → logprob: -14.259852409362793

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044056313345208764
    2. 'self' → logprob: -7.75044059753418
    3. ' self' → logprob: -12.25044059753418
    4. '   ' → logprob: -12.62544059753418
    5. '	' → logprob: -14.50044059753418
    6. '	self' → logprob: -14.62544059753418
    7. '	   ' → logprob: -15.62544059753418
    8. '      ' → logprob: -15.87544059753418
    9. '```' → logprob: -16.37544059753418
    10. '     ' → logprob: -16.50044059753418

Token 297: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.127228781580925
    2. ' self' → logprob: -2.1272287368774414
    3. '       ' → logprob: -8.127228736877441
    4. '   ' → logprob: -12.252228736877441
    5. 'key' → logprob: -15.627228736877441
    6. '	self' → logprob: -15.752228736877441
    7. ' ' → logprob: -16.627229690551758
    8. ' key' → logprob: -17.127229690551758
    9. '    ' → logprob: -18.377229690551758
    10. '        ' → logprob: -18.502229690551758

Token 298: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.03510493412613869
    2. '.' → logprob: -3.410104990005493
    3. ' key' → logprob: -6.785104751586914
    4. ' .' → logprob: -8.160104751586914
    5. 'key' → logprob: -10.535104751586914
    6. ' =' → logprob: -11.660104751586914
    7. ' ' → logprob: -12.910104751586914
    8. '	key' → logprob: -13.410104751586914
    9. '.Key' → logprob: -14.285104751586914
    10. '_key' → logprob: -15.035104751586914

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.386979877948761
    2. '=' → logprob: -1.1369798183441162
    3. ' ' → logprob: -9.386980056762695
    4. '<|end|>' → logprob: -11.261980056762695
    5. ',' → logprob: -11.636980056762695
    6. '=None' → logprob: -13.761980056762695
    7. ' =
' → logprob: -14.136980056762695
    8. ')' → logprob: -14.511980056762695
    9. ' ,' → logprob: -14.761980056762695
    10. '  ' → logprob: -16.386980056762695

Token 300: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.03804149478673935
    2. 'key' → logprob: -3.288041591644287
    3. ' ' → logprob: -19.288042068481445
    4. '	key' → logprob: -20.163042068481445
    5. '$key' → logprob: -22.663042068481445
    6. '(key' → logprob: -23.038042068481445
    7. '_key' → logprob: -23.038042068481445
    8. 'Key' → logprob: -23.663042068481445
    9. ' ' → logprob: -23.788042068481445
    10. ' ключ' → logprob: -24.413042068481445

Token 301: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005407234653830528
    2. 'self' → logprob: -5.255407333374023
    3. ' self' → logprob: -8.755407333374023
    4. '
' → logprob: -11.880407333374023
    5. '   ' → logprob: -12.505407333374023
    6. '        
' → logprob: -13.130407333374023
    7. '	self' → logprob: -14.005407333374023
    8. ',' → logprob: -14.630407333374023
    9. ' ' → logprob: -14.880407333374023
    10. '	' → logprob: -15.130407333374023

Token 302: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12389658391475677
    2. 'self' → logprob: -2.623896598815918
    3. ' self' → logprob: -3.123896598815918
    4. '   ' → logprob: -11.623896598815918
    5. '	self' → logprob: -11.748896598815918
    6. ' ' → logprob: -12.873896598815918
    7. '        
' → logprob: -13.623896598815918
    8. '
' → logprob: -14.373896598815918
    9. '	' → logprob: -14.998896598815918
    10. 'parent' → logprob: -15.123896598815918

Token 303: ' self' (ID: 1051)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.14700224995613098
    2. ' None' → logprob: -2.3970022201538086
    3. 'self' (adapté à ' self') → logprob: -3.1470022201538086
    4. ' self' → logprob: -6.022002220153809
    5. 'left' → logprob: -8.397002220153809
    6. ' left' → logprob: -10.147002220153809
    7. 'parent' → logprob: -10.772002220153809
    8. '   ' → logprob: -10.897002220153809
    9. ' parent' → logprob: -12.772002220153809
    10. '       ' → logprob: -13.272002220153809

Token 304: '.parent' (ID: 17454)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.010668589733541012
    2. '.' → logprob: -4.760668754577637
    3. '.parent' → logprob: -6.260668754577637
    4. ' .' → logprob: -9.510668754577637
    5. 'left' → logprob: -9.885668754577637
    6. '.right' → logprob: -11.385668754577637
    7. ' left' → logprob: -12.510668754577637
    8. 'parent' → logprob: -13.385668754577637
    9. '	left' → logprob: -16.13566780090332
    10. '.Left' → logprob: -16.76066780090332

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869211673736572
    2. '=' → logprob: -1.1369211673736572
    3. '=None' → logprob: -10.011920928955078
    4. '<|end|>' → logprob: -12.261920928955078
    5. 'None' → logprob: -15.511920928955078
    6. ',' → logprob: -15.761920928955078
    7. ' ' → logprob: -15.886920928955078
    8. ' None' → logprob: -16.386920928955078
    9. '(None' → logprob: -17.011920928955078
    10. ' =
' → logprob: -17.636920928955078

Token 306: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01814994215965271
    2. ' None' → logprob: -4.0181498527526855
    3. '_None' → logprob: -20.143150329589844
    4. '(None' → logprob: -20.893150329589844
    5. '   ' → logprob: -21.268150329589844
    6. '=None' → logprob: -22.393150329589844
    7. 'none' → logprob: -22.768150329589844
    8. ',None' → logprob: -23.393150329589844
    9. '.None' → logprob: -23.643150329589844
    10. 'self' → logprob: -24.143150329589844

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016165003180503845
    2. 'self' → logprob: -6.501616477966309
    3. '	' → logprob: -10.876616477966309
    4. ' self' → logprob: -10.876616477966309
    5. '   ' → logprob: -11.001616477966309
    6. '        
' → logprob: -11.126616477966309
    7. ' ' → logprob: -11.501616477966309
    8. '
' → logprob: -11.751616477966309
    9. ',' → logprob: -12.001616477966309
    10. '	self' → logprob: -12.251616477966309

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007020717952400446
    2. 'self' → logprob: -5.132020950317383
    3. ' self' → logprob: -7.007020950317383
    4. '   ' → logprob: -9.257020950317383
    5. ' ' → logprob: -10.257020950317383
    6. '	self' → logprob: -11.007020950317383
    7. '        
' → logprob: -11.882020950317383
    8. '<|end|>' → logprob: -12.132020950317383
    9. '  ' → logprob: -12.382020950317383
    10. '	' → logprob: -12.382020950317383

Token 309: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022715967148542404
    2. '       ' → logprob: -4.272716045379639
    3. ' self' → logprob: -4.772716045379639
    4. '   ' → logprob: -10.02271556854248
    5. ' ' → logprob: -12.14771556854248
    6. '	self' → logprob: -12.64771556854248
    7. 'left' → logprob: -12.64771556854248
    8. '  ' → logprob: -14.02271556854248
    9. '        
' → logprob: -14.14771556854248
    10. '    ' → logprob: -15.77271556854248

Token 310: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00256009167060256
    2. 'left' → logprob: -6.002560138702393
    3. ' left' → logprob: -10.127559661865234
    4. '.' → logprob: -10.377559661865234
    5. ' .' → logprob: -12.002559661865234
    6. '.right' → logprob: -12.002559661865234
    7. '	left' → logprob: -14.252559661865234
    8. '   ' → logprob: -16.002559661865234
    9. ',left' → logprob: -16.877559661865234
    10. '_left' → logprob: -17.002559661865234

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.576019287109375
    2. '=' → logprob: -0.826019287109375
    3. '=None' → logprob: -9.451019287109375
    4. 'None' → logprob: -14.076019287109375
    5. ' None' → logprob: -15.701019287109375
    6. '<|end|>' → logprob: -15.951019287109375
    7. ' ' → logprob: -16.326019287109375
    8. '(None' → logprob: -17.201019287109375
    9. '   ' → logprob: -17.701019287109375
    10. '=null' → logprob: -18.451019287109375

Token 312: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.31326186656951904
    2. ' None' → logprob: -1.313261866569519
    3. '_None' → logprob: -16.563261032104492
    4. '(None' → logprob: -16.938261032104492
    5. '=None' → logprob: -17.813261032104492
    6. '   ' → logprob: -18.563261032104492
    7. ',None' → logprob: -18.563261032104492
    8. ' ' → logprob: -18.563261032104492
    9. '.None' → logprob: -19.688261032104492
    10. 'none' → logprob: -20.188261032104492

Token 313: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014166445471346378
    2. 'self' → logprob: -4.389166355133057
    3. '   ' → logprob: -7.389166355133057
    4. '	self' → logprob: -7.514166355133057
    5. '        
' → logprob: -8.889166831970215
    6. '	' → logprob: -9.014166831970215
    7. ' self' → logprob: -9.139166831970215
    8. '
' → logprob: -10.389166831970215
    9. '           ' → logprob: -11.639166831970215
    10. '\' → logprob: -11.764166831970215

Token 314: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0797666609287262
    2. 'self' → logprob: -2.5797667503356934
    3. '   ' → logprob: -8.079766273498535
    4. ' self' → logprob: -8.204766273498535
    5. '	self' → logprob: -8.704766273498535
    6. '	' → logprob: -9.204766273498535
    7. ' ' → logprob: -12.329766273498535
    8. '	   ' → logprob: -12.954766273498535
    9. '      ' → logprob: -13.079766273498535
    10. '    ' → logprob: -13.079766273498535

Token 315: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.4617256056226324e-05
    2. ' self' → logprob: -11.625014305114746
    3. '       ' → logprob: -12.125014305114746
    4. '   ' → logprob: -16.500015258789062
    5. 'right' → logprob: -16.875015258789062
    6. '	self' → logprob: -17.625015258789062
    7. ' ' → logprob: -19.125015258789062
    8. 's' → logprob: -19.375015258789062
    9. '           ' → logprob: -19.750015258789062
    10. '(self' → logprob: -19.875015258789062

Token 316: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00558566814288497
    2. '.' → logprob: -5.255585670471191
    3. '.left' → logprob: -8.880585670471191
    4. 'right' → logprob: -9.130585670471191
    5. ' .' → logprob: -9.255585670471191
    6. ' right' → logprob: -12.130585670471191
    7. '	right' → logprob: -13.630585670471191
    8. '.Right' → logprob: -14.505585670471191
    9. ' ' → logprob: -14.630585670471191
    10. '   ' → logprob: -14.755585670471191

Token 317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16092047095298767
    2. ' =' → logprob: -1.91092050075531
    3. '=None' → logprob: -8.160920143127441
    4. 'None' → logprob: -8.535920143127441
    5. '<|end|>' → logprob: -9.160920143127441
    6. ' None' → logprob: -9.785920143127441
    7. '(None' → logprob: -10.160920143127441
    8. '=
' → logprob: -12.910920143127441
    9. ' ' → logprob: -13.035920143127441
    10. '.' → logprob: -13.035920143127441

Token 318: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011047814972698689
    2. ' None' → logprob: -4.511047840118408
    3. '(None' → logprob: -18.01104736328125
    4. '_None' → logprob: -18.26104736328125
    5. ',None' → logprob: -19.88604736328125
    6. '=None' → logprob: -20.63604736328125
    7. '.None' → logprob: -21.38604736328125
    8. ' ' → logprob: -21.76104736328125
    9. '   ' → logprob: -21.76104736328125
    10. 'none' → logprob: -21.88604736328125

Token 319: '

' (ID: 279)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4090956449508667
    2. 'bst' → logprob: -2.4090957641601562
    3. 'n' → logprob: -2.5340957641601562
    4. '
' → logprob: -2.6590957641601562
    5. 'tree' → logprob: -2.9090957641601562
    6. '#' → logprob: -3.9090957641601562
    7. '<|end|>' → logprob: -5.159095764160156
    8. '```' → logprob: -5.159095764160156
    9. '  
' → logprob: -6.534095764160156
    10. 'x' → logprob: -7.034095764160156

Token 320: 'n' (ID: 77)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18114398419857025
    2. 'n' → logprob: -2.8061439990997314
    3. 'bst' → logprob: -3.4311439990997314
    4. 'tree' → logprob: -3.8061439990997314
    5. '
' → logprob: -4.306143760681152
    6. '#' → logprob: -4.431143760681152
    7. 'if' → logprob: -5.431143760681152
    8. 't' → logprob: -5.431143760681152
    9. 'a' → logprob: -6.056143760681152
    10. 'root' → logprob: -6.306143760681152

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4825707674026489
    2. '=' → logprob: -0.9825707674026489
    3. 'odes' → logprob: -6.232570648193359
    4. 'um' → logprob: -6.232570648193359
    5. ' ' → logprob: -6.482570648193359
    6. '=int' → logprob: -6.607570648193359
    7. 'ode' → logprob: -7.357570648193359
    8. 'umber' → logprob: -8.60757064819336
    9. '   ' → logprob: -8.85757064819336
    10. '=
' → logprob: -9.23257064819336

Token 322: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2687987983226776
    2. 'Node' → logprob: -1.518798828125
    3. '10' → logprob: -5.143798828125
    4. ' int' → logprob: -5.393798828125
    5. '5' → logprob: -5.643798828125
    6. '3' → logprob: -6.893798828125
    7. ' Node' → logprob: -7.893798828125
    8. '7' → logprob: -8.018798828125
    9. 'Binary' → logprob: -8.393798828125
    10. '[int' → logprob: -8.518798828125

Token 323: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029932603240013123
    2. '(' → logprob: -3.5299324989318848
    3. '()' → logprob: -9.279932975769043
    4. 'input' → logprob: -9.654932975769043
    5. ' (' → logprob: -11.154932975769043
    6. '(
' → logprob: -11.779932975769043
    7. '('' → logprob: -14.154932975769043
    8. ' ()' → logprob: -14.654932975769043
    9. '=input' → logprob: -14.654932975769043
    10. '(int' → logprob: -15.154932975769043

Token 324: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01816258206963539
    2. '()' → logprob: -4.018162727355957
    3. '(' → logprob: -12.393162727355957
    4. '())
' → logprob: -12.893162727355957
    5. ')' → logprob: -13.018162727355957
    6. '().' → logprob: -13.893162727355957
    7. ' ())' → logprob: -13.893162727355957
    8. '()
' → logprob: -14.893162727355957
    9. '()>' → logprob: -15.018162727355957
    10. '())

' → logprob: -15.143162727355957

Token 325: 'tree' (ID: 19816)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.22912092506885529
    2. 'tree' → logprob: -1.6041209697723389
    3. ' bst' → logprob: -6.10412073135376
    4. 'for' → logprob: -6.97912073135376
    5. 'b' → logprob: -9.104121208190918
    6. 'bs' → logprob: -9.229121208190918
    7. 'BST' → logprob: -9.479121208190918
    8. ' tree' → logprob: -9.729121208190918
    9. 'trees' → logprob: -9.729121208190918
    10. 'lst' → logprob: -9.854121208190918

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018502598628401756
    2. '=' → logprob: -4.143502712249756
    3. ' ' → logprob: -6.018502712249756
    4. ' =
' → logprob: -11.643502235412598
    5. 's' → logprob: -11.768502235412598
    6. '_' → logprob: -11.893502235412598
    7. '  ' → logprob: -13.268502235412598
    8. 'space' → logprob: -13.393502235412598
    9. ')' → logprob: -13.768502235412598
    10. '<|end|>' → logprob: -13.768502235412598

Token 327: ' Binary' (ID: 32672)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.3132699728012085
    2. ' Binary' → logprob: -1.3132699728012085
    3. ' ' → logprob: -11.93826961517334
    4. '(Binary' → logprob: -13.43826961517334
    5. '.Binary' → logprob: -16.188270568847656
    6. '  ' → logprob: -16.563270568847656
    7. ' ' → logprob: -16.688270568847656
    8. ' binary' → logprob: -17.313270568847656
    9. '_binary' → logprob: -17.688270568847656
    10. '   ' → logprob: -18.813270568847656

Token 328: 'Search' (ID: 5975)
  Prédit: 'Search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Search' → logprob: -1.6240566083070007e-06
    2. '_search' → logprob: -14.375001907348633
    3. 'earch' → logprob: -15.375001907348633
    4. ' Search' → logprob: -15.625001907348633
    5. '_Search' → logprob: -15.625001907348633
    6. '<Search' → logprob: -15.750001907348633
    7. 'S' → logprob: -16.000001907348633
    8. 'Sea' → logprob: -16.500001907348633
    9. 'search' → logprob: -16.500001907348633
    10. '(Search' → logprob: -17.250001907348633

Token 329: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -7.107425062713446e-06
    2. 'tree' → logprob: -12.125006675720215
    3. 'Tre' → logprob: -14.750006675720215
    4. 'ree' → logprob: -15.250006675720215
    5. 'Search' → logprob: -15.250006675720215
    6. '	Tree' → logprob: -15.500006675720215
    7. '<Tree' → logprob: -16.25000762939453
    8. ' tree' → logprob: -16.62500762939453
    9. ' Tree' → logprob: -16.75000762939453
    10. '_tree' → logprob: -17.00000762939453

Token 330: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25223055481910706
    2. '()
' → logprob: -1.5022305250167847
    3. '()

' → logprob: -8.377230644226074
    4. '()
' → logprob: -10.252230644226074
    5. '()\' → logprob: -10.877230644226074
    6. 'for' → logprob: -11.377230644226074
    7. '
' → logprob: -13.127230644226074
    8. '(' → logprob: -13.377230644226074
    9. ' ()' → logprob: -14.127230644226074
    10. '()<' → logprob: -15.127230644226074

Token 331: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.5776860184123507e-06
    2. ' for' → logprob: -12.87500286102295
    3. '
' → logprob: -18.125001907348633
    4. 'f' → logprob: -19.125001907348633
    5. '	for' → logprob: -19.250001907348633
    6. 'fo' → logprob: -20.250001907348633
    7. '<|end|>' → logprob: -21.000001907348633
    8. '    
' → logprob: -22.000001907348633
    9. ' 
' → logprob: -22.125001907348633
    10. '```' → logprob: -22.250001907348633

Token 332: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.022402452304959297
    2. '_' → logprob: -4.522402286529541
    3. ' i' → logprob: -4.522402286529541
    4. ' ' → logprob: -7.772402286529541
    5. '_i' → logprob: -12.6474027633667
    6. 'i' → logprob: -12.8974027633667
    7. ' ‌' → logprob: -15.0224027633667
    8. ' _
' → logprob: -15.6474027633667
    9. ' ' → logprob: -17.147401809692383
    10. ' ▁' → logprob: -17.522401809692383

Token 333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013182703405618668
    2. 'in' → logprob: -4.513182640075684
    3. ' ' → logprob: -6.263182640075684
    4. 'range' → logprob: -8.638182640075684
    5. ' _' → logprob: -10.513182640075684
    6. 'n' → logprob: -11.888182640075684
    7. ' range' → logprob: -12.138182640075684
    8. ' i' → logprob: -12.638182640075684
    9. '  ' → logprob: -13.388182640075684
    10. 'i' → logprob: -13.388182640075684

Token 334: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005235648714005947
    2. ' range' → logprob: -5.25523567199707
    3. '(range' → logprob: -13.75523567199707
    4. '	range' → logprob: -15.38023567199707
    5. 'rang' → logprob: -15.50523567199707
    6. 'input' → logprob: -15.75523567199707
    7. 'ran' → logprob: -16.50523567199707
    8. ' ' → logprob: -16.63023567199707
    9. 'r' → logprob: -17.13023567199707
    10. 'in' → logprob: -17.25523567199707

Token 335: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1073094978928566
    2. ' n' → logprob: -3.107309579849243
    3. '(' → logprob: -3.357309579849243
    4. ' (' → logprob: -3.857309579849243
    5. 'n' → logprob: -6.982309341430664
    6. ' ' → logprob: -9.732309341430664
    7. '(range' → logprob: -9.857309341430664
    8. ' range' → logprob: -10.357309341430664
    9. 'range' → logprob: -12.482309341430664
    10. '(
' → logprob: -13.982309341430664

Token 336: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01768544130027294
    2. ' ):' → logprob: -4.642685413360596
    3. ')' → logprob: -5.517685413360596
    4. '):
' → logprob: -5.642685413360596
    5. ' )' → logprob: -8.392685890197754
    6. ' ):
' → logprob: -10.142685890197754
    7. ':' → logprob: -10.142685890197754
    8. ',' → logprob: -11.517685890197754
    9. '):
' → logprob: -12.017685890197754
    10. '):

' → logprob: -12.392685890197754

Token 337: '   ' (ID: 271)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.26448920369148254
    2. '   ' → logprob: -1.8894891738891602
    3. 'key' → logprob: -2.63948917388916
    4. ' k' → logprob: -5.88948917388916
    5. ' x' → logprob: -6.63948917388916
    6. 'k' → logprob: -6.88948917388916
    7. '    
' → logprob: -7.01448917388916
    8. 'data' → logprob: -7.38948917388916
    9. ' data' → logprob: -8.01448917388916
    10. 'x' → logprob: -8.01448917388916

Token 338: ' command' (ID: 6348)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' (adapté à ' command') → logprob: -0.44593819975852966
    2. 'key' → logprob: -2.3209381103515625
    3. ' command' → logprob: -2.5709381103515625
    4. ' key' → logprob: -2.8209381103515625
    5. 'cmd' → logprob: -2.8209381103515625
    6. 's' → logprob: -4.1959381103515625
    7. 'x' → logprob: -4.6959381103515625
    8. 'k' → logprob: -4.9459381103515625
    9. 'v' → logprob: -5.0709381103515625
    10. 't' → logprob: -5.3209381103515625

Token 339: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15879826247692108
    2. ',' → logprob: -2.0337982177734375
    3. '=' → logprob: -4.7837982177734375
    4. ' ,' → logprob: -4.9087982177734375
    5. ' ' → logprob: -9.533798217773438
    6. ',input' → logprob: -9.783798217773438
    7. ',line' → logprob: -10.408798217773438
    8. 's' → logprob: -10.908798217773438
    9. '_line' → logprob: -11.158798217773438
    10. '_' → logprob: -11.408798217773438

Token 340: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31326621770858765
    2. ' input' → logprob: -1.3132662773132324
    3. '	input' → logprob: -13.813265800476074
    4. 'str' → logprob: -14.063265800476074
    5. 'list' → logprob: -14.063265800476074
    6. ' ' → logprob: -14.438265800476074
    7. '=input' → logprob: -14.563265800476074
    8. '(input' → logprob: -14.938265800476074
    9. 'int' → logprob: -15.063265800476074
    10. ',input' → logprob: -16.06326675415039

Token 341: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3870980441570282
    2. '()' → logprob: -1.1370980739593506
    3. ' ()' → logprob: -9.51209831237793
    4. '(' → logprob: -9.51209831237793
    5. '.' → logprob: -10.63709831237793
    6. '.split' → logprob: -10.63709831237793
    7. '()
' → logprob: -11.13709831237793
    8. ' ().' → logprob: -11.63709831237793
    9. '.strip' → logprob: -12.88709831237793
    10. '())' → logprob: -13.76209831237793

Token 342: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004309076175559312
    2. 'strip' → logprob: -7.750431060791016
    3. 'rstrip' → logprob: -15.750431060791016
    4. 'spl' → logprob: -16.500431060791016
    5. ' split' → logprob: -17.750431060791016
    6. '.split' → logprob: -19.625431060791016
    7. '_split' → logprob: -20.000431060791016
    8. '(split' → logprob: -20.625431060791016
    9. 'startswith' → logprob: -21.000431060791016
    10. 's' → logprob: -24.250431060791016

Token 343: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007712708320468664
    2. '()
' → logprob: -7.6257710456848145
    3. '(' → logprob: -8.875771522521973
    4. '('' → logprob: -9.000771522521973
    5. '()[' → logprob: -11.250771522521973
    6. '()

' → logprob: -12.500771522521973
    7. '()\' → logprob: -14.250771522521973
    8. '(
' → logprob: -14.625771522521973
    9. ' ()' → logprob: -14.750771522521973
    10. '()]' → logprob: -14.875771522521973

Token 344: ' ')
' (ID: 49195)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019806571304798126
    2. ' )' → logprob: -4.144806385040283
    3. '()' → logprob: -6.019806385040283
    4. '())' → logprob: -6.769806385040283
    5. ' ' → logprob: -9.394806861877441
    6. '')' → logprob: -9.394806861877441
    7. ')
' → logprob: -11.519806861877441
    8. '(' → logprob: -13.144806861877441
    9. ' )
' → logprob: -13.269806861877441
    10. ''' → logprob: -13.519806861877441

Token 345: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05679349601268768
    2. '   ' → logprob: -3.556793451309204
    3. 'token' → logprob: -4.306793689727783
    4. ' if' → logprob: -4.806793689727783
    5. '<|end|>' → logprob: -5.806793689727783
    6. 'command' → logprob: -7.806793689727783
    7. '  ' → logprob: -8.181793212890625
    8. '[token' → logprob: -8.306793212890625
    9. 't' → logprob: -8.306793212890625
    10. '	if' → logprob: -8.931793212890625

Token 346: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018909519538283348
    2. 'cmd' → logprob: -4.268909454345703
    3. 'op' → logprob: -5.393909454345703
    4. 'c' → logprob: -9.393909454345703
    5. ' if' → logprob: -9.893909454345703
    6. 'command' → logprob: -10.768909454345703
    7. 'key' → logprob: -11.393909454345703
    8. 'com' → logprob: -12.143909454345703
    9. 'i' → logprob: -12.518909454345703
    10. ' op' → logprob: -12.893909454345703

Token 347: ' len' (ID: 4631)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.0009134899592027068
    2. ' command' → logprob: -7.000913619995117
    3. '   ' → logprob: -14.125913619995117
    4. '(command' → logprob: -14.500913619995117
    5. ' ' → logprob: -14.875913619995117
    6. '	command' → logprob: -15.000913619995117
    7. 'len' → logprob: -16.875913619995117
    8. '  ' → logprob: -17.500913619995117
    9. '.command' → logprob: -17.750913619995117
    10. '    ' → logprob: -18.625913619995117

Token 348: '(command' (ID: 33772)
  Prédit: '(command'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(command' → logprob: -0.00022988072305452079
    2. 'command' → logprob: -8.500229835510254
    3. ' (' → logprob: -10.750229835510254
    4. '(' → logprob: -13.000229835510254
    5. ' command' → logprob: -13.125229835510254
    6. '	command' → logprob: -15.000229835510254
    7. '(com' → logprob: -16.37523078918457
    8. '   ' → logprob: -16.50023078918457
    9. '>' → logprob: -16.62523078918457
    10. '()' → logprob: -17.00023078918457

Token 349: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015821128617972136
    2. ')==' → logprob: -7.126582145690918
    3. ')>' → logprob: -7.876582145690918
    4. '==' → logprob: -8.126582145690918
    5. '>' → logprob: -10.126582145690918
    6. ' )' → logprob: -10.251582145690918
    7. ' ==' → logprob: -11.251582145690918
    8. '[' → logprob: -11.626582145690918
    9. ')>=' → logprob: -12.876582145690918
    10. ' >' → logprob: -14.501582145690918

Token 350: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.147417813539505
    2. ' ==' → logprob: -2.6474177837371826
    3. '>' → logprob: -2.7724177837371826
    4. ' >' → logprob: -6.022418022155762
    5. '>=' → logprob: -7.272418022155762
    6. '=' → logprob: -8.022418022155762
    7. '[' → logprob: -8.647418022155762
    8. '<' → logprob: -10.522418022155762
    9. ' >=' → logprob: -10.772418022155762
    10. ' ' → logprob: -11.272418022155762

Token 351: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4823346436023712
    2. '1' → logprob: -0.9823346138000488
    3. ' ' → logprob: -4.857334613800049
    4. '3' → logprob: -7.732334613800049
    5. '   ' → logprob: -12.232335090637207
    6. '  ' → logprob: -12.857335090637207
    7. '0' → logprob: -12.982335090637207
    8. '```' → logprob: -14.544835090637207
    9. '>' → logprob: -14.732335090637207
    10. '    ' → logprob: -14.919835090637207

Token 352: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3875187933444977
    2. '1' → logprob: -1.1375187635421753
    3. '3' → logprob: -7.512518882751465
    4. ' ' → logprob: -9.262518882751465
    5. '   ' → logprob: -13.950018882751465
    6. '```' → logprob: -14.012518882751465
    7. '0' → logprob: -14.137518882751465
    8. '  ' → logprob: -14.575018882751465
    9. '"' → logprob: -14.762518882751465
    10. '
' → logprob: -15.137518882751465

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0932621955871582
    2. ' and' → logprob: -2.593262195587158
    3. ':
' → logprob: -4.343262195587158
    4. 'and' → logprob: -6.718262195587158
    5. '[' → logprob: -10.21826171875
    6. '   ' → logprob: -11.21826171875
    7. ' :' → logprob: -12.21826171875
    8. ',' → logprob: -12.96826171875
    9. '=' → logprob: -13.59326171875
    10. '.' → logprob: -13.59326171875

Token 354: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09313014149665833
    2. 'print' → logprob: -2.593130111694336
    3. '   ' → logprob: -5.343130111694336
    4. '):' → logprob: -6.718130111694336
    5. '{' → logprob: -6.843130111694336
    6. ':
' → logprob: -7.093130111694336
    7. ' print' → logprob: -7.093130111694336
    8. '[' → logprob: -7.093130111694336
    9. ',' → logprob: -7.218130111694336
    10. '.print' → logprob: -7.343130111694336

Token 355: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.051001038402318954
    2. 'print' → logprob: -3.5510010719299316
    3. 'if' → logprob: -4.301001071929932
    4. ' tree' → logprob: -5.926001071929932
    5. '   ' → logprob: -6.426001071929932
    6. 'key' → logprob: -6.801001071929932
    7. 'node' → logprob: -6.926001071929932
    8. 'command' → logprob: -8.051000595092773
    9. '	tree' → logprob: -8.551000595092773
    10. '(tree' → logprob: -8.926000595092773

Token 356: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -0.011130942031741142
    2. '.' → logprob: -4.5111308097839355
    3. 'print' → logprob: -10.011131286621094
    4. ' .' → logprob: -11.011131286621094
    5. '.println' → logprob: -12.511131286621094
    6. '.p' → logprob: -12.511131286621094
    7. '.pr' → logprob: -13.636131286621094
    8. '.
' → logprob: -13.761131286621094
    9. '.show' → logprob: -13.886131286621094
    10. '   ' → logprob: -14.136131286621094

Token 357: '_nodes' (ID: 34593)
  Prédit: '_nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -1.2664456789934775e-06
    2. '_' → logprob: -13.875000953674316
    3. '_n' → logprob: -15.500000953674316
    4. 'Nodes' → logprob: -18.500001907348633
    5. '_tokens' → logprob: -18.500001907348633
    6. '_points' → logprob: -20.000001907348633
    7. ' _' → logprob: -20.125001907348633
    8. '_lines' → logprob: -20.250001907348633
    9. '_items' → logprob: -20.750001907348633
    10. 'nodes' → logprob: -20.750001907348633

Token 358: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.076218025758862e-05
    2. '()
' → logprob: -9.625070571899414
    3. '(' → logprob: -13.375070571899414
    4. ' ()' → logprob: -13.625070571899414
    5. '()
' → logprob: -13.875070571899414
    6. '()

' → logprob: -14.750070571899414
    7. '()`' → logprob: -15.000070571899414
    8. '()\' → logprob: -16.375070571899414
    9. '（）' → logprob: -16.375070571899414
    10. '()"' → logprob: -17.375070571899414

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7306923866271973
    2. 'else' → logprob: -0.9806923866271973
    3. ' else' → logprob: -1.9806923866271973
    4. '    
' → logprob: -6.105692386627197
    5. 'elif' → logprob: -6.230692386627197
    6. '
' → logprob: -7.355692386627197
    7. '<|end|>' → logprob: -8.855691909790039
    8. '	else' → logprob: -9.105691909790039
    9. ' elif' → logprob: -9.355691909790039
    10. ' 
' → logprob: -9.730691909790039

Token 360: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.06285098940134048
    2. ' else' → logprob: -2.8128509521484375
    3. 'elif' → logprob: -7.4378509521484375
    4. '   ' → logprob: -8.187850952148438
    5. ' elif' → logprob: -11.812850952148438
    6. '	else' → logprob: -12.312850952148438
    7. ':' → logprob: -13.437850952148438
    8. ' ' → logprob: -13.812850952148438
    9. '    
' → logprob: -14.312850952148438
    10. 'continue' → logprob: -15.062850952148438

Token 361: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11410056054592133
    2. ':
' → logprob: -2.239100456237793
    3. ' :' → logprob: -7.489100456237793
    4. ' :
' → logprob: -7.864100456237793
    5. '   ' → logprob: -8.864100456237793
    6. '       ' → logprob: -9.364100456237793
    7. ' if' → logprob: -9.739100456237793
    8. '{' → logprob: -10.864100456237793
    9. 'if' → logprob: -11.864100456237793
    10. ':

' → logprob: -12.114100456237793

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12913672626018524
    2. ' key' → logprob: -2.879136800765991
    3. 'key' → logprob: -3.504136800765991
    4. 'node' → logprob: -4.129136562347412
    5. 'z' → logprob: -5.504136562347412
    6. '   ' → logprob: -5.629136562347412
    7. ' z' → logprob: -6.004136562347412
    8. 'x' → logprob: -6.004136562347412
    9. ' ' → logprob: -6.129136562347412
    10. ' node' → logprob: -6.129136562347412

Token 363: ' o' (ID: 293)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.6210590600967407
    2. 'z' → logprob: -1.6210590600967407
    3. 'x' → logprob: -1.7460590600967407
    4. 'node' → logprob: -3.121058940887451
    5. 'k' → logprob: -3.496058940887451
    6. ' key' → logprob: -4.746058940887451
    7. ' z' → logprob: -5.871058940887451
    8. 'tree' → logprob: -6.496058940887451
    9. 'command' → logprob: -7.121058940887451
    10. 'cmd' → logprob: -7.371058940887451

Token 364: 'pec' (ID: 1119)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014814173802733421
    2. ',' → logprob: -4.764814376831055
    3. ' =' → logprob: -5.639814376831055
    4. '=' → logprob: -7.514814376831055
    5. ' ' → logprob: -7.639814376831055
    6. 'perator' → logprob: -7.764814376831055
    7. ',p' → logprob: -8.139814376831055
    8. 'pen' → logprob: -8.264814376831055
    9. 'k' → logprob: -9.389814376831055
    10. 'b' → logprob: -9.639814376831055

Token 365: 'ode' (ID: 676)
  Prédit: 'ode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ode' → logprob: -0.5620570182800293
    2. 'md' → logprob: -0.9370570182800293
    3. ' =' → logprob: -4.562057018280029
    4. 'nd' → logprob: -5.312057018280029
    5. 'mp' → logprob: -5.812057018280029
    6. '=' → logprob: -5.812057018280029
    7. 'utor' → logprob: -6.062057018280029
    8. 'ation' → logprob: -6.312057018280029
    9. '       ' → logprob: -6.312057018280029
    10. 'and' → logprob: -6.562057018280029

Token 366: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10048367828130722
    2. '=' → logprob: -2.4754836559295654
    3. ',' → logprob: -4.4754838943481445
    4. ' ,' → logprob: -10.225483894348145
    5. ' ' → logprob: -11.350483894348145
    6. '   ' → logprob: -11.725483894348145
    7. 'n' → logprob: -11.725483894348145
    8. ',key' → logprob: -12.600483894348145
    9. 'nd' → logprob: -12.850483894348145
    10. 'r' → logprob: -12.850483894348145

Token 367: ' operand' (ID: 63895)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7190521955490112
    2. ' key' → logprob: -0.8440521955490112
    3. 'x' → logprob: -2.719052314758301
    4. 'value' → logprob: -4.719052314758301
    5. ' x' → logprob: -5.469052314758301
    6. 'k' → logprob: -6.594052314758301
    7. 'val' → logprob: -6.719052314758301
    8. ' value' → logprob: -8.0940523147583
    9. 'v' → logprob: -8.3440523147583
    10. ' k' → logprob: -8.4690523147583

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022545099258423
    2. ' =' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.035225868225098
    4. 's' → logprob: -15.910225868225098
    5. ',' → logprob: -16.41022491455078
    6. '＝' → logprob: -16.78522491455078
    7. '=int' → logprob: -16.91022491455078
    8. '_' → logprob: -17.28522491455078
    9. '_=' → logprob: -17.53522491455078
    10. '  ' → logprob: -18.16022491455078

Token 369: ' command' (ID: 6348)
  Prédit: ' command'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' command' → logprob: -0.06199738010764122
    2. 'command' → logprob: -2.811997413635254
    3. ' int' → logprob: -11.061997413635254
    4. 'int' → logprob: -11.436997413635254
    5. '	command' → logprob: -13.561997413635254
    6. '(command' → logprob: -13.686997413635254
    7. ' ' → logprob: -15.436997413635254
    8. ' comando' → logprob: -15.686997413635254
    9. ' code' → logprob: -16.311996459960938
    10. ' '' → logprob: -16.561996459960938

Token 370: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0443522185087204
    2. '=' → logprob: -3.1693522930145264
    3. ' =' → logprob: -6.794352054595947
    4. 's' → logprob: -9.419352531433105
    5. '<|end|>' → logprob: -9.419352531433105
    6. '[
' → logprob: -11.044352531433105
    7. '0' → logprob: -11.044352531433105
    8. '
' → logprob: -12.294352531433105
    9. ' ' → logprob: -12.419352531433105
    10. '[]' → logprob: -12.669352531433105

Token 371: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006339243846014142
    2. '1' → logprob: -7.750633716583252
    3. ' ' → logprob: -8.75063419342041
    4. '[' → logprob: -10.87563419342041
    5. '
' → logprob: -11.00063419342041
    6. '-' → logprob: -12.00063419342041
    7. ']' → logprob: -13.62563419342041
    8. ' 
' → logprob: -14.50063419342041
    9. ' -' → logprob: -15.25063419342041
    10. '   ' → logprob: -15.50063419342041

Token 372: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031943509820848703
    2. ' ,' → logprob: -5.753194332122803
    3. '],' → logprob: -12.253194808959961
    4. ',
' → logprob: -12.628194808959961
    5. ']' → logprob: -13.003194808959961
    6. ' ,
' → logprob: -13.753194808959961
    7. '‌,' → logprob: -14.128194808959961
    8. ' ' → logprob: -14.253194808959961
    9. ',input' → logprob: -14.878194808959961
    10. ',user' → logprob: -15.003194808959961

Token 373: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759718418121338
    2. ' int' → logprob: -0.8259718418121338
    3. ' command' → logprob: -10.575971603393555
    4. 'command' → logprob: -12.075971603393555
    5. ' Node' → logprob: -14.075971603393555
    6. 'Node' → logprob: -15.075971603393555
    7. '[int' → logprob: -16.325971603393555
    8. '(int' → logprob: -16.700971603393555
    9. '<int' → logprob: -17.825971603393555
    10. 'Command' → logprob: -18.450971603393555

Token 374: '(command' (ID: 33772)
  Prédit: '(command'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(command' → logprob: -0.00010747690976131707
    2. '(' → logprob: -9.250107765197754
    3. 'command' → logprob: -11.500107765197754
    4. '('' → logprob: -14.000107765197754
    5. ' command' → logprob: -15.500107765197754
    6. ' (' → logprob: -15.750107765197754
    7. '()' → logprob: -17.750106811523438
    8. '(`' → logprob: -19.125106811523438
    9. '`' → logprob: -19.375106811523438
    10. '(
' → logprob: -19.375106811523438

Token 375: '[' (ID: 58)
  Prédit: '(command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(command' → logprob: -0.10143616050481796
    2. '[' → logprob: -2.351436138153076
    3. 'command' → logprob: -7.476436138153076
    4. '(' → logprob: -7.476436138153076
    5. ' command' → logprob: -10.226436614990234
    6. ')' → logprob: -10.351436614990234
    7. '()[' → logprob: -11.351436614990234
    8. ' (' → logprob: -12.351436614990234
    9. '()' → logprob: -12.851436614990234
    10. '```' → logprob: -12.976436614990234

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.50001335144043
    3. '[' → logprob: -13.00001335144043
    4. '   ' → logprob: -14.12501335144043
    5. '
' → logprob: -15.12501335144043
    6. '```' → logprob: -16.75001335144043
    7. ']' → logprob: -17.37501335144043
    8. 'command' → logprob: -17.62501335144043
    9. '  ' → logprob: -17.75001335144043
    10. ' [' → logprob: -17.87501335144043

Token 377: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002516442909836769
    2. '])' → logprob: -6.002516269683838
    3. ')
' → logprob: -10.877516746520996
    4. ')]' → logprob: -11.502516746520996
    5. ']' → logprob: -12.127516746520996
    6. ' )' → logprob: -13.377516746520996
    7. '）' → logprob: -13.377516746520996
    8. ''])' → logprob: -13.752516746520996
    9. ')])' → logprob: -13.877516746520996
    10. '())' → logprob: -15.002516746520996

Token 378: '       ' (ID: 309)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.3533976078033447
    2. '       ' → logprob: -1.3533976078033447
    3. 'node' → logprob: -1.3533976078033447
    4. 'n' → logprob: -2.2283976078033447
    5. ' node' → logprob: -3.1033976078033447
    6. '
' → logprob: -3.7283976078033447
    7. '        
' → logprob: -4.103397369384766
    8. ' if' → logprob: -4.853397369384766
    9. 'if' → logprob: -5.228397369384766
    10. ' z' → logprob: -5.353397369384766

Token 379: ' node' (ID: 4596)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28214508295059204
    2. 'node' (adapté à ' node') → logprob: -1.5321450233459473
    3. 'z' → logprob: -3.9071450233459473
    4. ' if' → logprob: -5.282145023345947
    5. ' node' → logprob: -6.032145023345947
    6. 'new' → logprob: -6.407145023345947
    7. 'n' → logprob: -8.282145500183105
    8. '
' → logprob: -9.157145500183105
    9. ' z' → logprob: -9.407145500183105
    10. '       ' → logprob: -10.407145500183105

Token 380: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036006635054945946
    2. '=' → logprob: -5.628600597381592
    3. ' ' → logprob: -15.00360107421875
    4. ' =
' → logprob: -15.62860107421875
    5. '.' → logprob: -17.75360107421875
    6. '<|end|>' → logprob: -18.12860107421875
    7. '	' → logprob: -18.37860107421875
    8. '  ' → logprob: -18.75360107421875
    9. 's' → logprob: -18.87860107421875
    10. '_' → logprob: -18.87860107421875

Token 381: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.12692831456661224
    2. ' Node' → logprob: -2.1269283294677734
    3. '	Node' → logprob: -15.751928329467773
    4. '_Node' → logprob: -17.876928329467773
    5. '.Node' → logprob: -19.376928329467773
    6. ' ' → logprob: -19.751928329467773
    7. '<Node' → logprob: -20.251928329467773
    8. '(Node' → logprob: -20.626928329467773
    9. '_node' → logprob: -21.001928329467773
    10. ' Nodo' → logprob: -21.376928329467773

Token 382: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10391921550035477
    2. 'operand' → logprob: -2.353919267654419
    3. ' operand' → logprob: -5.60391902923584
    4. ' (' → logprob: -10.97891902923584
    5. '_operand' → logprob: -12.35391902923584
    6. 'Operand' → logprob: -15.47891902923584
    7. '(operator' → logprob: -15.47891902923584
    8. '(op' → logprob: -15.60391902923584
    9. '(
' → logprob: -16.103919982910156
    10. ' operands' → logprob: -16.103919982910156

Token 383: 'operand' (ID: 73439)
  Prédit: 'operand'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operand' → logprob: -0.008615872822701931
    2. ' operand' → logprob: -4.758615970611572
    3. '_operand' → logprob: -14.258615493774414
    4. ')' → logprob: -15.133615493774414
    5. 'oper' → logprob: -15.133615493774414
    6. 'operator' → logprob: -17.258615493774414
    7. 'Operand' → logprob: -17.258615493774414
    8. 'op' → logprob: -18.258615493774414
    9. '   ' → logprob: -18.383615493774414
    10. 'opcode' → logprob: -18.508615493774414

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052384985610842705
    2. ')
' → logprob: -5.2552385330200195
    3. ')
' → logprob: -12.38023853302002
    4. ' )' → logprob: -15.00523853302002
    5. ')

' → logprob: -16.130237579345703
    6. '       ' → logprob: -17.755237579345703
    7. ' )
' → logprob: -18.130237579345703
    8. '),' → logprob: -18.255237579345703
    9. '   ' → logprob: -18.380237579345703
    10. ')#' → logprob: -19.255237579345703

Token 385: '       ' (ID: 309)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.2620353400707245
    2. '       ' → logprob: -1.8870353698730469
    3. 'if' → logprob: -2.887035369873047
    4. ' tree' → logprob: -4.637035369873047
    5. ' if' → logprob: -5.012035369873047
    6. '
' → logprob: -5.762035369873047
    7. '        
' → logprob: -6.637035369873047
    8. '	tree' → logprob: -7.012035369873047
    9. '   ' → logprob: -7.637035369873047
    10. ' 
' → logprob: -8.012035369873047

Token 386: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' (adapté à ' tree') → logprob: -0.20210060477256775
    2. 'if' → logprob: -1.7021006345748901
    3. ' if' → logprob: -7.70210075378418
    4. ' tree' → logprob: -8.45210075378418
    5. '       ' → logprob: -11.32710075378418
    6. '	tree' → logprob: -12.70210075378418
    7. '
' → logprob: -13.32710075378418
    8. '        
' → logprob: -13.57710075378418
    9. '   ' → logprob: -13.70210075378418
    10. 'trees' → logprob: -14.20210075378418

Token 387: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.0011715330183506012
    2. '.' → logprob: -6.751171588897705
    3. '.in' → logprob: -14.251171112060547
    4. ' .' → logprob: -14.876171112060547
    5. '.Insert' → logprob: -16.251171112060547
    6. '.append' → logprob: -16.251171112060547
    7. '.put' → logprob: -17.751171112060547
    8. '.
' → logprob: -17.876171112060547
    9. 'insert' → logprob: -18.126171112060547
    10. '\.' → logprob: -18.251171112060547

Token 388: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.004081367049366236
    2. '(' → logprob: -5.5040812492370605
    3. '(token' → logprob: -13.254081726074219
    4. '(n' → logprob: -14.879081726074219
    5. ' (' → logprob: -15.254081726074219
    6. '(
' → logprob: -15.629081726074219
    7. '(nodes' → logprob: -16.00408172607422
    8. '(user' → logprob: -16.62908172607422
    9. '(Node' → logprob: -17.12908172607422
    10. '((' → logprob: -17.62908172607422

Token 389: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ' )' → logprob: -12.125007629394531
    3. ')
' → logprob: -13.000007629394531
    4. '<|end|>' → logprob: -17.00000762939453
    5. '())' → logprob: -17.87500762939453
    6. ')

' → logprob: -18.12500762939453
    7. '))' → logprob: -19.25000762939453
    8. ')return' → logprob: -19.37500762939453
    9. ')#' → logprob: -19.37500762939453
    10. '   ' → logprob: -19.50000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 387
Tokens correctement prédits (1ère position, stricte): 197
Tokens correctement prédits (1ère position, avec adaptation): 223
Tokens correctement prédits (top 10): 338
Précision stricte (1ère position): 50.90%
Précision adaptée (1ère position): 57.62%
Précision (top 10): 87.34%
================================================================================
