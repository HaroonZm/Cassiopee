================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class node:
    def __init__(self,key=None):
        self.left=None
        self.right=None
        self.parent=None
        self.key=key

def insert(T,z):
    x=T
    y=None
    while isinstance(x,node):
        y=x
        if z.key<x.key:
            x=x.left
        else:
            x=x.right
    z.parent=y
    if y is None:
        T=z
    elif z.key<y.key:
        y.left=z
    else:
        y.right=z
    return T
        
def preorder(u):
    if not isinstance(u,node):
        return
    pripre.append(str(u.key))
    preorder(u.left)
    preorder(u.right)

def inorder(u):
    if not isinstance(u,node):
        return
    inorder(u.left)
    priin.append(str(u.key))
    inorder(u.right)

m=input()
root=None
for i in xrange(m):
    cmd=map(str,raw_input().split())
    if cmd[0]=="print":
        pripre=[]
        priin=[]
        preorder(root)
        inorder(root)
        print(' '+' '.join(priin))
        print(' '+' '.join(pripre))
    else:
        key=int(cmd[1])
        z=node(key)
        root=insert(root,z)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' node' (ID: 4596)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2585639953613281
    2. '```' → logprob: -2.133563995361328
    3. ''' → logprob: -3.133563995361328
    4. ':' → logprob: -4.133563995361328
    5. '_' → logprob: -4.508563995361328
    6. ' (' → logprob: -4.758563995361328
    7. '.' → logprob: -5.133563995361328
    8. '`' → logprob: -5.383563995361328
    9. '   ' → logprob: -5.508563995361328
    10. ' ' → logprob: -5.883563995361328

Token 4: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.829164981842041
    2. ' def' → logprob: -1.704164981842041
    3. ' ' → logprob: -1.829164981842041
    4. '    ' → logprob: -2.454164981842041
    5. 'def' (adapté à ' def') → logprob: -2.954164981842041
    6. '_' → logprob: -3.204164981842041
    7. '```' → logprob: -4.204164981842041
    8. '(n' → logprob: -5.204164981842041
    9. '(' → logprob: -5.454164981842041
    10. '__' → logprob: -5.954164981842041

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05082815885543823
    2. ' __' → logprob: -3.675828218460083
    3. ' init' → logprob: -4.425827980041504
    4. '__' → logprob: -5.425827980041504
    5. '_' → logprob: -6.300827980041504
    6. '<|end|>' → logprob: -6.550827980041504
    7. ' def' → logprob: -7.800827980041504
    8. ' initialize' → logprob: -7.925827980041504
    9. ' space' → logprob: -8.050827980041504
    10. ' ' → logprob: -8.050827980041504

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2961512513575144e-05
    2. ' init' → logprob: -10.750022888183594
    3. '_init' → logprob: -14.000022888183594
    4. 'ini' → logprob: -15.250022888183594
    5. 'i' → logprob: -15.375022888183594
    6. '	init' → logprob: -17.000022888183594
    7. 'in' → logprob: -18.250022888183594
    8. 'int' → logprob: -18.625022888183594
    9. 'innit' → logprob: -18.875022888183594
    10. '_' → logprob: -19.125022888183594

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.7101458311080933
    2. '__' → logprob: -0.8351458311080933
    3. '(' → logprob: -2.960145950317383
    4. '_' → logprob: -3.835145950317383
    5. '__(
' → logprob: -7.085145950317383
    6. '__((' → logprob: -9.210145950317383
    7. '_(' → logprob: -9.460145950317383
    8. '(self' → logprob: -9.585145950317383
    9. '__('' → logprob: -10.710145950317383
    10. '___' → logprob: -10.960145950317383

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00529388478025794
    2. ' self' → logprob: -5.255293846130371
    3. '(self' → logprob: -10.505293846130371
    4. ')' → logprob: -10.880293846130371
    5. ' )' → logprob: -12.130293846130371
    6. ' ' → logprob: -13.005293846130371
    7. ',self' → logprob: -13.505293846130371
    8. '_self' → logprob: -13.505293846130371
    9. 's' → logprob: -13.880293846130371
    10. ',' → logprob: -14.630293846130371

Token 9: ',key' (ID: 119403)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2364434003829956
    2. ',' → logprob: -2.361443519592285
    3. '(' → logprob: -2.861443519592285
    4. '<|end|>' → logprob: -4.361443519592285
    5. ' )' → logprob: -4.486443519592285
    6. 'self' → logprob: -4.611443519592285
    7. '_' → logprob: -4.611443519592285
    8. '.' → logprob: -5.861443519592285
    9. 's' → logprob: -6.236443519592285
    10. '):' → logprob: -6.361443519592285

Token 10: '=None' (ID: 12783)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5313084125518799
    2. ',' → logprob: -1.0313084125518799
    3. ')' → logprob: -2.90630841255188
    4. '<|end|>' → logprob: -7.906308174133301
    5. ':' → logprob: -9.5313081741333
    6. ',key' → logprob: -9.6563081741333
    7. '):
' → logprob: -9.7813081741333
    8. 'self' → logprob: -9.9063081741333
    9. ' ,' → logprob: -9.9063081741333
    10. ',self' → logprob: -10.2813081741333

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.018923211842775345
    2. ')' → logprob: -4.018923282623291
    3. ',' → logprob: -7.268923282623291
    4. ':' → logprob: -9.768922805786133
    5. ' ):' → logprob: -12.018922805786133
    6. '):
' → logprob: -12.268922805786133
    7. '),' → logprob: -13.768922805786133
    8. ''):' → logprob: -13.768922805786133
    9. ',parent' → logprob: -14.143922805786133
    10. '   ' → logprob: -14.643922805786133

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08650529384613037
    2. 'self' → logprob: -3.21150541305542
    3. '   ' → logprob: -3.46150541305542
    4. '    ' → logprob: -5.71150541305542
    5. ' self' → logprob: -5.83650541305542
    6. ' ' → logprob: -7.08650541305542
    7. ':' → logprob: -7.33650541305542
    8. '_' → logprob: -7.46150541305542
    9. '<|end|>' → logprob: -7.46150541305542
    10. '        ' → logprob: -7.71150541305542

Token 13: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20200993120670319
    2. ' self' → logprob: -1.702009916305542
    3. '       ' → logprob: -7.577010154724121
    4. '   ' → logprob: -10.077010154724121
    5. ' ' → logprob: -10.452010154724121
    6. ' ' → logprob: -12.952010154724121
    7. '        ' → logprob: -13.077010154724121
    8. 's' → logprob: -13.077010154724121
    9. 'super' → logprob: -13.202010154724121
    10. '    ' → logprob: -13.327010154724121

Token 14: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08949203044176102
    2. '.key' → logprob: -2.464492082595825
    3. ' ' → logprob: -8.214491844177246
    4. ' .' → logprob: -8.964491844177246
    5. '.value' → logprob: -9.839491844177246
    6. '.data' → logprob: -10.214491844177246
    7. ' key' → logprob: -10.339491844177246
    8. '.space' → logprob: -11.964491844177246
    9. '.Key' → logprob: -12.464491844177246
    10. '.val' → logprob: -13.089491844177246

Token 15: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14329437911510468
    2. ' =' → logprob: -2.018294334411621
    3. '<|end|>' → logprob: -7.643294334411621
    4. '_' → logprob: -10.018294334411621
    5. ' ' → logprob: -10.393294334411621
    6. ',' → logprob: -11.018294334411621
    7. 'space' → logprob: -11.268294334411621
    8. ')' → logprob: -11.268294334411621
    9. '<|end|>' → logprob: -12.518294334411621
    10. '_=' → logprob: -12.518294334411621

Token 16: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 17: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0070946961641311646
    2. '       ' → logprob: -5.507094860076904
    3. ' self' → logprob: -6.257094860076904
    4. ' ' → logprob: -8.007094383239746
    5. '   ' → logprob: -8.257094383239746
    6. ',' → logprob: -8.632094383239746
    7. 's' → logprob: -9.257094383239746
    8. ')' → logprob: -9.757094383239746
    9. 'space' → logprob: -9.882094383239746
    10. '<|end|>' → logprob: -10.882094383239746

Token 19: '.right' (ID: 17627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13091729581356049
    2. '.right' → logprob: -2.1309173107147217
    3. '.key' → logprob: -5.630917072296143
    4. '.left' → logprob: -8.0059175491333
    5. '.next' → logprob: -10.3809175491333
    6. ' .' → logprob: -12.0059175491333
    7. '.value' → logprob: -12.1309175491333
    8. '.user' → logprob: -12.6309175491333
    9. '.Right' → logprob: -13.1309175491333
    10. 'right' → logprob: -13.6309175491333

Token 20: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013460656628012657
    2. '=None' → logprob: -6.626346111297607
    3. ' =' → logprob: -11.12634563446045
    4. '=
' → logprob: -13.00134563446045
    5. '=

' → logprob: -13.00134563446045
    6. '=}' → logprob: -15.12634563446045
    7. '=null' → logprob: -15.37634563446045
    8. '<|end|>' → logprob: -16.126346588134766
    9. '==' → logprob: -16.626346588134766
    10. '＝' → logprob: -16.876346588134766

Token 21: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11413160711526871
    2. '<|end|>' → logprob: -2.3641316890716553
    3. '
' → logprob: -5.614131450653076
    4. 'self' → logprob: -5.739131450653076
    5. '   ' → logprob: -5.864131450653076
    6. '        
' → logprob: -6.864131450653076
    7. ' ' → logprob: -7.864131450653076
    8. ',' → logprob: -7.864131450653076
    9. '    
' → logprob: -8.114131927490234
    10. '```' → logprob: -8.239131927490234

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011747668497264385
    2. '<|end|>' → logprob: -5.13674783706665
    3. 'self' → logprob: -6.26174783706665
    4. '        
' → logprob: -6.51174783706665
    5. '   ' → logprob: -7.51174783706665
    6. '
' → logprob: -7.88674783706665
    7. '    
' → logprob: -8.386747360229492
    8. '```' → logprob: -8.511747360229492
    9. ' ' → logprob: -8.761747360229492
    10. ')' → logprob: -9.011747360229492

Token 23: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.045406240969896317
    2. '       ' → logprob: -3.1704063415527344
    3. 'key' → logprob: -6.795406341552734
    4. ' self' → logprob: -6.795406341552734
    5. '   ' → logprob: -9.670406341552734
    6. ' ' → logprob: -10.045406341552734
    7. '           ' → logprob: -11.170406341552734
    8. ' key' → logprob: -11.670406341552734
    9. '        ' → logprob: -12.045406341552734
    10. '```' → logprob: -12.670406341552734

Token 24: '.parent' (ID: 17454)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.01828724890947342
    2. '.' → logprob: -4.018287181854248
    3. '.value' → logprob: -9.143287658691406
    4. '.data' → logprob: -11.518287658691406
    5. '.val' → logprob: -11.643287658691406
    6. ' .' → logprob: -12.393287658691406
    7. '.Key' → logprob: -13.018287658691406
    8. 'key' → logprob: -13.768287658691406
    9. '.user' → logprob: -14.518287658691406
    10. '.token' → logprob: -14.518287658691406

Token 25: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00023739055905025452
    2. ' =' → logprob: -8.625237464904785
    3. '=None' → logprob: -10.000237464904785
    4. '=

' → logprob: -11.750237464904785
    5. '=
' → logprob: -12.500237464904785
    6. '<|end|>' → logprob: -15.125237464904785
    7. '=}' → logprob: -16.00023651123047
    8. '＝' → logprob: -16.50023651123047
    9. '=null' → logprob: -16.87523651123047
    10. '=`' → logprob: -17.00023651123047

Token 26: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004023187793791294
    2. '<|end|>' → logprob: -5.75402307510376
    3. '        
' → logprob: -8.379023551940918
    4. '
' → logprob: -8.629023551940918
    5. '   ' → logprob: -9.004023551940918
    6. 'self' → logprob: -10.004023551940918
    7. '	' → logprob: -10.129023551940918
    8. ')' → logprob: -10.254023551940918
    9. ' 
' → logprob: -10.379023551940918
    10. ',' → logprob: -10.504023551940918

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003834279254078865
    2. '<|end|>' → logprob: -6.253834247589111
    3. '        
' → logprob: -7.378834247589111
    4. '   ' → logprob: -7.503834247589111
    5. 'self' → logprob: -9.00383472442627
    6. ')' → logprob: -9.50383472442627
    7. '    
' → logprob: -9.75383472442627
    8. ' 
' → logprob: -9.75383472442627
    9. ',' → logprob: -9.87883472442627
    10. '	' → logprob: -10.12883472442627

Token 28: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04402294382452965
    2. '       ' → logprob: -3.169023036956787
    3. ' self' → logprob: -6.919023036956787
    4. '   ' → logprob: -11.419022560119629
    5. 'def' → logprob: -11.919022560119629
    6. '	self' → logprob: -12.169022560119629
    7. ' ' → logprob: -12.419022560119629
    8. '```' → logprob: -13.544022560119629
    9. '<|end|>' → logprob: -14.169022560119629
    10. 's' → logprob: -14.169022560119629

Token 29: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.04312239587306976
    2. '.' → logprob: -3.1681222915649414
    3. ' .' → logprob: -9.668122291564941
    4. '.value' → logprob: -10.543122291564941
    5. '.data' → logprob: -11.418122291564941
    6. '.Key' → logprob: -12.043122291564941
    7. '.val' → logprob: -12.668122291564941
    8. '.next' → logprob: -12.918122291564941
    9. '.code' → logprob: -13.168122291564941
    10. '.keys' → logprob: -13.293122291564941

Token 30: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005238975863903761
    2. ' =' → logprob: -5.255239009857178
    3. '<|end|>' → logprob: -12.63023853302002
    4. '=

' → logprob: -14.75523853302002
    5. '=value' → logprob: -15.25523853302002
    6. '=None' → logprob: -15.25523853302002
    7. '=}' → logprob: -15.38023853302002
    8. ')' → logprob: -15.63023853302002
    9. '=
' → logprob: -15.88023853302002
    10. '=user' → logprob: -16.630239486694336

Token 31: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.10020667314529419
    2. ' key' → logprob: -2.3502066135406494
    3. '	key' → logprob: -17.35020637512207
    4. ' ' → logprob: -18.47520637512207
    5. 'Key' → logprob: -18.72520637512207
    6. '(key' → logprob: -19.10020637512207
    7. '_key' → logprob: -19.22520637512207
    8. '   ' → logprob: -20.10020637512207
    9. 'k' → logprob: -20.72520637512207
    10. '$key' → logprob: -20.72520637512207

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5149875283241272
    2. ' ' → logprob: -2.2649874687194824
    3. '   ' → logprob: -2.3899874687194824
    4. 'd' → logprob: -2.8899874687194824
    5. '<|end|>' → logprob: -3.5149874687194824
    6. ' 
' → logprob: -3.6399874687194824
    7. 'def' → logprob: -3.7649874687194824
    8. 'n' → logprob: -4.639987468719482
    9. '.' → logprob: -4.764987468719482
    10. ',' → logprob: -4.889987468719482

Token 33: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.932120680809021
    2. '   ' → logprob: -1.557120680809021
    3. ' ' → logprob: -1.557120680809021
    4. 'd' → logprob: -2.5571208000183105
    5. ' 
' → logprob: -3.0571208000183105
    6. 'n' → logprob: -4.4321208000183105
    7. '    
' → logprob: -5.0571208000183105
    8. 'def' → logprob: -5.3071208000183105
    9. '' → logprob: -5.4321208000183105
    10. '\' → logprob: -5.4321208000183105

Token 34: ' insert' (ID: 10898)
  Prédit: ' insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.27906179428100586
    2. ' inorder' → logprob: -3.154061794281006
    3. ' tree' → logprob: -3.279061794281006
    4. ' node' → logprob: -3.404061794281006
    5. ' preorder' → logprob: -3.529061794281006
    6. ' space' → logprob: -4.029061794281006
    7. ' add' → logprob: -4.279061794281006
    8. ' in' → logprob: -4.404061794281006
    9. ' create' → logprob: -4.779061794281006
    10. ' find' → logprob: -4.779061794281006

Token 35: '(T' (ID: 7014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1066938042640686
    2. ' (' → logprob: -2.356693744659424
    3. '(node' → logprob: -5.481693744659424
    4. '_' → logprob: -6.856693744659424
    5. ' ' → logprob: -7.481693744659424
    6. '(root' → logprob: -8.231694221496582
    7. '<|end|>' → logprob: -8.606694221496582
    8. '(space' → logprob: -9.981694221496582
    9. '(parent' → logprob: -10.231694221496582
    10. '(tree' → logprob: -10.356694221496582

Token 36: ',z' (ID: 54920)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004667099565267563
    2. ',node' → logprob: -5.629667282104492
    3. ' ,' → logprob: -7.129667282104492
    4. ',key' → logprob: -8.879667282104492
    5. ',n' → logprob: -9.379667282104492
    6. ')' → logprob: -11.879667282104492
    7. ',T' → logprob: -12.504667282104492
    8. ',p' → logprob: -12.504667282104492
    9. ',x' → logprob: -12.504667282104492
    10. 'root' → logprob: -12.504667282104492

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029799600597471
    2. ')' → logprob: -6.127979755401611
    3. ',' → logprob: -7.752979755401611
    4. ' ):' → logprob: -8.00298023223877
    5. ':' → logprob: -11.25298023223877
    6. ',T' → logprob: -12.62798023223877
    7. '):
' → logprob: -13.00298023223877
    8. ' )' → logprob: -13.62798023223877
    9. ',node' → logprob: -13.87798023223877
    10. ',p' → logprob: -13.87798023223877

Token 38: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.17179536819458
    2. ' if' → logprob: -1.17179536819458
    3. '   ' → logprob: -1.17179536819458
    4. 'if' → logprob: -3.42179536819458
    5. ' i' → logprob: -4.04679536819458
    6. '  ' → logprob: -5.04679536819458
    7. 'i' → logprob: -5.42179536819458
    8. '    ' → logprob: -5.92179536819458
    9. ' )' → logprob: -6.54679536819458
    10. '	if' → logprob: -7.54679536819458

Token 39: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0466591119766235
    2. ' if' → logprob: -1.1716591119766235
    3. 'y' → logprob: -1.5466591119766235
    4. ' ' → logprob: -3.046658992767334
    5. ' None' → logprob: -3.921658992767334
    6. ' y' → logprob: -4.046658992767334
    7. ' T' → logprob: -4.546658992767334
    8. 'i' → logprob: -5.171658992767334
    9. '   ' → logprob: -5.421658992767334
    10. 't' → logprob: -5.921658992767334

Token 40: '=T' (ID: 169455)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03022734262049198
    2. '=' → logprob: -3.5302274227142334
    3. '=T' → logprob: -7.655227184295654
    4. ' ' → logprob: -13.530227661132812
    5. ',' → logprob: -13.780227661132812
    6. '  ' → logprob: -16.030227661132812
    7. ',T' → logprob: -16.155227661132812
    8. '   ' → logprob: -16.905227661132812
    9. '=A' → logprob: -17.280227661132812
    10. '=x' → logprob: -17.280227661132812

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07616256922483444
    2. ':' → logprob: -3.701162576675415
    3. '.' → logprob: -3.826162576675415
    4. 'while' → logprob: -4.826162338256836
    5. 'if' → logprob: -5.326162338256836
    6. ' ,' → logprob: -5.701162338256836
    7. ' ' → logprob: -5.951162338256836
    8. ',None' → logprob: -7.076162338256836
    9. ',p' → logprob: -7.201162338256836
    10. ',y' → logprob: -7.326162338256836

Token 43: ' y' (ID: 342)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32547757029533386
    2. 'y' (adapté à ' y') → logprob: -1.5754776000976562
    3. 'parent' → logprob: -2.9504776000976562
    4. 'None' → logprob: -4.075477600097656
    5. ' while' → logprob: -7.450477600097656
    6. 'p' → logprob: -7.825477600097656
    7. 'if' → logprob: -7.825477600097656
    8. ' None' → logprob: -9.575477600097656
    9. 'x' → logprob: -9.700477600097656
    10. ' y' → logprob: -11.075477600097656

Token 44: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16274116933345795
    2. '=None' → logprob: -1.9127411842346191
    3. ' =' → logprob: -6.037741184234619
    4. ' None' → logprob: -9.412740707397461
    5. 'None' → logprob: -10.037740707397461
    6. '=nil' → logprob: -15.162740707397461
    7. '=

' → logprob: -15.287740707397461
    8. '=NULL' → logprob: -15.287740707397461
    9. '=False' → logprob: -15.412740707397461
    10. '=
' → logprob: -15.912740707397461

Token 45: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15101291239261627
    2. '<|end|>' → logprob: -2.776012897491455
    3. ' while' → logprob: -3.401012897491455
    4. 'while' → logprob: -4.026012897491455
    5. ' 
' → logprob: -4.151012897491455
    6. '  
' → logprob: -5.276012897491455
    7. '	while' → logprob: -6.026012897491455
    8. '<|end|>' → logprob: -7.026012897491455
    9. '	
' → logprob: -7.401012897491455
    10. '    
' → logprob: -7.401012897491455

Token 46: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1348503679037094
    2. ' 
' → logprob: -2.259850263595581
    3. '  
' → logprob: -4.75985050201416
    4. ' while' → logprob: -5.13485050201416
    5. 'while' → logprob: -5.38485050201416
    6. '    
' → logprob: -7.13485050201416
    7. '   
' → logprob: -7.63485050201416
    8. '	while' → logprob: -7.88485050201416
    9. '\n' → logprob: -8.25985050201416
    10. '<|end|>' → logprob: -8.38485050201416

Token 47: ' while' (ID: 2049)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3903903663158417
    2. 'while' (adapté à ' while') → logprob: -1.515390396118164
    3. ' while' → logprob: -2.390390396118164
    4. '<|end|>' → logprob: -5.265390396118164
    5. ' 
' → logprob: -5.765390396118164
    6. '	while' → logprob: -6.265390396118164
    7. 'While' → logprob: -7.640390396118164
    8. '  
' → logprob: -7.890390396118164
    9. '    
' → logprob: -8.265390396118164
    10. '   ' → logprob: -8.515390396118164

Token 48: ' isinstance' (ID: 25889)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0011723674833774567
    2. 'x' → logprob: -6.7511725425720215
    3. ' ' → logprob: -13.501172065734863
    4. '	x' → logprob: -14.376172065734863
    5. ' not' → logprob: -16.62617301940918
    6. '(x' → logprob: -18.12617301940918
    7. ' ' → logprob: -18.62617301940918
    8. '<x' → logprob: -20.12617301940918
    9. ',x' → logprob: -20.25117301940918
    10. '>x' → logprob: -20.75117301940918

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.37501335144043
    3. 'x' → logprob: -13.37501335144043
    4. ' (' → logprob: -15.25001335144043
    5. ' x' → logprob: -16.12501335144043
    6. '(
' → logprob: -19.62501335144043
    7. ',x' → logprob: -19.62501335144043
    8. ')x' → logprob: -20.00001335144043
    9. '<x' → logprob: -20.50001335144043
    10. '	x' → logprob: -20.50001335144043

Token 50: ',node' (ID: 181125)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7214269638061523
    2. ')' → logprob: -1.0964269638061523
    3. ' and' → logprob: -2.3464269638061523
    4. 'and' → logprob: -3.0964269638061523
    5. ' ,' → logprob: -4.096426963806152
    6. ' )' → logprob: -4.346426963806152
    7. '):' → logprob: -5.221426963806152
    8. ',)' → logprob: -6.846426963806152
    9. ' ):' → logprob: -6.971426963806152
    10. 'not' → logprob: -7.596426963806152

Token 51: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08441655337810516
    2. ' )' → logprob: -2.584416627883911
    3. ' and' → logprob: -5.459416389465332
    4. 'and' → logprob: -7.209416389465332
    5. '):' → logprob: -8.209416389465332
    6. ' ):' → logprob: -8.334416389465332
    7. ' ' → logprob: -13.709416389465332
    8. '):
' → logprob: -14.584416389465332
    9. ' ):
' → logprob: -14.959416389465332
    10. ' or' → logprob: -15.459416389465332

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.212425947189331
    2. ':' → logprob: -1.337425947189331
    3. ' and' → logprob: -1.587425947189331
    4. ' ' → logprob: -2.337425947189331
    5. '<|end|>' → logprob: -2.962425947189331
    6. 'and' → logprob: -3.587425947189331
    7. '   ' → logprob: -4.21242618560791
    8. '    ' → logprob: -4.33742618560791
    9. ' :' → logprob: -4.71242618560791
    10. ' x' → logprob: -5.08742618560791

Token 53: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9126434922218323
    2. 'x' → logprob: -1.4126434326171875
    3. 'y' (adapté à ' y') → logprob: -1.6626434326171875
    4. '<|end|>' → logprob: -2.0376434326171875
    5. ' x' → logprob: -4.5376434326171875
    6. ' y' → logprob: -4.7876434326171875
    7. '    ' → logprob: -4.9126434326171875
    8. ' if' → logprob: -6.0376434326171875
    9. 'if' → logprob: -6.1626434326171875
    10. '  ' → logprob: -6.5376434326171875

Token 54: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6986997127532959
    2. ' =' → logprob: -0.6986997127532959
    3. '=x' → logprob: -5.198699951171875
    4. '=y' → logprob: -12.573699951171875
    5. ',' → logprob: -13.323699951171875
    6. '=

' → logprob: -13.323699951171875
    7. ' ' → logprob: -13.573699951171875
    8. '＝' → logprob: -14.073699951171875
    9. '=z' → logprob: -14.073699951171875
    10. '=
' → logprob: -14.323699951171875

Token 55: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0290045738220215
    2. ' ' → logprob: -1.1540045738220215
    3. '<|end|>' → logprob: -2.1540045738220215
    4. ' if' → logprob: -2.2790045738220215
    5. 'x' → logprob: -3.0290045738220215
    6. '    ' → logprob: -3.5290045738220215
    7. '        ' → logprob: -4.4040045738220215
    8. ' 
' → logprob: -5.6540045738220215
    9. ' x' → logprob: -5.6540045738220215
    10. '<|end|>' → logprob: -6.4040045738220215

Token 56: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9647661447525024
    2. '<|end|>' → logprob: -1.0897661447525024
    3. ' if' → logprob: -2.464766025543213
    4. '       ' → logprob: -2.714766025543213
    5. ' ' → logprob: -3.464766025543213
    6. '    ' → logprob: -3.589766025543213
    7. '        ' → logprob: -4.214766025543213
    8. ' 
' → logprob: -4.339766025543213
    9. '        
' → logprob: -4.589766025543213
    10. '
' → logprob: -4.714766025543213

Token 57: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2939525246620178
    2. 'x' → logprob: -2.043952465057373
    3. ' if' → logprob: -2.168952465057373
    4. ' x' → logprob: -5.543952465057373
    5. '       ' → logprob: -5.793952465057373
    6. '    ' → logprob: -6.668952465057373
    7. 'key' → logprob: -7.043952465057373
    8. '        ' → logprob: -7.543952465057373
    9. ' ' → logprob: -8.043952941894531
    10. '   ' → logprob: -8.418952941894531

Token 58: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.016720978543162346
    2. 'z' → logprob: -4.141720771789551
    3. ' ' → logprob: -7.391720771789551
    4. ' ' → logprob: -10.89172077178955
    5. ' 
' → logprob: -10.89172077178955
    6. '	z' → logprob: -11.14172077178955
    7. ' x' → logprob: -11.89172077178955
    8. '    ' → logprob: -12.51672077178955
    9. 'x' → logprob: -13.39172077178955
    10. ' 

' → logprob: -13.89172077178955

Token 59: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00016158436483237892
    2. '.' → logprob: -8.875161170959473
    3. '<' → logprob: -11.750161170959473
    4. 'key' → logprob: -12.000161170959473
    5. '.<' → logprob: -12.375161170959473
    6. ' <' → logprob: -14.125161170959473
    7. ' key' → logprob: -14.250161170959473
    8. ' .' → logprob: -14.375161170959473
    9. '	key' → logprob: -15.375161170959473
    10. '.Key' → logprob: -15.875161170959473

Token 60: '<x' (ID: 152659)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018920281901955605
    2. '<' → logprob: -4.643920421600342
    3. ' >' → logprob: -4.768920421600342
    4. ' <=' → logprob: -8.393919944763184
    5. '>' → logprob: -8.893919944763184
    6. '<|end|>' → logprob: -8.893919944763184
    7. ' >=' → logprob: -9.768919944763184
    8. ' ' → logprob: -10.893919944763184
    9. ' <",' → logprob: -11.018919944763184
    10. '<int' → logprob: -11.268919944763184

Token 61: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -5.0259150157216936e-05
    2. '.' → logprob: -10.00005054473877
    3. 'key' → logprob: -12.50005054473877
    4. ' .' → logprob: -14.37505054473877
    5. ' key' → logprob: -15.75005054473877
    6. '```' → logprob: -16.250049591064453
    7. '	key' → logprob: -16.875049591064453
    8. '.Key' → logprob: -17.375049591064453
    9. ' ' → logprob: -17.500049591064453
    10. ':key' → logprob: -17.625049591064453

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014034447958692908
    2. ' :' → logprob: -7.001403331756592
    3. ':
' → logprob: -8.62640380859375
    4. '<|end|>' → logprob: -8.62640380859375
    5. '       ' → logprob: -9.25140380859375
    6. '<|end|>' → logprob: -12.12640380859375
    7. '        ' → logprob: -12.37640380859375
    8. '):' → logprob: -12.37640380859375
    9. ':return' → logprob: -12.75140380859375
    10. ' else' → logprob: -13.00140380859375

Token 63: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6032962799072266
    2. ' :' → logprob: -0.8532962799072266
    3. ' ' → logprob: -4.853296279907227
    4. '<|end|>' → logprob: -4.978296279907227
    5. '       ' → logprob: -5.478296279907227
    6. '        ' → logprob: -5.603296279907227
    7. ' :
' → logprob: -6.853296279907227
    8. ':
' → logprob: -7.603296279907227
    9. '           ' → logprob: -7.853296279907227
    10. ' 
' → logprob: -8.478296279907227

Token 64: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7139867544174194
    2. 'x' (adapté à ' x') → logprob: -1.2139867544174194
    3. ' x' → logprob: -1.5889867544174194
    4. '<|end|>' → logprob: -5.713986873626709
    5. ' 
' → logprob: -5.838986873626709
    6. '        ' → logprob: -7.213986873626709
    7. '            ' → logprob: -7.713986873626709
    8. '       ' → logprob: -7.838986873626709
    9. '    ' → logprob: -7.963986873626709
    10. '           ' → logprob: -8.46398639678955

Token 65: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06357021629810333
    2. ' =' → logprob: -2.813570261001587
    3. '=x' → logprob: -6.438570022583008
    4. '.left' → logprob: -14.563570022583008
    5. '=
' → logprob: -14.688570022583008
    6. '.' → logprob: -14.688570022583008
    7. '=

' → logprob: -15.188570022583008
    8. '.=' → logprob: -15.313570022583008
    9. '=node' → logprob: -15.563570022583008
    10. '＝' → logprob: -16.063570022583008

Token 66: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0019412499386817217
    2. '.' → logprob: -6.251941204071045
    3. ' .' → logprob: -11.626941680908203
    4. '.right' → logprob: -12.626941680908203
    5. '.Left' → logprob: -15.501941680908203
    6. 'left' → logprob: -17.501941680908203
    7. '.parent' → logprob: -18.001941680908203
    8. '<|end|>' → logprob: -18.126941680908203
    9. '.space' → logprob: -18.251941680908203
    10. '	left' → logprob: -18.626941680908203

Token 67: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.8699387311935425
    2. '       ' → logprob: -1.1199387311935425
    3. 'else' → logprob: -1.3699387311935425
    4. '<|end|>' → logprob: -9.244938850402832
    5. '```' → logprob: -9.369938850402832
    6. '
' → logprob: -9.369938850402832
    7. '	else' → logprob: -9.619938850402832
    8. ' 
' → logprob: -9.869938850402832
    9. 'elif' → logprob: -10.119938850402832
    10. '   ' → logprob: -10.369938850402832

Token 68: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2819337844848633
    2. 'else' → logprob: -1.6569337844848633
    3. '       ' → logprob: -2.9069337844848633
    4. '	else' → logprob: -9.156933784484863
    5. '
' → logprob: -9.906933784484863
    6. '           ' → logprob: -10.156933784484863
    7. '        
' → logprob: -10.781933784484863
    8. '   ' → logprob: -11.031933784484863
    9. '```' → logprob: -11.031933784484863
    10. '            
' → logprob: -11.656933784484863

Token 69: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2528150975704193
    2. 'else' (adapté à ' else') → logprob: -1.5028151273727417
    3. '       ' → logprob: -7.127815246582031
    4. '	else' → logprob: -9.877815246582031
    5. 'elif' → logprob: -11.502815246582031
    6. ' elif' → logprob: -12.127815246582031
    7. ' ' → logprob: -12.627815246582031
    8. '_else' → logprob: -12.752815246582031
    9. '
' → logprob: -13.127815246582031
    10. '```' → logprob: -13.377815246582031

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1973942518234253
    2. ':
' → logprob: -2.072394371032715
    3. '           ' → logprob: -3.072394371032715
    4. ' x' → logprob: -5.322394371032715
    5. '       ' → logprob: -6.947394371032715
    6. ' :
' → logprob: -8.197394371032715
    7. ' :' → logprob: -8.447394371032715
    8. '   ' → logprob: -9.072394371032715
    9. 'x' → logprob: -9.572394371032715
    10. ':

' → logprob: -9.572394371032715

Token 71: '           ' (ID: 352)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.009538732469081879
    2. '           ' → logprob: -5.009538650512695
    3. 'x' → logprob: -5.884538650512695
    4. ' ' → logprob: -11.884538650512695
    5. '```' → logprob: -12.259538650512695
    6. ' ' → logprob: -12.259538650512695
    7. '   ' → logprob: -12.509538650512695
    8. '       ' → logprob: -12.634538650512695
    9. '            ' → logprob: -12.759538650512695
    10. '        ' → logprob: -13.259538650512695

Token 72: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00043162284418940544
    2. ' x' → logprob: -7.750431537628174
    3. '	x' → logprob: -14.750432014465332
    4. '           ' → logprob: -14.875432014465332
    5. '   ' → logprob: -16.250431060791016
    6. '       ' → logprob: -17.375431060791016
    7. '               ' → logprob: -17.875431060791016
    8. '"x' → logprob: -18.250431060791016
    9. ' ' → logprob: -18.375431060791016
    10. '{x' → logprob: -19.375431060791016

Token 73: '=x' (ID: 56980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576921820640564
    2. '=x' → logprob: -0.826921820640564
    3. ' =' → logprob: -6.9519219398498535
    4. '=s' → logprob: -10.951921463012695
    5. '=z' → logprob: -13.951921463012695
    6. '>x' → logprob: -14.451921463012695
    7. '=user' → logprob: -14.701921463012695
    8. '=y' → logprob: -14.701921463012695
    9. '=input' → logprob: -14.826921463012695
    10. '=int' → logprob: -14.826921463012695

Token 74: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.002478273818269372
    2. '.' → logprob: -6.002478122711182
    3. ' .' → logprob: -13.37747859954834
    4. 'right' → logprob: -14.62747859954834
    5. '.left' → logprob: -15.37747859954834
    6. '	right' → logprob: -17.002477645874023
    7. '.r' → logprob: -17.002477645874023
    8. '   ' → logprob: -17.002477645874023
    9. '.Right' → logprob: -17.127477645874023
    10. '.parent' → logprob: -17.377477645874023

Token 75: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18853817880153656
    2. '   ' → logprob: -2.063538074493408
    3. '    
' → logprob: -3.688538074493408
    4. '  
' → logprob: -5.188538074493408
    5. '        
' → logprob: -5.188538074493408
    6. '       ' → logprob: -5.438538074493408
    7. ' 
' → logprob: -6.688538074493408
    8. '   
' → logprob: -6.688538074493408
    9. '
' → logprob: -7.813538074493408
    10. ' y' → logprob: -8.563538551330566

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18789318203926086
    2. '
' → logprob: -2.3128931522369385
    3. '    
' → logprob: -3.3128931522369385
    4. '  
' → logprob: -4.812893390655518
    5. ' y' → logprob: -5.062893390655518
    6. '   
' → logprob: -5.187893390655518
    7. '        
' → logprob: -5.812893390655518
    8. 'y' → logprob: -5.937893390655518
    9. ' 
' → logprob: -6.312893390655518
    10. '       ' → logprob: -6.312893390655518

Token 77: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.09256043285131454
    2. '   ' → logprob: -2.4675605297088623
    3. 'if' → logprob: -5.967560291290283
    4. 'y' → logprob: -7.842560291290283
    5. '       ' → logprob: -8.717560768127441
    6. ' z' → logprob: -8.967560768127441
    7. ' ' → logprob: -9.342560768127441
    8. ' if' → logprob: -9.717560768127441
    9. '    
' → logprob: -10.092560768127441
    10. '  ' → logprob: -10.217560768127441

Token 78: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -2.1888679839321412e-05
    2. '.' → logprob: -10.875021934509277
    3. ' .' → logprob: -13.750021934509277
    4. 'parent' → logprob: -14.375021934509277
    5. '.p' → logprob: -15.125021934509277
    6. '.left' → logprob: -15.250021934509277
    7. '.Parent' → logprob: -15.750021934509277
    8. '.parents' → logprob: -16.12502098083496
    9. ').' → logprob: -16.87502098083496
    10. '.prev' → logprob: -17.00002098083496

Token 79: '=y' (ID: 70421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1646886020898819
    2. '=y' → logprob: -1.9146885871887207
    3. ' =' → logprob: -5.414688587188721
    4. '=z' → logprob: -12.914689064025879
    5. '=

' → logprob: -14.789689064025879
    6. '＝' → logprob: -15.289689064025879
    7. '=
' → logprob: -15.539689064025879
    8. '=x' → logprob: -16.539688110351562
    9. '=j' → logprob: -16.789688110351562
    10. 'y' → logprob: -16.914688110351562

Token 80: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21694950759410858
    2. '<|end|>' → logprob: -2.466949462890625
    3. '```' → logprob: -2.841949462890625
    4. ')' → logprob: -3.966949462890625
    5. ' if' → logprob: -3.966949462890625
    6. 'if' → logprob: -4.716949462890625
    7. ' ' → logprob: -6.841949462890625
    8. '``' → logprob: -6.966949462890625
    9. '<|end|>' → logprob: -7.716949462890625
    10. '       ' → logprob: -7.716949462890625

Token 82: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005008471780456603
    2. '   ' → logprob: -8.375500679016113
    3. ' if' → logprob: -8.750500679016113
    4. '```' → logprob: -9.375500679016113
    5. 'If' → logprob: -11.000500679016113
    6. '       ' → logprob: -12.375500679016113
    7. '`' → logprob: -13.625500679016113
    8. '``' → logprob: -13.750500679016113
    9. '	if' → logprob: -14.500500679016113
    10. '<|end|>' → logprob: -14.500500679016113

Token 83: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.47407954931259155
    2. 'y' → logprob: -0.9740795493125916
    3. ' ' → logprob: -13.724079132080078
    4. '  ' → logprob: -15.224079132080078
    5. 'z' → logprob: -15.349079132080078
    6. ' not' → logprob: -15.349079132080078
    7. '   ' → logprob: -15.599079132080078
    8. 'None' → logprob: -15.849079132080078
    9. ' None' → logprob: -16.099079132080078
    10. ' z' → logprob: -16.599079132080078

Token 84: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014235315844416618
    2. 'is' → logprob: -4.264235496520996
    3. '==' → logprob: -9.639235496520996
    4. ' ==' → logprob: -12.889235496520996
    5. '.is' → logprob: -14.014235496520996
    6. ' ' → logprob: -14.014235496520996
    7. '=' → logprob: -14.514235496520996
    8. '	is' → logprob: -14.889235496520996
    9. '=None' → logprob: -15.139235496520996
    10. ')' → logprob: -15.514235496520996

Token 85: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004078639671206474
    2. ' None' → logprob: -5.5040788650512695
    3. 'none' → logprob: -15.87907886505127
    4. '   ' → logprob: -17.379077911376953
    5. 'not' → logprob: -17.379077911376953
    6. '_None' → logprob: -17.504077911376953
    7. ' ' → logprob: -17.879077911376953
    8. '0' → logprob: -18.754077911376953
    9. '(None' → logprob: -18.879077911376953
    10. 'N' → logprob: -18.879077911376953

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004521222144830972
    2. ':
' → logprob: -8.250452041625977
    3. ' or' → logprob: -9.125452041625977
    4. ':return' → logprob: -10.000452041625977
    5. ' :' → logprob: -11.500452041625977
    6. '       ' → logprob: -11.625452041625977
    7. '<|end|>' → logprob: -12.000452041625977
    8. '   ' → logprob: -12.625452041625977
    9. ':

' → logprob: -12.875452041625977
    10. ':def' → logprob: -13.500452041625977

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43142542243003845
    2. ':' → logprob: -1.0564254522323608
    3. '   ' → logprob: -7.18142557144165
    4. ' T' → logprob: -8.056425094604492
    5. ':return' → logprob: -8.056425094604492
    6. ' :' → logprob: -8.181425094604492
    7. ':
' → logprob: -8.681425094604492
    8. 'T' → logprob: -9.056425094604492
    9. ':T' → logprob: -9.056425094604492
    10. '      ' → logprob: -9.306425094604492

Token 88: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' (adapté à ' T') → logprob: -0.01855982095003128
    2. ' T' → logprob: -4.01855993270874
    3. 'return' → logprob: -8.143559455871582
    4. ' return' → logprob: -9.518559455871582
    5. 'z' → logprob: -10.143559455871582
    6. '   ' → logprob: -12.518559455871582
    7. ' ' → logprob: -13.643559455871582
    8. ' z' → logprob: -14.018559455871582
    9. '  ' → logprob: -15.143559455871582
    10. '    ' → logprob: -15.643559455871582

Token 89: '=z' (ID: 196886)
  Prédit: '=z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=z' → logprob: -0.2529641389846802
    2. '=' → logprob: -1.5029641389846802
    3. ' =' → logprob: -6.877964019775391
    4. '=y' → logprob: -13.12796401977539
    5. ' ' → logprob: -14.50296401977539
    6. '=x' → logprob: -14.75296401977539
    7. ' z' → logprob: -15.00296401977539
    8. '=None' → logprob: -15.62796401977539
    9. '＝' → logprob: -15.62796401977539
    10. 'z' → logprob: -15.87796401977539

Token 90: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.443393737077713
    2. 'else' → logprob: -1.8183937072753906
    3. '   ' → logprob: -1.9433937072753906
    4. ' else' → logprob: -3.8183937072753906
    5. ' elif' → logprob: -3.9433937072753906
    6. '<|end|>' → logprob: -4.943393707275391
    7. '	elif' → logprob: -5.693393707275391
    8. '	else' → logprob: -9.19339370727539
    9. '```' → logprob: -9.31839370727539
    10. '       ' → logprob: -9.31839370727539

Token 91: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.03333074972033501
    2. 'else' → logprob: -4.158330917358398
    3. ' elif' → logprob: -4.408330917358398
    4. '   ' → logprob: -5.783330917358398
    5. ' else' → logprob: -6.908330917358398
    6. '<|end|>' → logprob: -7.783330917358398
    7. '	elif' → logprob: -8.158330917358398
    8. '```' → logprob: -9.533330917358398
    9. ',' → logprob: -10.783330917358398
    10. ':' → logprob: -11.283330917358398

Token 92: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0002892258344218135
    2. 'else' → logprob: -8.750288963317871
    3. ' elif' → logprob: -9.000288963317871
    4. 'el' → logprob: -12.250288963317871
    5. '	elif' → logprob: -14.250288963317871
    6. '   ' → logprob: -14.375288963317871
    7. 'elseif' → logprob: -14.375288963317871
    8. 'e' → logprob: -14.625288963317871
    9. ' else' → logprob: -16.375289916992188
    10. '```' → logprob: -16.625289916992188

Token 93: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2519766092300415
    2. 'z' → logprob: -1.5019766092300415
    3. ' y' → logprob: -10.37697696685791
    4. 'y' → logprob: -11.50197696685791
    5. '   ' → logprob: -13.00197696685791
    6. '    ' → logprob: -13.12697696685791
    7. '	z' → logprob: -14.25197696685791
    8. ' ' → logprob: -14.25197696685791
    9. ' ' → logprob: -15.87697696685791
    10. '  ' → logprob: -16.501976013183594

Token 94: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.735893965815194e-05
    2. '.' → logprob: -11.000017166137695
    3. 'key' → logprob: -15.000017166137695
    4. ' .' → logprob: -16.000017166137695
    5. '<' → logprob: -17.750017166137695
    6. '.Key' → logprob: -17.750017166137695
    7. '.keys' → logprob: -17.875017166137695
    8. '.<' → logprob: -17.875017166137695
    9. ' key' → logprob: -18.125017166137695
    10. '.left' → logprob: -18.125017166137695

Token 95: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6938591003417969
    2. ' <' → logprob: -0.6938591003417969
    3. '<x' → logprob: -7.943859100341797
    4. '<|end|>' → logprob: -9.443859100341797
    5. ' ' → logprob: -10.318859100341797
    6. '<T' → logprob: -10.318859100341797
    7. '<m' → logprob: -10.818859100341797
    8. '<th' → logprob: -10.943859100341797
    9. '<int' → logprob: -11.193859100341797
    10. ' <",' → logprob: -11.318859100341797

Token 96: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002475777640938759
    2. ' y' → logprob: -6.002475738525391
    3. '	y' → logprob: -17.37747573852539
    4. 'y's' → logprob: -18.25247573852539
    5. ' ' → logprob: -18.50247573852539
    6. '(y' → logprob: -19.50247573852539
    7. ''y' → logprob: -19.62747573852539
    8. '<|end|>' → logprob: -19.62747573852539
    9. ')y' → logprob: -19.87747573852539
    10. '  ' → logprob: -20.00247573852539

Token 97: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -9.372294698550832e-06
    2. '.' → logprob: -11.750009536743164
    3. 'key' → logprob: -13.625009536743164
    4. ' .' → logprob: -16.375009536743164
    5. '.left' → logprob: -17.625009536743164
    6. ' key' → logprob: -17.750009536743164
    7. '.Key' → logprob: -17.750009536743164
    8. '[key' → logprob: -18.125009536743164
    9. '.keys' → logprob: -18.375009536743164
    10. ':key' → logprob: -18.375009536743164

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001628956088097766
    2. ':
' → logprob: -9.000163078308105
    3. '):' → logprob: -10.500163078308105
    4. '       ' → logprob: -11.875163078308105
    5. ' :' → logprob: -13.625163078308105
    6. '<|end|>' → logprob: -13.625163078308105
    7. ':**' → logprob: -14.625163078308105
    8. ':return' → logprob: -14.875163078308105
    9. '):
' → logprob: -15.000163078308105
    10. ')' → logprob: -15.625163078308105

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010425115935504436
    2. ' y' → logprob: -4.635425090789795
    3. 'y' → logprob: -7.635425090789795
    4. '<|end|>' → logprob: -10.260425567626953
    5. '   ' → logprob: -10.385425567626953
    6. '           ' → logprob: -10.635425567626953
    7. '        
' → logprob: -11.260425567626953
    8. ':' → logprob: -11.385425567626953
    9. ' ' → logprob: -11.760425567626953
    10. ',y' → logprob: -12.135425567626953

Token 100: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.29681795835494995
    2. 'y' (adapté à ' y') → logprob: -1.4218180179595947
    3. '       ' → logprob: -4.171817779541016
    4. '   ' → logprob: -9.546817779541016
    5. '	y' → logprob: -11.421817779541016
    6. '           ' → logprob: -11.546817779541016
    7. ' ' → logprob: -11.671817779541016
    8. '    ' → logprob: -12.171817779541016
    9. '  ' → logprob: -12.796817779541016
    10. ' ' → logprob: -13.171817779541016

Token 101: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0011847536079585552
    2. '.' → logprob: -6.751184940338135
    3. '.right' → logprob: -11.376184463500977
    4. ' .' → logprob: -13.126184463500977
    5. '.Left' → logprob: -14.251184463500977
    6. '.le' → logprob: -15.751184463500977
    7. '.next' → logprob: -16.751184463500977
    8. '.child' → logprob: -17.251184463500977
    9. '.children' → logprob: -17.626184463500977
    10. 'left' → logprob: -17.876184463500977

Token 102: '=z' (ID: 196886)
  Prédit: '=z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=z' → logprob: -0.4746455252170563
    2. '=' → logprob: -0.9746454954147339
    3. ' =' → logprob: -7.474645614624023
    4. '=y' → logprob: -14.099645614624023
    5. '=x' → logprob: -15.724645614624023
    6. '=
' → logprob: -17.099645614624023
    7. '=

' → logprob: -17.099645614624023
    8. '=q' → logprob: -17.349645614624023
    9. '=v' → logprob: -17.974645614624023
    10. '＝' → logprob: -17.974645614624023

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02411504089832306
    2. 'else' → logprob: -4.024115085601807
    3. ' else' → logprob: -5.149115085601807
    4. '	else' → logprob: -8.899114608764648
    5. '```' → logprob: -13.774114608764648
    6. '_else' → logprob: -13.899114608764648
    7. '<|end|>' → logprob: -14.024114608764648
    8. '    
' → logprob: -14.399114608764648
    9. ':' → logprob: -14.524114608764648
    10. '       ' → logprob: -14.774114608764648

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030885959044098854
    2. 'else' → logprob: -3.655885934829712
    3. ' else' → logprob: -5.405886173248291
    4. '	else' → logprob: -9.405885696411133
    5. '_else' → logprob: -13.905885696411133
    6. ':' → logprob: -14.905885696411133
    7. '       ' → logprob: -14.905885696411133
    8. '```' → logprob: -15.155885696411133
    9. '    
' → logprob: -15.655885696411133
    10. '  ' → logprob: -15.655885696411133

Token 105: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20700609683990479
    2. ' else' → logprob: -1.7070060968399048
    3. '   ' → logprob: -5.207005977630615
    4. '	else' → logprob: -9.332006454467773
    5. '_else' → logprob: -12.582006454467773
    6. 'e' → logprob: -13.207006454467773
    7. ' ' → logprob: -13.707006454467773
    8. ':' → logprob: -13.832006454467773
    9. 'els' → logprob: -14.332006454467773
    10. '       ' → logprob: -14.457006454467773

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3499123156070709
    2. '       ' → logprob: -1.2249122858047485
    3. ':
' → logprob: -6.599912166595459
    4. '   ' → logprob: -10.349912643432617
    5. '           ' → logprob: -10.599912643432617
    6. ' :' → logprob: -11.099912643432617
    7. ':
' → logprob: -11.099912643432617
    8. ' y' → logprob: -12.224912643432617
    9. ':

' → logprob: -13.099912643432617
    10. '{' → logprob: -13.099912643432617

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3517472445964813
    2. ' y' → logprob: -1.2267472743988037
    3. ' z' → logprob: -6.226747035980225
    4. 'y' → logprob: -6.976747035980225
    5. 'z' → logprob: -8.726747512817383
    6. '           ' → logprob: -9.101747512817383
    7. '   ' → logprob: -9.726747512817383
    8. ' ' → logprob: -10.851747512817383
    9. ' ' → logprob: -11.976747512817383
    10. '    ' → logprob: -12.226747512817383

Token 108: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.005234002135694027
    2. ' y' → logprob: -5.2552337646484375
    3. '       ' → logprob: -15.755233764648438
    4. '	y' → logprob: -16.880233764648438
    5. '   ' → logprob: -17.380233764648438
    6. 'z' → logprob: -17.755233764648438
    7. ''y' → logprob: -18.630233764648438
    8. 'y's' → logprob: -18.755233764648438
    9. ')y' → logprob: -18.880233764648438
    10. 'yj' → logprob: -19.755233764648438

Token 109: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0019324433524161577
    2. '.' → logprob: -6.251932621002197
    3. ' .' → logprob: -12.876932144165039
    4. '.left' → logprob: -13.876932144165039
    5. '.Right' → logprob: -15.251932144165039
    6. '.r' → logprob: -16.62693214416504
    7. '>.' → logprob: -17.25193214416504
    8. '   ' → logprob: -18.00193214416504
    9. '	right' → logprob: -18.00193214416504
    10. 'right' → logprob: -18.37693214416504

Token 110: '=z' (ID: 196886)
  Prédit: '=z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=z' → logprob: -0.00534523231908679
    2. '=' → logprob: -5.255345344543457
    3. ' =' → logprob: -9.130345344543457
    4. 'z' → logprob: -13.255345344543457
    5. '=x' → logprob: -15.005345344543457
    6. '=y' → logprob: -15.255345344543457
    7. '=
' → logprob: -15.505345344543457
    8. '(z' → logprob: -16.25534439086914
    9. '	z' → logprob: -16.38034439086914
    10. '   ' → logprob: -16.75534439086914

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05280469357967377
    2. '
' → logprob: -3.552804708480835
    3. 'return' → logprob: -4.677804470062256
    4. '    
' → logprob: -5.552804470062256
    5. ' return' → logprob: -5.677804470062256
    6. '<|end|>' → logprob: -5.927804470062256
    7. '\n' → logprob: -7.427804470062256
    8. 'def' → logprob: -7.552804470062256
    9. '	return' → logprob: -7.677804470062256
    10. '
' → logprob: -8.052804946899414

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026212628930807114
    2. 'return' → logprob: -4.526212692260742
    3. '    
' → logprob: -5.526212692260742
    4. ' return' → logprob: -5.901212692260742
    5. '<|end|>' → logprob: -6.401212692260742
    6. ' ' → logprob: -6.526212692260742
    7. 'def' → logprob: -6.901212692260742
    8. '    ' → logprob: -7.151212692260742
    9. '  ' → logprob: -7.151212692260742
    10. '\n' → logprob: -7.651212692260742

Token 113: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009144146926701069
    2. ' return' → logprob: -4.884144306182861
    3. '   ' → logprob: -6.509144306182861
    4. 'def' → logprob: -10.384143829345703
    5. '	return' → logprob: -12.134143829345703
    6. ':return' → logprob: -12.384143829345703
    7. '  ' → logprob: -13.759143829345703
    8. '{return' → logprob: -13.759143829345703
    9. '```' → logprob: -14.009143829345703
    10. ' ' → logprob: -14.134143829345703

Token 114: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.16027957201004028
    2. ' T' → logprob: -1.9102795124053955
    3. 'y' → logprob: -11.535279273986816
    4. ' ' → logprob: -11.535279273986816
    5. ' y' → logprob: -11.535279273986816
    6. 'True' → logprob: -12.035279273986816
    7. 'z' → logprob: -12.160279273986816
    8. ' ' → logprob: -12.660279273986816
    9. '(T' → logprob: -13.035279273986816
    10. ' True' → logprob: -13.160279273986816

Token 115: '
        
' (ID: 20417)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4380362033843994
    2. '
' → logprob: -1.6880362033843994
    3. '#' → logprob: -2.1880362033843994
    4. 'd' → logprob: -4.18803596496582
    5. 'n' → logprob: -4.43803596496582
    6. '' → logprob: -5.18803596496582
    7. '

' → logprob: -5.56303596496582
    8. ' ' → logprob: -5.68803596496582
    9. ' 
' → logprob: -5.81303596496582
    10. '[' → logprob: -6.06303596496582

Token 116: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14179611206054688
    2. '#' → logprob: -2.641796112060547
    3. 'd' → logprob: -3.891796112060547
    4. 'n' → logprob: -4.641796112060547
    5. 'class' → logprob: -4.641796112060547
    6. ' ' → logprob: -5.516796112060547
    7. ' 
' → logprob: -5.766796112060547
    8. '
' → logprob: -5.766796112060547
    9. '[' → logprob: -6.016796112060547
    10. 'T' → logprob: -6.391796112060547

Token 117: ' preorder' (ID: 152292)
  Prédit: ' inorder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inorder' → logprob: -0.5066695809364319
    2. 'search' → logprob: -1.881669521331787
    3. ' search' → logprob: -2.131669521331787
    4. 'in' → logprob: -2.381669521331787
    5. ' tree' → logprob: -4.006669521331787
    6. ' in' → logprob: -5.381669521331787
    7. 'tree' → logprob: -5.506669521331787
    8. ' transplant' → logprob: -6.381669521331787
    9. ' find' → logprob: -7.131669521331787
    10. ' preorder' → logprob: -7.131669521331787

Token 118: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3538503348827362
    2. '(T' → logprob: -1.3538503646850586
    3. '(root' → logprob: -3.9788503646850586
    4. 'Traversal' → logprob: -4.978850364685059
    5. '(node' → logprob: -5.228850364685059
    6. '(tree' → logprob: -5.228850364685059
    7. '(Tree' → logprob: -6.728850364685059
    8. '_' → logprob: -7.103850364685059
    9. '_tr' → logprob: -7.353850364685059
    10. ' traversal' → logprob: -7.853850364685059

Token 119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001057698973454535
    2. ')' → logprob: -7.6260576248168945
    3. ',' → logprob: -8.501057624816895
    4. ' ):' → logprob: -8.626057624816895
    5. '):
' → logprob: -8.876057624816895
    6. ',u' → logprob: -10.751057624816895
    7. ':' → logprob: -11.001057624816895
    8. 'u' → logprob: -12.626057624816895
    9. '   ' → logprob: -13.751057624816895
    10. ',node' → logprob: -14.376057624816895

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011067868210375309
    2. ' if' → logprob: -4.511067867279053
    3. 'if' → logprob: -11.511068344116211
    4. '	if' → logprob: -11.761068344116211
    5. '    
' → logprob: -14.136068344116211
    6. '   ' → logprob: -14.386068344116211
    7. ' print' → logprob: -14.636068344116211
    8. '    ' → logprob: -15.761068344116211
    9. '```' → logprob: -16.13606834411621
    10. '       ' → logprob: -16.13606834411621

Token 121: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008793135173618793
    2. ' if' → logprob: -4.758793354034424
    3. 'print' → logprob: -8.883792877197266
    4. '   ' → logprob: -10.133792877197266
    5. ' print' → logprob: -15.758792877197266
    6. '```' → logprob: -16.133792877197266
    7. '    ' → logprob: -17.133792877197266
    8. '	if' → logprob: -17.258792877197266
    9. '    
' → logprob: -17.508792877197266
    10. ' ' → logprob: -18.258792877197266

Token 122: ' not' (ID: 625)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04860338568687439
    2. ' u' → logprob: -3.0486032962799072
    3. ' isinstance' → logprob: -11.923603057861328
    4. 'is' → logprob: -12.423603057861328
    5. '	u' → logprob: -12.673603057861328
    6. '   ' → logprob: -14.298603057861328
    7. 'not' → logprob: -14.298603057861328
    8. ' ' → logprob: -14.923603057861328
    9. ' not' → logprob: -15.173603057861328
    10. '(u' → logprob: -15.298603057861328

Token 123: ' isinstance' (ID: 25889)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6932814717292786
    2. ' u' → logprob: -0.6932814717292786
    3. ' isinstance' → logprob: -9.443281173706055
    4. '(u' → logprob: -10.193281173706055
    5. '	u' → logprob: -11.318281173706055
    6. '   ' → logprob: -13.443281173706055
    7. ' ' → logprob: -13.818281173706055
    8. 'is' → logprob: -14.568281173706055
    9. 'None' → logprob: -14.693281173706055
    10. '[u' → logprob: -14.943281173706055

Token 124: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.2200749754119897e-06
    2. 'u' → logprob: -13.250001907348633
    3. '(' → logprob: -14.750001907348633
    4. ' (' → logprob: -17.375001907348633
    5. ' u' → logprob: -17.500001907348633
    6. '(node' → logprob: -18.875001907348633
    7. '	u' → logprob: -19.500001907348633
    8. ',u' → logprob: -20.000001907348633
    9. '[u' → logprob: -20.750001907348633
    10. '(user' → logprob: -21.000001907348633

Token 125: ',node' (ID: 181125)
  Prédit: ',node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',node' → logprob: -0.0005539863486774266
    2. ',' → logprob: -7.500554084777832
    3. ',None' → logprob: -14.500554084777832
    4. ' ,' → logprob: -15.000554084777832
    5. '(node' → logprob: -16.625553131103516
    6. ',int' → logprob: -17.000553131103516
    7. 'node' → logprob: -18.375553131103516
    8. ',module' → logprob: -18.625553131103516
    9. ',(' → logprob: -18.875553131103516
    10. ',bool' → logprob: -19.250553131103516

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.042261019349098206
    2. '):
' → logprob: -3.5422611236572266
    3. ')' → logprob: -4.417261123657227
    4. ':' → logprob: -8.542261123657227
    5. ' ):' → logprob: -9.167261123657227
    6. ' or' → logprob: -9.917261123657227
    7. '   ' → logprob: -12.417261123657227
    8. ' ):
' → logprob: -12.667261123657227
    9. '):
' → logprob: -12.917261123657227
    10. ' )' → logprob: -13.042261123657227

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26166579127311707
    2. '   ' → logprob: -2.0116658210754395
    3. ':' → logprob: -2.5116658210754395
    4. ':
' → logprob: -5.1366658210754395
    5. '
' → logprob: -5.8866658210754395
    6. ':return' → logprob: -6.0116658210754395
    7. '    
' → logprob: -6.8866658210754395
    8. 'print' → logprob: -7.0116658210754395
    9. ' return' → logprob: -7.6366658210754395
    10. ' print' → logprob: -7.8866658210754395

Token 128: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06394870579242706
    2. 'return' (adapté à ' return') → logprob: -2.813948631286621
    3. '   ' → logprob: -6.313948631286621
    4. '
' → logprob: -9.063948631286621
    5. ':return' → logprob: -10.938948631286621
    6. '	return' → logprob: -11.188948631286621
    7. ' 
' → logprob: -11.938948631286621
    8. '    ' → logprob: -12.063948631286621
    9. ' ' → logprob: -12.938948631286621
    10. '       ' → logprob: -13.063948631286621

Token 129: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30305370688438416
    2. ' print' → logprob: -1.8030537366867065
    3. '
' → logprob: -3.303053617477417
    4. '    
' → logprob: -3.803053617477417
    5. ' 
' → logprob: -3.928053617477417
    6. 'print' → logprob: -4.553053855895996
    7. ' ' → logprob: -6.053053855895996
    8. '  
' → logprob: -6.428053855895996
    9. ' u' → logprob: -7.178053855895996
    10. '    ' → logprob: -7.303053855895996

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034710176289081573
    2. ' print' → logprob: -3.909710168838501
    3. 'print' → logprob: -4.90971040725708
    4. '
' → logprob: -5.78471040725708
    5. '    
' → logprob: -5.78471040725708
    6. '	print' → logprob: -8.659709930419922
    7. ' 
' → logprob: -8.909709930419922
    8. '  
' → logprob: -10.659709930419922
    9. '    ' → logprob: -10.784709930419922
    10. ' u' → logprob: -10.909709930419922

Token 131: ' prip' (ID: 37697)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05792867764830589
    2. ' print' → logprob: -2.9329285621643066
    3. '   ' → logprob: -5.807928562164307
    4. '
' → logprob: -10.557929039001465
    5. '    
' → logprob: -12.432929039001465
    6. '	print' → logprob: -13.057929039001465
    7. ' 
' → logprob: -13.682929039001465
    8. '    ' → logprob: -13.807929039001465
    9. '```' → logprob: -14.182929039001465
    10. '.print' → logprob: -14.807929039001465

Token 132: 're' (ID: 264)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.18167313933372498
    2. 'nt' → logprob: -1.8066731691360474
    3. 'int' → logprob: -7.056673049926758
    4. 'rt' → logprob: -7.556673049926758
    5. 't' → logprob: -8.056673049926758
    6. '   ' → logprob: -9.681673049926758
    7. ' r' → logprob: -10.306673049926758
    8. 'rit' → logprob: -10.556673049926758
    9. 'rn' → logprob: -10.556673049926758
    10. 'n' → logprob: -11.431673049926758

Token 133: '.append' (ID: 3709)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3434276580810547
    2. 'nt' → logprob: -1.4684276580810547
    3. 'order' → logprob: -2.8434276580810547
    4. 'ord' → logprob: -7.718427658081055
    5. 'n' → logprob: -7.843427658081055
    6. 'int' → logprob: -8.093427658081055
    7. 't' → logprob: -8.468427658081055
    8. 'def' → logprob: -8.593427658081055
    9. 'print' → logprob: -8.718427658081055
    10. 'node' → logprob: -9.343427658081055

Token 134: '(str' (ID: 7946)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0005545823951251805
    2. '(' → logprob: -7.50055456161499
    3. 'u' → logprob: -14.125555038452148
    4. '('' → logprob: -14.875555038452148
    5. '((' → logprob: -14.875555038452148
    6. '(
' → logprob: -16.75055503845215
    7. '("("' → logprob: -17.00055503845215
    8. '(U' → logprob: -18.12555503845215
    9. ' u' → logprob: -18.75055503845215
    10. ' (' → logprob: -19.12555503845215

Token 135: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0003357006062287837
    2. '(' → logprob: -8.000335693359375
    3. '(
' → logprob: -16.250335693359375
    4. '((' → logprob: -16.875335693359375
    5. 'u' → logprob: -17.250335693359375
    6. ' (' → logprob: -18.000335693359375
    7. '('' → logprob: -18.500335693359375
    8. '(x' → logprob: -18.625335693359375
    9. ' u' → logprob: -19.000335693359375
    10. '(U' → logprob: -19.125335693359375

Token 136: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -4.024604277219623e-05
    2. '.' → logprob: -10.375040054321289
    3. '".' → logprob: -12.750040054321289
    4. ').' → logprob: -12.875040054321289
    5. ' .' → logprob: -13.500040054321289
    6. 'key' → logprob: -14.250040054321289
    7. ''.' → logprob: -15.250040054321289
    8. ')' → logprob: -15.500040054321289
    9. '"."' → logprob: -15.875040054321289
    10. ' ' → logprob: -16.00004005432129

Token 137: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011695466935634613
    2. '))' → logprob: -4.761695384979248
    3. ')
' → logprob: -6.011695384979248
    4. ')+' → logprob: -8.261695861816406
    5. '+' → logprob: -8.886695861816406
    6. ' )' → logprob: -9.636695861816406
    7. '+)' → logprob: -10.011695861816406
    8. '))
' → logprob: -10.136695861816406
    9. '   ' → logprob: -10.136695861816406
    10. ')+'' → logprob: -11.886695861816406

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0740988552570343
    2. 'pre' → logprob: -3.574098825454712
    3. '
' → logprob: -3.824098825454712
    4. '    
' → logprob: -4.449099063873291
    5. ' preorder' → logprob: -5.074099063873291
    6. '	pre' → logprob: -6.699099063873291
    7. 'pr' → logprob: -7.324099063873291
    8. '  
' → logprob: -7.824099063873291
    9. ' 
' → logprob: -8.324098587036133
    10. '  ' → logprob: -8.699098587036133

Token 139: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.08784793317317963
    2. ' preorder' → logprob: -3.212847948074341
    3. 'if' → logprob: -4.087847709655762
    4. 'pr' → logprob: -4.587847709655762
    5. 'for' → logprob: -5.462847709655762
    6. ' if' → logprob: -5.462847709655762
    7. '   ' → logprob: -5.712847709655762
    8. '    
' → logprob: -6.462847709655762
    9. ' for' → logprob: -6.712847709655762
    10. '
' → logprob: -6.837847709655762

Token 140: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.005245733540505171
    2. '(' → logprob: -5.255245685577393
    3. '(x' → logprob: -12.50524616241455
    4. '(node' → logprob: -12.63024616241455
    5. '(left' → logprob: -12.88024616241455
    6. '((' → logprob: -14.00524616241455
    7. '(user' → logprob: -14.63024616241455
    8. '('' → logprob: -14.88024616241455
    9. ' (' → logprob: -16.005245208740234
    10. '(s' → logprob: -16.130245208740234

Token 141: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.003036536043509841
    2. '.' → logprob: -5.8780364990234375
    3. '.right' → logprob: -8.878036499023438
    4. ' .' → logprob: -9.503036499023438
    5. ').' → logprob: -11.878036499023438
    6. '.Left' → logprob: -12.253036499023438
    7. '.u' → logprob: -12.503036499023438
    8. ')' → logprob: -13.628036499023438
    9. '.user' → logprob: -15.878036499023438
    10. ' ' → logprob: -16.003036499023438

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019515875028446317
    2. ')
' → logprob: -6.251951694488525
    3. '   ' → logprob: -10.751951217651367
    4. ' )' → logprob: -14.001951217651367
    5. ')
' → logprob: -14.751951217651367
    6. ')

' → logprob: -15.751951217651367
    7. '())' → logprob: -16.876951217651367
    8. '()' → logprob: -17.376951217651367
    9. ')#' → logprob: -17.376951217651367
    10. '),' → logprob: -17.501951217651367

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013171293772757053
    2. 'pre' → logprob: -4.638171195983887
    3. '(pre' → logprob: -6.513171195983887
    4. ' preorder' → logprob: -6.888171195983887
    5. '	pre' → logprob: -7.388171195983887
    6. ' pre' → logprob: -9.263171195983887
    7. '
' → logprob: -9.888171195983887
    8. '<|end|>' → logprob: -10.763171195983887
    9. '    
' → logprob: -10.888171195983887
    10. '_pre' → logprob: -11.138171195983887

Token 144: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.008617172949016094
    2. ' preorder' → logprob: -4.758617401123047
    3. ' pre' → logprob: -13.633617401123047
    4. '	pre' → logprob: -14.508617401123047
    5. '   ' → logprob: -15.258617401123047
    6. 'preced' → logprob: -15.508617401123047
    7. '(pre' → logprob: -15.508617401123047
    8. 'pr' → logprob: -15.508617401123047
    9. 'post' → logprob: -17.008617401123047
    10. 'order' → logprob: -17.008617401123047

Token 145: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0007101670489646494
    2. '(' → logprob: -7.2507100105285645
    3. '(x' → logprob: -17.000709533691406
    4. 'u' → logprob: -17.125709533691406
    5. '(
' → logprob: -17.375709533691406
    6. '(user' → logprob: -17.625709533691406
    7. ' (' → logprob: -18.125709533691406
    8. '(U' → logprob: -18.375709533691406
    9. '(node' → logprob: -18.500709533691406
    10. '(right' → logprob: -18.625709533691406

Token 146: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00026741522015072405
    2. '.' → logprob: -8.250267028808594
    3. ')' → logprob: -12.875267028808594
    4. 'right' → logprob: -13.250267028808594
    5. '.left' → logprob: -14.000267028808594
    6. ' .' → logprob: -14.750267028808594
    7. ').' → logprob: -15.250267028808594
    8. '.Right' → logprob: -15.875267028808594
    9. '.u' → logprob: -17.000267028808594
    10. '	right' → logprob: -17.125267028808594

Token 147: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1782583391759545e-05
    2. ')
' → logprob: -10.375031471252441
    3. ' )' → logprob: -15.125031471252441
    4. '   ' → logprob: -16.000032424926758
    5. ')

' → logprob: -17.000032424926758
    6. ')return' → logprob: -17.375032424926758
    7. '())' → logprob: -18.000032424926758
    8. ')`' → logprob: -18.125032424926758
    9. '()' → logprob: -18.250032424926758
    10. '))' → logprob: -18.375032424926758

Token 148: 'def' (ID: 1314)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.9298259019851685
    2. 'p' → logprob: -1.0548259019851685
    3. 'pr' → logprob: -1.4298259019851685
    4. '#' → logprob: -4.679825782775879
    5. 't' → logprob: -6.554825782775879
    6. 'def' → logprob: -6.804825782775879
    7. ' ' → logprob: -6.929825782775879
    8. ' 
' → logprob: -7.054825782775879
    9. '
' → logprob: -7.304825782775879
    10. '  
' → logprob: -7.554825782775879

Token 149: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5951269268989563
    2. ' inorder' → logprob: -0.8451269268989563
    3. 'post' → logprob: -4.470127105712891
    4. 'main' → logprob: -6.220127105712891
    5. ' post' → logprob: -6.470127105712891
    6. 'insert' → logprob: -6.720127105712891
    7. ' in' → logprob: -7.220127105712891
    8. ' main' → logprob: -7.720127105712891
    9. 'build' → logprob: -7.970127105712891
    10. 'pre' → logprob: -8.34512710571289

Token 150: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.00029756641015410423
    2. '(' → logprob: -8.125297546386719
    3. 'def' → logprob: -14.125297546386719
    4. '(def' → logprob: -15.750297546386719
    5. '(n' → logprob: -16.12529754638672
    6. ' (' → logprob: -16.37529754638672
    7. '(i' → logprob: -16.50029754638672
    8. '(node' → logprob: -17.00029754638672
    9. '(root' → logprob: -17.12529754638672
    10. ' def' → logprob: -17.12529754638672

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015542486682534218
    2. '):
' → logprob: -4.390542507171631
    3. '(u' → logprob: -6.015542507171631
    4. ')' → logprob: -7.515542507171631
    5. '   ' → logprob: -11.140542030334473
    6. '):
' → logprob: -11.390542030334473
    7. ' ):' → logprob: -11.765542030334473
    8. 'u' → logprob: -12.640542030334473
    9. '):

' → logprob: -13.140542030334473
    10. ',u' → logprob: -13.515542030334473

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005964699666947126
    2. ' if' → logprob: -5.130964756011963
    3. 'if' → logprob: -10.505964279174805
    4. '	if' → logprob: -12.005964279174805
    5. '    
' → logprob: -14.630964279174805
    6. '   ' → logprob: -14.755964279174805
    7. '       ' → logprob: -14.880964279174805
    8. ',' → logprob: -15.005964279174805
    9. '<|end|>' → logprob: -15.005964279174805
    10. ' ' → logprob: -15.255964279174805

Token 153: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008635842241346836
    2. ' if' → logprob: -4.758635997772217
    3. '   ' → logprob: -10.758635520935059
    4. ' ' → logprob: -19.758636474609375
    5. '	if' → logprob: -19.758636474609375
    6. '```' → logprob: -19.758636474609375
    7. 'If' → logprob: -21.758636474609375
    8. '  ' → logprob: -22.383636474609375
    9. '
' → logprob: -22.883636474609375
    10. '``' → logprob: -24.008636474609375

Token 154: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029751067981123924
    2. 'not' → logprob: -3.5297510623931885
    3. '(not' → logprob: -14.90475082397461
    4. 'u' → logprob: -16.52975082397461
    5. ' isinstance' → logprob: -17.15475082397461
    6. '	not' → logprob: -17.27975082397461
    7. ' u' → logprob: -17.77975082397461
    8. ' ' → logprob: -19.02975082397461
    9. '_not' → logprob: -19.15475082397461
    10. 'is' → logprob: -19.15475082397461

Token 155: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.25193241238594055
    2. ' isinstance' → logprob: -1.5019323825836182
    3. '(is' → logprob: -12.751932144165039
    4. '   ' → logprob: -16.25193214416504
    5. ' ' → logprob: -16.25193214416504
    6. '  ' → logprob: -16.50193214416504
    7. 'not' → logprob: -17.00193214416504
    8. 'typeof' → logprob: -17.12693214416504
    9. 'type' → logprob: -17.50193214416504
    10. 'u' → logprob: -17.87693214416504

Token 156: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.7252845029579476e-05
    2. 'u' → logprob: -10.750027656555176
    3. ' (' → logprob: -12.750027656555176
    4. ' u' → logprob: -13.375027656555176
    5. '(' → logprob: -13.875027656555176
    6. '<|end|>' → logprob: -15.500027656555176
    7. '(node' → logprob: -16.12502670288086
    8. '(user' → logprob: -16.87502670288086
    9. '[u' → logprob: -17.62502670288086
    10. '	u' → logprob: -17.87502670288086

Token 157: ',node' (ID: 181125)
  Prédit: ',node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',node' → logprob: -7.624555291840807e-05
    2. 'node' → logprob: -10.500076293945312
    3. '(node' → logprob: -10.500076293945312
    4. ',' → logprob: -11.375076293945312
    5. ',u' → logprob: -11.750076293945312
    6. '[node' → logprob: -14.375076293945312
    7. ',user' → logprob: -15.000076293945312
    8. 'u' → logprob: -15.000076293945312
    9. '.node' → logprob: -15.375076293945312
    10. ',key' → logprob: -16.125076293945312

Token 158: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018337000161409378
    2. '):' → logprob: -4.018336772918701
    3. '   ' → logprob: -9.26833724975586
    4. ':
' → logprob: -10.64333724975586
    5. '):
' → logprob: -10.76833724975586
    6. '       ' → logprob: -11.14333724975586
    7. ':' → logprob: -11.26833724975586
    8. 'u' → logprob: -11.64333724975586
    9. ')' → logprob: -11.89333724975586
    10. '):

' → logprob: -12.64333724975586

Token 159: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28129610419273376
    2. '       ' → logprob: -1.4062961339950562
    3. '  ' → logprob: -10.406295776367188
    4. '    ' → logprob: -10.781295776367188
    5. ' return' → logprob: -10.781295776367188
    6. 'return' → logprob: -10.781295776367188
    7. ' ' → logprob: -11.281295776367188
    8. '
' → logprob: -11.406295776367188
    9. '     ' → logprob: -12.281295776367188
    10. '   ' → logprob: -12.281295776367188

Token 160: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.41325265169143677
    2. ' return' → logprob: -1.163252592086792
    3. '   ' → logprob: -3.663252592086792
    4. '       ' → logprob: -7.913252830505371
    5. ' ' → logprob: -11.538252830505371
    6. '  ' → logprob: -12.163252830505371
    7. '	return' → logprob: -12.913252830505371
    8. ':return' → logprob: -13.288252830505371
    9. '    ' → logprob: -13.663252830505371
    10. '{return' → logprob: -14.663252830505371

Token 161: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0030327325221151114
    2. '
' → logprob: -6.128032684326172
    3. '	pr' → logprob: -7.628032684326172
    4. '    
' → logprob: -9.378032684326172
    5. 'pr' → logprob: -9.628032684326172
    6. '    ' → logprob: -10.003032684326172
    7. '  ' → logprob: -10.253032684326172
    8. '       ' → logprob: -10.378032684326172
    9. ' pr' → logprob: -10.378032684326172
    10. '   ' → logprob: -10.628032684326172

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00025680975522845984
    2. '	pr' → logprob: -9.500256538391113
    3. '  ' → logprob: -10.375256538391113
    4. ' ' → logprob: -10.375256538391113
    5. 'in' → logprob: -10.625256538391113
    6. 'pr' → logprob: -10.750256538391113
    7. ' pr' → logprob: -10.875256538391113
    8. '       ' → logprob: -11.500256538391113
    9. '    
' → logprob: -11.500256538391113
    10. '   ' → logprob: -11.750256538391113

Token 163: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0007555469055660069
    2. '   ' → logprob: -8.125755310058594
    3. 'pr' → logprob: -8.250755310058594
    4. ' inorder' → logprob: -8.875755310058594
    5. '	in' → logprob: -11.125755310058594
    6. ' in' → logprob: -11.750755310058594
    7. '  ' → logprob: -11.875755310058594
    8. 'print' → logprob: -12.625755310058594
    9. ' ' → logprob: -12.750755310058594
    10. '    ' → logprob: -12.875755310058594

Token 164: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.625001907348633
    3. ' (' → logprob: -15.375001907348633
    4. '(user' → logprob: -16.250001907348633
    5. '(node' → logprob: -17.500001907348633
    6. '(left' → logprob: -18.000001907348633
    7. '(s' → logprob: -18.375001907348633
    8. '(x' → logprob: -18.500001907348633
    9. '(U' → logprob: -18.625001907348633
    10. '(a' → logprob: -19.625001907348633

Token 165: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.010012827813625336
    2. '(u' → logprob: -5.010012626647949
    3. '.u' → logprob: -6.010012626647949
    4. '.' → logprob: -7.135012626647949
    5. ')' → logprob: -11.13501262664795
    6. 'left' → logprob: -11.38501262664795
    7. '.right' → logprob: -12.26001262664795
    8. ' .' → logprob: -12.76001262664795
    9. '.Left' → logprob: -12.88501262664795
    10. ').' → logprob: -13.76001262664795

Token 166: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5263800621032715
    2. '   ' → logprob: -1.5263800621032715
    3. ')' → logprob: -1.6513800621032715
    4. '()
' → logprob: -9.65138053894043
    5. '()' → logprob: -10.15138053894043
    6. 'pr' → logprob: -10.65138053894043
    7. ')
' → logprob: -11.90138053894043
    8. '())
' → logprob: -12.65138053894043
    9. ' )
' → logprob: -12.90138053894043
    10. '(pr' → logprob: -13.02638053894043

Token 167: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011258839629590511
    2. 'pr' → logprob: -5.011258602142334
    3. 'in' → logprob: -5.636258602142334
    4. '	pr' → logprob: -8.011259078979492
    5. ' pr' → logprob: -8.761259078979492
    6. '    
' → logprob: -8.886259078979492
    7. '  ' → logprob: -9.886259078979492
    8. '
' → logprob: -9.886259078979492
    9. ' inorder' → logprob: -9.886259078979492
    10. 'print' → logprob: -10.011259078979492

Token 168: ' pri' (ID: 12874)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0013866664376109838
    2. 'in' → logprob: -7.376386642456055
    3. 'print' → logprob: -7.501386642456055
    4. 'ipr' → logprob: -9.001386642456055
    5. '   ' → logprob: -10.626386642456055
    6. 'ip' → logprob: -10.626386642456055
    7. 'pri' (adapté à ' pri') → logprob: -11.626386642456055
    8. 'im' → logprob: -11.626386642456055
    9. '	pr' → logprob: -11.751386642456055
    10. ' prip' → logprob: -13.626386642456055

Token 169: 'in' (ID: 258)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.06901028007268906
    2. 'n' → logprob: -3.0690102577209473
    3. 'pr' → logprob: -4.819010257720947
    4. 'pri' → logprob: -5.069010257720947
    5. 'print' → logprob: -5.819010257720947
    6. 'in' → logprob: -6.194010257720947
    7. 'prep' → logprob: -8.319010734558105
    8. 'p' → logprob: -8.569010734558105
    9. 'nt' → logprob: -9.069010734558105
    10. 'prepend' → logprob: -9.819010734558105

Token 170: '.append' (ID: 3709)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.11334057152271271
    2. 'pr' → logprob: -2.9883406162261963
    3. 'pre' → logprob: -3.4883406162261963
    4. 'append' → logprob: -4.113340377807617
    5. 'n' → logprob: -5.238340377807617
    6. '.append' → logprob: -6.613340377807617
    7. 'p' → logprob: -6.738340377807617
    8. 'nt' → logprob: -7.988340377807617
    9. 'pri' → logprob: -8.238340377807617
    10. 'r' → logprob: -8.738340377807617

Token 171: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.00016897499153856188
    2. 'str' → logprob: -8.750168800354004
    3. '(u' → logprob: -11.500168800354004
    4. '(' → logprob: -15.250168800354004
    5. ' str' → logprob: -17.00016975402832
    6. '(s' → logprob: -17.25016975402832
    7. '[str' → logprob: -17.50016975402832
    8. '=str' → logprob: -18.12516975402832
    9. ' (' → logprob: -19.87516975402832
    10. '	str' → logprob: -20.00016975402832

Token 172: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.00000286102295
    3. 'u' → logprob: -16.250001907348633
    4. ' (' → logprob: -19.500001907348633
    5. '((' → logprob: -19.875001907348633
    6. ' u' → logprob: -20.500001907348633
    7. '[u' → logprob: -20.500001907348633
    8. '	u' → logprob: -20.500001907348633
    9. '(i' → logprob: -21.125001907348633
    10. '(x' → logprob: -21.250001907348633

Token 173: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0025154929608106613
    2. 'key' → logprob: -6.0025153160095215
    3. 'u' → logprob: -11.50251579284668
    4. '(key' → logprob: -11.50251579284668
    5. '.u' → logprob: -12.25251579284668
    6. ' key' → logprob: -12.87751579284668
    7. ' .' → logprob: -12.87751579284668
    8. '.right' → logprob: -13.12751579284668
    9. '.left' → logprob: -13.25251579284668
    10. '.' → logprob: -13.37751579284668

Token 174: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001835141738411039
    2. ')
' → logprob: -8.62518310546875
    3. ' )' → logprob: -13.62518310546875
    4. '))' → logprob: -14.00018310546875
    5. ')
' → logprob: -14.37518310546875
    6. '())' → logprob: -14.62518310546875
    7. '   ' → logprob: -14.62518310546875
    8. '()' → logprob: -16.87518310546875
    9. ')

' → logprob: -16.87518310546875
    10. ')`' → logprob: -17.25018310546875

Token 175: '   ' (ID: 271)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.014331669546663761
    2. '   ' → logprob: -4.264331817626953
    3. '
' → logprob: -8.889331817626953
    4. '    
' → logprob: -11.389331817626953
    5. ' in' → logprob: -12.889331817626953
    6. ' inorder' → logprob: -12.889331817626953
    7. ')
' → logprob: -13.014331817626953
    8. ')' → logprob: -13.139331817626953
    9. '(in' → logprob: -13.264331817626953
    10. ' ' → logprob: -13.889331817626953

Token 176: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006357223726809025
    2. 'order' → logprob: -5.256357192993164
    3. 'n' → logprob: -7.631357192993164
    4. ' inorder' → logprob: -7.756357192993164
    5. '   ' → logprob: -8.756357192993164
    6. '
' → logprob: -11.506357192993164
    7. 'oin' → logprob: -12.256357192993164
    8. ' in' → logprob: -12.381357192993164
    9. 'o' → logprob: -12.756357192993164
    10. ' ' → logprob: -12.881357192993164

Token 177: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -8.518582762917504e-05
    2. '(' → logprob: -9.37508487701416
    3. '(user' → logprob: -15.75008487701416
    4. 'u' → logprob: -15.87508487701416
    5. '(s' → logprob: -17.750085830688477
    6. '(
' → logprob: -18.000085830688477
    7. ' (' → logprob: -18.500085830688477
    8. '(x' → logprob: -18.500085830688477
    9. '(node' → logprob: -19.250085830688477
    10. '(ui' → logprob: -19.250085830688477

Token 178: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.1611260622739792
    2. '.left' → logprob: -1.9111260175704956
    3. '.' → logprob: -7.036126136779785
    4. '.u' → logprob: -11.286126136779785
    5. ')' → logprob: -12.036126136779785
    6. ' .' → logprob: -13.661126136779785
    7. ').' → logprob: -14.036126136779785
    8. '.Right' → logprob: -14.661126136779785
    9. '.user' → logprob: -14.911126136779785
    10. '(u' → logprob: -15.411126136779785

Token 179: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7120533811976202e-05
    2. ')
' → logprob: -11.250017166137695
    3. '   ' → logprob: -13.500017166137695
    4. '()' → logprob: -13.625017166137695
    5. '())' → logprob: -13.750017166137695
    6. ' )' → logprob: -16.000017166137695
    7. ')

' → logprob: -16.250017166137695
    8. '))' → logprob: -16.500017166137695
    9. ')`' → logprob: -17.125017166137695
    10. ')#' → logprob: -17.250017166137695

Token 180: 'm' (ID: 76)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0867946520447731
    2. 'r' → logprob: -3.71179461479187
    3. ' ' → logprob: -3.83679461479187
    4. 'pr' → logprob: -3.96179461479187
    5. 'n' → logprob: -4.336794853210449
    6. 't' → logprob: -6.836794853210449
    7. 'pri' → logprob: -7.211794853210449
    8. 'm' → logprob: -7.461794853210449
    9. '   ' → logprob: -7.711794853210449
    10. '_' → logprob: -7.711794853210449

Token 181: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9718593955039978
    2. 'y' → logprob: -1.7218594551086426
    3. 'a' → logprob: -1.8468594551086426
    4. 'pr' → logprob: -2.9718594551086426
    5. 'in' → logprob: -3.4718594551086426
    6. 'ap' → logprob: -3.9718594551086426
    7. 'p' → logprob: -3.9718594551086426
    8. 'root' → logprob: -4.346859455108643
    9. 'pre' → logprob: -4.346859455108643
    10. 'pri' → logprob: -4.471859455108643

Token 182: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1060793548822403
    2. '(' → logprob: -2.356079339981079
    3. '().' → logprob: -5.731079578399658
    4. '('' → logprob: -7.106079578399658
    5. '("' → logprob: -7.231079578399658
    6. '("")' → logprob: -7.856079578399658
    7. '("("' → logprob: -7.856079578399658
    8. '()>' → logprob: -10.1060791015625
    9. ' ()' → logprob: -10.3560791015625
    10. '("""' → logprob: -10.3560791015625

Token 183: 'root' (ID: 5488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11590472608804703
    2. '=int' → logprob: -2.6159048080444336
    3. ' =' → logprob: -3.7409048080444336
    4. '=m' → logprob: -4.740904808044434
    5. 'n' → logprob: -7.365904808044434
    6. '=n' → logprob: -7.490904808044434
    7. '=list' → logprob: -7.615904808044434
    8. 'm' → logprob: -7.990904808044434
    9. '=input' → logprob: -7.990904808044434
    10. '.' → logprob: -8.115904808044434

Token 184: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002234116895124316
    2. ' =' → logprob: -6.377233982086182
    3. '=int' → logprob: -8.12723445892334
    4. '=input' → logprob: -9.00223445892334
    5. '=root' → logprob: -10.00223445892334
    6. '_=' → logprob: -11.00223445892334
    7. '()' → logprob: -11.75223445892334
    8. '＝' → logprob: -11.75223445892334
    9. '=m' → logprob: -12.00223445892334
    10. '=None' → logprob: -12.25223445892334

Token 185: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5775079727172852
    2. '
' → logprob: -0.8275079727172852
    3. ' for' → logprob: -6.702507972717285
    4. '<|end|>' → logprob: -8.827507972717285
    5. 'm' → logprob: -9.702507972717285
    6. '
' → logprob: -10.077507972717285
    7. 'n' → logprob: -10.452507972717285
    8. ' 
' → logprob: -11.077507972717285
    9. '' → logprob: -11.327507972717285
    10. '\n' → logprob: -11.452507972717285

Token 186: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00867910124361515
    2. ' for' → logprob: -4.883678913116455
    3. '
' → logprob: -6.883678913116455
    4. 'm' → logprob: -10.633679389953613
    5. 'f' → logprob: -11.383679389953613
    6. 'n' → logprob: -12.633679389953613
    7. 'i' → logprob: -13.258679389953613
    8. 'pr' → logprob: -13.508679389953613
    9. 't' → logprob: -14.008679389953613
    10. '' → logprob: -14.008679389953613

Token 187: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3227379620075226
    2. '_' → logprob: -1.3227379322052002
    3. ' i' → logprob: -4.947738170623779
    4. '_i' → logprob: -6.197738170623779
    5. 'i' → logprob: -8.447737693786621
    6. ' in' → logprob: -9.822737693786621
    7. ' ' → logprob: -11.447737693786621
    8. ' range' → logprob: -11.822737693786621
    9. '_in' → logprob: -12.947737693786621
    10. ' s' → logprob: -13.072737693786621

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12846358120441437
    2. 'in' → logprob: -2.1284635066986084
    3. ' ' → logprob: -6.5034637451171875
    4. '	in' → logprob: -11.878463745117188
    5. '  ' → logprob: -12.003463745117188
    6. 'range' → logprob: -12.378463745117188
    7. ' _' → logprob: -12.628463745117188
    8. '_' → logprob: -12.628463745117188
    9. 's' → logprob: -13.003463745117188
    10. '   ' → logprob: -13.378463745117188

Token 189: ' xrange' (ID: 92050)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5747920870780945
    2. 'range' → logprob: -1.3247921466827393
    3. ' range' → logprob: -2.1997921466827393
    4. ' m' → logprob: -2.8247921466827393
    5. 'map' → logprob: -7.44979190826416
    6. 'input' → logprob: -7.82479190826416
    7. ' map' → logprob: -9.32479190826416
    8. ' input' → logprob: -9.82479190826416
    9. ' ' → logprob: -10.69979190826416
    10. 'list' → logprob: -11.32479190826416

Token 190: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007707654032856226
    2. '(m' → logprob: -5.132707595825195
    3. '(len' → logprob: -6.632707595825195
    4. '(int' → logprob: -8.007707595825195
    5. ' (' → logprob: -9.257707595825195
    6. '((' → logprob: -11.132707595825195
    7. '(
' → logprob: -12.257707595825195
    8. '(n' → logprob: -12.507707595825195
    9. '(length' → logprob: -13.257707595825195
    10. '(i' → logprob: -13.382707595825195

Token 191: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16976884007453918
    2. '():' → logprob: -2.169768810272217
    3. ',' → logprob: -4.169768810272217
    4. '(' → logprob: -4.794768810272217
    5. ' ):' → logprob: -4.919768810272217
    6. ':' → logprob: -5.669768810272217
    7. '(int' → logprob: -5.794768810272217
    8. '()' → logprob: -6.669768810272217
    9. '(i' → logprob: -7.544768810272217
    10. ',int' → logprob: -7.794768810272217

Token 192: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.9425429105758667
    2. ' x' → logprob: -1.1925429105758667
    3. ' s' → logprob: -1.8175429105758667
    4. ' val' → logprob: -2.6925430297851562
    5. ' v' → logprob: -3.4425430297851562
    6. ' z' → logprob: -4.692543029785156
    7. ' a' → logprob: -5.067543029785156
    8. ' 
' → logprob: -5.192543029785156
    9. ' k' → logprob: -5.317543029785156
    10. '   ' → logprob: -5.317543029785156

Token 193: ' cmd' (ID: 11704)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2510714530944824
    2. 'a' → logprob: -1.7510714530944824
    3. ' s' → logprob: -2.2510714530944824
    4. 'x' → logprob: -2.6260714530944824
    5. 'cmd' (adapté à ' cmd') → logprob: -3.0010714530944824
    6. 'v' → logprob: -3.1260714530944824
    7. ' a' → logprob: -3.3760714530944824
    8. ' v' → logprob: -3.5010714530944824
    9. ' key' → logprob: -3.8760714530944824
    10. 'key' → logprob: -3.8760714530944824

Token 194: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18058019876480103
    2. '=input' → logprob: -2.4305801391601562
    3. ' =' → logprob: -2.6805801391601562
    4. ',' → logprob: -4.930580139160156
    5. ',input' → logprob: -6.680580139160156
    6. '=line' → logprob: -8.930580139160156
    7. ' ' → logprob: -10.930580139160156
    8. ' ,' → logprob: -11.555580139160156
    9. '=list' → logprob: -11.680580139160156
    10. '   ' → logprob: -11.680580139160156

Token 195: 'map' (ID: 3726)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.029812170192599297
    2. 'input' → logprob: -3.5298120975494385
    3. ' raw' → logprob: -9.77981185913086
    4. 'list' → logprob: -12.65481185913086
    5. ' input' → logprob: -13.27981185913086
    6. '(raw' → logprob: -16.52981185913086
    7. '	raw' → logprob: -16.77981185913086
    8. 'str' → logprob: -17.15481185913086
    9. 'map' → logprob: -17.77981185913086
    10. '.raw' → logprob: -18.40481185913086

Token 196: '(str' (ID: 7946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16104987263679504
    2. '(str' → logprob: -1.9110498428344727
    3. '(input' → logprob: -7.411049842834473
    4. '(' → logprob: -9.161049842834473
    5. '(raw' → logprob: -9.911049842834473
    6. '(lambda' → logprob: -10.661049842834473
    7. '(list' → logprob: -11.161049842834473
    8. 'int' → logprob: -11.411049842834473
    9. 'str' → logprob: -11.786049842834473
    10. 'input' → logprob: -13.036049842834473

Token 197: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.008681228384375572
    2. ',' → logprob: -4.758681297302246
    3. 'input' → logprob: -10.633681297302246
    4. ',int' → logprob: -10.633681297302246
    5. '(input' → logprob: -11.258681297302246
    6. '   ' → logprob: -13.508681297302246
    7. 'raw' → logprob: -13.758681297302246
    8. ' ,' → logprob: -14.133681297302246
    9. ',(' → logprob: -14.758681297302246
    10. ',str' → logprob: -15.008681297302246

Token 198: 'raw' (ID: 1618)
  Prédit: 'raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.1654275357723236
    2. 'input' → logprob: -1.915427565574646
    3. ' raw' → logprob: -5.4154276847839355
    4. ' input' → logprob: -7.6654276847839355
    5. '   ' → logprob: -8.290427207946777
    6. '(raw' → logprob: -11.165427207946777
    7. '	raw' → logprob: -13.040427207946777
    8. ',input' → logprob: -13.165427207946777
    9. ' ' → logprob: -13.290427207946777
    10. '  ' → logprob: -14.165427207946777

Token 199: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -2.248469718324486e-05
    2. 'input' → logprob: -10.750022888183594
    3. '_' → logprob: -15.250022888183594
    4. '_in' → logprob: -15.375022888183594
    5. 'Input' → logprob: -15.750022888183594
    6. ' input' → logprob: -16.000022888183594
    7. '__' → logprob: -16.125022888183594
    8. '_inputs' → logprob: -16.250022888183594
    9. '_INPUT' → logprob: -17.750022888183594
    10. '_raw' → logprob: -18.000022888183594

Token 200: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010342398309148848
    2. '()' → logprob: -9.250102996826172
    3. ' ().' → logprob: -12.250102996826172
    4. '())' → logprob: -13.125102996826172
    5. '(' → logprob: -15.750102996826172
    6. ' ()' → logprob: -16.375102996826172
    7. '()[' → logprob: -16.625102996826172
    8. '   ' → logprob: -17.250102996826172
    9. '('').' → logprob: -17.375102996826172
    10. '('' → logprob: -17.625102996826172

Token 201: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16049078106880188
    2. 'strip' → logprob: -1.9104907512664795
    3. ' split' → logprob: -8.535490989685059
    4. 'rstrip' → logprob: -10.160490989685059
    5. ' strip' → logprob: -10.410490989685059
    6. '(split' → logprob: -14.285490989685059
    7. '   ' → logprob: -14.660490989685059
    8. ' ' → logprob: -15.660490989685059
    9. '().' → logprob: -16.410490036010742
    10. '.split' → logprob: -16.910490036010742

Token 202: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.001207615016028285
    2. '()' → logprob: -7.5012078285217285
    3. '()))' → logprob: -8.00120735168457
    4. ')' → logprob: -8.75120735168457
    5. '())
' → logprob: -8.87620735168457
    6. '(' → logprob: -11.50120735168457
    7. ' ())' → logprob: -11.87620735168457
    8. '))' → logprob: -13.37620735168457
    9. '()))
' → logprob: -14.25120735168457
    10. '()
' → logprob: -14.25120735168457

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10459596663713455
    2. '<|end|>' → logprob: -2.979595899581909
    3. ' ' → logprob: -3.729595899581909
    4. ' if' → logprob: -4.354596138000488
    5. '[' → logprob: -5.729596138000488
    6. '  ' → logprob: -5.979596138000488
    7. '  
' → logprob: -6.854596138000488
    8. '	if' → logprob: -6.854596138000488
    9. ' 
' → logprob: -6.854596138000488
    10. '
' → logprob: -7.604596138000488

Token 204: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6890594959259033
    2. 'if' (adapté à ' if') → logprob: -1.0640594959259033
    3. '   ' → logprob: -1.9390594959259033
    4. 'i' → logprob: -5.564059257507324
    5. ' ' → logprob: -5.939059257507324
    6. ' i' → logprob: -6.564059257507324
    7. '  ' → logprob: -8.189059257507324
    8. '[' → logprob: -8.439059257507324
    9. '    ' → logprob: -8.689059257507324
    10. '	if' → logprob: -8.814059257507324

Token 205: ' cmd' (ID: 11704)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.061985280364751816
    2. ' cmd' → logprob: -2.8119852542877197
    3. '(cmd' → logprob: -11.56198501586914
    4. '	cmd' → logprob: -12.43698501586914
    5. 'len' → logprob: -12.56198501586914
    6. ' ' → logprob: -15.18698501586914
    7. ' len' → logprob: -15.68698501586914
    8. 'command' → logprob: -16.56198501586914
    9. '   ' → logprob: -16.93698501586914
    10. '  ' → logprob: -17.31198501586914

Token 206: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2246291337069124e-05
    2. '==' → logprob: -10.750021934509277
    3. ' [' → logprob: -14.375021934509277
    4. '```' → logprob: -16.500022888183594
    5. ' ==' → logprob: -17.125022888183594
    6. '0' → logprob: -18.375022888183594
    7. '===' → logprob: -18.875022888183594
    8. '[
' → logprob: -18.875022888183594
    9. '=' → logprob: -19.000022888183594
    10. '=[' → logprob: -19.250022888183594

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006454797694459558
    2. ' ' → logprob: -8.000645637512207
    3. '[' → logprob: -8.375645637512207
    4. '1' → logprob: -10.750645637512207
    5. '==' → logprob: -11.000645637512207
    6. ' ==' → logprob: -11.375645637512207
    7. '(' → logprob: -11.750645637512207
    8. '=' → logprob: -12.000645637512207
    9. ''' → logprob: -12.375645637512207
    10. ']' → logprob: -13.000645637512207

Token 208: ']=="' (ID: 164578)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.15298423171043396
    2. '=='' → logprob: -2.777984142303467
    3. '=="' → logprob: -3.777984142303467
    4. ']==' → logprob: -4.027984142303467
    5. ' ==' → logprob: -4.277984142303467
    6. '[' → logprob: -4.652984142303467
    7. ']' → logprob: -4.902984142303467
    8. ''' → logprob: -5.902984142303467
    9. ']=='' → logprob: -5.902984142303467
    10. '=' → logprob: -6.402984142303467

Token 209: 'print' (ID: 1598)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.2750740349292755
    2. 'i' → logprob: -1.5250740051269531
    3. '"' → logprob: -4.025074005126953
    4. ''' → logprob: -6.025074005126953
    5. 'I' → logprob: -6.900074005126953
    6. 'Insert' → logprob: -7.775074005126953
    7. 'ins' → logprob: -8.275074005126953
    8. ''i' → logprob: -8.650074005126953
    9. ' insert' → logprob: -8.900074005126953
    10. '"I' → logprob: -9.150074005126953

Token 210: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.0179874487221241
    2. ':' → logprob: -4.767987251281738
    3. '":
' → logprob: -4.892987251281738
    4. '"' → logprob: -6.892987251281738
    5. '(":' → logprob: -7.642987251281738
    6. '):' → logprob: -9.642987251281738
    7. '():' → logprob: -9.767987251281738
    8. ' ":' → logprob: -9.767987251281738
    9. ':
' → logprob: -10.392987251281738
    10. '"):' → logprob: -11.017987251281738

Token 211: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062339719384908676
    2. ':
' → logprob: -2.8123397827148438
    3. '   ' → logprob: -8.562339782714844
    4. '<|end|>' → logprob: -10.062339782714844
    5. '       ' → logprob: -10.187339782714844
    6. ' :' → logprob: -10.687339782714844
    7. 'print' → logprob: -11.187339782714844
    8. ' :
' → logprob: -11.312339782714844
    9. '():
' → logprob: -11.812339782714844
    10. '):
' → logprob: -11.937339782714844

Token 212: ' prip' (ID: 37697)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9494010806083679
    2. ' print' → logprob: -0.9494010806083679
    3. ' preorder' → logprob: -2.6994011402130127
    4. 'pr' → logprob: -2.9494011402130127
    5. ' inorder' → logprob: -3.3244011402130127
    6. ' prin' → logprob: -3.9494011402130127
    7. ' prit' → logprob: -4.949400901794434
    8. 'in' → logprob: -5.074400901794434
    9. 'pre' → logprob: -5.199400901794434
    10. '   ' → logprob: -5.699400901794434

Token 213: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.8444886207580566
    2. 'print' → logprob: -0.9694886207580566
    3. 'pre' → logprob: -2.2194886207580566
    4. 'r' → logprob: -2.5944886207580566
    5. 'append' → logprob: -5.969488620758057
    6. 'pr' → logprob: -6.094488620758057
    7. 'er' → logprob: -6.719488620758057
    8. 'e' → logprob: -7.719488620758057
    9. 'repr' → logprob: -7.719488620758057
    10. 'prepend' → logprob: -8.844488143920898

Token 214: '=[]
' (ID: 63466)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10080274194478989
    2. 'print' → logprob: -3.3508026599884033
    3. '[:]' → logprob: -3.6008026599884033
    4. '.append' → logprob: -4.350802898406982
    5. '.' → logprob: -5.100802898406982
    6. ')' → logprob: -5.475802898406982
    7. ',' → logprob: -6.225802898406982
    8. '()
' → logprob: -6.350802898406982
    9. '(' → logprob: -6.600802898406982
    10. '.extend' → logprob: -6.975802898406982

Token 215: '       ' (ID: 309)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.48600858449935913
    2. '       ' → logprob: -0.9860085844993591
    3. ' inorder' → logprob: -5.111008644104004
    4. 'print' → logprob: -5.861008644104004
    5. ' in' → logprob: -6.611008644104004
    6. 'pr' → logprob: -7.486008644104004
    7. '	in' → logprob: -7.986008644104004
    8. ',in' → logprob: -8.486008644104004
    9. '   ' → logprob: -8.736008644104004
    10. 'iin' → logprob: -9.736008644104004

Token 216: ' pri' (ID: 12874)
  Prédit: 'pri'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pri' (adapté à ' pri') → logprob: -0.016881462186574936
    2. 'pr' → logprob: -4.391881465911865
    3. 'prin' → logprob: -6.016881465911865
    4. 'print' → logprob: -6.766881465911865
    5. 'pi' → logprob: -7.391881465911865
    6. ' pri' → logprob: -10.766880989074707
    7. 'ri' → logprob: -11.016880989074707
    8. 'prio' → logprob: -11.266880989074707
    9. 'in' → logprob: -11.391880989074707
    10. 'pre' → logprob: -11.516880989074707

Token 217: 'in' (ID: 258)
  Prédit: 'in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -2.2842308680992573e-05
    2. 'n' → logprob: -11.125022888183594
    3. 'i' → logprob: -12.625022888183594
    4. ' in' → logprob: -14.125022888183594
    5. 'pri' → logprob: -14.750022888183594
    6. 'pr' → logprob: -14.875022888183594
    7. 'ip' → logprob: -15.000022888183594
    8. 'ir' → logprob: -15.312522888183594
    9. 'pre' → logprob: -15.375022888183594
    10. 'prin' → logprob: -15.437522888183594

Token 218: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.10053649544715881
    2. '=' → logprob: -2.350536584854126
    3. '=[]
' → logprob: -8.850536346435547
    4. '[]' → logprob: -9.100536346435547
    5. '[]=' → logprob: -10.350536346435547
    6. '=[]
' → logprob: -10.975536346435547
    7. '.append' → logprob: -11.475536346435547
    8. ' =' → logprob: -12.350536346435547
    9. '[:]' → logprob: -12.725536346435547
    10. '=[' → logprob: -12.850536346435547

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022519715130329132
    2. 'print' → logprob: -4.147519588470459
    3. 'in' → logprob: -5.772519588470459
    4. ' print' → logprob: -7.147519588470459
    5. 'pre' → logprob: -7.397519588470459
    6. '
' → logprob: -7.522519588470459
    7. ' inorder' → logprob: -7.772519588470459
    8. ' for' → logprob: -8.397520065307617
    9. 'for' → logprob: -8.772520065307617
    10. ' in' → logprob: -8.897520065307617

Token 220: ' preorder' (ID: 152292)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5764250755310059
    2. 'pre' → logprob: -0.8264250755310059
    3. 'print' → logprob: -7.701425075531006
    4. ' inorder' → logprob: -11.076425552368164
    5. ' preorder' → logprob: -12.576425552368164
    6. 'pr' → logprob: -12.701425552368164
    7. 'def' → logprob: -12.826425552368164
    8. '       ' → logprob: -12.826425552368164
    9. '   ' → logprob: -13.076425552368164
    10. 'root' → logprob: -13.826425552368164

Token 221: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -4.227250610711053e-05
    2. '(' → logprob: -10.125041961669922
    3. 'root' → logprob: -13.250041961669922
    4. '(ROOT' → logprob: -15.750041961669922
    5. '(rest' → logprob: -16.375041961669922
    6. '(
' → logprob: -16.875041961669922
    7. ' root' → logprob: -17.000041961669922
    8. ' (' → logprob: -17.000041961669922
    9. '[root' → logprob: -17.000041961669922
    10. '=root' → logprob: -17.625041961669922

Token 222: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006936063524335623
    2. ')' → logprob: -5.006936073303223
    3. '       ' → logprob: -8.506936073303223
    4. ')
' → logprob: -11.256936073303223
    5. ' )
' → logprob: -13.131936073303223
    6. '()
' → logprob: -13.381936073303223
    7. ')

' → logprob: -14.381936073303223
    8. '   ' → logprob: -14.631936073303223
    9. '())
' → logprob: -15.006936073303223
    10. '
' → logprob: -15.506936073303223

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042736977338790894
    2. 'in' → logprob: -3.5427370071411133
    3. ' inorder' → logprob: -4.542737007141113
    4. ' in' → logprob: -6.542737007141113
    5. 'print' → logprob: -7.542737007141113
    6. '   ' → logprob: -9.292737007141113
    7. ',in' → logprob: -10.292737007141113
    8. '
' → logprob: -10.417737007141113
    9. ' ' → logprob: -10.667737007141113
    10. ' print' → logprob: -10.792737007141113

Token 224: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931653618812561
    2. 'print' → logprob: -0.6931653618812561
    3. ' print' → logprob: -11.94316577911377
    4. '   ' → logprob: -12.69316577911377
    5. ' inorder' → logprob: -13.06816577911377
    6. 'for' → logprob: -13.56816577911377
    7. ' in' → logprob: -13.69316577911377
    8. '```' → logprob: -13.94316577911377
    9. '       ' → logprob: -14.31816577911377
    10. '(in' → logprob: -14.31816577911377

Token 225: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -2.546478935983032e-05
    2. '(' → logprob: -10.625025749206543
    3. 'root' → logprob: -14.000025749206543
    4. ' (' → logprob: -15.875025749206543
    5. '(
' → logprob: -17.000024795532227
    6. ' root' → logprob: -17.250024795532227
    7. '=root' → logprob: -17.625024795532227
    8. '[root' → logprob: -17.875024795532227
    9. '(ROOT' → logprob: -18.000024795532227
    10. '(node' → logprob: -18.125024795532227

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0052360063418745995
    2. ')
' → logprob: -5.2552361488342285
    3. ')
' → logprob: -13.63023567199707
    4. ' )' → logprob: -15.00523567199707
    5. '   ' → logprob: -15.63023567199707
    6. ')

' → logprob: -15.75523567199707
    7. '(root' → logprob: -16.00523567199707
    8. 'root' → logprob: -16.88023567199707
    9. ')return' → logprob: -16.88023567199707
    10. ')#' → logprob: -17.38023567199707

Token 227: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017365317791700363
    2. '       ' → logprob: -4.767365455627441
    3. ' print' → logprob: -5.392365455627441
    4. '   ' → logprob: -5.517365455627441
    5. '	print' → logprob: -9.142365455627441
    6. 'for' → logprob: -11.267365455627441
    7. '```' → logprob: -12.392365455627441
    8. '           ' → logprob: -12.392365455627441
    9. '[' → logprob: -12.642365455627441
    10. '        ' → logprob: -13.267365455627441

Token 228: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.375
    3. 'for' → logprob: -16.625
    4. '   ' → logprob: -18.5
    5. '
' → logprob: -19.375
    6. '	print' → logprob: -20.25
    7. '#print' → logprob: -20.25
    8. 'pr' → logprob: -20.5
    9. 'puts' → logprob: -21.25
    10. 'prints' → logprob: -21.5

Token 229: '('' (ID: 706)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.053025178611278534
    2. ''' → logprob: -3.428025245666504
    3. ' "' → logprob: -4.178025245666504
    4. '("' → logprob: -5.678025245666504
    5. ' '' → logprob: -8.928025245666504
    6. '(' → logprob: -8.928025245666504
    7. '('' → logprob: -9.053025245666504
    8. ' ' → logprob: -10.303025245666504
    9. 'pr' → logprob: -11.678025245666504
    10. ' ("' → logprob: -12.428025245666504

Token 230: ' '+'' (ID: 137356)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014196290634572506
    2. '"' → logprob: -5.014196395874023
    3. ' '' → logprob: -5.139196395874023
    4. ' )' → logprob: -7.639196395874023
    5. ')' → logprob: -8.014196395874023
    6. ' ' → logprob: -8.514196395874023
    7. '('' → logprob: -8.889196395874023
    8. 'pr' → logprob: -9.139196395874023
    9. ' "' → logprob: -9.264196395874023
    10. ' ''.' → logprob: -10.139196395874023

Token 231: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.016686521470546722
    2. ''' → logprob: -4.39168643951416
    3. ' '.' → logprob: -5.64168643951416
    4. '''.' → logprob: -7.76668643951416
    5. 'print' → logprob: -9.76668643951416
    6. 'join' → logprob: -10.01668643951416
    7. '.' → logprob: -10.14168643951416
    8. '".' → logprob: -11.01668643951416
    9. ''\' → logprob: -11.64168643951416
    10. 'in' → logprob: -11.76668643951416

Token 232: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.3438327843905427e-05
    2. 'print' → logprob: -11.50002384185791
    3. ' join' → logprob: -11.62502384185791
    4. ''' → logprob: -12.62502384185791
    5. ''.' → logprob: -14.00002384185791
    6. '.join' → logprob: -16.125022888183594
    7. '.' → logprob: -16.625022888183594
    8. '```' → logprob: -17.875022888183594
    9. '(join' → logprob: -18.250022888183594
    10. 'j' → logprob: -19.000022888183594

Token 233: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -5.717296517104842e-05
    2. 'pr' → logprob: -9.875057220458984
    3. '(' → logprob: -12.750057220458984
    4. '(pre' → logprob: -13.125057220458984
    5. ' (' → logprob: -15.500057220458984
    6. '(str' → logprob: -15.625057220458984
    7. '	pr' → logprob: -15.625057220458984
    8. '   ' → logprob: -15.750057220458984
    9. ' pr' → logprob: -16.750057220458984
    10. '((' → logprob: -17.625057220458984

Token 234: 'iin' (ID: 30903)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.03786715492606163
    2. 'pre' → logprob: -3.7878670692443848
    3. 'ipe' → logprob: -5.037867069244385
    4. 'ipr' → logprob: -5.162867069244385
    5. 'i' → logprob: -7.412867069244385
    6. 'e' → logprob: -7.537867069244385
    7. 'ep' → logprob: -7.662867069244385
    8. 'ipro' → logprob: -8.162867546081543
    9. 'iper' → logprob: -9.162867546081543
    10. 'ipur' → logprob: -9.912867546081543

Token 235: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3596870005130768
    2. '))' → logprob: -1.2346869707107544
    3. '))
' → logprob: -4.984686851501465
    4. ')
' → logprob: -6.484686851501465
    5. ')+'' → logprob: -6.859686851501465
    6. '')' → logprob: -7.484686851501465
    7. ' )' → logprob: -7.859686851501465
    8. ')+' → logprob: -8.484686851501465
    9. '+')' → logprob: -8.984686851501465
    10. '+' → logprob: -8.984686851501465

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24084924161434174
    2. 'print' → logprob: -1.615849256515503
    3. ' print' → logprob: -4.240849018096924
    4. '
' → logprob: -8.115849494934082
    5. '   ' → logprob: -8.365849494934082
    6. '<|end|>' → logprob: -8.615849494934082
    7. ' ' → logprob: -10.240849494934082
    8. '        
' → logprob: -10.740849494934082
    9. '      ' → logprob: -10.865849494934082
    10. '	' → logprob: -11.115849494934082

Token 237: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04634499549865723
    2. ' print' → logprob: -3.6713449954986572
    3. '       ' → logprob: -3.9213449954986572
    4. ' ' → logprob: -11.171344757080078
    5. '   ' → logprob: -11.921344757080078
    6. '	print' → logprob: -12.421344757080078
    7. '
' → logprob: -13.421344757080078
    8. '	' → logprob: -14.421344757080078
    9. '     ' → logprob: -14.671344757080078
    10. '.print' → logprob: -14.921344757080078

Token 238: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.012674923986196518
    2. '(' → logprob: -4.387674808502197
    3. '()' → logprob: -9.137675285339355
    4. ''' → logprob: -10.137675285339355
    5. '("' → logprob: -11.387675285339355
    6. ' ('' → logprob: -12.262675285339355
    7. ' (' → logprob: -14.137675285339355
    8. '"' → logprob: -14.512675285339355
    9. '(('' → logprob: -15.512675285339355
    10. '(pr' → logprob: -15.762675285339355

Token 239: ' '+'' (ID: 137356)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00039039674447849393
    2. ' '' → logprob: -8.00039005279541
    3. ' '+'' → logprob: -10.37539005279541
    4. '''' → logprob: -11.62539005279541
    5. ''+' → logprob: -12.00039005279541
    6. '+'' → logprob: -12.37539005279541
    7. '+' → logprob: -13.37539005279541
    8. 'pr' → logprob: -14.12539005279541
    9. ' ' → logprob: -14.25039005279541
    10. ''-' → logprob: -14.37539005279541

Token 240: ' '.' (ID: 12662)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.052539944648742676
    2. ''' → logprob: -3.052539825439453
    3. '.join' → logprob: -6.052539825439453
    4. 'join' → logprob: -7.177539825439453
    5. ' '.' → logprob: -7.427539825439453
    6. '''.' → logprob: -8.677539825439453
    7. ''s' → logprob: -10.427539825439453
    8. ''post' → logprob: -11.177539825439453
    9. '','.' → logprob: -12.302539825439453
    10. 'print' → logprob: -12.802539825439453

Token 241: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0015128388768061996
    2. ''' → logprob: -6.5015130043029785
    3. ''s' → logprob: -12.12651252746582
    4. ' join' → logprob: -13.12651252746582
    5. '.join' → logprob: -13.62651252746582
    6. ''.' → logprob: -13.87651252746582
    7. '(join' → logprob: -14.25151252746582
    8. 'print' → logprob: -15.75151252746582
    9. '('' → logprob: -15.87651252746582
    10. '''.' → logprob: -16.87651252746582

Token 242: '(pr' (ID: 38401)
  Prédit: '(pr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pr' → logprob: -2.7729658540920354e-05
    2. 'pr' → logprob: -10.500027656555176
    3. '(pre' → logprob: -16.250028610229492
    4. '	pr' → logprob: -17.750028610229492
    5. ' (' → logprob: -18.500028610229492
    6. '(' → logprob: -19.000028610229492
    7. ' pr' → logprob: -20.875028610229492
    8. '/pr' → logprob: -22.000028610229492
    9. '_pr' → logprob: -22.125028610229492
    10. '(par' → logprob: -22.250028610229492

Token 243: 'ip' (ID: 488)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.005269565153867006
    2. 'ip' → logprob: -5.255269527435303
    3. 'pr' → logprob: -11.380270004272461
    4. 'ipr' → logprob: -12.130270004272461
    5. '(pre' → logprob: -12.380270004272461
    6. 'im' → logprob: -13.005270004272461
    7. 'prep' → logprob: -13.505270004272461
    8. 'ire' → logprob: -13.755270004272461
    9. 'i' → logprob: -13.880270004272461
    10. 'pure' → logprob: -14.005270004272461

Token 244: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -4.246537173457909e-06
    2. 'r' → logprob: -12.875003814697266
    3. 'e' → logprob: -14.000003814697266
    4. 'repr' → logprob: -15.625003814697266
    5. '	re' → logprob: -15.875003814697266
    6. 'er' → logprob: -16.125003814697266
    7. ' re' → logprob: -16.250003814697266
    8. 'ре' → logprob: -16.375003814697266
    9. 'pre' → logprob: -16.750003814697266
    10. '(re' → logprob: -18.000003814697266

Token 245: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4740923047065735
    2. ')' → logprob: -0.9740923047065735
    3. ''))' → logprob: -12.224092483520508
    4. '))
' → logprob: -12.474092483520508
    5. ')))' → logprob: -13.099092483520508
    6. ')")' → logprob: -13.724092483520508
    7. '')' → logprob: -14.224092483520508
    8. ')
' → logprob: -14.349092483520508
    9. '())' → logprob: -14.474092483520508
    10. '"))' → logprob: -14.849092483520508

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030053619295358658
    2. 'elif' → logprob: -3.7800536155700684
    3. ' elif' → logprob: -5.280053615570068
    4. 'else' → logprob: -7.030053615570068
    5. ' ' → logprob: -8.280054092407227
    6. ' else' → logprob: -8.530054092407227
    7. '	elif' → logprob: -8.655054092407227
    8. '  ' → logprob: -9.280054092407227
    9. '<|end|>' → logprob: -10.030054092407227
    10. '```' → logprob: -10.530054092407227

Token 247: ' else' (ID: 1203)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.41467759013175964
    2. 'elif' → logprob: -1.289677619934082
    3. '   ' → logprob: -2.789677619934082
    4. ' else' → logprob: -6.539677619934082
    5. 'else' (adapté à ' else') → logprob: -7.539677619934082
    6. '	elif' → logprob: -8.039677619934082
    7. ' ' → logprob: -8.164677619934082
    8. ' if' → logprob: -10.664677619934082
    9. 'e' → logprob: -11.289677619934082
    10. '  ' → logprob: -11.539677619934082

Token 248: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1291065514087677
    2. '       ' → logprob: -3.0041065216064453
    3. ':
' → logprob: -3.8791065216064453
    4. ' if' → logprob: -4.004106521606445
    5. '   ' → logprob: -4.504106521606445
    6. ' :' → logprob: -4.754106521606445
    7. ' =' → logprob: -5.629106521606445
    8. ' :
' → logprob: -5.879106521606445
    9. '    ' → logprob: -6.379106521606445
    10. '[' → logprob: -6.504106521606445

Token 249: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8300901055335999
    2. 'root' → logprob: -0.8300901055335999
    3. 'T' → logprob: -3.080090045928955
    4. '   ' → logprob: -3.205090045928955
    5. ' root' → logprob: -3.455090045928955
    6. ' T' → logprob: -5.580090045928955
    7. 'z' → logprob: -5.955090045928955
    8. '	root' → logprob: -7.330090045928955
    9. ' z' → logprob: -7.705090045928955
    10. ' ' → logprob: -8.080090522766113

Token 250: ' key' (ID: 2140)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.002349242102354765
    2. 'key' (adapté à ' key') → logprob: -6.127349376678467
    3. ' root' → logprob: -9.502348899841309
    4. '       ' → logprob: -9.877348899841309
    5. ' key' → logprob: -11.502348899841309
    6. 'k' → logprob: -11.502348899841309
    7. '   ' → logprob: -12.502348899841309
    8. '	root' → logprob: -12.502348899841309
    9. ' ' → logprob: -12.877348899841309
    10. 'v' → logprob: -12.877348899841309

Token 251: '=int' (ID: 37431)
  Prédit: '=int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.3133288025856018
    2. '=' → logprob: -1.313328742980957
    3. ' =' → logprob: -9.938328742980957
    4. '=node' → logprob: -12.563328742980957
    5. '=
' → logprob: -12.813328742980957
    6. '=float' → logprob: -12.938328742980957
    7. '=

' → logprob: -13.063328742980957
    8. 'int' → logprob: -13.188328742980957
    9. '＝' → logprob: -13.313328742980957
    10. '_=' → logprob: -13.688328742980957

Token 252: '(cmd' (ID: 31322)
  Prédit: '(cmd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cmd' → logprob: -3.011373155459296e-05
    2. 'cmd' → logprob: -10.500030517578125
    3. '(' → logprob: -12.875030517578125
    4. '	cmd' → logprob: -17.000030517578125
    5. ' cmd' → logprob: -17.875030517578125
    6. ' (' → logprob: -18.125030517578125
    7. '(
' → logprob: -20.625030517578125
    8. '((' → logprob: -20.875030517578125
    9. '(command' → logprob: -21.125030517578125
    10. '_cmd' → logprob: -21.875030517578125

Token 253: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -14.75
    3. ' [' → logprob: -17.625
    4. '[-' → logprob: -19.125
    5. '```' → logprob: -19.75
    6. ')[' → logprob: -20.125
    7. '   ' → logprob: -20.25
    8. '	' → logprob: -20.375
    9. '\[' → logprob: -20.5
    10. ')' → logprob: -20.5

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '[' → logprob: -14.750001907348633
    4. '   ' → logprob: -17.250001907348633
    5. '
' → logprob: -18.250001907348633
    6. ']' → logprob: -19.000001907348633
    7. '2' → logprob: -19.000001907348633
    8. '```' → logprob: -19.125001907348633
    9. ')' → logprob: -19.250001907348633
    10. '１' → logprob: -19.875001907348633

Token 255: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2015506625175476
    2. ')' → logprob: -1.7015507221221924
    3. ')
' → logprob: -8.951550483703613
    4. ' )
' → logprob: -11.951550483703613
    5. ' )' → logprob: -15.076550483703613
    6. ')`
' → logprob: -15.076550483703613
    7. '   ' → logprob: -15.326550483703613
    8. ')

' → logprob: -15.701550483703613
    9. '))
' → logprob: -15.826550483703613
    10. '))' → logprob: -16.32655143737793

Token 256: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.06063324213027954
    2. '       ' → logprob: -3.0606331825256348
    3. '	root' → logprob: -5.435633182525635
    4. ' root' → logprob: -5.435633182525635
    5. '   ' → logprob: -6.310633182525635
    6. '
' → logprob: -7.185633182525635
    7. '[root' → logprob: -8.060633659362793
    8. '<|end|>' → logprob: -8.935633659362793
    9. '(root' → logprob: -10.060633659362793
    10. '=root' → logprob: -10.185633659362793

Token 257: ' z' (ID: 579)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0020698485895991325
    2. ' root' → logprob: -6.25206995010376
    3. 'node' → logprob: -9.752069473266602
    4. '       ' → logprob: -9.877069473266602
    5. 'new' → logprob: -11.002069473266602
    6. '	root' → logprob: -11.627069473266602
    7. '   ' → logprob: -12.502069473266602
    8. ' new' → logprob: -13.752069473266602
    9. ' node' → logprob: -14.252069473266602
    10. ' ' → logprob: -14.502069473266602

Token 258: '=node' (ID: 187098)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.387309193611145
    2. '=node' → logprob: -1.137309193611145
    3. ' =' → logprob: -7.7623090744018555
    4. '=
' → logprob: -11.887309074401855
    5. '=

' → logprob: -13.137309074401855
    6. '=new' → logprob: -14.512309074401855
    7. 'node' → logprob: -14.762309074401855
    8. '=obj' → logprob: -14.887309074401855
    9. '=n' → logprob: -15.387309074401855
    10. '＝' → logprob: -15.387309074401855

Token 259: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.00016206118743866682
    2. '(' → logprob: -8.750162124633789
    3. '()' → logprob: -13.000162124633789
    4. '(
' → logprob: -14.625162124633789
    5. 'key' → logprob: -15.250162124633789
    6. ' (' → logprob: -15.250162124633789
    7. '(z' → logprob: -15.375162124633789
    8. ',key' → logprob: -16.87516212463379
    9. '((' → logprob: -17.00016212463379
    10. '()
' → logprob: -17.87516212463379

Token 260: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38710030913352966
    2. ')
' → logprob: -1.137100338935852
    3. ')
' → logprob: -8.387100219726562
    4. ')

' → logprob: -13.887100219726562
    5. ' )
' → logprob: -15.137100219726562
    6. ' )' → logprob: -16.012100219726562
    7. '   ' → logprob: -17.387100219726562
    8. ')`
' → logprob: -17.762100219726562
    9. '))' → logprob: -18.262100219726562
    10. ')#' → logprob: -18.262100219726562

Token 261: '       ' (ID: 309)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.7076560854911804
    2. '       ' → logprob: -0.8326560854911804
    3. ' root' → logprob: -3.207656145095825
    4. '
' → logprob: -3.957656145095825
    5. '   ' → logprob: -5.082655906677246
    6. '	root' → logprob: -5.332655906677246
    7. '<|end|>' → logprob: -7.082655906677246
    8. '[root' → logprob: -8.332655906677246
    9. '```' → logprob: -8.832655906677246
    10. '        
' → logprob: -9.332655906677246

Token 262: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -8.065608562901616e-05
    2. ' root' → logprob: -9.625081062316895
    3. '       ' → logprob: -11.500081062316895
    4. '   ' → logprob: -13.375081062316895
    5. '	root' → logprob: -13.500081062316895
    6. '
' → logprob: -13.625081062316895
    7. '[root' → logprob: -16.375080108642578
    8. '```' → logprob: -16.625080108642578
    9. '/root' → logprob: -16.625080108642578
    10. '_root' → logprob: -17.375080108642578

Token 263: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007476831669919193
    2. '=root' → logprob: -7.2507476806640625
    3. ' =' → logprob: -10.250747680664062
    4. '=in' → logprob: -13.125747680664062
    5. '=

' → logprob: -16.000747680664062
    6. '=node' → logprob: -16.500747680664062
    7. '=
' → logprob: -16.750747680664062
    8. '=create' → logprob: -17.250747680664062
    9. '=os' → logprob: -17.375747680664062
    10. '＝' → logprob: -17.500747680664062

Token 264: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -1.9361264946837764e-07
    2. ' insert' → logprob: -16.0
    3. '(insert' → logprob: -21.75
    4. '	insert' → logprob: -23.5
    5. 'inject' → logprob: -25.375
    6. '.insert' → logprob: -25.875
    7. 'append' → logprob: -27.125
    8. 'root' → logprob: -27.25
    9. 'Insert' → logprob: -27.625
    10. '
' → logprob: -27.875

Token 265: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.004081247374415398
    2. '(' → logprob: -5.5040812492370605
    3. 'root' → logprob: -13.129080772399902
    4. '(ROOT' → logprob: -15.254080772399902
    5. ' root' → logprob: -15.629080772399902
    6. ' (' → logprob: -15.629080772399902
    7. '(
' → logprob: -15.879080772399902
    8. '[root' → logprob: -16.87908172607422
    9. '```' → logprob: -17.62908172607422
    10. '(T' → logprob: -17.75408172607422

Token 266: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.01816035620868206
    2. ',' → logprob: -4.018160343170166
    3. ' ,' → logprob: -11.518160820007324
    4. ',x' → logprob: -15.518160820007324
    5. ',y' → logprob: -15.893160820007324
    6. ',
' → logprob: -16.893159866333008
    7. ',n' → logprob: -18.018159866333008
    8. '   ' → logprob: -18.143159866333008
    9. ',Z' → logprob: -18.518159866333008
    10. ',w' → logprob: -18.643159866333008

Token 267: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.250001907348633
    4. '))' → logprob: -17.500001907348633
    5. ')return' → logprob: -18.875001907348633
    6. '<|end|>' → logprob: -18.875001907348633
    7. ')#' → logprob: -19.125001907348633
    8. ')}' → logprob: -19.500001907348633
    9. ')

' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 265
Tokens correctement prédits (1ère position, stricte): 109
Tokens correctement prédits (1ère position, avec adaptation): 129
Tokens correctement prédits (top 10): 224
Précision stricte (1ère position): 41.13%
Précision adaptée (1ère position): 48.68%
Précision (top 10): 84.53%
================================================================================
