================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

NIL = -1

class Node:
    def __init__(self, key):
        self.key = key
        self.parent = NIL
        self.left = NIL
        self.right = NIL

class Tree:
    def __init__(self):
        self.root = NIL

    def insert(self, z):
        y = NIL
        x = self.root

        while x != NIL:
            y = x

            if z.key < x.key:
                x = x.left
            else:
                x = x.right

        z.parent = y

        if y == NIL:
            self.root = z
        elif z.key < y.key:
            y.left = z
        else:
            y.right = z

    def inorder_walk(self, node):
        if node == NIL:
            return

        if node.left != NIL:
            self.inorder_walk(node=node.left)

        print(' ' + str(node.key), end='')

        if node.right != NIL:
            self.inorder_walk(node=node.right)

    def preorder_walk(self, node):
        if node == NIL:
            return

        print(' ' + str(node.key), end='')

        if node.left != NIL:
            self.preorder_walk(node=node.left)

        if node.right != NIL:
            self.preorder_walk(node=node.right)

    def show(self):
        self.inorder_walk(self.root)
        print()
        self.preorder_walk(self.root)
        print()

n = int(sys.stdin.readline())
T = Tree()

for i in range(n):
    line = sys.stdin.readline().split()
    
    if len(line) == 1:
        T.show()
    else:
        key = int(line[1])

        T.insert(Node(key))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.035847846418619156
    2. '\n' → logprob: -4.0358476638793945
    3. 'import' → logprob: -4.7858476638793945
    4. '<|end|>' → logprob: -5.2858476638793945
    5. '\' → logprob: -7.0358476638793945
    6. '<|end|>' → logprob: -7.5358476638793945
    7. 'newline' → logprob: -7.9108476638793945
    8. ',' → logprob: -8.160847663879395
    9. '[' → logprob: -8.285847663879395
    10. '' → logprob: -8.285847663879395

Token 4: 'IL' (ID: 2654)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19751352071762085
    2. ' =' → logprob: -2.0725135803222656
    3. ' ' → logprob: -3.3225135803222656
    4. '.' → logprob: -4.947513580322266
    5. '_' → logprob: -5.572513580322266
    6. ',' → logprob: -6.197513580322266
    7. ')' → logprob: -6.447513580322266
    8. '  ' → logprob: -7.072513580322266
    9. 'u' → logprob: -8.072513580322266
    10. '   ' → logprob: -8.072513580322266

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009170614182949066
    2. ' ' → logprob: -6.0091705322265625
    3. '\' → logprob: -6.8841705322265625
    4. ',' → logprob: -6.8841705322265625
    5. ')' → logprob: -7.0091705322265625
    6. '' → logprob: -7.1341705322265625
    7. '\n' → logprob: -7.6341705322265625
    8. ':' → logprob: -7.8841705322265625
    9. '(' → logprob: -8.134170532226562
    10. '#' → logprob: -8.134170532226562

Token 6: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.01500454731285572
    2. 'None' → logprob: -4.640004634857178
    3. ' ' → logprob: -5.640004634857178
    4. ' []' → logprob: -6.640004634857178
    5. ' {}' → logprob: -9.39000415802002
    6. '0' → logprob: -9.39000415802002
    7. ' object' → logprob: -9.64000415802002
    8. '[]' → logprob: -10.51500415802002
    9. ' sys' → logprob: -10.51500415802002
    10. ' set' → logprob: -10.89000415802002

Token 7: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027362818364053965
    2. 'sys' → logprob: -6.6277360916137695
    3. '2' → logprob: -7.2527360916137695
    4. '100' → logprob: -8.00273609161377
    5. '10' → logprob: -9.00273609161377
    6. '999' → logprob: -9.37773609161377
    7. '214' → logprob: -9.50273609161377
    8. ' sys' → logprob: -11.00273609161377
    9. ' ' → logprob: -11.12773609161377
    10. '-' → logprob: -11.87773609161377

Token 8: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03197944164276123
    2. '

' → logprob: -3.906979560852051
    3. '' → logprob: -5.281979560852051
    4. '\n' → logprob: -5.781979560852051
    5. '
' → logprob: -6.156979560852051
    6. '<|end|>' → logprob: -8.15697956085205
    7. '\' → logprob: -8.65697956085205
    8. '```' → logprob: -8.78197956085205
    9. 'newline' → logprob: -9.15697956085205
    10. ',' → logprob: -9.40697956085205

Token 9: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.050918348133563995
    2. 'class' → logprob: -3.0509183406829834
    3. '#' → logprob: -7.3009185791015625
    4. 'sys' → logprob: -8.175918579101562
    5. 'dp' → logprob: -8.425918579101562
    6. 'from' → logprob: -8.550918579101562
    7. 'depth' → logprob: -9.175918579101562
    8. 'n' → logprob: -9.550918579101562
    9. 'MAX' → logprob: -9.675918579101562
    10. 'a' → logprob: -9.800918579101562

Token 10: ' Node' (ID: 10882)
  Prédit: ' Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Node' → logprob: -0.8452357053756714
    2. ' Tree' → logprob: -0.8452357053756714
    3. ' Trie' → logprob: -2.095235824584961
    4. ' Binary' → logprob: -4.345235824584961
    5. ' List' → logprob: -5.970235824584961
    6. ' My' → logprob: -7.595235824584961
    7. ' ' → logprob: -7.970235824584961
    8. ' Graph' → logprob: -7.970235824584961
    9. ' Parser' → logprob: -8.220235824584961
    10. ' A' → logprob: -9.220235824584961

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.7491250875755213e-05
    2. ' :' → logprob: -11.000027656555176
    3. '(' → logprob: -12.500027656555176
    4. '():' → logprob: -12.750027656555176
    5. ':
' → logprob: -13.250027656555176
    6. '(:' → logprob: -14.000027656555176
    7. ':**' → logprob: -14.250027656555176
    8. '<|end|>' → logprob: -15.000027656555176
    9. '):' → logprob: -16.12502670288086
    10. '```' → logprob: -16.37502670288086

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9103517532348633
    2. ' ' → logprob: -1.2853517532348633
    3. '   ' → logprob: -2.0353517532348633
    4. '(' → logprob: -2.5353517532348633
    5. ' :' → logprob: -2.7853517532348633
    6. ' (' → logprob: -4.160351753234863
    7. '<|end|>' → logprob: -4.285351753234863
    8. '(object' → logprob: -4.535351753234863
    9. '  ' → logprob: -5.785351753234863
    10. '    ' → logprob: -6.410351753234863

Token 13: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1583482027053833
    2. 'def' (adapté à ' def') → logprob: -2.1583480834960938
    3. '   ' → logprob: -3.5333480834960938
    4. '    ' → logprob: -7.033348083496094
    5. ' ' → logprob: -7.783348083496094
    6. 'class' → logprob: -8.158348083496094
    7. ' pass' → logprob: -10.408348083496094
    8. ' None' → logprob: -10.783348083496094
    9. ' __' → logprob: -10.783348083496094
    10. '	def' → logprob: -11.283348083496094

Token 14: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04796409606933594
    2. ' ' → logprob: -3.172964096069336
    3. ' init' → logprob: -5.922964096069336
    4. ' def' → logprob: -7.297964096069336
    5. '__' → logprob: -7.422964096069336
    6. ' ' → logprob: -8.547964096069336
    7. ' _' → logprob: -8.797964096069336
    8. ' constructor' → logprob: -8.797964096069336
    9. 'init' → logprob: -8.922964096069336
    10. '_' → logprob: -9.547964096069336

Token 15: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5048530030981055e-06
    2. 'ini' → logprob: -13.500001907348633
    3. 'in' → logprob: -17.250001907348633
    4. ' init' → logprob: -18.625001907348633
    5. 'int' → logprob: -19.000001907348633
    6. 'inti' → logprob: -19.875001907348633
    7. 'inite' → logprob: -20.500001907348633
    8. 'i' → logprob: -20.750001907348633
    9. 'innit' → logprob: -21.000001907348633
    10. 'initi' → logprob: -21.500001907348633

Token 16: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20243151485919952
    2. '__' → logprob: -1.702431559562683
    3. '__(
' → logprob: -8.202431678771973
    4. '(' → logprob: -8.327431678771973
    5. '__((' → logprob: -8.327431678771973
    6. '__('' → logprob: -9.577431678771973
    7. '_' → logprob: -9.827431678771973
    8. '__(*' → logprob: -9.827431678771973
    9. '___' → logprob: -10.702431678771973
    10. '__("' → logprob: -11.327431678771973

Token 17: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001049736310960725
    2. ' self' → logprob: -9.250104904174805
    3. ')' → logprob: -11.750104904174805
    4. '	self' → logprob: -14.875104904174805
    5. '(self' → logprob: -15.625104904174805
    6. ' ' → logprob: -15.625104904174805
    7. ',self' → logprob: -16.500104904174805
    8. ' )' → logprob: -16.875104904174805
    9. 'sel' → logprob: -17.125104904174805
    10. '   ' → logprob: -18.125104904174805

Token 18: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25907838344573975
    2. ' ,' → logprob: -1.5090783834457397
    3. ' ' → logprob: -6.259078502655029
    4. 'self' → logprob: -6.509078502655029
    5. ')' → logprob: -6.759078502655029
    6. ' )' → logprob: -6.884078502655029
    7. '<|end|>' → logprob: -7.259078502655029
    8. ',self' → logprob: -8.259078025817871
    9. ' self' → logprob: -8.884078025817871
    10. '_' → logprob: -9.134078025817871

Token 19: ' key' (ID: 2140)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.2072539329528809
    2. ' self' → logprob: -1.8322539329528809
    3. ' key' → logprob: -1.9572539329528809
    4. ' data' → logprob: -2.207253932952881
    5. 'value' → logprob: -2.332253932952881
    6. 'self' → logprob: -2.457253932952881
    7. ' val' → logprob: -2.832253932952881
    8. 'data' → logprob: -3.332253932952881
    9. 'key' → logprob: -5.207253932952881
    10. 'val' → logprob: -5.207253932952881

Token 20: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11515896767377853
    2. '):' → logprob: -2.365159034729004
    3. ')' → logprob: -4.365159034729004
    4. '=' → logprob: -6.490159034729004
    5. ' ,' → logprob: -8.615159034729004
    6. ':' → logprob: -9.240159034729004
    7. ' ):' → logprob: -9.615159034729004
    8. '<|end|>' → logprob: -9.615159034729004
    9. '=None' → logprob: -9.865159034729004
    10. ' )' → logprob: -10.115159034729004

Token 21: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01237813662737608
    2. ' ' → logprob: -5.512378215789795
    3. '    ' → logprob: -5.637378215789795
    4. ')' → logprob: -6.262378215789795
    5. '   ' → logprob: -7.137378215789795
    6. '        ' → logprob: -7.387378215789795
    7. ' )' → logprob: -8.012377738952637
    8. '<|end|>' → logprob: -8.137377738952637
    9. '      ' → logprob: -8.512377738952637
    10. ',' → logprob: -9.262377738952637

Token 22: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.36741772294044495
    2. ' self' → logprob: -1.3674176931381226
    3. '       ' → logprob: -3.367417812347412
    4. '        ' → logprob: -4.242417812347412
    5. ' ' → logprob: -5.992417812347412
    6. ' ' → logprob: -7.367417812347412
    7. '    ' → logprob: -8.492417335510254
    8. '_' → logprob: -9.492417335510254
    9. 's' → logprob: -9.617417335510254
    10. '_self' → logprob: -9.742417335510254

Token 23: '.key' (ID: 8839)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28153273463249207
    2. '.key' → logprob: -1.4065327644348145
    3. ' .' → logprob: -8.281532287597656
    4. '.keys' → logprob: -10.156532287597656
    5. '.Key' → logprob: -10.531532287597656
    6. ' key' → logprob: -11.531532287597656
    7. '.value' → logprob: -12.156532287597656
    8. '.KEY' → logprob: -12.156532287597656
    9. '.code' → logprob: -12.281532287597656
    10. '.n' → logprob: -12.281532287597656

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25438669323921204
    2. '=' → logprob: -1.5043866634368896
    3. ' ' → logprob: -6.129386901855469
    4. '<|end|>' → logprob: -8.629386901855469
    5. ',' → logprob: -10.379386901855469
    6. ')' → logprob: -10.879386901855469
    7. '<|end|>' → logprob: -10.879386901855469
    8. ' =)' → logprob: -12.129386901855469
    9. ' ,' → logprob: -12.254386901855469
    10. ' =
' → logprob: -12.504386901855469

Token 25: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.00408884696662426
    2. 'key' → logprob: -5.504088878631592
    3. ' ' → logprob: -11.504088401794434
    4. '	key' → logprob: -15.504088401794434
    5. '_key' → logprob: -16.75408935546875
    6. 'Key' → logprob: -17.12908935546875
    7. '$key' → logprob: -17.12908935546875
    8. ' ' → logprob: -17.50408935546875
    9. '(key' → logprob: -17.87908935546875
    10. '[key' → logprob: -19.62908935546875

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0598253011703491
    2. '       ' → logprob: -1.0598253011703491
    3. '<|end|>' → logprob: -1.1848253011703491
    4. ')' → logprob: -8.43482494354248
    5. '<|end|>' → logprob: -8.55982494354248
    6. ',' → logprob: -8.80982494354248
    7. '        
' → logprob: -9.18482494354248
    8. '  
' → logprob: -9.55982494354248
    9. '        ' → logprob: -9.55982494354248
    10. '   ' → logprob: -10.05982494354248

Token 28: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017215343192219734
    2. 'self' (adapté à ' self') → logprob: -4.142215251922607
    3. ' self' → logprob: -6.767215251922607
    4. ',' → logprob: -12.392215728759766
    5. '<|end|>' → logprob: -12.392215728759766
    6. '   ' → logprob: -13.142215728759766
    7. '\' → logprob: -13.142215728759766
    8. 'n' → logprob: -13.267215728759766
    9. '      ' → logprob: -13.267215728759766
    10. '        ' → logprob: -13.517215728759766

Token 29: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6422424912452698
    2. '.left' → logprob: -1.017242431640625
    3. ' =' → logprob: -2.767242431640625
    4. 'left' → logprob: -4.517242431640625
    5. '.next' → logprob: -4.517242431640625
    6. '_left' → logprob: -5.017242431640625
    7. ' left' → logprob: -5.142242431640625
    8. '.right' → logprob: -6.017242431640625
    9. '=' → logprob: -6.142242431640625
    10. '<|end|>' → logprob: -6.142242431640625

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033680856227874756
    2. '=' → logprob: -3.4086809158325195
    3. ' ' → logprob: -10.53368091583252
    4. '<|end|>' → logprob: -12.40868091583252
    5. '=None' → logprob: -12.53368091583252
    6. '<|end|>' → logprob: -14.65868091583252
    7. ',' → logprob: -15.78368091583252
    8. ')' → logprob: -16.908679962158203
    9. '  ' → logprob: -17.283679962158203
    10. '    ' → logprob: -17.283679962158203

Token 31: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012990922667086124
    2. 'None' → logprob: -4.637990951538086
    3. ' NIL' → logprob: -6.262990951538086
    4. ' None' → logprob: -6.637990951538086
    5. ' ' → logprob: -12.262990951538086
    6. '	N' → logprob: -13.012990951538086
    7. 'NONE' → logprob: -13.637990951538086
    8. 'NULL' → logprob: -14.262990951538086
    9. ' N' → logprob: -14.262990951538086
    10. '0' → logprob: -14.387990951538086

Token 32: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38018080592155457
    2. '
' → logprob: -1.755180835723877
    3. '<|end|>' → logprob: -2.005180835723877
    4. 'self' → logprob: -5.255180835723877
    5. ' ' → logprob: -7.380180835723877
    6. '        ' → logprob: -7.505180835723877
    7. '<|end|>' → logprob: -7.505180835723877
    8. '        
' → logprob: -8.005180358886719
    9. ',' → logprob: -8.130180358886719
    10. '```' → logprob: -8.630180358886719

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07635508477687836
    2. '<|end|>' → logprob: -3.07635498046875
    3. '
' → logprob: -3.70135498046875
    4. 'self' → logprob: -6.57635498046875
    5. ' ' → logprob: -8.07635498046875
    6. '   ' → logprob: -8.07635498046875
    7. '        
' → logprob: -9.07635498046875
    8. '<|end|>' → logprob: -9.20135498046875
    9. ' self' → logprob: -9.57635498046875
    10. ' 
' → logprob: -10.07635498046875

Token 34: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7093680500984192
    2. 'self' (adapté à ' self') → logprob: -0.7093680500984192
    3. ' self' → logprob: -4.2093682289123535
    4. ',' → logprob: -7.8343682289123535
    5. ' ' → logprob: -8.334367752075195
    6. '0' → logprob: -8.959367752075195
    7. '<|end|>' → logprob: -9.209367752075195
    8. '   ' → logprob: -9.334367752075195
    9. '
' → logprob: -9.834367752075195
    10. '        
' → logprob: -10.334367752075195

Token 35: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5953255891799927
    2. '.left' → logprob: -0.9703255891799927
    3. '.children' → logprob: -3.095325469970703
    4. 'left' → logprob: -4.970325469970703
    5. '.child' → logprob: -5.595325469970703
    6. ' =' → logprob: -5.595325469970703
    7. '.right' → logprob: -6.095325469970703
    8. 'children' → logprob: -6.345325469970703
    9. ' .' → logprob: -6.970325469970703
    10. '_children' → logprob: -6.970325469970703

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576032280921936
    2. ' =' → logprob: -0.826032280921936
    3. '=None' → logprob: -9.576032638549805
    4. '<|end|>' → logprob: -11.826032638549805
    5. '=N' → logprob: -12.201032638549805
    6. '<|end|>' → logprob: -12.201032638549805
    7. ' ' → logprob: -12.951032638549805
    8. ',' → logprob: -13.576032638549805
    9. ')' → logprob: -14.451032638549805
    10. 'N' → logprob: -14.701032638549805

Token 37: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011802274966612458
    2. ' NIL' → logprob: -6.751180171966553
    3. ' ' → logprob: -11.876180648803711
    4. '   ' → logprob: -14.376180648803711
    5. '	N' → logprob: -14.376180648803711
    6. '  ' → logprob: -14.751180648803711
    7. ' N' → logprob: -15.126180648803711
    8. '-N' → logprob: -15.376180648803711
    9. 'None' → logprob: -15.876180648803711
    10. '<N' → logprob: -16.12618064880371

Token 38: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015993423759937286
    2. '<|end|>' → logprob: -4.265993595123291
    3. '
' → logprob: -7.390993595123291
    4. 'self' → logprob: -7.765993595123291
    5. '        
' → logprob: -8.265993118286133
    6. '   ' → logprob: -8.640993118286133
    7. ' ' → logprob: -9.265993118286133
    8. '<|end|>' → logprob: -10.015993118286133
    9. '    
' → logprob: -10.265993118286133
    10. ' 
' → logprob: -10.265993118286133

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003915730398148298
    2. '<|end|>' → logprob: -5.753915786743164
    3. 'self' → logprob: -8.128915786743164
    4. '   ' → logprob: -9.003915786743164
    5. '        
' → logprob: -9.628915786743164
    6. ' ' → logprob: -9.878915786743164
    7. '	' → logprob: -10.378915786743164
    8. '
' → logprob: -10.503915786743164
    9. '<|end|>' → logprob: -10.503915786743164
    10. '    
' → logprob: -10.753915786743164

Token 40: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5274293422698975
    2. '       ' → logprob: -0.9024293422698975
    3. ' self' → logprob: -5.902429580688477
    4. '        
' → logprob: -7.277429580688477
    5. '<|end|>' → logprob: -8.027429580688477
    6. '   ' → logprob: -8.652429580688477
    7. '	self' → logprob: -9.402429580688477
    8. '
' → logprob: -9.777429580688477
    9. '```' → logprob: -10.152429580688477
    10. ' ' → logprob: -10.277429580688477

Token 41: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.5666120648384094
    2. '.right' → logprob: -1.0666120052337646
    3. '.' → logprob: -2.4416120052337646
    4. '=' → logprob: -7.316612243652344
    5. 'left' → logprob: -8.566612243652344
    6. ' =' → logprob: -8.566612243652344
    7. '<|end|>' → logprob: -9.566612243652344
    8. '_' → logprob: -10.566612243652344
    9. 'right' → logprob: -10.566612243652344
    10. ')' → logprob: -10.566612243652344

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142406225204468
    2. '=' → logprob: -1.7014241218566895
    3. '=N' → logprob: -12.201423645019531
    4. ' ' → logprob: -13.201423645019531
    5. ')' → logprob: -13.826423645019531
    6. 'N' → logprob: -13.951423645019531
    7. '<|end|>' → logprob: -14.451423645019531
    8. '=None' → logprob: -14.451423645019531
    9. ' =
' → logprob: -15.451423645019531
    10. '   ' → logprob: -15.826423645019531

Token 43: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002655079588294029
    2. ' NIL' → logprob: -8.250265121459961
    3. ' ' → logprob: -12.875265121459961
    4. '   ' → logprob: -14.375265121459961
    5. '  ' → logprob: -14.500265121459961
    6. '-N' → logprob: -15.750265121459961
    7. '	N' → logprob: -15.750265121459961
    8. ' N' → logprob: -16.12526512145996
    9. '    ' → logprob: -17.12526512145996
    10. ' ' → logprob: -17.62526512145996

Token 44: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07514190673828125
    2. '<|end|>' → logprob: -2.9501419067382812
    3. '   ' → logprob: -4.325141906738281
    4. '    
' → logprob: -6.825141906738281
    5. 'newline' → logprob: -6.825141906738281
    6. '<|end|>' → logprob: -7.075141906738281
    7. 'class' → logprob: -7.200141906738281
    8. '\n' → logprob: -7.200141906738281
    9. 'def' → logprob: -7.325141906738281
    10. '```' → logprob: -7.575141906738281

Token 45: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18599572777748108
    2. 'class' → logprob: -1.8109956979751587
    3. '

' → logprob: -5.560995578765869
    4. '\n' → logprob: -7.560995578765869
    5. '    
' → logprob: -7.560995578765869
    6. '
' → logprob: -8.060996055603027
    7. 'n' → logprob: -8.560996055603027
    8. '```' → logprob: -8.560996055603027
    9. '   ' → logprob: -8.935996055603027
    10. 'def' → logprob: -9.185996055603027

Token 46: ' Tree' (ID: 14224)
  Prédit: ' Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Binary' → logprob: -0.5423831939697266
    2. ' BST' → logprob: -1.6673831939697266
    3. ' Tree' → logprob: -2.6673831939697266
    4. ' ' → logprob: -2.7923831939697266
    5. ' Red' → logprob: -3.4173831939697266
    6. ' AVL' → logprob: -3.7923831939697266
    7. ' RB' → logprob: -3.9173831939697266
    8. 'Binary' → logprob: -4.167383193969727
    9. ' Node' → logprob: -6.042383193969727
    10. 'BST' → logprob: -6.417383193969727

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.8351892473874614e-05
    2. ':
' → logprob: -10.875048637390137
    3. ' :' → logprob: -11.250048637390137
    4. '():' → logprob: -11.625048637390137
    5. 'Node' → logprob: -13.625048637390137
    6. ':**' → logprob: -13.625048637390137
    7. '):' → logprob: -14.125048637390137
    8. '{' → logprob: -14.125048637390137
    9. '(Node' → logprob: -14.250048637390137
    10. '(' → logprob: -14.500048637390137

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19325752556324005
    2. ' def' → logprob: -2.4432575702667236
    3. '    
' → logprob: -3.3182575702667236
    4. ':' → logprob: -4.0682573318481445
    5. '    ' → logprob: -4.0682573318481445
    6. '     
' → logprob: -5.5682573318481445
    7. ' :' → logprob: -6.0682573318481445
    8. ' 
' → logprob: -6.1932573318481445
    9. '```' → logprob: -6.1932573318481445
    10. '<|end|>' → logprob: -6.4432573318481445

Token 49: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.009907073341310024
    2. 'def' (adapté à ' def') → logprob: -4.634907245635986
    3. ' __' → logprob: -9.259906768798828
    4. '   ' → logprob: -10.509906768798828
    5. ' None' → logprob: -11.134906768798828
    6. '__' → logprob: -12.259906768798828
    7. ' ' → logprob: -12.509906768798828
    8. ' de' → logprob: -13.134906768798828
    9. 'de' → logprob: -14.009906768798828
    10. '	def' → logprob: -14.134906768798828

Token 50: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7808419466018677
    2. ' __' → logprob: -0.7808419466018677
    3. '__' → logprob: -2.655841827392578
    4. ' _' → logprob: -4.780841827392578
    5. ' ' → logprob: -5.405841827392578
    6. '_init' → logprob: -7.280841827392578
    7. ' ' → logprob: -10.155841827392578
    8. ' ___' → logprob: -10.280841827392578
    9. 'init' → logprob: -10.905841827392578
    10. '___' → logprob: -11.155841827392578

Token 51: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00027730545843951404
    2. 'i' → logprob: -8.250277519226074
    3. 'in' → logprob: -11.750277519226074
    4. 'ini' → logprob: -11.875277519226074
    5. '_' → logprob: -14.875277519226074
    6. 'int' → logprob: -15.500277519226074
    7. 'def' → logprob: -15.625277519226074
    8. '_init' → logprob: -16.000276565551758
    9. '_i' → logprob: -17.250276565551758
    10. '__' → logprob: -17.375276565551758

Token 52: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0013480921043083072
    2. '__' → logprob: -6.62634801864624
    3. '__(
' → logprob: -11.626348495483398
    4. '(self' → logprob: -12.126348495483398
    5. '__((' → logprob: -12.126348495483398
    6. '__('' → logprob: -13.751348495483398
    7. '(' → logprob: -14.876348495483398
    8. '_(' → logprob: -15.251348495483398
    9. '__(*' → logprob: -15.251348495483398
    10. '__[' → logprob: -16.0013484954834

Token 53: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001414426224073395
    2. ')' → logprob: -9.000141143798828
    3. ' self' → logprob: -11.000141143798828
    4. '):
' → logprob: -14.125141143798828
    5. '   ' → logprob: -15.750141143798828
    6. ' )' → logprob: -16.375141143798828
    7. '
' → logprob: -16.500141143798828
    8. ' ' → logprob: -16.625141143798828
    9. '):' → logprob: -16.875141143798828
    10. '	self' → logprob: -17.000141143798828

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17023508250713348
    2. ',' → logprob: -2.0452351570129395
    3. 'self' → logprob: -3.9202351570129395
    4. ')' → logprob: -5.2952351570129395
    5. '):
' → logprob: -7.5452351570129395
    6. '   ' → logprob: -7.6702351570129395
    7. ' ):' → logprob: -7.6702351570129395
    8. '(self' → logprob: -8.295234680175781
    9. ',self' → logprob: -8.420234680175781
    10. ' ,' → logprob: -9.170234680175781

Token 55: '       ' (ID: 309)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5880826115608215
    2. 'None' → logprob: -1.2130825519561768
    3. ' None' → logprob: -2.7130825519561768
    4. '   ' → logprob: -3.5880825519561768
    5. 'self' → logprob: -4.338082790374756
    6. '       ' → logprob: -4.463082790374756
    7. '[]' → logprob: -4.713082790374756
    8. ' N' → logprob: -5.338082790374756
    9. ')' → logprob: -5.338082790374756
    10. ' ' → logprob: -5.463082790374756

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04866616427898407
    2. ' self' → logprob: -3.04866623878479
    3. '       ' → logprob: -10.423666000366211
    4. '   ' → logprob: -10.798666000366211
    5. 'None' → logprob: -11.173666000366211
    6. ' ' → logprob: -11.673666000366211
    7. ' None' → logprob: -12.673666000366211
    8. '	self' → logprob: -13.548666000366211
    9. '  ' → logprob: -13.798666000366211
    10. '    ' → logprob: -16.17366600036621

Token 57: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.031006967648863792
    2. '.' → logprob: -3.7810070514678955
    3. '   ' → logprob: -5.531006813049316
    4. ' .' → logprob: -7.156006813049316
    5. 'root' → logprob: -7.156006813049316
    6. '.tree' → logprob: -8.031006813049316
    7. '.head' → logprob: -8.281006813049316
    8. '.nodes' → logprob: -8.281006813049316
    9. '.size' → logprob: -8.531006813049316
    10. ' =' → logprob: -8.656006813049316

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759469866752625
    2. ' =' → logprob: -0.8259469866752625
    3. ' ' → logprob: -11.950946807861328
    4. '=None' → logprob: -14.200946807861328
    5. '=N' → logprob: -15.200946807861328
    6. '＝' → logprob: -16.700946807861328
    7. ' =
' → logprob: -16.950946807861328
    8. '=
' → logprob: -17.825946807861328
    9. '   ' → logprob: -18.200946807861328
    10. '=

' → logprob: -18.200946807861328

Token 59: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.009777928702533245
    2. ' NIL' → logprob: -4.634778022766113
    3. ' ' → logprob: -11.134778022766113
    4. '   ' → logprob: -13.384778022766113
    5. 'None' → logprob: -13.384778022766113
    6. '  ' → logprob: -13.509778022766113
    7. '	N' → logprob: -14.259778022766113
    8. ' N' → logprob: -14.384778022766113
    9. ' None' → logprob: -14.384778022766113
    10. '-N' → logprob: -15.759778022766113

Token 60: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0071659511886537075
    2. ' def' → logprob: -5.257165908813477
    3. '   ' → logprob: -6.257165908813477
    4. 'd' → logprob: -12.007165908813477
    5. '	def' → logprob: -12.632165908813477
    6. 'de' → logprob: -13.007165908813477
    7. ' ' → logprob: -13.757165908813477
    8. '  ' → logprob: -15.132165908813477
    9. '    
' → logprob: -15.257165908813477
    10. '    ' → logprob: -15.757165908813477

Token 63: ' insert' (ID: 10898)
  Prédit: ' insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.01198763120919466
    2. '_insert' → logprob: -5.136987686157227
    3. ' search' → logprob: -5.886987686157227
    4. 'insert' → logprob: -7.011987686157227
    5. ' space' → logprob: -7.386987686157227
    6. ' ' → logprob: -7.636987686157227
    7. '_' → logprob: -7.761987686157227
    8. ' find' → logprob: -7.886987686157227
    9. ' insertion' → logprob: -8.886987686157227
    10. '_search' → logprob: -10.011987686157227

Token 64: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20415084064006805
    2. '(' → logprob: -1.7041507959365845
    3. ' (' → logprob: -5.954150676727295
    4. '(s' → logprob: -9.579151153564453
    5. '(
' → logprob: -10.079151153564453
    6. '<|end|>' → logprob: -11.079151153564453
    7. ' ' → logprob: -12.204151153564453
    8. ' self' → logprob: -13.329151153564453
    9. '(sel' → logprob: -13.829151153564453
    10. '(this' → logprob: -14.079151153564453

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018175458535552025
    2. ' ,' → logprob: -4.0181756019592285
    3. ',node' → logprob: -11.76817512512207
    4. 'self' → logprob: -12.26817512512207
    5. ',self' → logprob: -12.39317512512207
    6. ')' → logprob: -12.89317512512207
    7. ',key' → logprob: -13.14317512512207
    8. '(self' → logprob: -13.64317512512207
    9. '   ' → logprob: -14.39317512512207
    10. ',value' → logprob: -14.51817512512207

Token 66: ' z' (ID: 579)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.06290114670991898
    2. 'key' → logprob: -2.812901258468628
    3. ' x' → logprob: -7.562901020050049
    4. ' z' → logprob: -9.062901496887207
    5. 'x' → logprob: -9.187901496887207
    6. ' self' → logprob: -9.437901496887207
    7. 'self' → logprob: -10.187901496887207
    8. ' node' → logprob: -10.562901496887207
    9. 'z' → logprob: -11.062901496887207
    10. ' ' → logprob: -11.437901496887207

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0070147947408258915
    2. ' ):' → logprob: -5.007014751434326
    3. ')' → logprob: -8.382015228271484
    4. ':' → logprob: -10.257015228271484
    5. ',' → logprob: -11.257015228271484
    6. '):
' → logprob: -11.382015228271484
    7. ' )' → logprob: -12.257015228271484
    8. ' :' → logprob: -12.757015228271484
    9. '   ' → logprob: -13.757015228271484
    10. ' ' → logprob: -14.632015228271484

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02555246092379093
    2. ' if' → logprob: -5.275552272796631
    3. '        ' → logprob: -5.400552272796631
    4. '    ' → logprob: -5.400552272796631
    5. '   ' → logprob: -5.525552272796631
    6. 'if' → logprob: -6.275552272796631
    7. 'node' → logprob: -6.775552272796631
    8. ' ' → logprob: -7.025552272796631
    9. '        
' → logprob: -7.650552272796631
    10. 'y' → logprob: -8.275552749633789

Token 69: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.15573742985725403
    2. 'if' → logprob: -2.7807374000549316
    3. '   ' → logprob: -2.7807374000549316
    4. 'parent' → logprob: -5.030737400054932
    5. ' y' → logprob: -5.155737400054932
    6. 'i' → logprob: -5.155737400054932
    7. '       ' → logprob: -6.780737400054932
    8. 'p' → logprob: -8.53073787689209
    9. 'current' → logprob: -8.90573787689209
    10. ' if' → logprob: -8.90573787689209

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007616444956511259
    2. '=' → logprob: -4.8826165199279785
    3. ' ' → logprob: -11.50761604309082
    4. '    ' → logprob: -16.38261604309082
    5. '  ' → logprob: -16.75761604309082
    6. '=None' → logprob: -17.00761604309082
    7. '=N' → logprob: -17.50761604309082
    8. 'space' → logprob: -17.63261604309082
    9. ' =
' → logprob: -17.75761604309082
    10. ',' → logprob: -17.88261604309082

Token 71: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00031043673516251147
    2. ' NIL' → logprob: -8.125310897827148
    3. '   ' → logprob: -12.250310897827148
    4. 'self' → logprob: -12.625310897827148
    5. ' ' → logprob: -13.250310897827148
    6. '	N' → logprob: -13.500310897827148
    7. '-' → logprob: -13.625310897827148
    8. '  ' → logprob: -14.375310897827148
    9. ' N' → logprob: -14.625310897827148
    10. ' -' → logprob: -14.750310897827148

Token 72: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02552248165011406
    2. '       ' → logprob: -4.150522708892822
    3. '
' → logprob: -5.400522708892822
    4. ' x' → logprob: -5.775522708892822
    5. '        
' → logprob: -6.900522708892822
    6. '        ' → logprob: -8.275522232055664
    7. ' ' → logprob: -8.775522232055664
    8. ' 
' → logprob: -9.025522232055664
    9. ',x' → logprob: -10.025522232055664
    10. '   ' → logprob: -10.400522232055664

Token 73: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09776980429887772
    2. ' 
' → logprob: -2.7227697372436523
    3. '       ' → logprob: -4.597769737243652
    4. '  
' → logprob: -4.847769737243652
    5. '<|end|>' → logprob: -5.222769737243652
    6. ' x' → logprob: -6.972769737243652
    7. 'x' → logprob: -7.097769737243652
    8. '        
' → logprob: -7.222769737243652
    9. ' ' → logprob: -7.722769737243652
    10. '    
' → logprob: -8.347769737243652

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.00028040475444868207
    2. ' x' → logprob: -8.250280380249023
    3. '   ' → logprob: -11.375280380249023
    4. '       ' → logprob: -12.000280380249023
    5. '	x' → logprob: -14.125280380249023
    6. ''x' → logprob: -15.500280380249023
    7. '    ' → logprob: -16.125280380249023
    8. 'current' → logprob: -16.500280380249023
    9. '"x' → logprob: -16.500280380249023
    10. ')x' → logprob: -16.750280380249023

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014172682538628578
    2. '=' → logprob: -4.264172554016113
    3. ' ' → logprob: -11.639172554016113
    4. '=self' → logprob: -15.764172554016113
    5. ')' → logprob: -16.76417350769043
    6. ' =
' → logprob: -16.88917350769043
    7. ',' → logprob: -17.13917350769043
    8. '<|end|>' → logprob: -17.63917350769043
    9. ' =)' → logprob: -18.26417350769043
    10. '.' → logprob: -18.88917350769043

Token 76: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006273718317970634
    2. ' self' → logprob: -7.375627517700195
    3. 'elf' → logprob: -15.000627517700195
    4. ' ' → logprob: -15.875627517700195
    5. '   ' → logprob: -16.125627517700195
    6. '	self' → logprob: -17.000627517700195
    7. '
' → logprob: -17.250627517700195
    8. '  ' → logprob: -17.500627517700195
    9. '(self' → logprob: -17.750627517700195
    10. '=self' → logprob: -17.875627517700195

Token 77: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.007711681537330151
    2. '.' → logprob: -4.882711887359619
    3. 'root' → logprob: -9.382711410522461
    4. ' .' → logprob: -11.757711410522461
    5. '.tree' → logprob: -12.382711410522461
    6. '[root' → logprob: -13.132711410522461
    7. '.ro' → logprob: -13.257711410522461
    8. '.
' → logprob: -14.382711410522461
    9. '.r' → logprob: -14.632711410522461
    10. '.s' → logprob: -14.757711410522461

Token 78: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1360454261302948
    2. ' 
' → logprob: -2.136045455932617
    3. '  
' → logprob: -5.636045455932617
    4. '        
' → logprob: -6.386045455932617
    5. '<|end|>' → logprob: -6.386045455932617
    6. 'while' → logprob: -7.511045455932617
    7. ' while' → logprob: -7.636045455932617
    8. '
' → logprob: -8.386045455932617
    9. '       ' → logprob: -8.511045455932617
    10. ' ' → logprob: -8.886045455932617

Token 79: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2386985421180725
    2. ' 
' → logprob: -1.7386984825134277
    3. '        
' → logprob: -4.113698482513428
    4. '  
' → logprob: -4.863698482513428
    5. '       ' → logprob: -5.488698482513428
    6. ' while' → logprob: -5.988698482513428
    7. 'while' → logprob: -6.113698482513428
    8. '<|end|>' → logprob: -6.738698482513428
    9. '    
' → logprob: -7.488698482513428
    10. ' ' → logprob: -8.113698959350586

Token 80: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0032130072358995676
    2. ' while' → logprob: -5.753212928771973
    3. '       ' → logprob: -10.628212928771973
    4. '	while' → logprob: -11.753212928771973
    5. '   ' → logprob: -13.753212928771973
    6. '
' → logprob: -14.503212928771973
    7. 'While' → logprob: -14.628212928771973
    8. '        
' → logprob: -14.628212928771973
    9. ' 
' → logprob: -15.128212928771973
    10. '    ' → logprob: -16.12821388244629

Token 81: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47407880425453186
    2. ' x' → logprob: -0.9740787744522095
    3. ' ' → logprob: -14.099079132080078
    4. '(x' → logprob: -14.474079132080078
    5. '	x' → logprob: -15.099079132080078
    6. 'not' → logprob: -16.099079132080078
    7. ' not' → logprob: -16.599079132080078
    8. '   ' → logprob: -17.099079132080078
    9. '[x' → logprob: -17.849079132080078
    10. ')x' → logprob: -18.099079132080078

Token 82: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2812844216823578
    2. ' !=' → logprob: -1.4062844514846802
    3. '!=-' → logprob: -9.28128433227539
    4. 'is' → logprob: -11.15628433227539
    5. '!' → logprob: -12.28128433227539
    6. ' is' → logprob: -12.40628433227539
    7. ' ' → logprob: -12.53128433227539
    8. '!=(' → logprob: -12.78128433227539
    9. '()!=' → logprob: -12.90628433227539
    10. ')!=' → logprob: -13.65628433227539

Token 83: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0022404235787689686
    2. ' NIL' → logprob: -6.1272406578063965
    3. ' ' → logprob: -10.252240180969238
    4. '   ' → logprob: -11.877240180969238
    5. '	N' → logprob: -12.127240180969238
    6. '  ' → logprob: -13.377240180969238
    7. '-' → logprob: -13.377240180969238
    8. ' -' → logprob: -13.502240180969238
    9. '-N' → logprob: -13.627240180969238
    10. '    ' → logprob: -15.127240180969238

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03133165091276169
    2. ' and' → logprob: -3.5313315391540527
    3. ':
' → logprob: -7.031331539154053
    4. 'and' → logprob: -7.406331539154053
    5. ' :' → logprob: -9.656332015991211
    6. '):' → logprob: -11.531332015991211
    7. '<|end|>' → logprob: -12.156332015991211
    8. '       ' → logprob: -12.781332015991211
    9. ',' → logprob: -13.656332015991211
    10. ':

' → logprob: -13.781332015991211

Token 85: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5463873744010925
    2. '
' → logprob: -1.9213874340057373
    3. ':' → logprob: -2.5463874340057373
    4. 'y' → logprob: -3.2963874340057373
    5. '       ' → logprob: -3.2963874340057373
    6. ':
' → logprob: -3.4213874340057373
    7. '<|end|>' → logprob: -4.046387195587158
    8. ' 
' → logprob: -4.421387195587158
    9. '            
' → logprob: -5.171387195587158
    10. ' ' → logprob: -5.171387195587158

Token 86: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.2717239260673523
    2. ' y' → logprob: -1.771723985671997
    3. ' ' → logprob: -3.521723985671997
    4. ' 
' → logprob: -3.771723985671997
    5. '           ' → logprob: -5.146723747253418
    6. '            ' → logprob: -5.771723747253418
    7. '    ' → logprob: -6.771723747253418
    8. '        ' → logprob: -6.771723747253418
    9. '       ' → logprob: -7.146723747253418
    10. '
' → logprob: -7.271723747253418

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028057026211172342
    2. '=' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.502805709838867
    4. 'x' → logprob: -16.252805709838867
    5. ' =
' → logprob: -16.377805709838867
    6. ',' → logprob: -16.627805709838867
    7. '    ' → logprob: -17.127805709838867
    8. '=x' → logprob: -17.502805709838867
    9. '  ' → logprob: -17.627805709838867
    10. ')' → logprob: -18.127805709838867

Token 88: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861456897109747
    2. ' x' → logprob: -4.758614540100098
    3. '	x' → logprob: -17.383615493774414
    4. ' ' → logprob: -18.258615493774414
    5. ')x' → logprob: -19.008615493774414
    6. '"x' → logprob: -20.508615493774414
    7. '$x' → logprob: -20.508615493774414
    8. '
' → logprob: -20.758615493774414
    9. ',x' → logprob: -21.383615493774414
    10. ''x' → logprob: -21.508615493774414

Token 89: '

' (ID: 279)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7253913879394531
    2. '
' → logprob: -0.8503913879394531
    3. 'if' → logprob: -3.850391387939453
    4. ' if' → logprob: -4.100391387939453
    5. '  
' → logprob: -4.475391387939453
    6. '       ' → logprob: -4.600391387939453
    7. ' ' → logprob: -4.725391387939453
    8. '        
' → logprob: -4.975391387939453
    9. '    
' → logprob: -5.725391387939453
    10. '           ' → logprob: -5.975391387939453

Token 90: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7748650312423706
    2. ' if' → logprob: -1.6498650312423706
    3. '       ' → logprob: -2.27486515045166
    4. ' 
' → logprob: -2.39986515045166
    5. '        
' → logprob: -3.02486515045166
    6. '
' → logprob: -3.52486515045166
    7. ' ' → logprob: -3.77486515045166
    8. '  
' → logprob: -4.14986515045166
    9. '        ' → logprob: -4.27486515045166
    10. '           ' → logprob: -5.02486515045166

Token 91: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03302181139588356
    2. ' if' → logprob: -3.783021926879883
    3. '           ' → logprob: -4.908021926879883
    4. 'z' → logprob: -6.658021926879883
    5. 'key' → logprob: -7.158021926879883
    6. 'x' → logprob: -8.658021926879883
    7. ' key' → logprob: -10.783021926879883
    8. '       ' → logprob: -10.908021926879883
    9. '   ' → logprob: -11.158021926879883
    10. 'node' → logprob: -11.158021926879883

Token 92: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.523787260055542
    2. 'z' → logprob: -0.898787260055542
    3. '            ' → logprob: -8.523787498474121
    4. 'self' → logprob: -8.523787498474121
    5. '           ' → logprob: -8.898787498474121
    6. ' self' → logprob: -9.398787498474121
    7. ' ' → logprob: -11.523787498474121
    8. 'key' → logprob: -12.398787498474121
    9. '	z' → logprob: -12.398787498474121
    10. 'x' → logprob: -12.523787498474121

Token 93: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0023283136542886496
    2. '.' → logprob: -6.127328395843506
    3. '<' → logprob: -9.502327919006348
    4. ' <' → logprob: -10.002327919006348
    5. '.<' → logprob: -11.752327919006348
    6. ' .' → logprob: -12.127327919006348
    7. '[key' → logprob: -12.377327919006348
    8. 'key' → logprob: -13.002327919006348
    9. ' key' → logprob: -14.627327919006348
    10. '   ' → logprob: -14.877327919006348

Token 94: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3870871365070343
    2. '<' → logprob: -1.137087106704712
    3. ' ' → logprob: -9.137086868286133
    4. '.' → logprob: -10.012086868286133
    5. '.key' → logprob: -10.762086868286133
    6. '<int' → logprob: -12.137086868286133
    7. '<Key' → logprob: -12.512086868286133
    8. '[' → logprob: -12.887086868286133
    9. '<class' → logprob: -13.012086868286133
    10. '<|end|>' → logprob: -13.012086868286133

Token 95: ' x' (ID: 1215)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2528269290924072
    2. ' self' → logprob: -1.7528269290924072
    3. ' x' → logprob: -3.6278269290924072
    4. 'x' → logprob: -3.7528269290924072
    5. ' ' → logprob: -10.502826690673828
    6. ' y' → logprob: -11.377826690673828
    7. '	self' → logprob: -11.627826690673828
    8. '(self' → logprob: -11.877826690673828
    9. 'y' → logprob: -12.002826690673828
    10. '[self' → logprob: -12.627826690673828

Token 96: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.000205566844670102
    2. '.' → logprob: -8.500205993652344
    3. ' .' → logprob: -13.750205993652344
    4. 'key' → logprob: -14.875205993652344
    5. '.keys' → logprob: -15.875205993652344
    6. '.Key' → logprob: -16.125205993652344
    7. '   ' → logprob: -16.750205993652344
    8. '[key' → logprob: -16.875205993652344
    9. ''.' → logprob: -17.000205993652344
    10. '`.' → logprob: -17.000205993652344

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007401815615594387
    2. ':
' → logprob: -5.007401943206787
    3. '           ' → logprob: -8.507401466369629
    4. '               ' → logprob: -8.757401466369629
    5. '<|end|>' → logprob: -8.757401466369629
    6. '):' → logprob: -10.007401466369629
    7. ' :' → logprob: -10.132401466369629
    8. '<|end|>' → logprob: -10.632401466369629
    9. '):
' → logprob: -10.882401466369629
    10. ':

' → logprob: -11.632401466369629

Token 98: '               ' (ID: 506)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9887326955795288
    2. '               ' → logprob: -1.3637326955795288
    3. '            
' → logprob: -2.2387328147888184
    4. '           ' → logprob: -2.3637328147888184
    5. '
' → logprob: -2.8637328147888184
    6. '                
' → logprob: -3.3637328147888184
    7. ' x' → logprob: -3.8637328147888184
    8. '<|end|>' → logprob: -3.9887328147888184
    9. '  
' → logprob: -4.488732814788818
    10. ' ' → logprob: -4.738732814788818

Token 99: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.07336337864398956
    2. 'x' (adapté à ' x') → logprob: -2.8233633041381836
    3. '               ' → logprob: -4.698363304138184
    4. ' 
' → logprob: -6.573363304138184
    5. '
' → logprob: -7.823363304138184
    6. '           ' → logprob: -8.823363304138184
    7. '                
' → logprob: -9.698363304138184
    8. ' ' → logprob: -9.823363304138184
    9. '                ' → logprob: -10.198363304138184
    10. '            ' → logprob: -10.448363304138184

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692894041538239
    2. '=' → logprob: -2.1269290447235107
    3. '.left' → logprob: -14.87692928314209
    4. '.' → logprob: -15.25192928314209
    5. '.=' → logprob: -16.251928329467773
    6. ' ' → logprob: -16.501928329467773
    7. '=self' → logprob: -16.626928329467773
    8. '＝' → logprob: -17.126928329467773
    9. '   ' → logprob: -17.251928329467773
    10. ' =
' → logprob: -17.751928329467773

Token 101: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.01427562814205885
    2. ' x' → logprob: -4.264275550842285
    3. 'self' → logprob: -9.139275550842285
    4. ' self' → logprob: -12.764275550842285
    5. '	x' → logprob: -14.389275550842285
    6. '           ' → logprob: -15.139275550842285
    7. '   ' → logprob: -15.389275550842285
    8. ' ' → logprob: -15.514275550842285
    9. '               ' → logprob: -15.514275550842285
    10. 's' → logprob: -16.1392765045166

Token 102: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.4391956685576588e-05
    2. '.' → logprob: -10.750024795532227
    3. ' .' → logprob: -13.250024795532227
    4. '.right' → logprob: -13.750024795532227
    5. '.le' → logprob: -17.500024795532227
    6. '.Left' → logprob: -17.750024795532227
    7. '.parent' → logprob: -19.000024795532227
    8. 'left' → logprob: -19.125024795532227
    9. '.self' → logprob: -20.125024795532227
    10. '.l' → logprob: -20.250024795532227

Token 103: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005837437696754932
    2. 'else' → logprob: -5.755837440490723
    3. ' else' → logprob: -6.130837440490723
    4. '
' → logprob: -7.755837440490723
    5. '            
' → logprob: -11.005837440490723
    6. '               ' → logprob: -11.630837440490723
    7. 'elif' → logprob: -12.130837440490723
    8. '<|end|>' → logprob: -12.380837440490723
    9. '  
' → logprob: -12.630837440490723
    10. ' 
' → logprob: -12.755837440490723

Token 104: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007793882396072149
    2. ' else' → logprob: -5.75779390335083
    3. '
' → logprob: -5.88279390335083
    4. 'else' → logprob: -6.38279390335083
    5. '            
' → logprob: -9.507793426513672
    6. '  
' → logprob: -11.507793426513672
    7. '               ' → logprob: -11.632793426513672
    8. '    
' → logprob: -11.632793426513672
    9. '       ' → logprob: -11.757793426513672
    10. ' 
' → logprob: -12.257793426513672

Token 105: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1852630227804184
    2. 'else' (adapté à ' else') → logprob: -1.8102630376815796
    3. '           ' → logprob: -5.310263156890869
    4. '       ' → logprob: -7.685263156890869
    5. '	else' → logprob: -9.685262680053711
    6. '   ' → logprob: -12.185262680053711
    7. ' 
' → logprob: -12.310262680053711
    8. '
' → logprob: -12.435262680053711
    9. '        ' → logprob: -12.435262680053711
    10. '               ' → logprob: -12.560262680053711

Token 106: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19966109097003937
    2. ':' → logprob: -2.0746610164642334
    3. ':
' → logprob: -2.9496610164642334
    4. '           ' → logprob: -6.0746612548828125
    5. ' x' → logprob: -7.5746612548828125
    6. ' :
' → logprob: -9.949661254882812
    7. '              ' → logprob: -9.949661254882812
    8. '       ' → logprob: -10.574661254882812
    9. '                ' → logprob: -10.949661254882812
    10. '            ' → logprob: -11.074661254882812

Token 107: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12998254597187042
    2. ' x' → logprob: -2.1299824714660645
    3. 'x' → logprob: -6.0049824714660645
    4. '           ' → logprob: -7.7549824714660645
    5. ':' → logprob: -9.004982948303223
    6. ' ' → logprob: -11.754982948303223
    7. '   ' → logprob: -12.004982948303223
    8. ':
' → logprob: -12.129982948303223
    9. ' ' → logprob: -12.379982948303223
    10. '              ' → logprob: -13.004982948303223

Token 108: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1602497100830078
    2. 'x' (adapté à ' x') → logprob: -1.9102497100830078
    3. '               ' → logprob: -10.660249710083008
    4. '           ' → logprob: -13.660249710083008
    5. '                   ' → logprob: -15.035249710083008
    6. '	x' → logprob: -15.035249710083008
    7. '                ' → logprob: -15.785249710083008
    8. ' ' → logprob: -16.785249710083008
    9. ' ' → logprob: -16.910249710083008
    10. '   ' → logprob: -16.910249710083008

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. '.' → logprob: -16.136871337890625
    4. ' ' → logprob: -16.636871337890625
    5. '＝' → logprob: -17.761871337890625
    6. '.=' → logprob: -18.386871337890625
    7. '   ' → logprob: -18.761871337890625
    8. ')' → logprob: -18.761871337890625
    9. '.right' → logprob: -19.386871337890625
    10. '	' → logprob: -19.761871337890625

Token 110: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3868725001811981
    2. ' x' → logprob: -1.1368725299835205
    3. 'right' → logprob: -14.886872291564941
    4. '	x' → logprob: -14.886872291564941
    5. '   ' → logprob: -15.761872291564941
    6. ' ' → logprob: -15.761872291564941
    7. ')x' → logprob: -15.886872291564941
    8. ' right' → logprob: -16.386873245239258
    9. '.x' → logprob: -17.011873245239258
    10. 'self' → logprob: -17.136873245239258

Token 111: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0003385614836588502
    2. '.' → logprob: -8.000338554382324
    3. '.left' → logprob: -13.750338554382324
    4. ' .' → logprob: -13.750338554382324
    5. 'right' → logprob: -14.500338554382324
    6. '.parent' → logprob: -14.500338554382324
    7. '.r' → logprob: -18.50033950805664
    8. ').' → logprob: -18.75033950805664
    9. '	right' → logprob: -18.75033950805664
    10. '.Right' → logprob: -19.00033950805664

Token 112: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1873699575662613
    2. '
' → logprob: -1.8123699426651
    3. '        
' → logprob: -4.9373698234558105
    4. '<|end|>' → logprob: -9.312370300292969
    5. '
' → logprob: -9.437370300292969
    6. '  
' → logprob: -10.062370300292969
    7. '    
' → logprob: -10.312370300292969
    8. '       
' → logprob: -10.437370300292969
    9. '            
' → logprob: -10.562370300292969
    10. '

' → logprob: -10.687370300292969

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06340407580137253
    2. '
' → logprob: -2.813404083251953
    3. '        
' → logprob: -6.688404083251953
    4. '
' → logprob: -10.063404083251953
    5. '<|end|>' → logprob: -10.188404083251953
    6. '    
' → logprob: -11.063404083251953
    7. '  
' → logprob: -11.188404083251953
    8. '   ' → logprob: -11.688404083251953
    9. '            
' → logprob: -11.938404083251953
    10. '           ' → logprob: -12.063404083251953

Token 114: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.09026399999856949
    2. '       ' → logprob: -2.465264081954956
    3. 'if' → logprob: -7.590263843536377
    4. ' z' → logprob: -7.715263843536377
    5. '   ' → logprob: -8.340264320373535
    6. '
' → logprob: -9.715264320373535
    7. '        
' → logprob: -10.590264320373535
    8. ' if' → logprob: -11.590264320373535
    9. ' ' → logprob: -12.215264320373535
    10. '           ' → logprob: -12.215264320373535

Token 115: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -1.1875571544806007e-05
    2. '.' → logprob: -11.500011444091797
    3. ' .' → logprob: -14.000011444091797
    4. '.Parent' → logprob: -16.125011444091797
    5. 'parent' → logprob: -16.250011444091797
    6. '.key' → logprob: -16.500011444091797
    7. '.left' → logprob: -16.625011444091797
    8. '.p' → logprob: -16.750011444091797
    9. ').' → logprob: -16.875011444091797
    10. '.prev' → logprob: -16.875011444091797

Token 116: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931478977203369
    2. ' =' → logprob: -0.6931478977203369
    3. ' ' → logprob: -14.318147659301758
    4. '＝' → logprob: -16.818147659301758
    5. ')' → logprob: -17.068147659301758
    6. '=y' → logprob: -17.943147659301758
    7. ',' → logprob: -18.443147659301758
    8. ' =
' → logprob: -19.068147659301758
    9. '=

' → logprob: -19.568147659301758
    10. '=z' → logprob: -19.943147659301758

Token 117: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.02975071594119072
    2. ' y' → logprob: -3.5297508239746094
    3. ' ' → logprob: -16.02975082397461
    4. '	y' → logprob: -16.40475082397461
    5. ''y' → logprob: -17.27975082397461
    6. ')y' → logprob: -18.02975082397461
    7. '   ' → logprob: -18.27975082397461
    8. '[y' → logprob: -19.40475082397461
    9. ' ' → logprob: -19.52975082397461
    10. '@y' → logprob: -19.65475082397461

Token 118: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09770655632019043
    2. '       ' → logprob: -2.4727065563201904
    3. ' if' → logprob: -4.8477067947387695
    4. '<|end|>' → logprob: -7.4727067947387695
    5. '
' → logprob: -9.09770679473877
    6. '```' → logprob: -9.59770679473877
    7. 'If' → logprob: -9.72270679473877
    8. '        
' → logprob: -11.09770679473877
    9. '   ' → logprob: -11.22270679473877
    10. ';if' → logprob: -11.22270679473877

Token 119: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7100951075553894
    2. '       ' → logprob: -0.8350951075553894
    3. ' if' → logprob: -2.710095167160034
    4. '<|end|>' → logprob: -5.085094928741455
    5. '
' → logprob: -7.585094928741455
    6. '```' → logprob: -7.710094928741455
    7. 'If' → logprob: -8.210095405578613
    8. '        
' → logprob: -8.585095405578613
    9. '   ' → logprob: -8.835095405578613
    10. ' ' → logprob: -9.085095405578613

Token 120: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -2.2961512513575144e-05
    2. ' if' → logprob: -10.875022888183594
    3. '       ' → logprob: -12.625022888183594
    4. '
' → logprob: -15.375022888183594
    5. 'If' → logprob: -15.500022888183594
    6. '   ' → logprob: -16.375022888183594
    7. '           ' → logprob: -17.000022888183594
    8. 'z' → logprob: -17.125022888183594
    9. '```' → logprob: -17.125022888183594
    10. 'y' → logprob: -17.625022888183594

Token 121: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.009757863357663155
    2. ' y' → logprob: -4.634757995605469
    3. '   ' → logprob: -13.759757995605469
    4. ' ' → logprob: -15.009757995605469
    5. '	y' → logprob: -15.759757995605469
    6. '  ' → logprob: -15.759757995605469
    7. '       ' → logprob: -16.13475799560547
    8. '    ' → logprob: -16.38475799560547
    9. 'N' → logprob: -16.75975799560547
    10. '     ' → logprob: -17.63475799560547

Token 122: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02350529655814171
    2. ' ==' → logprob: -3.773505210876465
    3. '=' → logprob: -8.398505210876465
    4. 'is' → logprob: -11.398505210876465
    5. 'N' → logprob: -12.023505210876465
    6. '==
' → logprob: -12.148505210876465
    7. ' =' → logprob: -12.648505210876465
    8. ' ' → logprob: -13.523505210876465
    9. ')==' → logprob: -13.648505210876465
    10. ')' → logprob: -13.648505210876465

Token 123: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0013305948814377189
    2. ' NIL' → logprob: -6.626330375671387
    3. ' ' → logprob: -13.376330375671387
    4. '   ' → logprob: -13.751330375671387
    5. ' N' → logprob: -14.501330375671387
    6. '	N' → logprob: -14.876330375671387
    7. 'None' → logprob: -15.126330375671387
    8. '  ' → logprob: -15.126330375671387
    9. '-' → logprob: -15.751330375671387
    10. ' -' → logprob: -16.376331329345703

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22543297708034515
    2. ':
' → logprob: -1.6004329919815063
    3. ':

' → logprob: -12.475433349609375
    4. '=' → logprob: -12.475433349609375
    5. '):
' → logprob: -12.600433349609375
    6. '():
' → logprob: -13.100433349609375
    7. ':
' → logprob: -13.225433349609375
    8. ' :' → logprob: -13.350433349609375
    9. ' :
' → logprob: -13.475433349609375
    10. '           ' → logprob: -13.975433349609375

Token 125: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14774653315544128
    2. 'self' → logprob: -2.1477465629577637
    3. ' self' → logprob: -3.8977465629577637
    4. '               ' → logprob: -8.647746086120605
    5. '   ' → logprob: -10.147746086120605
    6. ' ' → logprob: -10.397746086120605
    7. '       ' → logprob: -11.022746086120605
    8. '	self' → logprob: -11.522746086120605
    9. '  ' → logprob: -12.022746086120605
    10. ',' → logprob: -12.147746086120605

Token 126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.030108671635389328
    2. ' self' → logprob: -3.530108690261841
    3. '       ' → logprob: -8.530108451843262
    4. '           ' → logprob: -8.780108451843262
    5. '   ' → logprob: -12.780108451843262
    6. '               ' → logprob: -13.405108451843262
    7. '	self' → logprob: -13.405108451843262
    8. ' ' → logprob: -14.030108451843262
    9. '(self' → logprob: -16.155109405517578
    10. '  ' → logprob: -16.405109405517578

Token 127: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0004235243541188538
    2. '.' → logprob: -8.125423431396484
    3. 'root' → logprob: -9.000423431396484
    4. ' .' → logprob: -13.375423431396484
    5. '[root' → logprob: -13.625423431396484
    6. '.ro' → logprob: -14.375423431396484
    7. '.tree' → logprob: -15.250423431396484
    8. '=root' → logprob: -16.000423431396484
    9. '	root' → logprob: -16.125423431396484
    10. '/root' → logprob: -17.125423431396484

Token 128: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008619419299066067
    2. '=' → logprob: -4.75861930847168
    3. ' ' → logprob: -12.25861930847168
    4. '=z' → logprob: -16.13361930847168
    5. ')' → logprob: -18.38361930847168
    6. ' ' → logprob: -18.63361930847168
    7. ' =
' → logprob: -18.88361930847168
    8. ',' → logprob: -19.38361930847168
    9. '＝' → logprob: -19.38361930847168
    10. '    ' → logprob: -19.88361930847168

Token 129: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.1602257490158081
    2. ' z' → logprob: -1.910225749015808
    3. '	z' → logprob: -14.035225868225098
    4. '   ' → logprob: -15.785225868225098
    5. ''z' → logprob: -16.28522491455078
    6. '    ' → logprob: -16.41022491455078
    7. ' ' → logprob: -16.53522491455078
    8. ' ' → logprob: -16.66022491455078
    9. '           ' → logprob: -16.66022491455078
    10. '_z' → logprob: -16.91022491455078

Token 130: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03525478020310402
    2. 'else' → logprob: -3.410254716873169
    3. ' else' → logprob: -6.535254955291748
    4. '
' → logprob: -9.53525447845459
    5. 'elif' → logprob: -9.66025447845459
    6. '   ' → logprob: -12.66025447845459
    7. 'return' → logprob: -12.78525447845459
    8. '           ' → logprob: -12.91025447845459
    9. '```' → logprob: -13.16025447845459
    10. ' elif' → logprob: -13.41025447845459

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028612151741981506
    2. 'else' → logprob: -3.6536121368408203
    3. 'elif' → logprob: -6.15361213684082
    4. ' else' → logprob: -8.77861213684082
    5. ' elif' → logprob: -11.65361213684082
    6. '```' → logprob: -12.15361213684082
    7. '   ' → logprob: -12.52861213684082
    8. '           ' → logprob: -12.52861213684082
    9. '
' → logprob: -13.77861213684082
    10. 'elseif' → logprob: -13.90361213684082

Token 132: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.01637216843664646
    2. '       ' → logprob: -4.516372203826904
    3. ' elif' → logprob: -5.766372203826904
    4. 'else' → logprob: -6.141372203826904
    5. '   ' → logprob: -11.641371726989746
    6. ' else' → logprob: -11.891371726989746
    7. 'el' → logprob: -11.891371726989746
    8. '	elif' → logprob: -13.266371726989746
    9. 'elseif' → logprob: -13.516371726989746
    10. '           ' → logprob: -14.391371726989746

Token 133: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.25199922919273376
    2. 'z' → logprob: -1.5019992589950562
    3. '           ' → logprob: -10.751998901367188
    4. '    ' → logprob: -11.126998901367188
    5. '   ' → logprob: -11.626998901367188
    6. ' ' → logprob: -12.126998901367188
    7. '       ' → logprob: -12.376998901367188
    8. '	z' → logprob: -12.626998901367188
    9. ' y' → logprob: -12.876998901367188
    10. '        ' → logprob: -12.876998901367188

Token 134: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -10.750022888183594
    3. ' .' → logprob: -14.250022888183594
    4. 'key' → logprob: -14.375022888183594
    5. ' key' → logprob: -16.250022888183594
    6. '.parent' → logprob: -17.375022888183594
    7. '.keys' → logprob: -17.500022888183594
    8. '[key' → logprob: -17.625022888183594
    9. '.left' → logprob: -17.875022888183594
    10. '<' → logprob: -17.875022888183594

Token 135: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02632097154855728
    2. '<' → logprob: -3.6513209342956543
    3. ' ' → logprob: -10.901321411132812
    4. '.key' → logprob: -14.026321411132812
    5. '.' → logprob: -14.901321411132812
    6. '   ' → logprob: -15.651321411132812
    7. '<N' → logprob: -16.026321411132812
    8. ' <
' → logprob: -16.276321411132812
    9. '<int' → logprob: -16.526321411132812
    10. '<n' → logprob: -16.776321411132812

Token 136: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1002068892121315
    2. ' y' → logprob: -2.3502068519592285
    3. '	y' → logprob: -15.475207328796387
    4. ' ' → logprob: -16.97520637512207
    5. '   ' → logprob: -17.47520637512207
    6. ')y' → logprob: -17.72520637512207
    7. '.y' → logprob: -18.10020637512207
    8. '<|end|>' → logprob: -18.47520637512207
    9. ''y' → logprob: -18.60020637512207
    10. '       ' → logprob: -19.22520637512207

Token 137: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00016063073417171836
    2. '.' → logprob: -8.750160217285156
    3. ' .' → logprob: -13.375160217285156
    4. 'key' → logprob: -15.250160217285156
    5. '.left' → logprob: -16.250160217285156
    6. '.keys' → logprob: -16.875160217285156
    7. ' key' → logprob: -17.125160217285156
    8. '.Key' → logprob: -17.375160217285156
    9. '   ' → logprob: -17.625160217285156
    10. '[key' → logprob: -18.250160217285156

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05501159653067589
    2. ':
' → logprob: -2.930011510848999
    3. '           ' → logprob: -9.180011749267578
    4. ':
' → logprob: -11.930011749267578
    5. ' :' → logprob: -12.180011749267578
    6. '       ' → logprob: -12.305011749267578
    7. '):
' → logprob: -12.805011749267578
    8. ':

' → logprob: -13.555011749267578
    9. ' :
' → logprob: -13.680011749267578
    10. '):' → logprob: -14.180011749267578

Token 139: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.04743514955043793
    2. 'y' → logprob: -3.4224350452423096
    3. '           ' → logprob: -4.297435283660889
    4. 'z' → logprob: -10.29743480682373
    5. ':' → logprob: -11.54743480682373
    6. ' ' → logprob: -11.67243480682373
    7. '       ' → logprob: -12.04743480682373
    8. '   ' → logprob: -12.29743480682373
    9. '               ' → logprob: -12.67243480682373
    10. ' z' → logprob: -12.79743480682373

Token 140: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.04859565943479538
    2. ' y' → logprob: -3.048595666885376
    3. '           ' → logprob: -11.798595428466797
    4. '       ' → logprob: -14.798595428466797
    5. '   ' → logprob: -15.673595428466797
    6. '	y' → logprob: -16.048595428466797
    7. ''y' → logprob: -17.673595428466797
    8. '  ' → logprob: -17.923595428466797
    9. ' ' → logprob: -18.048595428466797
    10. '               ' → logprob: -18.423595428466797

Token 141: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.006724960170686245
    2. '.' → logprob: -5.006724834442139
    3. '.right' → logprob: -12.006725311279297
    4. ' .' → logprob: -13.381725311279297
    5. '.Left' → logprob: -14.631725311279297
    6. '.child' → logprob: -14.881725311279297
    7. '.le' → logprob: -15.131725311279297
    8. '.parent' → logprob: -15.631725311279297
    9. '.next' → logprob: -15.756725311279297
    10. '.children' → logprob: -16.756725311279297

Token 142: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931549310684204
    2. ' =' → logprob: -0.6931549310684204
    3. '=z' → logprob: -11.818155288696289
    4. ' ' → logprob: -15.568155288696289
    5. ' z' → logprob: -17.31815528869629
    6. '＝' → logprob: -17.31815528869629
    7. '   ' → logprob: -17.69315528869629
    8. ')' → logprob: -17.81815528869629
    9. 'z' → logprob: -18.19315528869629
    10. '    ' → logprob: -18.31815528869629

Token 143: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.2014141082763672
    2. 'z' → logprob: -1.7014141082763672
    3. '	z' → logprob: -14.201414108276367
    4. '           ' → logprob: -17.076414108276367
    5. ' ' → logprob: -17.451414108276367
    6. ' ' → logprob: -17.826414108276367
    7. '    ' → logprob: -18.201414108276367
    8. ''z' → logprob: -18.326414108276367
    9. '
' → logprob: -18.451414108276367
    10. '.z' → logprob: -18.576414108276367

Token 144: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08911547809839249
    2. 'else' → logprob: -2.7141153812408447
    3. ' else' → logprob: -3.9641153812408447
    4. '	else' → logprob: -11.964115142822266
    5. '	' → logprob: -13.089115142822266
    6. '   ' → logprob: -13.964115142822266
    7. '
' → logprob: -14.964115142822266
    8. 'elif' → logprob: -14.964115142822266
    9. 'Else' → logprob: -15.089115142822266
    10. '           ' → logprob: -15.214115142822266

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14504894614219666
    2. 'else' → logprob: -2.1450488567352295
    3. ' else' → logprob: -4.020049095153809
    4. '	else' → logprob: -12.645049095153809
    5. '   ' → logprob: -14.395049095153809
    6. '_else' → logprob: -14.520049095153809
    7. '      ' → logprob: -15.270049095153809
    8. '	' → logprob: -15.520049095153809
    9. 'elif' → logprob: -15.645049095153809
    10. '           ' → logprob: -16.145048141479492

Token 146: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.22782842814922333
    2. ' else' → logprob: -1.9778283834457397
    3. '       ' → logprob: -2.7278285026550293
    4. '	else' → logprob: -12.352828025817871
    5. '   ' → logprob: -12.602828025817871
    6. '_else' → logprob: -15.477828025817871
    7. '           ' → logprob: -16.352828979492188
    8. '      ' → logprob: -16.477828979492188
    9. 'els' → logprob: -16.602828979492188
    10. ' ' → logprob: -16.602828979492188

Token 147: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.128069207072258
    2. ':
' → logprob: -2.7530691623687744
    3. ':' → logprob: -2.8780691623687744
    4. ' y' → logprob: -9.378068923950195
    5. ' :
' → logprob: -9.753068923950195
    6. ' :' → logprob: -10.378068923950195
    7. '          ' → logprob: -11.128068923950195
    8. ':
' → logprob: -11.378068923950195
    9. '               ' → logprob: -11.628068923950195
    10. '   ' → logprob: -11.878068923950195

Token 148: '           ' (ID: 352)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.010203762911260128
    2. '           ' → logprob: -4.635203838348389
    3. 'y' → logprob: -7.760203838348389
    4. ' ' → logprob: -11.88520336151123
    5. ' z' → logprob: -12.01020336151123
    6. '               ' → logprob: -13.38520336151123
    7. ' ' → logprob: -13.51020336151123
    8. '          ' → logprob: -13.88520336151123
    9. '   ' → logprob: -14.01020336151123
    10. '            ' → logprob: -14.13520336151123

Token 149: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.3868729770183563
    2. ' y' → logprob: -1.1368730068206787
    3. '           ' → logprob: -13.636873245239258
    4. '       ' → logprob: -15.136873245239258
    5. '   ' → logprob: -15.511873245239258
    6. '	y' → logprob: -15.761873245239258
    7. ''y' → logprob: -15.761873245239258
    8. 'z' → logprob: -17.261873245239258
    9. ' ' → logprob: -17.886873245239258
    10. 'y's' → logprob: -18.136873245239258

Token 150: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0025095471646636724
    2. '.' → logprob: -6.002509593963623
    3. '.left' → logprob: -10.502509117126465
    4. ' .' → logprob: -12.127509117126465
    5. 'right' → logprob: -15.002509117126465
    6. '.key' → logprob: -15.377509117126465
    7. '.Right' → logprob: -15.752509117126465
    8. '.parent' → logprob: -15.877509117126465
    9. '[right' → logprob: -17.50251007080078
    10. ').' → logprob: -17.75251007080078

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020741820335388
    2. ' =' → logprob: -2.3502073287963867
    3. '=z' → logprob: -14.100207328796387
    4. ' ' → logprob: -17.475208282470703
    5. 'z' → logprob: -17.850208282470703
    6. '   ' → logprob: -18.600208282470703
    7. ' z' → logprob: -19.100208282470703
    8. '=
' → logprob: -19.350208282470703
    9. ' =
' → logprob: -19.850208282470703
    10. '[' → logprob: -19.850208282470703

Token 152: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.029751643538475037
    2. ' z' → logprob: -3.5297515392303467
    3. '	z' → logprob: -13.904751777648926
    4. ' ' → logprob: -16.02975082397461
    5. '   ' → logprob: -16.40475082397461
    6. '  ' → logprob: -18.02975082397461
    7. '_z' → logprob: -18.52975082397461
    8. ''z' → logprob: -18.65475082397461
    9. ' ' → logprob: -19.02975082397461
    10. '(z' → logprob: -19.40475082397461

Token 153: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' inorder' (ID: 139692)
  Prédit: ' inorder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inorder' → logprob: -0.3859207332134247
    2. ' search' → logprob: -1.510920763015747
    3. 'search' → logprob: -2.760920763015747
    4. 'in' → logprob: -4.010920524597168
    5. ' in' → logprob: -4.385920524597168
    6. ' ' → logprob: -6.635920524597168
    7. ' find' → logprob: -7.010920524597168
    8. ' transplant' → logprob: -7.510920524597168
    9. '   ' → logprob: -7.635920524597168
    10. '_in' → logprob: -7.635920524597168

Token 157: '_walk' (ID: 143639)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7204328775405884
    2. '(' → logprob: -0.9704328775405884
    3. '_tr' → logprob: -2.720432758331299
    4. '_' → logprob: -2.845432758331299
    5. 'Traversal' → logprob: -5.220432758331299
    6. '_(' → logprob: -6.470432758331299
    7. 'self' → logprob: -6.845432758331299
    8. '_walk' → logprob: -6.845432758331299
    9. ' traversal' → logprob: -7.095432758331299
    10. 'tr' → logprob: -8.970433235168457

Token 158: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014187601394951344
    2. '(' → logprob: -4.264187812805176
    3. ' (' → logprob: -11.514187812805176
    4. 'self' → logprob: -12.014187812805176
    5. '   ' → logprob: -12.139187812805176
    6. '(
' → logprob: -13.514187812805176
    7. ' ' → logprob: -14.889187812805176
    8. ' self' → logprob: -15.139187812805176
    9. '       ' → logprob: -15.389187812805176
    10. '	self' → logprob: -16.13918685913086

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014890165999531746
    2. 'self' → logprob: -4.389890193939209
    3. '):' → logprob: -7.014890193939209
    4. '(self' → logprob: -7.389890193939209
    5. '   ' → logprob: -7.889890193939209
    6. ')' → logprob: -8.26488971710205
    7. ',self' → logprob: -9.38988971710205
    8. ' ,' → logprob: -9.88988971710205
    9. ' self' → logprob: -10.51488971710205
    10. ',node' → logprob: -10.76488971710205

Token 160: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2730037569999695
    2. ' self' → logprob: -1.5230038166046143
    3. 'x' → logprob: -4.898003578186035
    4. '   ' → logprob: -5.523003578186035
    5. 'node' → logprob: -5.523003578186035
    6. ' x' → logprob: -6.023003578186035
    7. ' node' → logprob: -6.148003578186035
    8. ' ' → logprob: -7.773003578186035
    9. 'u' → logprob: -8.773003578186035
    10. ' u' → logprob: -9.648003578186035

Token 161: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005994682665914297
    2. '):
' → logprob: -5.13099479675293
    3. '   ' → logprob: -10.13099479675293
    4. '       ' → logprob: -11.50599479675293
    5. ')' → logprob: -12.00599479675293
    6. '):
' → logprob: -12.63099479675293
    7. ' ):' → logprob: -13.13099479675293
    8. '):

' → logprob: -13.25599479675293
    9. ':' → logprob: -13.75599479675293
    10. ',' → logprob: -14.13099479675293

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003770270384848118
    2. ' if' → logprob: -5.628770351409912
    3. 'if' → logprob: -8.753769874572754
    4. '	' → logprob: -11.878769874572754
    5. '   ' → logprob: -13.003769874572754
    6. '	if' → logprob: -13.253769874572754
    7. '	   ' → logprob: -14.253769874572754
    8. ',' → logprob: -14.628769874572754
    9. '    ' → logprob: -16.50377082824707
    10. '        
' → logprob: -16.62877082824707

Token 163: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7002885937690735
    2. ' if' → logprob: -0.7002885937690735
    3. '       ' → logprob: -4.950288772583008
    4. '   ' → logprob: -11.075288772583008
    5. '	if' → logprob: -11.325288772583008
    6. ' ' → logprob: -12.575288772583008
    7. '    ' → logprob: -13.450288772583008
    8. '
' → logprob: -13.575288772583008
    9. '        ' → logprob: -14.950288772583008
    10. '  ' → logprob: -15.825288772583008

Token 164: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.029751067981123924
    2. ' node' → logprob: -3.5297510623931885
    3. 'not' → logprob: -15.52975082397461
    4. '	node' → logprob: -15.77975082397461
    5. '(node' → logprob: -16.40475082397461
    6. '   ' → logprob: -17.52975082397461
    7. ' ' → logprob: -17.77975082397461
    8. '[node' → logprob: -17.90475082397461
    9. 'nod' → logprob: -18.52975082397461
    10. ' not' → logprob: -18.65475082397461

Token 165: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.22120536863803864
    2. '!=' → logprob: -1.7212053537368774
    3. ' is' → logprob: -4.096205234527588
    4. 'is' → logprob: -5.846205234527588
    5. '   ' → logprob: -11.471205711364746
    6. 'not' → logprob: -11.846205711364746
    7. '!=-' → logprob: -11.846205711364746
    8. ' not' → logprob: -11.971205711364746
    9. '.is' → logprob: -11.971205711364746
    10. '!==' → logprob: -12.096205711364746

Token 166: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.762356209335849e-05
    2. ' NIL' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.87503719329834
    4. ' ' → logprob: -14.62503719329834
    5. 'None' → logprob: -14.62503719329834
    6. '  ' → logprob: -16.250038146972656
    7. 'self' → logprob: -16.500038146972656
    8. '	N' → logprob: -16.750038146972656
    9. '-' → logprob: -17.875038146972656
    10. 'NULL' → logprob: -18.000038146972656

Token 167: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5785677433013916
    2. ':' → logprob: -0.8285677433013916
    3. ':return' → logprob: -6.5785675048828125
    4. '       ' → logprob: -7.2035675048828125
    5. ' or' → logprob: -7.8285675048828125
    6. '           ' → logprob: -9.953567504882812
    7. '   ' → logprob: -10.328567504882812
    8. ' :
' → logprob: -12.953567504882812
    9. 'return' → logprob: -13.078567504882812
    10. ':
' → logprob: -13.078567504882812

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.332428902387619
    2. 'return' → logprob: -1.7074289321899414
    3. '       ' → logprob: -2.9574289321899414
    4. ' return' → logprob: -3.7074289321899414
    5. '   ' → logprob: -3.9574289321899414
    6. ':return' → logprob: -5.207428932189941
    7. 'print' → logprob: -9.207428932189941
    8. ':
' → logprob: -9.457428932189941
    9. ' ' → logprob: -10.082428932189941
    10. '	return' → logprob: -10.207428932189941

Token 169: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.002546293195337057
    2. ' return' → logprob: -6.002546310424805
    3. '           ' → logprob: -9.877546310424805
    4. '       ' → logprob: -11.627546310424805
    5. '	return' → logprob: -12.377546310424805
    6. '   ' → logprob: -12.377546310424805
    7. '
' → logprob: -14.002546310424805
    8. 'print' → logprob: -14.752546310424805
    9. ':return' → logprob: -15.127546310424805
    10. '{return' → logprob: -15.502546310424805

Token 170: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029064424335956573
    2. '
' → logprob: -3.779064416885376
    3. '        
' → logprob: -5.404064655303955
    4. '   ' → logprob: -7.279064655303955
    5. '    
' → logprob: -8.529064178466797
    6. 'self' → logprob: -8.904064178466797
    7. 'print' → logprob: -9.154064178466797
    8. ' self' → logprob: -10.029064178466797
    9. ' 
' → logprob: -10.279064178466797
    10. '  
' → logprob: -10.404064178466797

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1381029188632965
    2. 'self' → logprob: -2.2631030082702637
    3. ' self' → logprob: -4.263103008270264
    4. '        
' → logprob: -5.388103008270264
    5. '   ' → logprob: -5.513103008270264
    6. '
' → logprob: -7.013103008270264
    7. '	self' → logprob: -7.888103008270264
    8. '    
' → logprob: -8.138102531433105
    9. ' ' → logprob: -8.888102531433105
    10. '  
' → logprob: -9.138102531433105

Token 172: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013929695705883205
    2. ' self' → logprob: -9.250139236450195
    3. '       ' → logprob: -10.250139236450195
    4. 'if' (adapté à ' if') → logprob: -12.125139236450195
    5. '   ' → logprob: -14.125139236450195
    6. '        
' → logprob: -14.750139236450195
    7. '
' → logprob: -15.125139236450195
    8. '	self' → logprob: -15.375139236450195
    9. '[self' → logprob: -15.500139236450195
    10. 'node' → logprob: -16.125139236450195

Token 173: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.007546762004494667
    2. ' node' → logprob: -5.382546901702881
    3. 'self' → logprob: -5.882546901702881
    4. 'not' → logprob: -9.507546424865723
    5. ' self' → logprob: -11.007546424865723
    6. 'type' → logprob: -11.507546424865723
    7. '   ' → logprob: -11.757546424865723
    8. ' isinstance' → logprob: -12.257546424865723
    9. '	node' → logprob: -12.507546424865723
    10. ' not' → logprob: -12.507546424865723

Token 174: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.79811754100956e-05
    2. '.' → logprob: -10.500038146972656
    3. '.parent' → logprob: -12.000038146972656
    4. ' .' → logprob: -13.250038146972656
    5. 'left' → logprob: -13.875038146972656
    6. '.has' → logprob: -14.250038146972656
    7. '.Left' → logprob: -15.000038146972656
    8. '.right' → logprob: -15.000038146972656
    9. '.le' → logprob: -15.875038146972656
    10. '.key' → logprob: -17.375038146972656

Token 175: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.24057477712631226
    2. ' !=' → logprob: -1.615574836730957
    3. ' is' → logprob: -4.240574836730957
    4. 'is' → logprob: -8.115574836730957
    5. '!=-' → logprob: -8.990574836730957
    6. '()!=' → logprob: -9.240574836730957
    7. ')!=' → logprob: -10.240574836730957
    8. ':' → logprob: -10.990574836730957
    9. '   ' → logprob: -10.990574836730957
    10. '!=(' → logprob: -11.490574836730957

Token 176: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.45848218582978e-06
    2. ' NIL' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.750001907348633
    4. ' ' → logprob: -17.750001907348633
    5. '-N' → logprob: -18.375001907348633
    6. '	N' → logprob: -18.750001907348633
    7. '  ' → logprob: -19.000001907348633
    8. '=N' → logprob: -19.625001907348633
    9. '-' → logprob: -19.750001907348633
    10. '<N' → logprob: -19.750001907348633

Token 177: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31495383381843567
    2. ':' → logprob: -1.3149538040161133
    3. '           ' → logprob: -6.689953804016113
    4. '       ' → logprob: -8.064953804016113
    5. '):
' → logprob: -9.314953804016113
    6. ' :
' → logprob: -11.814953804016113
    7. ':

' → logprob: -11.939953804016113
    8. ':
' → logprob: -12.189953804016113
    9. '():
' → logprob: -12.189953804016113
    10. ' and' → logprob: -12.314953804016113

Token 178: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2846127152442932
    2. '           ' → logprob: -1.4096126556396484
    3. ' self' → logprob: -6.909612655639648
    4. 'self' → logprob: -7.034612655639648
    5. '
' → logprob: -7.409612655639648
    6. ':
' → logprob: -7.659612655639648
    7. '):
' → logprob: -8.909612655639648
    8. '   ' → logprob: -9.659612655639648
    9. '        
' → logprob: -9.909612655639648
    10. '               ' → logprob: -10.159612655639648

Token 179: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05543721094727516
    2. ' self' → logprob: -2.9304373264312744
    3. '       ' → logprob: -7.930437088012695
    4. '           ' → logprob: -8.680437088012695
    5. '	self' → logprob: -11.680437088012695
    6. '   ' → logprob: -12.180437088012695
    7. '(self' → logprob: -12.930437088012695
    8. ' ' → logprob: -13.055437088012695
    9. ' ' → logprob: -13.680437088012695
    10. '
' → logprob: -14.055437088012695

Token 180: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -5.013994814362377e-05
    2. '.' → logprob: -10.00005054473877
    3. ' .' → logprob: -12.62505054473877
    4. '._' → logprob: -15.12505054473877
    5. ' inorder' → logprob: -15.12505054473877
    6. '   ' → logprob: -15.37505054473877
    7. 'in' → logprob: -15.50005054473877
    8. '.left' → logprob: -16.000049591064453
    9. '.In' → logprob: -16.375049591064453
    10. '..' → logprob: -17.125049591064453

Token 181: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0012961853062734008
    2. 'node' → logprob: -6.751296043395996
    3. '   ' → logprob: -9.876296043395996
    4. 'ord' → logprob: -10.751296043395996
    5. '_order' → logprob: -11.126296043395996
    6. '       ' → logprob: -11.876296043395996
    7. '(node' → logprob: -12.001296043395996
    8. '_node' → logprob: -13.001296043395996
    9. '```' → logprob: -13.251296043395996
    10. '_' → logprob: -13.501296043395996

Token 182: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.0280383548888494e-06
    2. 'walk' → logprob: -14.875000953674316
    3. '_' → logprob: -15.000000953674316
    4. '_w' → logprob: -16.000001907348633
    5. '_visit' → logprob: -16.750001907348633
    6. '_wrap' → logprob: -17.000001907348633
    7. 'Walk' → logprob: -17.875001907348633
    8. '```' → logprob: -18.000001907348633
    9. ' _' → logprob: -18.125001907348633
    10. '_write' → logprob: -18.500001907348633

Token 183: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0017224266193807125
    2. '(' → logprob: -6.37672233581543
    3. ' (' → logprob: -11.25172233581543
    4. '(n' → logprob: -12.25172233581543
    5. '(
' → logprob: -13.12672233581543
    6. '(Node' → logprob: -16.25172233581543
    7. 'node' → logprob: -16.62672233581543
    8. '((' → logprob: -16.62672233581543
    9. '(x' → logprob: -16.62672233581543
    10. '(nodes' → logprob: -17.00172233581543

Token 184: '=node' (ID: 187098)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0010919966734945774
    2. '.' → logprob: -6.876091957092285
    3. '.right' → logprob: -10.376091957092285
    4. ').' → logprob: -10.876091957092285
    5. ' .' → logprob: -12.251091957092285
    6. 'left' → logprob: -14.126091957092285
    7. ')' → logprob: -14.126091957092285
    8. '   ' → logprob: -14.501091957092285
    9. '.node' → logprob: -14.501091957092285
    10. '.Left' → logprob: -14.876091957092285

Token 185: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00028970264247618616
    2. '.' → logprob: -8.250289916992188
    3. ' .' → logprob: -10.750289916992188
    4. ').' → logprob: -13.125289916992188
    5. 'left' → logprob: -13.375289916992188
    6. '.right' → logprob: -14.250289916992188
    7. '   ' → logprob: -14.250289916992188
    8. ')' → logprob: -14.500289916992188
    9. '.node' → logprob: -14.875289916992188
    10. ' ' → logprob: -15.125289916992188

Token 186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030469844117760658
    2. ')
' → logprob: -3.9054698944091797
    3. '       ' → logprob: -4.78046989440918
    4. ')

' → logprob: -6.53046989440918
    5. ' )' → logprob: -11.65546989440918
    6. '()' → logprob: -11.90546989440918
    7. ')
' → logprob: -12.53046989440918
    8. '   ' → logprob: -13.15546989440918
    9. '())' → logprob: -13.40546989440918
    10. ' )
' → logprob: -13.78046989440918

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005641616880893707
    2. '
' → logprob: -5.630641460418701
    3. '        
' → logprob: -7.130641460418701
    4. '  
' → logprob: -8.00564193725586
    5. '   ' → logprob: -8.13064193725586
    6. '<|end|>' → logprob: -8.50564193725586
    7. '    
' → logprob: -9.00564193725586
    8. ' 
' → logprob: -9.13064193725586
    9. '           ' → logprob: -10.38064193725586
    10. '            
' → logprob: -11.25564193725586

Token 188: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.228561349213123e-05
    2. '       ' → logprob: -10.250052452087402
    3. ' print' → logprob: -11.125052452087402
    4. 'sys' → logprob: -13.125052452087402
    5. '   ' → logprob: -16.375051498413086
    6. '
' → logprob: -16.500051498413086
    7. '           ' → logprob: -18.125051498413086
    8. '#print' → logprob: -18.375051498413086
    9. '```' → logprob: -18.500051498413086
    10. '	print' → logprob: -19.250051498413086

Token 189: '('' (ID: 706)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.12907302379608154
    2. '(' → logprob: -2.129073143005371
    3. '(f' → logprob: -6.254073143005371
    4. '('' → logprob: -9.004073143005371
    5. '("' → logprob: -9.754073143005371
    6. ' (' → logprob: -11.504073143005371
    7. '((' → logprob: -11.754073143005371
    8. '("("' → logprob: -11.879073143005371
    9. 'node' → logprob: -12.004073143005371
    10. '(
' → logprob: -12.379073143005371

Token 190: ' '' (ID: 461)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.7156703472137451
    2. '(node' → logprob: -1.2156703472137451
    3. 'node' → logprob: -1.9656703472137451
    4. ' node' → logprob: -2.965670347213745
    5. ''' → logprob: -4.590670585632324
    6. ' ',' → logprob: -4.715670585632324
    7. '')' → logprob: -6.840670585632324
    8. '{' → logprob: -7.340670585632324
    9. '{}'.' → logprob: -7.715670585632324
    10. ' '' → logprob: -7.840670585632324

Token 191: ' +' (ID: 659)
  Prédit: ',node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',node' → logprob: -0.4018765389919281
    2. ',' → logprob: -1.1518765687942505
    3. '(node' → logprob: -5.151876449584961
    4. 'node' → logprob: -5.276876449584961
    5. '+' → logprob: -6.401876449584961
    6. ',end' → logprob: -6.526876449584961
    7. ')' → logprob: -7.401876449584961
    8. '[node' → logprob: -9.401876449584961
    9. ',n' → logprob: -10.026876449584961
    10. ' ,' → logprob: -10.401876449584961

Token 192: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0492815226316452
    2. 'node' → logprob: -3.049281597137451
    3. ' str' → logprob: -7.299281597137451
    4. ' node' → logprob: -11.049281120300293
    5. '(str' → logprob: -13.674281120300293
    6. 'f' → logprob: -15.299281120300293
    7. '   ' → logprob: -15.799281120300293
    8. '(node' → logprob: -15.924281120300293
    9. 'repr' → logprob: -16.17428207397461
    10. ' ' → logprob: -16.54928207397461

Token 193: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -4.2987729102605954e-05
    2. '(' → logprob: -10.125042915344238
    3. ' (' → logprob: -13.000042915344238
    4. 'node' → logprob: -14.750042915344238
    5. '(
' → logprob: -16.750043869018555
    6. '(n' → logprob: -17.000043869018555
    7. '[node' → logprob: -17.125043869018555
    8. '((' → logprob: -17.750043869018555
    9. ',node' → logprob: -18.375043869018555
    10. '(token' → logprob: -18.375043869018555

Token 194: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.676292231422849e-05
    2. '.' → logprob: -11.375017166137695
    3. ' .' → logprob: -12.750017166137695
    4. ').' → logprob: -13.125017166137695
    5. 'key' → logprob: -16.000017166137695
    6. ')' → logprob: -17.000017166137695
    7. '   ' → logprob: -17.375017166137695
    8. ' ' → logprob: -17.750017166137695
    9. ' key' → logprob: -17.750017166137695
    10. '.keys' → logprob: -18.500017166137695

Token 195: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06386169046163559
    2. ',' → logprob: -3.438861608505249
    3. '),' → logprob: -4.438861846923828
    4. ')
' → logprob: -4.688861846923828
    5. '))' → logprob: -4.813861846923828
    6. '))
' → logprob: -8.188861846923828
    7. ',end' → logprob: -8.813861846923828
    8. '   ' → logprob: -9.813861846923828
    9. '),
' → logprob: -9.938861846923828
    10. ')

' → logprob: -10.688861846923828

Token 196: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.006725317798554897
    2. ' end' → logprob: -5.006725311279297
    3. ')' → logprob: -11.631725311279297
    4. ',end' → logprob: -14.256725311279297
    5. '(end' → logprob: -16.006725311279297
    6. '	end' → logprob: -16.131725311279297
    7. ''end' → logprob: -16.381725311279297
    8. '   ' → logprob: -16.381725311279297
    9. ')
' → logprob: -17.881725311279297
    10. 'flush' → logprob: -18.006725311279297

Token 197: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.004382893908768892
    2. '=' → logprob: -5.504383087158203
    3. '=''' → logprob: -8.379383087158203
    4. '="' → logprob: -9.629383087158203
    5. ''' → logprob: -12.879383087158203
    6. '=',' → logprob: -13.129383087158203
    7. ' ='' → logprob: -13.629383087158203
    8. '='',' → logprob: -14.004383087158203
    9. '='')
' → logprob: -14.129383087158203
    10. '('' → logprob: -14.379383087158203

Token 198: '')

' (ID: 9735)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10252825170755386
    2. '')' → logprob: -2.7275283336639404
    3. '''' → logprob: -4.227528095245361
    4. ')' → logprob: -4.352528095245361
    5. ' '')' → logprob: -5.602528095245361
    6. '"' → logprob: -7.727528095245361
    7. '""' → logprob: -8.47752857208252
    8. ' )' → logprob: -9.22752857208252
    9. ' ')' → logprob: -10.10252857208252
    10. ' "")' → logprob: -10.22752857208252

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2937179207801819
    2. '
' → logprob: -1.418717861175537
    3. '        
' → logprob: -4.668717861175537
    4. ' if' → logprob: -6.418717861175537
    5. '  
' → logprob: -8.168718338012695
    6. ' 
' → logprob: -8.293718338012695
    7. 'if' → logprob: -8.293718338012695
    8. '   ' → logprob: -8.293718338012695
    9. '<|end|>' → logprob: -8.543718338012695
    10. '    
' → logprob: -9.543718338012695

Token 200: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.027005335316061974
    2. '       ' → logprob: -3.777005434036255
    3. ' if' → logprob: -5.902005195617676
    4. 'self' → logprob: -6.902005195617676
    5. '        
' → logprob: -11.777005195617676
    6. 'If' → logprob: -13.402005195617676
    7. '   ' → logprob: -13.652005195617676
    8. ' self' → logprob: -14.152005195617676
    9. '	if' → logprob: -14.402005195617676
    10. ' ' → logprob: -14.902005195617676

Token 201: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.20142777264118195
    2. 'node' → logprob: -1.7014278173446655
    3. '(node' → logprob: -11.951427459716797
    4. ' ' → logprob: -12.451427459716797
    5. '	node' → logprob: -13.576427459716797
    6. '   ' → logprob: -13.701427459716797
    7. '[node' → logprob: -14.076427459716797
    8. '  ' → logprob: -15.201427459716797
    9. '    ' → logprob: -15.701427459716797
    10. 'Node' → logprob: -15.826427459716797

Token 202: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0008939516264945269
    2. '.left' → logprob: -7.125894069671631
    3. '.' → logprob: -9.375893592834473
    4. ' .' → logprob: -12.625893592834473
    5. '.has' → logprob: -14.250893592834473
    6. 'right' → logprob: -14.750893592834473
    7. '.Right' → logprob: -16.37589454650879
    8. '.next' → logprob: -16.62589454650879
    9. '.key' → logprob: -16.62589454650879
    10. '.parent' → logprob: -16.75089454650879

Token 203: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.029752222821116447
    2. '!=' → logprob: -3.529752254486084
    3. '()!=' → logprob: -14.529751777648926
    4. ' ' → logprob: -15.154751777648926
    5. '!='' → logprob: -15.404751777648926
    6. ')!=' → logprob: -15.404751777648926
    7. '!=-' → logprob: -15.529751777648926
    8. ' ' → logprob: -15.904751777648926
    9. '!=(' → logprob: -16.279752731323242
    10. ' is' → logprob: -16.404752731323242

Token 204: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.06201283633708954
    2. ' NIL' → logprob: -2.8120129108428955
    3. ' ' → logprob: -10.687012672424316
    4. '<N' → logprob: -12.687012672424316
    5. ' N' → logprob: -12.937012672424316
    6. ' ' → logprob: -12.937012672424316
    7. '   ' → logprob: -13.312012672424316
    8. '	N' → logprob: -13.562012672424316
    9. '[N' → logprob: -13.687012672424316
    10. '  ' → logprob: -13.812012672424316

Token 205: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.35060492157936096
    2. ':' → logprob: -1.2256048917770386
    3. '           ' → logprob: -6.850605010986328
    4. ' !=' → logprob: -7.100605010986328
    5. '!=' → logprob: -8.600605010986328
    6. ' :
' → logprob: -10.850605010986328
    7. '       ' → logprob: -11.225605010986328
    8. ':

' → logprob: -11.350605010986328
    9. '):
' → logprob: -11.350605010986328
    10. ':
' → logprob: -11.725605010986328

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01634894125163555
    2. ':' → logprob: -4.766348838806152
    3. ':
' → logprob: -5.141348838806152
    4. 'self' → logprob: -7.141348838806152
    5. ' self' → logprob: -7.141348838806152
    6. '               ' → logprob: -9.016348838806152
    7. '          ' → logprob: -10.016348838806152
    8. '       ' → logprob: -10.641348838806152
    9. ':self' → logprob: -11.266348838806152
    10. '   ' → logprob: -11.516348838806152

Token 207: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.34941408038139343
    2. ' self' → logprob: -1.2244141101837158
    3. '           ' → logprob: -6.974413871765137
    4. '       ' → logprob: -10.849413871765137
    5. ' ' → logprob: -12.849413871765137
    6. '               ' → logprob: -12.849413871765137
    7. '   ' → logprob: -12.974413871765137
    8. '	self' → logprob: -13.099413871765137
    9. ' ' → logprob: -13.224413871765137
    10. '(self' → logprob: -13.974413871765137

Token 208: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -7.553032628493384e-05
    2. 'in' → logprob: -10.250075340270996
    3. '.' → logprob: -10.625075340270996
    4. ' .' → logprob: -11.375075340270996
    5. ' inorder' → logprob: -13.375075340270996
    6. '.right' → logprob: -14.250075340270996
    7. '_in' → logprob: -14.500075340270996
    8. '   ' → logprob: -14.750075340270996
    9. '.left' → logprob: -15.625075340270996
    10. 'In' → logprob: -16.000076293945312

Token 209: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -2.868328920158092e-05
    2. '_order' → logprob: -11.250028610229492
    3. 'ode' → logprob: -12.000028610229492
    4. 'ord' → logprob: -12.500028610229492
    5. 'right' → logprob: -13.125028610229492
    6. 'node' → logprob: -13.875028610229492
    7. '   ' → logprob: -14.625028610229492
    8. 'o' → logprob: -14.750028610229492
    9. 'oder' → logprob: -15.000028610229492
    10. 'or' → logprob: -15.375028610229492

Token 210: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -2.935296834039036e-06
    2. 'walk' → logprob: -13.12500286102295
    3. '(node' → logprob: -14.75000286102295
    4. '_wrap' → logprob: -16.000003814697266
    5. 'Walk' → logprob: -16.125003814697266
    6. '_' → logprob: -16.625003814697266
    7. '_visit' → logprob: -16.875003814697266
    8. 'node' → logprob: -18.125003814697266
    9. '_watch' → logprob: -18.375003814697266
    10. '_write' → logprob: -18.500003814697266

Token 211: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -5.455048449221067e-05
    2. '(' → logprob: -10.000054359436035
    3. 'node' → logprob: -11.750054359436035
    4. '(
' → logprob: -13.750054359436035
    5. '(n' → logprob: -16.87505531311035
    6. '[node' → logprob: -17.00005531311035
    7. ' node' → logprob: -17.00005531311035
    8. ' (' → logprob: -18.50005531311035
    9. '(self' → logprob: -18.50005531311035
    10. '=node' → logprob: -18.62505531311035

Token 212: '=node' (ID: 187098)
  Prédit: '=node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=node' → logprob: -0.0008489366737194359
    2. '(node' → logprob: -7.625848770141602
    3. '.right' → logprob: -8.750848770141602
    4. '.node' → logprob: -8.875848770141602
    5. '=' → logprob: -10.875848770141602
    6. 'right' → logprob: -11.375848770141602
    7. ' =' → logprob: -11.750848770141602
    8. '[node' → logprob: -11.750848770141602
    9. 'node' → logprob: -11.875848770141602
    10. '=n' → logprob: -12.750848770141602

Token 213: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.00030841029365547
    2. 'right' → logprob: -8.2503080368042
    3. '.' → logprob: -10.0003080368042
    4. ' .' → logprob: -14.0003080368042
    5. '.left' → logprob: -14.8753080368042
    6. ').' → logprob: -15.6253080368042
    7. 'Right' → logprob: -16.500308990478516
    8. '	right' → logprob: -16.625308990478516
    9. '[right' → logprob: -16.750308990478516
    10. '.Right' → logprob: -17.250308990478516

Token 214: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')
' → logprob: -11.250016212463379
    3. '<|end|>' → logprob: -13.500016212463379
    4. '       ' → logprob: -13.875016212463379
    5. ' )' → logprob: -15.125016212463379
    6. ')return' → logprob: -15.375016212463379
    7. ')#' → logprob: -15.625016212463379
    8. ')

' → logprob: -17.000017166137695
    9. ')view' → logprob: -17.250017166137695
    10. '   ' → logprob: -17.625017166137695

Token 215: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.016037650406360626
    2. '<|end|>' → logprob: -5.391037464141846
    3. '   ' → logprob: -5.516037464141846
    4. ' def' → logprob: -5.891037464141846
    5. '#' → logprob: -6.141037464141846
    6. 'n' → logprob: -8.016037940979004
    7. '
' → logprob: -8.141037940979004
    8. 'import' → logprob: -8.141037940979004
    9. 'N' → logprob: -8.391037940979004
    10. ')' → logprob: -8.891037940979004

Token 217: ' preorder' (ID: 152292)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.008242916315793991
    2. 'find' → logprob: -5.383243083953857
    3. 'pre' → logprob: -5.883243083953857
    4. ' search' → logprob: -8.0082426071167
    5. 'get' → logprob: -8.7582426071167
    6. 'tree' → logprob: -8.7582426071167
    7. 'main' → logprob: -10.1332426071167
    8. 'delete' → logprob: -10.1332426071167
    9. 'minimum' → logprob: -10.6332426071167
    10. 'print' → logprob: -11.0082426071167

Token 218: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -0.0016281676944345236
    2. '_' → logprob: -6.501628398895264
    3. '_(' → logprob: -9.626627922058105
    4. '(self' → logprob: -10.001627922058105
    5. ' _' → logprob: -11.751627922058105
    6. '_print' → logprob: -13.751627922058105
    7. '_w' → logprob: -13.876627922058105
    8. '__' → logprob: -14.001627922058105
    9. '(' → logprob: -14.001627922058105
    10. '_visit' → logprob: -14.501627922058105

Token 219: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020735491125378758
    2. '(' → logprob: -8.50020694732666
    3. 'self' → logprob: -13.00020694732666
    4. ' (' → logprob: -14.50020694732666
    5. '   ' → logprob: -14.75020694732666
    6. ' ' → logprob: -15.62520694732666
    7. '(
' → logprob: -15.75020694732666
    8. 'def' → logprob: -16.000207901000977
    9. '(s' → logprob: -16.500207901000977
    10. '=self' → logprob: -17.500207901000977

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014647148549556732
    2. 'self' → logprob: -4.389647006988525
    3. '(self' → logprob: -6.264647006988525
    4. '       ' → logprob: -9.389647483825684
    5. ',self' → logprob: -9.514647483825684
    6. ' ,' → logprob: -10.389647483825684
    7. ' self' → logprob: -10.764647483825684
    8. '   ' → logprob: -11.264647483825684
    9. ')' → logprob: -12.264647483825684
    10. '(' → logprob: -13.139647483825684

Token 221: ' node' (ID: 4596)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2506415545940399
    2. 'node' → logprob: -1.6256415843963623
    3. ' self' → logprob: -4.125641345977783
    4. ' node' → logprob: -4.750641345977783
    5. '(self' → logprob: -10.375641822814941
    6. '   ' → logprob: -10.375641822814941
    7. 'def' → logprob: -11.000641822814941
    8. '       ' → logprob: -11.750641822814941
    9. ' ' → logprob: -12.250641822814941
    10. '(node' → logprob: -12.625641822814941

Token 222: '):
' (ID: 1883)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2392023503780365
    2. '(self' → logprob: -2.7392022609710693
    3. ',' → logprob: -2.9892022609710693
    4. '):' → logprob: -3.2392022609710693
    5. 'self' → logprob: -3.6142022609710693
    6. '   ' → logprob: -3.8642022609710693
    7. ':' → logprob: -5.239202499389648
    8. '):
' → logprob: -6.239202499389648
    9. ')' → logprob: -6.739202499389648
    10. ' self' → logprob: -7.114202499389648

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005315870512276888
    2. 'if' → logprob: -7.7505316734313965
    3. ' if' → logprob: -9.250531196594238
    4. '   ' → logprob: -12.250531196594238
    5. '	if' → logprob: -17.000532150268555
    6. 'def' → logprob: -17.500532150268555
    7. '	' → logprob: -17.500532150268555
    8. '           ' → logprob: -17.875532150268555
    9. '```' → logprob: -17.875532150268555
    10. '	   ' → logprob: -19.125532150268555

Token 224: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1650567650794983
    2. 'print' → logprob: -1.9150567054748535
    3. ' if' → logprob: -5.9150567054748535
    4. '       ' → logprob: -6.1650567054748535
    5. '   ' → logprob: -11.415057182312012
    6. ' print' → logprob: -11.665057182312012
    7. '```' → logprob: -14.040057182312012
    8. '           ' → logprob: -16.540056228637695
    9. '	if' → logprob: -16.540056228637695
    10. 'def' → logprob: -17.040056228637695

Token 225: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5759428143501282
    2. 'node' → logprob: -0.8259428143501282
    3. '(node' → logprob: -12.825942993164062
    4. '	node' → logprob: -14.825942993164062
    5. '   ' → logprob: -16.200942993164062
    6. '[node' → logprob: -16.700942993164062
    7. 'Node' → logprob: -17.450942993164062
    8. ' ' → logprob: -17.450942993164062
    9. '    ' → logprob: -17.575942993164062
    10. '       ' → logprob: -18.075942993164062

Token 226: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4741569459438324
    2. ' ==' → logprob: -0.9741569757461548
    3. ' is' → logprob: -9.849157333374023
    4. 'is' → logprob: -10.849157333374023
    5. '   ' → logprob: -12.849157333374023
    6. '=' → logprob: -13.724157333374023
    7. '==
' → logprob: -13.724157333374023
    8. ' ' → logprob: -14.099157333374023
    9. 'N' → logprob: -14.724157333374023
    10. '!=' → logprob: -15.349157333374023

Token 227: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.4121114822482923e-06
    2. 'None' → logprob: -13.250003814697266
    3. ' NIL' → logprob: -13.375003814697266
    4. '   ' → logprob: -18.000003814697266
    5. 'node' → logprob: -19.250003814697266
    6. ' ' → logprob: -19.500003814697266
    7. '<N' → logprob: -19.500003814697266
    8. 'nil' → logprob: -20.125003814697266
    9. '  ' → logprob: -20.625003814697266
    10. '	N' → logprob: -20.750003814697266

Token 228: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16400325298309326
    2. ':' → logprob: -2.039003372192383
    3. '       ' → logprob: -3.914003372192383
    4. '           ' → logprob: -7.539003372192383
    5. ':return' → logprob: -7.539003372192383
    6. '   ' → logprob: -10.289003372192383
    7. 'return' → logprob: -11.789003372192383
    8. ' return' → logprob: -11.914003372192383
    9. ':

' → logprob: -11.914003372192383
    10. '):
' → logprob: -12.039003372192383

Token 229: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056350208818912506
    2. '           ' → logprob: -2.9313502311706543
    3. 'return' → logprob: -7.056350231170654
    4. ' return' → logprob: -7.556350231170654
    5. '   ' → logprob: -9.931349754333496
    6. 'print' → logprob: -11.306349754333496
    7. '        
' → logprob: -11.806349754333496
    8. '      ' → logprob: -12.556349754333496
    9. '{return' → logprob: -13.556349754333496
    10. ' print' → logprob: -13.806349754333496

Token 230: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033477479591965675
    2. ' return' → logprob: -5.753347873687744
    3. '           ' → logprob: -9.128347396850586
    4. '       ' → logprob: -9.753347396850586
    5. '   ' → logprob: -13.378347396850586
    6. '	return' → logprob: -14.128347396850586
    7. '{return' → logprob: -14.628347396850586
    8. ':return' → logprob: -14.628347396850586
    9. '
' → logprob: -16.503347396850586
    10. '               ' → logprob: -17.253347396850586

Token 231: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04934006929397583
    2. '
' → logprob: -3.049340009689331
    3. 'print' → logprob: -8.04934024810791
    4. '        
' → logprob: -8.67434024810791
    5. '   ' → logprob: -9.17434024810791
    6. ' print' → logprob: -9.42434024810791
    7. '    
' → logprob: -10.54934024810791
    8. '  
' → logprob: -10.79934024810791
    9. '' → logprob: -11.92434024810791
    10. '```' → logprob: -12.42434024810791

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06796521693468094
    2. 'print' → logprob: -3.442965269088745
    3. '   ' → logprob: -4.192965030670166
    4. '
' → logprob: -4.192965030670166
    5. ' print' → logprob: -5.692965030670166
    6. '```' → logprob: -9.317965507507324
    7. '    
' → logprob: -10.692965507507324
    8. '        
' → logprob: -10.817965507507324
    9. '

' → logprob: -11.942965507507324
    10. '	print' → logprob: -12.317965507507324

Token 233: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -14.500000953674316
    3. '
' → logprob: -15.875000953674316
    4. '       ' → logprob: -16.375
    5. '        
' → logprob: -17.625
    6. '   ' → logprob: -17.75
    7. '    
' → logprob: -18.5
    8. '```' → logprob: -19.375
    9. '  
' → logprob: -20.125
    10. 'printf' → logprob: -20.625

Token 234: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.166338137816638e-05
    2. '(' → logprob: -10.375031471252441
    3. '(f' → logprob: -15.250031471252441
    4. '("' → logprob: -16.125032424926758
    5. ''' → logprob: -18.375032424926758
    6. '(
' → logprob: -18.875032424926758
    7. 'f' → logprob: -19.125032424926758
    8. '(('' → logprob: -19.125032424926758
    9. '('='' → logprob: -19.250032424926758
    10. '()' → logprob: -19.375032424926758

Token 235: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05496815964579582
    2. ' '' → logprob: -2.9299681186676025
    3. ' ' → logprob: -9.804967880249023
    4. ''+' → logprob: -11.304967880249023
    5. ' '+'' → logprob: -12.304967880249023
    6. ''s' → logprob: -12.429967880249023
    7. '('' → logprob: -13.054967880249023
    8. '"' → logprob: -13.554967880249023
    9. '''' → logprob: -13.554967880249023
    10. ' ' → logprob: -13.804967880249023

Token 236: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.848420551046729e-05
    2. ' +' → logprob: -9.7500581741333
    3. '+
' → logprob: -16.500059127807617
    4. ' ' → logprob: -18.500059127807617
    5. ')' → logprob: -18.750059127807617
    6. ''+' → logprob: -18.875059127807617
    7. '+self' → logprob: -19.000059127807617
    8. '<' → logprob: -19.250059127807617
    9. '```' → logprob: -19.250059127807617
    10. '{' → logprob: -20.375059127807617

Token 237: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0206720617134124e-05
    2. ' str' → logprob: -11.50001049041748
    3. '(str' → logprob: -17.750009536743164
    4. '[str' → logprob: -21.125009536743164
    5. '	str' → logprob: -21.375009536743164
    6. '
' → logprob: -22.000009536743164
    7. 'string' → logprob: -22.125009536743164
    8. '=str' → logprob: -22.250009536743164
    9. ' ' → logprob: -23.000009536743164
    10. 'stri' → logprob: -23.250009536743164

Token 238: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -9.088346359931165e-07
    2. 'node' → logprob: -14.000000953674316
    3. '[node' → logprob: -17.875
    4. '(' → logprob: -19.25
    5. ',node' → logprob: -21.125
    6. ' node' → logprob: -21.25
    7. '=node' → logprob: -21.75
    8. '	node' → logprob: -21.875
    9. '/node' → logprob: -22.375
    10. ' (' → logprob: -22.875

Token 239: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.5048530030981055e-06
    2. 'key' → logprob: -13.875001907348633
    3. '.' → logprob: -15.000001907348633
    4. ' .' → logprob: -16.125001907348633
    5. ' key' → logprob: -18.125001907348633
    6. ').' → logprob: -20.000001907348633
    7. '[key' → logprob: -20.500001907348633
    8. '	key' → logprob: -20.750001907348633
    9. '.keys' → logprob: -20.750001907348633
    10. ',key' → logprob: -20.875001907348633

Token 240: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002647240413352847
    2. ',end' → logprob: -6.002647399902344
    3. ' ,' → logprob: -9.127647399902344
    4. ')' → logprob: -11.002647399902344
    5. 'end' → logprob: -11.252647399902344
    6. '),' → logprob: -11.377647399902344
    7. '       ' → logprob: -11.377647399902344
    8. '',' → logprob: -11.752647399902344
    9. '   ' → logprob: -14.252647399902344
    10. ',node' → logprob: -14.502647399902344

Token 241: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.005234356038272381
    2. ' end' → logprob: -5.255234241485596
    3. '       ' → logprob: -15.130234718322754
    4. ',end' → logprob: -15.505234718322754
    5. '	end' → logprob: -17.255233764648438
    6. '   ' → logprob: -17.380233764648438
    7. '(end' → logprob: -17.505233764648438
    8. '[end' → logprob: -18.255233764648438
    9. '=end' → logprob: -18.380233764648438
    10. ' ' → logprob: -18.755233764648438

Token 242: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -3.810037742368877e-05
    2. '=' → logprob: -10.250038146972656
    3. '('' → logprob: -13.250038146972656
    4. '=''' → logprob: -14.500038146972656
    5. '='')
' → logprob: -14.875038146972656
    6. ''' → logprob: -16.875038146972656
    7. '=('' → logprob: -17.000038146972656
    8. '="' → logprob: -17.750038146972656
    9. ')' → logprob: -18.125038146972656
    10. '=='' → logprob: -18.250038146972656

Token 243: '')

' (ID: 9735)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04909653216600418
    2. '''' → logprob: -3.0490965843200684
    3. '')' → logprob: -8.29909610748291
    4. ')' → logprob: -8.67409610748291
    5. '')

' → logprob: -10.17409610748291
    6. ')

' → logprob: -10.92409610748291
    7. '''
' → logprob: -11.04909610748291
    8. ')
' → logprob: -11.67409610748291
    9. '')
' → logprob: -13.04909610748291
    10. ' '')' → logprob: -13.17409610748291

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11549580842256546
    2. 'if' → logprob: -2.2404959201812744
    3. ' if' → logprob: -6.115495681762695
    4. '        
' → logprob: -8.240495681762695
    5. 'self' → logprob: -9.365495681762695
    6. '   ' → logprob: -9.490495681762695
    7. '
' → logprob: -12.115495681762695
    8. '```' → logprob: -12.115495681762695
    9. '	if' → logprob: -12.240495681762695
    10. '<|end|>' → logprob: -12.865495681762695

Token 245: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012003510491922498
    2. 'self' → logprob: -6.751200199127197
    3. ' if' → logprob: -10.876200675964355
    4. '       ' → logprob: -11.501200675964355
    5. '        
' → logprob: -14.126200675964355
    6. '   ' → logprob: -15.251200675964355
    7. '	if' → logprob: -16.75119972229004
    8. '
' → logprob: -17.12619972229004
    9. '    
' → logprob: -18.00119972229004
    10. 'If' → logprob: -18.62619972229004

Token 246: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.38687509298324585
    2. 'node' → logprob: -1.1368751525878906
    3. '(node' → logprob: -13.38687515258789
    4. ' ' → logprob: -14.13687515258789
    5. '	node' → logprob: -14.13687515258789
    6. '[node' → logprob: -14.26187515258789
    7. 'Node' → logprob: -16.38687515258789
    8. 'not' → logprob: -16.51187515258789
    9. '   ' → logprob: -16.88687515258789
    10. '  ' → logprob: -17.01187515258789

Token 247: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -8.537868779967539e-06
    2. '.right' → logprob: -12.125008583068848
    3. '.' → logprob: -13.250008583068848
    4. ' .' → logprob: -14.375008583068848
    5. 'left' → logprob: -15.125008583068848
    6. '.has' → logprob: -15.375008583068848
    7. '.parent' → logprob: -16.62500762939453
    8. '.pre' → logprob: -17.25000762939453
    9. '.Left' → logprob: -17.75000762939453
    10. ').' → logprob: -19.00000762939453

Token 248: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.012513656169176102
    2. '!=' → logprob: -4.387513637542725
    3. ' is' → logprob: -13.012514114379883
    4. '()!=' → logprob: -14.512514114379883
    5. ' ' → logprob: -14.887514114379883
    6. ')!=' → logprob: -14.887514114379883
    7. ' ' → logprob: -15.137514114379883
    8. '!=-' → logprob: -15.762514114379883
    9. '!=(' → logprob: -16.387514114379883
    10. '!='' → logprob: -17.137514114379883

Token 249: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0325924449716695e-05
    2. ' NIL' → logprob: -11.50001049041748
    3. ' ' → logprob: -16.750009536743164
    4. '<N' → logprob: -16.875009536743164
    5. 'None' → logprob: -17.625009536743164
    6. ' N' → logprob: -18.375009536743164
    7. '   ' → logprob: -18.375009536743164
    8. 'Nil' → logprob: -18.625009536743164
    9. '1' → logprob: -18.875009536743164
    10. '=N' → logprob: -19.000009536743164

Token 250: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3909943103790283
    2. ':' → logprob: -1.1409943103790283
    3. '           ' → logprob: -5.515994071960449
    4. '):
' → logprob: -9.64099407196045
    5. '       ' → logprob: -11.76599407196045
    6. ':

' → logprob: -12.26599407196045
    7. ':
' → logprob: -12.26599407196045
    8. '):' → logprob: -13.14099407196045
    9. '():
' → logprob: -13.26599407196045
    10. '          ' → logprob: -13.26599407196045

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003718046355061233
    2. ':
' → logprob: -8.625371932983398
    3. ':' → logprob: -9.000371932983398
    4. 'self' → logprob: -10.750371932983398
    5. ' self' → logprob: -10.875371932983398
    6. '               ' → logprob: -11.375371932983398
    7. '          ' → logprob: -11.625371932983398
    8. '       ' → logprob: -12.875371932983398
    9. '):
' → logprob: -13.750371932983398
    10. '(self' → logprob: -13.750371932983398

Token 252: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0487237386405468
    2. ' self' → logprob: -3.0487236976623535
    3. '           ' → logprob: -8.923724174499512
    4. '               ' → logprob: -13.548724174499512
    5. '	self' → logprob: -14.423724174499512
    6. ' ' → logprob: -14.548724174499512
    7. '       ' → logprob: -14.673724174499512
    8. '   ' → logprob: -15.298724174499512
    9. '  ' → logprob: -16.423723220825195
    10. '(self' → logprob: -17.048723220825195

Token 253: '.pre' (ID: 10008)
  Prédit: '.pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pre' → logprob: -0.0005622077151201665
    2. 'pre' → logprob: -7.5005621910095215
    3. '.' → logprob: -12.25056266784668
    4. '.left' → logprob: -12.87556266784668
    5. '.in' → logprob: -14.25056266784668
    6. ' preorder' → logprob: -14.50056266784668
    7. '.p' → logprob: -15.00056266784668
    8. '_pre' → logprob: -15.87556266784668
    9. '.pr' → logprob: -16.25056266784668
    10. '	pre' → logprob: -17.37556266784668

Token 254: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -7.226628895296017e-06
    2. '_order' → logprob: -11.875007629394531
    3. 'ord' → logprob: -16.87500762939453
    4. 'or' → logprob: -17.12500762939453
    5. ' order' → logprob: -17.25000762939453
    6. 'oder' → logprob: -18.00000762939453
    7. 'orde' → logprob: -18.62500762939453
    8. 'o' → logprob: -18.75000762939453
    9. '_' → logprob: -19.25000762939453
    10. '```' → logprob: -19.62500762939453

Token 255: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.5048530030981055e-06
    2. 'walk' → logprob: -13.875001907348633
    3. '_' → logprob: -15.750001907348633
    4. '_w' → logprob: -16.250001907348633
    5. ' _' → logprob: -16.500001907348633
    6. '._' → logprob: -17.125001907348633
    7. '.walk' → logprob: -17.250001907348633
    8. '_wrap' → logprob: -17.750001907348633
    9. '_visit' → logprob: -17.875001907348633
    10. '```' → logprob: -18.125001907348633

Token 256: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -7.219262624857947e-05
    2. '(' → logprob: -9.625072479248047
    3. 'node' → logprob: -12.125072479248047
    4. '(
' → logprob: -14.500072479248047
    5. '(self' → logprob: -16.750072479248047
    6. '(n' → logprob: -16.875072479248047
    7. '[node' → logprob: -17.750072479248047
    8. ' node' → logprob: -18.125072479248047
    9. ' (' → logprob: -18.500072479248047
    10. '(Node' → logprob: -18.625072479248047

Token 257: '=node' (ID: 187098)
  Prédit: '=node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=node' → logprob: -0.03963516280055046
    2. '(node' → logprob: -3.664635181427002
    3. '.left' → logprob: -4.664635181427002
    4. 'left' → logprob: -5.789635181427002
    5. '=' → logprob: -7.539635181427002
    6. ' =' → logprob: -9.914634704589844
    7. '.node' → logprob: -9.914634704589844
    8. ')' → logprob: -10.289634704589844
    9. '(left' → logprob: -10.414634704589844
    10. '[node' → logprob: -11.039634704589844

Token 258: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.5690089639974758e-05
    2. 'left' → logprob: -11.250015258789062
    3. '.' → logprob: -13.000015258789062
    4. ' .' → logprob: -15.875015258789062
    5. ').' → logprob: -16.875015258789062
    6. '   ' → logprob: -18.000015258789062
    7. '.right' → logprob: -18.250015258789062
    8. ' left' → logprob: -18.500015258789062
    9. '[left' → logprob: -18.500015258789062
    10. '       ' → logprob: -18.875015258789062

Token 259: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6360127329826355
    2. '       ' → logprob: -0.7610127329826355
    3. ')
' → logprob: -5.886012554168701
    4. ')

' → logprob: -8.13601303100586
    5. '<|end|>' → logprob: -8.26101303100586
    6. '   ' → logprob: -10.26101303100586
    7. '
' → logprob: -11.26101303100586
    8. '#' → logprob: -12.26101303100586
    9. ' ' → logprob: -12.63601303100586
    10. '        
' → logprob: -12.76101303100586

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06569689512252808
    2. '
' → logprob: -2.815696954727173
    3. '        
' → logprob: -6.315696716308594
    4. '<|end|>' → logprob: -7.065696716308594
    5. '   ' → logprob: -7.815696716308594
    6. '```' → logprob: -8.440696716308594
    7. '  
' → logprob: -8.940696716308594
    8. ' 
' → logprob: -9.315696716308594
    9. '    
' → logprob: -9.565696716308594
    10. ' if' → logprob: -10.065696716308594

Token 261: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.19273512065410614
    2. ' if' → logprob: -1.9427350759506226
    3. '       ' → logprob: -3.442735195159912
    4. '   ' → logprob: -11.692734718322754
    5. ' ' → logprob: -13.192734718322754
    6. '	if' → logprob: -15.317734718322754
    7. '```' → logprob: -15.692734718322754
    8. 'If' → logprob: -15.942734718322754
    9. '
' → logprob: -16.69273567199707
    10. '           ' → logprob: -16.94273567199707

Token 262: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.12693734467029572
    2. 'node' → logprob: -2.1269373893737793
    3. '(node' → logprob: -12.001936912536621
    4. '	node' → logprob: -13.626936912536621
    5. '[node' → logprob: -13.876936912536621
    6. ' ' → logprob: -14.876936912536621
    7. '   ' → logprob: -15.751936912536621
    8. '           ' → logprob: -15.751936912536621
    9. 'Node' → logprob: -16.376937866210938
    10. '.node' → logprob: -16.626937866210938

Token 263: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.747814349073451e-05
    2. '.' → logprob: -11.875017166137695
    3. 'right' → logprob: -12.125017166137695
    4. '.left' → logprob: -12.750017166137695
    5. ' .' → logprob: -13.125017166137695
    6. '   ' → logprob: -16.000017166137695
    7. ' ' → logprob: -16.500017166137695
    8. '	right' → logprob: -17.500017166137695
    9. '[right' → logprob: -18.625017166137695
    10. '=' → logprob: -18.750017166137695

Token 264: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.014164329506456852
    2. '!=' → logprob: -4.264164447784424
    3. ' ' → logprob: -15.764163970947266
    4. ')!=' → logprob: -16.014163970947266
    5. '!=-' → logprob: -16.139163970947266
    6. ' ' → logprob: -16.139163970947266
    7. '()!=' → logprob: -16.264163970947266
    8. '   ' → logprob: -16.264163970947266
    9. '!='' → logprob: -17.389163970947266
    10. '!=(' → logprob: -17.639163970947266

Token 265: ' NIL' (ID: 148345)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.696077227592468e-05
    2. ' NIL' → logprob: -9.500077247619629
    3. ' node' → logprob: -13.875077247619629
    4. 'node' → logprob: -14.875077247619629
    5. '<N' → logprob: -15.375077247619629
    6. ' ' → logprob: -15.500077247619629
    7. ' N' → logprob: -15.875077247619629
    8. '   ' → logprob: -17.625076293945312
    9. '	N' → logprob: -17.750076293945312
    10. '=N' → logprob: -17.875076293945312

Token 266: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22020943462848663
    2. ':
' → logprob: -1.9702094793319702
    3. '           ' → logprob: -2.8452093601226807
    4. '):
' → logprob: -10.095209121704102
    5. '          ' → logprob: -11.095209121704102
    6. '               ' → logprob: -11.720209121704102
    7. '):' → logprob: -11.970209121704102
    8. ':

' → logprob: -12.470209121704102
    9. '():
' → logprob: -12.595209121704102
    10. '       ' → logprob: -12.720209121704102

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030187068041414022
    2. 'self' → logprob: -6.003018856048584
    3. ' self' → logprob: -7.628018856048584
    4. '               ' → logprob: -10.128018379211426
    5. '          ' → logprob: -11.503018379211426
    6. ' ' → logprob: -12.753018379211426
    7. '		' → logprob: -14.003018379211426
    8. '(self' → logprob: -14.503018379211426
    9. '            ' → logprob: -14.878018379211426
    10. '       ' → logprob: -15.003018379211426

Token 268: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006816600915044546
    2. ' self' → logprob: -5.006816387176514
    3. '           ' → logprob: -9.256816864013672
    4. '               ' → logprob: -12.381816864013672
    5. '	self' → logprob: -14.006816864013672
    6. ' ' → logprob: -15.756816864013672
    7. '       ' → logprob: -16.131816864013672
    8. '(self' → logprob: -16.131816864013672
    9. '          ' → logprob: -16.256816864013672
    10. '         ' → logprob: -16.756816864013672

Token 269: '.pre' (ID: 10008)
  Prédit: '.pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pre' → logprob: -3.7697225252486533e-06
    2. '.' → logprob: -12.750003814697266
    3. 'pre' → logprob: -14.000003814697266
    4. ' .' → logprob: -17.250003814697266
    5. '	pre' → logprob: -17.750003814697266
    6. '.p' → logprob: -19.125003814697266
    7. '(pre' → logprob: -19.375003814697266
    8. '.post' → logprob: -19.875003814697266
    9. '.pr' → logprob: -20.125003814697266
    10. '.Pre' → logprob: -20.250003814697266

Token 270: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.2664456789934775e-06
    2. 'or' → logprob: -15.000000953674316
    3. 'o' → logprob: -15.250000953674316
    4. '_order' → logprob: -15.250000953674316
    5. 'oder' → logprob: -15.375000953674316
    6. 'ord' → logprob: -16.750001907348633
    7. 'ore' → logprob: -17.125001907348633
    8. 'orde' → logprob: -17.875001907348633
    9. 'pre' → logprob: -18.000001907348633
    10. 'r' → logprob: -18.000001907348633

Token 271: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -2.8921695047756657e-05
    2. 'walk' → logprob: -10.500028610229492
    3. 'Walk' → logprob: -14.125028610229492
    4. 'node' → logprob: -15.750028610229492
    5. '(node' → logprob: -16.000028610229492
    6. '_' → logprob: -16.125028610229492
    7. '_visit' → logprob: -16.750028610229492
    8. 'self' → logprob: -16.875028610229492
    9. '_w' → logprob: -17.500028610229492
    10. '_wrap' → logprob: -17.750028610229492

Token 272: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.0087516784551553e-05
    2. '(' → logprob: -11.62501049041748
    3. 'node' → logprob: -13.87501049041748
    4. '(
' → logprob: -15.75001049041748
    5. '[node' → logprob: -18.250009536743164
    6. '(object' → logprob: -19.625009536743164
    7. ' node' → logprob: -19.875009536743164
    8. '=node' → logprob: -20.500009536743164
    9. '(n' → logprob: -20.625009536743164
    10. '(self' → logprob: -21.125009536743164

Token 273: '=node' (ID: 187098)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.695149302482605
    2. '=node' → logprob: -0.695149302482605
    3. 'node' → logprob: -6.3201494216918945
    4. '[node' → logprob: -9.445149421691895
    5. '=' → logprob: -9.695149421691895
    6. '.node' → logprob: -11.070149421691895
    7. ')' → logprob: -11.195149421691895
    8. ' node' → logprob: -11.695149421691895
    9. 'right' → logprob: -11.820149421691895
    10. '/node' → logprob: -12.695149421691895

Token 274: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.029770854860544205
    2. 'right' → logprob: -3.529770851135254
    3. 'node' → logprob: -10.904770851135254
    4. '.node' → logprob: -14.154770851135254
    5. ' right' → logprob: -15.154770851135254
    6. '.left' → logprob: -15.529770851135254
    7. ' .' → logprob: -15.654770851135254
    8. 'Right' → logprob: -16.27977180480957
    9. '_right' → logprob: -16.40477180480957
    10. '   ' → logprob: -16.77977180480957

Token 275: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.282920129597187e-05
    2. ')
' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -14.500012397766113
    4. '       ' → logprob: -15.125012397766113
    5. ')#' → logprob: -15.625012397766113
    6. ' )' → logprob: -16.37501335144043
    7. ')return' → logprob: -16.50001335144043
    8. ')

' → logprob: -16.87501335144043
    9. ')n' → logprob: -17.25001335144043
    10. '),' → logprob: -18.00001335144043

Token 276: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014627386117354035
    2. 'if' → logprob: -6.626462936401367
    3. '#' → logprob: -9.751462936401367
    4. ' def' → logprob: -10.126462936401367
    5. '<|end|>' → logprob: -11.501462936401367
    6. 'n' → logprob: -11.876462936401367
    7. '   ' → logprob: -12.001462936401367
    8. 'import' → logprob: -12.376462936401367
    9. 'tree' → logprob: -13.001462936401367
    10. '```' → logprob: -13.501462936401367

Token 277: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004649422597140074
    2. 'if' → logprob: -5.379649639129639
    3. ' def' → logprob: -11.50464916229248
    4. '   ' → logprob: -12.00464916229248
    5. '#' → logprob: -12.50464916229248
    6. 'import' → logprob: -12.62964916229248
    7. 'n' → logprob: -12.87964916229248
    8. 'N' → logprob: -13.50464916229248
    9. 'd' → logprob: -14.00464916229248
    10. '```' → logprob: -15.75464916229248

Token 278: ' show' (ID: 2356)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'post' → logprob: -0.004881484899669886
    2. 'search' → logprob: -5.379881381988525
    3. 'main' → logprob: -9.254881858825684
    4. 'delete' → logprob: -9.504881858825684
    5. 'find' → logprob: -9.754881858825684
    6. ' post' → logprob: -11.254881858825684
    7. 'get' → logprob: -12.254881858825684
    8. 'def' → logprob: -12.504881858825684
    9. 'destroy' → logprob: -13.004881858825684
    10. 'depth' → logprob: -13.129881858825684

Token 279: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017953136935830116
    2. '(' → logprob: -4.267952919006348
    3. '_' → logprob: -6.017952919006348
    4. ' (' → logprob: -7.267952919006348
    5. '_(' → logprob: -8.267952919006348
    6. 'self' → logprob: -8.892952919006348
    7. '_tree' → logprob: -9.142952919006348
    8. '()' → logprob: -10.017952919006348
    9. '   ' → logprob: -11.267952919006348
    10. '(tree' → logprob: -11.267952919006348

Token 280: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16394001245498657
    2. '):' → logprob: -1.9139399528503418
    3. '):
' → logprob: -6.288939952850342
    4. 'self' → logprob: -6.913939952850342
    5. ',node' → logprob: -7.788939952850342
    6. ')' → logprob: -8.9139404296875
    7. ' ,' → logprob: -9.2889404296875
    8. ',self' → logprob: -9.6639404296875
    9. '   ' → logprob: -9.7889404296875
    10. '       ' → logprob: -10.0389404296875

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09681497514247894
    2. 'if' → logprob: -2.8468148708343506
    3. ' if' → logprob: -3.4718148708343506
    4. 'def' → logprob: -5.84681510925293
    5. '   ' → logprob: -8.59681510925293
    6. ' def' → logprob: -10.09681510925293
    7. 'print' → logprob: -10.47181510925293
    8. 'self' → logprob: -11.47181510925293
    9. '```' → logprob: -12.22181510925293
    10. 'node' → logprob: -12.34681510925293

Token 282: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08694928139448166
    2. 'def' → logprob: -3.336949348449707
    3. 'self' (adapté à ' self') → logprob: -3.461949348449707
    4. '       ' → logprob: -4.211949348449707
    5. 'print' → logprob: -6.836949348449707
    6. '   ' → logprob: -8.336949348449707
    7. ' if' → logprob: -8.836949348449707
    8. 'sys' → logprob: -10.211949348449707
    9. 'node' → logprob: -11.461949348449707
    10. 'import' → logprob: -12.086949348449707

Token 283: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -0.07920482009649277
    2. '.pre' → logprob: -2.579204797744751
    3. '.root' → logprob: -8.829204559326172
    4. '.print' → logprob: -9.204204559326172
    5. '.' → logprob: -9.829204559326172
    6. '._' → logprob: -12.329204559326172
    7. '.show' → logprob: -12.954204559326172
    8. ' .' → logprob: -14.079204559326172
    9. 'pre' → logprob: -14.204204559326172
    10. '   ' → logprob: -14.454204559326172

Token 284: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -5.319370302458992e-06
    2. '_order' → logprob: -12.875005722045898
    3. 'o' → logprob: -14.500005722045898
    4. 'ord' → logprob: -14.625005722045898
    5. 'orders' → logprob: -15.000005722045898
    6. '   ' → logprob: -15.000005722045898
    7. 'oder' → logprob: -15.125005722045898
    8. 'or' → logprob: -15.500005722045898
    9. 'ore' → logprob: -16.1250057220459
    10. '```' → logprob: -16.2500057220459

Token 285: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. 'walk' → logprob: -17.875
    4. '_w' → logprob: -19.25
    5. '_print' → logprob: -19.875
    6. '_wrap' → logprob: -20.375
    7. '_watch' → logprob: -21.5
    8. '_show' → logprob: -21.5
    9. '_
' → logprob: -21.875
    10. '_write' → logprob: -21.875

Token 286: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4748518168926239
    2. '(node' → logprob: -0.9748518466949463
    3. '(' → logprob: -7.224851608276367
    4. 'self' → logprob: -10.599851608276367
    5. '(n' → logprob: -11.599851608276367
    6. '()' → logprob: -12.474851608276367
    7. '(object' → logprob: -13.349851608276367
    8. '(
' → logprob: -13.599851608276367
    9. '(root' → logprob: -13.599851608276367
    10. 'node' → logprob: -13.849851608276367

Token 287: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -3.3213025744771585e-05
    2. 'root' → logprob: -10.500033378601074
    3. '.' → logprob: -12.250033378601074
    4. ' .' → logprob: -15.500033378601074
    5. '.self' → logprob: -15.750033378601074
    6. '.tree' → logprob: -15.750033378601074
    7. ').' → logprob: -16.000032424926758
    8. '[root' → logprob: -17.000032424926758
    9. ' root' → logprob: -17.500032424926758
    10. '=root' → logprob: -17.750032424926758

Token 288: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16025662422180176
    2. ')' → logprob: -1.9102566242218018
    3. ')

' → logprob: -11.035256385803223
    4. '       ' → logprob: -11.910256385803223
    5. ')
' → logprob: -11.910256385803223
    6. '<|end|>' → logprob: -14.035256385803223
    7. ' )
' → logprob: -14.785256385803223
    8. '())
' → logprob: -14.785256385803223
    9. '   ' → logprob: -14.910256385803223
    10. '()
' → logprob: -15.660256385803223

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015556571073830128
    2. 'print' → logprob: -4.890556335449219
    3. '
' → logprob: -5.640556335449219
    4. '<|end|>' → logprob: -6.015556335449219
    5. ' print' → logprob: -6.640556335449219
    6. '\n' → logprob: -8.265556335449219
    7. '        
' → logprob: -9.515556335449219
    8. '  
' → logprob: -9.890556335449219
    9. ' 
' → logprob: -10.015556335449219
    10. '   ' → logprob: -10.515556335449219

Token 290: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.922563963802531e-05
    2. '       ' → logprob: -9.500079154968262
    3. ' print' → logprob: -12.375079154968262
    4. '
' → logprob: -17.375080108642578
    5. '        
' → logprob: -17.875080108642578
    6. '	print' → logprob: -18.375080108642578
    7. '\' → logprob: -19.500080108642578
    8. '\n' → logprob: -19.500080108642578
    9. '```' → logprob: -19.500080108642578
    10. 'sys' → logprob: -20.125080108642578

Token 291: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002446509897708893
    2. '(' → logprob: -8.375245094299316
    3. '()
' → logprob: -11.250245094299316
    4. '()

' → logprob: -15.125245094299316
    5. ' ()' → logprob: -15.625245094299316
    6. '()\' → logprob: -16.000244140625
    7. '("")' → logprob: -16.375244140625
    8. '()`' → logprob: -16.375244140625
    9. '(
' → logprob: -16.625244140625
    10. '();' → logprob: -17.000244140625

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002867225557565689
    2. 'self' → logprob: -8.500287055969238
    3. '   ' → logprob: -9.750287055969238
    4. '	' → logprob: -11.375287055969238
    5. ' self' → logprob: -12.625287055969238
    6. 'tree' → logprob: -13.125287055969238
    7. '<|end|>' → logprob: -13.375287055969238
    8. '           ' → logprob: -13.750287055969238
    9. 'Tree' → logprob: -14.125287055969238
    10. '      ' → logprob: -14.375287055969238

Token 293: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0009858887642621994
    2. '       ' → logprob: -7.000986099243164
    3. ' self' → logprob: -9.625986099243164
    4. '   ' → logprob: -12.125986099243164
    5. 'def' → logprob: -13.125986099243164
    6. ' ' → logprob: -14.625986099243164
    7. '	self' → logprob: -14.750986099243164
    8. '  ' → logprob: -17.125986099243164
    9. '	' → logprob: -17.750986099243164
    10. '    ' → logprob: -17.875986099243164

Token 294: '.pre' (ID: 10008)
  Prédit: '.pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pre' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -15.000000953674316
    3. 'pre' → logprob: -15.250000953674316
    4. '.p' → logprob: -16.375
    5. ' .' → logprob: -16.625
    6. '.Pre' → logprob: -18.125
    7. '.prev' → logprob: -19.5
    8. '.print' → logprob: -19.625
    9. '.preprocessing' → logprob: -19.625
    10. '.pr' → logprob: -19.875

Token 295: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.5048530030981055e-06
    2. 'o' → logprob: -14.625001907348633
    3. 'or' → logprob: -15.000001907348633
    4. '_order' → logprob: -15.375001907348633
    5. 'oder' → logprob: -15.625001907348633
    6. 'ord' → logprob: -16.125001907348633
    7. 'def' → logprob: -16.500001907348633
    8. 'root' → logprob: -18.000001907348633
    9. 'ordre' → logprob: -18.625001907348633
    10. 'print' → logprob: -18.750001907348633

Token 296: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -4.60414821645827e-06
    2. 'walk' → logprob: -12.750004768371582
    3. '_' → logprob: -13.625004768371582
    4. '_show' → logprob: -15.375004768371582
    5. 'Walk' → logprob: -16.625003814697266
    6. '_visit' → logprob: -16.875003814697266
    7. '_wrap' → logprob: -17.000003814697266
    8. '_print' → logprob: -18.000003814697266
    9. ' walk' → logprob: -18.250003814697266
    10. '_tree' → logprob: -18.375003814697266

Token 297: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009246804984286427
    2. '(' → logprob: -7.000924587249756
    3. 'self' → logprob: -11.375925064086914
    4. '(
' → logprob: -14.375925064086914
    5. '(node' → logprob: -14.375925064086914
    6. ' (' → logprob: -15.875925064086914
    7. '(this' → logprob: -16.250925064086914
    8. '()' → logprob: -16.375925064086914
    9. '(root' → logprob: -16.500925064086914
    10. '(object' → logprob: -16.875925064086914

Token 298: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.6046810746192932
    2. 'self' → logprob: -1.1046810150146484
    3. 'root' → logprob: -2.1046810150146484
    4. '.self' → logprob: -7.729681015014648
    5. ' self' → logprob: -9.854681015014648
    6. ' root' → logprob: -10.979681015014648
    7. '_root' → logprob: -11.979681015014648
    8. '.' → logprob: -12.104681015014648
    9. '.tree' → logprob: -12.104681015014648
    10. '(self' → logprob: -12.229681015014648

Token 299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0059484681114554405
    2. ')
' → logprob: -5.130948543548584
    3. '())' → logprob: -11.255948066711426
    4. '<|end|>' → logprob: -12.755948066711426
    5. '()' → logprob: -14.130948066711426
    6. ' )' → logprob: -14.255948066711426
    7. '()
' → logprob: -14.755948066711426
    8. '())
' → logprob: -14.755948066711426
    9. '<|end|>' → logprob: -15.505948066711426
    10. 'self' → logprob: -15.505948066711426

Token 300: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006197656970471144
    2. '       ' → logprob: -6.381197452545166
    3. '
' → logprob: -6.631197452545166
    4. '()' → logprob: -7.131197452545166
    5. '(' → logprob: -7.256197452545166
    6. '<|end|>' → logprob: -7.881197452545166
    7. '()
' → logprob: -8.006197929382324
    8. '   ' → logprob: -8.131197929382324
    9. '(print' → logprob: -8.256197929382324
    10. ' print' → logprob: -8.506197929382324

Token 301: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1637164789135568e-05
    2. ' print' → logprob: -11.375011444091797
    3. '	print' → logprob: -17.125011444091797
    4. '(print' → logprob: -17.125011444091797
    5. '       ' → logprob: -17.375011444091797
    6. '.print' → logprob: -18.875011444091797
    7. '<|end|>' → logprob: -19.375011444091797
    8. '\n' → logprob: -19.875011444091797
    9. '   ' → logprob: -20.250011444091797
    10. '```' → logprob: -20.250011444091797

Token 302: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.75001049041748
    3. '()
' → logprob: -13.00001049041748
    4. '()\' → logprob: -15.87501049041748
    5. '("")' → logprob: -16.375011444091797
    6. ' ()' → logprob: -16.625011444091797
    7. '()`' → logprob: -17.000011444091797
    8. '()

' → logprob: -17.500011444091797
    9. '().' → logprob: -17.625011444091797
    10. '()<' → logprob: -18.625011444091797

Token 303: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1607929915189743
    2. 'if' → logprob: -1.9107929468154907
    3. 'import' → logprob: -8.16079330444336
    4. 'for' → logprob: -9.16079330444336
    5. 'n' → logprob: -9.66079330444336
    6. '#' → logprob: -10.16079330444336
    7. '<|end|>' → logprob: -10.41079330444336
    8. ' if' → logprob: -11.28579330444336
    9. 'N' → logprob: -11.78579330444336
    10. 'while' → logprob: -12.28579330444336

Token 304: ' =' (ID: 314)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25208187103271484
    2. 'if' → logprob: -1.5020818710327148
    3. ' def' → logprob: -9.627081871032715
    4. 'i' → logprob: -9.877081871032715
    5. ' if' → logprob: -10.752081871032715
    6. 'de' → logprob: -12.627081871032715
    7. 'um' → logprob: -13.377081871032715
    8. 'ode' → logprob: -13.377081871032715
    9. '=' → logprob: -13.627081871032715
    10. 'f' → logprob: -14.127081871032715

Token 305: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0297732874751091
    2. ' int' → logprob: -3.529773235321045
    3. 'Node' → logprob: -10.904773712158203
    4. ' Node' → logprob: -13.654773712158203
    5. 'len' → logprob: -13.779773712158203
    6. ' ' → logprob: -13.904773712158203
    7. '10' → logprob: -14.154773712158203
    8. ' len' → logprob: -15.529773712158203
    9. 'N' → logprob: -16.279773712158203
    10. '=int' → logprob: -16.779773712158203

Token 306: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.062048349529504776
    2. '(input' → logprob: -2.8120484352111816
    3. '(' → logprob: -10.187047958374023
    4. 'sys' → logprob: -10.312047958374023
    5. '()' → logprob: -12.437047958374023
    6. 'input' → logprob: -12.562047958374023
    7. '=sys' → logprob: -13.937047958374023
    8. ' (' → logprob: -14.062047958374023
    9. ' sys' → logprob: -15.687047958374023
    10. '(Sys' → logprob: -15.812047958374023

Token 307: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.001272973488084972
    2. '.argv' → logprob: -7.001273155212402
    3. '.' → logprob: -8.376273155212402
    4. '.readline' → logprob: -9.001273155212402
    5. '.stdout' → logprob: -12.626273155212402
    6. '(stdin' → logprob: -13.501273155212402
    7. '.input' → logprob: -13.626273155212402
    8. '.std' → logprob: -14.001273155212402
    9. 'stdin' → logprob: -15.501273155212402
    10. '.read' → logprob: -15.501273155212402

Token 308: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -12.750003814697266
    3. '().' → logprob: -15.000003814697266
    4. '.read' → logprob: -15.125003814697266
    5. '.stdin' → logprob: -15.875003814697266
    6. ' readline' → logprob: -16.000003814697266
    7. '.readlines' → logprob: -18.625003814697266
    8. ' .' → logprob: -19.125003814697266
    9. '.randint' → logprob: -20.000003814697266
    10. 'read' → logprob: -20.125003814697266

Token 309: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01195488404482603
    2. '().' → logprob: -4.5119547843933105
    3. '()' → logprob: -7.0119547843933105
    4. ' ())' → logprob: -13.011955261230469
    5. ')' → logprob: -13.386955261230469
    6. '())
' → logprob: -13.511955261230469
    7. '(' → logprob: -16.01195526123047
    8. '();)' → logprob: -16.13695526123047
    9. '())

' → logprob: -16.63695526123047
    10. '()),' → logprob: -16.63695526123047

Token 310: 'T' (ID: 51)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.006504809483885765
    2. 't' → logprob: -5.256505012512207
    3. 'for' → logprob: -6.756505012512207
    4. 'T' → logprob: -9.881505012512207
    5. 'nodes' → logprob: -10.506505012512207
    6. 'trees' → logprob: -11.006505012512207
    7. ' tree' → logprob: -11.756505012512207
    8. 'tre' → logprob: -13.631505012512207
    9. 'Tree' → logprob: -14.256505012512207
    10. 'root' → logprob: -14.756505012512207

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5459113717079163
    2. ' =' → logprob: -1.0459113121032715
    3. 'ree' → logprob: -2.6709113121032715
    4. 'rees' → logprob: -10.42091178894043
    5. 're' → logprob: -10.67091178894043
    6. 'r' → logprob: -11.17091178894043
    7. '.' → logprob: -11.54591178894043
    8. '=re' → logprob: -11.54591178894043
    9. '=[]' → logprob: -11.92091178894043
    10. 'REE' → logprob: -12.04591178894043

Token 312: ' Tree' (ID: 14224)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.011060554534196854
    2. ' Tree' → logprob: -4.51106071472168
    3. '	Tree' → logprob: -11.38606071472168
    4. '<Tree' → logprob: -14.88606071472168
    5. ' ' → logprob: -15.26106071472168
    6. '(Tree' → logprob: -15.38606071472168
    7. 'ree' → logprob: -15.63606071472168
    8. 'tree' → logprob: -15.76106071472168
    9. 'T' → logprob: -16.26106071472168
    10. 'Tre' → logprob: -16.51106071472168

Token 313: '()

' (ID: 5874)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0600595660507679
    2. '
' → logprob: -3.1850595474243164
    3. '()
' → logprob: -4.560059547424316
    4. '()' → logprob: -5.435059547424316
    5. ' for' → logprob: -6.560059547424316
    6. '<|end|>' → logprob: -7.935059547424316
    7. '()

' → logprob: -8.310059547424316
    8. '

' → logprob: -10.185059547424316
    9. '  
' → logprob: -11.560059547424316
    10. ' 
' → logprob: -12.185059547424316

Token 314: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0280383548888494e-06
    2. ' for' → logprob: -13.875000953674316
    3. '	for' → logprob: -19.750001907348633
    4. '<|end|>' → logprob: -20.875001907348633
    5. '```' → logprob: -22.000001907348633
    6. '
' → logprob: -22.625001907348633
    7. 'while' → logprob: -23.625001907348633
    8. 'For' → logprob: -23.750001907348633
    9. '_for' → logprob: -24.625001907348633
    10. 'i' → logprob: -24.625001907348633

Token 315: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009827041067183018
    2. '_i' → logprob: -4.759827136993408
    3. ' _' → logprob: -6.759827136993408
    4. 'i' → logprob: -10.50982666015625
    5. ' i' → logprob: -10.63482666015625
    6. '_=' → logprob: -14.13482666015625
    7. '_line' → logprob: -16.13482666015625
    8. '_
' → logprob: -16.38482666015625
    9. '_in' → logprob: -16.88482666015625
    10. '＿' → logprob: -17.00982666015625

Token 316: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07025329023599625
    2. 'in' → logprob: -2.695253372192383
    3. ' ' → logprob: -8.320253372192383
    4. '_' → logprob: -10.195253372192383
    5. 'n' → logprob: -12.070253372192383
    6. 'range' → logprob: -12.070253372192383
    7. '   ' → logprob: -12.195253372192383
    8. 's' → logprob: -12.445253372192383
    9. '  ' → logprob: -12.820253372192383
    10. ' _' → logprob: -13.070253372192383

Token 317: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048170737922192
    2. ' range' → logprob: -4.511048316955566
    3. 'sys' → logprob: -15.761048316955566
    4. '	range' → logprob: -16.51104736328125
    5. '(range' → logprob: -17.01104736328125
    6. 'rang' → logprob: -17.13604736328125
    7. '   ' → logprob: -17.63604736328125
    8. 'ran' → logprob: -17.63604736328125
    9. ' ' → logprob: -18.13604736328125
    10. 'r' → logprob: -18.51104736328125

Token 318: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009138475870713592
    2. '(' → logprob: -7.000913619995117
    3. 'n' → logprob: -13.500913619995117
    4. ' (' → logprob: -14.625913619995117
    5. '(N' → logprob: -15.000913619995117
    6. ' n' → logprob: -16.125913619995117
    7. '(
' → logprob: -17.125913619995117
    8. '(len' → logprob: -19.125913619995117
    9. '(num' → logprob: -19.125913619995117
    10. '(i' → logprob: -20.250913619995117

Token 319: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1808149218559265
    2. '):
' → logprob: -1.8058149814605713
    3. ' ):' → logprob: -7.555814743041992
    4. ':' → logprob: -8.430814743041992
    5. '+' → logprob: -9.430814743041992
    6. ')' → logprob: -9.805814743041992
    7. '):
' → logprob: -10.055814743041992
    8. ' ):
' → logprob: -10.055814743041992
    9. '   ' → logprob: -10.180814743041992
    10. '():
' → logprob: -10.805814743041992

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6416565179824829
    2. ' key' → logprob: -1.016656517982483
    3. 'key' → logprob: -2.3916563987731934
    4. 'data' → logprob: -5.016656398773193
    5. ' line' → logprob: -5.766656398773193
    6. ' s' → logprob: -6.141656398773193
    7. 's' → logprob: -6.266656398773193
    8. 'x' → logprob: -6.391656398773193
    9. 'line' → logprob: -6.516656398773193
    10. ' x' → logprob: -7.016656398773193

Token 321: ' line' (ID: 2543)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.20142152905464172
    2. 'line' (adapté à ' line') → logprob: -2.0764214992523193
    3. 'cmd' → logprob: -3.2014214992523193
    4. ' command' → logprob: -5.076421737670898
    5. ' line' → logprob: -5.201421737670898
    6. 's' → logprob: -5.826421737670898
    7. 'l' → logprob: -7.826421737670898
    8. 'commands' → logprob: -7.951421737670898
    9. '   ' → logprob: -8.701421737670898
    10. 'com' → logprob: -8.826421737670898

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061977654695510864
    2. '=' → logprob: -2.8119776248931885
    3. '=line' → logprob: -11.68697738647461
    4. 's' → logprob: -13.68697738647461
    5. ' ' → logprob: -15.93697738647461
    6. '   ' → logprob: -16.43697738647461
    7. '=sys' → logprob: -16.81197738647461
    8. '_' → logprob: -16.93697738647461
    9. '_line' → logprob: -17.43697738647461
    10. '=input' → logprob: -17.43697738647461

Token 323: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.011048408225178719
    2. ' sys' → logprob: -4.511048316955566
    3. '=sys' → logprob: -15.136048316955566
    4. 'input' → logprob: -15.261048316955566
    5. '	sys' → logprob: -16.386049270629883
    6. '(sys' → logprob: -17.761049270629883
    7. '   ' → logprob: -17.761049270629883
    8. ' input' → logprob: -19.761049270629883
    9. 'Sys' → logprob: -20.386049270629883
    10. '.sys' → logprob: -21.011049270629883

Token 324: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.0722858102526516e-05
    2. 'stdin' → logprob: -10.625041007995605
    3. '.' → logprob: -11.625041007995605
    4. '.stdout' → logprob: -12.000041007995605
    5. '.argv' → logprob: -14.125041007995605
    6. '.readline' → logprob: -14.875041007995605
    7. '.std' → logprob: -15.750041007995605
    8. '(stdin' → logprob: -17.75004005432129
    9. ' stdin' → logprob: -17.87504005432129
    10. '._' → logprob: -18.37504005432129

Token 325: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.03956526890397072
    2. 'stdin' → logprob: -3.289565324783325
    3. 'read' → logprob: -6.789565086364746
    4. '.stdin' → logprob: -8.039565086364746
    5. ' readline' → logprob: -9.664565086364746
    6. 'line' → logprob: -12.789565086364746
    7. '_read' → logprob: -12.914565086364746
    8. 'stdout' → logprob: -13.664565086364746
    9. 'getline' → logprob: -13.789565086364746
    10. 'reader' → logprob: -13.914565086364746

Token 326: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0030140725430101156
    2. '.strip' → logprob: -6.128014087677002
    3. '.rstrip' → logprob: -7.378014087677002
    4. '.split' → logprob: -8.753013610839844
    5. '()' → logprob: -10.878013610839844
    6. 'rstrip' → logprob: -11.128013610839844
    7. '.' → logprob: -12.878013610839844
    8. 'strip' → logprob: -13.128013610839844
    9. '()
' → logprob: -13.628013610839844
    10. '=line' → logprob: -14.003013610839844

Token 327: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.022663539275527
    2. 'rstrip' → logprob: -4.272663593292236
    3. 'split' → logprob: -4.772663593292236
    4. ' strip' → logprob: -12.022663116455078
    5. ' split' → logprob: -15.772663116455078
    6. '_strip' → logprob: -18.022663116455078
    7. '.strip' → logprob: -18.522663116455078
    8. '.rstrip' → logprob: -19.522663116455078
    9. 'str' → logprob: -19.772663116455078
    10. 'r' → logprob: -19.897663116455078

Token 328: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011908221058547497
    2. '()
' → logprob: -6.751190662384033
    3. '()[' → logprob: -11.751191139221191
    4. '()

' → logprob: -12.126191139221191
    5. '(' → logprob: -13.126191139221191
    6. '()\' → logprob: -13.751191139221191
    7. '()
' → logprob: -13.876191139221191
    8. '();' → logprob: -13.876191139221191
    9. ' ()' → logprob: -14.501191139221191
    10. '()`' → logprob: -14.626191139221191

Token 329: '    
' (ID: 1944)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7201204299926758
    2. '   ' → logprob: -1.0951204299926758
    3. ' if' → logprob: -1.9701204299926758
    4. 'cmd' → logprob: -3.720120429992676
    5. 'command' → logprob: -4.720120429992676
    6. '    
' → logprob: -5.845120429992676
    7. '	if' → logprob: -7.595120429992676
    8. '
' → logprob: -7.595120429992676
    9. ' command' → logprob: -7.720120429992676
    10. '  ' → logprob: -7.845120429992676

Token 330: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31200867891311646
    2. '   ' → logprob: -1.5620086193084717
    3. 'cmd' → logprob: -3.3120086193084717
    4. 'command' → logprob: -4.062008857727051
    5. ' if' → logprob: -5.437008857727051
    6. ' command' → logprob: -9.68700885772705
    7. 'op' → logprob: -10.06200885772705
    8. 'key' → logprob: -10.06200885772705
    9. ' cmd' → logprob: -10.56200885772705
    10. '  ' → logprob: -10.56200885772705

Token 331: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5784600973129272
    2. 'command' → logprob: -1.0784600973129272
    3. 'cmd' → logprob: -2.328460216522217
    4. 'op' → logprob: -6.453460216522217
    5. 'c' → logprob: -10.453459739685059
    6. 'operation' → logprob: -11.078459739685059
    7. 'com' → logprob: -11.078459739685059
    8. ' if' → logprob: -11.328459739685059
    9. ' command' → logprob: -11.703459739685059
    10. '   ' → logprob: -11.703459739685059

Token 332: ' len' (ID: 4631)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.008618474006652832
    2. ' line' → logprob: -4.758618354797363
    3. 'len' → logprob: -12.508618354797363
    4. ' ' → logprob: -15.883618354797363
    5. '	line' → logprob: -16.88361930847168
    6. '   ' → logprob: -17.38361930847168
    7. '[line' → logprob: -17.50861930847168
    8. ' len' → logprob: -17.63361930847168
    9. '(line' → logprob: -17.75861930847168
    10. 'lin' → logprob: -18.38361930847168

Token 333: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0005713827558793128
    2. 'line' → logprob: -7.750571250915527
    3. '(' → logprob: -9.125571250915527
    4. ' line' → logprob: -10.625571250915527
    5. ' (' → logprob: -12.875571250915527
    6. '[line' → logprob: -13.125571250915527
    7. '('' → logprob: -14.000571250915527
    8. '()' → logprob: -14.250571250915527
    9. '=line' → logprob: -14.250571250915527
    10. '	line' → logprob: -15.500571250915527

Token 334: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.446874737739563
    2. ' ==' → logprob: -1.321874737739563
    3. ')' → logprob: -2.9468746185302734
    4. '>' → logprob: -3.4468746185302734
    5. '[' → logprob: -5.696874618530273
    6. ' >' → logprob: -6.071874618530273
    7. '>=' → logprob: -6.571874618530273
    8. ')==' → logprob: -6.946874618530273
    9. ')>' → logprob: -8.071874618530273
    10. '<' → logprob: -8.196874618530273

Token 335: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.43658509850502014
    2. ' ==' → logprob: -1.1865850687026978
    3. '>' → logprob: -3.1865851879119873
    4. ' >' → logprob: -5.186584949493408
    5. '>=' → logprob: -7.561584949493408
    6. '<' → logprob: -7.686584949493408
    7. ' <' → logprob: -8.811585426330566
    8. '=' → logprob: -8.936585426330566
    9. ' >=' → logprob: -9.186585426330566
    10. 'and' → logprob: -9.186585426330566

Token 336: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0577307790517807
    2. '3' → logprob: -3.3077306747436523
    3. '0' → logprob: -4.682730674743652
    4. '1' → logprob: -5.057730674743652
    5. ' ' → logprob: -5.557730674743652
    6. '   ' → logprob: -11.557730674743652
    7. '  ' → logprob: -12.307730674743652
    8. '>' → logprob: -12.432730674743652
    9. '```' → logprob: -13.182730674743652
    10. '=' → logprob: -13.432730674743652

Token 337: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.046184174716472626
    2. '0' → logprob: -3.7961840629577637
    3. '1' → logprob: -3.7961840629577637
    4. '3' → logprob: -8.921184539794922
    5. ' ' → logprob: -9.421184539794922
    6. '```' → logprob: -12.733684539794922
    7. '   ' → logprob: -13.796184539794922
    8. '  ' → logprob: -14.858684539794922
    9. '２' → logprob: -15.233684539794922
    10. '	' → logprob: -15.421184539794922

Token 338: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04993550106883049
    2. ' and' → logprob: -3.5499355792999268
    3. ':
' → logprob: -4.049935340881348
    4. 'and' → logprob: -6.549935340881348
    5. '   ' → logprob: -7.174935340881348
    6. '==' → logprob: -8.549935340881348
    7. '       ' → logprob: -9.674935340881348
    8. ' ==' → logprob: -9.924935340881348
    9. ' or' → logprob: -11.299935340881348
    10. '=' → logprob: -11.549935340881348

Token 339: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1823379546403885
    2. '       ' → logprob: -1.932337999343872
    3. ':' → logprob: -4.682337760925293
    4. 'continue' → logprob: -5.432337760925293
    5. ' continue' → logprob: -5.682337760925293
    6. ' key' → logprob: -5.807337760925293
    7. 'key' → logprob: -6.807337760925293
    8. 'print' → logprob: -8.682337760925293
    9. ':
' → logprob: -8.807337760925293
    10. '	continue' → logprob: -9.432337760925293

Token 340: ' T' (ID: 353)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.952475905418396
    2. '   ' → logprob: -1.827475905418396
    3. 'continue' → logprob: -1.952475905418396
    4. 'print' → logprob: -2.2024760246276855
    5. 'T' (adapté à ' T') → logprob: -2.8274760246276855
    6. 'x' → logprob: -2.9524760246276855
    7. 'break' → logprob: -3.0774760246276855
    8. 'k' → logprob: -4.3274760246276855
    9. 'v' → logprob: -4.8274760246276855
    10. ' key' → logprob: -4.9524760246276855

Token 341: '.show' (ID: 8871)
  Prédit: '.show'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.show' → logprob: -0.002303104614838958
    2. '.' → logprob: -6.752303123474121
    3. '.root' → logprob: -7.502303123474121
    4. '.insert' → logprob: -8.127303123474121
    5. 'show' → logprob: -8.877303123474121
    6. 'root' → logprob: -9.877303123474121
    7. '.print' → logprob: -10.252303123474121
    8. '.in' → logprob: -10.877303123474121
    9. ' =' → logprob: -11.627303123474121
    10. '=' → logprob: -12.127303123474121

Token 342: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5475193858146667
    2. '<|end|>' → logprob: -1.2975194454193115
    3. '()' → logprob: -2.9225194454193115
    4. '
' → logprob: -3.4225194454193115
    5. '()
' → logprob: -3.6725194454193115
    6. '    
' → logprob: -4.047519207000732
    7. ' else' → logprob: -5.047519207000732
    8. 'else' → logprob: -5.422519207000732
    9. '<|end|>' → logprob: -6.422519207000732
    10. 'elif' → logprob: -6.547519207000732

Token 343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007665540557354689
    2. 'else' → logprob: -5.132665634155273
    3. ' else' → logprob: -6.757665634155273
    4. 'elif' → logprob: -8.507665634155273
    5. '<|end|>' → logprob: -8.757665634155273
    6. '    
' → logprob: -8.882665634155273
    7. 'continue' → logprob: -11.007665634155273
    8. '	else' → logprob: -11.132665634155273
    9. ' ' → logprob: -12.132665634155273
    10. ',' → logprob: -12.257665634155273

Token 344: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5810561776161194
    2. 'else' (adapté à ' else') → logprob: -1.0810561180114746
    3. ' else' → logprob: -2.3310561180114746
    4. 'elif' → logprob: -5.581056118011475
    5. ' elif' → logprob: -8.206056594848633
    6. '	else' → logprob: -9.081056594848633
    7. '    
' → logprob: -10.081056594848633
    8. ' ' → logprob: -11.206056594848633
    9. '	elif' → logprob: -11.206056594848633
    10. ':' → logprob: -11.331056594848633

Token 345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18174532055854797
    2. ':
' → logprob: -1.8067452907562256
    3. '       ' → logprob: -6.931745529174805
    4. '   ' → logprob: -7.681745529174805
    5. ' if' → logprob: -8.056745529174805
    6. ' :' → logprob: -8.931745529174805
    7. ' :
' → logprob: -10.306745529174805
    8. 'if' → logprob: -11.056745529174805
    9. ':

' → logprob: -11.306745529174805
    10. '{' → logprob: -11.431745529174805

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09470026940107346
    2. ' key' → logprob: -3.094700336456299
    3. ' z' → logprob: -3.594700336456299
    4. 'z' → logprob: -4.594700336456299
    5. 'key' → logprob: -5.219700336456299
    6. '   ' → logprob: -6.844700336456299
    7. 'node' → logprob: -7.719700336456299
    8. ' node' → logprob: -8.34469985961914
    9. 't' → logprob: -9.59469985961914
    10. ' ' → logprob: -10.21969985961914

Token 347: ' key' (ID: 2140)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.1397249400615692
    2. 'key' (adapté à ' key') → logprob: -2.8897249698638916
    3. 'command' → logprob: -3.5147249698638916
    4. 'x' → logprob: -3.6397249698638916
    5. 'cmd' → logprob: -4.7647247314453125
    6. ' z' → logprob: -5.6397247314453125
    7. 'k' → logprob: -6.0147247314453125
    8. ' key' → logprob: -6.5147247314453125
    9. 'op' → logprob: -6.7647247314453125
    10. ' command' → logprob: -7.7647247314453125

Token 348: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018157200887799263
    2. '=' → logprob: -4.018157005310059
    3. ' ' → logprob: -12.018157005310059
    4. '=int' → logprob: -14.018157005310059
    5. ' =
' → logprob: -16.018157958984375
    6. '	' → logprob: -16.518157958984375
    7. ',' → logprob: -16.643157958984375
    8. '  ' → logprob: -17.143157958984375
    9. '＝' → logprob: -17.143157958984375
    10. '   ' → logprob: -17.393157958984375

Token 349: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12732051312923431
    2. ' int' → logprob: -2.1273205280303955
    3. 'Node' → logprob: -8.127320289611816
    4. ' Node' → logprob: -9.252320289611816
    5. ' ' → logprob: -14.752320289611816
    6. '	int' → logprob: -15.377320289611816
    7. '   ' → logprob: -15.877320289611816
    8. '=int' → logprob: -16.002321243286133
    9. '[int' → logprob: -16.002321243286133
    10. '  ' → logprob: -16.127321243286133

Token 350: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -2.5776860184123507e-06
    2. 'line' → logprob: -13.50000286102295
    3. '(' → logprob: -13.75000286102295
    4. ' line' → logprob: -18.000001907348633
    5. '[line' → logprob: -18.000001907348633
    6. '=line' → logprob: -18.625001907348633
    7. '#line' → logprob: -18.875001907348633
    8. '	line' → logprob: -19.750001907348633
    9. ',line' → logprob: -20.625001907348633
    10. '(
' → logprob: -20.625001907348633

Token 351: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.500001907348633
    3. '[-' → logprob: -14.875001907348633
    4. '(' → logprob: -16.250001907348633
    5. ' [' → logprob: -16.375001907348633
    6. '()[' → logprob: -16.875001907348633
    7. ')[' → logprob: -17.375001907348633
    8. '```' → logprob: -17.500001907348633
    9. '   ' → logprob: -18.000001907348633
    10. ')' → logprob: -18.125001907348633

Token 352: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004249547782819718
    2. '[' → logprob: -8.000425338745117
    3. '2' → logprob: -9.875425338745117
    4. ' ' → logprob: -10.375425338745117
    5. '   ' → logprob: -12.875425338745117
    6. ' [' → logprob: -13.625425338745117
    7. '```' → logprob: -14.125425338745117
    8. '0' → logprob: -14.875425338745117
    9. ')' → logprob: -14.875425338745117
    10. '-' → logprob: -15.312925338745117

Token 353: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023286247625947
    2. ')
' → logprob: -3.7732863426208496
    3. '])' → logprob: -10.773285865783691
    4. ')
' → logprob: -11.398285865783691
    5. ' )' → logprob: -12.273285865783691
    6. '）' → logprob: -14.023285865783691
    7. '])
' → logprob: -14.398285865783691
    8. ')

' → logprob: -14.648285865783691
    9. ' )
' → logprob: -14.898285865783691
    10. '))' → logprob: -14.898285865783691

Token 354: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1058717966079712
    2. '
' → logprob: -1.3558717966079712
    3. 'z' → logprob: -1.9808717966079712
    4. '<|end|>' → logprob: -2.4808716773986816
    5. '        
' → logprob: -2.7308716773986816
    6. ' 
' → logprob: -2.7308716773986816
    7. ' ' → logprob: -4.355871677398682
    8. '  
' → logprob: -4.480871677398682
    9. ' z' → logprob: -5.105871677398682
    10. 'T' → logprob: -5.480871677398682

Token 355: ' T' (ID: 353)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.1370552033185959
    2. 'node' → logprob: -2.1370551586151123
    3. 'T' (adapté à ' T') → logprob: -4.637055397033691
    4. 'new' → logprob: -8.637055397033691
    5. 'x' → logprob: -8.762055397033691
    6. 'N' → logprob: -11.262055397033691
    7. ' z' → logprob: -11.637055397033691
    8. '       ' → logprob: -11.637055397033691
    9. ' node' → logprob: -11.637055397033691
    10. 'n' → logprob: -12.137055397033691

Token 356: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.0001843485952122137
    2. '.' → logprob: -8.625184059143066
    3. 'insert' → logprob: -12.625184059143066
    4. '.append' → logprob: -14.125184059143066
    5. ' .' → logprob: -15.125184059143066
    6. '.in' → logprob: -15.250184059143066
    7. '.put' → logprob: -17.000185012817383
    8. '.enqueue' → logprob: -17.125185012817383
    9. '.Insert' → logprob: -17.250185012817383
    10. '.add' → logprob: -18.000185012817383

Token 357: '(Node' (ID: 43019)
  Prédit: '(Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -7.588793960167095e-05
    2. '(' → logprob: -9.625076293945312
    3. '(
' → logprob: -12.750076293945312
    4. '(node' → logprob: -13.250076293945312
    5. ' (' → logprob: -13.625076293945312
    6. '(Key' → logprob: -13.625076293945312
    7. 'Node' → logprob: -13.750076293945312
    8. ' Node' → logprob: -14.000076293945312
    9. '((' → logprob: -15.375076293945312
    10. '(Note' → logprob: -15.375076293945312

Token 358: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.0015500946901738644
    2. '(' → logprob: -6.626550197601318
    3. ' (' → logprob: -9.00154972076416
    4. 'key' → logprob: -9.37654972076416
    5. '(
' → logprob: -12.00154972076416
    6. ' key' → logprob: -12.12654972076416
    7. ')' → logprob: -12.50154972076416
    8. ')(' → logprob: -14.87654972076416
    9. ',key' → logprob: -15.62654972076416
    10. '(keys' → logprob: -16.376550674438477

Token 359: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07033974677324295
    2. '(key' → logprob: -2.6953396797180176
    3. '))
' → logprob: -8.570340156555176
    4. ')' → logprob: -8.820340156555176
    5. 'key' → logprob: -10.445340156555176
    6. '[key' → logprob: -11.570340156555176
    7. '(' → logprob: -11.820340156555176
    8. ' ))' → logprob: -12.195340156555176
    9. ' key' → logprob: -12.820340156555176
    10. '))

' → logprob: -13.070340156555176


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 357
Tokens correctement prédits (1ère position, stricte): 159
Tokens correctement prédits (1ère position, avec adaptation): 194
Tokens correctement prédits (top 10): 330
Précision stricte (1ère position): 44.54%
Précision adaptée (1ère position): 54.34%
Précision (top 10): 92.44%
================================================================================
