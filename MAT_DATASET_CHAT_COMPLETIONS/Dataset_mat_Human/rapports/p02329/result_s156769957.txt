================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from bisect import *

N, V = map(int, input().split())

boxs = []
for i in range(4):
    boxs.append(list(map(int, input().split())))

pre = [a+b for a in boxs[0] for b in boxs[1]]
af = [c+d for c in boxs[2] for d in boxs[3]]
    
pre.sort()
af.sort()

ans = 0
for ab in pre:
    target = V - ab
    ans += bisect_right(af,target) - bisect_left(af,target)
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' bis' (ID: 7204)
  → Token d'amorce (pas de prédiction)

Token 2: 'ect' (ID: 534)
  → Token d'amorce (pas de prédiction)

Token 3: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.055610984563827515
    2. 'import' → logprob: -2.9306108951568604
    3. '.' → logprob: -7.4306111335754395
    4. ' ' → logprob: -9.555610656738281
    5. '_import' → logprob: -10.805610656738281
    6. '.import' → logprob: -11.055610656738281
    7. '_' → logprob: -11.680610656738281
    8. ' .' → logprob: -11.805610656738281
    9. '```' → logprob: -12.430610656738281
    10. '	import' → logprob: -13.305610656738281

Token 4: ' *

' (ID: 40558)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0445181280374527
    2. 'ins' → logprob: -3.294518232345581
    3. ' bis' → logprob: -5.044517993927002
    4. ' ins' → logprob: -12.04451847076416
    5. 'b' → logprob: -12.79451847076416
    6. '```' → logprob: -13.79451847076416
    7. '_ins' → logprob: -14.41951847076416
    8. '*' → logprob: -15.41951847076416
    9. '.ins' → logprob: -15.54451847076416
    10. 'in' → logprob: -16.169517517089844

Token 5: 'N' (ID: 45)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1448090821504593
    2. 'i' → logprob: -2.6448090076446533
    3. 'ins' → logprob: -3.3948090076446533
    4. '.' → logprob: -4.644809246063232
    5. 'bi' → logprob: -5.019809246063232
    6. '_' → logprob: -5.519809246063232
    7. 'bis' → logprob: -5.894809246063232
    8. 'a' → logprob: -6.144809246063232
    9. '-' → logprob: -6.394809246063232
    10. 'in' → logprob: -6.519809246063232

Token 6: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2542894780635834
    2. 'a' → logprob: -1.6292895078659058
    3. 'o' → logprob: -4.879289627075195
    4. '=' → logprob: -4.879289627075195
    5. '.' → logprob: -5.504289627075195
    6. 'ex' → logprob: -5.879289627075195
    7. 'ew' → logprob: -6.254289627075195
    8. 'u' → logprob: -6.879289627075195
    9. '_' → logprob: -7.254289627075195
    10. 'ext' → logprob: -7.379289627075195

Token 7: ' V' (ID: 631)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.884698748588562
    2. 'a' → logprob: -1.884698748588562
    3. 'M' → logprob: -2.0096988677978516
    4. ' K' → logprob: -2.2596988677978516
    5. 'K' → logprob: -3.0096988677978516
    6. ' A' → logprob: -3.6346988677978516
    7. ' a' → logprob: -3.7596988677978516
    8. '=' → logprob: -4.259698867797852
    9. 'A' → logprob: -4.509698867797852
    10. ' =' → logprob: -4.509698867797852

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22554230690002441
    2. '=' → logprob: -1.6005423069000244
    3. ',' → logprob: -9.475542068481445
    4. ' ' → logprob: -10.100542068481445
    5. ' =
' → logprob: -11.850542068481445
    6. ' ,' → logprob: -13.975542068481445
    7. ')' → logprob: -14.100542068481445
    8. '  ' → logprob: -14.350542068481445
    9. '=input' → logprob: -14.350542068481445
    10. ' =
' → logprob: -15.225542068481445

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.133456751704216
    2. 'map' → logprob: -2.6334567070007324
    3. ' ' → logprob: -3.5084567070007324
    4. ' int' → logprob: -4.133456707000732
    5. 'int' → logprob: -5.883456707000732
    6. ' input' → logprob: -6.633456707000732
    7. '0' → logprob: -6.633456707000732
    8. 'input' → logprob: -7.508456707000732
    9. ' list' → logprob: -7.883456707000732
    10. ' []' → logprob: -8.00845718383789

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07105105370283127
    2. '(int' → logprob: -3.0710511207580566
    3. '(lambda' → logprob: -4.071051120758057
    4. '(str' → logprob: -5.821051120758057
    5. '<|end|>' → logprob: -7.321051120758057
    6. '()' → logprob: -8.321050643920898
    7. '(range' → logprob: -9.321050643920898
    8. '```' → logprob: -9.446050643920898
    9. 'int' → logprob: -9.571050643920898
    10. '(`' → logprob: -9.696050643920898

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02556454949080944
    2. ',input' → logprob: -4.400564670562744
    3. '(' → logprob: -5.025564670562744
    4. ')' → logprob: -6.150564670562744
    5. '(input' → logprob: -6.150564670562744
    6. 'input' → logprob: -6.650564670562744
    7. ' ,' → logprob: -7.275564670562744
    8. ' (' → logprob: -10.150564193725586
    9. ' input' → logprob: -10.775564193725586
    10. ',int' → logprob: -11.275564193725586

Token 12: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31330588459968567
    2. 'input' → logprob: -1.3133058547973633
    3. ')' → logprob: -10.438305854797363
    4. ' )' → logprob: -11.813305854797363
    5. ' ' → logprob: -12.938305854797363
    6. '(input' → logprob: -13.063305854797363
    7. ',input' → logprob: -13.688305854797363
    8. '=input' → logprob: -14.438305854797363
    9. '	input' → logprob: -15.188305854797363
    10. 'str' → logprob: -15.313305854797363

Token 13: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7462777495384216
    2. '())' → logprob: -1.2462778091430664
    3. '()' → logprob: -1.8712778091430664
    4. '(' → logprob: -2.6212778091430664
    5. '().' → logprob: -5.496277809143066
    6. '`)' → logprob: -5.996277809143066
    7. '('' → logprob: -6.996277809143066
    8. '')' → logprob: -7.246277809143066
    9. '`()' → logprob: -7.246277809143066
    10. '```' → logprob: -8.371277809143066

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011802274966612458
    2. 'strip' → logprob: -6.751180171966553
    3. 'rstrip' → logprob: -11.751180648803711
    4. 'read' → logprob: -13.626180648803711
    5. ')' → logprob: -14.876180648803711
    6. ' split' → logprob: -14.876180648803711
    7. '(split' → logprob: -16.00118064880371
    8. 'spl' → logprob: -16.62618064880371
    9. '_split' → logprob: -18.62618064880371
    10. ' readline' → logprob: -19.50118064880371

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036662293132394552
    2. '))' → logprob: -5.628666400909424
    3. '`)' → logprob: -10.628665924072266
    4. ')`' → logprob: -11.378665924072266
    5. '')' → logprob: -12.003665924072266
    6. '())' → logprob: -12.378665924072266
    7. '(' → logprob: -12.378665924072266
    8. '),' → logprob: -12.378665924072266
    9. ')))' → logprob: -12.878665924072266
    10. ')")' → logprob: -13.503665924072266

Token 16: 'box' (ID: 3952)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.8288852572441101
    2. 'coins' → logprob: -1.9538853168487549
    3. 'weights' → logprob: -2.078885316848755
    4. 'arr' → logprob: -2.578885316848755
    5. 'prices' → logprob: -3.078885316848755
    6. 'A' → logprob: -3.203885316848755
    7. 'a' → logprob: -3.453885316848755
    8. 'values' → logprob: -4.453885078430176
    9. 'lst' → logprob: -4.828885078430176
    10. 'bags' → logprob: -5.078885078430176

Token 17: 's' (ID: 82)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.17519260942935944
    2. '_sizes' → logprob: -1.9251925945281982
    3. 's' → logprob: -5.175192832946777
    4. '_' → logprob: -5.425192832946777
    5. '_s' → logprob: -5.925192832946777
    6. ' =' → logprob: -7.550192832946777
    7. '_size' → logprob: -8.050192832946777
    8. '_es' → logprob: -8.175192832946777
    9. '_weights' → logprob: -8.550192832946777
    10. 'e' → logprob: -8.550192832946777

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20048721134662628
    2. 'es' → logprob: -2.8254871368408203
    3. ' =' → logprob: -3.0754871368408203
    4. '=' → logprob: -3.2004871368408203
    5. 's' → logprob: -3.8254871368408203
    6. '[' → logprob: -5.70048713684082
    7. '_sizes' → logprob: -6.07548713684082
    8. '.' → logprob: -6.20048713684082
    9. '=[]' → logprob: -6.70048713684082
    10. '_s' → logprob: -7.32548713684082

Token 19: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04237859696149826
    2. ' []' → logprob: -3.2923786640167236
    3. 'list' → logprob: -6.1673784255981445
    4. '[' → logprob: -6.2923784255981445
    5. ' list' → logprob: -9.167378425598145
    6. ' [' → logprob: -9.292378425598145
    7. '[list' → logprob: -9.417378425598145
    8. '[int' → logprob: -9.667378425598145
    9. '[]
' → logprob: -11.667378425598145
    10. 'sorted' → logprob: -12.042378425598145

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011577237164601684
    2. ' for' → logprob: -7.251157760620117
    3. '_' → logprob: -8.126157760620117
    4. '[' → logprob: -10.001157760620117
    5. 'f' → logprob: -11.001157760620117
    6. '.' → logprob: -11.376157760620117
    7. '=' → logprob: -11.376157760620117
    8. 'n' → logprob: -11.626157760620117
    9. '```' → logprob: -11.626157760620117
    10. '' → logprob: -12.126157760620117

Token 21: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.08693671971559525
    2. ' ' → logprob: -2.9619367122650146
    3. ' i' → logprob: -3.7119367122650146
    4. '_' → logprob: -4.961936950683594
    5. ' ' → logprob: -9.961936950683594
    6. '  ' → logprob: -10.586936950683594
    7. ' ‌' → logprob: -11.086936950683594
    8. 'i' → logprob: -11.461936950683594
    9. ' ▁' → logprob: -12.086936950683594
    10. ' range' → logprob: -12.211936950683594

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1059812530875206
    2. 'in' → logprob: -2.3559813499450684
    3. 'n' → logprob: -5.480981349945068
    4. ' ' → logprob: -6.730981349945068
    5. ' n' → logprob: -8.10598087310791
    6. '_' → logprob: -9.98098087310791
    7. '  ' → logprob: -10.73098087310791
    8. '	in' → logprob: -11.85598087310791
    9. 'range' → logprob: -12.60598087310791
    10. '```' → logprob: -12.73098087310791

Token 23: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759658217430115
    2. 'range' → logprob: -0.8259658217430115
    3. ' ' → logprob: -10.825965881347656
    4. '	range' → logprob: -13.450965881347656
    5. 'box' → logprob: -13.950965881347656
    6. ' box' → logprob: -14.075965881347656
    7. ' xrange' → logprob: -14.200965881347656
    8. '  ' → logprob: -14.450965881347656
    9. '(range' → logprob: -14.575965881347656
    10. ')' → logprob: -14.950965881347656

Token 24: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011164898052811623
    2. '(N' → logprob: -4.511164665222168
    3. ' (' → logprob: -9.386164665222168
    4. '(n' → logprob: -10.761164665222168
    5. '(len' → logprob: -12.511164665222168
    6. '(
' → logprob: -13.136164665222168
    7. ' ' → logprob: -13.261164665222168
    8. '(V' → logprob: -13.386164665222168
    9. '(

' → logprob: -14.136164665222168
    10. ' N' → logprob: -14.886164665222168

Token 25: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.636475493200123e-05
    2. 'V' → logprob: -9.750076293945312
    3. ' N' → logprob: -11.125076293945312
    4. '1' → logprob: -13.375076293945312
    5. 'n' → logprob: -14.750076293945312
    6. '   ' → logprob: -15.000076293945312
    7. ')' → logprob: -15.000076293945312
    8. ' ' → logprob: -15.250076293945312
    9. '0' → logprob: -15.500076293945312
    10. '	N' → logprob: -15.625076293945312

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03683910518884659
    2. ')' → logprob: -3.911839008331299
    3. ' ):' → logprob: -4.161839008331299
    4. ' )' → logprob: -8.411839485168457
    5. ':' → logprob: -8.911839485168457
    6. ',' → logprob: -9.161839485168457
    7. '0' → logprob: -10.411839485168457
    8. '4' → logprob: -10.536839485168457
    9. '):
' → logprob: -11.161839485168457
    10. '   ' → logprob: -12.036839485168457

Token 27: '   ' (ID: 271)
  Prédit: ' box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.03712699934840202
    2. '   ' → logprob: -3.4121270179748535
    3. '	box' → logprob: -6.1621270179748535
    4. 'box' → logprob: -7.2871270179748535
    5. ' boxes' → logprob: -8.537126541137695
    6. ' lines' → logprob: -9.662126541137695
    7. '_box' → logprob: -9.787126541137695
    8. ' input' → logprob: -10.037126541137695
    9. '    ' → logprob: -10.037126541137695
    10. 'n' → logprob: -10.412126541137695

Token 28: ' box' (ID: 5506)
  Prédit: ' box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.007120734080672264
    2. 'box' (adapté à ' box') → logprob: -5.632120609283447
    3. '   ' → logprob: -5.757120609283447
    4. '	box' → logprob: -8.632121086120605
    5. ' input' → logprob: -10.257121086120605
    6. 'input' → logprob: -11.257121086120605
    7. 'b' → logprob: -11.257121086120605
    8. ' boxes' → logprob: -11.382121086120605
    9. '```' → logprob: -11.632121086120605
    10. '    ' → logprob: -11.882121086120605

Token 29: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4974866644479334e-05
    2. '_s' → logprob: -12.000015258789062
    3. 'sizes' → logprob: -12.625015258789062
    4. '_sizes' → logprob: -13.000015258789062
    5. ' =' → logprob: -14.125015258789062
    6. '=' → logprob: -14.375015258789062
    7. ' s' → logprob: -14.750015258789062
    8. '_' → logprob: -14.875015258789062
    9. '.append' → logprob: -15.000015258789062
    10. 'size' → logprob: -15.125015258789062

Token 30: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023330731317400932
    2. '.' → logprob: -3.7733306884765625
    3. 'append' → logprob: -10.148330688476562
    4. '.extend' → logprob: -10.523330688476562
    5. '=' → logprob: -12.398330688476562
    6. '_append' → logprob: -12.648330688476562
    7. ' .' → logprob: -12.773330688476562
    8. ' =' → logprob: -13.398330688476562
    9. '.setdefault' → logprob: -13.523330688476562
    10. '.ap' → logprob: -13.523330688476562

Token 31: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.4448201358318329
    2. '(' → logprob: -1.4448201656341553
    3. '(int' → logprob: -2.8198201656341553
    4. '([]' → logprob: -3.1948201656341553
    5. '([' → logprob: -4.069819927215576
    6. '(tuple' → logprob: -5.819819927215576
    7. '((' → logprob: -6.319819927215576
    8. 'list' → logprob: -8.444820404052734
    9. '(map' → logprob: -8.569820404052734
    10. '(input' → logprob: -9.194820404052734

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0015192650025710464
    2. '(' → logprob: -6.501519203186035
    3. '(int' → logprob: -11.501519203186035
    4. '(range' → logprob: -12.501519203186035
    5. '()' → logprob: -14.001519203186035
    6. '())' → logprob: -14.376519203186035
    7. '(input' → logprob: -14.751519203186035
    8. '(filter' → logprob: -15.251519203186035
    9. '(

' → logprob: -15.251519203186035
    10. '(sorted' → logprob: -15.501519203186035

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006248722202144563
    2. 'int' → logprob: -8.250624656677246
    3. '=int' → logprob: -8.875624656677246
    4. '(' → logprob: -9.375624656677246
    5. '[int' → logprob: -9.500624656677246
    6. '<int' → logprob: -10.375624656677246
    7. ',int' → logprob: -11.625624656677246
    8. ')' → logprob: -11.750624656677246
    9. '```' → logprob: -11.875624656677246
    10. ']int' → logprob: -12.000624656677246

Token 34: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07077287882566452
    2. ',input' → logprob: -3.070772886276245
    3. ',' → logprob: -4.195772647857666
    4. '(' → logprob: -5.070772647857666
    5. 'input' → logprob: -7.570772647857666
    6. '=input' → logprob: -9.945773124694824
    7. ')' → logprob: -11.445773124694824
    8. '(),' → logprob: -11.945773124694824
    9. '[input' → logprob: -12.320773124694824
    10. '```' → logprob: -12.445773124694824

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868781626224518
    2. ' input' → logprob: -1.1368781328201294
    3. ' ' → logprob: -12.76187801361084
    4. '(input' → logprob: -13.63687801361084
    5. '	input' → logprob: -13.88687801361084
    6. ',input' → logprob: -14.76187801361084
    7. ')' → logprob: -15.01187801361084
    8. '=input' → logprob: -15.01187801361084
    9. '   ' → logprob: -15.13687801361084
    10. '<input' → logprob: -15.26187801361084

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001249925117008388
    2. '()' → logprob: -9.12512493133545
    3. ' ().' → logprob: -12.62512493133545
    4. '()))' → logprob: -12.87512493133545
    5. '   ' → logprob: -13.25012493133545
    6. ')' → logprob: -13.25012493133545
    7. '())))' → logprob: -13.25012493133545
    8. '(' → logprob: -13.37512493133545
    9. ')))' → logprob: -14.50012493133545
    10. '```' → logprob: -14.87512493133545

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011808603449026123
    2. 'strip' → logprob: -9.125118255615234
    3. 'rstrip' → logprob: -12.000118255615234
    4. '(split' → logprob: -13.125118255615234
    5. ' split' → logprob: -14.375118255615234
    6. 'read' → logprob: -15.125118255615234
    7. 'spl' → logprob: -17.125118255615234
    8. ')' → logprob: -18.375118255615234
    9. 'plit' → logprob: -18.500118255615234
    10. 's' → logprob: -18.500118255615234

Token 38: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.39227569103240967
    2. ')))' → logprob: -2.017275810241699
    3. '()))' → logprob: -2.517275810241699
    4. '())' → logprob: -2.642275810241699
    5. '()' → logprob: -3.517275810241699
    6. '(' → logprob: -5.142275810241699
    7. ')' → logprob: -6.017275810241699
    8. '))' → logprob: -6.767275810241699
    9. '())))
' → logprob: -8.5172758102417
    10. '))))' → logprob: -9.3922758102417

Token 39: ')

' (ID: 1029)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2520143389701843
    2. ')' → logprob: -1.502014398574829
    3. ')))' → logprob: -9.87701416015625
    4. '))
' → logprob: -10.87701416015625
    5. ')
' → logprob: -11.62701416015625
    6. ' ))' → logprob: -13.62701416015625
    7. '()))' → logprob: -14.37701416015625
    8. ' )' → logprob: -14.37701416015625
    9. '   ' → logprob: -14.75201416015625
    10. '[' → logprob: -14.75201416015625

Token 40: 'pre' (ID: 2235)
  Prédit: 'box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'box' → logprob: -0.26073065400123596
    2. 'dp' → logprob: -2.010730743408203
    3. 'boxes' → logprob: -3.385730743408203
    4. 'items' → logprob: -4.885730743408203
    5. 'res' → logprob: -5.510730743408203
    6. 'weights' → logprob: -5.635730743408203
    7. 'result' → logprob: -5.760730743408203
    8. 'answer' → logprob: -6.010730743408203
    9. 'sizes' → logprob: -6.135730743408203
    10. 'A' → logprob: -6.135730743408203

Token 41: ' =' (ID: 314)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.19009317457675934
    2. 's' → logprob: -2.3150932788848877
    3. 'sum' → logprob: -3.3150932788848877
    4. 'fs' → logprob: -4.190093040466309
    5. 'f' → logprob: -4.815093040466309
    6. 'fi' → logprob: -5.940093040466309
    7. '_sum' → logprob: -5.940093040466309
    8. 'ss' → logprob: -6.315093040466309
    9. 'fx' → logprob: -6.690093040466309
    10. 'x' → logprob: -6.815093040466309

Token 42: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007587933447211981
    2. '0' → logprob: -5.132587909698486
    3. '[[' → logprob: -7.132587909698486
    4. ' [' → logprob: -7.257587909698486
    5. 'box' → logprob: -10.007588386535645
    6. '[-' → logprob: -10.882588386535645
    7. '[len' → logprob: -11.132588386535645
    8. '[int' → logprob: -11.257588386535645
    9. '[]' → logprob: -11.632588386535645
    10. '{' → logprob: -12.257588386535645

Token 43: 'a' (ID: 64)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00497555872425437
    2. '[' → logprob: -5.50497579574585
    3. '(' → logprob: -8.004975318908691
    4. '1' → logprob: -8.629975318908691
    5. 'box' → logprob: -8.629975318908691
    6. '-' → logprob: -8.879975318908691
    7. ' ' → logprob: -11.504975318908691
    8. '(box' → logprob: -11.879975318908691
    9. 'sum' → logprob: -12.379975318908691
    10. '[-' → logprob: -12.629975318908691

Token 44: '+b' (ID: 76609)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6905837655067444
    2. '[' → logprob: -0.8155837655067444
    3. '+' → logprob: -4.4405837059021
    4. '[:]' → logprob: -4.5655837059021
    5. 'for' → logprob: -5.1905837059021
    6. ']' → logprob: -5.4405837059021
    7. ' +' → logprob: -5.5655837059021
    8. '*' → logprob: -6.1905837059021
    9. 'nt' → logprob: -6.1905837059021
    10. '-' → logprob: -6.3155837059021

Token 45: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.720872163772583
    2. 'for' → logprob: -1.220872163772583
    3. '+' → logprob: -1.595872163772583
    4. ' ' → logprob: -4.345871925354004
    5. '[' → logprob: -6.720871925354004
    6. '+c' → logprob: -7.470871925354004
    7. ' +' → logprob: -8.470871925354004
    8. ')' → logprob: -8.470871925354004
    9. '<|end|>' → logprob: -8.595871925354004
    10. '  ' → logprob: -8.845871925354004

Token 46: ' a' (ID: 261)
  Prédit: ' box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.038458552211523056
    2. ' a' → logprob: -4.038458347320557
    3. 'box' → logprob: -4.288458347320557
    4. 'a' → logprob: -5.288458347320557
    5. ' range' → logprob: -6.913458347320557
    6. ' pre' → logprob: -9.288458824157715
    7. ' ' → logprob: -9.288458824157715
    8. 'range' → logprob: -10.413458824157715
    9. ' pair' → logprob: -10.663458824157715
    10. '  ' → logprob: -11.163458824157715

Token 47: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.044596679508686066
    2. ',b' → logprob: -3.1695966720581055
    3. ' ,' → logprob: -6.7945966720581055
    4. ' in' → logprob: -7.7945966720581055
    5. 'b' → logprob: -10.919596672058105
    6. ' b' → logprob: -11.044596672058105
    7. ',a' → logprob: -11.544596672058105
    8. '<|end|>' → logprob: -11.919596672058105
    9. ' ' → logprob: -12.794596672058105
    10. 'a' → logprob: -12.919596672058105

Token 48: ' box' (ID: 5506)
  Prédit: 'box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'box' → logprob: -0.16036589443683624
    2. ' box' → logprob: -1.9103659391403198
    3. 'range' → logprob: -9.66036605834961
    4. '(box' → logprob: -10.28536605834961
    5. ' range' → logprob: -11.16036605834961
    6. '	box' → logprob: -11.66036605834961
    7. 'pre' → logprob: -12.16036605834961
    8. ']' → logprob: -12.91036605834961
    9. ' ' → logprob: -13.41036605834961
    10. '_box' → logprob: -13.53536605834961

Token 49: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -11.875009536743164
    3. '[s' → logprob: -14.625009536743164
    4. ' ' → logprob: -14.875009536743164
    5. '(s' → logprob: -15.125009536743164
    6. '<|end|>' → logprob: -15.375009536743164
    7. ']' → logprob: -15.500009536743164
    8. '   ' → logprob: -16.125009536743164
    9. 'sx' → logprob: -16.375009536743164
    10. ''s' → logprob: -16.500009536743164

Token 50: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00036514020757749677
    2. '[i' → logprob: -8.375365257263184
    3. '[-' → logprob: -9.750365257263184
    4. ']' → logprob: -10.125365257263184
    5. '0' → logprob: -11.375365257263184
    6. '])' → logprob: -12.125365257263184
    7. '][' → logprob: -12.375365257263184
    8. ')' → logprob: -12.750365257263184
    9. '   ' → logprob: -12.750365257263184
    10. ' [' → logprob: -12.750365257263184

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002264328533783555
    2. '1' → logprob: -6.877264499664307
    3. '3' → logprob: -7.252264499664307
    4. '2' → logprob: -7.627264499664307
    5. '-' → logprob: -11.002264022827148
    6. ' ' → logprob: -11.252264022827148
    7. ']' → logprob: -13.564764022827148
    8. '])' → logprob: -13.939764022827148
    9. 'i' → logprob: -14.002264022827148
    10. '   ' → logprob: -14.752264022827148

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04229610785841942
    2. '][' → logprob: -3.5422961711883545
    3. '   ' → logprob: -5.292295932769775
    4. ' ]' → logprob: -6.542295932769775
    5. ' ' → logprob: -6.792295932769775
    6. '][:' → logprob: -6.792295932769775
    7. ',' → logprob: -6.917295932769775
    8. ' ][' → logprob: -7.167295932769775
    9. '[' → logprob: -7.542295932769775
    10. ']+' → logprob: -8.042296409606934

Token 53: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.061886902898550034
    2. ' ]' → logprob: -3.686886787414551
    3. '+' → logprob: -4.436886787414551
    4. ' ' → logprob: -4.561886787414551
    5. ']+' → logprob: -5.686886787414551
    6. ',' → logprob: -6.061886787414551
    7. ' for' → logprob: -6.061886787414551
    8. '   ' → logprob: -6.686886787414551
    9. '[' → logprob: -7.186886787414551
    10. 'for' → logprob: -7.561886787414551

Token 54: ' b' (ID: 287)
  Prédit: ' box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.09341747313737869
    2. ' b' → logprob: -2.5934174060821533
    3. ' ' → logprob: -4.468417644500732
    4. 'b' → logprob: -6.468417644500732
    5. '  ' → logprob: -7.468417644500732
    6. 'box' → logprob: -7.718417644500732
    7. ' range' → logprob: -8.968417167663574
    8. ' pre' → logprob: -9.093417167663574
    9. '   ' → logprob: -10.093417167663574
    10. '	box' → logprob: -10.343417167663574

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007083095144480467
    2. ' box' → logprob: -5.007082939147949
    3. ' ' → logprob: -8.25708293914795
    4. '=' → logprob: -10.25708293914795
    5. ' to' → logprob: -10.50708293914795
    6. 'in' → logprob: -10.88208293914795
    7. ',' → logprob: -12.13208293914795
    8. ' =' → logprob: -12.38208293914795
    9. ' on' → logprob: -12.63208293914795
    10. ' space' → logprob: -12.88208293914795

Token 56: ' box' (ID: 5506)
  Prédit: ' box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.6326150894165039
    2. 'box' → logprob: -0.7576150894165039
    3. ' ' → logprob: -11.507615089416504
    4. '	box' → logprob: -13.007615089416504
    5. ' range' → logprob: -14.257615089416504
    6. '(box' → logprob: -14.382615089416504
    7. '  ' → logprob: -14.820115089416504
    8. 'range' → logprob: -14.945115089416504
    9. '   ' → logprob: -15.007615089416504
    10. 'Box' → logprob: -15.070115089416504

Token 57: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00012106612848583609
    2. '[' → logprob: -9.125121116638184
    3. '1' → logprob: -11.375121116638184
    4. '0' → logprob: -15.875121116638184
    5. '```' → logprob: -15.875121116638184
    6. '2' → logprob: -16.250120162963867
    7. '4' → logprob: -16.375120162963867
    8. '5' → logprob: -17.125120162963867
    9. 'S' → logprob: -17.250120162963867
    10. '[s' → logprob: -17.375120162963867

Token 58: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. '1' → logprob: -12.500005722045898
    3. '0' → logprob: -14.125005722045898
    4. '```' → logprob: -15.375005722045898
    5. '[-' → logprob: -15.500005722045898
    6. '[
' → logprob: -15.625005722045898
    7. '2' → logprob: -15.875005722045898
    8. ' [' → logprob: -16.1250057220459
    9. '3' → logprob: -16.7500057220459
    10. 's' → logprob: -17.1250057220459

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005524366861209273
    2. '2' → logprob: -8.3755521774292
    3. '0' → logprob: -8.6255521774292
    4. '3' → logprob: -8.8755521774292
    5. '   ' → logprob: -14.0630521774292
    6. ' ' → logprob: -14.1255521774292
    7. '```' → logprob: -15.6880521774292
    8. '[' → logprob: -15.8755521774292
    9. '  ' → logprob: -16.188053131103516
    10. ']' → logprob: -16.313053131103516

Token 60: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0507037378847599
    2. ']]' → logprob: -3.050703763961792
    3. ')]' → logprob: -6.425703525543213
    4. ' ]' → logprob: -8.300704002380371
    5. ' ]]' → logprob: -9.675704002380371
    6. ']}' → logprob: -10.050704002380371
    7. '}]' → logprob: -10.175704002380371
    8. ' ' → logprob: -10.925704002380371
    9. '   ' → logprob: -11.050704002380371
    10. '>]' → logprob: -11.425704002380371

Token 61: 'af' (ID: 1553)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49283599853515625
    2. '[' → logprob: -1.2428359985351562
    3. ']' → logprob: -3.3678359985351562
    4. ',' → logprob: -3.7428359985351562
    5. ' for' → logprob: -4.242835998535156
    6. 'for' → logprob: -4.242835998535156
    7. ' +' → logprob: -5.492835998535156
    8. ' ' → logprob: -6.117835998535156
    9. ' ]' → logprob: -6.242835998535156
    10. '[:]' → logprob: -6.867835998535156

Token 62: ' =' (ID: 314)
  Prédit: 'ter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -0.07461631298065186
    2. '[' → logprob: -3.6996164321899414
    3. 't' → logprob: -4.449616432189941
    4. 'er' → logprob: -4.449616432189941
    5. ' =' → logprob: -4.574616432189941
    6. '=' → logprob: -4.699616432189941
    7. 'te' → logprob: -5.574616432189941
    8. '=[' → logprob: -8.699616432189941
    9. '1' → logprob: -10.324616432189941
    10. 'f' → logprob: -10.324616432189941

Token 63: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5253446102142334
    2. ' [' → logprob: -1.0253446102142334
    3. '[' → logprob: -3.0253446102142334
    4. ' ' → logprob: -7.5253448486328125
    5. '[b' → logprob: -7.9003448486328125
    6. '[c' → logprob: -8.775344848632812
    7. '[i' → logprob: -9.525344848632812
    8. ' a' → logprob: -9.650344848632812
    9. 'a' → logprob: -10.025344848632812
    10. '[x' → logprob: -10.775344848632812

Token 64: 'c' (ID: 66)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01790688745677471
    2. 'c' → logprob: -4.142906665802002
    3. ' a' → logprob: -6.392906665802002
    4. ' c' → logprob: -9.39290714263916
    5. '   ' → logprob: -9.89290714263916
    6. ' ' → logprob: -10.39290714263916
    7. 'b' → logprob: -11.76790714263916
    8. '	a' → logprob: -12.14290714263916
    9. 'x' → logprob: -12.76790714263916
    10. '  ' → logprob: -12.76790714263916

Token 65: '+d' (ID: 127807)
  Prédit: '+d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+d' → logprob: -0.0702599585056305
    2. '+' → logprob: -2.6952600479125977
    3. ' +' → logprob: -8.070260047912598
    4. '+
' → logprob: -12.195260047912598
    5. 'd' → logprob: -14.070260047912598
    6. '+b' → logprob: -14.195260047912598
    7. '+[' → logprob: -14.320260047912598
    8. '+

' → logprob: -14.695260047912598
    9. '+k' → logprob: -15.070260047912598
    10. '+]' → logprob: -15.195260047912598

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.006719871424138546
    2. 'for' → logprob: -5.006720066070557
    3. '	for' → logprob: -12.506719589233398
    4. ' ' → logprob: -14.256719589233398
    5. '   ' → logprob: -16.3817195892334
    6. ' in' → logprob: -16.7567195892334
    7. '    ' → logprob: -17.1317195892334
    8. ' from' → logprob: -18.0067195892334
    9. ' ' → logprob: -18.1317195892334
    10. '[' → logprob: -18.2567195892334

Token 67: ' c' (ID: 274)
  Prédit: ' box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.006522460374981165
    2. ' c' → logprob: -5.2565226554870605
    3. 'box' → logprob: -7.5065226554870605
    4. ' e' → logprob: -7.7565226554870605
    5. 'c' → logprob: -8.381522178649902
    6. ' ' → logprob: -9.881522178649902
    7. 'e' → logprob: -11.131522178649902
    8. '	box' → logprob: -11.881522178649902
    9. ' ' → logprob: -13.631522178649902
    10. '  ' → logprob: -13.631522178649902

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004625699482858181
    2. 'in' → logprob: -5.3796257972717285
    3. ' ' → logprob: -12.75462532043457
    4. '  ' → logprob: -13.87962532043457
    5. 'import' → logprob: -14.87962532043457
    6. 'd' → logprob: -15.25462532043457
    7. '	in' → logprob: -15.75462532043457
    8. '<|end|>' → logprob: -16.12962532043457
    9. '   ' → logprob: -16.25462532043457
    10. 's' → logprob: -16.50462532043457

Token 69: ' box' (ID: 5506)
  Prédit: 'box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'box' → logprob: -0.3868725001811981
    2. ' box' → logprob: -1.1368725299835205
    3. '(box' → logprob: -14.386872291564941
    4. '	box' → logprob: -14.386872291564941
    5. ' ' → logprob: -15.761872291564941
    6. '_box' → logprob: -16.386873245239258
    7. '   ' → logprob: -17.136873245239258
    8. 'Box' → logprob: -17.386873245239258
    9. '.box' → logprob: -17.386873245239258
    10. 'range' → logprob: -17.511873245239258

Token 70: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.12500286102295
    3. '```' → logprob: -15.62500286102295
    4. ' ' → logprob: -16.250001907348633
    5. 'box' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.750001907348633
    7. '2' → logprob: -16.812501907348633
    8. 'ss' → logprob: -17.312501907348633
    9. 'S' → logprob: -17.812501907348633
    10. '0' → logprob: -17.937501907348633

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002978048287332058
    2. '2' → logprob: -8.125297546386719
    3. ' [' → logprob: -15.000297546386719
    4. '```' → logprob: -15.125297546386719
    5. '[
' → logprob: -15.375297546386719
    6. '][' → logprob: -15.500297546386719
    7. '   ' → logprob: -15.500297546386719
    8. '{' → logprob: -16.50029754638672
    9. 's' → logprob: -16.50029754638672
    10. ' ' → logprob: -16.56279754638672

Token 72: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4656579120783135e-05
    2. '3' → logprob: -10.125044822692871
    3. '0' → logprob: -12.625044822692871
    4. ' ' → logprob: -14.875044822692871
    5. '1' → logprob: -15.000044822692871
    6. '[' → logprob: -15.687544822692871
    7. '   ' → logprob: -15.937544822692871
    8. '```' → logprob: -16.375043869018555
    9. '２' → logprob: -16.625043869018555
    10. '۲' → logprob: -16.875043869018555

Token 73: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12698060274124146
    2. 'for' → logprob: -2.1269805431365967
    3. ' ' → logprob: -10.501980781555176
    4. '   ' → logprob: -11.126980781555176
    5. '	for' → logprob: -11.751980781555176
    6. ']' → logprob: -13.376980781555176
    7. '  ' → logprob: -14.626980781555176
    8. '    ' → logprob: -15.876980781555176
    9. '0' → logprob: -16.50197982788086
    10. ' ' → logprob: -16.62697982788086

Token 74: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2519649565219879
    2. 'for' → logprob: -1.5019649267196655
    3. '   ' → logprob: -11.001964569091797
    4. ' ' → logprob: -11.126964569091797
    5. '	for' → logprob: -12.626964569091797
    6. '    ' → logprob: -14.376964569091797
    7. '  ' → logprob: -15.001964569091797
    8. ' ' → logprob: -16.376964569091797
    9. '[' → logprob: -16.626964569091797
    10. ' in' → logprob: -17.751964569091797

Token 75: ' d' (ID: 272)
  Prédit: ' box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.05071235075592995
    2. ' d' → logprob: -3.0507123470306396
    3. 'box' → logprob: -7.175712585449219
    4. 'd' → logprob: -7.300712585449219
    5. ' ' → logprob: -7.425712585449219
    6. '  ' → logprob: -9.800712585449219
    7. '   ' → logprob: -11.425712585449219
    8. '	box' → logprob: -11.550712585449219
    9. '    ' → logprob: -13.175712585449219
    10. ']' → logprob: -13.425712585449219

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004630672745406628
    2. 'in' → logprob: -5.3796305656433105
    3. ' ' → logprob: -11.629631042480469
    4. '  ' → logprob: -14.504631042480469
    5. '   ' → logprob: -15.504631042480469
    6. 's' → logprob: -15.504631042480469
    7. ' i' → logprob: -16.12963104248047
    8. ']' → logprob: -16.50463104248047
    9. 'd' → logprob: -16.62963104248047
    10. '```' → logprob: -16.62963104248047

Token 77: ' box' (ID: 5506)
  Prédit: ' box'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' box' → logprob: -0.14268165826797485
    2. 'box' → logprob: -2.01768159866333
    3. '(box' → logprob: -12.892682075500488
    4. '	box' → logprob: -13.142682075500488
    5. ' ' → logprob: -14.017682075500488
    6. '.box' → logprob: -14.767682075500488
    7. 'b' → logprob: -15.267682075500488
    8. '_box' → logprob: -15.642682075500488
    9. 's' → logprob: -16.892681121826172
    10. 'boxes' → logprob: -17.017681121826172

Token 78: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.750000953674316
    3. '2' → logprob: -16.375
    4. 'S' → logprob: -17.25
    5. '0' → logprob: -18.5
    6. '3' → logprob: -18.625
    7. 'с' → logprob: -18.625
    8. '4' → logprob: -18.625
    9. '```' → logprob: -18.875
    10. 'ss' → logprob: -19.1875

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. 's' → logprob: -12.250006675720215
    3. '2' → logprob: -14.625006675720215
    4. '[
' → logprob: -14.750006675720215
    5. ']' → logprob: -15.625006675720215
    6. '(' → logprob: -15.875006675720215
    7. '{' → logprob: -16.1250057220459
    8. '3' → logprob: -16.3750057220459
    9. '<|end|>' → logprob: -16.5000057220459
    10. '][' → logprob: -17.3750057220459

Token 80: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4747254550457001
    2. '2' → logprob: -0.9747254848480225
    3. '0' → logprob: -7.974725246429443
    4. 'range' → logprob: -8.849725723266602
    5. ' ' → logprob: -9.599725723266602
    6. '1' → logprob: -9.974725723266602
    7. '[' → logprob: -10.724725723266602
    8. '   ' → logprob: -11.724725723266602
    9. ']' → logprob: -12.224725723266602
    10. '])' → logprob: -12.974725723266602

Token 81: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008929980103857815
    2. ')]' → logprob: -7.2508931159973145
    3. ']]' → logprob: -8.625892639160156
    4. ' ]' → logprob: -13.500892639160156
    5. ']}' → logprob: -13.750892639160156
    6. '])' → logprob: -15.000892639160156
    7. ']
' → logprob: -15.250892639160156
    8. '],' → logprob: -15.750892639160156
    9. '])]' → logprob: -16.000892639160156
    10. '}]' → logprob: -16.250892639160156

Token 82: '    
' (ID: 1944)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3903901278972626
    2. '=' → logprob: -2.140390157699585
    3. '.sort' → logprob: -2.640390157699585
    4. ',' → logprob: -2.765390157699585
    5. 'af' → logprob: -4.765389919281006
    6. 'pre' → logprob: -4.765389919281006
    7. 'sorted' → logprob: -5.015389919281006
    8. '
' → logprob: -5.015389919281006
    9. '\' → logprob: -5.515389919281006
    10. ')' → logprob: -5.640389919281006

Token 83: 'pre' (ID: 2235)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45565736293792725
    2. 'af' → logprob: -1.2056573629379272
    3. 'pre' → logprob: -3.455657482147217
    4. '=' → logprob: -4.455657482147217
    5. '.sort' → logprob: -5.205657482147217
    6. 'sort' → logprob: -5.580657482147217
    7. 'for' → logprob: -6.080657482147217
    8. 'import' → logprob: -6.080657482147217
    9. 'sorted' → logprob: -6.455657482147217
    10. '\' → logprob: -6.705657482147217

Token 84: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29876819252967834
    2. '<|end|>' → logprob: -1.923768162727356
    3. '.sort' → logprob: -2.9237682819366455
    4. '+' → logprob: -3.5487682819366455
    5. '[' → logprob: -4.423768043518066
    6. '[:]' → logprob: -5.423768043518066
    7. '=' → logprob: -6.173768043518066
    8. ')' → logprob: -6.173768043518066
    9. ' ' → logprob: -6.173768043518066
    10. ',' → logprob: -6.423768043518066

Token 85: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25371643900871277
    2. ')' → logprob: -2.253716468811035
    3. '()' → logprob: -2.253716468811035
    4. '\' → logprob: -5.378716468811035
    5. '[' → logprob: -6.503716468811035
    6. '(
' → logprob: -6.503716468811035
    7. '#' → logprob: -6.878716468811035
    8. ',' → logprob: -7.003716468811035
    9. '.' → logprob: -7.503716468811035
    10. '
' → logprob: -7.628716468811035

Token 86: 'af' (ID: 1553)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0302369594573975
    2. 'af' → logprob: -1.4052369594573975
    3. 'ans' → logprob: -2.5302369594573975
    4. 'for' → logprob: -2.9052369594573975
    5. 'result' → logprob: -3.1552369594573975
    6. 'answer' → logprob: -3.2802369594573975
    7. 'idx' → logprob: -3.2802369594573975
    8. 'total' → logprob: -4.530237197875977
    9. 'a' → logprob: -4.655237197875977
    10. 'res' → logprob: -4.655237197875977

Token 87: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4752926230430603
    2. '.sort' → logprob: -0.9752926230430603
    3. '[' → logprob: -7.725292682647705
    4. 'sort' → logprob: -8.225292205810547
    5. '.count' → logprob: -8.975292205810547
    6. '<|end|>' → logprob: -8.975292205810547
    7. '.append' → logprob: -9.975292205810547
    8. '.reverse' → logprob: -10.600292205810547
    9. '_sorted' → logprob: -10.850292205810547
    10. '.setdefault' → logprob: -11.100292205810547

Token 88: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12695877254009247
    2. '(' → logprob: -2.1269588470458984
    3. '[' → logprob: -11.501958847045898
    4. ')' → logprob: -12.751958847045898
    5. '()`' → logprob: -13.251958847045898
    6. '.' → logprob: -13.501958847045898
    7. '()
' → logprob: -13.751958847045898
    8. '().' → logprob: -13.876958847045898
    9. '[]' → logprob: -13.876958847045898
    10. '();' → logprob: -14.001958847045898

Token 89: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5663929581642151
    2. 'answer' → logprob: -1.8163928985595703
    3. 'count' → logprob: -2.4413928985595703
    4. 'res' → logprob: -2.9413928985595703
    5. 'result' → logprob: -3.0663928985595703
    6. 'max' → logprob: -3.3163928985595703
    7. 'cnt' → logprob: -4.19139289855957
    8. 'i' → logprob: -4.19139289855957
    9. 'for' → logprob: -4.81639289855957
    10. 'l' → logprob: -6.06639289855957

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16065363585948944
    2. '=' → logprob: -1.9106535911560059
    3. ' ' → logprob: -8.160654067993164
    4. '_' → logprob: -10.035654067993164
    5. ' +=' → logprob: -10.535654067993164
    6. '(' → logprob: -10.660654067993164
    7. ':' → logprob: -11.660654067993164
    8. ',' → logprob: -12.160654067993164
    9. '>' → logprob: -12.410654067993164
    10. '_space' → logprob: -12.410654067993164

Token 91: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15229275822639465
    2. '10' → logprob: -2.5272927284240723
    3. 'float' → logprob: -3.2772927284240723
    4. '-' → logprob: -4.402292728424072
    5. ' ' → logprob: -5.152292728424072
    6. 'V' → logprob: -6.402292728424072
    7. 'len' → logprob: -7.152292728424072
    8. ' float' → logprob: -7.277292728424072
    9. '1' → logprob: -7.527292728424072
    10. '100' → logprob: -7.777292728424072

Token 92: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5947744846343994
    2. 'float' → logprob: -1.5947744846343994
    3. '10' → logprob: -2.2197744846343994
    4. '-' → logprob: -3.2197744846343994
    5. 'len' → logprob: -3.3447744846343994
    6. 'max' → logprob: -3.8447744846343994
    7. 'V' → logprob: -4.21977424621582
    8. 'bis' → logprob: -4.21977424621582
    9. 'abs' → logprob: -6.34477424621582
    10. '1' → logprob: -6.46977424621582

Token 93: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23580694198608398
    2. '
' → logprob: -1.985806941986084
    3. ' for' → logprob: -2.860806941986084
    4. '\n' → logprob: -5.360806941986084
    5. '' → logprob: -5.610806941986084
    6. '<|end|>' → logprob: -5.610806941986084
    7. ',' → logprob: -7.110806941986084
    8. ' 
' → logprob: -7.110806941986084
    9. '\' → logprob: -7.235806941986084
    10. ' ' → logprob: -8.485807418823242

Token 94: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003941617906093597
    2. '
' → logprob: -5.753941535949707
    3. ' for' → logprob: -7.378941535949707
    4. '' → logprob: -10.003941535949707
    5. '```' → logprob: -10.003941535949707
    6. '\n' → logprob: -10.378941535949707
    7. '\' → logprob: -12.503941535949707
    8. ' 
' → logprob: -12.503941535949707
    9. '    
' → logprob: -13.253941535949707
    10. '``' → logprob: -13.378941535949707

Token 95: ' ab' (ID: 692)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4726574122905731
    2. ' x' → logprob: -1.8476574420928955
    3. 'p' → logprob: -2.3476574420928955
    4. 'x' → logprob: -3.2226574420928955
    5. ' a' → logprob: -3.8476574420928955
    6. ' i' → logprob: -4.347657203674316
    7. 'a' → logprob: -4.597657203674316
    8. ' v' → logprob: -4.722657203674316
    9. 'i' → logprob: -5.472657203674316
    10. ' ' → logprob: -5.597657203674316

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5827051401138306
    2. 'in' → logprob: -0.8327051401138306
    3. ' ' → logprob: -5.832705020904541
    4. '_' → logprob: -6.457705020904541
    5. ' i' → logprob: -7.207705020904541
    6. '  ' → logprob: -7.457705020904541
    7. 'i' → logprob: -8.0827054977417
    8. '_in' → logprob: -8.2077054977417
    9. ',' → logprob: -9.0827054977417
    10. '   ' → logprob: -9.7077054977417

Token 97: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.08895287662744522
    2. ' pre' → logprob: -2.4639527797698975
    3. '(pre' → logprob: -12.088953018188477
    4. '	pre' → logprob: -12.588953018188477
    5. 'af' → logprob: -13.463953018188477
    6. 'pr' → logprob: -14.838953018188477
    7. 'p' → logprob: -15.088953018188477
    8. 'preh' → logprob: -15.213953018188477
    9. ' ' → logprob: -15.213953018188477
    10. '-pre' → logprob: -15.338953018188477

Token 98: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.660315895918757e-05
    2. ' :' → logprob: -10.000076293945312
    3. ':
' → logprob: -10.500076293945312
    4. '=' → logprob: -13.875076293945312
    5. ',' → logprob: -14.500076293945312
    6. ' in' → logprob: -15.250076293945312
    7. '<|end|>' → logprob: -15.250076293945312
    8. '):' → logprob: -15.625076293945312
    9. ':

' → logprob: -15.625076293945312
    10. '>' → logprob: -15.750076293945312

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012309459270909429
    2. '<|end|>' → logprob: -8.12623119354248
    3. ' for' → logprob: -8.25123119354248
    4. '	idx' → logprob: -9.00123119354248
    5. '	for' → logprob: -9.12623119354248
    6. '	v' → logprob: -10.25123119354248
    7. '	count' → logprob: -10.25123119354248
    8. ' ind' → logprob: -10.25123119354248
    9. '  ' → logprob: -10.50123119354248
    10. ' idx' → logprob: -10.75123119354248

Token 100: ' target' (ID: 3783)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.7849631309509277
    2. 'r' → logprob: -2.2849631309509277
    3. 'ans' → logprob: -2.4099631309509277
    4. 'l' → logprob: -2.5349631309509277
    5. ' r' → logprob: -2.6599631309509277
    6. ' idx' → logprob: -2.9099631309509277
    7. 'target' (adapté à ' target') → logprob: -3.1599631309509277
    8. 'left' → logprob: -3.2849631309509277
    9. ' l' → logprob: -3.4099631309509277
    10. 'remain' → logprob: -3.9099631309509277

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023332830518484116
    2. '=' → logprob: -3.7733328342437744
    3. '_' → logprob: -9.523332595825195
    4. ' ' → logprob: -12.523332595825195
    5. '_idx' → logprob: -12.898332595825195
    6. '_space' → logprob: -12.898332595825195
    7. '_index' → logprob: -13.648332595825195
    8. '_=' → logprob: -14.023332595825195
    9. 'space' → logprob: -14.523332595825195
    10. ' ' → logprob: -14.773332595825195

Token 102: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0010360259329900146
    2. ' V' → logprob: -6.876036167144775
    3. ' ' → logprob: -13.501035690307617
    4. '   ' → logprob: -14.001035690307617
    5. '	V' → logprob: -14.501035690307617
    6. '  ' → logprob: -14.751035690307617
    7. '    ' → logprob: -17.626035690307617
    8. '`' → logprob: -17.751035690307617
    9. '(V' → logprob: -18.001035690307617
    10. 'target' → logprob: -18.251035690307617

Token 103: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.030753791332244873
    2. '-' → logprob: -3.5307538509368896
    3. '-ab' → logprob: -6.9057536125183105
    4. '-af' → logprob: -15.655754089355469
    5. '-b' → logprob: -16.15575408935547
    6. ' ' → logprob: -16.65575408935547
    7. ' ab' → logprob: -16.65575408935547
    8. '-aj' → logprob: -17.40575408935547
    9. '<|end|>' → logprob: -17.40575408935547
    10. '-target' → logprob: -17.53075408935547

Token 104: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.005234002135694027
    2. ' ab' → logprob: -5.2552337646484375
    3. '(ab' → logprob: -17.130233764648438
    4. ''ab' → logprob: -17.755233764648438
    5. '   ' → logprob: -18.005233764648438
    6. '_ab' → logprob: -18.380233764648438
    7. 'abcd' → logprob: -18.630233764648438
    8. ' ' → logprob: -18.755233764648438
    9. 'abc' → logprob: -18.880233764648438
    10. 'abbr' → logprob: -19.505233764648438

Token 105: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.6175915002822876
    2. 'left' → logprob: -1.9925915002822876
    3. ' idx' → logprob: -2.242591381072998
    4. ' left' → logprob: -3.367591381072998
    5. '
' → logprob: -3.492591381072998
    6. 'l' → logprob: -3.992591381072998
    7. ')' → logprob: -4.242591381072998
    8. '   ' → logprob: -4.242591381072998
    9. 'count' → logprob: -4.242591381072998
    10. '    
' → logprob: -4.242591381072998

Token 106: '   ' (ID: 271)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.1087470054626465
    2. 'l' → logprob: -1.9837470054626465
    3. ' left' → logprob: -1.9837470054626465
    4. 'left' → logprob: -2.2337470054626465
    5. 'idx' → logprob: -2.4837470054626465
    6. ' idx' → logprob: -2.4837470054626465
    7. 'ans' → logprob: -3.7337470054626465
    8. ' ans' → logprob: -3.9837470054626465
    9. 'pos' → logprob: -4.1087470054626465
    10. ' ind' → logprob: -4.6087470054626465

Token 107: ' ans' (ID: 3345)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6273108124732971
    2. 'left' → logprob: -1.2523107528686523
    3. 'ans' (adapté à ' ans') → logprob: -2.2523107528686523
    4. 'r' → logprob: -3.2523107528686523
    5. 'right' → logprob: -4.877310752868652
    6. 'idx' → logprob: -4.877310752868652
    7. 'i' → logprob: -5.877310752868652
    8. 'lo' → logprob: -6.002310752868652
    9. 'pos' → logprob: -6.127310752868652
    10. 'L' → logprob: -6.252310752868652

Token 108: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.003185436362400651
    2. '+=' → logprob: -5.753185272216797
    3. ' +' → logprob: -12.628185272216797
    4. ' =' → logprob: -13.128185272216797
    5. '+' → logprob: -13.378185272216797
    6. ' ' → logprob: -14.628185272216797
    7. '	' → logprob: -16.003185272216797
    8. ' -=' → logprob: -16.378185272216797
    9. '=' → logprob: -16.628185272216797
    10. '+=(' → logprob: -16.628185272216797

Token 109: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.01012576837092638
    2. 'len' → logprob: -5.135125637054443
    3. ' bis' → logprob: -5.885125637054443
    4. '(b' → logprob: -7.635125637054443
    5. 'b' → logprob: -7.885125637054443
    6. 'af' → logprob: -8.010126113891602
    7. 'ins' → logprob: -9.385126113891602
    8. '(' → logprob: -9.760126113891602
    9. '(len' → logprob: -10.010126113891602
    10. ' (' → logprob: -11.885126113891602

Token 110: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -3.128163257315464e-07
    2. 'e' → logprob: -16.625
    3. 'ects' → logprob: -16.75
    4. 'ectl' → logprob: -18.0
    5. '```' → logprob: -18.125
    6. 'ected' → logprob: -18.5
    7. 'ec' → logprob: -19.5
    8. 'ct' → logprob: -20.125
    9. 'ecta' → logprob: -20.375
    10. 't' → logprob: -20.375

Token 111: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.07911472022533417
    2. '_left' → logprob: -2.5791146755218506
    3. '_' → logprob: -8.57911491394043
    4. '.b' → logprob: -10.57911491394043
    5. 'ing' → logprob: -12.45411491394043
    6. '._' → logprob: -12.45411491394043
    7. 'right' → logprob: -13.95411491394043
    8. '_RIGHT' → logprob: -14.20411491394043
    9. '```' → logprob: -15.20411491394043
    10. ' _' → logprob: -15.45411491394043

Token 112: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.273621405242011e-05
    2. '(pre' → logprob: -10.375032424926758
    3. ' (' → logprob: -14.500032424926758
    4. 'af' → logprob: -15.000032424926758
    5. '```' → logprob: -15.250032424926758
    6. '(AF' → logprob: -15.750032424926758
    7. '(
' → logprob: -15.875032424926758
    8. '(`' → logprob: -16.625032424926758
    9. '`' → logprob: -17.250032424926758
    10. '('' → logprob: -17.500032424926758

Token 113: 'af' (ID: 1553)
  Prédit: 'af'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'af' → logprob: -1.5570885807392187e-05
    2. ' af' → logprob: -11.125015258789062
    3. '(' → logprob: -14.375015258789062
    4. ''af' → logprob: -16.500015258789062
    5. '_af' → logprob: -16.625015258789062
    6. '#af' → logprob: -17.500015258789062
    7. 'afs' → logprob: -18.000015258789062
    8. '.af' → logprob: -18.625015258789062
    9. 'afb' → logprob: -18.625015258789062
    10. 'a' → logprob: -19.000015258789062

Token 114: ',target' (ID: 160347)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21968063712120056
    2. '(' → logprob: -1.969680666923523
    3. ',target' → logprob: -3.2196805477142334
    4. '(target' → logprob: -4.0946807861328125
    5. ')' → logprob: -7.3446807861328125
    6. ',(' → logprob: -9.094680786132812
    7. ')(' → logprob: -9.094680786132812
    8. ' ,' → logprob: -9.844680786132812
    9. ',",' → logprob: -10.094680786132812
    10. ' (' → logprob: -10.844680786132812

Token 115: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ' )' → logprob: -11.375014305114746
    3. ')
' → logprob: -14.000014305114746
    4. '))' → logprob: -14.250014305114746
    5. ')+' → logprob: -15.250014305114746
    6. ',' → logprob: -15.875014305114746
    7. ' ' → logprob: -16.37501335144043
    8. '(' → logprob: -16.50001335144043
    9. ')-' → logprob: -16.62501335144043
    10. ')`' → logprob: -16.62501335144043

Token 116: ' -' (ID: 533)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06380366533994675
    2. ')' → logprob: -3.1888036727905273
    3. '<|end|>' → logprob: -5.438803672790527
    4. '(target' → logprob: -5.563803672790527
    5. '(len' → logprob: -5.688803672790527
    6. '(b' → logprob: -6.563803672790527
    7. '-' → logprob: -6.688803672790527
    8. '(None' → logprob: -6.813803672790527
    9. ' -' → logprob: -6.938803672790527
    10. '('' → logprob: -7.188803672790527

Token 117: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0031777136027812958
    2. ' bis' → logprob: -5.753177642822266
    3. 'b' → logprob: -18.003177642822266
    4. '	b' → logprob: -18.128177642822266
    5. ' ' → logprob: -19.753177642822266
    6. 'bs' → logprob: -20.628177642822266
    7. '-b' → logprob: -21.628177642822266
    8. '   ' → logprob: -21.753177642822266
    9. 'bil' → logprob: -21.753177642822266
    10. '(b' → logprob: -22.128177642822266

Token 118: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.763666947837919e-05
    2. 'sect' → logprob: -10.00004768371582
    3. 'ects' → logprob: -13.75004768371582
    4. 'ec' → logprob: -15.25004768371582
    5. 'e' → logprob: -15.37504768371582
    6. 'ected' → logprob: -15.62504768371582
    7. 'ectl' → logprob: -15.87504768371582
    8. 'ct' → logprob: -16.37504768371582
    9. 'с' → logprob: -16.62504768371582
    10. 'ce' → logprob: -16.87504768371582

Token 119: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.2233183042553719e-05
    2. '_' → logprob: -11.500012397766113
    3. '_right' → logprob: -13.625012397766113
    4. 'left' → logprob: -14.750012397766113
    5. '_LEFT' → logprob: -15.500012397766113
    6. '_le' → logprob: -16.000011444091797
    7. '_Left' → logprob: -17.250011444091797
    8. '<|end|>' → logprob: -17.750011444091797
    9. ' _' → logprob: -18.000011444091797
    10. 'Left' → logprob: -18.250011444091797

Token 120: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.896309739408025e-07
    2. '(
' → logprob: -15.000000953674316
    3. 'af' → logprob: -15.750000953674316
    4. '(AF' → logprob: -16.0
    5. ' (' → logprob: -17.125
    6. '```' → logprob: -18.5
    7. '<|end|>' → logprob: -19.0
    8. '(f' → logprob: -19.25
    9. '#af' → logprob: -19.875
    10. '_af' → logprob: -20.125

Token 121: 'af' (ID: 1553)
  Prédit: 'af'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'af' → logprob: -0.0024881421122699976
    2. '(' → logprob: -6.002488136291504
    3. ' af' → logprob: -11.377488136291504
    4. '_af' → logprob: -15.002488136291504
    5. '#af' → logprob: -15.127488136291504
    6. ''af' → logprob: -16.00248908996582
    7. 'afb' → logprob: -16.37748908996582
    8. 'afs' → logprob: -16.62748908996582
    9. '<|end|>' → logprob: -17.12748908996582
    10. '.af' → logprob: -17.62748908996582

Token 122: ',target' (ID: 160347)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -6.885492621222511e-05
    2. ',' → logprob: -9.625068664550781
    3. 'af' → logprob: -13.625068664550781
    4. '(
' → logprob: -14.375068664550781
    5. ' (' → logprob: -14.625068664550781
    6. '[' → logprob: -15.875068664550781
    7. '(target' → logprob: -16.00006866455078
    8. '(AF' → logprob: -16.75006866455078
    9. ')' → logprob: -17.00006866455078
    10. ',(' → logprob: -17.12506866455078

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.500001907348633
    3. '))' → logprob: -15.250001907348633
    4. ' )' → logprob: -15.500001907348633
    5. '   ' → logprob: -16.125001907348633
    6. ')}' → logprob: -17.375001907348633
    7. ')a' → logprob: -17.500001907348633
    8. '),' → logprob: -17.625001907348633
    9. ')`' → logprob: -17.875001907348633
    10. '(' → logprob: -18.375001907348633

Token 124: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017565857619047165
    2. '\n' → logprob: -5.392565727233887
    3. ')' → logprob: -5.642565727233887
    4. '<|end|>' → logprob: -5.642565727233887
    5. '```' → logprob: -6.642565727233887
    6. '
' → logprob: -6.892565727233887
    7. '#' → logprob: -7.017565727233887
    8. ' print' → logprob: -7.392565727233887
    9. '\' → logprob: -7.392565727233887
    10. 'newline' → logprob: -8.142565727233887

Token 125: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.04859248176217079
    2. '(' → logprob: -3.0485925674438477
    3. '(
' → logprob: -13.673592567443848
    4. '(answer' → logprob: -13.798592567443848
    5. '(abs' → logprob: -14.548592567443848
    6. 'ans' → logprob: -14.673592567443848
    7. '('' → logprob: -14.923592567443848
    8. ' (' → logprob: -14.923592567443848
    9. '("("' → logprob: -15.048592567443848
    10. '()' → logprob: -15.173592567443848

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.125000953674316
    3. '))' → logprob: -15.250000953674316
    4. ')`' → logprob: -15.875000953674316
    5. '`)' → logprob: -17.125
    6. ')
' → logprob: -17.125
    7. '')' → logprob: -17.25
    8. '(' → logprob: -17.625
    9. '()' → logprob: -18.0
    10. ')}' → logprob: -18.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 124
Tokens correctement prédits (1ère position, stricte): 61
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 49.19%
Précision adaptée (1ère position): 49.19%
Précision (top 10): 82.26%
================================================================================
