================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Node:
    def __init__(self, val):
        self.val = val
        self.left = None
        self.right = None
        self.parent = None
    
    def delete_connect(self, parent, child):
        if parent:
            if parent.val > self.val:
                parent.left = child
            else:
                parent.right = child
        if child:
            child.parent = parent
    
    def delete(self):
        left, right = self.left, self.right
        if not left and not right:
            self.delete_connect(self.parent, None)
        elif not left and right:
            self.delete_connect(self.parent, right)
        elif left and not right:
            self.delete_connect(self.parent, left)
        else:
            next_node = right.get_leftmost()
            self.val = next_node.val
            next_node.delete()
    
    def get_leftmost(self):
        if self.left:
            return self.left.get_leftmost()
        return self

class BinarySearchTree:
    def __init__(self):
        self.root = None
    
    def insert(self, node: Node):
        if not self.root:
            self.root = node
            return

        cur = self.root
        while cur:
            if node.val > cur.val:
                if cur.right:
                    cur = cur.right
                    continue
                else:
                    cur.right,node.parent = node,cur
                    return
            else:
                if cur.left:
                    cur = cur.left
                    continue
                else:
                    cur.left,node.parent = node,cur
                    return

    def find(self, val):
        cur = self.root
        while cur:
            if cur.val == val:
                return "yes"
            elif cur.val > val:
                cur = cur.left
            else:
                cur = cur.right
        return "no"
    
    def find_node(self, val):
        cur = self.root
        while cur:
            if cur.val == val:
                return cur
            elif cur.val > val:
                cur = cur.left
            else:
                cur = cur.right
        return None

    def delete(self, val):
        node = self.find_node(val)
        if node:
            node.delete()

def main():

    ## preorder tree walk
    preorder = []

    def preorder_walk(node):
        preorder.append(str(node.val))
        if node.left:
            preorder_walk(node.left)
        if node.right:
            preorder_walk(node.right)

    ## inorder tree walk

    inorder = []

    def inorder_walk(node):
        if node.left:
            inorder_walk(node.left)
        inorder.append(str(node.val))
        if node.right:
            inorder_walk(node.right)

    n = int(input())
    
    bst = BinarySearchTree()
    
    for _ in range(n):
        op = input().strip().split()
        if op[0] == "insert":
            bst.insert(Node(int(op[1])))
        elif op[0] == "print":
            preorder,inorder = [],[]
            preorder_walk(bst.root)
            inorder_walk(bst.root)
            print(""," ".join(inorder))
            print("", " ".join(preorder))
        elif op[0] == "find":
            print(bst.find(int(op[1])))
        elif op[0] == "delete":
            bst.delete(int(op[1]))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Node' (ID: 10882)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4882061183452606
    2. ':' → logprob: -0.988206148147583
    3. '```' → logprob: -5.488205909729004
    4. '   ' → logprob: -6.363205909729004
    5. '(
' → logprob: -6.363205909729004
    6. '():' → logprob: -6.613205909729004
    7. ' (' → logprob: -6.988205909729004
    8. '()' → logprob: -7.363205909729004
    9. ' ' → logprob: -7.488205909729004
    10. '<|end|>' → logprob: -7.613205909729004

Token 4: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5093230605125427
    2. '   ' → logprob: -1.6343231201171875
    3. ' ' → logprob: -2.5093231201171875
    4. '```' → logprob: -3.7593231201171875
    5. '    ' → logprob: -3.8843231201171875
    6. ''' → logprob: -4.2593231201171875
    7. '(space' → logprob: -4.8843231201171875
    8. '`' → logprob: -4.8843231201171875
    9. 'def' (adapté à ' def') → logprob: -5.0093231201171875
    10. ' (' → logprob: -5.0093231201171875

Token 5: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24839042127132416
    2. ' __' → logprob: -1.7483904361724854
    3. '__' → logprob: -3.7483904361724854
    4. ' ' → logprob: -5.123390197753906
    5. '    ' → logprob: -5.248390197753906
    6. ' init' → logprob: -5.873390197753906
    7. '```' → logprob: -6.998390197753906
    8. ' ```' → logprob: -7.248390197753906
    9. ' def' → logprob: -7.373390197753906
    10. '_' → logprob: -7.373390197753906

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.856408536899835e-05
    2. ' init' → logprob: -11.000028610229492
    3. '_init' → logprob: -11.625028610229492
    4. 'i' → logprob: -13.625028610229492
    5. 'ini' → logprob: -13.625028610229492
    6. '	init' → logprob: -15.750028610229492
    7. '_i' → logprob: -16.000028610229492
    8. '_' → logprob: -16.250028610229492
    9. 'in' → logprob: -16.500028610229492
    10. '   ' → logprob: -18.000028610229492

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10201945155858994
    2. '__' → logprob: -2.3520195484161377
    3. '__(
' → logprob: -6.477019309997559
    4. '(' → logprob: -8.977019309997559
    5. '__((' → logprob: -9.477019309997559
    6. '__('' → logprob: -10.352019309997559
    7. '_' → logprob: -11.477019309997559
    8. '__(*' → logprob: -11.602019309997559
    9. '(self' → logprob: -11.852019309997559
    10. '___' → logprob: -12.477019309997559

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00028266964363865554
    2. ' self' → logprob: -8.250282287597656
    3. ')' → logprob: -11.125282287597656
    4. '(self' → logprob: -12.250282287597656
    5. ' ' → logprob: -14.375282287597656
    6. ' )' → logprob: -14.875282287597656
    7. 'sel' → logprob: -15.875282287597656
    8. '	self' → logprob: -15.875282287597656
    9. ',self' → logprob: -16.000282287597656
    10. '   ' → logprob: -16.125282287597656

Token 9: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8377094268798828
    2. ',' → logprob: -1.2127094268798828
    3. '(' → logprob: -2.212709426879883
    4. 'self' → logprob: -2.837709426879883
    5. '_' → logprob: -3.462709426879883
    6. ' )' → logprob: -3.712709426879883
    7. ' ' → logprob: -4.337709426879883
    8. ' ,' → logprob: -4.712709426879883
    9. '<|end|>' → logprob: -4.837709426879883
    10. '(self' → logprob: -5.337709426879883

Token 10: ' val' (ID: 1459)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009992165490984917
    2. ' self' → logprob: -5.0099921226501465
    3. 'data' → logprob: -5.8849921226501465
    4. 'value' → logprob: -8.134992599487305
    5. ')' → logprob: -9.634992599487305
    6. 'val' → logprob: -9.884992599487305
    7. ' data' → logprob: -10.009992599487305
    8. 'parent' → logprob: -11.134992599487305
    9. ' value' → logprob: -11.884992599487305
    10. '(self' → logprob: -12.384992599487305

Token 11: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6383373141288757
    2. '):' → logprob: -0.7633373141288757
    3. ',' → logprob: -5.263337135314941
    4. '=' → logprob: -8.513337135314941
    5. '):
' → logprob: -9.388337135314941
    6. ':' → logprob: -9.513337135314941
    7. '_' → logprob: -10.263337135314941
    8. ' ,' → logprob: -10.638337135314941
    9. ' ):' → logprob: -10.638337135314941
    10. ' ' → logprob: -11.013337135314941

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03843389451503754
    2. '    ' → logprob: -3.788433790206909
    3. '   ' → logprob: -4.788434028625488
    4. ' ' → logprob: -6.788434028625488
    5. '(' → logprob: -6.913434028625488
    6. '     ' → logprob: -7.163434028625488
    7. '        ' → logprob: -7.163434028625488
    8. '```' → logprob: -7.163434028625488
    9. '        
' → logprob: -7.913434028625488
    10. '\' → logprob: -8.163434028625488

Token 13: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47639933228492737
    2. 'self' (adapté à ' self') → logprob: -0.976399302482605
    3. ' ' → logprob: -6.7263994216918945
    4. '       ' → logprob: -6.9763994216918945
    5. ' ' → logprob: -9.976399421691895
    6. '        ' → logprob: -10.101399421691895
    7. '   ' → logprob: -10.101399421691895
    8. '_' → logprob: -11.101399421691895
    9. '    ' → logprob: -11.601399421691895
    10. 's' → logprob: -11.851399421691895

Token 14: '.val' (ID: 20368)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0009358783136121929
    2. '.val' → logprob: -8.000935554504395
    3. '.value' → logprob: -8.125935554504395
    4. ' .' → logprob: -8.250935554504395
    5. '.next' → logprob: -11.500935554504395
    6. '.data' → logprob: -11.875935554504395
    7. ' ' → logprob: -12.000935554504395
    8. ')' → logprob: -12.500935554504395
    9. '.parent' → logprob: -13.375935554504395
    10. '.name' → logprob: -13.500935554504395

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3494853377342224
    2. ' =' → logprob: -1.2244853973388672
    3. ' ' → logprob: -7.099485397338867
    4. '<|end|>' → logprob: -9.349485397338867
    5. '_' → logprob: -10.099485397338867
    6. ')' → logprob: -10.349485397338867
    7. ' =)' → logprob: -11.724485397338867
    8. ' is' → logprob: -11.724485397338867
    9. ',' → logprob: -11.974485397338867
    10. ' )' → logprob: -12.224485397338867

Token 16: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.02324839122593403
    2. 'val' → logprob: -3.7732484340667725
    3. ' ' → logprob: -13.148248672485352
    4. '	val' → logprob: -14.898248672485352
    5. '(val' → logprob: -15.273248672485352
    6. '[val' → logprob: -15.648248672485352
    7. '_val' → logprob: -16.14824867248535
    8. ',val' → logprob: -16.77324867248535
    9. '.val' → logprob: -17.14824867248535
    10. ' ' → logprob: -17.14824867248535

Token 17: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 18: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09909052401781082
    2. '<|end|>' → logprob: -2.724090576171875
    3. '
' → logprob: -4.349090576171875
    4. '\n' → logprob: -4.474090576171875
    5. '\' → logprob: -6.724090576171875
    6. 'newline' → logprob: -7.474090576171875
    7. ',' → logprob: -7.599090576171875
    8. ')' → logprob: -7.724090576171875
    9. '```' → logprob: -7.849090576171875
    10. '        
' → logprob: -8.474090576171875

Token 20: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.16468171775341034
    2. '.next' → logprob: -2.0396816730499268
    3. '.children' → logprob: -4.289681911468506
    4. ' .' → logprob: -5.539681911468506
    5. '.left' → logprob: -5.914681911468506
    6. '._' → logprob: -7.914681911468506
    7. '.parent' → logprob: -8.164681434631348
    8. '.right' → logprob: -8.664681434631348
    9. '_next' → logprob: -8.789681434631348
    10. '_children' → logprob: -9.289681434631348

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28140607476234436
    2. ' =' → logprob: -1.406406044960022
    3. '<|end|>' → logprob: -8.90640640258789
    4. '=None' → logprob: -9.65640640258789
    5. '_' → logprob: -10.53140640258789
    6. ' ' → logprob: -11.40640640258789
    7. ',' → logprob: -11.90640640258789
    8. ')' → logprob: -12.90640640258789
    9. '<|end|>' → logprob: -12.90640640258789
    10. 'space' → logprob: -13.78140640258789

Token 22: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.01814994215965271
    2. 'None' → logprob: -4.0181498527526855
    3. '_None' → logprob: -17.518150329589844
    4. '(None' → logprob: -17.643150329589844
    5. '=None' → logprob: -18.018150329589844
    6. ',None' → logprob: -18.893150329589844
    7. '_none' → logprob: -19.768150329589844
    8. ' ' → logprob: -19.768150329589844
    9. ' none' → logprob: -20.018150329589844
    10. '.None' → logprob: -20.893150329589844

Token 23: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009397733956575394
    2. 'self' (adapté à ' self') → logprob: -5.384397506713867
    3. '   ' → logprob: -5.759397506713867
    4. '```' → logprob: -8.009397506713867
    5. 'newline' → logprob: -8.384397506713867
    6. '<|end|>' → logprob: -8.384397506713867
    7. '        
' → logprob: -9.009397506713867
    8. '`' → logprob: -9.134397506713867
    9. '\' → logprob: -9.384397506713867
    10. '\n' → logprob: -9.634397506713867

Token 26: '.right' (ID: 17627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31344157457351685
    2. '.right' → logprob: -1.313441514968872
    3. ' .' → logprob: -9.313441276550293
    4. '.left' → logprob: -9.438441276550293
    5. '.next' → logprob: -12.313441276550293
    6. '.Right' → logprob: -13.188441276550293
    7. 'right' → logprob: -13.438441276550293
    8. '_right' → logprob: -14.938441276550293
    9. '.user' → logprob: -15.563441276550293
    10. ' ' → logprob: -15.563441276550293

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.089006207883358
    2. '=' → logprob: -2.464006185531616
    3. '<|end|>' → logprob: -9.964006423950195
    4. ' ' → logprob: -11.214006423950195
    5. ' =
' → logprob: -12.839006423950195
    6. '=None' → logprob: -13.464006423950195
    7. ')' → logprob: -14.339006423950195
    8. '<|end|>' → logprob: -14.464006423950195
    9. ' =)' → logprob: -15.589006423950195
    10. '=
' → logprob: -15.839006423950195

Token 28: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.20141363143920898
    2. 'None' → logprob: -1.701413631439209
    3. '_None' → logprob: -15.951414108276367
    4. '(None' → logprob: -16.326414108276367
    5. ',None' → logprob: -16.701414108276367
    6. '.None' → logprob: -17.951414108276367
    7. '=None' → logprob: -18.326414108276367
    8. ' ' → logprob: -18.951414108276367
    9. 'Node' → logprob: -19.076414108276367
    10. ' ' → logprob: -19.951414108276367

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053443845361471176
    2. '\' → logprob: -4.678443908691406
    3. ' ' → logprob: -4.803443908691406
    4. '   ' → logprob: -4.803443908691406
    5. '\n' → logprob: -5.178443908691406
    6. ' 
' → logprob: -5.303443908691406
    7. 'def' → logprob: -5.928443908691406
    8. 'n' → logprob: -6.428443908691406
    9. '' → logprob: -6.428443908691406
    10. '<|end|>' → logprob: -6.553443908691406

Token 30: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18765823543071747
    2. 'd' → logprob: -3.0626583099365234
    3. ':' → logprob: -3.9376583099365234
    4. ' ' → logprob: -4.062658309936523
    5. '   ' → logprob: -4.312658309936523
    6. '' → logprob: -4.562658309936523
    7. '\' → logprob: -4.687658309936523
    8. ',' → logprob: -4.937658309936523
    9. '#' → logprob: -5.062658309936523
    10. '.' → logprob: -5.187658309936523

Token 31: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6906514763832092
    2. 'd' → logprob: -1.5656514167785645
    3. '   ' → logprob: -1.6906514167785645
    4. ' 
' → logprob: -3.1906514167785645
    5. ' ' → logprob: -3.4406514167785645
    6. 'def' → logprob: -4.3156514167785645
    7. 'n' → logprob: -5.5656514167785645
    8. '    
' → logprob: -5.8156514167785645
    9. '' → logprob: -6.4406514167785645
    10. '\n' → logprob: -6.4406514167785645

Token 32: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.019657539203763008
    2. '.left' → logprob: -4.894657611846924
    3. ' .' → logprob: -5.144657611846924
    4. '.parent' → logprob: -6.019657611846924
    5. '.val' → logprob: -6.894657611846924
    6. '.is' → logprob: -7.144657611846924
    7. '.next' → logprob: -8.144657135009766
    8. '.right' → logprob: -8.269657135009766
    9. '._' → logprob: -8.519657135009766
    10. ' is' → logprob: -9.019657135009766

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01612551510334015
    2. '=' → logprob: -4.141125679016113
    3. ' ' → logprob: -9.391125679016113
    4. '<|end|>' → logprob: -12.391125679016113
    5. ' =
' → logprob: -12.766125679016113
    6. ' =)' → logprob: -15.016125679016113
    7. '=None' → logprob: -16.016124725341797
    8. ')' → logprob: -16.266124725341797
    9. '.' → logprob: -16.891124725341797
    10. ' is' → logprob: -17.141124725341797

Token 34: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5760480761528015
    2. ' None' → logprob: -0.8260480761528015
    3. 'self' → logprob: -9.201047897338867
    4. ' self' → logprob: -11.826047897338867
    5. '(None' → logprob: -15.701047897338867
    6. '_None' → logprob: -16.076047897338867
    7. '=None' → logprob: -16.451047897338867
    8. ',None' → logprob: -17.826047897338867
    9. '.None' → logprob: -18.201047897338867
    10. ' ' → logprob: -18.701047897338867

Token 35: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03214626759290695
    2. '   ' → logprob: -4.532146453857422
    3. '\n' → logprob: -5.782146453857422
    4. '```' → logprob: -5.782146453857422
    5. ' 
' → logprob: -6.032146453857422
    6. '\' → logprob: -6.032146453857422
    7. ' ' → logprob: -6.282146453857422
    8. 'n' → logprob: -6.532146453857422
    9. '    
' → logprob: -6.532146453857422
    10. '' → logprob: -6.907146453857422

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7292197346687317
    2. 'd' → logprob: -1.354219675064087
    3. 'def' → logprob: -1.604219675064087
    4. ' ' → logprob: -3.354219675064087
    5. ' 
' → logprob: -4.729219913482666
    6. '    
' → logprob: -5.479219913482666
    7. ' def' → logprob: -5.729219913482666
    8. '
' → logprob: -5.979219913482666
    9. '    ' → logprob: -7.354219913482666
    10. ' \' → logprob: -8.104219436645508

Token 37: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04318941384553909
    2. 'def' (adapté à ' def') → logprob: -3.168189525604248
    3. '   ' → logprob: -9.29318904876709
    4. ' ' → logprob: -10.16818904876709
    5. '@' → logprob: -10.54318904876709
    6. 'de' → logprob: -11.04318904876709
    7. ' def' → logprob: -11.79318904876709
    8. ' d' → logprob: -13.54318904876709
    9. ' 
' → logprob: -13.66818904876709
    10. 'a' → logprob: -13.91818904876709

Token 38: ' delete' (ID: 6168)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.2847498953342438
    2. '_' → logprob: -2.284749984741211
    3. ' ' → logprob: -2.284749984741211
    4. ' _' → logprob: -4.409749984741211
    5. '_insert' → logprob: -4.534749984741211
    6. ' space' → logprob: -5.534749984741211
    7. ' __' → logprob: -5.659749984741211
    8. ' is' → logprob: -5.909749984741211
    9. 'insert' → logprob: -6.159749984741211
    10. ' add' → logprob: -6.409749984741211

Token 39: '_connect' (ID: 32485)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19660994410514832
    2. '(' → logprob: -1.9466099739074707
    3. '_node' → logprob: -4.071609973907471
    4. '(self' → logprob: -4.321609973907471
    5. '_self' → logprob: -6.571609973907471
    6. '_(' → logprob: -6.946609973907471
    7. 'self' → logprob: -7.321609973907471
    8. '_Node' → logprob: -7.446609973907471
    9. '_parent' → logprob: -8.071609497070312
    10. 'Node' → logprob: -8.321609497070312

Token 40: '(self' (ID: 2402)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.33598199486732483
    2. 'ed' → logprob: -1.3359819650650024
    3. 'ions' → logprob: -3.835982084274292
    4. '_' → logprob: -8.085982322692871
    5. 'e' → logprob: -8.085982322692871
    6. 's' → logprob: -9.210982322692871
    7. 'ivity' → logprob: -9.460982322692871
    8. 'ing' → logprob: -10.210982322692871
    9. 'or' → logprob: -11.085982322692871
    10. 'i' → logprob: -11.835982322692871

Token 41: ',' (ID: 11)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.03900982812047005
    2. 'ion' → logprob: -3.2890098094940186
    3. 'ions' → logprob: -7.539010047912598
    4. ')' → logprob: -8.164010047912598
    5. 'ing' → logprob: -9.789010047912598
    6. 'ivity' → logprob: -10.039010047912598
    7. 'or' → logprob: -11.289010047912598
    8. 'd' → logprob: -11.414010047912598
    9. 'e' → logprob: -11.539010047912598
    10. 'self' → logprob: -12.289010047912598

Token 42: ' parent' (ID: 5980)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49054139852523804
    2. 'node' → logprob: -1.8655414581298828
    3. ')' → logprob: -1.9905414581298828
    4. ' node' → logprob: -2.865541458129883
    5. ' self' → logprob: -4.240541458129883
    6. 'child' → logprob: -4.490541458129883
    7. ' )' → logprob: -4.865541458129883
    8. 'parent' → logprob: -6.115541458129883
    9. 'target' → logprob: -7.365541458129883
    10. ' child' → logprob: -7.740541458129883

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034859396517276764
    2. ')' → logprob: -3.4098594188690186
    3. ' ,' → logprob: -7.0348591804504395
    4. '.' → logprob: -8.909859657287598
    5. '):' → logprob: -9.784859657287598
    6. ' )' → logprob: -11.159859657287598
    7. ',node' → logprob: -11.284859657287598
    8. ').' → logprob: -11.409859657287598
    9. ',)' → logprob: -11.534859657287598
    10. '_child' → logprob: -11.784859657287598

Token 44: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.3492721617221832
    2. 'node' → logprob: -1.8492721319198608
    3. ' node' → logprob: -2.8492722511291504
    4. ' child' → logprob: -3.0992722511291504
    5. 'direction' → logprob: -4.34927225112915
    6. 'side' → logprob: -4.59927225112915
    7. ' direction' → logprob: -5.09927225112915
    8. ' side' → logprob: -5.84927225112915
    9. 'current' → logprob: -7.72427225112915
    10. ')' → logprob: -7.72427225112915

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030057504773139954
    2. ')' → logprob: -5.8780059814453125
    3. ',' → logprob: -8.753005981445312
    4. ':' → logprob: -10.878005981445312
    5. '):
' → logprob: -11.378005981445312
    6. '_' → logprob: -12.628005981445312
    7. ' ):' → logprob: -12.753005981445312
    8. 's' → logprob: -12.878005981445312
    9. ''):' → logprob: -14.753005981445312
    10. '),' → logprob: -14.878005981445312

Token 46: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4366934299468994
    2. '       ' → logprob: -1.5616934299468994
    3. '):' → logprob: -2.1866934299468994
    4. '   ' → logprob: -4.81169319152832
    5. ',' → logprob: -4.93669319152832
    6. ')' → logprob: -4.93669319152832
    7. ' :' → logprob: -5.18669319152832
    8. '    ' → logprob: -6.93669319152832
    9. '():' → logprob: -7.56169319152832
    10. ':
' → logprob: -7.93669319152832

Token 47: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19585038721561432
    2. 'if' (adapté à ' if') → logprob: -2.820850372314453
    3. ' ' → logprob: -3.445850372314453
    4. ' if' → logprob: -3.570850372314453
    5. '        ' → logprob: -4.070850372314453
    6. '    ' → logprob: -4.570850372314453
    7. '   ' → logprob: -5.195850372314453
    8. '        
' → logprob: -5.570850372314453
    9. ')' → logprob: -5.695850372314453
    10. ' 
' → logprob: -5.945850372314453

Token 48: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.023296024650335312
    2. 'parent' → logprob: -3.8982961177825928
    3. ' child' → logprob: -6.023295879364014
    4. ' not' → logprob: -8.523296356201172
    5. '(parent' → logprob: -9.773296356201172
    6. 'child' → logprob: -10.023296356201172
    7. '	parent' → logprob: -12.148296356201172
    8. ' self' → logprob: -12.398296356201172
    9. ' ' → logprob: -12.398296356201172
    10. 'not' → logprob: -13.023296356201172

Token 49: ':
' (ID: 734)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.1681315004825592
    2. '.' → logprob: -2.1681315898895264
    3. ' is' → logprob: -4.043131351470947
    4. ' and' → logprob: -4.418131351470947
    5. '.right' → logprob: -4.918131351470947
    6. ' .' → logprob: -5.793131351470947
    7. '.Left' → logprob: -9.293131828308105
    8. ' left' → logprob: -9.418131828308105
    9. 'and' → logprob: -9.668131828308105
    10. 'left' → logprob: -10.543131828308105

Token 50: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.165132075548172
    2. ' and' → logprob: -2.7901320457458496
    3. '           ' → logprob: -3.4151320457458496
    4. '.' → logprob: -4.16513204574585
    5. '       ' → logprob: -4.29013204574585
    6. ' if' → logprob: -4.91513204574585
    7. '.left' → logprob: -5.54013204574585
    8. '<|end|>' → logprob: -5.66513204574585
    9. ' :' → logprob: -5.91513204574585
    10. '        ' → logprob: -5.91513204574585

Token 51: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14385636150836945
    2. 'if' (adapté à ' if') → logprob: -2.0188562870025635
    3. 'parent' → logprob: -7.643856525421143
    4. '           ' → logprob: -8.143856048583984
    5. ' parent' → logprob: -8.768856048583984
    6. '            ' → logprob: -9.143856048583984
    7. '        ' → logprob: -9.768856048583984
    8. '               ' → logprob: -11.143856048583984
    9. '       ' → logprob: -11.268856048583984
    10. ' =' → logprob: -11.518856048583984

Token 52: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.14365915954113007
    2. 'parent' → logprob: -2.0186591148376465
    3. ' child' → logprob: -7.0186591148376465
    4. 'child' → logprob: -9.643659591674805
    5. ' parent's' → logprob: -11.643659591674805
    6. '	parent' → logprob: -12.768659591674805
    7. '(parent' → logprob: -13.018659591674805
    8. ' self' → logprob: -13.143659591674805
    9. '           ' → logprob: -13.268659591674805
    10. 'self' → logprob: -13.518659591674805

Token 53: '.val' (ID: 20368)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0055634984746575356
    2. '.' → logprob: -5.380563735961914
    3. '.right' → logprob: -7.005563735961914
    4. ' .' → logprob: -10.505563735961914
    5. '.val' → logprob: -12.005563735961914
    6. '.le' → logprob: -13.505563735961914
    7. 'left' → logprob: -14.880563735961914
    8. '.Left' → logprob: -15.505563735961914
    9. '.l' → logprob: -15.755563735961914
    10. '.parent' → logprob: -16.255563735961914

Token 54: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.022598853334784508
    2. ' <' → logprob: -4.147598743438721
    3. ' ==' → logprob: -5.147598743438721
    4. '>' → logprob: -7.397598743438721
    5. ' ' → logprob: -9.522599220275879
    6. '==' → logprob: -10.772599220275879
    7. ' >
' → logprob: -12.022599220275879
    8. '<' → logprob: -12.147599220275879
    9. ' >=' → logprob: -13.022599220275879
    10. '   ' → logprob: -13.147599220275879

Token 55: ' self' (ID: 1051)
  Prédit: ' child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.32897013425827026
    2. 'child' → logprob: -1.328970193862915
    3. ' self' → logprob: -4.578969955444336
    4. 'self' → logprob: -5.328969955444336
    5. ' val' → logprob: -8.328969955444336
    6. 'val' → logprob: -8.703969955444336
    7. ' ' → logprob: -10.828969955444336
    8. '	child' → logprob: -10.828969955444336
    9. '   ' → logprob: -12.203969955444336
    10. ' node' → logprob: -12.453969955444336

Token 56: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.0991567075252533
    2. '.' → logprob: -2.474156618118286
    3. ' .' → logprob: -4.599156856536865
    4. 'val' → logprob: -9.349156379699707
    5. ' val' → logprob: -12.349156379699707
    6. '.child' → logprob: -12.599156379699707
    7. ' ' → logprob: -12.599156379699707
    8. '.v' → logprob: -13.599156379699707
    9. '   ' → logprob: -13.974156379699707
    10. '	val' → logprob: -14.349156379699707

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003824656829237938
    2. ' and' → logprob: -6.253824710845947
    3. ':
' → logprob: -6.878824710845947
    4. '               ' → logprob: -7.878824710845947
    5. ' :' → logprob: -8.503824234008789
    6. '):' → logprob: -9.003824234008789
    7. '           ' → logprob: -9.253824234008789
    8. ')' → logprob: -11.253824234008789
    9. ',' → logprob: -11.378824234008789
    10. 'and' → logprob: -11.378824234008789

Token 58: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38538652658462524
    2. '               ' → logprob: -1.5103864669799805
    3. ' :' → logprob: -3.5103864669799805
    4. '           ' → logprob: -3.8853864669799805
    5. '):' → logprob: -4.2603864669799805
    6. '.' → logprob: -4.6353864669799805
    7. ')' → logprob: -5.3853864669799805
    8. '():' → logprob: -5.5103864669799805
    9. ''s' → logprob: -5.7603864669799805
    10. ':
' → logprob: -6.1353864669799805

Token 59: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -1.299074649810791
    2. '               ' → logprob: -1.424074649810791
    3. ' parent' → logprob: -1.924074649810791
    4. '           ' → logprob: -2.299074649810791
    5. ' left' → logprob: -2.924074649810791
    6. '                
' → logprob: -3.424074649810791
    7. 'left' → logprob: -3.549074649810791
    8. ' 
' → logprob: -4.299074649810791
    9. '.parent' → logprob: -4.549074649810791
    10. ' ' → logprob: -4.799074649810791

Token 60: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0007049257401376963
    2. '.' → logprob: -8.000704765319824
    3. '.right' → logprob: -8.250704765319824
    4. ' .' → logprob: -9.250704765319824
    5. '.le' → logprob: -13.000704765319824
    6. '.child' → logprob: -13.125704765319824
    7. 'left' → logprob: -13.375704765319824
    8. '.Left' → logprob: -13.500704765319824
    9. '   ' → logprob: -13.625704765319824
    10. '`.' → logprob: -14.500704765319824

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006760840769857168
    2. '=' → logprob: -5.006761074066162
    3. ' ==' → logprob: -10.756760597229004
    4. ' ' → logprob: -11.256760597229004
    5. ' is' → logprob: -12.631760597229004
    6. '=None' → logprob: -12.756760597229004
    7. '<|end|>' → logprob: -12.756760597229004
    8. '<|end|>' → logprob: -14.506760597229004
    9. ')' → logprob: -14.756760597229004
    10. ' =
' → logprob: -14.881760597229004

Token 62: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.02554178051650524
    2. ' child' → logprob: -3.7755417823791504
    3. 'None' → logprob: -6.27554178237915
    4. ' None' → logprob: -8.150541305541992
    5. 'self' → logprob: -9.525541305541992
    6. '	child' → logprob: -10.150541305541992
    7. 'none' → logprob: -12.775541305541992
    8. ' self' → logprob: -13.025541305541992
    9. '(child' → logprob: -13.400541305541992
    10. 'Child' → logprob: -13.775541305541992

Token 63: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15538938343524933
    2. '<|end|>' → logprob: -2.9053893089294434
    3. '
' → logprob: -3.1553893089294434
    4. 'else' → logprob: -3.4053893089294434
    5. ' else' → logprob: -5.155389308929443
    6. '       ' → logprob: -5.530389308929443
    7. 'elif' → logprob: -6.905389308929443
    8. '<|end|>' → logprob: -7.155389308929443
    9. '               ' → logprob: -7.780389308929443
    10. '```' → logprob: -8.030389785766602

Token 64: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17298944294452667
    2. '<|end|>' → logprob: -2.7979893684387207
    3. '
' → logprob: -2.9229893684387207
    4. 'else' → logprob: -3.4229893684387207
    5. ' else' → logprob: -5.172989368438721
    6. '       ' → logprob: -6.297989368438721
    7. 'elif' → logprob: -7.047989368438721
    8. '```' → logprob: -7.047989368438721
    9. '<|end|>' → logprob: -7.047989368438721
    10. '            
' → logprob: -7.922989368438721

Token 65: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.128937229514122
    2. ' else' → logprob: -2.878937244415283
    3. '       ' → logprob: -3.003937244415283
    4. '           ' → logprob: -4.378937244415283
    5. 'elif' → logprob: -6.253937244415283
    6. '<|end|>' → logprob: -8.628936767578125
    7. '	else' → logprob: -9.128936767578125
    8. '   ' → logprob: -9.253936767578125
    9. '```' → logprob: -9.628936767578125
    10. ' elif' → logprob: -10.003936767578125

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19654197990894318
    2. '               ' → logprob: -1.9465420246124268
    3. ':
' → logprob: -3.4465420246124268
    4. '           ' → logprob: -5.696541786193848
    5. 'parent' → logprob: -9.571541786193848
    6. '(parent' → logprob: -9.696541786193848
    7. '              ' → logprob: -10.071541786193848
    8. '            ' → logprob: -10.196541786193848
    9. '             ' → logprob: -10.571541786193848
    10. ' parent' → logprob: -10.571541786193848

Token 67: '               ' (ID: 506)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.513139545917511
    2. 'parent' → logprob: -1.5131394863128662
    3. '               ' → logprob: -1.7631394863128662
    4. '           ' → logprob: -4.763139724731445
    5. '	parent' → logprob: -8.138139724731445
    6. '(parent' → logprob: -8.513139724731445
    7. '[parent' → logprob: -8.638139724731445
    8. ' ' → logprob: -9.138139724731445
    9. '   ' → logprob: -9.138139724731445
    10. ',parent' → logprob: -9.513139724731445

Token 68: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.4289207458496094
    2. ' parent' → logprob: -1.0539207458496094
    3. '	parent' → logprob: -9.55392074584961
    4. '.parent' → logprob: -10.17892074584961
    5. '               ' → logprob: -10.67892074584961
    6. '           ' → logprob: -10.67892074584961
    7. ',parent' → logprob: -10.67892074584961
    8. '[parent' → logprob: -11.17892074584961
    9. '(parent' → logprob: -11.30392074584961
    10. '   ' → logprob: -12.17892074584961

Token 69: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.5716304410016164e-05
    2. '.' → logprob: -10.375035285949707
    3. '.left' → logprob: -12.375035285949707
    4. ' .' → logprob: -15.500035285949707
    5. '.Right' → logprob: -18.250036239624023
    6. '[right' → logprob: -18.875036239624023
    7. '.next' → logprob: -19.000036239624023
    8. '`.' → logprob: -19.375036239624023
    9. '.RIGHT' → logprob: -19.375036239624023
    10. '.parent' → logprob: -19.500036239624023

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' ' → logprob: -15.923587799072266
    4. ')' → logprob: -18.048587799072266
    5. '<|end|>' → logprob: -18.923587799072266
    6. ' =
' → logprob: -20.048587799072266
    7. '=None' → logprob: -20.173587799072266
    8. '＝' → logprob: -20.298587799072266
    9. ' =)' → logprob: -20.298587799072266
    10. '=node' → logprob: -21.048587799072266

Token 71: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.10020710527896881
    2. 'child' → logprob: -2.3502070903778076
    3. '	child' → logprob: -15.225207328796387
    4. '(child' → logprob: -16.85020637512207
    5. ' ' → logprob: -17.22520637512207
    6. 'Child' → logprob: -17.85020637512207
    7. '.child' → logprob: -18.10020637512207
    8. '_child' → logprob: -18.22520637512207
    9. ' child's' → logprob: -18.35020637512207
    10. 'ch' → logprob: -19.35020637512207

Token 72: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.004732960369437933
    2. 'child' → logprob: -5.379733085632324
    3. ' self' → logprob: -9.504733085632324
    4. 'self' → logprob: -11.254733085632324
    5. '	child' → logprob: -11.379733085632324
    6. ' child's' → logprob: -12.254733085632324
    7. ' parent' → logprob: -12.754733085632324
    8. '(child' → logprob: -13.129733085632324
    9. ' not' → logprob: -13.879733085632324
    10. 'Child' → logprob: -14.504733085632324

Token 76: ':
' (ID: 734)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.022547807544469833
    2. ':' → logprob: -4.272547721862793
    3. '.' → logprob: -4.897547721862793
    4. ' is' → logprob: -8.147547721862793
    5. ':
' → logprob: -8.147547721862793
    6. ' .' → logprob: -8.772547721862793
    7. ''s' → logprob: -10.647547721862793
    8. '   ' → logprob: -11.147547721862793
    9. '.parents' → logprob: -11.272547721862793
    10. '           ' → logprob: -11.522547721862793

Token 77: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6813299059867859
    2. '.parent' → logprob: -0.9313299059867859
    3. '.child' → logprob: -2.4313299655914307
    4. '.' → logprob: -4.931329727172852
    5. ' .' → logprob: -5.931329727172852
    6. 'parent' → logprob: -7.181329727172852
    7. ' child' → logprob: -7.681329727172852
    8. '```' → logprob: -8.306329727172852
    9. 'child' → logprob: -8.806329727172852
    10. ' parent' → logprob: -8.931329727172852

Token 78: ' child' (ID: 2320)
  Prédit: ' child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.08193710446357727
    2. 'child' (adapté à ' child') → logprob: -2.581937074661255
    3. '.child' → logprob: -6.206937313079834
    4. '           ' → logprob: -7.456937313079834
    5. '	child' → logprob: -7.956937313079834
    6. '               ' → logprob: -9.956936836242676
    7. ' child's' → logprob: -10.456936836242676
    8. '```' → logprob: -11.831936836242676
    9. '(child' → logprob: -12.706936836242676
    10. '_child' → logprob: -12.706936836242676

Token 79: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -4.394135612528771e-05
    2. '.' → logprob: -10.250043869018555
    3. ' .' → logprob: -11.750043869018555
    4. 'parent' → logprob: -15.500043869018555
    5. '.parents' → logprob: -16.000043869018555
    6. '.Parent' → logprob: -16.375043869018555
    7. '.prev' → logprob: -16.625043869018555
    8. '       ' → logprob: -17.625043869018555
    9. '`.' → logprob: -17.750043869018555
    10. '.user' → logprob: -17.750043869018555

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00019066639652010053
    2. '=' → logprob: -9.000190734863281
    3. ' ' → logprob: -9.625190734863281
    4. ' =
' → logprob: -14.250190734863281
    5. ' ==' → logprob: -16.00019073486328
    6. '<|end|>' → logprob: -16.12519073486328
    7. ')' → logprob: -16.50019073486328
    8. ' ='' → logprob: -16.62519073486328
    9. 'space' → logprob: -17.62519073486328
    10. ' ="' → logprob: -17.87519073486328

Token 81: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5759433507919312
    2. ' parent' → logprob: -0.8259433507919312
    3. ' None' → logprob: -12.825942993164062
    4. 'None' → logprob: -14.950942993164062
    5. '	parent' → logprob: -15.075942993164062
    6. '(parent' → logprob: -15.325942993164062
    7. '.parent' → logprob: -15.825942993164062
    8. 'paren' → logprob: -16.200942993164062
    9. '[parent' → logprob: -16.325942993164062
    10. '_parent' → logprob: -16.700942993164062

Token 82: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5234631896018982
    2. '<|end|>' → logprob: -1.148463249206543
    3. '   ' → logprob: -3.148463249206543
    4. '    
' → logprob: -4.023463249206543
    5. ' 
' → logprob: -4.398463249206543
    6. ' ' → logprob: -5.773463249206543
    7. '    ' → logprob: -6.023463249206543
    8. '<|end|>' → logprob: -6.148463249206543
    9. '' → logprob: -6.523463249206543
    10. 'n' → logprob: -6.648463249206543

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15275505185127258
    2. 'def' → logprob: -2.27775502204895
    3. ' def' → logprob: -3.65275502204895
    4. '    
' → logprob: -5.152755260467529
    5. ' ' → logprob: -5.902755260467529
    6. ' 
' → logprob: -6.027755260467529
    7. '    ' → logprob: -7.402755260467529
    8. 'd' → logprob: -8.277754783630371
    9. '   
' → logprob: -8.527754783630371
    10. '        
' → logprob: -8.652754783630371

Token 84: ' def' (ID: 1056)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3848610520362854
    2. 'def' (adapté à ' def') → logprob: -1.5098609924316406
    3. '   ' → logprob: -2.5098609924316406
    4. ' def' → logprob: -4.759860992431641
    5. ' 
' → logprob: -6.134860992431641
    6. ' ' → logprob: -6.509860992431641
    7. '    
' → logprob: -6.509860992431641
    8. '    ' → logprob: -6.509860992431641
    9. ' d' → logprob: -8.00986099243164
    10. '_' → logprob: -8.13486099243164

Token 85: ' delete' (ID: 6168)
  Prédit: ' delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delete' → logprob: -0.6687110066413879
    2. ' ' → logprob: -1.0437109470367432
    3. ' find' → logprob: -2.793710947036743
    4. ' insert' → logprob: -2.918710947036743
    5. ' _' → logprob: -5.168711185455322
    6. ' remove' → logprob: -6.043711185455322
    7. 'delete' → logprob: -6.043711185455322
    8. ' search' → logprob: -6.293711185455322
    9. ' transplant' → logprob: -6.293711185455322
    10. ' min' → logprob: -7.043711185455322

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12112794816493988
    2. '_node' → logprob: -2.8711278438568115
    3. '(' → logprob: -3.7461278438568115
    4. '_' → logprob: -4.621128082275391
    5. '_(' → logprob: -4.746128082275391
    6. '_self' → logprob: -4.996128082275391
    7. '_root' → logprob: -6.121128082275391
    8. 'Node' → logprob: -6.871128082275391
    9. '_parent' → logprob: -7.246128082275391
    10. '_connect' → logprob: -7.621128082275391

Token 87: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003519414458423853
    2. '):' → logprob: -6.128519535064697
    3. ' ,' → logprob: -7.128519535064697
    4. 'self' → logprob: -8.128519058227539
    5. '(self' → logprob: -9.878519058227539
    6. ',node' → logprob: -10.003519058227539
    7. ',self' → logprob: -10.503519058227539
    8. '   ' → logprob: -10.503519058227539
    9. '       ' → logprob: -10.753519058227539
    10. '_,' → logprob: -11.253519058227539

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006119571626186371
    2. '    ' → logprob: -5.756119728088379
    3. '   ' → logprob: -6.756119728088379
    4. ' ' → logprob: -7.506119728088379
    5. ' if' → logprob: -8.006119728088379
    6. '        ' → logprob: -8.631119728088379
    7. '        
' → logprob: -8.756119728088379
    8. '```' → logprob: -8.881119728088379
    9. '  ' → logprob: -9.381119728088379
    10. '      ' → logprob: -9.381119728088379

Token 89: ' left' (ID: 3561)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4241952896118164
    2. ' if' → logprob: -1.5491952896118164
    3. '       ' → logprob: -2.0491952896118164
    4. 'i' → logprob: -6.924195289611816
    5. '        ' → logprob: -7.049195289611816
    6. '    ' → logprob: -7.549195289611816
    7. '   ' → logprob: -7.674195289611816
    8. ' ' → logprob: -7.799195289611816
    9. '```' → logprob: -8.049195289611816
    10. ' i' → logprob: -8.674195289611816

Token 90: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14964112639427185
    2. ' is' → logprob: -2.8996410369873047
    3. ' ' → logprob: -3.8996410369873047
    4. '<|end|>' → logprob: -4.149641036987305
    5. 'and' → logprob: -4.524641036987305
    6. ' =' → logprob: -4.524641036987305
    7. ' ==' → logprob: -5.024641036987305
    8. ',' → logprob: -5.274641036987305
    9. ')' → logprob: -6.024641036987305
    10. '.' → logprob: -6.024641036987305

Token 91: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.08295318484306335
    2. 'right' → logprob: -2.7079532146453857
    3. ' self' → logprob: -4.582952976226807
    4. 'self' → logprob: -6.207952976226807
    5. ' =' → logprob: -8.082953453063965
    6. '=' → logprob: -8.457953453063965
    7. '	right' → logprob: -10.207953453063965
    8. ',right' → logprob: -10.457953453063965
    9. '=self' → logprob: -10.582953453063965
    10. '_right' → logprob: -10.832953453063965

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008125035092234612
    2. '=' → logprob: -4.883124828338623
    3. ',' → logprob: -7.633124828338623
    4. ' ' → logprob: -11.133125305175781
    5. '<|end|>' → logprob: -11.383125305175781
    6. ' ,' → logprob: -12.508125305175781
    7. '    ' → logprob: -13.508125305175781
    8. '  ' → logprob: -13.883125305175781
    9. '<|end|>' → logprob: -14.508125305175781
    10. '.' → logprob: -15.008125305175781

Token 93: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38688093423843384
    2. 'self' → logprob: -1.136880874633789
    3. '	self' → logprob: -12.511880874633789
    4. '(self' → logprob: -12.636880874633789
    5. ' ' → logprob: -14.136880874633789
    6. '_self' → logprob: -14.636880874633789
    7. ' ' → logprob: -14.761880874633789
    8. '<|end|>' → logprob: -15.136880874633789
    9. '   ' → logprob: -15.636880874633789
    10. '
' → logprob: -16.01188087463379

Token 94: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.02354523539543152
    2. '.val' → logprob: -3.898545265197754
    3. '.' → logprob: -6.023545265197754
    4. '.right' → logprob: -7.523545265197754
    5. '.Left' → logprob: -12.023545265197754
    6. '.child' → logprob: -12.148545265197754
    7. '.root' → logprob: -12.273545265197754
    8. ' .' → logprob: -12.648545265197754
    9. '.children' → logprob: -12.648545265197754
    10. '.le' → logprob: -13.148545265197754

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011475826613605022
    2. ' ,' → logprob: -4.511476039886475
    3. ',right' → logprob: -9.136475563049316
    4. ' ' → logprob: -9.261475563049316
    5. ',None' → logprob: -9.511475563049316
    6. '<|end|>' → logprob: -10.261475563049316
    7. '       ' → logprob: -10.636475563049316
    8. ',self' → logprob: -10.636475563049316
    9. ' and' → logprob: -11.511475563049316
    10. '        ' → logprob: -11.636475563049316

Token 96: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.026341980323195457
    2. 'self' → logprob: -3.6513419151306152
    3. ' ' → logprob: -11.026342391967773
    4. ' ' → logprob: -11.151342391967773
    5. '	self' → logprob: -12.526342391967773
    6. '<|end|>' → logprob: -12.901342391967773
    7. ' 
' → logprob: -13.651342391967773
    8. '        ' → logprob: -14.026342391967773
    9. '       ' → logprob: -14.276342391967773
    10. '_self' → logprob: -14.401342391967773

Token 97: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0001246348983841017
    2. '.' → logprob: -9.00012493133545
    3. '.left' → logprob: -14.12512493133545
    4. 'right' → logprob: -15.12512493133545
    5. ' .' → logprob: -15.87512493133545
    6. '.Right' → logprob: -17.250123977661133
    7. '	right' → logprob: -18.250123977661133
    8. '.r' → logprob: -18.250123977661133
    9. '[right' → logprob: -19.375123977661133
    10. '.parent' → logprob: -19.750123977661133

Token 98: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17631696164608002
    2. '<|end|>' → logprob: -2.051316976547241
    3. '
' → logprob: -3.551316976547241
    4. ' if' → logprob: -6.801316738128662
    5. '        
' → logprob: -6.926316738128662
    6. '```' → logprob: -7.176316738128662
    7. '<|end|>' → logprob: -7.176316738128662
    8. 'if' → logprob: -8.55131721496582
    9. ',' → logprob: -8.80131721496582
    10. '  
' → logprob: -9.42631721496582

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02285032533109188
    2. '<|end|>' → logprob: -4.147850513458252
    3. '
' → logprob: -5.522850513458252
    4. ' if' → logprob: -6.647850513458252
    5. '```' → logprob: -7.397850513458252
    6. '        
' → logprob: -8.022850036621094
    7. 'if' → logprob: -8.647850036621094
    8. '<|end|>' → logprob: -9.022850036621094
    9. ',' → logprob: -9.647850036621094
    10. '   ' → logprob: -9.772850036621094

Token 100: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7783452272415161
    2. ' if' → logprob: -0.9033452272415161
    3. '       ' → logprob: -2.0283451080322266
    4. 'parent' → logprob: -5.653345108032227
    5. ' parent' → logprob: -7.653345108032227
    6. '```' → logprob: -9.903345108032227
    7. '   ' → logprob: -11.778345108032227
    8. ' ' → logprob: -12.278345108032227
    9. '        ' → logprob: -12.653345108032227
    10. 'child' → logprob: -12.653345108032227

Token 101: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08338703215122223
    2. ' left' → logprob: -2.7083871364593506
    3. ' self' → logprob: -4.5833868980407715
    4. 'not' → logprob: -6.3333868980407715
    5. 'left' → logprob: -6.8333868980407715
    6. 'self' → logprob: -8.20838737487793
    7. ' right' → logprob: -11.70838737487793
    8. ' ' → logprob: -13.58338737487793
    9. '   ' → logprob: -13.70838737487793
    10. ' ' → logprob: -13.95838737487793

Token 102: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.31888124346733093
    2. ' self' → logprob: -1.3188812732696533
    3. 'self' → logprob: -5.818881034851074
    4. 'left' → logprob: -5.943881034851074
    5. ' right' → logprob: -11.568881034851074
    6. ' lef' → logprob: -15.193881034851074
    7. '(left' → logprob: -15.193881034851074
    8. '	left' → logprob: -15.193881034851074
    9. '.left' → logprob: -15.443881034851074
    10. ' ' → logprob: -15.443881034851074

Token 103: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14391818642616272
    2. ':' → logprob: -2.01891827583313
    3. 'and' → logprob: -6.768918037414551
    4. ' :' → logprob: -10.26891803741455
    5. ':
' → logprob: -10.39391803741455
    6. '       ' → logprob: -11.64391803741455
    7. ' or' → logprob: -12.01891803741455
    8. '   ' → logprob: -12.14391803741455
    9. ' ' → logprob: -12.64391803741455
    10. '           ' → logprob: -13.64391803741455

Token 104: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16022534668445587
    2. 'not' → logprob: -1.9102253913879395
    3. 'right' → logprob: -14.535224914550781
    4. ' right' → logprob: -14.910224914550781
    5. '	not' → logprob: -16.03522491455078
    6. '(not' → logprob: -16.16022491455078
    7. '       ' → logprob: -16.41022491455078
    8. '   ' → logprob: -17.03522491455078
    9. '           ' → logprob: -18.16022491455078
    10. ' ' → logprob: -18.91022491455078

Token 105: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3868715465068817
    2. 'right' → logprob: -1.136871576309204
    3. '	right' → logprob: -15.011871337890625
    4. '   ' → logprob: -16.136871337890625
    5. ' ' → logprob: -16.511871337890625
    6. '(right' → logprob: -17.136871337890625
    7. '
' → logprob: -17.386871337890625
    8. '       ' → logprob: -18.261871337890625
    9. '.right' → logprob: -18.261871337890625
    10. '[right' → logprob: -18.761871337890625

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00870533287525177
    2. ':
' → logprob: -4.758705139160156
    3. '       ' → logprob: -10.008705139160156
    4. ':return' → logprob: -10.508705139160156
    5. ' :' → logprob: -11.883705139160156
    6. '):' → logprob: -12.758705139160156
    7. ':
' → logprob: -13.258705139160156
    8. ',' → logprob: -13.633705139160156
    9. '           ' → logprob: -13.758705139160156
    10. '.' → logprob: -14.133705139160156

Token 107: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015875989571213722
    2. '           ' → logprob: -4.640875816345215
    3. 'self' → logprob: -5.265875816345215
    4. '
' → logprob: -7.765875816345215
    5. ' self' → logprob: -9.015875816345215
    6. '```' → logprob: -9.015875816345215
    7. '        
' → logprob: -9.140875816345215
    8. ',' → logprob: -9.515875816345215
    9. '   ' → logprob: -10.765875816345215
    10. ':
' → logprob: -12.140875816345215

Token 108: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.11510957032442093
    2. ' self' → logprob: -2.24010968208313
    3. '           ' → logprob: -6.740109443664551
    4. '       ' → logprob: -6.865109443664551
    5. ' ' → logprob: -10.49010944366455
    6. '	self' → logprob: -11.86510944366455
    7. '               ' → logprob: -11.99010944366455
    8. '
' → logprob: -12.49010944366455
    9. '   ' → logprob: -12.74010944366455
    10. '```' → logprob: -12.86510944366455

Token 109: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -0.00669440720230341
    2. ' .' → logprob: -5.631694316864014
    3. '.' → logprob: -6.256694316864014
    4. 'delete' → logprob: -7.006694316864014
    5. '       ' → logprob: -8.881694793701172
    6. ' delete' → logprob: -10.381694793701172
    7. '_.' → logprob: -11.006694793701172
    8. '`.' → logprob: -11.006694793701172
    9. '​.' → logprob: -11.756694793701172
    10. '._' → logprob: -11.756694793701172

Token 110: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -1.1637164789135568e-05
    2. '_disconnect' → logprob: -11.875011444091797
    3. '_' → logprob: -14.000011444091797
    4. ' _' → logprob: -14.500011444091797
    5. '```' → logprob: -14.500011444091797
    6. '_con' → logprob: -14.500011444091797
    7. '_connector' → logprob: -14.625011444091797
    8. '_connected' → logprob: -15.000011444091797
    9. '__' → logprob: -15.125011444091797
    10. '_connection' → logprob: -15.750011444091797

Token 111: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015264409012161195
    2. '(' → logprob: -8.875152587890625
    3. '(parent' → logprob: -11.500152587890625
    4. '(None' → logprob: -13.875152587890625
    5. '(s' → logprob: -14.125152587890625
    6. ' (' → logprob: -14.500152587890625
    7. '(
' → logprob: -15.375152587890625
    8. '(this' → logprob: -16.500152587890625
    9. '((' → logprob: -17.000152587890625
    10. 'self' → logprob: -17.625152587890625

Token 112: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -7.100059156073257e-05
    2. '.' → logprob: -9.875070571899414
    3. 'parent' → logprob: -11.250070571899414
    4. ' .' → logprob: -12.375070571899414
    5. ',' → logprob: -13.875070571899414
    6. ',parent' → logprob: -14.625070571899414
    7. ' parent' → logprob: -15.250070571899414
    8. ').' → logprob: -15.375070571899414
    9. ')' → logprob: -16.125070571899414
    10. '.Parent' → logprob: -17.125070571899414

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.800739018013701e-05
    2. ',None' → logprob: -10.2500581741333
    3. 'None' → logprob: -11.3750581741333
    4. ')' → logprob: -12.1250581741333
    5. ' ,' → logprob: -12.5000581741333
    6. ',

' → logprob: -14.1250581741333
    7. ' None' → logprob: -14.5000581741333
    8. '(None' → logprob: -15.3750581741333
    9. ',
' → logprob: -15.3750581741333
    10. ',null' → logprob: -15.8750581741333

Token 114: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001584850688232109
    2. ' None' → logprob: -8.750158309936523
    3. '=None' → logprob: -17.375158309936523
    4. '_None' → logprob: -17.625158309936523
    5. ',None' → logprob: -18.875158309936523
    6. '(None' → logprob: -19.500158309936523
    7. '           ' → logprob: -20.000158309936523
    8. '.None' → logprob: -20.250158309936523
    9. 'none' → logprob: -20.375158309936523
    10. '_none' → logprob: -20.625158309936523

Token 115: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030557846184819937
    2. ')
' → logprob: -6.378055572509766
    3. '       ' → logprob: -6.628055572509766
    4. ')return' → logprob: -10.628055572509766
    5. ')
' → logprob: -13.878055572509766
    6. ' )' → logprob: -14.128055572509766
    7. '   ' → logprob: -14.128055572509766
    8. '<|end|>' → logprob: -14.503055572509766
    9. '           ' → logprob: -14.878055572509766
    10. '),' → logprob: -15.128055572509766

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004109507892280817
    2. '   ' → logprob: -6.1291093826293945
    3. 'elif' → logprob: -6.5041093826293945
    4. '<|end|>' → logprob: -8.504109382629395
    5. ' elif' → logprob: -10.004109382629395
    6. '```' → logprob: -10.254109382629395
    7. '           ' → logprob: -10.629109382629395
    8. ')' → logprob: -11.004109382629395
    9. '...' → logprob: -11.129109382629395
    10. '    ' → logprob: -11.379109382629395

Token 117: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.261488676071167
    2. '       ' → logprob: -1.511488676071167
    3. ' elif' → logprob: -5.511488914489746
    4. '   ' → logprob: -5.636488914489746
    5. '	elif' → logprob: -6.761488914489746
    6. '<|end|>' → logprob: -7.386488914489746
    7. '```' → logprob: -10.386488914489746
    8. 'else' → logprob: -10.636488914489746
    9. ')' → logprob: -11.511488914489746
    10. '<|end|>' → logprob: -11.761488914489746

Token 118: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08103244006633759
    2. ' left' → logprob: -2.5810325145721436
    3. 'not' → logprob: -6.3310322761535645
    4. 'left' → logprob: -8.081032752990723
    5. ' right' → logprob: -11.331032752990723
    6. ' ' → logprob: -11.456032752990723
    7. '   ' → logprob: -12.081032752990723
    8. '	not' → logprob: -12.206032752990723
    9. '	left' → logprob: -12.206032752990723
    10. ' ' → logprob: -12.456032752990723

Token 119: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.3880959749221802
    2. ' left' → logprob: -1.1380959749221802
    3. 'right' → logprob: -7.138095855712891
    4. ' right' → logprob: -7.763095855712891
    5. '	left' → logprob: -13.13809585571289
    6. ' lef' → logprob: -14.38809585571289
    7. '   ' → logprob: -14.51309585571289
    8. ' ' → logprob: -14.63809585571289
    9. '.left' → logprob: -14.76309585571289
    10. '[left' → logprob: -14.88809585571289

Token 120: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12237463146448135
    2. ' or' → logprob: -2.7473745346069336
    3. ' and' → logprob: -2.9973745346069336
    4. ' :' → logprob: -7.372374534606934
    5. 'and' → logprob: -8.372374534606934
    6. ':
' → logprob: -8.497374534606934
    7. '       ' → logprob: -9.872374534606934
    8. ',' → logprob: -11.247374534606934
    9. 'or' → logprob: -11.372374534606934
    10. '   ' → logprob: -12.372374534606934

Token 121: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.011079652234911919
    2. 'right' → logprob: -4.511079788208008
    3. ' not' → logprob: -10.636079788208008
    4. ' ' → logprob: -12.261079788208008
    5. '	right' → logprob: -13.761079788208008
    6. ' ' → logprob: -14.011079788208008
    7. 'not' → logprob: -14.136079788208008
    8. '   ' → logprob: -15.761079788208008
    9. '(right' → logprob: -17.136079788208008
    10. 'r' → logprob: -17.761079788208008

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06206616759300232
    2. ':
' → logprob: -2.812066078186035
    3. '.' → logprob: -10.062066078186035
    4. '       ' → logprob: -11.187066078186035
    5. '           ' → logprob: -11.187066078186035
    6. ':
' → logprob: -11.562066078186035
    7. '.delete' → logprob: -11.562066078186035
    8. ':

' → logprob: -13.062066078186035
    9. ' :' → logprob: -13.562066078186035
    10. '   ' → logprob: -13.812066078186035

Token 123: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03428257256746292
    2. ':
' → logprob: -3.784282684326172
    3. '           ' → logprob: -4.534282684326172
    4. '       ' → logprob: -9.534282684326172
    5. ' :' → logprob: -10.284282684326172
    6. ',' → logprob: -10.659282684326172
    7. ':self' → logprob: -10.909282684326172
    8. '):' → logprob: -11.034282684326172
    9. '):
' → logprob: -11.034282684326172
    10. ' :
' → logprob: -11.284282684326172

Token 124: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3540644943714142
    2. ' self' → logprob: -1.3540644645690918
    3. '           ' → logprob: -3.229064464569092
    4. '       ' → logprob: -8.22906494140625
    5. '               ' → logprob: -10.72906494140625
    6. '   ' → logprob: -10.72906494140625
    7. ' ' → logprob: -10.85406494140625
    8. 'elf' → logprob: -11.10406494140625
    9. '	self' → logprob: -11.10406494140625
    10. ' ' → logprob: -11.72906494140625

Token 125: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -0.006199195981025696
    2. 'delete' → logprob: -5.131199359893799
    3. '.' → logprob: -8.25619888305664
    4. ' delete' → logprob: -11.75619888305664
    5. ' .' → logprob: -13.50619888305664
    6. '	delete' → logprob: -13.63119888305664
    7. '   ' → logprob: -16.00619888305664
    8. '_delete' → logprob: -16.75619888305664
    9. '`.' → logprob: -16.88119888305664
    10. '```' → logprob: -17.00619888305664

Token 126: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -5.512236498361744e-07
    2. '_disconnect' → logprob: -16.125
    3. '_CONNECT' → logprob: -16.625
    4. '"_' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. '_' → logprob: -17.0
    7. '\' → logprob: -18.0
    8. '_con' → logprob: -18.125
    9. ''_' → logprob: -18.125
    10. 'Connect' → logprob: -18.25

Token 127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.694766489090398e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -14.500066757202148
    4. '(s' → logprob: -15.875066757202148
    5. '(parent' → logprob: -16.62506675720215
    6. 'self' → logprob: -16.62506675720215
    7. '(
' → logprob: -17.00006675720215
    8. '(this' → logprob: -18.12506675720215
    9. '(None' → logprob: -19.12506675720215
    10. '(sel' → logprob: -19.12506675720215

Token 128: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.002106244442984462
    2. '.right' → logprob: -6.252106189727783
    3. 'parent' → logprob: -8.752106666564941
    4. '.' → logprob: -11.127106666564941
    5. '.left' → logprob: -12.502106666564941
    6. 'right' → logprob: -14.877106666564941
    7. ' parent' → logprob: -15.752106666564941
    8. '	parent' → logprob: -15.877106666564941
    9. ').' → logprob: -16.627105712890625
    10. '   ' → logprob: -16.627105712890625

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.817902173381299e-05
    2. ' ,' → logprob: -9.25009822845459
    3. ',right' → logprob: -13.50009822845459
    4. ' right' → logprob: -16.125097274780273
    5. '.right' → logprob: -16.250097274780273
    6. 'right' → logprob: -16.375097274780273
    7. '           ' → logprob: -16.750097274780273
    8. '   ' → logprob: -16.875097274780273
    9. '       ' → logprob: -17.250097274780273
    10. ',
' → logprob: -17.250097274780273

Token 130: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.3132677972316742
    2. 'right' → logprob: -1.3132678270339966
    3. '	right' → logprob: -12.438267707824707
    4. '.right' → logprob: -14.313267707824707
    5. 'self' → logprob: -14.563267707824707
    6. 'Right' → logprob: -15.188267707824707
    7. '[right' → logprob: -15.813267707824707
    8. ' self' → logprob: -15.938267707824707
    9. '_right' → logprob: -16.313268661499023
    10. ')' → logprob: -16.438268661499023

Token 131: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1440059393644333
    2. '       ' → logprob: -2.0190060138702393
    3. ')
' → logprob: -6.64400577545166
    4. '   ' → logprob: -12.01900577545166
    5. 'elif' → logprob: -12.14400577545166
    6. ' )' → logprob: -12.26900577545166
    7. 'else' → logprob: -13.14400577545166
    8. '')' → logprob: -13.76900577545166
    9. '```' → logprob: -14.01900577545166
    10. '<|end|>' → logprob: -14.01900577545166

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.226628895296017e-06
    2. 'elif' → logprob: -12.500007629394531
    3. '   ' → logprob: -12.750007629394531
    4. ' elif' → logprob: -15.125007629394531
    5. 'else' → logprob: -15.750007629394531
    6. '           ' → logprob: -16.37500762939453
    7. '      ' → logprob: -17.00000762939453
    8. ' else' → logprob: -17.25000762939453
    9. '     ' → logprob: -17.87500762939453
    10. '```' → logprob: -17.87500762939453

Token 133: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4860754609107971
    2. 'elif' (adapté à ' elif') → logprob: -0.9860754609107971
    3. 'else' → logprob: -4.611075401306152
    4. ' elif' → logprob: -6.611075401306152
    5. '   ' → logprob: -7.486075401306152
    6. ' else' → logprob: -9.611075401306152
    7. '	elif' → logprob: -12.236075401306152
    8. 'elseif' → logprob: -12.986075401306152
    9. ' ' → logprob: -13.736075401306152
    10. '    ' → logprob: -14.236075401306152

Token 134: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.01505010575056076
    2. ' not' → logprob: -4.640049934387207
    3. 'left' → logprob: -5.265049934387207
    4. 'not' → logprob: -9.515049934387207
    5. ' ' → logprob: -10.890049934387207
    6. '    ' → logprob: -11.765049934387207
    7. '   ' → logprob: -13.015049934387207
    8. ' right' → logprob: -13.265049934387207
    9. ' lef' → logprob: -13.265049934387207
    10. '(left' → logprob: -13.515049934387207

Token 135: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0028236585203558207
    2. 'and' → logprob: -5.877823829650879
    3. ':' → logprob: -11.252823829650879
    4. ' ' → logprob: -12.502823829650879
    5. ' ' → logprob: -14.752823829650879
    6. ',' → logprob: -14.877823829650879
    7. '   ' → logprob: -15.002823829650879
    8. '	and' → logprob: -15.502823829650879
    9. ':
' → logprob: -15.627823829650879
    10. '    ' → logprob: -16.252822875976562

Token 136: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25217404961586
    2. 'not' → logprob: -1.5021740198135376
    3. '   ' → logprob: -8.877174377441406
    4. ' right' → logprob: -9.877174377441406
    5. 'right' → logprob: -10.377174377441406
    6. '       ' → logprob: -11.877174377441406
    7. '```' → logprob: -12.752174377441406
    8. '	not' → logprob: -12.877174377441406
    9. '           ' → logprob: -13.127174377441406
    10. '    ' → logprob: -13.377174377441406

Token 137: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.01815216802060604
    2. 'right' → logprob: -4.018152236938477
    3. '	right' → logprob: -13.518152236938477
    4. '(right' → logprob: -15.268152236938477
    5. ' ' → logprob: -15.643152236938477
    6. '.right' → logprob: -15.643152236938477
    7. '[right' → logprob: -15.893152236938477
    8. '_right' → logprob: -16.018152236938477
    9. ',right' → logprob: -17.268152236938477
    10. ' ' → logprob: -17.393152236938477

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06320098787546158
    2. ':
' → logprob: -2.8132009506225586
    3. '       ' → logprob: -6.813200950622559
    4. ' :' → logprob: -9.563200950622559
    5. ' :
' → logprob: -10.688200950622559
    6. ',' → logprob: -11.313200950622559
    7. '           ' → logprob: -11.938200950622559
    8. ':
' → logprob: -12.188200950622559
    9. '):
' → logprob: -12.313200950622559
    10. ':

' → logprob: -12.438200950622559

Token 139: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0066533260978758335
    2. '           ' → logprob: -5.631653308868408
    3. ':' → logprob: -6.506653308868408
    4. ':
' → logprob: -6.756653308868408
    5. ' self' → logprob: -9.381653785705566
    6. '   ' → logprob: -9.756653785705566
    7. ',' → logprob: -9.881653785705566
    8. ' ' → logprob: -10.381653785705566
    9. '(self' → logprob: -10.631653785705566
    10. '```' → logprob: -11.006653785705566

Token 140: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6476390957832336
    2. ' self' → logprob: -0.7726390957832336
    3. '       ' → logprob: -4.647639274597168
    4. '           ' → logprob: -5.272639274597168
    5. ' ' → logprob: -9.397639274597168
    6. '   ' → logprob: -10.397639274597168
    7. '	self' → logprob: -10.522639274597168
    8. '               ' → logprob: -10.522639274597168
    9. ' ' → logprob: -10.897639274597168
    10. '```' → logprob: -11.522639274597168

Token 141: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -0.0041217380203306675
    2. 'delete' → logprob: -5.504121780395508
    3. '.' → logprob: -10.129121780395508
    4. ' delete' → logprob: -13.129121780395508
    5. ' .' → logprob: -14.129121780395508
    6. '	delete' → logprob: -15.004121780395508
    7. '_delete' → logprob: -16.004121780395508
    8. '   ' → logprob: -16.754121780395508
    9. '```' → logprob: -16.754121780395508
    10. '       ' → logprob: -18.754121780395508

Token 142: '_connect' (ID: 32485)
  Prédit: '_connect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_connect' → logprob: -3.128163257315464e-07
    2. 'connect' → logprob: -16.5
    3. '_CONNECT' → logprob: -17.25
    4. '_con' → logprob: -17.625
    5. 'Connect' → logprob: -17.75
    6. '_disconnect' → logprob: -18.0
    7. '_' → logprob: -18.25
    8. 'self' → logprob: -19.625
    9. '_connected' → logprob: -20.25
    10. '_conn' → logprob: -20.5

Token 143: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. 'self' → logprob: -17.875
    4. '(parent' → logprob: -18.75
    5. ' (' → logprob: -19.0
    6. '(this' → logprob: -19.625
    7. '(
' → logprob: -19.875
    8. ' self' → logprob: -21.25
    9. '	self' → logprob: -22.75
    10. '[self' → logprob: -23.375

Token 144: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0008072483469732106
    2. 'parent' → logprob: -7.250807285308838
    3. 'self' → logprob: -9.25080680847168
    4. ' parent' → logprob: -14.75080680847168
    5. '(self' → logprob: -15.37580680847168
    6. '.self' → logprob: -15.37580680847168
    7. ' self' → logprob: -15.87580680847168
    8. '(parent' → logprob: -15.87580680847168
    9. '.' → logprob: -16.00080680847168
    10. '.left' → logprob: -16.87580680847168

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00100113230291754
    2. '(left' → logprob: -7.251001358032227
    3. ',left' → logprob: -9.001001358032227
    4. 'left' → logprob: -9.376001358032227
    5. ' ,' → logprob: -9.626001358032227
    6. ' left' → logprob: -11.376001358032227
    7. '[left' → logprob: -13.376001358032227
    8. ')' → logprob: -13.626001358032227
    9. '(' → logprob: -13.876001358032227
    10. '.left' → logprob: -14.376001358032227

Token 146: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.47407910227775574
    2. 'left' → logprob: -0.9740791320800781
    3. '	left' → logprob: -13.724079132080078
    4. '(left' → logprob: -14.724079132080078
    5. '.left' → logprob: -15.474079132080078
    6. '[left' → logprob: -15.724079132080078
    7. ' ' → logprob: -16.724079132080078
    8. ' lef' → logprob: -16.724079132080078
    9. ':left' → logprob: -17.224079132080078
    10. ',left' → logprob: -17.224079132080078

Token 147: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005080056842416525
    2. ')' → logprob: -5.380080223083496
    3. 'else' → logprob: -7.880080223083496
    4. ' else' → logprob: -9.755080223083496
    5. ' )' → logprob: -12.130080223083496
    6. '   ' → logprob: -12.755080223083496
    7. ',' → logprob: -12.755080223083496
    8. '<|end|>' → logprob: -12.880080223083496
    9. '),' → logprob: -13.255080223083496
    10. '.' → logprob: -13.630080223083496

Token 148: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09416605532169342
    2. 'else' → logprob: -2.4691660404205322
    3. ' else' → logprob: -5.344166278839111
    4. '   ' → logprob: -8.469165802001953
    5. '<|end|>' → logprob: -9.344165802001953
    6. '```' → logprob: -9.719165802001953
    7. '	else' → logprob: -10.219165802001953
    8. 'elif' → logprob: -10.969165802001953
    9. ',' → logprob: -11.844165802001953
    10. '...' → logprob: -12.469165802001953

Token 149: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3873491883277893
    2. '       ' → logprob: -1.1373491287231445
    3. ' else' → logprob: -7.8873491287231445
    4. 'elif' → logprob: -9.262349128723145
    5. '   ' → logprob: -12.262349128723145
    6. '	else' → logprob: -13.887349128723145
    7. '```' → logprob: -14.262349128723145
    8. ')' → logprob: -14.762349128723145
    9. '      ' → logprob: -16.01235008239746
    10. '#' → logprob: -16.26235008239746

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014248007908463478
    2. ':
' → logprob: -4.264247894287109
    3. '       ' → logprob: -10.26424789428711
    4. '           ' → logprob: -10.76424789428711
    5. ' :' → logprob: -10.76424789428711
    6. ',' → logprob: -13.38924789428711
    7. '        ' → logprob: -13.38924789428711
    8. ' :
' → logprob: -13.88924789428711
    9. ':
' → logprob: -14.13924789428711
    10. ':

' → logprob: -14.38924789428711

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004592707380652428
    2. '        ' → logprob: -6.7545928955078125
    3. '       ' → logprob: -6.7545928955078125
    4. 'next' → logprob: -7.1295928955078125
    5. ' successor' → logprob: -8.379592895507812
    6. 'prev' → logprob: -8.504592895507812
    7. ' next' → logprob: -9.004592895507812
    8. '```' → logprob: -9.004592895507812
    9. 'node' → logprob: -9.254592895507812
    10. 'left' → logprob: -9.629592895507812

Token 152: ' next' (ID: 2613)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.10003389418125153
    2. 'succ' → logprob: -2.97503399848938
    3. 'pre' → logprob: -4.100033760070801
    4. 'pred' → logprob: -4.600033760070801
    5. 'node' → logprob: -5.600033760070801
    6. '#' → logprob: -5.725033760070801
    7. 'replacement' → logprob: -5.850033760070801
    8. 'temp' → logprob: -6.475033760070801
    9. ' successor' → logprob: -6.475033760070801
    10. 'next' (adapté à ' next') → logprob: -6.850033760070801

Token 153: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.141391322016716
    2. ' =' → logprob: -3.2663912773132324
    3. 'success' → logprob: -3.3913912773132324
    4. 'node' → logprob: -3.8913912773132324
    5. '_success' → logprob: -3.8913912773132324
    6. ' successor' → logprob: -5.391391277313232
    7. '_s' → logprob: -5.641391277313232
    8. 'succ' → logprob: -5.641391277313232
    9. ' node' → logprob: -6.391391277313232
    10. '_min' → logprob: -7.266391277313232

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004647522699087858
    2. '=' → logprob: -5.379647731781006
    3. '=self' → logprob: -10.629647254943848
    4. ',' → logprob: -13.254647254943848
    5. ' ' → logprob: -14.129647254943848
    6. '=node' → logprob: -15.254647254943848
    7. 's' → logprob: -16.379648208618164
    8. ')' → logprob: -16.379648208618164
    9. '.' → logprob: -16.629648208618164
    10. '=find' → logprob: -17.129648208618164

Token 155: ' right' (ID: 1849)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5357950329780579
    2. 'self' → logprob: -0.9107950329780579
    3. ' right' → logprob: -4.660795211791992
    4. 'right' → logprob: -6.535795211791992
    5. '       ' → logprob: -7.035795211791992
    6. ' left' → logprob: -8.035795211791992
    7. 'left' → logprob: -8.160795211791992
    8. '           ' → logprob: -8.785795211791992
    9. '	self' → logprob: -11.285795211791992
    10. '   ' → logprob: -11.285795211791992

Token 156: '.get' (ID: 775)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1544317603111267
    2. '           ' → logprob: -2.5294318199157715
    3. ' while' → logprob: -3.6544318199157715
    4. '       ' → logprob: -3.6544318199157715
    5. '
' → logprob: -4.5294318199157715
    6. '.left' → logprob: -8.029431343078613
    7. '        ' → logprob: -8.779431343078613
    8. '   ' → logprob: -9.279431343078613
    9. '	while' → logprob: -9.654431343078613
    10. '        
' → logprob: -10.279431343078613

Token 157: '_left' (ID: 22189)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.03248097002506256
    2. '_left' → logprob: -3.7824809551239014
    3. '_success' → logprob: -5.6574811935424805
    4. 'min' → logprob: -6.4074811935424805
    5. '_next' → logprob: -6.9074811935424805
    6. 'Minimum' → logprob: -7.5324811935424805
    7. '_max' → logprob: -7.6574811935424805
    8. '_m' → logprob: -7.6574811935424805
    9. 'Min' → logprob: -7.7824811935424805
    10. 'left' → logprob: -8.28248119354248

Token 158: 'most' (ID: 5309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.0100624169572257e-05
    2. 'most' → logprob: -11.500020027160645
    3. ' ()' → logprob: -12.500020027160645
    4. '()
' → logprob: -13.375020027160645
    5. '(' → logprob: -14.250020027160645
    6. '_' → logprob: -14.625020027160645
    7. '_leaf' → logprob: -14.625020027160645
    8. '_child' → logprob: -14.750020027160645
    9. '()

' → logprob: -15.000020027160645
    10. '())' → logprob: -15.125020027160645

Token 159: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.246537173457909e-06
    2. ' ()' → logprob: -13.500003814697266
    3. '()
' → logprob: -13.750003814697266
    4. '()`' → logprob: -14.250003814697266
    5. '(' → logprob: -14.875003814697266
    6. '())' → logprob: -15.750003814697266
    7. 'child' → logprob: -16.000003814697266
    8. '()

' → logprob: -16.250003814697266
    9. 'node' → logprob: -16.625003814697266
    10. '()]' → logprob: -17.000003814697266

Token 160: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12249549478292465
    2. 'while' → logprob: -3.122495412826538
    3. 'next' → logprob: -3.247495412826538
    4. 'temp' → logprob: -5.122495651245117
    5. 'current' → logprob: -5.497495651245117
    6. '       ' → logprob: -5.497495651245117
    7. 'node' → logprob: -6.122495651245117
    8. 'replacement' → logprob: -6.247495651245117
    9. 'prev' → logprob: -6.247495651245117
    10. '
' → logprob: -6.372495651245117

Token 161: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.015055861324071884
    2. 'if' → logprob: -4.5150556564331055
    3. '           ' → logprob: -6.0150556564331055
    4. 'next' → logprob: -6.5150556564331055
    5. ' self' → logprob: -10.265055656433105
    6. 'swap' → logprob: -11.140055656433105
    7. ' if' → logprob: -11.515055656433105
    8. '#' → logprob: -12.015055656433105
    9. 'while' → logprob: -12.515055656433105
    10. '       ' → logprob: -12.890055656433105

Token 162: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.00032640635618008673
    2. '.delete' → logprob: -8.625326156616211
    3. '.' → logprob: -9.000326156616211
    4. 'val' → logprob: -11.125326156616211
    5. '.swap' → logprob: -12.125326156616211
    6. ' .' → logprob: -13.250326156616211
    7. '.value' → logprob: -15.250326156616211
    8. '_val' → logprob: -15.750326156616211
    9. '.del' → logprob: -15.875326156616211
    10. '.v' → logprob: -15.875326156616211

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165159314870834
    2. '=' → logprob: -4.264164924621582
    3. ',' → logprob: -13.639164924621582
    4. ' =
' → logprob: -15.514164924621582
    5. ' ' → logprob: -16.0141658782959
    6. ' ,' → logprob: -16.2641658782959
    7. '.=' → logprob: -17.5141658782959
    8. '    ' → logprob: -17.6391658782959
    9. ' next' → logprob: -18.2641658782959
    10. ' =
' → logprob: -18.6391658782959

Token 164: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.0015023599844425917
    2. 'next' → logprob: -6.501502513885498
    3. '	next' → logprob: -16.751502990722656
    4. '(next' → logprob: -17.001502990722656
    5. ' nex' → logprob: -18.001502990722656
    6. '.next' → logprob: -18.126502990722656
    7. ' ' → logprob: -19.376502990722656
    8. ' nxt' → logprob: -19.376502990722656
    9. '[next' → logprob: -19.501502990722656
    10. 'Next' → logprob: -20.126502990722656

Token 165: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -8.029847231227905e-05
    2. '_token' → logprob: -9.625080108642578
    3. '.' → logprob: -11.750080108642578
    4. '._' → logprob: -12.375080108642578
    5. 'node' → logprob: -14.500080108642578
    6. '_.' → logprob: -15.125080108642578
    7. '_' → logprob: -15.375080108642578
    8. '_NODE' → logprob: -15.375080108642578
    9. '.next' → logprob: -15.750080108642578
    10. '.node' → logprob: -16.250080108642578

Token 166: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.0001749351795297116
    2. '.' → logprob: -8.750174522399902
    3. 'val' → logprob: -11.250174522399902
    4. ' .' → logprob: -12.750174522399902
    5. '`.' → logprob: -15.625174522399902
    6. '​.' → logprob: -17.00017547607422
    7. '".' → logprob: -17.00017547607422
    8. '.value' → logprob: -17.00017547607422
    9. '.left' → logprob: -17.12517547607422
    10. ''.' → logprob: -17.37517547607422

Token 167: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2126206010580063
    2. 'next' → logprob: -1.9626206159591675
    3. '
' → logprob: -3.587620496749878
    4. ' next' → logprob: -4.087620735168457
    5. '(next' → logprob: -6.087620735168457
    6. '.next' → logprob: -6.587620735168457
    7. '            
' → logprob: -7.337620735168457
    8. '       ' → logprob: -7.337620735168457
    9. '[next' → logprob: -7.587620735168457
    10. '\n' → logprob: -8.212620735168457

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03256913274526596
    2. 'next' → logprob: -3.657569169998169
    3. ' next' → logprob: -5.15756893157959
    4. '       ' → logprob: -8.65756893157959
    5. '
' → logprob: -8.65756893157959
    6. '.next' → logprob: -9.78256893157959
    7. '(next' → logprob: -10.28256893157959
    8. '            
' → logprob: -11.15756893157959
    9. 'self' → logprob: -11.65756893157959
    10. '[next' → logprob: -11.65756893157959

Token 169: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.002559137996286154
    2. 'right' → logprob: -6.127559185028076
    3. 'return' → logprob: -8.752558708190918
    4. 'self' → logprob: -8.877558708190918
    5. ' next' → logprob: -9.627558708190918
    6. '           ' → logprob: -12.877558708190918
    7. '   ' → logprob: -13.377558708190918
    8. 'if' → logprob: -13.377558708190918
    9. 'left' → logprob: -14.002558708190918
    10. '       ' → logprob: -14.127558708190918

Token 170: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0001217813478433527
    2. '_token' → logprob: -9.1251220703125
    3. '._' → logprob: -11.5001220703125
    4. '.' → logprob: -13.8751220703125
    5. '_nodes' → logprob: -14.8751220703125
    6. '_Node' → logprob: -15.2501220703125
    7. '_code' → logprob: -15.3751220703125
    8. '_' → logprob: -15.5001220703125
    9. '_NODE' → logprob: -15.7501220703125
    10. 'node' → logprob: -16.2501220703125

Token 171: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -5.180879816180095e-05
    2. '.' → logprob: -9.875051498413086
    3. '.remove' → logprob: -15.750051498413086
    4. ' .' → logprob: -16.500051498413086
    5. 'delete' → logprob: -17.375051498413086
    6. '.del' → logprob: -18.375051498413086
    7. ').' → logprob: -18.500051498413086
    8. '.Delete' → logprob: -18.875051498413086
    9. '.de' → logprob: -19.125051498413086
    10. '`.' → logprob: -19.125051498413086

Token 172: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001246348983841017
    2. '()
' → logprob: -9.37512493133545
    3. '(' → logprob: -10.50012493133545
    4. '()

' → logprob: -12.75012493133545
    5. '()`' → logprob: -12.87512493133545
    6. ' ()' → logprob: -13.50012493133545
    7. '()\' → logprob: -14.00012493133545
    8. '();' → logprob: -14.12512493133545
    9. '()<' → logprob: -14.37512493133545
    10. '()(' → logprob: -14.62512493133545

Token 173: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40068861842155457
    2. ':' → logprob: -2.150688648223877
    3. 'def' → logprob: -2.775688648223877
    4. '<|end|>' → logprob: -3.150688648223877
    5. '
' → logprob: -3.275688648223877
    6. '    
' → logprob: -3.775688648223877
    7. '	def' → logprob: -4.525688648223877
    8. '()' → logprob: -5.525688648223877
    9. ' def' → logprob: -5.525688648223877
    10. '.' → logprob: -5.525688648223877

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6390730142593384
    2. 'def' → logprob: -0.7640730142593384
    3. ' def' → logprob: -5.889072895050049
    4. '    
' → logprob: -6.139072895050049
    5. '	def' → logprob: -6.889072895050049
    6. '
' → logprob: -8.014073371887207
    7. '       ' → logprob: -10.264073371887207
    8. '        
' → logprob: -10.264073371887207
    9. ':def' → logprob: -10.889073371887207
    10. ' ' → logprob: -11.139073371887207

Token 175: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0018843731377273798
    2. ' def' → logprob: -6.751884460449219
    3. '   ' → logprob: -7.251884460449219
    4. ' ' → logprob: -13.126884460449219
    5. '	def' → logprob: -13.376884460449219
    6. '  ' → logprob: -13.876884460449219
    7. '    
' → logprob: -15.376884460449219
    8. '```' → logprob: -16.12688446044922
    9. '       ' → logprob: -17.00188446044922
    10. '    ' → logprob: -17.00188446044922

Token 176: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.061977993696928024
    2. ' get' → logprob: -2.8119781017303467
    3. 'insert' → logprob: -11.936978340148926
    4. '_get' → logprob: -13.686978340148926
    5. ' insert' → logprob: -14.061978340148926
    6. 'left' → logprob: -14.311978340148926
    7. ' ' → logprob: -15.311978340148926
    8. 'find' → logprob: -15.686978340148926
    9. '	get' → logprob: -16.06197738647461
    10. 'replace' → logprob: -16.31197738647461

Token 177: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.1472419600977446e-06
    2. '_right' → logprob: -14.125000953674316
    3. '_le' → logprob: -15.750000953674316
    4. '_' → logprob: -16.375001907348633
    5. ' _' → logprob: -16.875001907348633
    6. '_Left' → logprob: -17.125001907348633
    7. '_self' → logprob: -17.750001907348633
    8. '_LEFT' → logprob: -17.875001907348633
    9. '_val' → logprob: -18.500001907348633
    10. 'left' → logprob: -18.625001907348633

Token 178: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -2.2200749754119897e-06
    2. 'ost' → logprob: -14.125001907348633
    3. 'Most' → logprob: -15.125001907348633
    4. '```' → logprob: -15.500001907348633
    5. 'left' → logprob: -15.625001907348633
    6. '_m' → logprob: -15.625001907348633
    7. 'm' → logprob: -15.875001907348633
    8. '   ' → logprob: -16.500001907348633
    9. '()' → logprob: -16.500001907348633
    10. 'more' → logprob: -16.500001907348633

Token 179: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0021478813141584396
    2. '(' → logprob: -6.252147674560547
    3. '()' → logprob: -8.502147674560547
    4. ' (' → logprob: -11.752147674560547
    5. '(s' → logprob: -12.627147674560547
    6. 'self' → logprob: -13.252147674560547
    7. '(
' → logprob: -13.627147674560547
    8. '(sel' → logprob: -13.752147674560547
    9. '()(' → logprob: -15.377147674560547
    10. ' ' → logprob: -15.502147674560547

Token 180: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12824968993663788
    2. '):' → logprob: -2.2532496452331543
    3. '():' → logprob: -5.128249645233154
    4. 'self' → logprob: -5.753249645233154
    5. '(' → logprob: -6.128249645233154
    6. ')' → logprob: -6.253249645233154
    7. '):
' → logprob: -6.503249645233154
    8. ':' → logprob: -8.753250122070312
    9. '   ' → logprob: -8.878250122070312
    10. '():
' → logprob: -9.003250122070312

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02206445299088955
    2. 'node' → logprob: -4.272064685821533
    3. 'if' → logprob: -5.897064685821533
    4. '   ' → logprob: -6.147064685821533
    5. ' if' → logprob: -6.522064685821533
    6. ' node' → logprob: -7.022064685821533
    7. 'current' → logprob: -8.147064208984375
    8. 'left' → logprob: -8.772064208984375
    9. ' current' → logprob: -9.522064208984375
    10. '    ' → logprob: -9.897064208984375

Token 182: ' if' (ID: 538)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4597621262073517
    2. 'current' → logprob: -1.4597620964050293
    3. 'if' (adapté à ' if') → logprob: -2.2097620964050293
    4. '       ' → logprob: -4.709762096405029
    5. ' node' → logprob: -4.959762096405029
    6. ' if' → logprob: -5.209762096405029
    7. ' current' → logprob: -5.334762096405029
    8. 'curr' → logprob: -8.459762573242188
    9. '   ' → logprob: -11.209762573242188
    10. 'cur' → logprob: -11.709762573242188

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13644884526729584
    2. ' self' → logprob: -2.636448860168457
    3. ' not' → logprob: -3.136448860168457
    4. 'not' → logprob: -4.386448860168457
    5. '   ' → logprob: -10.011448860168457
    6. '       ' → logprob: -12.636448860168457
    7. '	self' → logprob: -12.761448860168457
    8. ' ' → logprob: -14.136448860168457
    9. '(self' → logprob: -14.886448860168457
    10. '	not' → logprob: -16.26144790649414

Token 184: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -12.000011444091797
    3. ' .' → logprob: -12.750011444091797
    4. '.Left' → logprob: -14.375011444091797
    5. '.has' → logprob: -14.625011444091797
    6. '.right' → logprob: -14.750011444091797
    7. '.parent' → logprob: -15.500011444091797
    8. 'left' → logprob: -16.250011444091797
    9. '.le' → logprob: -16.875011444091797
    10. '.val' → logprob: -17.125011444091797

Token 185: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06875757873058319
    2. 'is' → logprob: -3.1937575340270996
    3. ':' → logprob: -3.6937575340270996
    4. ':
' → logprob: -7.8187575340271
    5. '<|end|>' → logprob: -9.193758010864258
    6. '       ' → logprob: -11.068758010864258
    7. '	is' → logprob: -11.693758010864258
    8. '   ' → logprob: -11.943758010864258
    9. '<|end|>' → logprob: -11.943758010864258
    10. '=None' → logprob: -13.318758010864258

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3083057999610901
    2. ' return' → logprob: -1.6833057403564453
    3. 'return' → logprob: -2.5583057403564453
    4. '       ' → logprob: -6.183305740356445
    5. '   ' → logprob: -11.058305740356445
    6. '	return' → logprob: -11.308305740356445
    7. ' ' → logprob: -12.183305740356445
    8. '{return' → logprob: -12.183305740356445
    9. '	       ' → logprob: -12.308305740356445
    10. '               ' → logprob: -13.433305740356445

Token 187: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0033831533510237932
    2. ' return' → logprob: -5.753383159637451
    3. '           ' → logprob: -8.503382682800293
    4. '       ' → logprob: -13.378382682800293
    5. '   ' → logprob: -14.503382682800293
    6. '	return' → logprob: -15.128382682800293
    7. '               ' → logprob: -15.128382682800293
    8. '
' → logprob: -17.87838363647461
    9. '{return' → logprob: -18.50338363647461
    10. ':return' → logprob: -18.75338363647461

Token 188: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007099286303855479
    2. ' self' → logprob: -7.2507100105285645
    3. '       ' → logprob: -19.000709533691406
    4. '	self' → logprob: -21.125709533691406
    5. '   ' → logprob: -22.000709533691406
    6. '           ' → logprob: -22.375709533691406
    7. '(self' → logprob: -22.500709533691406
    8. ' ' → logprob: -23.500709533691406
    9. 'Self' → logprob: -24.000709533691406
    10. '[self' → logprob: -24.500709533691406

Token 189: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -8.506661833962426e-05
    2. '.' → logprob: -9.62508487701416
    3. ' .' → logprob: -11.62508487701416
    4. '.get' → logprob: -11.87508487701416
    5. 'left' → logprob: -14.00008487701416
    6. '.right' → logprob: -14.37508487701416
    7. '       ' → logprob: -14.50008487701416
    8. 'self' → logprob: -15.12508487701416
    9. '   ' → logprob: -15.25008487701416
    10. '.parent' → logprob: -15.37508487701416

Token 190: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0001721934968372807
    2. 'get' → logprob: -9.00017261505127
    3. '       ' → logprob: -10.62517261505127
    4. '
' → logprob: -10.75017261505127
    5. '.' → logprob: -13.62517261505127
    6. 'else' → logprob: -14.87517261505127
    7. 'self' → logprob: -15.12517261505127
    8. '        ' → logprob: -15.75017261505127
    9. '
' → logprob: -16.125171661376953
    10. '   ' → logprob: -16.250171661376953

Token 191: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.0019310165662318468
    2. 'left' → logprob: -6.251931190490723
    3. 'get' → logprob: -13.751931190490723
    4. 'Left' → logprob: -14.001931190490723
    5. '_LEFT' → logprob: -15.751931190490723
    6. '   ' → logprob: -17.001930236816406
    7. '```' → logprob: -17.126930236816406
    8. 'self' → logprob: -17.376930236816406
    9. 'LEFT' → logprob: -17.501930236816406
    10. ' left' → logprob: -17.501930236816406

Token 192: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -3.214019307051785e-05
    2. 'ost' → logprob: -10.500032424926758
    3. 'left' → logprob: -12.875032424926758
    4. 'Most' → logprob: -14.000032424926758
    5. ' most' → logprob: -15.250032424926758
    6. 'm' → logprob: -15.250032424926758
    7. 'more' → logprob: -15.875032424926758
    8. 'est' → logprob: -16.875032424926758
    9. '()' → logprob: -17.250032424926758
    10. '_' → logprob: -17.250032424926758

Token 193: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014164687134325504
    2. '()
' → logprob: -4.264164924621582
    3. '()

' → logprob: -14.264164924621582
    4. '()
' → logprob: -15.139164924621582
    5. '(' → logprob: -15.389164924621582
    6. ' ()' → logprob: -16.764163970947266
    7. 'else' → logprob: -17.264163970947266
    8. '()`' → logprob: -17.889163970947266
    9. '().' → logprob: -19.014163970947266
    10. '())' → logprob: -19.514163970947266

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010277748107910156
    2. 'return' → logprob: -4.63527774810791
    3. 'else' → logprob: -7.76027774810791
    4. '	' → logprob: -10.13527774810791
    5. '   ' → logprob: -10.51027774810791
    6. '	return' → logprob: -11.63527774810791
    7. ' return' → logprob: -11.76027774810791
    8. '```' → logprob: -12.38527774810791
    9. '	   ' → logprob: -12.88527774810791
    10. ' else' → logprob: -12.88527774810791

Token 195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39107123017311096
    2. '       ' → logprob: -1.1410712003707886
    3. 'else' → logprob: -5.516071319580078
    4. ' return' → logprob: -9.516071319580078
    5. '	return' → logprob: -9.641071319580078
    6. '   ' → logprob: -11.641071319580078
    7. '	' → logprob: -11.891071319580078
    8. ' else' → logprob: -11.891071319580078
    9. '{return' → logprob: -12.891071319580078
    10. '```' → logprob: -13.641071319580078

Token 196: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005530327325686812
    2. ' self' → logprob: -7.500553131103516
    3. '(self' → logprob: -22.000553131103516
    4. '	self' → logprob: -22.125553131103516
    5. '   ' → logprob: -22.250553131103516
    6. ' ' → logprob: -22.625553131103516
    7. '
' → logprob: -22.875553131103516
    8. ' ' → logprob: -23.000553131103516
    9. 'Self' → logprob: -23.125553131103516
    10. '       ' → logprob: -23.250553131103516

Token 197: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: ' Binary' (ID: 32672)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.7468385100364685
    2. ' Binary' → logprob: -1.4968385696411133
    3. 'BST' → logprob: -1.8718385696411133
    4. ' BST' → logprob: -1.9968385696411133
    5. 'Tree' → logprob: -5.246838569641113
    6. 'Node' → logprob: -5.871838569641113
    7. ' Tree' → logprob: -5.996838569641113
    8. ' ' → logprob: -7.246838569641113
    9. ' Node' → logprob: -8.246838569641113
    10. 'Solution' → logprob: -8.621838569641113

Token 200: 'Search' (ID: 5975)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.004101673606783152
    2. 'Search' → logprob: -5.504101753234863
    3. 'tree' → logprob: -11.504101753234863
    4. ' Tree' → logprob: -11.754101753234863
    5. 'Tre' → logprob: -13.004101753234863
    6. ' tree' → logprob: -13.879101753234863
    7. 'T' → logprob: -14.504101753234863
    8. 'Node' → logprob: -15.004101753234863
    9. '_tree' → logprob: -15.629101753234863
    10. 'search' → logprob: -15.879101753234863

Token 201: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.981667537620524e-06
    2. 'Node' → logprob: -14.000001907348633
    3. ' Tree' → logprob: -14.250001907348633
    4. 'ree' → logprob: -15.750001907348633
    5. 'tree' → logprob: -15.750001907348633
    6. '(Tree' → logprob: -15.875001907348633
    7. 'Tre' → logprob: -16.125001907348633
    8. '	Tree' → logprob: -17.625001907348633
    9. ' tree' → logprob: -17.875001907348633
    10. 'T' → logprob: -17.875001907348633

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013325021136552095
    2. ':
' → logprob: -6.6263322830200195
    3. '():' → logprob: -12.75133228302002
    4. ' :' → logprob: -13.87633228302002
    5. ':def' → logprob: -14.25133228302002
    6. '):' → logprob: -14.37633228302002
    7. '(object' → logprob: -14.50133228302002
    8. ':

' → logprob: -14.87633228302002
    9. '(' → logprob: -15.75133228302002
    10. ':**' → logprob: -16.126333236694336

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026464059483259916
    2. ' def' → logprob: -6.002646446228027
    3. 'def' → logprob: -9.127646446228027
    4. '    
' → logprob: -10.002646446228027
    5. '	def' → logprob: -11.252646446228027
    6. '<|end|>' → logprob: -14.002646446228027
    7. ':' → logprob: -14.252646446228027
    8. '[' → logprob: -14.627646446228027
    9. '```' → logprob: -15.127646446228027
    10. '
' → logprob: -15.377646446228027

Token 204: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20569974184036255
    2. 'def' (adapté à ' def') → logprob: -1.7056996822357178
    3. '   ' → logprob: -5.455699920654297
    4. ' ' → logprob: -12.955699920654297
    5. '	def' → logprob: -13.705699920654297
    6. '```' → logprob: -14.455699920654297
    7. '    ' → logprob: -14.580699920654297
    8. '
' → logprob: -14.705699920654297
    9. '  ' → logprob: -15.455699920654297
    10. '    
' → logprob: -16.455699920654297

Token 205: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00035393505822867155
    2. '__' → logprob: -8.125353813171387
    3. ' def' → logprob: -10.750353813171387
    4. ' init' → logprob: -10.750353813171387
    5. '_init' → logprob: -12.000353813171387
    6. 'init' → logprob: -12.750353813171387
    7. ' _' → logprob: -13.250353813171387
    8. ' ' → logprob: -13.500353813171387
    9. ' ___' → logprob: -13.625353813171387
    10. ' insert' → logprob: -14.000353813171387

Token 206: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00010616567305987701
    2. '__' → logprob: -9.875105857849121
    3. 'def' → logprob: -10.250105857849121
    4. ' init' → logprob: -11.750105857849121
    5. '   ' → logprob: -12.500105857849121
    6. 'it' → logprob: -13.000105857849121
    7. '_init' → logprob: -13.250105857849121
    8. '```' → logprob: -13.875105857849121
    9. 'new' → logprob: -14.125105857849121
    10. 'iter' → logprob: -14.500105857849121

Token 207: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.029951343312859535
    2. '(self' → logprob: -3.529951333999634
    3. '__' → logprob: -9.904951095581055
    4. '__(
' → logprob: -9.904951095581055
    5. ' (' → logprob: -10.029951095581055
    6. '(' → logprob: -10.404951095581055
    7. '_(' → logprob: -10.779951095581055
    8. 'self' → logprob: -13.404951095581055
    9. '<>(' → logprob: -13.904951095581055
    10. ' ' → logprob: -14.029951095581055

Token 208: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00010199354437645525
    2. ')' → logprob: -9.750102043151855
    3. '):
' → logprob: -10.750102043151855
    4. ' self' → logprob: -10.875102043151855
    5. '   ' → logprob: -13.750102043151855
    6. '
' → logprob: -14.125102043151855
    7. '):' → logprob: -14.375102043151855
    8. '	self' → logprob: -15.000102043151855
    9. '):

' → logprob: -15.625102043151855
    10. '  ' → logprob: -15.875102043151855

Token 209: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5819216370582581
    2. '):' → logprob: -0.8319216370582581
    3. '):
' → logprob: -5.581921577453613
    4. 'self' → logprob: -6.331921577453613
    5. ')' → logprob: -8.456921577453613
    6. ' ):' → logprob: -9.081921577453613
    7. ' ,' → logprob: -10.206921577453613
    8. ' self' → logprob: -11.331921577453613
    9. '):

' → logprob: -11.456921577453613
    10. ',parent' → logprob: -11.581921577453613

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.885585606098175
    2. 'self' → logprob: -0.885585606098175
    3. 'None' → logprob: -1.8855855464935303
    4. ' None' → logprob: -4.010585784912109
    5. '   ' → logprob: -6.010585784912109
    6. ' self' → logprob: -6.010585784912109
    7. '0' → logprob: -8.38558578491211
    8. '(None' → logprob: -11.26058578491211
    9. ' ' → logprob: -11.51058578491211
    10. '<|end|>' → logprob: -11.88558578491211

Token 211: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.031585436314344406
    2. 'None' → logprob: -3.531585454940796
    3. ' self' → logprob: -6.406585216522217
    4. ' None' → logprob: -8.656585693359375
    5. '   ' → logprob: -12.031585693359375
    6. '       ' → logprob: -13.281585693359375
    7. '	self' → logprob: -14.781585693359375
    8. '0' → logprob: -15.656585693359375
    9. ' ' → logprob: -16.531585693359375
    10. '
' → logprob: -16.656585693359375

Token 212: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.002025116002187133
    2. '.' → logprob: -6.252025127410889
    3. ' .' → logprob: -9.50202465057373
    4. 'root' → logprob: -11.37702465057373
    5. '.head' → logprob: -12.12702465057373
    6. ' root' → logprob: -12.75202465057373
    7. '_root' → logprob: -14.12702465057373
    8. '.val' → logprob: -14.75202465057373
    9. '.ro' → logprob: -15.37702465057373
    10. '.parent' → logprob: -15.87702465057373

Token 213: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193649530410767
    2. ' =' → logprob: -1.501936435699463
    3. '=None' → logprob: -11.876936912536621
    4. ' None' → logprob: -15.751936912536621
    5. ' ' → logprob: -15.876936912536621
    6. '<|end|>' → logprob: -17.126935958862305
    7. ' =
' → logprob: -17.501935958862305
    8. ' is' → logprob: -17.501935958862305
    9. '=
' → logprob: -17.501935958862305
    10. ' =)' → logprob: -17.751935958862305

Token 214: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029750484973192215
    2. ' None' → logprob: -3.5297505855560303
    3. '_None' → logprob: -20.15475082397461
    4. '=None' → logprob: -20.52975082397461
    5. '(None' → logprob: -20.77975082397461
    6. 'none' → logprob: -22.02975082397461
    7. ',None' → logprob: -22.40475082397461
    8. '   ' → logprob: -22.65475082397461
    9. '0' → logprob: -23.27975082397461
    10. 'null' → logprob: -23.90475082397461

Token 215: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3965165913105011
    2. 'def' → logprob: -1.1465165615081787
    3. ' def' → logprob: -4.646516799926758
    4. '	def' → logprob: -12.646516799926758
    5. ' ' → logprob: -14.896516799926758
    6. '    
' → logprob: -15.146516799926758
    7. '
' → logprob: -15.146516799926758
    8. '  ' → logprob: -15.771516799926758
    9. '    ' → logprob: -17.396516799926758
    10. '```' → logprob: -18.146516799926758

Token 217: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.7610454708337784e-05
    2. ' def' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.25002670288086
    4. 'insert' → logprob: -20.25002670288086
    5. ' ' → logprob: -21.50002670288086
    6. '	def' → logprob: -22.25002670288086
    7. 'de' → logprob: -23.00002670288086
    8. '
' → logprob: -23.62502670288086
    9. '  ' → logprob: -24.50002670288086
    10. '```' → logprob: -25.00002670288086

Token 218: ' insert' (ID: 10898)
  Prédit: 'insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.25199320912361145
    2. ' insert' → logprob: -1.501993179321289
    3. '_insert' → logprob: -10.126993179321289
    4. 'search' → logprob: -11.126993179321289
    5. ' search' → logprob: -13.376993179321289
    6. 'add' → logprob: -13.751993179321289
    7. '	insert' → logprob: -13.751993179321289
    8. 'is' → logprob: -14.376993179321289
    9. 'put' → logprob: -14.376993179321289
    10. 'Insert' → logprob: -14.501993179321289

Token 219: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004665385349653661
    2. '(' → logprob: -8.375466346740723
    3. ' (' → logprob: -8.375466346740723
    4. ' ' → logprob: -12.625466346740723
    5. 'self' → logprob: -14.625466346740723
    6. '(
' → logprob: -15.000466346740723
    7. '	self' → logprob: -15.000466346740723
    8. ' self' → logprob: -15.000466346740723
    9. '   ' → logprob: -15.125466346740723
    10. '(s' → logprob: -15.250466346740723

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014463171362876892
    2. ' ,' → logprob: -4.264462947845459
    3. 'self' → logprob: -8.139463424682617
    4. ',self' → logprob: -12.764463424682617
    5. '(self' → logprob: -13.014463424682617
    6. ' self' → logprob: -13.389463424682617
    7. ',val' → logprob: -14.889463424682617
    8. '   ' → logprob: -15.014463424682617
    9. ',node' → logprob: -15.264463424682617
    10. 'root' → logprob: -16.514463424682617

Token 221: ' node' (ID: 4596)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.10022154450416565
    2. ' val' → logprob: -2.350221633911133
    3. 'self' → logprob: -11.600221633911133
    4. 'root' → logprob: -13.225221633911133
    5. 'value' → logprob: -13.600221633911133
    6. 'node' → logprob: -13.975221633911133
    7. ' self' → logprob: -14.475221633911133
    8. 'key' → logprob: -14.975221633911133
    9. ' root' → logprob: -15.475221633911133
    10. '```' → logprob: -15.725221633911133

Token 222: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005719385575503111
    2. '):' → logprob: -5.255719184875488
    3. ' ,' → logprob: -7.880719184875488
    4. ' ):' → logprob: -9.880719184875488
    5. '):
' → logprob: -10.130719184875488
    6. '   ' → logprob: -12.255719184875488
    7. ',node' → logprob: -12.255719184875488
    8. ':' → logprob: -13.380719184875488
    9. ')' → logprob: -13.630719184875488
    10. ',val' → logprob: -13.755719184875488

Token 223: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.20145143568515778
    2. ' Node' → logprob: -1.7014514207839966
    3. 'node' → logprob: -11.451451301574707
    4. 'int' → logprob: -11.951451301574707
    5. ' node' → logprob: -12.076451301574707
    6. ' int' → logprob: -12.826451301574707
    7. '	Node' → logprob: -13.076451301574707
    8. '_Node' → logprob: -13.076451301574707
    9. ' ' → logprob: -13.326451301574707
    10. ')' → logprob: -13.576451301574707

Token 224: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012637254782021046
    2. ' ,' → logprob: -4.637637138366699
    3. '):' → logprob: -5.887637138366699
    4. ' ):' → logprob: -9.8876371383667
    5. '):
' → logprob: -10.2626371383667
    6. ')' → logprob: -11.5126371383667
    7. ',node' → logprob: -12.7626371383667
    8. ' )' → logprob: -13.7626371383667
    9. '   ' → logprob: -13.8876371383667
    10. 'self' → logprob: -14.1376371383667

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19069036841392517
    2. ' if' → logprob: -2.065690279006958
    3. 'if' → logprob: -3.065690279006958
    4. '   ' → logprob: -8.815690040588379
    5. '    ' → logprob: -10.565690040588379
    6. '	if' → logprob: -11.065690040588379
    7. '
' → logprob: -11.565690040588379
    8. '```' → logprob: -11.690690040588379
    9. '	' → logprob: -11.815690040588379
    10. '        
' → logprob: -11.940690040588379

Token 226: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011207559145987034
    2. ' if' → logprob: -4.511207580566406
    3. '       ' → logprob: -8.761207580566406
    4. 'current' → logprob: -13.011207580566406
    5. 'def' → logprob: -14.511207580566406
    6. '   ' → logprob: -15.511207580566406
    7. ' current' → logprob: -17.136207580566406
    8. '	if' → logprob: -17.261207580566406
    9. '```' → logprob: -18.136207580566406
    10. 'node' → logprob: -18.261207580566406

Token 227: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6541792750358582
    2. ' not' → logprob: -1.279179334640503
    3. 'not' → logprob: -2.029179334640503
    4. ' self' → logprob: -2.654179334640503
    5. '   ' → logprob: -9.779179573059082
    6. ' ' → logprob: -12.279179573059082
    7. '       ' → logprob: -13.404179573059082
    8. '	self' → logprob: -14.029179573059082
    9. '  ' → logprob: -14.154179573059082
    10. '	not' → logprob: -14.904179573059082

Token 228: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132629990577698
    2. ' self' → logprob: -1.313262939453125
    3. '       ' → logprob: -14.813262939453125
    4. '(self' → logprob: -14.938262939453125
    5. '	self' → logprob: -15.438262939453125
    6. '
' → logprob: -15.813262939453125
    7. '   ' → logprob: -16.438262939453125
    8. ' ' → logprob: -16.688262939453125
    9. '=self' → logprob: -16.688262939453125
    10. ' ' → logprob: -17.063262939453125

Token 229: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0005000127712264657
    2. 'root' → logprob: -7.625500202178955
    3. '.' → logprob: -11.500499725341797
    4. ' root' → logprob: -13.875499725341797
    5. ' .' → logprob: -14.500499725341797
    6. '_root' → logprob: -15.875499725341797
    7. '[root' → logprob: -15.875499725341797
    8. '
' → logprob: -16.625499725341797
    9. '	root' → logprob: -17.000499725341797
    10. 'Root' → logprob: -17.500499725341797

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02648073621094227
    2. ':
' → logprob: -3.6514806747436523
    3. ' :' → logprob: -8.651480674743652
    4. ' :
' → logprob: -12.901480674743652
    5. ':return' → logprob: -13.901480674743652
    6. '=' → logprob: -14.401480674743652
    7. ':

' → logprob: -14.651480674743652
    8. ':
' → logprob: -15.276480674743652
    9. ' =' → logprob: -15.401480674743652
    10. ' or' → logprob: -15.651480674743652

Token 231: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4359683394432068
    2. '           ' → logprob: -1.0609683990478516
    3. '=' → logprob: -5.185968399047852
    4. ' self' → logprob: -7.060968399047852
    5. ':' → logprob: -7.435968399047852
    6. '=self' → logprob: -9.060968399047852
    7. ':
' → logprob: -10.560968399047852
    8. 'self' → logprob: -11.435968399047852
    9. ' ' → logprob: -11.810968399047852
    10. '               ' → logprob: -12.060968399047852

Token 232: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740789234638214
    2. 'self' (adapté à ' self') → logprob: -0.974078893661499
    3. '           ' → logprob: -13.224079132080078
    4. '       ' → logprob: -16.849079132080078
    5. '	self' → logprob: -16.849079132080078
    6. ' ' → logprob: -17.599079132080078
    7. '   ' → logprob: -17.849079132080078
    8. '        ' → logprob: -17.974079132080078
    9. '            ' → logprob: -18.849079132080078
    10. '               ' → logprob: -19.099079132080078

Token 233: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.08194742351770401
    2. '.' → logprob: -2.5819473266601562
    3. 'root' → logprob: -5.831947326660156
    4. ' .' → logprob: -9.456947326660156
    5. ' root' → logprob: -10.331947326660156
    6. '=root' → logprob: -12.206947326660156
    7. '._' → logprob: -13.581947326660156
    8. '	root' → logprob: -14.331947326660156
    9. '[root' → logprob: -14.581947326660156
    10. '.
' → logprob: -14.831947326660156

Token 234: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022443771362305
    2. ' =' → logprob: -1.910224437713623
    3. '=node' → logprob: -15.410224914550781
    4. '=None' → logprob: -17.66022491455078
    5. '＝' → logprob: -18.28522491455078
    6. '=

' → logprob: -18.78522491455078
    7. ' ' → logprob: -19.16022491455078
    8. ')' → logprob: -19.41022491455078
    9. '=create' → logprob: -19.53522491455078
    10. ' is' → logprob: -19.53522491455078

Token 235: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2519293427467346
    2. ' node' → logprob: -1.5019292831420898
    3. 'Node' → logprob: -16.376930236816406
    4. '	node' → logprob: -16.501930236816406
    5. '(node' → logprob: -16.751930236816406
    6. '_node' → logprob: -19.251930236816406
    7. ' ' → logprob: -19.251930236816406
    8. '   ' → logprob: -19.501930236816406
    9. '[node' → logprob: -19.501930236816406
    10. '=node' → logprob: -19.501930236816406

Token 236: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005292338784784079
    2. '       ' → logprob: -5.2552924156188965
    3. 'return' → logprob: -10.505291938781738
    4. '
' → logprob: -11.630291938781738
    5. '   ' → logprob: -11.755291938781738
    6. '               ' → logprob: -12.005291938781738
    7. ' return' → logprob: -13.005291938781738
    8. 'else' → logprob: -14.130291938781738
    9. '            
' → logprob: -14.130291938781738
    10. '        
' → logprob: -14.255291938781738

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009801539592444897
    2. '       ' → logprob: -4.634801387786865
    3. 'return' → logprob: -10.509801864624023
    4. '   ' → logprob: -12.009801864624023
    5. ' return' → logprob: -12.509801864624023
    6. '               ' → logprob: -12.884801864624023
    7. '	       ' → logprob: -13.259801864624023
    8. '		' → logprob: -13.884801864624023
    9. '
' → logprob: -14.009801864624023
    10. '          ' → logprob: -14.259801864624023

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02469567395746708
    2. ' return' → logprob: -4.274695873260498
    3. '           ' → logprob: -4.649695873260498
    4. 'node' → logprob: -7.024695873260498
    5. ' node' → logprob: -10.77469539642334
    6. '{return' → logprob: -14.77469539642334
    7. '	return' → logprob: -15.02469539642334
    8. '
' → logprob: -15.27469539642334
    9. '       ' → logprob: -15.39969539642334
    10. 'eturn' → logprob: -15.64969539642334

Token 239: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4532938003540039
    2. '
' → logprob: -1.453293800354004
    3. ' current' → logprob: -2.328293800354004
    4. '        
' → logprob: -4.703293800354004
    5. 'current' → logprob: -4.828293800354004
    6. ' if' → logprob: -4.953293800354004
    7. '    
' → logprob: -5.828293800354004
    8. ' 
' → logprob: -6.203293800354004
    9. '   ' → logprob: -6.453293800354004
    10. 'if' → logprob: -7.578293800354004

Token 240: '       ' (ID: 309)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03528998792171478
    2. '       ' → logprob: -4.285289764404297
    3. ' current' → logprob: -4.535289764404297
    4. 'curr' → logprob: -4.660289764404297
    5. 'cur' → logprob: -7.660289764404297
    6. 'if' → logprob: -9.160289764404297
    7. ' curr' → logprob: -9.410289764404297
    8. 'else' → logprob: -11.035289764404297
    9. '   ' → logprob: -11.160289764404297
    10. 'def' → logprob: -12.035289764404297

Token 241: ' cur' (ID: 4396)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014645032584667206
    2. 'curr' → logprob: -4.514645099639893
    3. 'cur' (adapté à ' cur') → logprob: -5.764645099639893
    4. 'if' → logprob: -8.264644622802734
    5. ' current' → logprob: -9.264644622802734
    6. '       ' → logprob: -9.264644622802734
    7. ' curr' → logprob: -12.139644622802734
    8. 'parent' → logprob: -14.139644622802734
    9. '   ' → logprob: -15.264644622802734
    10. ' cur' → logprob: -15.514644622802734

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001515696058049798
    2. '=' → logprob: -6.501515865325928
    3. ' ' → logprob: -11.50151538848877
    4. '_node' → logprob: -13.12651538848877
    5. '=node' → logprob: -14.37651538848877
    6. ' node' → logprob: -15.75151538848877
    7. '  ' → logprob: -16.126516342163086
    8. 'Node' → logprob: -16.126516342163086
    9. ',' → logprob: -16.126516342163086
    10. 'node' → logprob: -16.751516342163086

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009114635176956654
    2. ' self' → logprob: -7.000911235809326
    3. '
' → logprob: -17.750911712646484
    4. ' ' → logprob: -18.125911712646484
    5. '   ' → logprob: -18.750911712646484
    6. '	self' → logprob: -18.875911712646484
    7. '(self' → logprob: -19.500911712646484
    8. '       ' → logprob: -19.750911712646484
    9. '=self' → logprob: -19.750911712646484
    10. '[self' → logprob: -19.875911712646484

Token 244: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.02978948876261711
    2. 'root' → logprob: -3.529789447784424
    3. ' root' → logprob: -10.404789924621582
    4. '.ro' → logprob: -12.279789924621582
    5. '.' → logprob: -12.654789924621582
    6. '	root' → logprob: -14.904789924621582
    7. '=root' → logprob: -15.779789924621582
    8. '[root' → logprob: -15.779789924621582
    9. '_root' → logprob: -16.404788970947266
    10. ' .' → logprob: -16.654788970947266

Token 245: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7772958278656006
    2. 'while' → logprob: -1.2772958278656006
    3. ' while' → logprob: -1.9022958278656006
    4. '       ' → logprob: -2.4022958278656006
    5. ' 
' → logprob: -4.77729606628418
    6. '        
' → logprob: -4.90229606628418
    7. '	while' → logprob: -6.65229606628418
    8. '<|end|>' → logprob: -6.90229606628418
    9. '  
' → logprob: -7.02729606628418
    10. '        ' → logprob: -7.27729606628418

Token 246: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.12900303304195404
    2. ' 
' → logprob: -2.7540030479431152
    3. '       ' → logprob: -3.1290030479431152
    4. 'while' → logprob: -5.379003047943115
    5. '        
' → logprob: -5.629003047943115
    6. '    ' → logprob: -6.379003047943115
    7. '        ' → logprob: -6.379003047943115
    8. ' ' → logprob: -7.254003047943115
    9. '     
' → logprob: -7.879003047943115
    10. '    
' → logprob: -8.129002571105957

Token 247: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.12716075778007507
    2. ' while' → logprob: -2.1271607875823975
    3. '       ' → logprob: -8.377161026000977
    4. '	while' → logprob: -14.002161026000977
    5. '        
' → logprob: -14.377161026000977
    6. '   ' → logprob: -14.502161026000977
    7. '        ' → logprob: -15.127161026000977
    8. ' 
' → logprob: -15.377161026000977
    9. '    ' → logprob: -15.752161026000977
    10. '           ' → logprob: -17.252161026000977

Token 248: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.006259262096136808
    2. 'True' → logprob: -5.506259441375732
    3. ' cur' → logprob: -6.256259441375732
    4. ' True' → logprob: -8.256258964538574
    5. '   ' → logprob: -16.13125991821289
    6. '(cur' → logprob: -16.13125991821289
    7. '	cur' → logprob: -16.75625991821289
    8. 'Cur' → logprob: -16.88125991821289
    9. '(True' → logprob: -17.25625991821289
    10. ' ' → logprob: -17.25625991821289

Token 249: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0918072834610939
    2. '.val' → logprob: -2.9668073654174805
    3. '.' → logprob: -3.9668073654174805
    4. ' and' → logprob: -4.9668073654174805
    5. ' is' → logprob: -5.2168073654174805
    6. ' :' → logprob: -5.8418073654174805
    7. ' ' → logprob: -7.3418073654174805
    8. ' .' → logprob: -7.8418073654174805
    9. 'val' → logprob: -8.46680736541748
    10. ' !=' → logprob: -8.46680736541748

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4784158170223236
    2. ' if' → logprob: -1.728415846824646
    3. '       ' → logprob: -2.1034157276153564
    4. '        ' → logprob: -2.8534157276153564
    5. 'if' → logprob: -3.8534157276153564
    6. '    ' → logprob: -7.2284159660339355
    7. '            ' → logprob: -8.478415489196777
    8. '   ' → logprob: -8.478415489196777
    9. '	       ' → logprob: -8.728415489196777
    10. '<|end|>' → logprob: -9.478415489196777

Token 251: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2544144093990326
    2. ' if' → logprob: -1.504414439201355
    3. '           ' → logprob: -6.0044145584106445
    4. '       ' → logprob: -11.379414558410645
    5. '```' → logprob: -13.879414558410645
    6. '        ' → logprob: -14.129414558410645
    7. '   ' → logprob: -15.129414558410645
    8. '	if' → logprob: -15.254414558410645
    9. '               ' → logprob: -15.504414558410645
    10. '    ' → logprob: -15.504414558410645

Token 252: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.17986783385276794
    2. ' node' → logprob: -1.8048678636550903
    3. 'cur' → logprob: -9.6798677444458
    4. '   ' → logprob: -10.5548677444458
    5. '	node' → logprob: -10.8048677444458
    6. ' cur' → logprob: -11.8048677444458
    7. ' ' → logprob: -13.3048677444458
    8. '    ' → logprob: -13.4298677444458
    9. '           ' → logprob: -13.5548677444458
    10. '(node' → logprob: -14.3048677444458

Token 253: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -11.62501049041748
    3. ' .' → logprob: -13.37501049041748
    4. 'val' → logprob: -15.87501049041748
    5. '.value' → logprob: -19.375011444091797
    6. '.Val' → logprob: -19.500011444091797
    7. '	val' → logprob: -19.750011444091797
    8. '   ' → logprob: -19.750011444091797
    9. ' val' → logprob: -19.875011444091797
    10. '.v' → logprob: -19.875011444091797

Token 254: ' >' (ID: 1424)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0076367976143956184
    2. '<' → logprob: -4.882637023925781
    3. ' >' → logprob: -11.257637023925781
    4. ' ' → logprob: -11.757637023925781
    5. ' <=' → logprob: -12.257637023925781
    6. '<|end|>' → logprob: -13.007637023925781
    7. ' ' → logprob: -14.382637023925781
    8. '   ' → logprob: -14.507637023925781
    9. '<int' → logprob: -14.882637023925781
    10. '>' → logprob: -15.007637023925781

Token 255: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.03805343061685562
    2. 'cur' → logprob: -3.288053512573242
    3. '(cur' → logprob: -12.413053512573242
    4. '	cur' → logprob: -12.538053512573242
    5. '[cur' → logprob: -12.663053512573242
    6. '_cur' → logprob: -14.288053512573242
    7. '.cur' → logprob: -15.163053512573242
    8. 'Cur' → logprob: -15.788053512573242
    9. ' ' → logprob: -16.163053512573242
    10. '-cur' → logprob: -16.413053512573242

Token 256: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.00045069176121614873
    2. '.' → logprob: -7.750450611114502
    3. ' .' → logprob: -10.87545108795166
    4. 'val' → logprob: -14.00045108795166
    5. '.va' → logprob: -17.500450134277344
    6. '	val' → logprob: -17.625450134277344
    7. '.Val' → logprob: -17.875450134277344
    8. '.v' → logprob: -18.000450134277344
    9. ' val' → logprob: -18.250450134277344
    10. ' ' → logprob: -18.375450134277344

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12113745510578156
    2. ':
' → logprob: -2.3711373805999756
    3. '               ' → logprob: -4.246137619018555
    4. ' and' → logprob: -5.871137619018555
    5. '           ' → logprob: -6.121137619018555
    6. '):
' → logprob: -7.746137619018555
    7. ' :' → logprob: -7.996137619018555
    8. '):' → logprob: -8.996137619018555
    9. '<|end|>' → logprob: -8.996137619018555
    10. '            ' → logprob: -9.371137619018555

Token 258: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.021794117987155914
    2. '           ' → logprob: -4.896794319152832
    3. ' if' → logprob: -5.021794319152832
    4. '                
' → logprob: -5.771794319152832
    5. ':
' → logprob: -6.396794319152832
    6. ' 
' → logprob: -7.271794319152832
    7. 'if' → logprob: -7.521794319152832
    8. ' and' → logprob: -7.896794319152832
    9. '            
' → logprob: -8.021794319152832
    10. ':' → logprob: -8.271794319152832

Token 259: ' if' (ID: 538)
  Prédit: ' cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.2742992639541626
    2. ' if' → logprob: -1.8992992639541626
    3. '               ' → logprob: -2.774299144744873
    4. '                
' → logprob: -5.024299144744873
    5. 'cur' → logprob: -5.149299144744873
    6. ' 
' → logprob: -5.274299144744873
    7. 'if' (adapté à ' if') → logprob: -5.274299144744873
    8. '           ' → logprob: -6.024299144744873
    9. '            ' → logprob: -7.149299144744873
    10. '                ' → logprob: -7.524299144744873

Token 260: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.6345916986465454
    2. 'cur' → logprob: -0.8845916986465454
    3. ' not' → logprob: -3.009591579437256
    4. 'not' → logprob: -4.884591579437256
    5. '               ' → logprob: -10.259592056274414
    6. '   ' → logprob: -11.259592056274414
    7. '	cur' → logprob: -11.259592056274414
    8. '                   ' → logprob: -11.634592056274414
    9. '           ' → logprob: -12.009592056274414
    10. '(cur' → logprob: -12.134592056274414

Token 261: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -11.87501049041748
    3. '.left' → logprob: -13.25001049041748
    4. ' .' → logprob: -13.25001049041748
    5. '.next' → logprob: -17.125011444091797
    6. '	right' → logprob: -17.750011444091797
    7. 'right' → logprob: -17.875011444091797
    8. '.Right' → logprob: -18.000011444091797
    9. '[right' → logprob: -18.875011444091797
    10. '.space' → logprob: -19.125011444091797

Token 262: ':
' (ID: 734)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06022816151380539
    2. ':
' → logprob: -3.060228109359741
    3. ':' → logprob: -4.81022834777832
    4. 'is' → logprob: -6.06022834777832
    5. '<|end|>' → logprob: -8.18522834777832
    6. '                   ' → logprob: -8.43522834777832
    7. '               ' → logprob: -9.43522834777832
    8. '):
' → logprob: -9.43522834777832
    9. '=None' → logprob: -9.56022834777832
    10. ' and' → logprob: -9.68522834777832

Token 263: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012195244198665023
    2. ' cur' → logprob: -7.876219749450684
    3. '                    
' → logprob: -8.126219749450684
    4. 'cur' → logprob: -8.251219749450684
    5. '               ' → logprob: -8.501219749450684
    6. '                       ' → logprob: -11.001219749450684
    7. '           ' → logprob: -11.001219749450684
    8. '```' → logprob: -11.501219749450684
    9. ' 
' → logprob: -12.001219749450684
    10. '
' → logprob: -12.001219749450684

Token 264: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.3987356126308441
    2. 'cur' (adapté à ' cur') → logprob: -1.1487356424331665
    3. '                   ' → logprob: -4.523735523223877
    4. '                       ' → logprob: -7.273735523223877
    5. '	cur' → logprob: -9.398736000061035
    6. '_cur' → logprob: -9.523736000061035
    7. '[cur' → logprob: -10.773736000061035
    8. '               ' → logprob: -10.773736000061035
    9. '   ' → logprob: -10.898736000061035
    10. '```' → logprob: -11.773736000061035

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889502614736557
    2. '=' → logprob: -2.4639501571655273
    3. '.right' → logprob: -11.838950157165527
    4. '_right' → logprob: -13.713950157165527
    5. 'right' → logprob: -13.838950157165527
    6. ' ' → logprob: -14.963950157165527
    7. ' right' → logprob: -15.838950157165527
    8. '=current' → logprob: -15.838950157165527
    9. '=None' → logprob: -16.338951110839844
    10. 'Right' → logprob: -16.338951110839844

Token 266: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0788913294672966
    2. ' cur' → logprob: -2.5788912773132324
    3. '	cur' → logprob: -13.95389175415039
    4. '                   ' → logprob: -15.57889175415039
    5. '[cur' → logprob: -15.82889175415039
    6. '.cur' → logprob: -15.82889175415039
    7. '(cur' → logprob: -15.95389175415039
    8. '_cur' → logprob: -16.82889175415039
    9. '               ' → logprob: -17.45389175415039
    10. ' ' → logprob: -17.70389175415039

Token 267: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.6776029699249193e-05
    2. '.' → logprob: -10.62502670288086
    3. ' .' → logprob: -13.12502670288086
    4. '.left' → logprob: -15.25002670288086
    5. 'right' → logprob: -16.37502670288086
    6. '.Right' → logprob: -17.75002670288086
    7. '	right' → logprob: -17.87502670288086
    8. ' ' → logprob: -19.12502670288086
    9. '[right' → logprob: -19.12502670288086
    10. '.r' → logprob: -19.37502670288086

Token 268: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.876193169271573e-05
    2. ' else' → logprob: -9.500088691711426
    3. 'else' → logprob: -12.375088691711426
    4. '                
' → logprob: -12.500088691711426
    5. '                ' → logprob: -13.250088691711426
    6. '                   ' → logprob: -13.500088691711426
    7. '           ' → logprob: -13.750088691711426
    8. '              ' → logprob: -14.375088691711426
    9. '                    
' → logprob: -14.750088691711426
    10. '       ' → logprob: -15.250088691711426

Token 269: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021867557370569557
    2. ' else' → logprob: -8.625218391418457
    3. 'else' → logprob: -10.250218391418457
    4. '           ' → logprob: -13.750218391418457
    5. '                
' → logprob: -13.750218391418457
    6. '                   ' → logprob: -14.000218391418457
    7. '                    
' → logprob: -15.375218391418457
    8. '                ' → logprob: -15.750218391418457
    9. '       ' → logprob: -15.875218391418457
    10. '              ' → logprob: -16.125219345092773

Token 270: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025168104097247124
    2. 'continue' (adapté à ' continue') → logprob: -4.650167942047119
    3. '                   ' → logprob: -4.900167942047119
    4. ' continue' → logprob: -5.400167942047119
    5. ' else' → logprob: -6.275167942047119
    6. 'else' → logprob: -6.900167942047119
    7. '           ' → logprob: -7.900167942047119
    8. '   ' → logprob: -11.650168418884277
    9. '       ' → logprob: -11.900168418884277
    10. ' 
' → logprob: -11.900168418884277

Token 271: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005614925175905228
    2. '                
' → logprob: -7.875561714172363
    3. ' else' → logprob: -9.125561714172363
    4. 'else' → logprob: -10.125561714172363
    5. '           ' → logprob: -10.625561714172363
    6. '
' → logprob: -13.375561714172363
    7. '               
' → logprob: -13.375561714172363
    8. ' 
' → logprob: -13.375561714172363
    9. '                    
' → logprob: -14.000561714172363
    10. '            
' → logprob: -14.375561714172363

Token 272: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008147508488036692
    2. ' else' → logprob: -7.500814914703369
    3. 'else' → logprob: -8.625814437866211
    4. '           ' → logprob: -10.125814437866211
    5. '                
' → logprob: -10.125814437866211
    6. '                ' → logprob: -15.000814437866211
    7. 'elif' → logprob: -15.125814437866211
    8. '               
' → logprob: -15.375814437866211
    9. '                    
' → logprob: -15.500814437866211
    10. '              ' → logprob: -15.500814437866211

Token 273: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007054456975311041
    2. ' else' → logprob: -5.382054328918457
    3. 'else' (adapté à ' else') → logprob: -6.757054328918457
    4. '                
' → logprob: -7.257054328918457
    5. '
' → logprob: -8.132054328918457
    6. '           ' → logprob: -8.507054328918457
    7. 'cur' → logprob: -10.382054328918457
    8. ' cur' → logprob: -11.507054328918457
    9. '                    
' → logprob: -11.632054328918457
    10. ' 
' → logprob: -12.007054328918457

Token 274: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08333274722099304
    2. ':
' → logprob: -2.8333327770233154
    3. ':' → logprob: -4.208332538604736
    4. '               ' → logprob: -5.208332538604736
    5. ' :
' → logprob: -8.333333015441895
    6. ' :' → logprob: -8.583333015441895
    7. '                       ' → logprob: -9.458333015441895
    8. '           ' → logprob: -9.583333015441895
    9. '                ' → logprob: -9.708333015441895
    10. '                    ' → logprob: -10.083333015441895

Token 275: '                   ' (ID: 699)
  Prédit: ' cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.7062004804611206
    2. '                   ' → logprob: -0.9562004804611206
    3. '               ' → logprob: -2.58120059967041
    4. 'cur' → logprob: -3.08120059967041
    5. '                       ' → logprob: -8.08120059967041
    6. '   ' → logprob: -9.70620059967041
    7. '           ' → logprob: -9.95620059967041
    8. '                ' → logprob: -10.08120059967041
    9. ' break' → logprob: -10.83120059967041
    10. '                    ' → logprob: -10.95620059967041

Token 276: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.5791381001472473
    2. ' cur' → logprob: -0.8291381001472473
    3. '                   ' → logprob: -5.829138278961182
    4. '                       ' → logprob: -8.954137802124023
    5. 'break' → logprob: -9.954137802124023
    6. ' break' → logprob: -10.704137802124023
    7. '               ' → logprob: -10.954137802124023
    8. '   ' → logprob: -11.204137802124023
    9. '                    ' → logprob: -12.079137802124023
    10. '           ' → logprob: -12.204137802124023

Token 277: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -3.702754474943504e-05
    2. '.' → logprob: -10.25003719329834
    3. ' .' → logprob: -14.00003719329834
    4. '.left' → logprob: -14.25003719329834
    5. '.Right' → logprob: -16.125036239624023
    6. '	right' → logprob: -19.250036239624023
    7. 'right' → logprob: -20.000036239624023
    8. '.RIGHT' → logprob: -20.375036239624023
    9. '>.' → logprob: -21.125036239624023
    10. '   ' → logprob: -21.375036239624023

Token 278: ',node' (ID: 181125)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014138251543045
    2. '=' → logprob: -1.701413869857788
    3. '=node' → logprob: -15.326414108276367
    4. ' ' → logprob: -15.826414108276367
    5. '=None' → logprob: -16.201414108276367
    6. '   ' → logprob: -18.326414108276367
    7. '    ' → logprob: -18.451414108276367
    8. '.parent' → logprob: -18.451414108276367
    9. ')' → logprob: -18.451414108276367
    10. '.' → logprob: -18.826414108276367

Token 279: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0006734743365086615
    2. '.' → logprob: -7.375673294067383
    3. ' =' → logprob: -11.000673294067383
    4. ' .' → logprob: -11.250673294067383
    5. '_parent' → logprob: -12.750673294067383
    6. 'parent' → logprob: -12.875673294067383
    7. ' parent' → logprob: -13.000673294067383
    8. '.left' → logprob: -13.250673294067383
    9. ' ' → logprob: -13.500673294067383
    10. '=' → logprob: -13.500673294067383

Token 280: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859782010316849
    2. '=' → logprob: -3.048597812652588
    3. ' ' → logprob: -11.548598289489746
    4. '=node' → logprob: -14.923598289489746
    5. ',' → logprob: -15.423598289489746
    6. ' =
' → logprob: -15.798598289489746
    7. '=None' → logprob: -17.42359733581543
    8. ')' → logprob: -17.92359733581543
    9. ' ' → logprob: -18.04859733581543
    10. '=self' → logprob: -18.04859733581543

Token 281: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.201441690325737
    2. 'node' → logprob: -1.7014416456222534
    3. 'cur' → logprob: -11.326441764831543
    4. '(node' → logprob: -11.826441764831543
    5. ' cur' → logprob: -12.451441764831543
    6. '	node' → logprob: -12.951441764831543
    7. ',node' → logprob: -13.701441764831543
    8. '[node' → logprob: -14.701441764831543
    9. '=node' → logprob: -15.451441764831543
    10. '
' → logprob: -15.701441764831543

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09887414425611496
    2. ' ,' → logprob: -2.973874092102051
    3. ' cur' → logprob: -3.598874092102051
    4. 'cur' → logprob: -4.348874092102051
    5. ' ' → logprob: -7.348874092102051
    6. '.cur' → logprob: -7.473874092102051
    7. ',None' → logprob: -7.473874092102051
    8. '[cur' → logprob: -8.09887409210205
    9. ',node' → logprob: -9.09887409210205
    10. '(cur' → logprob: -9.22387409210205

Token 283: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.005233882926404476
    2. ' cur' → logprob: -5.2552337646484375
    3. '[cur' → logprob: -17.380233764648438
    4. '	cur' → logprob: -17.505233764648438
    5. '(cur' → logprob: -18.380233764648438
    6. '                   ' → logprob: -18.755233764648438
    7. '.cur' → logprob: -19.130233764648438
    8. ' ' → logprob: -19.380233764648438
    9. '_cur' → logprob: -19.630233764648438
    10. '               ' → logprob: -20.505233764648438

Token 284: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5191383957862854
    2. 'break' → logprob: -1.5191383361816406
    3. 'return' (adapté à ' return') → logprob: -1.7691383361816406
    4. ' break' → logprob: -4.519138336181641
    5. ' return' → logprob: -5.894138336181641
    6. '               ' → logprob: -6.394138336181641
    7. '	break' → logprob: -9.64413833618164
    8. '           ' → logprob: -9.76913833618164
    9. '                       ' → logprob: -9.89413833618164
    10. '   ' → logprob: -10.14413833618164

Token 287: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002392421243712306
    2. '               ' → logprob: -6.877392292022705
    3. '<|end|>' → logprob: -7.127392292022705
    4. 'elif' → logprob: -8.252392768859863
    5. '            
' → logprob: -9.252392768859863
    6. 'else' → logprob: -10.127392768859863
    7. '          ' → logprob: -10.377392768859863
    8. '       ' → logprob: -10.502392768859863
    9. '```' → logprob: -11.002392768859863
    10. '\n' → logprob: -11.252392768859863

Token 288: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03678625449538231
    2. '               ' → logprob: -4.286786079406738
    3. '<|end|>' → logprob: -4.661786079406738
    4. '       ' → logprob: -4.911786079406738
    5. '          ' → logprob: -6.161786079406738
    6. '            ' → logprob: -7.286786079406738
    7. 'elif' → logprob: -7.786786079406738
    8. '            
' → logprob: -8.036786079406738
    9. '        ' → logprob: -8.161786079406738
    10. 'else' → logprob: -8.536786079406738

Token 289: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.28507500886917114
    2. ' else' → logprob: -1.6600749492645264
    3. '           ' → logprob: -3.4100749492645264
    4. 'if' → logprob: -4.2850751876831055
    5. 'elif' → logprob: -5.4100751876831055
    6. '       ' → logprob: -6.0350751876831055
    7. ' if' → logprob: -6.0350751876831055
    8. '               ' → logprob: -6.6600751876831055
    9. ' elif' → logprob: -8.285075187683105
    10. '            
' → logprob: -8.660075187683105

Token 290: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14493457973003387
    2. ':' → logprob: -2.01993465423584
    3. '               ' → logprob: -6.39493465423584
    4. ' :
' → logprob: -7.64493465423584
    5. '           ' → logprob: -10.01993465423584
    6. ' :' → logprob: -10.26993465423584
    7. ' if' → logprob: -11.26993465423584
    8. ':
' → logprob: -12.39493465423584
    9. ':

' → logprob: -12.64493465423584
    10. ',' → logprob: -13.01993465423584

Token 291: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8693915605545044
    2. 'if' → logprob: -1.1193915605545044
    3. ' if' → logprob: -1.3693915605545044
    4. '           ' → logprob: -10.494391441345215
    5. '```' → logprob: -11.119391441345215
    6. '   ' → logprob: -12.619391441345215
    7. 'cur' → logprob: -12.994391441345215
    8. '                   ' → logprob: -13.869391441345215
    9. '              ' → logprob: -13.994391441345215
    10. '                ' → logprob: -14.119391441345215

Token 292: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014169269241392612
    2. ' if' → logprob: -4.264169216156006
    3. '               ' → logprob: -12.139169692993164
    4. '                   ' → logprob: -15.014169692993164
    5. '           ' → logprob: -16.139169692993164
    6. 'If' → logprob: -17.639169692993164
    7. '```' → logprob: -17.889169692993164
    8. '	if' → logprob: -18.264169692993164
    9. '                ' → logprob: -18.764169692993164
    10. '
' → logprob: -19.389169692993164

Token 293: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.2519455850124359
    2. 'cur' → logprob: -1.5019456148147583
    3. '                   ' → logprob: -11.626945495605469
    4. '               ' → logprob: -12.501945495605469
    5. '(cur' → logprob: -14.001945495605469
    6. '           ' → logprob: -14.251945495605469
    7. '   ' → logprob: -14.376945495605469
    8. '[cur' → logprob: -14.501945495605469
    9. '	cur' → logprob: -14.626945495605469
    10. ' ' → logprob: -15.501945495605469

Token 294: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -12.75000286102295
    3. ' .' → logprob: -16.000003814697266
    4. 'left' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '.Left' → logprob: -18.250003814697266
    7. '.val' → logprob: -18.875003814697266
    8. '.right' → logprob: -19.125003814697266
    9. '       ' → logprob: -20.750003814697266
    10. '.parent' → logprob: -20.875003814697266

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43640148639678955
    2. ':
' → logprob: -1.0614014863967896
    3. '                   ' → logprob: -5.4364013671875
    4. '               ' → logprob: -5.9364013671875
    5. '           ' → logprob: -7.8114013671875
    6. ':

' → logprob: -9.4364013671875
    7. '):
' → logprob: -10.0614013671875
    8. '                ' → logprob: -10.4364013671875
    9. '```' → logprob: -10.8114013671875
    10. '<|end|>' → logprob: -11.0614013671875

Token 296: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03926603123545647
    2. 'cur' → logprob: -3.2892661094665527
    3. ' cur' → logprob: -6.789266109466553
    4. '               ' → logprob: -9.414265632629395
    5. '```' → logprob: -11.789265632629395
    6. '                       ' → logprob: -12.539265632629395
    7. '           ' → logprob: -13.164265632629395
    8. '   ' → logprob: -13.914265632629395
    9. '                  ' → logprob: -14.164265632629395
    10. '                    ' → logprob: -14.789265632629395

Token 297: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0010353106772527099
    2. ' cur' → logprob: -7.001035213470459
    3. '                   ' → logprob: -9.001035690307617
    4. '                       ' → logprob: -15.001035690307617
    5. '               ' → logprob: -15.626035690307617
    6. '	cur' → logprob: -17.376035690307617
    7. '   ' → logprob: -18.376035690307617
    8. '[cur' → logprob: -18.501035690307617
    9. '_cur' → logprob: -19.001035690307617
    10. '           ' → logprob: -19.376035690307617

Token 298: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519350051879883
    2. '=' → logprob: -1.5019350051879883
    3. 'left' → logprob: -12.751935005187988
    4. '.left' → logprob: -13.001935005187988
    5. ' left' → logprob: -14.876935005187988
    6. ' ' → logprob: -15.376935005187988
    7. '_left' → logprob: -17.126934051513672
    8. '   ' → logprob: -17.251934051513672
    9. ',left' → logprob: -17.251934051513672
    10. '＝' → logprob: -17.751934051513672

Token 299: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.029751067981123924
    2. ' cur' → logprob: -3.5297510623931885
    3. '                   ' → logprob: -14.65475082397461
    4. '	cur' → logprob: -17.02975082397461
    5. '[cur' → logprob: -17.15475082397461
    6. '(cur' → logprob: -17.15475082397461
    7. '.cur' → logprob: -17.77975082397461
    8. '_cur' → logprob: -18.15475082397461
    9. '               ' → logprob: -18.27975082397461
    10. '                       ' → logprob: -18.65475082397461

Token 300: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.9361264946837764e-07
    2. 'left' → logprob: -16.75
    3. '.' → logprob: -17.75
    4. '               ' → logprob: -19.75
    5. '                   ' → logprob: -20.0
    6. '           ' → logprob: -20.375
    7. ' .' → logprob: -20.5
    8. '.Left' → logprob: -20.75
    9. ' left' → logprob: -20.875
    10. '   ' → logprob: -21.625

Token 301: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08762571960687637
    2. '                   ' → logprob: -2.587625741958618
    3. 'else' → logprob: -5.462625503540039
    4. ' else' → logprob: -5.462625503540039
    5. '```' → logprob: -9.337625503540039
    6. '           ' → logprob: -9.587625503540039
    7. '                    
' → logprob: -10.837625503540039
    8. '
' → logprob: -11.712625503540039
    9. '       ' → logprob: -12.087625503540039
    10. '                       ' → logprob: -12.462625503540039

Token 302: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028517094906419516
    2. 'else' → logprob: -6.252851486206055
    3. '                   ' → logprob: -7.627851486206055
    4. ' else' → logprob: -7.752851486206055
    5. '```' → logprob: -12.377851486206055
    6. '           ' → logprob: -13.377851486206055
    7. '                    
' → logprob: -15.877851486206055
    8. '
' → logprob: -16.002851486206055
    9. '       ' → logprob: -16.252851486206055
    10. '                
' → logprob: -16.627851486206055

Token 303: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0615459680557251
    2. '                   ' → logprob: -3.3115458488464355
    3. ' continue' → logprob: -3.8115458488464355
    4. '               ' → logprob: -6.8115458488464355
    5. '           ' → logprob: -12.561546325683594
    6. 'else' → logprob: -12.561546325683594
    7. 'continu' → logprob: -12.811546325683594
    8. 'contin' → logprob: -13.561546325683594
    9. '
' → logprob: -13.811546325683594
    10. '       ' → logprob: -14.061546325683594

Token 304: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.013994814362377e-05
    2. 'else' → logprob: -10.50005054473877
    3. ' else' → logprob: -11.12505054473877
    4. '                
' → logprob: -12.87505054473877
    5. '           ' → logprob: -13.25005054473877
    6. '```' → logprob: -13.25005054473877
    7. '                ' → logprob: -14.62505054473877
    8. '              ' → logprob: -14.87505054473877
    9. '                   ' → logprob: -15.37505054473877
    10. '       ' → logprob: -15.37505054473877

Token 305: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.93448489275761e-05
    2. 'else' → logprob: -10.125079154968262
    3. ' else' → logprob: -10.250079154968262
    4. '```' → logprob: -13.875079154968262
    5. '           ' → logprob: -14.000079154968262
    6. '                ' → logprob: -14.250079154968262
    7. '                
' → logprob: -14.375079154968262
    8. '                   ' → logprob: -14.500079154968262
    9. '              ' → logprob: -15.000079154968262
    10. '       ' → logprob: -16.375080108642578

Token 306: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.057160697877407074
    2. 'else' (adapté à ' else') → logprob: -3.0571606159210205
    3. ' else' → logprob: -4.8071608543396
    4. '           ' → logprob: -7.9321608543396
    5. '	else' → logprob: -13.432160377502441
    6. '              ' → logprob: -13.932160377502441
    7. '```' → logprob: -14.182160377502441
    8. '			' → logprob: -14.807160377502441
    9. '
' → logprob: -14.932160377502441
    10. '{
' → logprob: -14.932160377502441

Token 307: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001409282092936337
    2. ':' → logprob: -7.25140905380249
    3. ':
' → logprob: -7.75140905380249
    4. '               ' → logprob: -8.501409530639648
    5. 'cur' → logprob: -11.001409530639648
    6. ' :' → logprob: -11.376409530639648
    7. '                  ' → logprob: -11.626409530639648
    8. '                       ' → logprob: -11.751409530639648
    9. '                    ' → logprob: -12.376409530639648
    10. '   ' → logprob: -12.501409530639648

Token 308: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45199376344680786
    2. 'cur' → logprob: -1.201993703842163
    3. ' cur' → logprob: -2.826993703842163
    4. '               ' → logprob: -5.576993942260742
    5. '   ' → logprob: -10.701993942260742
    6. '                       ' → logprob: -10.826993942260742
    7. '                  ' → logprob: -11.826993942260742
    8. '           ' → logprob: -12.076993942260742
    9. '                    ' → logprob: -12.201993942260742
    10. '                ' → logprob: -12.701993942260742

Token 309: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.000913370808120817
    2. ' cur' → logprob: -7.000913143157959
    3. '                   ' → logprob: -13.250913619995117
    4. '(cur' → logprob: -17.750913619995117
    5. '               ' → logprob: -18.000913619995117
    6. '   ' → logprob: -18.000913619995117
    7. '	cur' → logprob: -18.625913619995117
    8. '[cur' → logprob: -19.000913619995117
    9. '                       ' → logprob: -19.750913619995117
    10. '           ' → logprob: -19.750913619995117

Token 310: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.9266199160483666e-05
    2. ' .' → logprob: -11.500019073486328
    3. '.' → logprob: -11.625019073486328
    4. '.Left' → logprob: -15.750019073486328
    5. '.right' → logprob: -17.250019073486328
    6. 'left' → logprob: -19.625019073486328
    7. '.le' → logprob: -19.750019073486328
    8. '           ' → logprob: -20.000019073486328
    9. '   ' → logprob: -20.500019073486328
    10. ' left' → logprob: -20.750019073486328

Token 311: ',node' (ID: 181125)
  Prédit: ',node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',node' → logprob: -0.006749124266207218
    2. ',' → logprob: -5.006749153137207
    3. '=node' → logprob: -11.006749153137207
    4. ' ,' → logprob: -11.006749153137207
    5. '=' → logprob: -15.131749153137207
    6. ',n' → logprob: -15.631749153137207
    7. ',user' → logprob: -16.38174819946289
    8. '                   ' → logprob: -17.88174819946289
    9. ' =' → logprob: -18.13174819946289
    10. '(node' → logprob: -18.13174819946289

Token 312: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0006376196397468448
    2. '.' → logprob: -7.375637531280518
    3. ' .' → logprob: -12.000638008117676
    4. 'parent' → logprob: -13.125638008117676
    5. ',parent' → logprob: -13.625638008117676
    6. '.Parent' → logprob: -14.500638008117676
    7. '.parents' → logprob: -15.000638008117676
    8. '.user' → logprob: -15.250638008117676
    9. '_parent' → logprob: -15.375638008117676
    10. '	parent' → logprob: -16.25063705444336

Token 313: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759571194648743
    2. ' =' → logprob: -0.8259571194648743
    3. '=node' → logprob: -10.950957298278809
    4. ' ' → logprob: -16.700956344604492
    5. ',' → logprob: -17.325956344604492
    6. ',node' → logprob: -18.075956344604492
    7. '=user' → logprob: -19.200956344604492
    8. '＝' → logprob: -19.325956344604492
    9. ' ,' → logprob: -19.950956344604492
    10. ')' → logprob: -20.825956344604492

Token 314: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.31326404213905334
    2. 'node' → logprob: -1.313264012336731
    3. '(node' → logprob: -13.438263893127441
    4. '	node' → logprob: -15.063263893127441
    5. '[node' → logprob: -15.313263893127441
    6. ',node' → logprob: -15.938263893127441
    7. 'Node' → logprob: -16.188264846801758
    8. '=node' → logprob: -16.813264846801758
    9. '                   ' → logprob: -17.188264846801758
    10. ' ' → logprob: -17.563264846801758

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02341446280479431
    2. 'cur' → logprob: -3.773414373397827
    3. ' cur' → logprob: -8.898414611816406
    4. ' ,' → logprob: -10.398414611816406
    5. '[cur' → logprob: -13.898414611816406
    6. '(cur' → logprob: -15.148414611816406
    7. '	cur' → logprob: -15.148414611816406
    8. '.cur' → logprob: -15.773414611816406
    9. '_cur' → logprob: -16.648414611816406
    10. ',c' → logprob: -17.023414611816406

Token 316: 'cur' (ID: 3264)
  Prédit: 'cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -4.320199877838604e-07
    2. ' cur' → logprob: -15.0
    3. '	cur' → logprob: -22.25
    4. '[cur' → logprob: -24.25
    5. '   ' → logprob: -24.5
    6. '.cur' → logprob: -24.5
    7. '(cur' → logprob: -25.125
    8. '_cur' → logprob: -26.0
    9. '-cur' → logprob: -26.0
    10. 'Cur' → logprob: -26.75

Token 317: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01966233365237713
    2. '
' → logprob: -4.519662380218506
    3. 'return' → logprob: -4.894662380218506
    4. '				' → logprob: -7.894662380218506
    5. '               ' → logprob: -8.144661903381348
    6. ' return' → logprob: -8.394661903381348
    7. '           ' → logprob: -9.769661903381348
    8. '	return' → logprob: -10.644661903381348
    9. '                    
' → logprob: -10.769661903381348
    10. '                       ' → logprob: -11.144661903381348

Token 318: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002074955962598324
    2. 'return' → logprob: -6.502074718475342
    3. '				' → logprob: -8.0020751953125
    4. '               ' → logprob: -9.0020751953125
    5. '           ' → logprob: -10.0020751953125
    6. '
' → logprob: -10.8770751953125
    7. ' return' → logprob: -11.6270751953125
    8. '                       ' → logprob: -11.7520751953125
    9. ':return' → logprob: -12.2520751953125
    10. '<|end|>' → logprob: -12.5020751953125

Token 319: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003188405418768525
    2. ' return' → logprob: -6.003188610076904
    3. '                   ' → logprob: -7.253188610076904
    4. '           ' → logprob: -13.503188133239746
    5. '               ' → logprob: -14.128188133239746
    6. '   ' → logprob: -14.378188133239746
    7. '	return' → logprob: -14.503188133239746
    8. '
' → logprob: -14.503188133239746
    9. '       ' → logprob: -15.128188133239746
    10. ':return' → logprob: -15.628188133239746

Token 320: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.6221619844436646
    2. '   ' → logprob: -0.9971619844436646
    3. '<|end|>' → logprob: -2.497161865234375
    4. '
' → logprob: -5.122161865234375
    5. '  
' → logprob: -5.997161865234375
    6. '        
' → logprob: -6.622161865234375
    7. '<|end|>' → logprob: -7.247161865234375
    8. '    ' → logprob: -7.747161865234375
    9. ' 
' → logprob: -8.372161865234375
    10. '  ' → logprob: -8.622161865234375

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09460147470235825
    2. '    
' → logprob: -3.0946013927459717
    3. '
' → logprob: -3.4696013927459717
    4. 'def' → logprob: -4.719601631164551
    5. ' def' → logprob: -5.719601631164551
    6. '        
' → logprob: -7.594601631164551
    7. '  
' → logprob: -8.21960163116455
    8. '   
' → logprob: -8.71960163116455
    9. '```' → logprob: -8.71960163116455
    10. '<|end|>' → logprob: -8.96960163116455

Token 322: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4273667335510254
    2. 'def' (adapté à ' def') → logprob: -1.3023667335510254
    3. ' def' → logprob: -3.0523667335510254
    4. '    
' → logprob: -4.052366733551025
    5. '
' → logprob: -4.677366733551025
    6. '	def' → logprob: -7.552366733551025
    7. '        
' → logprob: -7.677366733551025
    8. '  
' → logprob: -8.552366256713867
    9. ' ' → logprob: -8.802366256713867
    10. ' 
' → logprob: -8.802366256713867

Token 323: ' find' (ID: 1646)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.3076396882534027
    2. ' delete' → logprob: -1.807639718055725
    3. 'search' → logprob: -2.6826395988464355
    4. ' find' → logprob: -3.8076395988464355
    5. 'delete' → logprob: -4.6826395988464355
    6. ' remove' → logprob: -8.057640075683594
    7. 'find' → logprob: -8.182640075683594
    8. ' insert' → logprob: -8.557640075683594
    9. ' ' → logprob: -10.182640075683594
    10. 'remove' → logprob: -10.432640075683594

Token 324: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001537169300718233
    2. '(' → logprob: -8.875153541564941
    3. 'self' → logprob: -11.375153541564941
    4. '   ' → logprob: -13.625153541564941
    5. ' (' → logprob: -14.625153541564941
    6. 'def' → logprob: -16.000154495239258
    7. '(
' → logprob: -16.125154495239258
    8. '_(' → logprob: -16.250154495239258
    9. ' ' → logprob: -16.500154495239258
    10. '(node' → logprob: -16.875154495239258

Token 325: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.28370317816734314
    2. 'self' → logprob: -1.5337032079696655
    3. ',' → logprob: -4.158703327178955
    4. ')' → logprob: -5.033703327178955
    5. '(' → logprob: -5.158703327178955
    6. ')(' → logprob: -6.158703327178955
    7. ' self' → logprob: -7.783703327178955
    8. '   ' → logprob: -8.408702850341797
    9. '_self' → logprob: -8.908702850341797
    10. '_' → logprob: -9.033702850341797

Token 326: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6189864873886108
    2. 'self' → logprob: -0.8689864873886108
    3. ' val' → logprob: -3.3689866065979004
    4. ' self' → logprob: -4.8689866065979
    5. 'value' → logprob: -11.368986129760742
    6. 'node' → logprob: -11.618986129760742
    7. 'root' → logprob: -12.868986129760742
    8. '   ' → logprob: -13.368986129760742
    9. '_val' → logprob: -14.618986129760742
    10. ' node' → logprob: -14.743986129760742

Token 327: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40905848145484924
    2. ',' → logprob: -1.4090584516525269
    3. '):' → logprob: -2.7840585708618164
    4. '):
' → logprob: -3.6590585708618164
    5. '   ' → logprob: -6.534058570861816
    6. '       ' → logprob: -6.909058570861816
    7. ')' → logprob: -7.534058570861816
    8. ' self' → logprob: -7.784058570861816
    9. '(self' → logprob: -8.034058570861816
    10. ',self' → logprob: -11.034058570861816

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009449340868741274
    2. ' cur' → logprob: -7.250945091247559
    3. ' current' → logprob: -9.250945091247559
    4. 'cur' → logprob: -9.750945091247559
    5. ' if' → logprob: -9.875945091247559
    6. '```' → logprob: -11.750945091247559
    7. '        
' → logprob: -12.375945091247559
    8. ' node' → logprob: -12.375945091247559
    9. 'current' → logprob: -12.875945091247559
    10. '   ' → logprob: -12.875945091247559

Token 329: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0019377965945750475
    2. ' cur' → logprob: -6.2519378662109375
    3. '       ' → logprob: -11.751937866210938
    4. 'current' → logprob: -14.751937866210938
    5. 'curr' → logprob: -15.001937866210938
    6. 'def' → logprob: -15.001937866210938
    7. 'node' → logprob: -15.001937866210938
    8. '   ' → logprob: -18.126937866210938
    9. '
' → logprob: -18.376937866210938
    10. '	cur' → logprob: -19.501937866210938

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009136092266999185
    2. '=' → logprob: -7.000913619995117
    3. ' ' → logprob: -13.375913619995117
    4. ':' → logprob: -14.875913619995117
    5. '.' → logprob: -16.375913619995117
    6. ' =
' → logprob: -16.750913619995117
    7. '<|end|>' → logprob: -17.500913619995117
    8. '    ' → logprob: -17.625913619995117
    9. ',' → logprob: -18.125913619995117
    10. '=self' → logprob: -18.500913619995117

Token 331: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0052342405542731285
    2. ' self' → logprob: -5.255234241485596
    3. '       ' → logprob: -15.505233764648438
    4. '   ' → logprob: -16.380233764648438
    5. '
' → logprob: -16.630233764648438
    6. '	self' → logprob: -16.755233764648438
    7. '=self' → logprob: -16.880233764648438
    8. '(self' → logprob: -17.630233764648438
    9. '[self' → logprob: -17.880233764648438
    10. ' ' → logprob: -18.005233764648438

Token 332: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.00012439649435691535
    2. 'root' → logprob: -9.000123977661133
    3. '.' → logprob: -14.000123977661133
    4. ' root' → logprob: -16.875123977661133
    5. '[root' → logprob: -17.125123977661133
    6. ' .' → logprob: -17.250123977661133
    7. '=root' → logprob: -17.500123977661133
    8. '.ro' → logprob: -18.375123977661133
    9. '	root' → logprob: -18.500123977661133
    10. '_root' → logprob: -18.875123977661133

Token 333: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16592158377170563
    2. '
' → logprob: -2.290921688079834
    3. '        
' → logprob: -3.665921688079834
    4. '<|end|>' → logprob: -4.415921688079834
    5. 'while' → logprob: -4.665921688079834
    6. '  
' → logprob: -6.790921688079834
    7. '	while' → logprob: -7.165921688079834
    8. ' while' → logprob: -7.415921688079834
    9. '    
' → logprob: -7.540921688079834
    10. ' 
' → logprob: -8.040921211242676

Token 334: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005889683496206999
    2. '<|end|>' → logprob: -6.255889892578125
    3. '
' → logprob: -6.505889892578125
    4. '        
' → logprob: -6.880889892578125
    5. 'while' → logprob: -7.380889892578125
    6. '<|end|>' → logprob: -8.255889892578125
    7. ' while' → logprob: -8.630889892578125
    8. '	while' → logprob: -8.880889892578125
    9. '	' → logprob: -10.130889892578125
    10. '        ' → logprob: -10.380889892578125

Token 335: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0012682090746238828
    2. ' while' → logprob: -6.75126838684082
    3. '       ' → logprob: -9.25126838684082
    4. '	while' → logprob: -13.62626838684082
    5. '   ' → logprob: -14.62626838684082
    6. 'While' → logprob: -15.75126838684082
    7. '
' → logprob: -16.25126838684082
    8. '        
' → logprob: -17.12626838684082
    9. '```' → logprob: -17.25126838684082
    10. '        ' → logprob: -19.37626838684082

Token 336: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00861456897109747
    2. ' cur' → logprob: -4.758614540100098
    3. '	cur' → logprob: -19.008615493774414
    4. '(cur' → logprob: -19.883615493774414
    5. '[cur' → logprob: -20.758615493774414
    6. '   ' → logprob: -21.258615493774414
    7. '.cur' → logprob: -22.883615493774414
    8. 'Cur' → logprob: -22.883615493774414
    9. '_cur' → logprob: -23.008615493774414
    10. 'c' → logprob: -24.383615493774414

Token 337: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0017107593594118953
    2. 'and' → logprob: -6.376710891723633
    3. ':' → logprob: -12.251710891723633
    4. '	and' → logprob: -13.376710891723633
    5. ':
' → logprob: -13.751710891723633
    6. ' is' → logprob: -14.876710891723633
    7. ' ' → logprob: -14.876710891723633
    8. '   ' → logprob: -15.626710891723633
    9. ' и' → logprob: -16.251710891723633
    10. ' :' → logprob: -16.376710891723633

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0540103018283844
    2. ':' → logprob: -3.8040103912353516
    3. '       ' → logprob: -4.054010391235352
    4. '<|end|>' → logprob: -5.179010391235352
    5. ':
' → logprob: -6.179010391235352
    6. ' if' → logprob: -6.554010391235352
    7. ' and' → logprob: -6.804010391235352
    8. '        ' → logprob: -7.679010391235352
    9. '<|end|>' → logprob: -7.929010391235352
    10. '   ' → logprob: -8.054010391235352

Token 339: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2751324474811554
    2. ' if' → logprob: -1.775132417678833
    3. 'if' (adapté à ' if') → logprob: -2.650132417678833
    4. '       ' → logprob: -8.525132179260254
    5. '```' → logprob: -9.400132179260254
    6. '   ' → logprob: -9.900132179260254
    7. ' ' → logprob: -10.275132179260254
    8. '               ' → logprob: -11.025132179260254
    9. '        ' → logprob: -11.650132179260254
    10. '	       ' → logprob: -11.900132179260254

Token 340: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.07700838148593903
    2. 'val' → logprob: -3.0770084857940674
    3. ' cur' → logprob: -3.7020084857940674
    4. ' val' → logprob: -5.702008247375488
    5. '	cur' → logprob: -12.702008247375488
    6. '   ' → logprob: -13.202008247375488
    7. ' ' → logprob: -14.202008247375488
    8. '	val' → logprob: -14.827008247375488
    9. '(cur' → logprob: -14.952008247375488
    10. 'curr' → logprob: -15.077008247375488

Token 341: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.37501335144043
    3. ' .' → logprob: -13.25001335144043
    4. 'val' → logprob: -15.12501335144043
    5. ' val' → logprob: -17.37501335144043
    6. '[val' → logprob: -17.50001335144043
    7. '_val' → logprob: -17.62501335144043
    8. '.Val' → logprob: -18.00001335144043
    9. '	val' → logprob: -18.25001335144043
    10. '   ' → logprob: -18.75001335144043

Token 342: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1002165898680687
    2. '==' → logprob: -2.3502166271209717
    3. '=' → logprob: -11.97521686553955
    4. ' ' → logprob: -13.10021686553955
    5. ' =' → logprob: -14.22521686553955
    6. '==
' → logprob: -15.60021686553955
    7. '()==' → logprob: -15.85021686553955
    8. '===' → logprob: -16.350215911865234
    9. ' ' → logprob: -16.350215911865234
    10. ' >' → logprob: -16.350215911865234

Token 343: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.31326186656951904
    2. 'val' → logprob: -1.313261866569519
    3. '	val' → logprob: -15.563261985778809
    4. '[val' → logprob: -19.688261032104492
    5. ',val' → logprob: -19.813261032104492
    6. '_val' → logprob: -20.188261032104492
    7. '.val' → logprob: -20.438261032104492
    8. '(val' → logprob: -20.438261032104492
    9. ' ' → logprob: -22.688261032104492
    10. ' ' → logprob: -23.063261032104492

Token 344: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16531436145305634
    2. ':
' → logprob: -2.0403144359588623
    3. ':return' → logprob: -4.165314197540283
    4. '               ' → logprob: -5.040314197540283
    5. '           ' → logprob: -8.165314674377441
    6. ' return' → logprob: -9.790314674377441
    7. '):
' → logprob: -11.915314674377441
    8. 'return' → logprob: -12.165314674377441
    9. ' :' → logprob: -12.165314674377441
    10. '            ' → logprob: -12.290314674377441

Token 345: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03395571932196617
    2. ' return' → logprob: -3.4089558124542236
    3. 'return' → logprob: -8.158955574035645
    4. '           ' → logprob: -11.783955574035645
    5. '                
' → logprob: -12.158955574035645
    6. ' 
' → logprob: -12.408955574035645
    7. '                ' → logprob: -13.408955574035645
    8. '                   ' → logprob: -13.658955574035645
    9. ' ' → logprob: -13.908955574035645
    10. ':return' → logprob: -14.783955574035645

Token 346: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6383717656135559
    2. ' return' → logprob: -1.1383717060089111
    3. '               ' → logprob: -1.8883717060089111
    4. '                   ' → logprob: -9.138371467590332
    5. '	return' → logprob: -10.013371467590332
    6. '           ' → logprob: -10.638371467590332
    7. '{return' → logprob: -12.263371467590332
    8. ':return' → logprob: -12.263371467590332
    9. '   ' → logprob: -13.138371467590332
    10. '                ' → logprob: -14.388371467590332

Token 347: ' "' (ID: 392)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.02324547804892063
    2. ' cur' → logprob: -3.7732455730438232
    3. '	cur' → logprob: -19.648244857788086
    4. '[cur' → logprob: -20.523244857788086
    5. '(cur' → logprob: -20.648244857788086
    6. '.cur' → logprob: -22.023244857788086
    7. 'curr' → logprob: -22.773244857788086
    8. '_cur' → logprob: -22.898244857788086
    9. 'Cur' → logprob: -23.273244857788086
    10. '-cur' → logprob: -24.523244857788086

Token 348: 'yes' (ID: 6763)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -9.615255839889869e-05
    2. ' cur' → logprob: -9.250096321105957
    3. '	cur' → logprob: -20.25009536743164
    4. '(cur' → logprob: -20.87509536743164
    5. '[cur' → logprob: -21.87509536743164
    6. '.cur' → logprob: -22.50009536743164
    7. 'curr' → logprob: -22.62509536743164
    8. 'Cur' → logprob: -22.62509536743164
    9. '_cur' → logprob: -23.12509536743164
    10. ' ' → logprob: -23.75009536743164

Token 349: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0001596771035110578
    2. '"
' → logprob: -9.00015926361084
    3. ' "' → logprob: -10.37515926361084
    4. '\n' → logprob: -12.75015926361084
    5. '"value' → logprob: -14.87515926361084
    6. '"user' → logprob: -15.12515926361084
    7. '",' → logprob: -15.25015926361084
    8. '
' → logprob: -15.62515926361084
    9. '```' → logprob: -15.62515926361084
    10. '"class' → logprob: -15.75015926361084

Token 350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006677598576061428
    2. '            
' → logprob: -7.875667572021484
    3. ' elif' → logprob: -9.125667572021484
    4. 'elif' → logprob: -9.750667572021484
    5. '            ' → logprob: -10.000667572021484
    6. '               ' → logprob: -10.250667572021484
    7. '       ' → logprob: -11.000667572021484
    8. '        ' → logprob: -12.500667572021484
    9. '    
' → logprob: -12.625667572021484
    10. '          ' → logprob: -12.875667572021484

Token 351: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11228959262371063
    2. ' elif' → logprob: -2.6122896671295166
    3. 'elif' (adapté à ' elif') → logprob: -3.6122896671295166
    4. ' if' → logprob: -5.2372894287109375
    5. '       ' → logprob: -8.362289428710938
    6. 'if' → logprob: -8.612289428710938
    7. ' else' → logprob: -9.862289428710938
    8. '            
' → logprob: -10.862289428710938
    9. '               ' → logprob: -11.112289428710938
    10. '   ' → logprob: -11.987289428710938

Token 352: ' cur' (ID: 4396)
  Prédit: ' val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6300247311592102
    2. ' cur' → logprob: -1.6300246715545654
    3. 'val' → logprob: -1.8800246715545654
    4. 'cur' → logprob: -2.1300246715545654
    5. '	cur' → logprob: -10.880024909973145
    6. '	val' → logprob: -11.005024909973145
    7. ' ' → logprob: -11.442524909973145
    8. '   ' → logprob: -11.692524909973145
    9. ' ' → logprob: -12.505024909973145
    10. '(cur' → logprob: -12.630024909973145

Token 353: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -6.64708495605737e-05
    2. '.' → logprob: -9.625066757202148
    3. ' .' → logprob: -15.250066757202148
    4. 'val' → logprob: -17.00006675720215
    5. '.Val' → logprob: -17.50006675720215
    6. '[val' → logprob: -17.87506675720215
    7. '	val' → logprob: -18.87506675720215
    8. '.left' → logprob: -19.12506675720215
    9. '>.' → logprob: -19.50006675720215
    10. '.value' → logprob: -19.62506675720215

Token 354: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.12239276617765427
    2. ' <' → logprob: -2.7473926544189453
    3. '>' → logprob: -2.9973926544189453
    4. '<' → logprob: -6.747392654418945
    5. ' ' → logprob: -11.497392654418945
    6. ' >
' → logprob: -13.872392654418945
    7. ' ' → logprob: -14.247392654418945
    8. '   ' → logprob: -14.872392654418945
    9. '><' → logprob: -15.497392654418945
    10. ' greater' → logprob: -16.247392654418945

Token 355: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.014163863845169544
    2. 'val' → logprob: -4.264163970947266
    3. '	val' → logprob: -15.014163970947266
    4. '[val' → logprob: -17.639163970947266
    5. '(val' → logprob: -18.014163970947266
    6. ',val' → logprob: -18.139163970947266
    7. '.val' → logprob: -19.264163970947266
    8. '_val' → logprob: -19.389163970947266
    9. '    ' → logprob: -21.264163970947266
    10. ' ' → logprob: -21.389163970947266

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16259385645389557
    2. ':
' → logprob: -1.9125938415527344
    3. '           ' → logprob: -6.412593841552734
    4. '               ' → logprob: -7.787593841552734
    5. ',' → logprob: -8.912593841552734
    6. '       ' → logprob: -10.037593841552734
    7. ' and' → logprob: -10.412593841552734
    8. '):
' → logprob: -10.787593841552734
    9. ' :' → logprob: -10.912593841552734
    10. '<|end|>' → logprob: -11.037593841552734

Token 357: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034680943936109543
    2. ' cur' → logprob: -6.628468036651611
    3. '           ' → logprob: -7.003468036651611
    4. '
' → logprob: -7.253468036651611
    5. '                
' → logprob: -8.87846851348877
    6. ' 
' → logprob: -9.00346851348877
    7. 'cur' → logprob: -9.62846851348877
    8. '[cur' → logprob: -10.37846851348877
    9. '            
' → logprob: -10.50346851348877
    10. '    
' → logprob: -10.62846851348877

Token 358: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.3910066485404968
    2. 'cur' (adapté à ' cur') → logprob: -1.1410067081451416
    3. '               ' → logprob: -5.5160064697265625
    4. '                   ' → logprob: -9.641006469726562
    5. '           ' → logprob: -10.391006469726562
    6. '	cur' → logprob: -12.141006469726562
    7. '[cur' → logprob: -13.141006469726562
    8. '   ' → logprob: -14.766006469726562
    9. '.cur' → logprob: -14.891006469726562
    10. '
' → logprob: -15.016006469726562

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061967797577381134
    2. '=' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.311967849731445
    4. '.' → logprob: -16.811967849731445
    5. '.left' → logprob: -17.686967849731445
    6. '=current' → logprob: -18.061967849731445
    7. '=cut' → logprob: -18.686967849731445
    8. ',' → logprob: -18.686967849731445
    9. '.=' → logprob: -18.936967849731445
    10. 'left' → logprob: -19.061967849731445

Token 360: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1269282102584839
    2. ' cur' → logprob: -2.1269283294677734
    3. '	cur' → logprob: -16.251928329467773
    4. '[cur' → logprob: -18.001928329467773
    5. '.cur' → logprob: -18.251928329467773
    6. '(cur' → logprob: -18.626928329467773
    7. '_cur' → logprob: -18.751928329467773
    8. ' ' → logprob: -20.126928329467773
    9. '           ' → logprob: -20.751928329467773
    10. '-cur' → logprob: -21.001928329467773

Token 361: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.796184723294573e-06
    2. '.right' → logprob: -12.250005722045898
    3. '.' → logprob: -14.125005722045898
    4. '.Left' → logprob: -15.875005722045898
    5. ' .' → logprob: -16.8750057220459
    6. 'left' → logprob: -18.6250057220459
    7. '.val' → logprob: -19.2500057220459
    8. '.le' → logprob: -19.5000057220459
    9. '.parent' → logprob: -19.8750057220459
    10. '.LEFT' → logprob: -20.3750057220459

Token 362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001468080561608076
    2. 'else' → logprob: -6.876468181610107
    3. ' else' → logprob: -7.751468181610107
    4. '
' → logprob: -13.00146770477295
    5. '            
' → logprob: -14.25146770477295
    6. 'elif' → logprob: -14.62646770477295
    7. '    
' → logprob: -14.87646770477295
    8. '       ' → logprob: -15.00146770477295
    9. '               ' → logprob: -15.25146770477295
    10. '```' → logprob: -15.37646770477295

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0060815452598035336
    2. ' else' → logprob: -5.631081581115723
    3. 'else' → logprob: -6.006081581115723
    4. '```' → logprob: -12.256081581115723
    5. '            
' → logprob: -13.131081581115723
    6. '		' → logprob: -13.131081581115723
    7. '               ' → logprob: -13.256081581115723
    8. '	else' → logprob: -13.381081581115723
    9. 'elif' → logprob: -14.006081581115723
    10. '	       ' → logprob: -14.506081581115723

Token 364: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.392780065536499
    2. ' else' → logprob: -1.142780065536499
    3. '           ' → logprob: -5.142780303955078
    4. '       ' → logprob: -10.142780303955078
    5. '	else' → logprob: -11.517780303955078
    6. '   ' → logprob: -15.142780303955078
    7. 'elif' → logprob: -15.642780303955078
    8. '_else' → logprob: -15.642780303955078
    9. '```' → logprob: -16.267780303955078
    10. '               ' → logprob: -16.642780303955078

Token 365: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028113767504692078
    2. ':' → logprob: -4.028113842010498
    3. ':
' → logprob: -4.653113842010498
    4. '           ' → logprob: -8.02811336517334
    5. '                   ' → logprob: -11.65311336517334
    6. '              ' → logprob: -11.90311336517334
    7. '[cur' → logprob: -12.02811336517334
    8. '```' → logprob: -12.15311336517334
    9. '<|end|>' → logprob: -12.27811336517334
    10. '       ' → logprob: -12.65311336517334

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000533732702024281
    2. ' cur' → logprob: -7.625533580780029
    3. 'cur' → logprob: -10.375534057617188
    4. '           ' → logprob: -11.375534057617188
    5. '   ' → logprob: -14.125534057617188
    6. ' curt' → logprob: -14.375534057617188
    7. '                   ' → logprob: -14.375534057617188
    8. '[cur' → logprob: -15.125534057617188
    9. '```' → logprob: -15.375534057617188
    10. '	cur' → logprob: -15.500534057617188

Token 367: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.12911230325698853
    2. ' cur' → logprob: -2.1291122436523438
    3. '               ' → logprob: -6.129112243652344
    4. '           ' → logprob: -13.254112243652344
    5. '   ' → logprob: -14.254112243652344
    6. '	cur' → logprob: -14.504112243652344
    7. '[cur' → logprob: -15.254112243652344
    8. '                   ' → logprob: -16.254112243652344
    9. '(cur' → logprob: -16.754112243652344
    10. ' ' → logprob: -17.254112243652344

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048587486147880554
    2. '=' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.673587799072266
    4. '               ' → logprob: -18.298587799072266
    5. '   ' → logprob: -18.423587799072266
    6. '.right' → logprob: -18.548587799072266
    7. '.' → logprob: -18.798587799072266
    8. '           ' → logprob: -18.923587799072266
    9. 'cur' → logprob: -18.923587799072266
    10. '=
' → logprob: -19.673587799072266

Token 369: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.6931473612785339
    2. ' cur' → logprob: -0.6931473612785339
    3. '           ' → logprob: -17.568147659301758
    4. '	cur' → logprob: -17.693147659301758
    5. '               ' → logprob: -17.818147659301758
    6. '[cur' → logprob: -18.318147659301758
    7. '(cur' → logprob: -18.818147659301758
    8. ' ' → logprob: -20.318147659301758
    9. '.cur' → logprob: -20.693147659301758
    10. 'curr' → logprob: -21.193147659301758

Token 370: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -4.320199877838604e-07
    2. 'right' → logprob: -15.5
    3. '.' → logprob: -16.25
    4. '.left' → logprob: -19.0
    5. ' .' → logprob: -19.5
    6. '	right' → logprob: -20.625
    7. '.Right' → logprob: -21.625
    8. '[right' → logprob: -22.125
    9. ' right' → logprob: -22.5
    10. ',right' → logprob: -22.75

Token 371: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2861286997795105
    2. '<|end|>' → logprob: -1.5361287593841553
    3. 'return' → logprob: -3.6611287593841553
    4. ' return' → logprob: -5.411128520965576
    5. '<|end|>' → logprob: -6.661128520965576
    6. '        
' → logprob: -7.286128520965576
    7. '
' → logprob: -8.036128997802734
    8. '           ' → logprob: -8.286128997802734
    9. '               ' → logprob: -8.786128997802734
    10. '```' → logprob: -8.786128997802734

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021526420023292303
    2. 'return' → logprob: -7.377152442932129
    3. ' return' → logprob: -8.002152442932129
    4. '   ' → logprob: -8.127152442932129
    5. '           ' → logprob: -8.127152442932129
    6. '<|end|>' → logprob: -8.252152442932129
    7. '```' → logprob: -8.627152442932129
    8. '        
' → logprob: -10.252152442932129
    9. '	return' → logprob: -10.377152442932129
    10. '    
' → logprob: -10.877152442932129

Token 373: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.004120669327676296
    2. '       ' → logprob: -5.504120826721191
    3. ' return' → logprob: -10.129120826721191
    4. '	return' → logprob: -13.504120826721191
    5. '   ' → logprob: -14.629120826721191
    6. '{return' → logprob: -15.379120826721191
    7. '```' → logprob: -16.129119873046875
    8. '           ' → logprob: -16.504119873046875
    9. 'eturn' → logprob: -16.629119873046875
    10. ':return' → logprob: -17.004119873046875

Token 374: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006024899892508984
    2. '"No' → logprob: -5.1310248374938965
    3. 'None' → logprob: -9.756025314331055
    4. ' "' → logprob: -10.631025314331055
    5. ''' → logprob: -12.131025314331055
    6. 'no' → logprob: -12.881025314331055
    7. '   ' → logprob: -13.381025314331055
    8. 'No' → logprob: -13.631025314331055
    9. ' ' → logprob: -13.756025314331055
    10. '""' → logprob: -14.256025314331055

Token 375: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -2.6776029699249193e-05
    2. '"' → logprob: -11.25002670288086
    3. ' no' → logprob: -11.87502670288086
    4. 'none' → logprob: -13.37502670288086
    5. '	no' → logprob: -13.62502670288086
    6. '"No' → logprob: -14.00002670288086
    7. ' ' → logprob: -14.37502670288086
    8. '")' → logprob: -14.87502670288086
    9. '(no' → logprob: -14.87502670288086
    10. 'not' → logprob: -15.00002670288086

Token 376: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -3.023293538717553e-05
    2. '```' → logprob: -11.125030517578125
    3. '<|end|>' → logprob: -11.750030517578125
    4. '"
' → logprob: -12.875030517578125
    5. '">' → logprob: -13.250030517578125
    6. '"""' → logprob: -14.000030517578125
    7. '")' → logprob: -14.750030517578125
    8. '"value' → logprob: -15.000030517578125
    9. ')"' → logprob: -15.250030517578125
    10. '"class' → logprob: -15.625030517578125

Token 377: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012157346121966839
    2. '    
' → logprob: -4.512157440185547
    3. '
' → logprob: -7.637157440185547
    4. '<|end|>' → logprob: -7.887157440185547
    5. '        
' → logprob: -9.512157440185547
    6. 'def' → logprob: -9.887157440185547
    7. '```' → logprob: -9.887157440185547
    8. '  
' → logprob: -10.637157440185547
    9. '<|end|>' → logprob: -10.887157440185547
    10. ' def' → logprob: -11.512157440185547

Token 378: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5760567784309387
    2. '   ' → logprob: -0.8260567784309387
    3. ' def' → logprob: -9.076056480407715
    4. '```' → logprob: -12.951056480407715
    5. '	def' → logprob: -14.701056480407715
    6. '
' → logprob: -16.20105743408203
    7. ' ' → logprob: -16.82605743408203
    8. '    
' → logprob: -17.45105743408203
    9. '  ' → logprob: -17.70105743408203
    10. '       ' → logprob: -17.70105743408203

Token 379: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.107425062713446e-06
    2. '   ' → logprob: -12.250006675720215
    3. ' def' → logprob: -13.000006675720215
    4. ' ' → logprob: -20.12500762939453
    5. 'delete' → logprob: -20.25000762939453
    6. '	def' → logprob: -20.50000762939453
    7. '    
' → logprob: -21.62500762939453
    8. '```' → logprob: -21.62500762939453
    9. '  ' → logprob: -22.00000762939453
    10. '
' → logprob: -22.75000762939453

Token 380: ' find' (ID: 1646)
  Prédit: ' delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' delete' → logprob: -0.4298173487186432
    2. 'delete' → logprob: -1.0548173189163208
    3. ' insert' → logprob: -7.929817199707031
    4. 'insert' → logprob: -8.054817199707031
    5. 'remove' → logprob: -8.804817199707031
    6. ' remove' → logprob: -9.054817199707031
    7. 'search' → logprob: -9.929817199707031
    8. ' search' → logprob: -10.679817199707031
    9. 'print' → logprob: -10.929817199707031
    10. ' inorder' → logprob: -11.179817199707031

Token 381: '_node' (ID: 11390)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7599375247955322
    2. '_min' → logprob: -1.1349375247955322
    3. '_parent' → logprob: -1.8849375247955322
    4. '_node' → logprob: -3.6349375247955322
    5. '_max' → logprob: -3.8849375247955322
    6. '_val' → logprob: -5.759937286376953
    7. '(' → logprob: -6.009937286376953
    8. '_value' → logprob: -7.384937286376953
    9. 'min' → logprob: -7.509937286376953
    10. '_root' → logprob: -7.634937286376953

Token 382: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. 'self' → logprob: -15.12501049041748
    4. '   ' → logprob: -17.125009536743164
    5. ' (' → logprob: -18.250009536743164
    6. 'def' → logprob: -18.500009536743164
    7. '=self' → logprob: -18.750009536743164
    8. ' self' → logprob: -18.875009536743164
    9. '	self' → logprob: -19.375009536743164
    10. ' ' → logprob: -19.500009536743164

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0057331291027367115
    2. '(self' → logprob: -5.755733013153076
    3. 'self' → logprob: -6.005733013153076
    4. ' ,' → logprob: -9.630733489990234
    5. ',self' → logprob: -11.505733489990234
    6. '   ' → logprob: -12.130733489990234
    7. ' self' → logprob: -12.630733489990234
    8. '       ' → logprob: -13.255733489990234
    9. ' (' → logprob: -15.130733489990234
    10. '(' → logprob: -15.255733489990234

Token 384: ' val' (ID: 1459)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00942891463637352
    2. 'val' → logprob: -5.259428977966309
    3. ' self' → logprob: -5.509428977966309
    4. ' val' → logprob: -9.134428977966309
    5. '   ' → logprob: -10.634428977966309
    6. '       ' → logprob: -12.759428977966309
    7. '(self' → logprob: -13.509428977966309
    8. 'def' → logprob: -13.634428977966309
    9. '	self' → logprob: -15.009428977966309
    10. '    ' → logprob: -16.759428024291992

Token 385: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5077527761459351
    2. '):
' → logprob: -1.007752776145935
    3. '):' → logprob: -3.7577528953552246
    4. 'self' → logprob: -5.132752895355225
    5. '       ' → logprob: -5.882752895355225
    6. '(self' → logprob: -7.632752895355225
    7. '   ' → logprob: -8.632752418518066
    8. ' self' → logprob: -9.007752418518066
    9. '):
' → logprob: -9.007752418518066
    10. ')' → logprob: -9.507752418518066

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010336864739656448
    2. ' cur' → logprob: -4.635336875915527
    3. 'cur' → logprob: -7.510336875915527
    4. '   ' → logprob: -11.135336875915527
    5. '	cur' → logprob: -11.510336875915527
    6. '```' → logprob: -12.510336875915527
    7. '[cur' → logprob: -13.260336875915527
    8. 'def' → logprob: -14.135336875915527
    9. ' current' → logprob: -14.635336875915527
    10. ' node' → logprob: -14.635336875915527

Token 387: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0019500599009916186
    2. ' cur' → logprob: -6.251950263977051
    3. '       ' → logprob: -10.75195026397705
    4. '   ' → logprob: -18.751949310302734
    5. 'def' → logprob: -19.876949310302734
    6. 'curr' → logprob: -20.001949310302734
    7. '	cur' → logprob: -20.626949310302734
    8. '```' → logprob: -21.501949310302734
    9. '
' → logprob: -21.626949310302734
    10. 'current' → logprob: -21.876949310302734

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017023178515955806
    2. '=' → logprob: -6.376702308654785
    3. ' ' → logprob: -16.2517032623291
    4. '=self' → logprob: -17.2517032623291
    5. '   ' → logprob: -17.8767032623291
    6. ':' → logprob: -18.1267032623291
    7. ' =
' → logprob: -19.3767032623291
    8. ',' → logprob: -19.6267032623291
    9. ' ' → logprob: -19.6267032623291
    10. '=root' → logprob: -19.7517032623291

Token 389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889044284820557
    2. ' self' → logprob: -2.578890323638916
    3. '       ' → logprob: -15.203890800476074
    4. '   ' → logprob: -15.328890800476074
    5. '	self' → logprob: -16.453889846801758
    6. '(self' → logprob: -17.328889846801758
    7. '=self' → logprob: -17.328889846801758
    8. ' ' → logprob: -17.453889846801758
    9. '[self' → logprob: -17.953889846801758
    10. '
' → logprob: -18.953889846801758

Token 390: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.10021918267011642
    2. 'root' → logprob: -2.350219249725342
    3. ' root' → logprob: -11.600218772888184
    4. '_root' → logprob: -13.725218772888184
    5. '=root' → logprob: -13.725218772888184
    6. '[root' → logprob: -14.475218772888184
    7. '	root' → logprob: -15.100218772888184
    8. 'self' → logprob: -15.850218772888184
    9. '(root' → logprob: -16.2252197265625
    10. '.' → logprob: -16.9752197265625

Token 391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033616507425904274
    2. 'while' → logprob: -6.378361701965332
    3. '
' → logprob: -6.503361701965332
    4. ' while' → logprob: -9.378361701965332
    5. '<|end|>' → logprob: -10.378361701965332
    6. '	while' → logprob: -10.878361701965332
    7. '        
' → logprob: -12.128361701965332
    8. '   ' → logprob: -12.503361701965332
    9. '        ' → logprob: -12.753361701965332
    10. '```' → logprob: -13.128361701965332

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031258241506293416
    2. 'while' → logprob: -8.375312805175781
    3. ' while' → logprob: -10.375312805175781
    4. '   ' → logprob: -11.000312805175781
    5. '	while' → logprob: -11.375312805175781
    6. '<|end|>' → logprob: -11.625312805175781
    7. '
' → logprob: -11.750312805175781
    8. '	' → logprob: -13.750312805175781
    9. '```' → logprob: -13.875312805175781
    10. '      ' → logprob: -14.125312805175781

Token 393: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2544182240962982
    2. ' while' → logprob: -1.5044182538986206
    3. '       ' → logprob: -6.00441837310791
    4. '	while' → logprob: -11.12941837310791
    5. '   ' → logprob: -13.25441837310791
    6. '        ' → logprob: -13.87941837310791
    7. '
' → logprob: -14.87941837310791
    8. '    ' → logprob: -15.75441837310791
    9. 'While' → logprob: -16.004417419433594
    10. '           ' → logprob: -16.379417419433594

Token 394: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.10020720958709717
    2. ' cur' → logprob: -2.3502073287963867
    3. '	cur' → logprob: -15.225207328796387
    4. '(cur' → logprob: -15.600207328796387
    5. '[cur' → logprob: -16.10020637512207
    6. 'Cur' → logprob: -17.72520637512207
    7. '.cur' → logprob: -18.22520637512207
    8. '_cur' → logprob: -18.22520637512207
    9. '   ' → logprob: -19.60020637512207
    10. 'c' → logprob: -21.47520637512207

Token 395: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.046293094754219055
    2. 'and' → logprob: -3.171293020248413
    3. ':' → logprob: -6.046293258666992
    4. ':
' → logprob: -7.046293258666992
    5. '   ' → logprob: -10.796293258666992
    6. '<|end|>' → logprob: -12.046293258666992
    7. ' ' → logprob: -12.171293258666992
    8. '.' → logprob: -12.171293258666992
    9. '	and' → logprob: -12.546293258666992
    10. '       ' → logprob: -12.921293258666992

Token 396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005843704100698233
    2. '       ' → logprob: -5.505843639373779
    3. ':' → logprob: -6.630843639373779
    4. '	       ' → logprob: -8.755844116210938
    5. '   ' → logprob: -9.630844116210938
    6. ' and' → logprob: -9.630844116210938
    7. ':
' → logprob: -10.005844116210938
    8. ' if' → logprob: -10.380844116210938
    9. ',' → logprob: -11.255844116210938
    10. '<|end|>' → logprob: -11.380844116210938

Token 397: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4983787536621094
    2. '           ' → logprob: -0.9983787536621094
    3. ' if' → logprob: -3.7483787536621094
    4. '   ' → logprob: -8.37337875366211
    5. '       ' → logprob: -9.24837875366211
    6. '```' → logprob: -10.12337875366211
    7. 'cur' → logprob: -10.62337875366211
    8. '               ' → logprob: -10.99837875366211
    9. '	if' → logprob: -11.12337875366211
    10. ' ' → logprob: -11.37337875366211

Token 398: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.575942873954773
    2. ' cur' → logprob: -0.825942873954773
    3. '(cur' → logprob: -13.575942993164062
    4. '	cur' → logprob: -14.200942993164062
    5. '[cur' → logprob: -14.450942993164062
    6. 'val' → logprob: -14.450942993164062
    7. ' val' → logprob: -15.575942993164062
    8. '   ' → logprob: -16.450942993164062
    9. '.cur' → logprob: -16.700942993164062
    10. '_cur' → logprob: -16.825942993164062

Token 399: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -3.5954712075181305e-05
    2. '.' → logprob: -10.250036239624023
    3. ' .' → logprob: -15.000036239624023
    4. 'val' → logprob: -15.875036239624023
    5. '.Val' → logprob: -17.000036239624023
    6. '[val' → logprob: -18.000036239624023
    7. '	val' → logprob: -18.500036239624023
    8. '​.' → logprob: -19.250036239624023
    9. ' val' → logprob: -19.625036239624023
    10. '`.' → logprob: -19.750036239624023

Token 400: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693819403648376
    2. '==' → logprob: -2.1269381046295166
    3. '=' → logprob: -12.126937866210938
    4. ' ' → logprob: -13.251937866210938
    5. ' ' → logprob: -13.501937866210938
    6. ' =' → logprob: -14.126937866210938
    7. '===' → logprob: -15.626937866210938
    8. '<|end|>' → logprob: -15.751937866210938
    9. '()==' → logprob: -16.001937866210938
    10. '==
' → logprob: -16.001937866210938

Token 401: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.38687145709991455
    2. 'val' → logprob: -1.1368714570999146
    3. '	val' → logprob: -15.511871337890625
    4. '[val' → logprob: -15.761871337890625
    5. '(val' → logprob: -16.386871337890625
    6. ',val' → logprob: -17.136871337890625
    7. '.val' → logprob: -17.761871337890625
    8. '_val' → logprob: -17.886871337890625
    9. 'Val' → logprob: -18.886871337890625
    10. '```' → logprob: -19.886871337890625

Token 402: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15403838455677032
    2. ':' → logprob: -2.029038429260254
    3. '               ' → logprob: -5.029038429260254
    4. ':return' → logprob: -5.654038429260254
    5. '           ' → logprob: -6.779038429260254
    6. '):
' → logprob: -9.904038429260254
    7. '       ' → logprob: -11.029038429260254
    8. ' return' → logprob: -11.529038429260254
    9. 'return' → logprob: -11.529038429260254
    10. ':
' → logprob: -11.779038429260254

Token 403: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007943779928609729
    2. 'return' → logprob: -7.750794410705566
    3. ' return' → logprob: -8.125794410705566
    4. '           ' → logprob: -9.625794410705566
    5. ':return' → logprob: -14.625794410705566
    6. '                   ' → logprob: -15.250794410705566
    7. '{return' → logprob: -15.625794410705566
    8. '
' → logprob: -15.625794410705566
    9. '       ' → logprob: -15.625794410705566
    10. '			' → logprob: -16.00079345703125

Token 404: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7402063608169556
    2. 'return' (adapté à ' return') → logprob: -0.7402063608169556
    3. '               ' → logprob: -3.240206241607666
    4. '           ' → logprob: -4.990206241607666
    5. '	return' → logprob: -12.115206718444824
    6. '{return' → logprob: -13.740206718444824
    7. '   ' → logprob: -13.865206718444824
    8. ':return' → logprob: -14.365206718444824
    9. '       ' → logprob: -14.615206718444824
    10. '                   ' → logprob: -15.490206718444824

Token 405: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.06196768581867218
    2. ' cur' → logprob: -2.811967611312866
    3. '	cur' → logprob: -17.311967849731445
    4. '[cur' → logprob: -19.686967849731445
    5. '(cur' → logprob: -19.936967849731445
    6. ' ' → logprob: -20.811967849731445
    7. '.cur' → logprob: -21.311967849731445
    8. '_cur' → logprob: -21.811967849731445
    9. ' ' → logprob: -23.186967849731445
    10. 'c' → logprob: -23.436967849731445

Token 406: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002568164374679327
    2. '       ' → logprob: -6.127568244934082
    3. '
' → logprob: -8.502568244934082
    4. '            
' → logprob: -9.252568244934082
    5. '               ' → logprob: -10.752568244934082
    6. 'elif' → logprob: -10.877568244934082
    7. '    
' → logprob: -11.877568244934082
    8. '        
' → logprob: -12.002568244934082
    9. '		' → logprob: -12.252568244934082
    10. '          ' → logprob: -12.377568244934082

Token 407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.968312951968983e-06
    2. 'elif' → logprob: -12.125009536743164
    3. '       ' → logprob: -13.500009536743164
    4. '               ' → logprob: -13.625009536743164
    5. ' elif' → logprob: -14.125009536743164
    6. '            
' → logprob: -15.125009536743164
    7. '   ' → logprob: -15.375009536743164
    8. '
' → logprob: -15.500009536743164
    9. '<|end|>' → logprob: -15.625009536743164
    10. '          ' → logprob: -16.750009536743164

Token 408: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.2537957727909088
    2. '           ' → logprob: -2.128795862197876
    3. ' elif' → logprob: -2.253795862197876
    4. '       ' → logprob: -9.378795623779297
    5. '	elif' → logprob: -10.503795623779297
    6. '            
' → logprob: -10.753795623779297
    7. '               ' → logprob: -11.878795623779297
    8. '   ' → logprob: -12.253795623779297
    9. 'else' → logprob: -12.628795623779297
    10. 'el' → logprob: -12.753795623779297

Token 409: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1602514386177063
    2. ' cur' → logprob: -1.9102513790130615
    3. 'val' → logprob: -10.78525161743164
    4. ' val' → logprob: -12.28525161743164
    5. '	cur' → logprob: -14.16025161743164
    6. '(cur' → logprob: -14.41025161743164
    7. '[cur' → logprob: -14.41025161743164
    8. '_cur' → logprob: -16.41025161743164
    9. '.cur' → logprob: -16.66025161743164
    10. '-cur' → logprob: -17.91025161743164

Token 410: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -0.0015437841648235917
    2. '.cur' → logprob: -6.501543998718262
    3. 'val' → logprob: -11.251543998718262
    4. '.' → logprob: -11.376543998718262
    5. 'cur' → logprob: -11.626543998718262
    6. ' .' → logprob: -12.501543998718262
    7. ' cur' → logprob: -12.751543998718262
    8. ' val' → logprob: -14.876543998718262
    9. '[cur' → logprob: -15.001543998718262
    10. '[val' → logprob: -16.001543045043945

Token 411: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0125388503074646
    2. '>' → logprob: -4.387538909912109
    3. ' <' → logprob: -10.88753890991211
    4. ' ' → logprob: -12.13753890991211
    5. '           ' → logprob: -13.26253890991211
    6. '   ' → logprob: -13.76253890991211
    7. '               ' → logprob: -14.63753890991211
    8. '<|end|>' → logprob: -14.63753890991211
    9. ' ' → logprob: -15.26253890991211
    10. '<' → logprob: -15.51253890991211

Token 412: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3868715465068817
    2. 'val' → logprob: -1.136871576309204
    3. '	val' → logprob: -15.261871337890625
    4. '           ' → logprob: -16.636871337890625
    5. '[val' → logprob: -16.636871337890625
    6. '(val' → logprob: -16.636871337890625
    7. ',val' → logprob: -17.511871337890625
    8. '.val' → logprob: -17.761871337890625
    9. '_val' → logprob: -18.511871337890625
    10. '```' → logprob: -18.886871337890625

Token 413: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6430738568305969
    2. ':
' → logprob: -0.7680738568305969
    3. '               ' → logprob: -4.643074035644531
    4. '           ' → logprob: -7.643074035644531
    5. '       ' → logprob: -8.643074035644531
    6. '):
' → logprob: -9.768074035644531
    7. ',' → logprob: -11.143074035644531
    8. ':
' → logprob: -11.143074035644531
    9. ':

' → logprob: -11.643074035644531
    10. '():
' → logprob: -12.268074035644531

Token 414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.7053759519476444e-05
    2. '           ' → logprob: -10.750057220458984
    3. ' cur' → logprob: -10.875057220458984
    4. 'cur' → logprob: -11.250057220458984
    5. '       ' → logprob: -13.375057220458984
    6. '                   ' → logprob: -14.625057220458984
    7. '              ' → logprob: -15.000057220458984
    8. '```' → logprob: -15.000057220458984
    9. '   ' → logprob: -15.125057220458984
    10. '[cur' → logprob: -15.625057220458984

Token 415: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.11484136432409286
    2. 'cur' (adapté à ' cur') → logprob: -2.3648414611816406
    3. '               ' → logprob: -4.239841461181641
    4. '           ' → logprob: -9.11484146118164
    5. '	cur' → logprob: -12.36484146118164
    6. '[cur' → logprob: -13.73984146118164
    7. '                   ' → logprob: -13.98984146118164
    8. ' curt' → logprob: -14.73984146118164
    9. '(cur' → logprob: -14.73984146118164
    10. '.cur' → logprob: -14.98984146118164

Token 416: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692873179912567
    2. '=' → logprob: -2.1269288063049316
    3. '           ' → logprob: -15.251928329467773
    4. '               ' → logprob: -15.251928329467773
    5. ' ' → logprob: -15.751928329467773
    6. '.left' → logprob: -16.751928329467773
    7. '   ' → logprob: -16.876928329467773
    8. '.cur' → logprob: -17.126928329467773
    9. '                   ' → logprob: -17.751928329467773
    10. '＝' → logprob: -17.751928329467773

Token 417: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.3868713676929474
    2. 'cur' → logprob: -1.136871337890625
    3. '	cur' → logprob: -15.511871337890625
    4. '(cur' → logprob: -16.761871337890625
    5. '[cur' → logprob: -16.886871337890625
    6. '.cur' → logprob: -17.636871337890625
    7. '_cur' → logprob: -18.386871337890625
    8. ' ' → logprob: -18.761871337890625
    9. ' ' → logprob: -19.636871337890625
    10. '-cur' → logprob: -19.636871337890625

Token 418: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -5.512236498361744e-07
    2. 'left' → logprob: -14.500000953674316
    3. '.' → logprob: -18.0
    4. '.right' → logprob: -19.25
    5. ' .' → logprob: -20.75
    6. '.le' → logprob: -21.125
    7. '   ' → logprob: -21.25
    8. '.Left' → logprob: -21.5
    9. ' left' → logprob: -21.875
    10. '[left' → logprob: -22.125

Token 419: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004210532642900944
    2. 'else' → logprob: -5.754210472106934
    3. ' else' → logprob: -6.879210472106934
    4. '```' → logprob: -13.129210472106934
    5. '               ' → logprob: -14.629210472106934
    6. '       ' → logprob: -15.004210472106934
    7. '	else' → logprob: -16.00421142578125
    8. '
' → logprob: -16.37921142578125
    9. '		' → logprob: -16.62921142578125
    10. '   ' → logprob: -16.87921142578125

Token 420: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013923770748078823
    2. 'else' → logprob: -6.626392364501953
    3. ' else' → logprob: -9.626392364501953
    4. '```' → logprob: -15.126392364501953
    5. '       ' → logprob: -15.876392364501953
    6. '		' → logprob: -16.376392364501953
    7. '               ' → logprob: -17.251392364501953
    8. '   ' → logprob: -18.126392364501953
    9. '          ' → logprob: -18.376392364501953
    10. 'elif' → logprob: -19.376392364501953

Token 421: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.049149759113788605
    2. '           ' → logprob: -3.299149751663208
    3. ' else' → logprob: -4.549149990081787
    4. '               ' → logprob: -7.674149990081787
    5. '       ' → logprob: -13.299149513244629
    6. '	else' → logprob: -13.424149513244629
    7. '```' → logprob: -13.924149513244629
    8. '
' → logprob: -14.049149513244629
    9. '{
' → logprob: -14.674149513244629
    10. '_else' → logprob: -15.674149513244629

Token 422: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020183324813842773
    2. ':
' → logprob: -6.627018451690674
    3. ':' → logprob: -7.377018451690674
    4. '           ' → logprob: -10.252017974853516
    5. '                   ' → logprob: -11.002017974853516
    6. 'cur' → logprob: -12.002017974853516
    7. '{
' → logprob: -12.877017974853516
    8. '   ' → logprob: -13.627017974853516
    9. '              ' → logprob: -13.877017974853516
    10. '```' → logprob: -14.377017974853516

Token 423: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.054319821298122406
    2. 'cur' → logprob: -3.0543198585510254
    3. ' cur' → logprob: -5.179319858551025
    4. '	cur' → logprob: -9.804319381713867
    5. '           ' → logprob: -11.679319381713867
    6. '[cur' → logprob: -12.179319381713867
    7. '   ' → logprob: -12.429319381713867
    8. '                   ' → logprob: -12.554319381713867
    9. '			' → logprob: -13.179319381713867
    10. ' curt' → logprob: -13.429319381713867

Token 424: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.07890091091394424
    2. ' cur' → logprob: -2.5789008140563965
    3. '               ' → logprob: -11.453901290893555
    4. '           ' → logprob: -15.078901290893555
    5. '	cur' → logprob: -15.578901290893555
    6. '                   ' → logprob: -17.328901290893555
    7. '[cur' → logprob: -17.328901290893555
    8. '(cur' → logprob: -18.328901290893555
    9. '.cur' → logprob: -18.578901290893555
    10. ' ' → logprob: -18.828901290893555

Token 425: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328192353248596
    2. '=' → logprob: -1.3132818937301636
    3. 'cur' → logprob: -11.313282012939453
    4. '   ' → logprob: -13.188282012939453
    5. ' ' → logprob: -13.188282012939453
    6. '.cur' → logprob: -13.313282012939453
    7. '               ' → logprob: -14.438282012939453
    8. '                   ' → logprob: -14.813282012939453
    9. '           ' → logprob: -15.063282012939453
    10. ' cur' → logprob: -15.063282012939453

Token 426: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.2519291639328003
    2. ' cur' → logprob: -1.5019291639328003
    3. '	cur' → logprob: -16.751928329467773
    4. '(cur' → logprob: -18.626928329467773
    5. '.cur' → logprob: -18.751928329467773
    6. '               ' → logprob: -19.126928329467773
    7. '[cur' → logprob: -19.126928329467773
    8. ' ' → logprob: -20.001928329467773
    9. '           ' → logprob: -20.126928329467773
    10. '_cur' → logprob: -20.126928329467773

Token 427: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0011706985533237457
    2. 'right' → logprob: -6.751170635223389
    3. '.' → logprob: -15.626171112060547
    4. '	right' → logprob: -16.501171112060547
    5. '.left' → logprob: -16.876171112060547
    6. ' right' → logprob: -17.751171112060547
    7. '[right' → logprob: -17.751171112060547
    8. ' ' → logprob: -17.751171112060547
    9. '   ' → logprob: -18.001171112060547
    10. ',right' → logprob: -18.876171112060547

Token 428: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003327668644487858
    2. 'return' → logprob: -6.2533278465271
    3. '<|end|>' → logprob: -6.7533278465271
    4. ' return' → logprob: -9.128327369689941
    5. '```' → logprob: -10.128327369689941
    6. '
' → logprob: -10.378327369689941
    7. '   ' → logprob: -11.628327369689941
    8. '               ' → logprob: -11.878327369689941
    9. '           ' → logprob: -11.878327369689941
    10. '<|end|>' → logprob: -12.253327369689941

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009393315413035452
    2. ' return' → logprob: -7.87593936920166
    3. 'return' → logprob: -8.00093936920166
    4. '<|end|>' → logprob: -8.87593936920166
    5. '               ' → logprob: -10.37593936920166
    6. '```' → logprob: -11.00093936920166
    7. '           ' → logprob: -11.62593936920166
    8. '        
' → logprob: -11.75093936920166
    9. '   ' → logprob: -12.50093936920166
    10. '      ' → logprob: -12.62593936920166

Token 430: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008904983988031745
    2. ' return' → logprob: -7.875890731811523
    3. 'None' → logprob: -8.250890731811523
    4. '       ' → logprob: -8.375890731811523
    5. '	return' → logprob: -11.875890731811523
    6. '
' → logprob: -12.000890731811523
    7. '   ' → logprob: -12.750890731811523
    8. ' None' → logprob: -13.875890731811523
    9. '```' → logprob: -14.250890731811523
    10. ':return' → logprob: -14.875890731811523

Token 431: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011047814972698689
    2. ' None' → logprob: -4.511047840118408
    3. '_None' → logprob: -20.26104736328125
    4. '(None' → logprob: -21.26104736328125
    5. ',None' → logprob: -22.13604736328125
    6. 'none' → logprob: -23.13604736328125
    7. '=None' → logprob: -24.88604736328125
    8. '.None' → logprob: -25.26104736328125
    9. '_none' → logprob: -25.26104736328125
    10. '   ' → logprob: -25.38604736328125

Token 432: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.5106558799743652
    2. '
' → logprob: -1.3856558799743652
    3. '   ' → logprob: -2.0106558799743652
    4. '<|end|>' → logprob: -4.760655879974365
    5. '```' → logprob: -6.260655879974365
    6. '  
' → logprob: -6.260655879974365
    7. '   
' → logprob: -6.760655879974365
    8. 'def' → logprob: -6.885655879974365
    9. '        
' → logprob: -8.260656356811523
    10. ' def' → logprob: -8.635656356811523

Token 433: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05727361515164375
    2. 'def' → logprob: -3.4322736263275146
    3. '    
' → logprob: -3.8072736263275146
    4. '
' → logprob: -7.4322733879089355
    5. ' def' → logprob: -8.307273864746094
    6. '        
' → logprob: -8.932273864746094
    7. '```' → logprob: -9.307273864746094
    8. '   
' → logprob: -10.682273864746094
    9. '  
' → logprob: -10.807273864746094
    10. '	def' → logprob: -11.057273864746094

Token 434: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01822005957365036
    2. '   ' → logprob: -4.018219947814941
    3. ' def' → logprob: -9.643219947814941
    4. '    
' → logprob: -12.768219947814941
    5. '	def' → logprob: -13.018219947814941
    6. '
' → logprob: -15.393219947814941
    7. '```' → logprob: -17.393220901489258
    8. '        
' → logprob: -18.393220901489258
    9. '  
' → logprob: -19.018220901489258
    10. '_def' → logprob: -19.643220901489258

Token 435: ' delete' (ID: 6168)
  Prédit: ' delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delete' → logprob: -0.38826751708984375
    2. 'delete' → logprob: -1.1382675170898438
    3. ' remove' → logprob: -7.513267517089844
    4. 'remove' → logprob: -7.888267517089844
    5. '   ' → logprob: -8.138267517089844
    6. 'def' → logprob: -9.763267517089844
    7. ' ' → logprob: -10.013267517089844
    8. ' def' → logprob: -10.388267517089844
    9. 'insert' → logprob: -11.638267517089844
    10. '_delete' → logprob: -11.763267517089844

Token 436: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005399276851676404
    2. '(' → logprob: -7.625539779663086
    3. '_node' → logprob: -10.000539779663086
    4. 'self' → logprob: -12.750539779663086
    5. '_(' → logprob: -13.125539779663086
    6. '_by' → logprob: -14.875539779663086
    7. '_value' → logprob: -15.250539779663086
    8. ' (' → logprob: -15.375539779663086
    9. '_' → logprob: -15.500539779663086
    10. '   ' → logprob: -15.750539779663086

Token 437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2663993835449219
    2. 'self' → logprob: -1.5163993835449219
    3. '(self' → logprob: -4.266399383544922
    4. ' self' → logprob: -8.641399383544922
    5. '   ' → logprob: -10.141399383544922
    6. 'val' → logprob: -10.641399383544922
    7. ',self' → logprob: -10.766399383544922
    8. '       ' → logprob: -10.766399383544922
    9. ' ,' → logprob: -10.766399383544922
    10. '):' → logprob: -11.641399383544922

Token 438: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4761193096637726
    2. 'val' → logprob: -0.9761192798614502
    3. 'self' → logprob: -6.476119518280029
    4. ' self' → logprob: -7.601119518280029
    5. '	val' → logprob: -15.851119041442871
    6. 'node' → logprob: -16.101119995117188
    7. 'value' → logprob: -16.476119995117188
    8. '   ' → logprob: -16.601119995117188
    9. ' node' → logprob: -16.601119995117188
    10. ' ' → logprob: -17.601119995117188

Token 439: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761070251464844
    2. '):' → logprob: -0.8261070251464844
    3. '):
' → logprob: -8.826107025146484
    4. '       ' → logprob: -11.576107025146484
    5. '   ' → logprob: -11.826107025146484
    6. 'self' → logprob: -13.576107025146484
    7. ')' → logprob: -14.326107025146484
    8. ' ):' → logprob: -14.326107025146484
    9. ':' → logprob: -14.451107025146484
    10. ' ):
' → logprob: -14.451107025146484

Token 440: '       ' (ID: 309)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6492941975593567
    2. '       ' → logprob: -0.8992941975593567
    3. ' node' → logprob: -2.649294137954712
    4. '	node' → logprob: -11.524293899536133
    5. '   ' → logprob: -11.649293899536133
    6. '```' → logprob: -12.649293899536133
    7. '_node' → logprob: -13.274293899536133
    8. 'cur' → logprob: -14.024293899536133
    9. ',node' → logprob: -14.149293899536133
    10. 'n' → logprob: -14.149293899536133

Token 441: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.16044874489307404
    2. ' node' → logprob: -1.9104487895965576
    3. '       ' → logprob: -8.410449028015137
    4. 'cur' → logprob: -13.910449028015137
    5. 'n' → logprob: -14.785449028015137
    6. '   ' → logprob: -15.410449028015137
    7. 'target' → logprob: -15.535449028015137
    8. ' cur' → logprob: -16.53544807434082
    9. '	node' → logprob: -16.53544807434082
    10. 'nod' → logprob: -16.66044807434082

Token 442: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009130131802521646
    2. '=' → logprob: -7.000913143157959
    3. '=node' → logprob: -13.6259126663208
    4. ' ' → logprob: -15.2509126663208
    5. ' ' → logprob: -19.250913619995117
    6. ' =
' → logprob: -19.500913619995117
    7. '  ' → logprob: -20.125913619995117
    8. '=self' → logprob: -20.625913619995117
    9. '	' → logprob: -20.750913619995117
    10. '.' → logprob: -20.750913619995117

Token 443: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324547804892063
    2. ' self' → logprob: -3.7732455730438232
    3. '       ' → logprob: -18.648244857788086
    4. '(self' → logprob: -18.773244857788086
    5. '[self' → logprob: -20.023244857788086
    6. '	self' → logprob: -20.148244857788086
    7. '=self' → logprob: -20.398244857788086
    8. '   ' → logprob: -21.898244857788086
    9. ' ' → logprob: -22.023244857788086
    10. 'Self' → logprob: -22.273244857788086

Token 444: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -3.6312321753939614e-05
    2. '.' → logprob: -10.250036239624023
    3. 'find' → logprob: -14.625036239624023
    4. '.findall' → logprob: -15.250036239624023
    5. '.root' → logprob: -16.000036239624023
    6. ' .' → logprob: -17.875036239624023
    7. '=find' → logprob: -18.125036239624023
    8. '.search' → logprob: -19.500036239624023
    9. '.get' → logprob: -19.625036239624023
    10. '.Find' → logprob: -19.750036239624023

Token 445: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.0
    3. '_n' → logprob: -17.25
    4. ' _' → logprob: -19.75
    5. 'node' → logprob: -20.0
    6. '_NODE' → logprob: -20.125
    7. '_nodes' → logprob: -20.75
    8. '_
' → logprob: -20.875
    9. '_Node' → logprob: -20.875
    10. '```' → logprob: -21.5

Token 446: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.625003814697266
    3. ',val' → logprob: -15.750003814697266
    4. '[val' → logprob: -15.875003814697266
    5. '(self' → logprob: -16.375003814697266
    6. ' (' → logprob: -17.375003814697266
    7. 'val' → logprob: -17.625003814697266
    8. '(value' → logprob: -18.000003814697266
    9. '(valor' → logprob: -18.000003814697266
    10. '(var' → logprob: -18.125003814697266

Token 447: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03804539144039154
    2. ')' → logprob: -3.2880454063415527
    3. '       ' → logprob: -13.288044929504395
    4. ' )
' → logprob: -13.788044929504395
    5. ')
' → logprob: -13.788044929504395
    6. ')`
' → logprob: -16.41304588317871
    7. ')

' → logprob: -17.03804588317871
    8. '   ' → logprob: -17.16304588317871
    9. ' )' → logprob: -17.28804588317871
    10. '):
' → logprob: -17.41304588317871

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0087695037946105
    2. ' if' → logprob: -4.883769512176514
    3. 'if' → logprob: -8.133769035339355
    4. '   ' → logprob: -8.258769035339355
    5. '
' → logprob: -8.383769035339355
    6. '<|end|>' → logprob: -9.008769035339355
    7. '```' → logprob: -9.383769035339355
    8. '        
' → logprob: -9.883769035339355
    9. ' ' → logprob: -10.133769035339355
    10. '	if' → logprob: -11.008769035339355

Token 449: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00015622020873706788
    2. '       ' → logprob: -9.25015640258789
    3. ' if' → logprob: -9.75015640258789
    4. '
' → logprob: -13.25015640258789
    5. '	if' → logprob: -19.00015640258789
    6. '   ' → logprob: -19.12515640258789
    7. '        
' → logprob: -19.50015640258789
    8. 'If' → logprob: -19.87515640258789
    9. 'return' → logprob: -20.25015640258789
    10. '```' → logprob: -20.50015640258789

Token 450: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.021392319351434708
    2. 'node' → logprob: -3.896392345428467
    3. ' not' → logprob: -7.146392345428467
    4. 'not' → logprob: -9.771391868591309
    5. '	node' → logprob: -12.646391868591309
    6. '(node' → logprob: -13.896391868591309
    7. ' ' → logprob: -14.396391868591309
    8. '[node' → logprob: -15.646391868591309
    9. 'Node' → logprob: -16.021392822265625
    10. '   ' → logprob: -16.521392822265625

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006587040261365473
    2. ' is' → logprob: -7.3756585121154785
    3. ':
' → logprob: -10.750658988952637
    4. '.' → logprob: -12.625658988952637
    5. '.delete' → logprob: -12.625658988952637
    6. ' :' → logprob: -13.375658988952637
    7. 'is' → logprob: -14.000658988952637
    8. ' and' → logprob: -14.500658988952637
    9. 'and' → logprob: -14.875658988952637
    10. ':`' → logprob: -15.625658988952637

Token 452: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008005362004041672
    2. '       ' → logprob: -5.508005142211914
    3. 'node' → logprob: -6.383005142211914
    4. ' node' → logprob: -6.758005142211914
    5. ':
' → logprob: -8.008005142211914
    6. ' if' → logprob: -8.633005142211914
    7. ' and' → logprob: -8.758005142211914
    8. ':' → logprob: -9.383005142211914
    9. '   ' → logprob: -9.508005142211914
    10. '
' → logprob: -10.133005142211914

Token 453: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' (adapté à ' node') → logprob: -0.06287012994289398
    2. 'if' → logprob: -2.8128700256347656
    3. ' if' → logprob: -7.812870025634766
    4. '           ' → logprob: -8.562870025634766
    5. ' node' → logprob: -8.812870025634766
    6. '       ' → logprob: -9.437870025634766
    7. '#' → logprob: -10.312870025634766
    8. '```' → logprob: -10.562870025634766
    9. '
' → logprob: -11.812870025634766
    10. '            
' → logprob: -12.562870025634766

Token 454: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -7.52919222577475e-05
    2. '.' → logprob: -9.500075340270996
    3. ' .' → logprob: -14.875075340270996
    4. 'delete' → logprob: -17.37507438659668
    5. '.Delete' → logprob: -19.25007438659668
    6. '​.' → logprob: -19.37507438659668
    7. '.DELETE' → logprob: -20.25007438659668
    8. '   ' → logprob: -20.37507438659668
    9. '.remove' → logprob: -20.50007438659668
    10. ').' → logprob: -20.50007438659668

Token 455: '()

' (ID: 5874)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3604623079299927
    2. '<|end|>' → logprob: -1.4854623079299927
    3. '
' → logprob: -2.735462188720703
    4. '       ' → logprob: -6.235462188720703
    5. '          ' → logprob: -6.235462188720703
    6. '<|end|>' → logprob: -6.360462188720703
    7. '               ' → logprob: -7.110462188720703
    8. '            ' → logprob: -7.110462188720703
    9. '            
' → logprob: -7.235462188720703
    10. ' if' → logprob: -7.360462188720703

Token 456: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.42905473709106445
    2. '_' → logprob: -1.4290547370910645
    3. ' _' → logprob: -3.1790547370910645
    4. ' test' → logprob: -3.5540547370910645
    5. ' __' → logprob: -3.5540547370910645
    6. ' example' → logprob: -5.9290547370910645
    7. '__' → logprob: -6.0540547370910645
    8. ' ' → logprob: -6.3040547370910645
    9. 'main' → logprob: -7.4290547370910645
    10. ' tree' → logprob: -7.9290547370910645

Token 458: '():

' (ID: 101746)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0011761783389374614
    2. '():
' → logprob: -6.751176357269287
    3. ' ():' → logprob: -12.501175880432129
    4. '()' → logprob: -13.751175880432129
    5. '():
' → logprob: -13.876175880432129
    6. '():

' → logprob: -16.501176834106445
    7. '_' → logprob: -17.126176834106445
    8. '(' → logprob: -17.376176834106445
    9. '()>' → logprob: -19.251176834106445
    10. '(":' → logprob: -19.876176834106445

Token 459: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12068713456392288
    2. ' bst' → logprob: -2.245687246322632
    3. ' tree' → logprob: -5.620687007904053
    4. ' import' → logprob: -7.120687007904053
    5. 'b' → logprob: -7.120687007904053
    6. ' BST' → logprob: -7.870687007904053
    7. '   ' → logprob: -7.995687007904053
    8. 'import' → logprob: -7.995687007904053
    9. '```' → logprob: -8.370687484741211
    10. 'bst' → logprob: -8.620687484741211

Token 460: ' ##' (ID: 17252)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.0863315612077713
    2. 'tree' → logprob: -3.086331605911255
    3. '   ' → logprob: -4.086331367492676
    4. 'import' → logprob: -4.586331367492676
    5. ' bst' → logprob: -4.836331367492676
    6. 't' → logprob: -6.961331367492676
    7. ' tree' → logprob: -7.461331367492676
    8. 'bt' → logprob: -8.336331367492676
    9. ' import' → logprob: -9.336331367492676
    10. '```' → logprob: -9.961331367492676

Token 461: ' preorder' (ID: 152292)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.22160764038562775
    2. 'tree' → logprob: -1.8466076850891113
    3. ' bst' → logprob: -4.346607685089111
    4. 'b' → logprob: -4.596607685089111
    5. ' tree' → logprob: -5.096607685089111
    6. 'import' → logprob: -5.471607685089111
    7. 't' → logprob: -5.971607685089111
    8. 'bt' → logprob: -6.221607685089111
    9. '   ' → logprob: -6.346607685089111
    10. '#' → logprob: -8.346607208251953

Token 462: ' tree' (ID: 8165)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.935515284538269
    2. ' traversal' → logprob: -0.935515284538269
    3. 'Traversal' → logprob: -2.4355154037475586
    4. '(node' → logprob: -3.1855154037475586
    5. '(tree' → logprob: -3.5605154037475586
    6. '_tr' → logprob: -3.6855154037475586
    7. '(root' → logprob: -4.185515403747559
    8. ' def' → logprob: -4.685515403747559
    9. '   ' → logprob: -5.560515403747559
    10. '_print' → logprob: -6.810515403747559

Token 463: ' walk' (ID: 5229)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08572952449321747
    2. '_nodes' → logprob: -3.0857295989990234
    3. '_tr' → logprob: -4.335729598999023
    4. '=' → logprob: -4.835729598999023
    5. '_list' → logprob: -5.210729598999023
    6. ' traversal' → logprob: -6.335729598999023
    7. 'Traversal' → logprob: -6.460729598999023
    8. '_values' → logprob: -7.085729598999023
    9. 'def' → logprob: -7.210729598999023
    10. '_vals' → logprob: -7.460729598999023

Token 464: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41336771845817566
    2. '   ' → logprob: -1.163367748260498
    3. '(tree' → logprob: -4.288367748260498
    4. ' def' → logprob: -4.788367748260498
    5. '(root' → logprob: -6.038367748260498
    6. '(node' → logprob: -7.913367748260498
    7. ' ' → logprob: -8.41336727142334
    8. '(' → logprob: -8.78836727142334
    9. '    ' → logprob: -9.03836727142334
    10. ',' → logprob: -9.03836727142334

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17808254063129425
    2. 'def' → logprob: -1.9280825853347778
    3. ' def' → logprob: -4.053082466125488
    4. '
' → logprob: -8.178082466125488
    5. '    
' → logprob: -10.178082466125488
    6. '	def' → logprob: -12.928082466125488
    7. '    ' → logprob: -13.178082466125488
    8. '```' → logprob: -13.428082466125488
    9. '       ' → logprob: -13.678082466125488
    10. ')' → logprob: -13.928082466125488

Token 466: ' preorder' (ID: 152292)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5764704346656799
    2. 'def' → logprob: -0.8264704346656799
    3. '   ' → logprob: -7.701470375061035
    4. ' bst' → logprob: -10.076470375061035
    5. ' stack' → logprob: -11.451470375061035
    6. 'root' → logprob: -11.826470375061035
    7. ' root' → logprob: -12.326470375061035
    8. 'bst' → logprob: -12.701470375061035
    9. 'stack' → logprob: -12.951470375061035
    10. ' ' → logprob: -13.076470375061035

Token 467: ' =' (ID: 314)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.45724812150001526
    2. '(root' → logprob: -1.8322480916976929
    3. 'def' → logprob: -2.3322482109069824
    4. '(' → logprob: -3.4572482109069824
    5. '_walk' → logprob: -3.9572482109069824
    6. '_' → logprob: -4.082248210906982
    7. '(tree' → logprob: -4.207248210906982
    8. ' =' → logprob: -4.832248210906982
    9. ' def' → logprob: -5.332248210906982
    10. '_tr' → logprob: -5.582248210906982

Token 468: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.009777337312698364
    2. ' []' → logprob: -4.884777545928955
    3. '[' → logprob: -6.509777545928955
    4. '[]
' → logprob: -8.134777069091797
    5. 'lambda' → logprob: -8.634777069091797
    6. '["' → logprob: -10.009777069091797
    7. '[]

' → logprob: -10.259777069091797
    8. '['' → logprob: -10.509777069091797
    9. ' [' → logprob: -10.634777069091797
    10. ' lambda' → logprob: -10.884777069091797

Token 469: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20801733434200287
    2. 'def' → logprob: -1.833017349243164
    3. ' def' → logprob: -3.583017349243164
    4. '
' → logprob: -9.708017349243164
    5. 'if' → logprob: -11.958017349243164
    6. ' if' → logprob: -12.083017349243164
    7. '	def' → logprob: -12.333017349243164
    8. ' stack' → logprob: -13.208017349243164
    9. '    
' → logprob: -13.958017349243164
    10. '       ' → logprob: -13.958017349243164

Token 470: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004282704088836908
    2. ' def' → logprob: -6.504282474517822
    3. 'stack' → logprob: -6.504282474517822
    4. '   ' → logprob: -7.004282474517822
    5. 'if' → logprob: -8.25428295135498
    6. ' stack' → logprob: -9.37928295135498
    7. 'root' → logprob: -11.12928295135498
    8. 'node' → logprob: -12.75428295135498
    9. '	def' → logprob: -13.12928295135498
    10. 'cur' → logprob: -13.25428295135498

Token 471: ' preorder' (ID: 152292)
  Prédit: ' preorder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preorder' → logprob: -0.022388342767953873
    2. 'pre' → logprob: -4.022388458251953
    3. ' dfs' → logprob: -5.897388458251953
    4. 'dfs' → logprob: -6.772388458251953
    5. ' pre' → logprob: -8.147388458251953
    6. '_pre' → logprob: -11.022388458251953
    7. ' def' → logprob: -11.772388458251953
    8. 'def' → logprob: -11.897388458251953
    9. ' traverse' → logprob: -12.272388458251953
    10. ' traversal' → logprob: -12.772388458251953

Token 472: '_walk' (ID: 143639)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.17252136766910553
    2. '_tr' → logprob: -2.0475213527679443
    3. '_walk' → logprob: -4.047521591186523
    4. '(root' → logprob: -4.672521591186523
    5. 'def' → logprob: -7.297521591186523
    6. '(' → logprob: -7.297521591186523
    7. 'Traversal' → logprob: -8.297521591186523
    8. '(tree' → logprob: -8.422521591186523
    9. 'tr' → logprob: -8.547521591186523
    10. 'walk' → logprob: -8.797521591186523

Token 473: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00039468807517550886
    2. '(root' → logprob: -7.875394821166992
    3. ' (' → logprob: -11.875394821166992
    4. '(tree' → logprob: -12.750394821166992
    5. '(n' → logprob: -12.875394821166992
    6. '(' → logprob: -13.750394821166992
    7. '(self' → logprob: -14.250394821166992
    8. '(current' → logprob: -16.000394821166992
    9. '   ' → logprob: -16.625394821166992
    10. '(x' → logprob: -16.875394821166992

Token 474: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16040518879890442
    2. '):
' → logprob: -1.910405158996582
    3. ':' → logprob: -8.910405158996582
    4. '):
' → logprob: -10.410405158996582
    5. '   ' → logprob: -12.035405158996582
    6. '(node' → logprob: -12.660405158996582
    7. ')' → logprob: -13.035405158996582
    8. ' ):' → logprob: -13.285405158996582
    9. '):

' → logprob: -13.785405158996582
    10. ' ' → logprob: -14.910405158996582

Token 475: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003931384126190096
    2. '
' → logprob: -8.62539291381836
    3. '   ' → logprob: -9.00039291381836
    4. ' if' → logprob: -10.00039291381836
    5. '    
' → logprob: -10.75039291381836
    6. '        
' → logprob: -12.12539291381836
    7. 'if' → logprob: -12.50039291381836
    8. ' ' → logprob: -12.75039291381836
    9. ' 
' → logprob: -13.00039291381836
    10. '<|end|>' → logprob: -13.12539291381836

Token 476: ' preorder' (ID: 152292)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10370144993066788
    2. 'if' → logprob: -2.35370135307312
    3. '   ' → logprob: -6.353701591491699
    4. '       ' → logprob: -6.353701591491699
    5. '    ' → logprob: -12.6037015914917
    6. '	if' → logprob: -12.8537015914917
    7. ' preorder' → logprob: -13.6037015914917
    8. 'pre' → logprob: -14.6037015914917
    9. ' ' → logprob: -15.7287015914917
    10. ' pre' → logprob: -16.103700637817383

Token 477: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4822113811969757
    2. '_walk' → logprob: -0.9822113513946533
    3. 'append' → logprob: -6.107211589813232
    4. ' if' → logprob: -7.107211589813232
    5. 'if' → logprob: -7.232211589813232
    6. '_append' → logprob: -7.357211589813232
    7. '   ' → logprob: -7.482211589813232
    8. '.' → logprob: -7.482211589813232
    9. '_' → logprob: -7.732211589813232
    10. 'walk' → logprob: -8.232211112976074

Token 478: '(str' (ID: 7946)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00012439649435691535
    2. '(' → logprob: -9.000123977661133
    3. '((' → logprob: -14.375123977661133
    4. 'node' → logprob: -15.125123977661133
    5. '('' → logprob: -17.375123977661133
    6. '(f' → logprob: -18.000123977661133
    7. '(
' → logprob: -18.625123977661133
    8. '(str' → logprob: -18.625123977661133
    9. ' (' → logprob: -18.750123977661133
    10. '(n' → logprob: -19.375123977661133

Token 479: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. 'node' → logprob: -18.875003814697266
    4. ' (' → logprob: -19.250003814697266
    5. '(
' → logprob: -19.250003814697266
    6. '[node' → logprob: -20.500003814697266
    7. ',node' → logprob: -20.500003814697266
    8. '((' → logprob: -21.250003814697266
    9. ')' → logprob: -21.375003814697266
    10. ' node' → logprob: -21.500003814697266

Token 480: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -3.8219583075260743e-05
    2. '.' → logprob: -10.250038146972656
    3. ' .' → logprob: -13.000038146972656
    4. ').' → logprob: -14.875038146972656
    5. '.value' → logprob: -16.375038146972656
    6. ')' → logprob: -17.375038146972656
    7. 'val' → logprob: -18.125038146972656
    8. '`.' → logprob: -19.750038146972656
    9. '.valor' → logprob: -19.750038146972656
    10. '.Val' → logprob: -19.875038146972656

Token 481: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.19684475660324097
    2. '))
' → logprob: -2.1968448162078857
    3. ')' → logprob: -2.6968448162078857
    4. '+' → logprob: -10.321845054626465
    5. ')
' → logprob: -10.321845054626465
    6. '))
' → logprob: -10.821845054626465
    7. '))

' → logprob: -11.821845054626465
    8. ' ' → logprob: -12.696845054626465
    9. ' ))' → logprob: -12.696845054626465
    10. ' ))
' → logprob: -12.696845054626465

Token 482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00420982064679265
    2. '   ' → logprob: -5.754209995269775
    3. ' if' → logprob: -7.379209995269775
    4. '
' → logprob: -8.129209518432617
    5. '<|end|>' → logprob: -10.379209518432617
    6. '    
' → logprob: -10.754209518432617
    7. 'if' → logprob: -11.004209518432617
    8. '        
' → logprob: -11.129209518432617
    9. ' ' → logprob: -11.254209518432617
    10. '     ' → logprob: -12.004209518432617

Token 483: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030968016013503075
    2. ' if' → logprob: -3.530967950820923
    3. '       ' → logprob: -6.780968189239502
    4. 'for' → logprob: -9.780967712402344
    5. '   ' → logprob: -10.780967712402344
    6. '	if' → logprob: -12.530967712402344
    7. ' for' → logprob: -14.280967712402344
    8. ' ' → logprob: -17.405967712402344
    9. '
' → logprob: -17.905967712402344
    10. '        
' → logprob: -18.405967712402344

Token 484: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.029750484973192215
    2. ' node' → logprob: -3.5297505855560303
    3. '(node' → logprob: -18.15475082397461
    4. '	node' → logprob: -19.15475082397461
    5. ' ' → logprob: -19.27975082397461
    6. '   ' → logprob: -19.77975082397461
    7. 'not' → logprob: -20.90475082397461
    8. '  ' → logprob: -22.27975082397461
    9. '[node' → logprob: -22.65475082397461
    10. 'n' → logprob: -22.77975082397461

Token 485: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -4.429896944202483e-05
    2. '.' → logprob: -10.250043869018555
    3. ' and' → logprob: -12.250043869018555
    4. ':' → logprob: -13.125043869018555
    5. ' .' → logprob: -13.625043869018555
    6. 'left' → logprob: -14.875043869018555
    7. 'and' → logprob: -15.375043869018555
    8. '.Left' → logprob: -16.125043869018555
    9. '.right' → logprob: -16.625043869018555
    10. ' left' → logprob: -16.875043869018555

Token 486: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009802485816180706
    2. ':
' → logprob: -4.634802341461182
    3. '):' → logprob: -10.75980281829834
    4. ' is' → logprob: -11.13480281829834
    5. '):
' → logprob: -12.75980281829834
    6. '   ' → logprob: -13.38480281829834
    7. ' :' → logprob: -13.63480281829834
    8. ' and' → logprob: -13.63480281829834
    9. ')' → logprob: -13.88480281829834
    10. 'and' → logprob: -13.88480281829834

Token 487: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1038035973906517
    2. ' preorder' → logprob: -2.3538036346435547
    3. 'pre' → logprob: -5.728803634643555
    4. ' pre' → logprob: -8.103803634643555
    5. '(pre' → logprob: -11.103803634643555
    6. '
' → logprob: -12.103803634643555
    7. '       ' → logprob: -12.353803634643555
    8. '	pre' → logprob: -12.853803634643555
    9. '          ' → logprob: -13.103803634643555
    10. '	       ' → logprob: -13.853803634643555

Token 488: ' preorder' (ID: 152292)
  Prédit: ' preorder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preorder' → logprob: -0.04861597716808319
    2. 'pre' → logprob: -3.0486159324645996
    3. '           ' → logprob: -10.673616409301758
    4. ' pre' → logprob: -12.673616409301758
    5. '	pre' → logprob: -14.423616409301758
    6. '               ' → logprob: -14.423616409301758
    7. '       ' → logprob: -14.673616409301758
    8. '   ' → logprob: -14.923616409301758
    9. '(pre' → logprob: -15.923616409301758
    10. ' preload' → logprob: -16.173616409301758

Token 489: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.1472419600977446e-06
    2. 'walk' → logprob: -14.375000953674316
    3. '_' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.125001907348633
    5. '_w' → logprob: -16.625001907348633
    6. '.walk' → logprob: -17.500001907348633
    7. '_visit' → logprob: -17.750001907348633
    8. '     ' → logprob: -17.875001907348633
    9. '
' → logprob: -18.375001907348633
    10. 'Walk' → logprob: -18.625001907348633

Token 490: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -12.75000286102295
    3. '(n' → logprob: -19.000003814697266
    4. 'node' → logprob: -19.125003814697266
    5. '(
' → logprob: -20.125003814697266
    6. ' (' → logprob: -20.250003814697266
    7. '=node' → logprob: -21.750003814697266
    8. ' node' → logprob: -22.000003814697266
    9. ',node' → logprob: -22.000003814697266
    10. '(Node' → logprob: -22.875003814697266

Token 491: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.250001907348633
    3. '.right' → logprob: -15.500001907348633
    4. 'left' → logprob: -15.625001907348633
    5. '.Left' → logprob: -17.375001907348633
    6. '.node' → logprob: -18.875001907348633
    7. ' .' → logprob: -19.125001907348633
    8. '.le' → logprob: -19.375001907348633
    9. ',left' → logprob: -20.875001907348633
    10. '   ' → logprob: -21.000001907348633

Token 492: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023541854694485664
    2. ')' → logprob: -3.7735419273376465
    3. '       ' → logprob: -8.148541450500488
    4. '   ' → logprob: -12.773541450500488
    5. ' )
' → logprob: -13.023541450500488
    6. ')
' → logprob: -13.273541450500488
    7. '           ' → logprob: -15.398541450500488
    8. ')

' → logprob: -15.898541450500488
    9. '               ' → logprob: -17.148542404174805
    10. ' )' → logprob: -17.273542404174805

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.704065213445574e-05
    2. '   ' → logprob: -10.375046730041504
    3. ' if' → logprob: -11.375046730041504
    4. '<|end|>' → logprob: -13.000046730041504
    5. '           ' → logprob: -14.500046730041504
    6. '	' → logprob: -15.125046730041504
    7. '```' → logprob: -15.125046730041504
    8. '      ' → logprob: -15.250046730041504
    9. ' ' → logprob: -15.625046730041504
    10. '
' → logprob: -16.00004768371582

Token 494: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.39585933089256287
    2. '       ' → logprob: -1.1458593606948853
    3. 'if' (adapté à ' if') → logprob: -4.770859241485596
    4. '   ' → logprob: -7.770859241485596
    5. '	if' → logprob: -10.395859718322754
    6. ' ' → logprob: -11.520859718322754
    7. '	' → logprob: -12.895859718322754
    8. '    ' → logprob: -13.020859718322754
    9. '           ' → logprob: -13.020859718322754
    10. '```' → logprob: -13.395859718322754

Token 495: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.03804366663098335
    2. 'node' → logprob: -3.288043737411499
    3. '(node' → logprob: -13.288043975830078
    4. ' ' → logprob: -15.788043975830078
    5. '   ' → logprob: -15.788043975830078
    6. '	node' → logprob: -16.038043975830078
    7. '[node' → logprob: -16.788043975830078
    8. '    ' → logprob: -18.163043975830078
    9. 'Node' → logprob: -18.413043975830078
    10. '=node' → logprob: -18.788043975830078

Token 496: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0003398726985324174
    2. '.' → logprob: -8.00033950805664
    3. ' .' → logprob: -12.87533950805664
    4. 'right' → logprob: -13.50033950805664
    5. '.left' → logprob: -15.50033950805664
    6. '.Right' → logprob: -16.75033950805664
    7. '   ' → logprob: -16.75033950805664
    8. '	right' → logprob: -17.00033950805664
    9. ' ' → logprob: -17.50033950805664
    10. '[right' → logprob: -17.62533950805664

Token 497: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019359003053978086
    2. ':
' → logprob: -6.251935958862305
    3. '):' → logprob: -12.876935958862305
    4. '       ' → logprob: -13.501935958862305
    5. '<|end|>' → logprob: -13.876935958862305
    6. ' :' → logprob: -14.001935958862305
    7. '           ' → logprob: -14.501935958862305
    8. ':

' → logprob: -15.501935958862305
    9. '):
' → logprob: -15.751935958862305
    10. '   ' → logprob: -15.751935958862305

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003074206644669175
    2. ' preorder' → logprob: -6.0030741691589355
    3. '          ' → logprob: -8.253074645996094
    4. 'pre' → logprob: -9.128074645996094
    5. '       ' → logprob: -9.253074645996094
    6. '   ' → logprob: -10.753074645996094
    7. '```' → logprob: -10.753074645996094
    8. 'node' → logprob: -11.253074645996094
    9. '(pre' → logprob: -11.378074645996094
    10. '         ' → logprob: -11.503074645996094

Token 499: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.061988748610019684
    2. ' preorder' → logprob: -2.8119888305664062
    3. '           ' → logprob: -11.061988830566406
    4. '       ' → logprob: -13.936988830566406
    5. '(pre' → logprob: -13.936988830566406
    6. 'preced' → logprob: -14.061988830566406
    7. '	pre' → logprob: -14.061988830566406
    8. ' pre' → logprob: -14.561988830566406
    9. 'post' → logprob: -15.061988830566406
    10. '_pre' → logprob: -15.186988830566406

Token 500: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: 0.0
    2. 'walk' → logprob: -17.125
    3. '_' → logprob: -17.875
    4. '_wrap' → logprob: -18.125
    5. '_visit' → logprob: -18.75
    6. '_w' → logprob: -18.875
    7. '```' → logprob: -19.375
    8. '_write' → logprob: -19.625
    9. 'Walk' → logprob: -19.875
    10. '_wait' → logprob: -20.0

Token 501: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -16.625
    3. '[node' → logprob: -21.375
    4. '=node' → logprob: -21.375
    5. '(root' → logprob: -21.75
    6. ' (' → logprob: -22.375
    7. '(n' → logprob: -22.5
    8. '(Node' → logprob: -22.625
    9. 'node' → logprob: -23.0
    10. '(user' → logprob: -23.125

Token 502: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.12500286102295
    3. ' .' → logprob: -15.62500286102295
    4. 'right' → logprob: -16.125001907348633
    5. '.node' → logprob: -17.250001907348633
    6. '.left' → logprob: -17.375001907348633
    7. '(node' → logprob: -18.625001907348633
    8. ')' → logprob: -18.750001907348633
    9. '(right' → logprob: -19.125001907348633
    10. '.root' → logprob: -19.250001907348633

Token 503: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. '       ' → logprob: -12.750007629394531
    3. ')
' → logprob: -12.750007629394531
    4. '())' → logprob: -13.875007629394531
    5. '()' → logprob: -15.000007629394531
    6. '   ' → logprob: -15.375007629394531
    7. ')#' → logprob: -16.25000762939453
    8. ' )' → logprob: -16.25000762939453
    9. ')

' → logprob: -16.50000762939453
    10. '<|end|>' → logprob: -16.75000762939453

Token 504: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 505: ' ##' (ID: 17252)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.3679944574832916
    2. 'tree' → logprob: -1.8679944276809692
    3. ' bst' → logprob: -2.867994546890259
    4. '   ' → logprob: -2.992994546890259
    5. 'root' → logprob: -4.24299430847168
    6. 'bt' → logprob: -4.74299430847168
    7. 'return' → logprob: -4.86799430847168
    8. ' tree' → logprob: -5.49299430847168
    9. 'import' → logprob: -5.74299430847168
    10. 'b' → logprob: -6.49299430847168

Token 506: ' inorder' (ID: 139692)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.09860339015722275
    2. 'import' → logprob: -3.0986034870147705
    3. 'tree' → logprob: -3.4736034870147705
    4. 'if' → logprob: -5.473603248596191
    5. 't' → logprob: -5.973603248596191
    6. 'n' → logprob: -5.973603248596191
    7. ' bst' → logprob: -5.973603248596191
    8. '   ' → logprob: -6.723603248596191
    9. 'root' → logprob: -6.723603248596191
    10. 'bt' → logprob: -6.723603248596191

Token 507: ' tree' (ID: 8165)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13688567280769348
    2. '=' → logprob: -2.761885643005371
    3. 'def' → logprob: -3.511885643005371
    4. '   ' → logprob: -3.886885643005371
    5. '_walk' → logprob: -4.386885643005371
    6. ' def' → logprob: -7.386885643005371
    7. 'walk' → logprob: -8.011885643005371
    8. '=[]' → logprob: -8.136885643005371
    9. ' traversal' → logprob: -8.636885643005371
    10. ' ' → logprob: -8.886885643005371

Token 508: ' walk' (ID: 5229)
  Prédit: '_walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_walk' → logprob: -0.05034027248620987
    2. ' =' → logprob: -3.425340175628662
    3. 'def' → logprob: -4.800340175628662
    4. 'walk' → logprob: -5.800340175628662
    5. '   ' → logprob: -5.925340175628662
    6. '=' → logprob: -6.675340175628662
    7. '=[]' → logprob: -6.925340175628662
    8. '=[]
' → logprob: -9.42534065246582
    9. '_' → logprob: -10.17534065246582
    10. ' traversal' → logprob: -10.42534065246582

Token 509: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5905131697654724
    2. 'in' → logprob: -0.8405131697654724
    3. ' inorder' → logprob: -4.840513229370117
    4. '=in' → logprob: -5.840513229370117
    5. ' =' → logprob: -6.715513229370117
    6. '_in' → logprob: -7.590513229370117
    7. '    
' → logprob: -7.590513229370117
    8. 'def' → logprob: -7.840513229370117
    9. '[in' → logprob: -7.965513229370117
    10. ' in' → logprob: -8.465513229370117

Token 510: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07889870554208755
    2. 'in' → logprob: -2.5788986682891846
    3. ' inorder' → logprob: -12.078898429870605
    4. ' in' → logprob: -13.828898429870605
    5. '_in' → logprob: -14.203898429870605
    6. '    
' → logprob: -14.703898429870605
    7. '	in' → logprob: -14.953898429870605
    8. ' ' → logprob: -15.078898429870605
    9. 'def' → logprob: -15.828898429870605
    10. '
' → logprob: -16.203899383544922

Token 511: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.2233183042553719e-05
    2. ' inorder' → logprob: -11.500012397766113
    3. 'def' → logprob: -13.625012397766113
    4. '   ' → logprob: -14.375012397766113
    5. 'pre' → logprob: -16.375011444091797
    6. '[in' → logprob: -16.875011444091797
    7. ' in' → logprob: -17.000011444091797
    8. '```' → logprob: -17.000011444091797
    9. '       ' → logprob: -17.750011444091797
    10. 'In' → logprob: -17.750011444091797

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1676780879497528
    2. '=' → logprob: -1.9176781177520752
    3. '_walk' → logprob: -5.167677879333496
    4. '_' → logprob: -6.667677879333496
    5. '=[]' → logprob: -7.917677879333496
    6. ' ' → logprob: -10.292677879333496
    7. '=[]
' → logprob: -10.917677879333496
    8. '   ' → logprob: -10.917677879333496
    9. '=_' → logprob: -11.917677879333496
    10. '_=' → logprob: -12.542677879333496

Token 513: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.3557529857498594e-05
    2. '[]

' → logprob: -11.25002384185791
    3. ' []' → logprob: -11.75002384185791
    4. '[]
' → logprob: -12.87502384185791
    5. '[]}' → logprob: -16.750022888183594
    6. '([]' → logprob: -16.875022888183594
    7. '=[]' → logprob: -17.375022888183594
    8. '[]>' → logprob: -19.250022888183594
    9. '[])' → logprob: -19.250022888183594
    10. '[' → logprob: -19.375022888183594

Token 514: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1280803382396698
    2. '   ' → logprob: -2.128080368041992
    3. '
' → logprob: -6.878080368041992
    4. ' def' → logprob: -9.128080368041992
    5. '    
' → logprob: -12.378080368041992
    6. '```' → logprob: -12.378080368041992
    7. '	def' → logprob: -12.628080368041992
    8. '
' → logprob: -15.503080368041992
    9. ':def' → logprob: -15.503080368041992
    10. '

' → logprob: -15.878080368041992

Token 515: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.625001907348633
    4. '
' → logprob: -21.375001907348633
    5. '	def' → logprob: -21.625001907348633
    6. 'in' → logprob: -22.250001907348633
    7. '```' → logprob: -23.500001907348633
    8. '_def' → logprob: -25.125001907348633
    9. ' ' → logprob: -25.375001907348633
    10. ':def' → logprob: -25.500001907348633

Token 516: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006716555915772915
    2. ' inorder' → logprob: -5.006716728210449
    3. ' in' → logprob: -14.50671672821045
    4. 'def' → logprob: -14.88171672821045
    5. '	in' → logprob: -16.131715774536133
    6. '   ' → logprob: -16.256715774536133
    7. '_in' → logprob: -16.756715774536133
    8. 'inode' → logprob: -17.506715774536133
    9. ' ' → logprob: -18.006715774536133
    10. 'In' → logprob: -18.131715774536133

Token 517: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.1756367712223437e-05
    2. '_' → logprob: -11.750011444091797
    3. '_w' → logprob: -13.500011444091797
    4. '_append' → logprob: -14.625011444091797
    5. '```' → logprob: -14.625011444091797
    6. '(_' → logprob: -15.250011444091797
    7. '_write' → logprob: -15.625011444091797
    8. ' _' → logprob: -15.750011444091797
    9. '\' → logprob: -16.000011444091797
    10. '_visit' → logprob: -16.125011444091797

Token 518: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. '(' → logprob: -18.0
    3. ' (' → logprob: -18.25
    4. '(root' → logprob: -18.5
    5. '(n' → logprob: -18.75
    6. ',node' → logprob: -21.0
    7. '=node' → logprob: -21.25
    8. '[node' → logprob: -21.625
    9. 'node' → logprob: -21.875
    10. '   ' → logprob: -22.375

Token 519: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5475468039512634
    2. '):
' → logprob: -0.9225468039512634
    3. ':' → logprob: -4.297546863555908
    4. '(node' → logprob: -4.672546863555908
    5. '   ' → logprob: -7.422546863555908
    6. ':
' → logprob: -8.04754638671875
    7. '       ' → logprob: -9.92254638671875
    8. '():
' → logprob: -10.04754638671875
    9. '):
' → logprob: -10.17254638671875
    10. '=node' → logprob: -11.04754638671875

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03158058598637581
    2. '   ' → logprob: -3.531580686569214
    3. 'in' → logprob: -7.156580448150635
    4. ' inorder' → logprob: -7.156580448150635
    5. ' if' → logprob: -8.656580924987793
    6. ' in' → logprob: -9.531580924987793
    7. '	in' → logprob: -11.781580924987793
    8. '    ' → logprob: -12.656580924987793
    9. 'if' → logprob: -12.906580924987793
    10. '           ' → logprob: -12.906580924987793

Token 521: ' if' (ID: 538)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2055404633283615
    2. 'if' (adapté à ' if') → logprob: -1.705540418624878
    3. '   ' → logprob: -5.580540657043457
    4. ' if' → logprob: -8.330540657043457
    5. '       ' → logprob: -9.705540657043457
    6. ' inorder' → logprob: -10.330540657043457
    7. ' in' → logprob: -12.580540657043457
    8. '  ' → logprob: -12.830540657043457
    9. ' ' → logprob: -12.830540657043457
    10. '	in' → logprob: -13.705540657043457

Token 522: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.1269317865371704
    2. ' node' → logprob: -2.126931667327881
    3. 'not' → logprob: -13.251932144165039
    4. '(node' → logprob: -14.001932144165039
    5. ' not' → logprob: -14.501932144165039
    6. '   ' → logprob: -15.251932144165039
    7. '	node' → logprob: -15.376932144165039
    8. ' ' → logprob: -16.12693214416504
    9. '=node' → logprob: -18.87693214416504
    10. '       ' → logprob: -18.87693214416504

Token 523: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.1008713702030946e-06
    2. ':' → logprob: -13.500001907348633
    3. 'left' → logprob: -15.375001907348633
    4. '.' → logprob: -15.625001907348633
    5. ' and' → logprob: -16.125001907348633
    6. 'and' → logprob: -16.625001907348633
    7. '   ' → logprob: -17.375001907348633
    8. '.Left' → logprob: -18.000001907348633
    9. ':left' → logprob: -18.000001907348633
    10. ':
' → logprob: -18.875001907348633

Token 524: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12697724997997284
    2. ':
' → logprob: -2.1269772052764893
    3. '           ' → logprob: -10.37697696685791
    4. '):
' → logprob: -11.87697696685791
    5. '       ' → logprob: -12.00197696685791
    6. ':
' → logprob: -13.50197696685791
    7. '):' → logprob: -13.50197696685791
    8. '   ' → logprob: -14.25197696685791
    9. ':

' → logprob: -14.37697696685791
    10. '():
' → logprob: -16.126977920532227

Token 525: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016381697496399283
    2. 'in' → logprob: -7.126637935638428
    3. ':' → logprob: -7.501637935638428
    4. ':
' → logprob: -8.876638412475586
    5. '[in' → logprob: -10.001638412475586
    6. ' inorder' → logprob: -10.376638412475586
    7. ',in' → logprob: -10.876638412475586
    8. '       ' → logprob: -12.001638412475586
    9. '.in' → logprob: -12.001638412475586
    10. '=in' → logprob: -12.126638412475586

Token 526: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.002135748043656349
    2. ' inorder' → logprob: -6.252135753631592
    3. '           ' → logprob: -8.502135276794434
    4. '               ' → logprob: -13.252135276794434
    5. '       ' → logprob: -13.877135276794434
    6. ' in' → logprob: -14.002135276794434
    7. '	in' → logprob: -15.877135276794434
    8. '   ' → logprob: -16.00213623046875
    9. 'inode' → logprob: -16.37713623046875
    10. ' ' → logprob: -17.25213623046875

Token 527: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: 0.0
    2. 'walk' → logprob: -17.5
    3. '_w' → logprob: -18.0
    4. '   ' → logprob: -18.375
    5. '_' → logprob: -19.25
    6. '_visit' → logprob: -19.375
    7. 'Walk' → logprob: -19.5
    8. '.walk' → logprob: -19.875
    9. '_wait' → logprob: -19.875
    10. '[' → logprob: -20.375

Token 528: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.625
    3. '(' → logprob: -17.0
    4. ' (' → logprob: -20.0
    5. '[node' → logprob: -21.75
    6. '=node' → logprob: -21.875
    7. '(
' → logprob: -22.375
    8. ' node' → logprob: -22.5
    9. ',node' → logprob: -23.0
    10. '(n' → logprob: -23.125

Token 529: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -6.034592388459714e-06
    2. 'left' → logprob: -12.500005722045898
    3. '(node' → logprob: -13.250005722045898
    4. '(left' → logprob: -14.625005722045898
    5. '.node' → logprob: -17.6250057220459
    6. '.' → logprob: -17.8750057220459
    7. '.right' → logprob: -18.2500057220459
    8. ' left' → logprob: -20.5000057220459
    9. ')' → logprob: -20.6250057220459
    10. '[node' → logprob: -20.6250057220459

Token 530: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.042663637548685074
    2. '       ' → logprob: -3.66766357421875
    3. ')' → logprob: -4.16766357421875
    4. '()
' → logprob: -7.41766357421875
    5. '()' → logprob: -9.66766357421875
    6. '   ' → logprob: -9.91766357421875
    7. '
' → logprob: -11.66766357421875
    8. ')
' → logprob: -11.79266357421875
    9. '())
' → logprob: -12.04266357421875
    10. ' )
' → logprob: -13.54266357421875

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009382586576975882
    2. '   ' → logprob: -7.375938415527344
    3. '
' → logprob: -8.250938415527344
    4. 'in' → logprob: -10.625938415527344
    5. ' inorder' → logprob: -11.750938415527344
    6. '           ' → logprob: -12.000938415527344
    7. ' in' → logprob: -12.500938415527344
    8. ' ' → logprob: -13.750938415527344
    9. '```' → logprob: -13.750938415527344
    10. '        
' → logprob: -13.875938415527344

Token 532: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.00015550498210359365
    2. '   ' → logprob: -9.000155448913574
    3. ' inorder' → logprob: -11.000155448913574
    4. '       ' → logprob: -11.125155448913574
    5. ' in' → logprob: -14.500155448913574
    6. 'pre' → logprob: -16.25015640258789
    7. ' ' → logprob: -17.00015640258789
    8. '	in' → logprob: -17.62515640258789
    9. '  ' → logprob: -17.62515640258789
    10. '
' → logprob: -18.37515640258789

Token 533: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.5597102396423e-05
    2. '.' → logprob: -10.250035285949707
    3. 'append' → logprob: -16.000036239624023
    4. '.app' → logprob: -18.500036239624023
    5. '_append' → logprob: -18.500036239624023
    6. '.extend' → logprob: -19.000036239624023
    7. '.ap' → logprob: -19.250036239624023
    8. ' .' → logprob: -20.125036239624023
    9. '.Append' → logprob: -20.750036239624023
    10. '	append' → logprob: -21.750036239624023

Token 534: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.5
    3. 'str' → logprob: -16.625
    4. '=str' → logprob: -19.625
    5. '[str' → logprob: -20.375
    6. ' str' → logprob: -20.75
    7. ' (' → logprob: -20.875
    8. '	str' → logprob: -22.0
    9. '(chr' → logprob: -22.5
    10. '(st' → logprob: -22.625

Token 535: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. 'node' → logprob: -20.75
    4. ' (' → logprob: -22.375
    5. '(n' → logprob: -22.875
    6. '(
' → logprob: -23.125
    7. ',node' → logprob: -23.375
    8. '[node' → logprob: -23.875
    9. '(Node' → logprob: -24.875
    10. ' node' → logprob: -24.875

Token 536: '.val' (ID: 20368)
  Prédit: '.val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.val' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.00000286102295
    3. 'val' → logprob: -15.87500286102295
    4. ' .' → logprob: -17.250001907348633
    5. '.value' → logprob: -19.375001907348633
    6. '.v' → logprob: -19.375001907348633
    7. ').' → logprob: -20.625001907348633
    8. '.va' → logprob: -21.250001907348633
    9. '[val' → logprob: -21.250001907348633
    10. '.
' → logprob: -22.125001907348633

Token 537: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.351348340511322
    2. '))' → logprob: -1.3513484001159668
    3. ')' → logprob: -3.351348400115967
    4. ')
' → logprob: -6.101348400115967
    5. '       ' → logprob: -9.351347923278809
    6. '   ' → logprob: -13.101347923278809
    7. '))
' → logprob: -13.601347923278809
    8. '))

' → logprob: -13.726347923278809
    9. ')')
' → logprob: -14.476347923278809
    10. '()))
' → logprob: -14.726347923278809

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.380904672667384e-05
    2. ' if' → logprob: -10.625033378601074
    3. '   ' → logprob: -12.125033378601074
    4. 'if' → logprob: -12.500033378601074
    5. '           ' → logprob: -15.750033378601074
    6. '      ' → logprob: -16.75003433227539
    7. '```' → logprob: -16.75003433227539
    8. ' ' → logprob: -17.12503433227539
    9. '     ' → logprob: -17.50003433227539
    10. '<|end|>' → logprob: -17.62503433227539

Token 539: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6044484376907349
    2. ' if' → logprob: -1.1044484376907349
    3. 'if' (adapté à ' if') → logprob: -2.1044483184814453
    4. '   ' → logprob: -8.104448318481445
    5. ' ' → logprob: -11.854448318481445
    6. '	if' → logprob: -11.979448318481445
    7. '```' → logprob: -13.729448318481445
    8. '      ' → logprob: -15.229448318481445
    9. '     ' → logprob: -15.229448318481445
    10. '    ' → logprob: -15.229448318481445

Token 540: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.6931484937667847
    2. 'node' → logprob: -0.6931484937667847
    3. '(node' → logprob: -13.818148612976074
    4. '	node' → logprob: -16.068147659301758
    5. '   ' → logprob: -17.068147659301758
    6. ' ' → logprob: -17.068147659301758
    7. '[node' → logprob: -17.818147659301758
    8. '.node' → logprob: -18.568147659301758
    9. 'Node' → logprob: -18.568147659301758
    10. '=node' → logprob: -19.693147659301758

Token 541: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -5.200166469876422e-06
    2. '.' → logprob: -12.625004768371582
    3. 'right' → logprob: -13.375004768371582
    4. '.left' → logprob: -15.750004768371582
    5. ' .' → logprob: -16.0000057220459
    6. '.has' → logprob: -20.2500057220459
    7. '	right' → logprob: -20.3750057220459
    8. '.Right' → logprob: -20.5000057220459
    9. '[right' → logprob: -20.5000057220459
    10. ' ' → logprob: -20.6250057220459

Token 542: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20225544273853302
    2. ':' → logprob: -1.7022554874420166
    3. '           ' → logprob: -7.2022552490234375
    4. '):
' → logprob: -9.827255249023438
    5. '       ' → logprob: -10.452255249023438
    6. '          ' → logprob: -12.827255249023438
    7. ':
' → logprob: -12.827255249023438
    8. ':

' → logprob: -13.077255249023438
    9. '   ' → logprob: -13.327255249023438
    10. '):' → logprob: -13.452255249023438

Token 543: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002593130338937044
    2. 'in' → logprob: -8.625259399414062
    3. '          ' → logprob: -10.625259399414062
    4. ' inorder' → logprob: -10.625259399414062
    5. '[in' → logprob: -11.625259399414062
    6. ':
' → logprob: -12.250259399414062
    7. ' in' → logprob: -12.375259399414062
    8. '       ' → logprob: -13.000259399414062
    9. '         ' → logprob: -13.750259399414062
    10. '(in' → logprob: -13.750259399414062

Token 544: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006749955005943775
    2. ' inorder' → logprob: -5.006750106811523
    3. '           ' → logprob: -10.506750106811523
    4. ' in' → logprob: -12.506750106811523
    5. '       ' → logprob: -13.881750106811523
    6. '   ' → logprob: -14.631750106811523
    7. '               ' → logprob: -14.756750106811523
    8. '	in' → logprob: -15.006750106811523
    9. '[in' → logprob: -15.006750106811523
    10. ' ' → logprob: -15.256750106811523

Token 545: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -3.128163257315464e-07
    2. 'walk' → logprob: -15.125
    3. '_wrap' → logprob: -19.25
    4. 'Walk' → logprob: -19.625
    5. '_visit' → logprob: -20.0
    6. '```' → logprob: -20.125
    7. '.walk' → logprob: -21.0
    8. '_w' → logprob: -21.25
    9. '_watch' → logprob: -21.375
    10. '_work' → logprob: -21.625

Token 546: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. '(' → logprob: -17.625
    3. '(n' → logprob: -18.75
    4. '[node' → logprob: -19.0
    5. 'node' → logprob: -19.375
    6. ' (' → logprob: -19.5
    7. '=node' → logprob: -20.75
    8. '(Node' → logprob: -21.375
    9. '(
' → logprob: -22.0
    10. ',node' → logprob: -23.0

Token 547: '.right' (ID: 17627)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0004191138141322881
    2. 'right' → logprob: -8.375418663024902
    3. '.right' → logprob: -9.625418663024902
    4. 'node' → logprob: -9.750418663024902
    5. '[node' → logprob: -10.750418663024902
    6. '.node' → logprob: -10.875418663024902
    7. '=node' → logprob: -11.000418663024902
    8. ')' → logprob: -12.750418663024902
    9. 's' → logprob: -13.375418663024902
    10. ',node' → logprob: -14.500418663024902

Token 548: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. '       ' → logprob: -11.00002670288086
    3. ')
' → logprob: -11.75002670288086
    4. ')

' → logprob: -14.75002670288086
    5. '<|end|>' → logprob: -14.75002670288086
    6. '   ' → logprob: -15.00002670288086
    7. '(node' → logprob: -15.37502670288086
    8. ')#' → logprob: -15.37502670288086
    9. ')}' → logprob: -16.12502670288086
    10. ' )' → logprob: -16.12502670288086

Token 549: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5389896631240845
    2. '   ' → logprob: -1.2889896631240845
    3. '<|end|>' → logprob: -2.288989543914795
    4. 'def' → logprob: -3.413989543914795
    5. '    
' → logprob: -5.413989543914795
    6. '```' → logprob: -7.288989543914795
    7. '<|end|>' → logprob: -8.038990020751953
    8. '        
' → logprob: -8.288990020751953
    9. ')' → logprob: -8.413990020751953
    10. '  
' → logprob: -8.913990020751953

Token 550: ' n' (ID: 297)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.19437500834465027
    2. 'tree' → logprob: -2.4443750381469727
    3. '   ' → logprob: -3.3193750381469727
    4. 'if' → logprob: -3.8193750381469727
    5. 'import' → logprob: -3.9443750381469727
    6. 'def' → logprob: -4.944375038146973
    7. 'bt' → logprob: -6.694375038146973
    8. 't' → logprob: -6.944375038146973
    9. 'n' (adapté à ' n') → logprob: -7.319375038146973
    10. ' bst' → logprob: -7.569375038146973

Token 551: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4666312634944916
    2. '=' → logprob: -1.341631293296814
    3. '   ' → logprob: -2.8416311740875244
    4. '=int' → logprob: -3.2166311740875244
    5. 'um' → logprob: -4.5916314125061035
    6. ' ' → logprob: -6.7166314125061035
    7. '    ' → logprob: -7.2166314125061035
    8. '  ' → logprob: -8.466630935668945
    9. 'umber' → logprob: -8.591630935668945
    10. '=input' → logprob: -8.966630935668945

Token 552: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002478985348716378
    2. ' int' → logprob: -6.002479076385498
    3. '10' → logprob: -13.50247859954834
    4. '5' → logprob: -14.37747859954834
    5. '7' → logprob: -14.87747859954834
    6. ' ' → logprob: -15.12747859954834
    7. '[int' → logprob: -15.50247859954834
    8. '3' → logprob: -15.87747859954834
    9. 'len' → logprob: -16.627479553222656
    10. '0' → logprob: -16.752479553222656

Token 553: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00022642381372861564
    2. '(' → logprob: -8.750226020812988
    3. 'input' → logprob: -10.125226020812988
    4. '()' → logprob: -10.500226020812988
    5. '=input' → logprob: -16.125226974487305
    6. ' input' → logprob: -16.250226974487305
    7. '(
' → logprob: -17.000226974487305
    8. ' (' → logprob: -18.625226974487305
    9. '	input' → logprob: -19.000226974487305
    10. '<input' → logprob: -19.375226974487305

Token 554: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014185481704771519
    2. '()' → logprob: -4.264185428619385
    3. '())
' → logprob: -11.264185905456543
    4. '(' → logprob: -12.389185905456543
    5. ')' → logprob: -13.389185905456543
    6. '().' → logprob: -13.514185905456543
    7. '()
' → logprob: -14.139185905456543
    8. ' ())' → logprob: -14.264185905456543
    9. '()>' → logprob: -16.139184951782227
    10. '())

' → logprob: -16.139184951782227

Token 555: '    
' (ID: 1944)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.2819159924983978
    2. ' bst' → logprob: -1.5319160223007202
    3. 'tree' → logprob: -3.7819159030914307
    4. '   ' → logprob: -5.65691614151001
    5. ' tree' → logprob: -6.40691614151001
    6. 'for' → logprob: -7.03191614151001
    7. ' for' → logprob: -8.156915664672852
    8. 'b' → logprob: -8.781915664672852
    9. '```' → logprob: -9.656915664672852
    10. 't' → logprob: -9.906915664672852

Token 556: '   ' (ID: 271)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.05787287652492523
    2. 'tree' → logprob: -3.682872772216797
    3. '   ' → logprob: -3.807872772216797
    4. ' bst' → logprob: -4.807872772216797
    5. 'b' → logprob: -7.807872772216797
    6. 'bt' → logprob: -9.307872772216797
    7. ' tree' → logprob: -9.557872772216797
    8. 't' → logprob: -10.182872772216797
    9. 'for' → logprob: -10.307872772216797
    10. '```' → logprob: -10.932872772216797

Token 557: ' bst' (ID: 157814)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' (adapté à ' bst') → logprob: -0.026788100600242615
    2. 'tree' → logprob: -3.6517879962921143
    3. 'for' → logprob: -8.901787757873535
    4. 'bt' → logprob: -9.151787757873535
    5. 'import' → logprob: -9.276787757873535
    6. 'b' → logprob: -9.526787757873535
    7. 'bs' → logprob: -11.151787757873535
    8. 't' → logprob: -11.276787757873535
    9. 'T' → logprob: -11.276787757873535
    10. ' bst' → logprob: -11.401787757873535

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11288087069988251
    2. '=' → logprob: -2.2378809452056885
    3. '.insert' → logprob: -9.86288070678711
    4. ' ' → logprob: -13.36288070678711
    5. '=create' → logprob: -13.86288070678711
    6. '.' → logprob: -14.36288070678711
    7. ')' → logprob: -14.61288070678711
    8. '   ' → logprob: -14.73788070678711
    9. 'import' → logprob: -15.48788070678711
    10. 'insert' → logprob: -15.48788070678711

Token 559: ' Binary' (ID: 32672)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.01416350994259119
    2. ' Binary' → logprob: -4.264163494110107
    3. '(Binary' → logprob: -18.139163970947266
    4. ' ' → logprob: -18.639163970947266
    5. ' binary' → logprob: -19.514163970947266
    6. 'binary' → logprob: -20.639163970947266
    7. '.Binary' → logprob: -20.764163970947266
    8. '_binary' → logprob: -21.264163970947266
    9. '   ' → logprob: -21.764163970947266
    10. '  ' → logprob: -21.889163970947266

Token 560: 'Search' (ID: 5975)
  Prédit: 'Search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Search' → logprob: -7.896309739408025e-07
    2. ' Search' → logprob: -14.750000953674316
    3. 'search' → logprob: -16.0
    4. '   ' → logprob: -17.0
    5. '_search' → logprob: -17.125
    6. 'earch' → logprob: -17.5
    7. '(Search' → logprob: -17.5
    8. 'S' → logprob: -17.625
    9. '_Search' → logprob: -17.625
    10. '<Search' → logprob: -17.875

Token 561: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -9.088346359931165e-07
    2. 'tree' → logprob: -14.375000953674316
    3. '	Tree' → logprob: -17.25
    4. '_tree' → logprob: -17.5
    5. '(Tree' → logprob: -17.5
    6. '<Tree' → logprob: -17.75
    7. 'TREE' → logprob: -17.75
    8. 'Tre' → logprob: -18.0
    9. '_TREE' → logprob: -18.0
    10. 'T' → logprob: -18.125

Token 562: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2714541554450989
    2. '
' → logprob: -1.646454095840454
    3. '    
' → logprob: -3.771454095840454
    4. '<|end|>' → logprob: -4.521454334259033
    5. 'for' → logprob: -4.896454334259033
    6. ' for' → logprob: -6.396454334259033
    7. '<|end|>' → logprob: -6.771454334259033
    8. '	
' → logprob: -8.021453857421875
    9. '  
' → logprob: -9.021453857421875
    10. '	for' → logprob: -9.021453857421875

Token 563: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.045845139771699905
    2. '
' → logprob: -4.170845031738281
    3. '   ' → logprob: -4.170845031738281
    4. ' for' → logprob: -4.295845031738281
    5. '	for' → logprob: -8.420845031738281
    6. '    
' → logprob: -9.670845031738281
    7. '	
' → logprob: -11.670845031738281
    8. ' 
' → logprob: -12.670845031738281
    9. '\n' → logprob: -12.920845031738281
    10. '<|end|>' → logprob: -13.045845031738281

Token 564: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5928110480308533
    2. 'for' → logprob: -0.8428110480308533
    3. ' for' → logprob: -4.092811107635498
    4. '	for' → logprob: -10.46781063079834
    5. '
' → logprob: -11.71781063079834
    6. '    
' → logprob: -14.09281063079834
    7. 'while' → logprob: -15.59281063079834
    8. 'import' → logprob: -15.84281063079834
    9. '  ' → logprob: -17.217811584472656
    10. ' ' → logprob: -17.342811584472656

Token 565: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.6240566083070007e-06
    2. ' for' → logprob: -13.500001907348633
    3. 'import' → logprob: -15.625001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '	for' → logprob: -19.375001907348633
    6. 'while' → logprob: -20.125001907348633
    7. 'commands' → logprob: -20.500001907348633
    8. '
' → logprob: -20.750001907348633
    9. 'from' → logprob: -21.250001907348633
    10. '    
' → logprob: -22.250001907348633

Token 566: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -9.758300438988954e-05
    2. ' _' → logprob: -9.250097274780273
    3. '_i' → logprob: -13.625097274780273
    4. ' i' → logprob: -15.625097274780273
    5. 'i' → logprob: -17.500097274780273
    6. '_range' → logprob: -19.750097274780273
    7. '_in' → logprob: -20.125097274780273
    8. '_=' → logprob: -20.375097274780273
    9. ' in' → logprob: -21.250097274780273
    10. ' ' → logprob: -21.250097274780273

Token 567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009202735964208841
    2. 'in' → logprob: -7.000920295715332
    3. ' ' → logprob: -12.000920295715332
    4. 'range' → logprob: -13.125920295715332
    5. '  ' → logprob: -15.125920295715332
    6. 'import' → logprob: -15.250920295715332
    7. '	in' → logprob: -16.375919342041016
    8. 'n' → logprob: -16.625919342041016
    9. 'input' → logprob: -17.375919342041016
    10. 's' → logprob: -17.500919342041016

Token 568: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023321842309087515
    2. ' range' → logprob: -8.37523365020752
    3. 'input' → logprob: -13.12523365020752
    4. '(range' → logprob: -15.00023365020752
    5. '[' → logprob: -16.375232696533203
    6. '	range' → logprob: -17.000232696533203
    7. 'rang' → logprob: -17.625232696533203
    8. 'in' → logprob: -17.750232696533203
    9. '   ' → logprob: -17.875232696533203
    10. 'ran' → logprob: -18.250232696533203

Token 569: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012725738633889705
    2. 'n' → logprob: -9.000126838684082
    3. '(' → logprob: -13.000126838684082
    4. ' n' → logprob: -13.750126838684082
    5. ' (' → logprob: -14.625126838684082
    6. '	n' → logprob: -18.2501277923584
    7. '_n' → logprob: -19.3751277923584
    8. '   ' → logprob: -21.3751277923584
    9. ',n' → logprob: -21.7501277923584
    10. '(int' → logprob: -21.8751277923584

Token 570: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14359338581562042
    2. '):
' → logprob: -2.0185933113098145
    3. ':' → logprob: -7.8935933113098145
    4. ' ):' → logprob: -7.8935933113098145
    5. ' ):
' → logprob: -9.768593788146973
    6. ')' → logprob: -9.893593788146973
    7. '):
' → logprob: -10.643593788146973
    8. ':
' → logprob: -11.518593788146973
    9. '   ' → logprob: -11.643593788146973
    10. '):

' → logprob: -11.768593788146973

Token 571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012999906903132796
    2. '   ' → logprob: -9.875129699707031
    3. 'tokens' → logprob: -10.875129699707031
    4. ' line' → logprob: -11.000129699707031
    5. 'line' → logprob: -12.000129699707031
    6. 'token' → logprob: -12.250129699707031
    7. '```' → logprob: -12.250129699707031
    8. '	   ' → logprob: -12.375129699707031
    9. 'input' → logprob: -13.000129699707031
    10. '      ' → logprob: -13.000129699707031

Token 572: ' op' (ID: 991)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.3189103603363037
    2. 'command' → logprob: -1.5689103603363037
    3. 'line' → logprob: -3.3189103603363037
    4. 'op' (adapté à ' op') → logprob: -3.9439103603363037
    5. '   ' → logprob: -5.568910598754883
    6. 's' → logprob: -6.193910598754883
    7. 'operation' → logprob: -7.443910598754883
    8. 'query' → logprob: -7.693910598754883
    9. 'data' → logprob: -8.068910598754883
    10. 'arr' → logprob: -8.193910598754883

Token 573: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6301156282424927
    2. ',' → logprob: -0.8801156282424927
    3. ',input' → logprob: -3.505115509033203
    4. '=' → logprob: -4.130115509033203
    5. ',line' → logprob: -6.005115509033203
    6. ' ,' → logprob: -6.630115509033203
    7. ',val' → logprob: -7.380115509033203
    8. '=input' → logprob: -7.505115509033203
    9. ',_' → logprob: -8.005115509033203
    10. ',s' → logprob: -8.880115509033203

Token 574: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00033546582562848926
    2. ' input' → logprob: -8.000335693359375
    3. '(input' → logprob: -20.125335693359375
    4. '=input' → logprob: -21.125335693359375
    5. '	input' → logprob: -22.250335693359375
    6. 'int' → logprob: -22.500335693359375
    7. '<input' → logprob: -22.875335693359375
    8. ',input' → logprob: -23.750335693359375
    9. '[input' → logprob: -23.875335693359375
    10. 'list' → logprob: -24.750335693359375

Token 575: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02650638297200203
    2. '()' → logprob: -3.6515064239501953
    3. '.split' → logprob: -8.776506423950195
    4. ' ().' → logprob: -11.276506423950195
    5. ' ()' → logprob: -11.401506423950195
    6. '.' → logprob: -12.026506423950195
    7. '.strip' → logprob: -12.151506423950195
    8. '()
' → logprob: -12.276506423950195
    9. ' =' → logprob: -12.651506423950195
    10. 'split' → logprob: -12.901506423950195

Token 576: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0067167943343520164
    2. 'strip' → logprob: -5.006716728210449
    3. 'rstrip' → logprob: -14.00671672821045
    4. 'spl' → logprob: -15.25671672821045
    5. 's' → logprob: -15.50671672821045
    6. ' split' → logprob: -16.631717681884766
    7. '(split' → logprob: -18.756717681884766
    8. '_split' → logprob: -19.381717681884766
    9. 'startswith' → logprob: -19.881717681884766
    10. 'sp' → logprob: -20.756717681884766

Token 577: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14140136539936066
    2. '().' → logprob: -2.5164012908935547
    3. '.split' → logprob: -3.5164012908935547
    4. '()
' → logprob: -4.016401290893555
    5. '<|end|>' → logprob: -6.766401290893555
    6. '       ' → logprob: -7.391401290893555
    7. '<|end|>' → logprob: -8.516401290893555
    8. 'split' → logprob: -8.516401290893555
    9. ' ' → logprob: -8.766401290893555
    10. '()

' → logprob: -8.891401290893555

Token 578: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. 'spl' → logprob: -14.125000953674316
    3. ' split' → logprob: -15.250000953674316
    4. '_split' → logprob: -15.750000953674316
    5. 's' → logprob: -17.125001907348633
    6. '.split' → logprob: -17.625001907348633
    7. 'rstrip' → logprob: -17.875001907348633
    8. '(split' → logprob: -18.125001907348633
    9. 'startswith' → logprob: -18.500001907348633
    10. 'if' → logprob: -18.625001907348633

Token 579: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.764977686339989e-05
    2. '('' → logprob: -10.250057220458984
    3. '()
' → logprob: -11.375057220458984
    4. '(' → logprob: -11.625057220458984
    5. '("' → logprob: -14.250057220458984
    6. ' ()' → logprob: -15.375057220458984
    7. '()[' → logprob: -15.375057220458984
    8. '()`' → logprob: -15.750057220458984
    9. '())' → logprob: -16.125057220458984
    10. '（）' → logprob: -16.125057220458984

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015461683506146073
    2. '   ' → logprob: -6.751546382904053
    3. '<|end|>' → logprob: -8.501545906066895
    4. ' ' → logprob: -10.001545906066895
    5. ' if' → logprob: -10.251545906066895
    6. '      ' → logprob: -10.501545906066895
    7. '        
' → logprob: -11.126545906066895
    8. '  ' → logprob: -11.251545906066895
    9. 'if' → logprob: -11.376545906066895
    10. '    ' → logprob: -11.376545906066895

Token 581: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.01019291765987873
    2. '       ' → logprob: -5.13519287109375
    3. 'cmd' → logprob: -6.13519287109375
    4. 'command' → logprob: -6.76019287109375
    5. ' if' → logprob: -7.51019287109375
    6. 'op' → logprob: -9.13519287109375
    7. 'operation' → logprob: -9.63519287109375
    8. 'action' → logprob: -9.76019287109375
    9. 'opcode' → logprob: -9.76019287109375
    10. '	if' → logprob: -10.38519287109375

Token 582: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0067156096920371056
    2. ' op' → logprob: -5.006715774536133
    3. 'len' → logprob: -15.256715774536133
    4. '(op' → logprob: -16.756715774536133
    5. '	op' → logprob: -17.256715774536133
    6. '   ' → logprob: -17.631715774536133
    7. '       ' → logprob: -17.881715774536133
    8. ' ' → logprob: -17.881715774536133
    9. ' len' → logprob: -19.131715774536133
    10. '    ' → logprob: -19.631715774536133

Token 583: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '==' → logprob: -15.5
    3. '0' → logprob: -16.5
    4. 'and' → logprob: -17.75
    5. '[
' → logprob: -18.125
    6. '=' → logprob: -18.25
    7. ':' → logprob: -18.625
    8. '   ' → logprob: -18.625
    9. ' and' → logprob: -18.75
    10. ' ' → logprob: -19.125

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.44312788406387e-05
    2. ' ' → logprob: -9.875054359436035
    3. '[' → logprob: -13.625054359436035
    4. '1' → logprob: -13.875054359436035
    5. '=' → logprob: -15.625054359436035
    6. '   ' → logprob: -16.06255531311035
    7. '(' → logprob: -16.43755531311035
    8. ']' → logprob: -16.43755531311035
    9. '
' → logprob: -16.81255531311035
    10. '==' → logprob: -17.06255531311035

Token 585: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20282594859600067
    2. ' ==' → logprob: -1.702825903892517
    3. '=="' → logprob: -7.452826023101807
    4. '[' → logprob: -8.202825546264648
    5. '=='' → logprob: -8.827825546264648
    6. '=' → logprob: -9.077825546264648
    7. ']' → logprob: -9.327825546264648
    8. ')' → logprob: -9.327825546264648
    9. ']==' → logprob: -9.327825546264648
    10. '==
' → logprob: -11.702825546264648

Token 586: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.025076141580939293
    2. ' ==' → logprob: -3.900076150894165
    3. '=="' → logprob: -5.525075912475586
    4. '=' → logprob: -7.900075912475586
    5. '[' → logprob: -9.525075912475586
    6. '=='' → logprob: -9.900075912475586
    7. '==
' → logprob: -10.525075912475586
    8. 'in' → logprob: -11.525075912475586
    9. '===' → logprob: -13.275075912475586
    10. ' =="' → logprob: -13.400075912475586

Token 587: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3849114179611206
    2. ''' → logprob: -1.3849114179611206
    3. '"I' → logprob: -2.88491153717041
    4. ''I' → logprob: -4.38491153717041
    5. 'I' → logprob: -7.25991153717041
    6. ''A' → logprob: -10.13491153717041
    7. '"A' → logprob: -10.63491153717041
    8. ' "' → logprob: -11.13491153717041
    9. '   ' → logprob: -11.38491153717041
    10. ''i' → logprob: -11.88491153717041

Token 588: 'insert' (ID: 14813)
  Prédit: 'insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'insert' → logprob: -0.0016605432610958815
    2. '"' → logprob: -7.126660346984863
    3. 'i' → logprob: -7.251660346984863
    4. 'I' → logprob: -10.001660346984863
    5. 'Insert' → logprob: -10.001660346984863
    6. 'INSERT' → logprob: -11.251660346984863
    7. '"I' → logprob: -12.001660346984863
    8. '"in' → logprob: -12.001660346984863
    9. ' insert' → logprob: -12.126660346984863
    10. 'ins' → logprob: -12.251660346984863

Token 589: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.2261815220117569
    2. '":
' → logprob: -1.7261815071105957
    3. '"' → logprob: -3.7261815071105957
    4. '":
' → logprob: -8.601181983947754
    5. ':' → logprob: -10.101181983947754
    6. ' ":' → logprob: -10.101181983947754
    7. ' "' → logprob: -10.101181983947754
    8. '):
' → logprob: -11.226181983947754
    9. '(":' → logprob: -11.226181983947754
    10. ':
' → logprob: -11.351181983947754

Token 590: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017089712200686336
    2. 'node' → logprob: -6.751708984375
    3. ' node' → logprob: -7.751708984375
    4. ':' → logprob: -10.626708984375
    5. '```' → logprob: -10.626708984375
    6. '          ' → logprob: -11.501708984375
    7. ':
' → logprob: -11.501708984375
    8. '_node' → logprob: -11.876708984375
    9. ',node' → logprob: -12.626708984375
    10. '		' → logprob: -12.751708984375

Token 591: ' bst' (ID: 157814)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' (adapté à ' bst') → logprob: -0.39540064334869385
    2. ' bst' → logprob: -1.1454006433486938
    3. 'node' → logprob: -5.020400524139404
    4. '           ' → logprob: -7.020400524139404
    5. ' node' → logprob: -7.145400524139404
    6. 'val' → logprob: -9.020401000976562
    7. '               ' → logprob: -10.020401000976562
    8. ' val' → logprob: -11.145401000976562
    9. 'value' → logprob: -11.395401000976562
    10. 'b' → logprob: -12.270401000976562

Token 592: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -2.8087270038668066e-05
    2. '.' → logprob: -10.500027656555176
    3. '.append' → logprob: -15.625027656555176
    4. 'insert' → logprob: -16.000028610229492
    5. ' .' → logprob: -16.625028610229492
    6. '.in' → logprob: -18.125028610229492
    7. '.Insert' → logprob: -18.375028610229492
    8. '\.' → logprob: -18.500028610229492
    9. ').' → logprob: -19.125028610229492
    10. '.inject' → logprob: -19.250028610229492

Token 593: '(Node' (ID: 43019)
  Prédit: '(Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Node' → logprob: -0.5767850279808044
    2. 'Node' → logprob: -0.8267850279808044
    3. ' Node' → logprob: -7.076785087585449
    4. '	Node' → logprob: -14.70178508758545
    5. '_Node' → logprob: -16.201784133911133
    6. '(' → logprob: -16.326784133911133
    7. '.Node' → logprob: -16.701784133911133
    8. '_node' → logprob: -17.576784133911133
    9. 'Nodo' → logprob: -17.826784133911133
    10. '<Node' → logprob: -18.701784133911133

Token 594: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.4121114822482923e-06
    2. 'int' → logprob: -13.250003814697266
    3. '(' → logprob: -13.375003814697266
    4. '(
' → logprob: -17.125003814697266
    5. '((' → logprob: -17.375003814697266
    6. '   ' → logprob: -17.500003814697266
    7. '(i' → logprob: -17.750003814697266
    8. '[int' → logprob: -18.125003814697266
    9. ' (' → logprob: -18.250003814697266
    10. ' int' → logprob: -18.625003814697266

Token 595: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -1.2113979209971149e-05
    2. '(' → logprob: -11.500012397766113
    3. '(
' → logprob: -13.750012397766113
    4. 'op' → logprob: -14.500012397766113
    5. ' (' → logprob: -15.375012397766113
    6. ' op' → logprob: -16.000011444091797
    7. '	op' → logprob: -17.875011444091797
    8. '(o' → logprob: -19.625011444091797
    9. ')' → logprob: -20.125011444091797
    10. '(

' → logprob: -20.375011444091797

Token 596: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.081584716506768e-05
    2. '(' → logprob: -10.875020980834961
    3. '[
' → logprob: -13.750020980834961
    4. '(op' → logprob: -15.500020980834961
    5. '()[' → logprob: -15.625020980834961
    6. '([' → logprob: -15.750020980834961
    7. ' [' → logprob: -16.25002098083496
    8. '(
' → logprob: -16.50002098083496
    9. '   ' → logprob: -16.62502098083496
    10. '1' → logprob: -17.75002098083496

Token 597: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2246291337069124e-05
    2. '[' → logprob: -10.750021934509277
    3. '   ' → logprob: -14.375021934509277
    4. ' ' → logprob: -16.375022888183594
    5. '```' → logprob: -17.625022888183594
    6. '
' → logprob: -17.750022888183594
    7. '2' → logprob: -18.750022888183594
    8. '``' → logprob: -19.375022888183594
    9. ')' → logprob: -20.000022888183594
    10. '-' → logprob: -20.125022888183594

Token 598: '])))
' (ID: 146875)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -8.613945101387799e-05
    2. ')))
' → logprob: -10.125085830688477
    3. ']))' → logprob: -11.000085830688477
    4. ')' → logprob: -11.500085830688477
    5. '))' → logprob: -11.625085830688477
    6. '))))' → logprob: -12.250085830688477
    7. '])))' → logprob: -13.125085830688477
    8. ')))

' → logprob: -14.250085830688477
    9. ')));' → logprob: -14.250085830688477
    10. ' ' → logprob: -14.250085830688477

Token 599: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001923352392623201
    2. 'elif' → logprob: -8.625192642211914
    3. '```' → logprob: -12.125192642211914
    4. '
' → logprob: -12.250192642211914
    5. ' elif' → logprob: -13.125192642211914
    6. '        
' → logprob: -16.125192642211914
    7. '   ' → logprob: -16.250192642211914
    8. '	elif' → logprob: -16.500192642211914
    9. '<|end|>' → logprob: -17.125192642211914
    10. '      ' → logprob: -17.250192642211914

Token 600: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.005245141219347715
    2. '       ' → logprob: -5.505245208740234
    3. ' elif' → logprob: -6.755245208740234
    4. '           ' → logprob: -14.505245208740234
    5. '   ' → logprob: -15.130245208740234
    6. '```' → logprob: -15.255245208740234
    7. 'el' → logprob: -16.130245208740234
    8. '	elif' → logprob: -16.380245208740234
    9. '
' → logprob: -17.380245208740234
    10. '               ' → logprob: -17.505245208740234

Token 601: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3868805766105652
    2. ' op' → logprob: -1.13688063621521
    3. '(op' → logprob: -12.386880874633789
    4. '   ' → logprob: -13.761880874633789
    5. '	op' → logprob: -13.761880874633789
    6. '    ' → logprob: -14.136880874633789
    7. ' ' → logprob: -14.261880874633789
    8. '"' → logprob: -14.386880874633789
    9. '       ' → logprob: -15.761880874633789
    10. 'o' → logprob: -15.886880874633789

Token 602: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006425932981073856
    2. ' ==' → logprob: -5.256425857543945
    3. '==' → logprob: -6.756425857543945
    4. '=="' → logprob: -10.631425857543945
    5. ' [' → logprob: -14.131425857543945
    6. '```' → logprob: -14.256425857543945
    7. '[]' → logprob: -14.506425857543945
    8. '(' → logprob: -14.881425857543945
    9. '[
' → logprob: -15.006425857543945
    10. '"' → logprob: -15.131425857543945

Token 603: '0' (ID: 15)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01768544130027294
    2. ' "' → logprob: -4.267685413360596
    3. '"value' → logprob: -6.392685413360596
    4. '"user' → logprob: -6.892685413360596
    5. '"display' → logprob: -8.392685890197754
    6. '"is' → logprob: -8.892685890197754
    7. '"text' → logprob: -9.392685890197754
    8. '"class' → logprob: -9.892685890197754
    9. '0' → logprob: -10.267685890197754
    10. '"type' → logprob: -10.517685890197754

Token 604: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5832574367523193
    2. '==' → logprob: -0.8332574367523193
    3. ']' → logprob: -5.333257675170898
    4. ']==' → logprob: -6.083257675170898
    5. '[' → logprob: -9.208257675170898
    6. '=' → logprob: -10.208257675170898
    7. '===' → logprob: -11.333257675170898
    8. '[]' → logprob: -11.833257675170898
    9. '=="' → logprob: -12.083257675170898
    10. ')' → logprob: -12.208257675170898

Token 605: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3868974447250366
    2. '==' → logprob: -1.1368974447250366
    3. '=="' → logprob: -11.011897087097168
    4. '=' → logprob: -12.136897087097168
    5. '[' → logprob: -13.636897087097168
    6. ' =' → logprob: -13.886897087097168
    7. '===' → logprob: -14.011897087097168
    8. ' =="' → logprob: -14.636897087097168
    9. '=='' → logprob: -15.011897087097168
    10. '==
' → logprob: -15.261897087097168

Token 606: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06200375780463219
    2. ' "' → logprob: -2.8120038509368896
    3. '"display' → logprob: -10.937004089355469
    4. ''' → logprob: -12.687004089355469
    5. '"in' → logprob: -12.687004089355469
    6. '"value' → logprob: -12.812004089355469
    7. '"go' → logprob: -13.562004089355469
    8. ' ' → logprob: -13.812004089355469
    9. '"use' → logprob: -13.937004089355469
    10. '"class' → logprob: -14.062004089355469

Token 607: 'print' (ID: 1598)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005477078724652529
    2. 'print' → logprob: -5.380476951599121
    3. 'find' → logprob: -7.505476951599121
    4. 'delete' → logprob: -8.505476951599121
    5. ' "' → logprob: -10.380476951599121
    6. ''' → logprob: -10.880476951599121
    7. '"in' → logprob: -11.005476951599121
    8. ' print' → logprob: -11.505476951599121
    9. ' ' → logprob: -12.005476951599121
    10. ' find' → logprob: -12.255476951599121

Token 608: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.6988142728805542
    2. '":
' → logprob: -0.6988142728805542
    3. ':' → logprob: -5.948814392089844
    4. '"' → logprob: -6.948814392089844
    5. '():
' → logprob: -7.198814392089844
    6. '()' → logprob: -7.823814392089844
    7. ':
' → logprob: -8.073814392089844
    8. '":
' → logprob: -8.698814392089844
    9. '(":' → logprob: -8.698814392089844
    10. '__":
' → logprob: -8.948814392089844

Token 609: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01966315135359764
    2. '
' → logprob: -4.144663333892822
    3. '           ' → logprob: -6.019663333892822
    4. ':
' → logprob: -7.519663333892822
    5. '        
' → logprob: -8.519662857055664
    6. '
' → logprob: -8.644662857055664
    7. '   ' → logprob: -9.894662857055664
    8. '<|end|>' → logprob: -9.894662857055664
    9. '```' → logprob: -10.144662857055664
    10. '    
' → logprob: -11.019662857055664

Token 610: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.021860012784600258
    2. '           ' → logprob: -4.021860122680664
    3. 'in' → logprob: -5.896860122680664
    4. '   ' → logprob: -7.521860122680664
    5. '       ' → logprob: -8.146860122680664
    6. '
' → logprob: -9.646860122680664
    7. ' preorder' → logprob: -10.021860122680664
    8. '	pre' → logprob: -11.896860122680664
    9. 'preced' → logprob: -12.896860122680664
    10. '               ' → logprob: -13.396860122680664

Token 611: ',in' (ID: 93374)
  Prédit: '_walk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_walk' → logprob: -0.00032163821742869914
    2. '_' → logprob: -8.375321388244629
    3. '_clear' → logprob: -10.750321388244629
    4. 'walk' → logprob: -11.000321388244629
    5. '_append' → logprob: -11.250321388244629
    6. '_w' → logprob: -12.375321388244629
    7. '.append' → logprob: -12.375321388244629
    8. ' =' → logprob: -12.500321388244629
    9. '()' → logprob: -12.500321388244629
    10. '_visit' → logprob: -12.625321388244629

Token 612: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0006472678505815566
    2. '=' → logprob: -8.62564754486084
    3. 'or' → logprob: -8.62564754486084
    4. 'o' → logprob: -9.25064754486084
    5. 'ore' → logprob: -9.37564754486084
    6. ' =' → logprob: -10.87564754486084
    7. 'ord' → logprob: -11.12564754486084
    8. '   ' → logprob: -11.37564754486084
    9. 'orm' → logprob: -11.37564754486084
    10. '_order' → logprob: -11.75064754486084

Token 613: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.015984859317541122
    2. '=[]' → logprob: -4.515985012054443
    3. '_walk' → logprob: -6.390985012054443
    4. ' =' → logprob: -6.640985012054443
    5. '.clear' → logprob: -7.265985012054443
    6. '_clear' → logprob: -8.015984535217285
    7. '_' → logprob: -8.015984535217285
    8. '_=' → logprob: -8.390984535217285
    9. '=[]
' → logprob: -8.390984535217285
    10. 'clear' → logprob: -10.140984535217285

Token 614: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.0016599473310634494
    2. ' [],' → logprob: -7.126659870147705
    3. '[]' → logprob: -7.126659870147705
    4. '[]
' → logprob: -10.001660346984863
    5. '[],
' → logprob: -12.626660346984863
    6. '([],' → logprob: -13.876660346984863
    7. '[]

' → logprob: -14.001660346984863
    8. '   ' → logprob: -14.876660346984863
    9. ' ' → logprob: -15.001660346984863
    10. '"' → logprob: -15.501660346984863

Token 615: '[]
' (ID: 41761)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.004349298309534788
    2. '[]
' → logprob: -5.504349231719971
    3. '[],' → logprob: -8.379349708557129
    4. ' []' → logprob: -10.504349708557129
    5. '[]

' → logprob: -11.379349708557129
    6. '[]}' → logprob: -13.504349708557129
    7. '[]>' → logprob: -14.754349708557129
    8. '[])' → logprob: -15.629349708557129
    9. '[]"' → logprob: -16.504348754882812
    10. 'pre' → logprob: -16.504348754882812

Token 616: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041970983147621155
    2. '
' → logprob: -7.875419616699219
    3. 'pre' → logprob: -10.875419616699219
    4. '   ' → logprob: -12.125419616699219
    5. '            
' → logprob: -12.375419616699219
    6. '       ' → logprob: -12.875419616699219
    7. ' preorder' → logprob: -12.875419616699219
    8. '
' → logprob: -13.500419616699219
    9. '          ' → logprob: -13.875419616699219
    10. '    
' → logprob: -14.000419616699219

Token 617: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.005699108354747295
    2. 'if' → logprob: -5.630699157714844
    3. '           ' → logprob: -6.255699157714844
    4. '   ' → logprob: -9.130699157714844
    5. ' preorder' → logprob: -10.255699157714844
    6. '       ' → logprob: -10.880699157714844
    7. 'in' → logprob: -12.130699157714844
    8. 'def' → logprob: -13.380699157714844
    9. 'preced' → logprob: -13.880699157714844
    10. ' pre' → logprob: -13.880699157714844

Token 618: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -5.512236498361744e-07
    2. 'walk' → logprob: -15.000000953674316
    3. '_' → logprob: -16.0
    4. '_w' → logprob: -16.625
    5. '_visit' → logprob: -18.375
    6. '_wrap' → logprob: -18.5
    7. '_print' → logprob: -18.75
    8. '=' → logprob: -18.75
    9. ' =' → logprob: -18.875
    10. '_append' → logprob: -18.875

Token 619: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.008129963040119e-06
    2. 'bst' → logprob: -12.500003814697266
    3. 'b' → logprob: -15.750003814697266
    4. '(' → logprob: -17.500003814697266
    5. ' bst' → logprob: -17.625003814697266
    6. '	b' → logprob: -18.875003814697266
    7. '(root' → logprob: -22.125003814697266
    8. ' (' → logprob: -22.375003814697266
    9. '(bs' → logprob: -22.500003814697266
    10. '((' → logprob: -22.625003814697266

Token 620: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: 0.0
    2. 'ST' → logprob: -18.625
    3. 's' → logprob: -18.875
    4. 't' → logprob: -19.125
    5. '
' → logprob: -20.125
    6. 'ст' → logprob: -20.375
    7. 'in' → logprob: -21.0
    8. 'bst' → logprob: -21.5
    9. '```' → logprob: -21.75
    10. '``' → logprob: -21.875

Token 621: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -0.0007106438861228526
    2. 'root' → logprob: -7.250710487365723
    3. '.' → logprob: -14.500710487365723
    4. '[root' → logprob: -17.00071144104004
    5. ' .' → logprob: -17.12571144104004
    6. ' root' → logprob: -17.75071144104004
    7. '
' → logprob: -18.00071144104004
    8. '.ro' → logprob: -18.25071144104004
    9. '_root' → logprob: -18.50071144104004
    10. '.
' → logprob: -18.50071144104004

Token 622: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04406948760151863
    2. ')' → logprob: -3.669069528579712
    3. ')
' → logprob: -4.044069290161133
    4. '       ' → logprob: -11.544069290161133
    5. '),' → logprob: -11.544069290161133
    6. '
' → logprob: -11.669069290161133
    7. '            
' → logprob: -11.669069290161133
    8. '<|end|>' → logprob: -11.919069290161133
    9. ',' → logprob: -12.294069290161133
    10. ')b' → logprob: -12.294069290161133

Token 623: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06313115358352661
    2. 'in' → logprob: -2.813131093978882
    3. ' inorder' → logprob: -7.438131332397461
    4. '
' → logprob: -8.563131332397461
    5. ' in' → logprob: -9.063131332397461
    6. '[in' → logprob: -9.188131332397461
    7. ',in' → logprob: -10.438131332397461
    8. '            
' → logprob: -10.688131332397461
    9. 'print' → logprob: -10.688131332397461
    10. '   ' → logprob: -10.813131332397461

Token 624: ' inorder' (ID: 139692)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.34999987483024597
    2. 'in' → logprob: -1.2249999046325684
    3. '           ' → logprob: -6.849999904632568
    4. ' print' → logprob: -7.724999904632568
    5. '       ' → logprob: -10.84999942779541
    6. ' in' → logprob: -11.34999942779541
    7. ' inorder' → logprob: -11.47499942779541
    8. '   ' → logprob: -12.97499942779541
    9. '            ' → logprob: -13.47499942779541
    10. '               ' → logprob: -13.72499942779541

Token 625: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.9623810658231378e-05
    2. '_' → logprob: -11.125020027160645
    3. '_append' → logprob: -12.750020027160645
    4. 'walk' → logprob: -14.375020027160645
    5. '.append' → logprob: -14.750020027160645
    6. 'append' → logprob: -15.375020027160645
    7. '_wrap' → logprob: -16.000019073486328
    8. ',_' → logprob: -16.125019073486328
    9. '_join' → logprob: -16.750019073486328
    10. '_print' → logprob: -16.750019073486328

Token 626: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.054500666621607e-06
    2. 'bst' → logprob: -12.75000286102295
    3. 'b' → logprob: -16.750003814697266
    4. ' bst' → logprob: -17.125003814697266
    5. '(' → logprob: -17.875003814697266
    6. '	b' → logprob: -19.375003814697266
    7. '(bs' → logprob: -20.000003814697266
    8. ' (' → logprob: -21.000003814697266
    9. '(root' → logprob: -21.000003814697266
    10. 'BST' → logprob: -21.500003814697266

Token 627: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -5.512236498361744e-07
    2. 's' → logprob: -15.375000953674316
    3. 't' → logprob: -15.875000953674316
    4. 'bst' → logprob: -15.875000953674316
    5. 'ST' → logprob: -17.25
    6. 'root' → logprob: -19.375
    7. 'sts' → logprob: -19.625
    8. '.root' → logprob: -20.25
    9. ' bst' → logprob: -20.625
    10. 'sst' → logprob: -21.375

Token 628: '.root' (ID: 25375)
  Prédit: '.root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.root' → logprob: -7.946405094116926e-05
    2. 'root' → logprob: -9.500079154968262
    3. '.' → logprob: -12.875079154968262
    4. '.b' → logprob: -14.250079154968262
    5. 'bst' → logprob: -14.375079154968262
    6. '.ro' → logprob: -14.750079154968262
    7. ' root' → logprob: -16.250080108642578
    8. ' .' → logprob: -16.625080108642578
    9. ').' → logprob: -17.000080108642578
    10. '(root' → logprob: -17.375080108642578

Token 629: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.333223139634356e-05
    2. ')' → logprob: -11.250033378601074
    3. 'print' → logprob: -11.500033378601074
    4. ')
' → logprob: -12.750033378601074
    5. '
' → logprob: -13.500033378601074
    6. '          ' → logprob: -13.750033378601074
    7. '       ' → logprob: -13.750033378601074
    8. ',' → logprob: -13.875033378601074
    9. '            
' → logprob: -14.125033378601074
    10. '```' → logprob: -14.250033378601074

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7012625932693481
    2. 'print' → logprob: -0.7012625932693481
    3. ' print' → logprob: -5.326262474060059
    4. '       ' → logprob: -6.326262474060059
    5. '   ' → logprob: -6.576262474060059
    6. '```' → logprob: -11.076262474060059
    7. '
' → logprob: -11.701262474060059
    8. 'for' → logprob: -11.951262474060059
    9. '	print' → logprob: -12.951262474060059
    10. ' ' → logprob: -13.701262474060059

Token 631: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. ' print' → logprob: -15.000000953674316
    3. '           ' → logprob: -16.0
    4. '       ' → logprob: -20.125
    5. '   ' → logprob: -20.25
    6. 'for' → logprob: -20.375
    7. '```' → logprob: -21.375
    8. '	print' → logprob: -22.25
    9. '
' → logprob: -22.625
    10. '#print' → logprob: -23.5

Token 632: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.12714920938014984
    2. '('' → logprob: -2.1271491050720215
    3. '"' → logprob: -8.75214958190918
    4. '(' → logprob: -10.25214958190918
    5. '(f' → logprob: -11.00214958190918
    6. ''' → logprob: -12.50214958190918
    7. '()' → logprob: -12.87714958190918
    8. '(*' → logprob: -13.75214958190918
    9. ' ("' → logprob: -14.00214958190918
    10. '("")' → logprob: -14.62714958190918

Token 633: '","' (ID: 4294)
  Prédit: ' ".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ".' → logprob: -0.16817764937877655
    2. '"' → logprob: -2.168177604675293
    3. ' "' → logprob: -3.668177604675293
    4. '".' → logprob: -4.793177604675293
    5. '"+"' → logprob: -5.918177604675293
    6. ''' → logprob: -6.918177604675293
    7. ' ' → logprob: -7.668177604675293
    8. ' "+' → logprob: -7.668177604675293
    9. ' preorder' → logprob: -7.918177604675293
    10. ' "+"' → logprob: -8.043177604675293

Token 634: ' ".' (ID: 11730)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.2356223613023758
    2. ' ".' → logprob: -1.6106224060058594
    3. '"' → logprob: -5.360622406005859
    4. 'pre' → logprob: -5.735622406005859
    5. '.' → logprob: -6.735622406005859
    6. ' preorder' → logprob: -8.36062240600586
    7. ''' → logprob: -8.61062240600586
    8. 'Pre' → logprob: -8.61062240600586
    9. '.pre' → logprob: -9.48562240600586
    10. 'print' → logprob: -9.48562240600586

Token 635: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00036025288864038885
    2. '".' → logprob: -9.125360488891602
    3. '.' → logprob: -9.250360488891602
    4. '.join' → logprob: -9.375360488891602
    5. 'print' → logprob: -9.625360488891602
    6. ' join' → logprob: -12.750360488891602
    7. ''.' → logprob: -14.375360488891602
    8. '```' → logprob: -15.000360488891602
    9. 'j' → logprob: -15.375360488891602
    10. '"' → logprob: -16.0003604888916

Token 636: '(in' (ID: 9573)
  Prédit: '(pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pre' → logprob: -0.0031866247300058603
    2. 'pre' → logprob: -5.7531867027282715
    3. 'in' → logprob: -12.253186225891113
    4. '(in' → logprob: -12.503186225891113
    5. '	pre' → logprob: -16.62818717956543
    6. '(' → logprob: -16.62818717956543
    7. ')' → logprob: -16.75318717956543
    8. 'Pre' → logprob: -16.87818717956543
    9. ' preorder' → logprob: -17.25318717956543
    10. '_pre' → logprob: -17.75318717956543

Token 637: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4809049665927887
    2. 'pre' → logprob: -0.9809049367904663
    3. '(pre' → logprob: -5.230905055999756
    4. ' preorder' → logprob: -6.855905055999756
    5. '   ' → logprob: -8.980904579162598
    6. 'in' → logprob: -9.605904579162598
    7. ')' → logprob: -9.855904579162598
    8. '       ' → logprob: -10.105904579162598
    9. 'o' → logprob: -11.230904579162598
    10. '[' → logprob: -11.480904579162598

Token 638: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12930066883563995
    2. ')
' → logprob: -2.129300594329834
    3. '())' → logprob: -6.629300594329834
    4. '())
' → logprob: -7.254300594329834
    5. ' )' → logprob: -9.129301071166992
    6. ',' → logprob: -9.879301071166992
    7. ' )
' → logprob: -10.004301071166992
    8. '))' → logprob: -10.379301071166992
    9. '))
' → logprob: -10.629301071166992
    10. ',"' → logprob: -11.254301071166992

Token 639: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4878844618797302
    2. '           ' → logprob: -1.487884521484375
    3. ' print' → logprob: -1.862884521484375
    4. '       ' → logprob: -5.987884521484375
    5. '   ' → logprob: -7.112884521484375
    6. ' ' → logprob: -7.862884521484375
    7. '            
' → logprob: -7.987884521484375
    8. ' 
' → logprob: -8.362884521484375
    9. '
' → logprob: -8.862884521484375
    10. 'pre' → logprob: -9.237884521484375

Token 640: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2525400221347809
    2. ' print' → logprob: -1.5025399923324585
    3. '           ' → logprob: -8.12753963470459
    4. '   ' → logprob: -9.00253963470459
    5. '
' → logprob: -10.12753963470459
    6. ' 
' → logprob: -10.50253963470459
    7. ' ' → logprob: -10.62753963470459
    8. '  
' → logprob: -10.75253963470459
    9. '    
' → logprob: -11.00253963470459
    10. '            
' → logprob: -11.12753963470459

Token 641: '("",' (ID: 40578)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0031911435071378946
    2. '(""' → logprob: -6.378190994262695
    3. '(' → logprob: -6.878190994262695
    4. '("",' → logprob: -7.753190994262695
    5. '("")' → logprob: -11.128190994262695
    6. '"' → logprob: -11.753190994262695
    7. ' ("' → logprob: -13.253190994262695
    8. '(""+' → logprob: -13.628190994262695
    9. '()' → logprob: -14.003190994262695
    10. '(
' → logprob: -14.503190994262695

Token 642: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -9.253090865968261e-06
    2. ' "' → logprob: -11.625009536743164
    3. '""' → logprob: -16.125009536743164
    4. ' ' → logprob: -17.125009536743164
    5. '         ' → logprob: -17.750009536743164
    6. '     ' → logprob: -18.125009536743164
    7. '"user' → logprob: -18.125009536743164
    8. ''' → logprob: -18.250009536743164
    9. '
' → logprob: -18.375009536743164
    10. '```' → logprob: -18.500009536743164

Token 643: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008968367241322994
    2. '".' → logprob: -4.758968353271484
    3. ' ".' → logprob: -8.633968353271484
    4. '.join' → logprob: -9.383968353271484
    5. '.' → logprob: -9.883968353271484
    6. ' "' → logprob: -11.133968353271484
    7. ''' → logprob: -12.633968353271484
    8. '```' → logprob: -12.633968353271484
    9. '"log' → logprob: -12.758968353271484
    10. '"os' → logprob: -12.883968353271484

Token 644: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. ' join' → logprob: -16.0
    3. '.join' → logprob: -17.125
    4. '(join' → logprob: -17.5
    5. 'print' → logprob: -18.875
    6. 'jo' → logprob: -20.0
    7. '".' → logprob: -21.375
    8. '.' → logprob: -21.75
    9. '"' → logprob: -22.25
    10. '```' → logprob: -22.375

Token 645: '(pre' (ID: 48018)
  Prédit: '(pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pre' → logprob: -4.5491004129871726e-05
    2. 'pre' → logprob: -10.000045776367188
    3. ' (' → logprob: -19.500045776367188
    4. '	pre' → logprob: -20.125045776367188
    5. '(' → logprob: -20.500045776367188
    6. '(post' → logprob: -20.625045776367188
    7. ' preorder' → logprob: -20.625045776367188
    8. ')' → logprob: -20.875045776367188
    9. '   ' → logprob: -21.500045776367188
    10. '```' → logprob: -21.500045776367188

Token 646: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -1.9361264946837764e-07
    2. 'oder' → logprob: -17.125
    3. 'pre' → logprob: -17.375
    4. 'o' → logprob: -18.0
    5. 'r' → logprob: -18.375
    6. ' order' → logprob: -18.75
    7. '(order' → logprob: -18.75
    8. 'or' → logprob: -18.875
    9. '_order' → logprob: -19.375
    10. 'orden' → logprob: -19.5

Token 647: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016504127415828407
    2. '())' → logprob: -8.875164985656738
    3. '))' → logprob: -11.250164985656738
    4. '")' → logprob: -12.000164985656738
    5. ')
' → logprob: -12.875164985656738
    6. '()' → logprob: -13.625164985656738
    7. ')")' → logprob: -13.875164985656738
    8. ' )' → logprob: -14.875164985656738
    9. ')}' → logprob: -15.250164985656738
    10. '(' → logprob: -16.125165939331055

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6159387826919556
    2. '   ' → logprob: -1.1159387826919556
    3. '<|end|>' → logprob: -2.615938663482666
    4. 'elif' → logprob: -3.240938663482666
    5. ' elif' → logprob: -4.990938663482666
    6. '
' → logprob: -5.240938663482666
    7. '	elif' → logprob: -5.865938663482666
    8. '    
' → logprob: -6.365938663482666
    9. ' ' → logprob: -7.115938663482666
    10. '<|end|>' → logprob: -7.740938663482666

Token 649: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1701541543006897
    2. 'elif' (adapté à ' elif') → logprob: -2.170154094696045
    3. ' elif' → logprob: -3.170154094696045
    4. '	elif' → logprob: -8.545154571533203
    5. '   ' → logprob: -10.045154571533203
    6. 'else' → logprob: -10.795154571533203
    7. ' ' → logprob: -11.045154571533203
    8. '<|end|>' → logprob: -11.920154571533203
    9. '	' → logprob: -12.045154571533203
    10. ' else' → logprob: -12.420154571533203

Token 650: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.474086195230484
    2. 'op' → logprob: -0.9740861654281616
    3. '(op' → logprob: -11.974085807800293
    4. '	op' → logprob: -13.224085807800293
    5. ' ' → logprob: -15.474085807800293
    6. '_op' → logprob: -15.724085807800293
    7. '.op' → logprob: -15.849085807800293
    8. 'len' → logprob: -15.974085807800293
    9. '    ' → logprob: -16.84908676147461
    10. '   ' → logprob: -16.84908676147461

Token 651: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.180258191714529e-06
    2. '==' → logprob: -12.375008583068848
    3. ' ==' → logprob: -13.375008583068848
    4. ' [' → logprob: -14.500008583068848
    5. '=' → logprob: -15.125008583068848
    6. '0' → logprob: -15.125008583068848
    7. '[]' → logprob: -15.625008583068848
    8. '[
' → logprob: -15.625008583068848
    9. '(' → logprob: -15.875008583068848
    10. ' =' → logprob: -16.12500762939453

Token 652: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.875004768371582
    3. '"' → logprob: -13.500004768371582
    4. '1' → logprob: -14.250004768371582
    5. '[' → logprob: -15.000004768371582
    6. ''' → logprob: -16.3750057220459
    7. '
' → logprob: -17.2500057220459
    8. '   ' → logprob: -17.8750057220459
    9. '```' → logprob: -18.6250057220459
    10. '=' → logprob: -19.3750057220459

Token 653: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3147466480731964
    2. '==' → logprob: -1.314746618270874
    3. ']' → logprob: -7.064746856689453
    4. ']==' → logprob: -7.564746856689453
    5. '=' → logprob: -10.189746856689453
    6. '[' → logprob: -10.814746856689453
    7. '=="' → logprob: -10.814746856689453
    8. ' =' → logprob: -11.564746856689453
    9. ')' → logprob: -11.939746856689453
    10. '===' → logprob: -12.439746856689453

Token 654: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6934916377067566
    2. ' ==' → logprob: -0.6934916377067566
    3. '=="' → logprob: -8.19349193572998
    4. '=' → logprob: -9.81849193572998
    5. '[' → logprob: -12.31849193572998
    6. ' =' → logprob: -12.81849193572998
    7. ' =="' → logprob: -12.94349193572998
    8. '=='' → logprob: -13.44349193572998
    9. '===' → logprob: -13.69349193572998
    10. '==
' → logprob: -14.19349193572998

Token 655: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -8.061054359131958e-06
    2. 'delete' → logprob: -12.125007629394531
    3. ' "' → logprob: -13.500007629394531
    4. '("' → logprob: -14.625007629394531
    5. ''' → logprob: -15.625007629394531
    6. ''d' → logprob: -15.875007629394531
    7. ' ' → logprob: -16.00000762939453
    8. '   ' → logprob: -16.12500762939453
    9. ' delete' → logprob: -16.87500762939453
    10. '"value' → logprob: -17.00000762939453

Token 656: 'find' (ID: 6555)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.00028374246903695166
    2. 'find' → logprob: -8.250284194946289
    3. ' delete' → logprob: -11.250284194946289
    4. 'print' → logprob: -12.000284194946289
    5. '.delete' → logprob: -13.875284194946289
    6. 'insert' → logprob: -14.000284194946289
    7. 'remove' → logprob: -14.750284194946289
    8. 'search' → logprob: -14.750284194946289
    9. 'dele' → logprob: -15.500284194946289
    10. '	delete' → logprob: -15.875284194946289

Token 657: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5962451100349426
    2. '"' → logprob: -2.096245050430298
    3. '":
' → logprob: -2.346245050430298
    4. '<|end|>' → logprob: -2.471245050430298
    5. '"):
' → logprob: -2.596245050430298
    6. '(int' → logprob: -4.846245288848877
    7. '__":
' → logprob: -4.971245288848877
    8. '"]:
' → logprob: -4.971245288848877
    9. '">' → logprob: -5.096245288848877
    10. ' "' → logprob: -5.096245288848877

Token 658: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2170952558517456
    2. ' print' → logprob: -1.3420952558517456
    3. 'print' → logprob: -1.3420952558517456
    4. '       ' → logprob: -1.7170952558517456
    5. '   ' → logprob: -6.592095375061035
    6. ' val' → logprob: -9.967095375061035
    7. '	print' → logprob: -10.092095375061035
    8. 'result' → logprob: -10.342095375061035
    9. 'val' → logprob: -10.467095375061035
    10. '         ' → logprob: -10.592095375061035

Token 659: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.3954463510308415e-05
    2. ' print' → logprob: -10.000054359436035
    3. '           ' → logprob: -11.875054359436035
    4. 'result' → logprob: -13.625054359436035
    5. 'res' → logprob: -15.375054359436035
    6. 'val' → logprob: -15.750054359436035
    7. 'ans' → logprob: -17.50005340576172
    8. 'answer' → logprob: -18.25005340576172
    9. '	print' → logprob: -19.25005340576172
    10. '```' → logprob: -19.50005340576172

Token 660: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0008903791895136237
    2. '(' → logprob: -7.250890254974365
    3. '("' → logprob: -8.625890731811523
    4. '("",' → logprob: -15.375890731811523
    5. ' (' → logprob: -15.625890731811523
    6. '((' → logprob: -16.000890731811523
    7. '(
' → logprob: -16.250890731811523
    8. '(f' → logprob: -16.500890731811523
    9. '(bs' → logprob: -16.500890731811523
    10. '(B' → logprob: -16.750890731811523

Token 661: 'st' (ID: 302)
  Prédit: 'st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: 0.0
    2. '"' → logprob: -17.375
    3. 's' → logprob: -17.875
    4. 'in' → logprob: -18.5
    5. 'ST' → logprob: -18.5
    6. 'inary' → logprob: -20.5
    7. 'sts' → logprob: -21.625
    8. '(st' → logprob: -22.125
    9. 'ist' → logprob: -22.125
    10. ' st' → logprob: -22.5

Token 662: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.0005872295005246997
    2. '.' → logprob: -7.500587463378906
    3. ').' → logprob: -10.875587463378906
    4. ' .' → logprob: -12.125587463378906
    5. '.val' → logprob: -12.500587463378906
    6. 'find' → logprob: -13.250587463378906
    7. '(find' → logprob: -13.625587463378906
    8. '.findall' → logprob: -14.375587463378906
    9. ')' → logprob: -14.625587463378906
    10. ' ' → logprob: -15.125587463378906

Token 663: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010664248111424968
    2. '(' → logprob: -9.500106811523438
    3. 'int' → logprob: -10.875106811523438
    4. ' (' → logprob: -12.375106811523438
    5. ' int' → logprob: -12.375106811523438
    6. ')' → logprob: -13.125106811523438
    7. ',int' → logprob: -14.375106811523438
    8. '(op' → logprob: -14.750106811523438
    9. '<int' → logprob: -14.875106811523438
    10. ')(' → logprob: -15.125106811523438

Token 664: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -9.968312951968983e-06
    2. 'op' → logprob: -11.625009536743164
    3. ' op' → logprob: -14.000009536743164
    4. '(' → logprob: -16.750009536743164
    5. '(
' → logprob: -17.250009536743164
    6. '	op' → logprob: -17.500009536743164
    7. ' (' → logprob: -17.625009536743164
    8. ')' → logprob: -19.875009536743164
    9. ')(' → logprob: -20.500009536743164
    10. '_op' → logprob: -20.875009536743164

Token 665: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -15.875
    3. '(' → logprob: -17.375
    4. '[
' → logprob: -20.25
    5. '   ' → logprob: -21.625
    6. '.' → logprob: -22.0
    7. '()[' → logprob: -22.0
    8. '```' → logprob: -22.375
    9. '       ' → logprob: -22.625
    10. '][' → logprob: -22.625

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '[' → logprob: -12.125007629394531
    3. ' ' → logprob: -13.750007629394531
    4. '   ' → logprob: -14.625007629394531
    5. '2' → logprob: -15.500007629394531
    6. '```' → logprob: -16.25000762939453
    7. '
' → logprob: -17.37500762939453
    8. ']' → logprob: -17.75000762939453
    9. '  ' → logprob: -18.12500762939453
    10. '])' → logprob: -18.50000762939453

Token 667: '])))
' (ID: 146875)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.20698632299900055
    2. '])))' → logprob: -1.9569863080978394
    3. ')))' → logprob: -3.956986427307129
    4. '[' → logprob: -4.081986427307129
    5. ']' → logprob: -4.956986427307129
    6. ')]' → logprob: -7.081986427307129
    7. '())))' → logprob: -7.581986427307129
    8. '()]' → logprob: -7.831986427307129
    9. '()' → logprob: -8.581986427307129
    10. '(' → logprob: -8.706986427307129

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25305724143981934
    2. 'elif' → logprob: -1.6280572414398193
    3. ' elif' → logprob: -4.628057479858398
    4. '   ' → logprob: -4.878057479858398
    5. '<|end|>' → logprob: -5.128057479858398
    6. '	elif' → logprob: -5.878057479858398
    7. '<|end|>' → logprob: -8.128057479858398
    8. '        
' → logprob: -9.128057479858398
    9. '    
' → logprob: -9.128057479858398
    10. '```' → logprob: -9.253057479858398

Token 669: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23338843882083893
    2. 'elif' (adapté à ' elif') → logprob: -1.6083884239196777
    3. ' elif' → logprob: -5.358388423919678
    4. '<|end|>' → logprob: -6.358388423919678
    5. '	elif' → logprob: -6.733388423919678
    6. 'else' → logprob: -8.733388900756836
    7. '	' → logprob: -9.733388900756836
    8. '<|end|>' → logprob: -10.608388900756836
    9. '   ' → logprob: -10.733388900756836
    10. ' else' → logprob: -11.608388900756836

Token 670: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5759459137916565
    2. ' op' → logprob: -0.8259459137916565
    3. '(op' → logprob: -12.075945854187012
    4. '	op' → logprob: -14.950945854187012
    5. '   ' → logprob: -16.575946807861328
    6. 'o' → logprob: -16.700946807861328
    7. ' ' → logprob: -17.575946807861328
    8. '    ' → logprob: -17.575946807861328
    9. '```' → logprob: -17.700946807861328
    10. ''op' → logprob: -17.700946807861328

Token 671: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.180258191714529e-06
    2. '==' → logprob: -12.375008583068848
    3. ' ==' → logprob: -12.750008583068848
    4. '[
' → logprob: -14.875008583068848
    5. ' [' → logprob: -15.125008583068848
    6. '```' → logprob: -16.50000762939453
    7. '0' → logprob: -16.87500762939453
    8. '=="' → logprob: -17.12500762939453
    9. '[]' → logprob: -18.12500762939453
    10. ' ' → logprob: -18.12500762939453

Token 672: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010450744302943349
    2. '1' → logprob: -6.876045227050781
    3. '"' → logprob: -11.751045227050781
    4. ' ' → logprob: -12.876045227050781
    5. '[' → logprob: -13.876045227050781
    6. ''' → logprob: -14.501045227050781
    7. '   ' → logprob: -15.501045227050781
    8. '
' → logprob: -16.87604522705078
    9. ''s' → logprob: -17.62604522705078
    10. '     ' → logprob: -17.75104522705078

Token 673: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7755302786827087
    2. '==' → logprob: -1.0255303382873535
    3. ']==' → logprob: -2.7755303382873535
    4. ']' → logprob: -2.7755303382873535
    5. ' ==' → logprob: -2.9005303382873535
    6. '[]' → logprob: -7.6505303382873535
    7. '=' → logprob: -8.525529861450195
    8. '0' → logprob: -8.900529861450195
    9. '=="' → logprob: -8.900529861450195
    10. ']=="' → logprob: -9.275529861450195

Token 674: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20210568606853485
    2. ' ==' → logprob: -1.7021056413650513
    3. '[' → logprob: -7.452105522155762
    4. '=="' → logprob: -9.702105522155762
    5. '=' → logprob: -10.077105522155762
    6. ' =' → logprob: -13.077105522155762
    7. '=='' → logprob: -13.327105522155762
    8. '==
' → logprob: -13.327105522155762
    9. '===' → logprob: -13.577105522155762
    10. ']==' → logprob: -14.577105522155762

Token 675: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0015080781886354089
    2. ' "' → logprob: -6.5015082359313965
    3. ''' → logprob: -12.626507759094238
    4. ' ' → logprob: -13.626507759094238
    5. '"value' → logprob: -15.001507759094238
    6. '"in' → logprob: -15.501507759094238
    7. '"display' → logprob: -15.501507759094238
    8. '"indices' → logprob: -15.876507759094238
    9. '   ' → logprob: -16.751508712768555
    10. '"default' → logprob: -17.001508712768555

Token 676: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -5.9795445849886164e-05
    2. ' delete' → logprob: -9.750060081481934
    3. 'd' → logprob: -14.125060081481934
    4. '	delete' → logprob: -15.500060081481934
    5. 'del' → logprob: -15.875060081481934
    6. 'de' → logprob: -16.125059127807617
    7. 'remove' → logprob: -16.500059127807617
    8. '.delete' → logprob: -16.500059127807617
    9. 'dele' → logprob: -16.625059127807617
    10. 'insert' → logprob: -17.000059127807617

Token 677: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1984856128692627
    2. '":' → logprob: -1.3234856128692627
    3. '":
' → logprob: -1.4484856128692627
    4. '(int' → logprob: -2.1984856128692627
    5. '"' → logprob: -3.1984856128692627
    6. ':' → logprob: -4.198485374450684
    7. '):
' → logprob: -4.698485374450684
    8. '"):
' → logprob: -5.448485374450684
    9. '():
' → logprob: -5.698485374450684
    10. '(":' → logprob: -6.073485374450684

Token 678: '           ' (ID: 352)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' → logprob: -0.014393957331776619
    2. ' bst' → logprob: -4.5143938064575195
    3. '           ' → logprob: -5.7643938064575195
    4. 'b' → logprob: -8.88939380645752
    5. '       ' → logprob: -9.76439380645752
    6. '   ' → logprob: -12.38939380645752
    7. '	b' → logprob: -13.38939380645752
    8. '(b' → logprob: -13.51439380645752
    9. '```' → logprob: -15.38939380645752
    10. ' ' → logprob: -15.63939380645752

Token 679: ' bst' (ID: 157814)
  Prédit: 'bst'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bst' (adapté à ' bst') → logprob: -2.2200749754119897e-06
    2. '           ' → logprob: -13.750001907348633
    3. ' bst' → logprob: -13.750001907348633
    4. 'BST' → logprob: -19.875001907348633
    5. 'val' → logprob: -20.375001907348633
    6. 'b' → logprob: -20.500001907348633
    7. '       ' → logprob: -20.625001907348633
    8. 'bt' → logprob: -21.375001907348633
    9. '   ' → logprob: -21.500001907348633
    10. 'bs' → logprob: -21.625001907348633

Token 680: '.delete' (ID: 11951)
  Prédit: '.delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.delete' → logprob: -5.676981345459353e-06
    2. '.' → logprob: -12.125005722045898
    3. ' .' → logprob: -16.2500057220459
    4. '.del' → logprob: -17.1250057220459
    5. '.Delete' → logprob: -17.2500057220459
    6. '.erase' → logprob: -17.6250057220459
    7. '.remove' → logprob: -18.3750057220459
    8. '._' → logprob: -18.8750057220459
    9. '.dequeue' → logprob: -19.2500057220459
    10. '.de' → logprob: -20.0000057220459

Token 681: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0026810099370777607
    2. '(' → logprob: -6.502680778503418
    3. ' (' → logprob: -6.752680778503418
    4. 'int' → logprob: -12.752680778503418
    5. '(Node' → logprob: -12.877680778503418
    6. '((' → logprob: -13.252680778503418
    7. '(node' → logprob: -13.502680778503418
    8. '(
' → logprob: -14.502680778503418
    9. ' int' → logprob: -15.627680778503418
    10. '(float' → logprob: -15.752680778503418

Token 682: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -1.981667537620524e-06
    2. 'op' → logprob: -13.500001907348633
    3. ' op' → logprob: -15.250001907348633
    4. '(' → logprob: -15.250001907348633
    5. ' (' → logprob: -17.375001907348633
    6. '(
' → logprob: -18.000001907348633
    7. '	op' → logprob: -19.250001907348633
    8. '(int' → logprob: -21.250001907348633
    9. '(OP' → logprob: -21.750001907348633
    10. '_op' → logprob: -21.875001907348633

Token 683: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004900033236481249
    2. '1' → logprob: -7.625490188598633
    3. '(' → logprob: -13.375490188598633
    4. '   ' → logprob: -16.500490188598633
    5. '][' → logprob: -16.750490188598633
    6. ' [' → logprob: -17.000490188598633
    7. ')[' → logprob: -17.125490188598633
    8. '       ' → logprob: -17.125490188598633
    9. '```' → logprob: -17.375490188598633
    10. '(op' → logprob: -17.500490188598633

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.25
    4. '   ' → logprob: -16.625
    5. '2' → logprob: -17.625
    6. '(' → logprob: -18.875
    7. '```' → logprob: -19.125
    8. 'op' → logprob: -19.25
    9. '       ' → logprob: -19.75
    10. '  ' → logprob: -20.625

Token 685: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007543585379607975
    2. ')' → logprob: -8.125754356384277
    3. '()))' → logprob: -8.125754356384277
    4. ')))' → logprob: -9.375754356384277
    5. '))
' → logprob: -9.625754356384277
    6. ']))' → logprob: -12.000754356384277
    7. '()' → logprob: -13.125754356384277
    8. '])' → logprob: -13.625754356384277
    9. '}))' → logprob: -14.250754356384277
    10. ' ))' → logprob: -14.875754356384277

Token 686: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.033221207559108734
    2. '<|end|>' → logprob: -3.7832212448120117
    3. '```' → logprob: -5.158221244812012
    4. '
' → logprob: -6.533221244812012
    5. ' if' → logprob: -6.908221244812012
    6. '#' → logprob: -7.283221244812012
    7. '\n' → logprob: -7.533221244812012
    8. '<|end|>' → logprob: -8.533221244812012
    9. ')' → logprob: -9.658221244812012
    10. '\' → logprob: -9.783221244812012

Token 687: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3868878483772278
    2. '__' → logprob: -1.136887788772583
    3. '_' → logprob: -11.761887550354004
    4. 'name' → logprob: -12.261887550354004
    5. '_name' → logprob: -13.011887550354004
    6. ' ' → logprob: -14.386887550354004
    7. '___' → logprob: -14.886887550354004
    8. 'Name' → logprob: -15.136887550354004
    9. '/__' → logprob: -15.386887550354004
    10. ' ' → logprob: -15.386887550354004

Token 688: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.000610690622124821
    2. '.__' → logprob: -8.3756103515625
    3. ' __' → logprob: -8.7506103515625
    4. '__.__' → logprob: -9.0006103515625
    5. '==' → logprob: -10.6256103515625
    6. '__.' → logprob: -10.8756103515625
    7. 'name' → logprob: -11.0006103515625
    8. '_' → logprob: -11.2506103515625
    9. 'if' → logprob: -12.0006103515625
    10. ' ==' → logprob: -12.5006103515625

Token 689: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.721228368813172e-05
    2. '==' → logprob: -9.750086784362793
    3. '__.__' → logprob: -10.625086784362793
    4. '=="' → logprob: -13.125086784362793
    5. ' ==' → logprob: -14.250086784362793
    6. '___' → logprob: -14.750086784362793
    7. '__["' → logprob: -14.750086784362793
    8. '____' → logprob: -15.375086784362793
    9. '__.' → logprob: -15.375086784362793
    10. '__("' → logprob: -16.37508773803711

Token 690: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.019030466675758362
    2. '==' → logprob: -4.394030570983887
    3. ' ==' → logprob: -5.144030570983887
    4. '=="' → logprob: -7.394030570983887
    5. '__.__' → logprob: -10.894030570983887
    6. '=='' → logprob: -11.519030570983887
    7. '_' → logprob: -11.769030570983887
    8. '___' → logprob: -13.019030570983887
    9. '__[' → logprob: -13.019030570983887
    10. '.__' → logprob: -13.144030570983887

Token 691: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004082554951310158
    2. ''' → logprob: -5.504082679748535
    3. '__' → logprob: -13.004082679748535
    4. ' "__' → logprob: -13.254082679748535
    5. '"name' → logprob: -16.37908172607422
    6. '"user' → logprob: -17.12908172607422
    7. '("__' → logprob: -18.12908172607422
    8. '"class' → logprob: -18.87908172607422
    9. ' '__' → logprob: -18.87908172607422
    10. '"os' → logprob: -19.87908172607422

Token 692: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0015087933279573917
    2. '__' → logprob: -6.501508712768555
    3. '"' → logprob: -12.626508712768555
    4. 'name' → logprob: -12.876508712768555
    5. ' main' → logprob: -15.251508712768555
    6. '_main' → logprob: -15.501508712768555
    7. ''' → logprob: -16.126508712768555
    8. 'built' → logprob: -17.501508712768555
    9. '-main' → logprob: -19.001508712768555
    10. 'python' → logprob: -19.626508712768555

Token 693: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.47657474875450134
    2. '__' → logprob: -0.9765747785568237
    3. '__':
' → logprob: -6.601574897766113
    4. '__:' → logprob: -7.226574897766113
    5. '__.' → logprob: -8.226574897766113
    6. '__.__' → logprob: -9.851574897766113
    7. '.' → logprob: -10.476574897766113
    8. '__["' → logprob: -10.726574897766113
    9. ':' → logprob: -11.226574897766113
    10. '_' → logprob: -11.601574897766113

Token 694: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0337681770324707
    2. '__' → logprob: -1.1587681770324707
    3. ' main' → logprob: -1.6587681770324707
    4. 'main' → logprob: -2.0337681770324707
    5. ' __' → logprob: -5.783768177032471
    6. 'if' → logprob: -6.158768177032471
    7. '    
' → logprob: -6.283768177032471
    8. '
' → logprob: -7.908768177032471
    9. '__":
' → logprob: -8.033767700195312
    10. '_main' → logprob: -8.283767700195312

Token 695: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.318681188422488e-05
    2. ' main' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.25001335144043
    4. '	main' → logprob: -17.25001335144043
    5. 'import' → logprob: -18.50001335144043
    6. '_main' → logprob: -23.37501335144043
    7. '.main' → logprob: -23.62501335144043
    8. '(main' → logprob: -23.75001335144043
    9. ' ' → logprob: -24.12501335144043
    10. '  ' → logprob: -24.25001335144043

Token 696: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 694
Tokens correctement prédits (1ère position, stricte): 339
Tokens correctement prédits (1ère position, avec adaptation): 397
Tokens correctement prédits (top 10): 629
Précision stricte (1ère position): 48.85%
Précision adaptée (1ère position): 57.20%
Précision (top 10): 90.63%
================================================================================
