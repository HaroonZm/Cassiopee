================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

class Node:
    parent = None
    left = None
    right = None

    def __init__(self, key):
        self.key = key

    def __repr__(self):
        return "({},{},{},{})".format(self.key, self.parent, self.left, self.right)

    def is_root(self):
        return self.parent is None

    def is_leaf(self):
        return self.left is None and self.right is None

    def has_one_child(self):
        if self.is_leaf():
            return False
        elif (self.left is None) and (self.right is not None):
            return self.right
        elif (self.left is not None) and (self.right is None):
            return self.left
        else:
            return False

    def has_two_child(self):
        return (self.left is not None) and (self.right is not None)

root_node_no = None

def insert(nodes :dict, in_node :Node):
    global root_node_no

    cur_node_no = root_node_no
    parent_node_no = None
    while cur_node_no is not None:
        parent_node_no = cur_node_no
        if in_node.key < cur_node_no:
            cur_node_no = nodes[cur_node_no].left
        else:
            cur_node_no = nodes[cur_node_no].right

    in_node.parent = parent_node_no

    if root_node_no is None:
        root_node_no = in_node.key
    elif in_node.key < parent_node_no:
        nodes[parent_node_no].left = in_node.key
    else:
        nodes[parent_node_no].right = in_node.key

    nodes[in_node.key] = in_node

def inorder_tree_walk(nodes, node_no ,inorder):
    if node_no is None:
        return
    inorder_tree_walk(nodes, nodes[node_no].left, inorder)
    inorder.append(node_no)
    inorder_tree_walk(nodes, nodes[node_no].right, inorder)

def preorder_tree_walk(nodes, node_no, preorder):
    if node_no is None:
        return
    preorder.append(node_no)
    preorder_tree_walk(nodes, nodes[node_no].left, preorder)
    preorder_tree_walk(nodes, nodes[node_no].right, preorder)

def find(nodes, tgt_node_no):
    cur_node_no = root_node_no
    while cur_node_no is not None:
        cur_node = nodes[cur_node_no]
        if cur_node.key == tgt_node_no:
            return True
        elif tgt_node_no < cur_node.key:
            cur_node_no = cur_node.left
        else:
            cur_node_no = cur_node.right
    return False

def switch_child_of_parent(nodes: dict, del_node: Node, switch_node_no):
    if nodes[del_node.parent].left == del_node.key:
        nodes[del_node.parent].left = switch_node_no
    elif nodes[del_node.parent].right == del_node.key:
        nodes[del_node.parent].right = switch_node_no
    return

def delete_node(nodes: dict, delete_node_no: int):
    del_node = nodes[delete_node_no]

    if del_node.is_leaf():
        # delete leaf
        switch_child_of_parent(nodes, del_node, None)
    elif not del_node.has_two_child():
        # delete one child node
        child = del_node.has_one_child()
        switch_child_of_parent(nodes, del_node, child)
        nodes[child].parent = del_node.parent
    else:
        # delete two child node
        inorder = []
        inorder_tree_walk(nodes, del_node.right, inorder)
        swap_node = Node(inorder[0])
        switch_child_of_parent(nodes, del_node, swap_node.key)

        swap_node.parent = del_node.parent
        swap_node.left = del_node.left
        if swap_node.key == del_node.right:
            swap_node.right = None
        else:
            swap_node.right = del_node.right
            nodes[swap_node.right].parent = swap_node.key
        nodes[swap_node.left].parent = swap_node.key
        delete_node(nodes, swap_node.key)
        nodes[swap_node.key] = swap_node

    del nodes[delete_node_no]
    return

def main():
    num_com = int(input())
    commands = sys.stdin.readlines()
    nodes = {}
    for i in range(num_com):
        if commands[i][0] == 'i':
            insert(nodes, Node(int(commands[i][7:])))
        elif commands[i][0] == 'p':
            # inorder
            inorder = []
            inorder_tree_walk(nodes, root_node_no, inorder)
            print(" " + " ".join(map(str, inorder)))
            # preorder
            preorder = []
            preorder_tree_walk(nodes, root_node_no, preorder)
            print(" " + " ".join(map(str, preorder)))
        elif commands[i][0] == 'f':
            if find(nodes, int(commands[i][5:])):
                print('yes')
            else:
                print('no')
        elif commands[i][0] == 'd':
            delete_node(nodes, int(commands[i][7:]))

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'class' (ID: 1444)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' Node' (ID: 10882)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0018424903973937035
    2. ' My' → logprob: -6.751842498779297
    3. '  ' → logprob: -8.001842498779297
    4. ' Space' → logprob: -9.126842498779297
    5. ' System' → logprob: -10.126842498779297
    6. ' ' → logprob: -10.251842498779297
    7. ' A' → logprob: -10.626842498779297
    8. ' C' → logprob: -11.126842498779297
    9. ' User' → logprob: -11.376842498779297
    10. '_' → logprob: -11.376842498779297

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1606944352388382
    2. '(' → logprob: -1.9106944799423218
    3. '(:' → logprob: -7.910694599151611
    4. '{' → logprob: -10.160694122314453
    5. '():' → logprob: -11.160694122314453
    6. '.' → logprob: -11.160694122314453
    7. ' :' → logprob: -11.285694122314453
    8. ':**' → logprob: -12.160694122314453
    9. '(":' → logprob: -12.285694122314453
    10. '(
' → logprob: -12.660694122314453

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7011313438415527
    2. ':' → logprob: -1.2011313438415527
    3. '<|end|>' → logprob: -2.7011313438415527
    4. '(' → logprob: -2.8261313438415527
    5. ' ' → logprob: -3.3261313438415527
    6. '    ' → logprob: -4.701131343841553
    7. '(object' → logprob: -4.701131343841553
    8. '```' → logprob: -4.701131343841553
    9. '  ' → logprob: -5.701131343841553
    10. ' :' → logprob: -6.076131343841553

Token 7: ' parent' (ID: 5980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39708584547042847
    2. ' def' → logprob: -1.2720859050750732
    3. '    ' → logprob: -3.7720859050750732
    4. '   ' → logprob: -3.8970859050750732
    5. 'class' → logprob: -6.147085666656494
    6. ' pass' → logprob: -7.397085666656494
    7. 'pass' → logprob: -7.772085666656494
    8. '```' → logprob: -8.022086143493652
    9. ' ' → logprob: -8.147086143493652
    10. '(' → logprob: -9.522086143493652

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5372200012207031
    2. '=' → logprob: -0.9122200012207031
    3. '.' → logprob: -4.912220001220703
    4. ' ' → logprob: -6.037220001220703
    5. '_' → logprob: -6.162220001220703
    6. '   ' → logprob: -7.787220001220703
    7. 's' → logprob: -8.037220001220703
    8. ')' → logprob: -8.037220001220703
    9. '=None' → logprob: -8.037220001220703
    10. '  ' → logprob: -8.287220001220703

Token 9: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.12693703174591064
    2. 'None' → logprob: -2.126936912536621
    3. '   ' → logprob: -11.876936912536621
    4. ' ' → logprob: -14.126936912536621
    5. ' none' → logprob: -15.001936912536621
    6. '_None' → logprob: -15.501936912536621
    7. '(None' → logprob: -15.501936912536621
    8. '.None' → logprob: -16.126937866210938
    9. '    ' → logprob: -16.126937866210938
    10. 'none' → logprob: -16.501937866210938

Token 10: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0972952842712402
    2. '<|end|>' → logprob: -1.0972952842712402
    3. '   ' → logprob: -1.2222952842712402
    4. '    
' → logprob: -4.84729528427124
    5. '<|end|>' → logprob: -5.22229528427124
    6. 'def' → logprob: -5.22229528427124
    7. ' ' → logprob: -5.47229528427124
    8. '\n' → logprob: -5.59729528427124
    9. '  ' → logprob: -6.09729528427124
    10. 'class' → logprob: -6.59729528427124

Token 12: ' left' (ID: 3561)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41340506076812744
    2. 'def' → logprob: -1.5384050607681274
    3. ' def' → logprob: -3.788404941558838
    4. '    
' → logprob: -4.038404941558838
    5. ' =' → logprob: -4.413404941558838
    6. '    ' → logprob: -4.413404941558838
    7. 'children' → logprob: -4.538404941558838
    8. ' ' → logprob: -4.913404941558838
    9. ':' → logprob: -5.038404941558838
    10. '
' → logprob: -5.413404941558838

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25261390209198
    2. '=' → logprob: -1.50261390209198
    3. '=None' → logprob: -7.3776140213012695
    4. ',' → logprob: -11.12761402130127
    5. '   ' → logprob: -11.50261402130127
    6. ' ' → logprob: -11.87761402130127
    7. '<|end|>' → logprob: -12.12761402130127
    8. ')' → logprob: -12.25261402130127
    9. '_' → logprob: -12.62761402130127
    10. ':' → logprob: -13.00261402130127

Token 14: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.07889540493488312
    2. 'None' → logprob: -2.578895330429077
    3. ' ' → logprob: -12.453895568847656
    4. '   ' → logprob: -14.828895568847656
    5. '(None' → logprob: -14.828895568847656
    6. '_None' → logprob: -14.828895568847656
    7. '=None' → logprob: -15.953895568847656
    8. ' ' → logprob: -16.078895568847656
    9. '  ' → logprob: -16.203895568847656
    10. ',None' → logprob: -16.328895568847656

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002579940017312765
    2. '    
' → logprob: -6.752580165863037
    3. '```' → logprob: -7.377580165863037
    4. '
' → logprob: -7.752580165863037
    5. '<|end|>' → logprob: -9.002579689025879
    6. 'right' → logprob: -9.002579689025879
    7. 'class' → logprob: -10.752579689025879
    8. ')' → logprob: -11.752579689025879
    9. '\n' → logprob: -11.752579689025879
    10. '  ' → logprob: -11.877579689025879

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0179660152643919
    2. 'right' → logprob: -4.142965793609619
    3. ' ' → logprob: -7.767965793609619
    4. '    ' → logprob: -7.892965793609619
    5. '    
' → logprob: -8.392966270446777
    6. ' right' → logprob: -8.517966270446777
    7. '  ' → logprob: -8.767966270446777
    8. ')' → logprob: -8.767966270446777
    9. '<|end|>' → logprob: -9.017966270446777
    10. '_' → logprob: -9.892966270446777

Token 17: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0003357006062287837
    2. ' right' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.375335693359375
    4. ',right' → logprob: -17.125335693359375
    5. '	right' → logprob: -17.500335693359375
    6. '.right' → logprob: -18.000335693359375
    7. 'rig' → logprob: -18.500335693359375
    8. 'Right' → logprob: -18.625335693359375
    9. '```' → logprob: -18.625335693359375
    10. ' ' → logprob: -18.875335693359375

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08899661898612976
    2. '=' → logprob: -2.463996648788452
    3. '=None' → logprob: -9.963996887207031
    4. ' None' → logprob: -13.088996887207031
    5. 'None' → logprob: -13.213996887207031
    6. '   ' → logprob: -13.213996887207031
    7. ' ' → logprob: -13.838996887207031
    8. '<|end|>' → logprob: -14.088996887207031
    9. '  ' → logprob: -14.213996887207031
    10. ' =
' → logprob: -14.838996887207031

Token 19: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931501030921936
    2. 'None' → logprob: -0.6931501030921936
    3. ' ' → logprob: -13.318150520324707
    4. '   ' → logprob: -14.693150520324707
    5. '_None' → logprob: -14.693150520324707
    6. '(None' → logprob: -15.818150520324707
    7. '  ' → logprob: -15.943150520324707
    8. '=None' → logprob: -16.94314956665039
    9. 'Node' → logprob: -17.06814956665039
    10. ',None' → logprob: -17.06814956665039

Token 20: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.01067054271698
    2. '
' → logprob: -1.26067054271698
    3. '\n' → logprob: -2.2606706619262695
    4. '<|end|>' → logprob: -2.7606706619262695
    5. ' ' → logprob: -3.0106706619262695
    6. ' 
' → logprob: -3.2606706619262695
    7. '    
' → logprob: -3.5106706619262695
    8. 'def' → logprob: -3.8856706619262695
    9. ' def' → logprob: -4.8856706619262695
    10. '  ' → logprob: -5.2606706619262695

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1412140280008316
    2. ' ' → logprob: -3.14121413230896
    3. 'def' → logprob: -3.26621413230896
    4. ' def' → logprob: -3.76621413230896
    5. '    ' → logprob: -5.641213893890381
    6. '
' → logprob: -5.766213893890381
    7. ':' → logprob: -5.891213893890381
    8. '\' → logprob: -6.141213893890381
    9. '(' → logprob: -6.141213893890381
    10. '\n' → logprob: -6.266213893890381

Token 22: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.031168973073363304
    2. 'd' → logprob: -3.5311689376831055
    3. 'de' → logprob: -7.2811689376831055
    4. ' def' → logprob: -7.4061689376831055
    5. '   ' → logprob: -9.531168937683105
    6. ' de' → logprob: -10.656168937683105
    7. ' ' → logprob: -11.531168937683105
    8. ' d' → logprob: -12.781168937683105
    9. '#' → logprob: -13.156168937683105
    10. '_' → logprob: -13.281168937683105

Token 23: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18296924233436584
    2. ' ' → logprob: -1.8079692125320435
    3. '__' → logprob: -6.307969093322754
    4. ' ' → logprob: -7.557969093322754
    5. '_' → logprob: -8.432969093322754
    6. ' ‌' → logprob: -8.557969093322754
    7. ' _' → logprob: -8.932969093322754
    8. ' ​' → logprob: -9.432969093322754
    9. '  ' → logprob: -9.807969093322754
    10. 'space' → logprob: -10.182969093322754

Token 24: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.465036105713807e-06
    2. 'i' → logprob: -12.000007629394531
    3. 'ini' → logprob: -13.750007629394531
    4. 'in' → logprob: -16.00000762939453
    5. ' init' → logprob: -18.87500762939453
    6. '_init' → logprob: -19.37500762939453
    7. 'inite' → logprob: -20.25000762939453
    8. '_i' → logprob: -20.25000762939453
    9. 'int' → logprob: -20.37500762939453
    10. 'innit' → logprob: -20.50000762939453

Token 25: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19742898643016815
    2. '__(' → logprob: -1.8224289417266846
    3. '__' → logprob: -4.447429180145264
    4. '(self' → logprob: -5.697429180145264
    5. '_' → logprob: -7.197429180145264
    6. '__(
' → logprob: -7.447429180145264
    7. '<|end|>' → logprob: -7.697429180145264
    8. ' (' → logprob: -8.697428703308105
    9. '_(' → logprob: -8.822428703308105
    10. '__((' → logprob: -9.447428703308105

Token 26: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.941850526549388e-06
    2. ' self' → logprob: -11.750007629394531
    3. 'parent' → logprob: -19.50000762939453
    4. '(self' → logprob: -19.62500762939453
    5. '	self' → logprob: -19.75000762939453
    6. '   ' → logprob: -20.87500762939453
    7. ')' → logprob: -21.00000762939453
    8. ' ' → logprob: -21.75000762939453
    9. ',self' → logprob: -21.75000762939453
    10. '       ' → logprob: -22.12500762939453

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12822525203227997
    2. ' ,' → logprob: -2.128225326538086
    3. 'self' → logprob: -7.378225326538086
    4. ',self' → logprob: -7.503225326538086
    5. ')' → logprob: -10.003225326538086
    6. ' )' → logprob: -10.503225326538086
    7. ' self' → logprob: -11.128225326538086
    8. ',parent' → logprob: -11.753225326538086
    9. '<|end|>' → logprob: -12.003225326538086
    10. ',node' → logprob: -12.128225326538086

Token 28: ' key' (ID: 2140)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5091587901115417
    2. ' value' → logprob: -1.5091588497161865
    3. 'data' → logprob: -2.1341588497161865
    4. ' data' → logprob: -3.3841588497161865
    5. 'val' → logprob: -3.8841588497161865
    6. ' val' → logprob: -5.509158611297607
    7. 'self' → logprob: -7.634158611297607
    8. ' key' → logprob: -8.634159088134766
    9. 'key' → logprob: -9.259159088134766
    10. ' self' → logprob: -9.384159088134766

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006848219316452742
    2. ',' → logprob: -5.131848335266113
    3. ')' → logprob: -7.131848335266113
    4. ':' → logprob: -10.006848335266113
    5. '=' → logprob: -10.631848335266113
    6. '=None' → logprob: -10.881848335266113
    7. ' ):' → logprob: -11.131848335266113
    8. '):
' → logprob: -11.506848335266113
    9. '<|end|>' → logprob: -12.881848335266113
    10. ' ,' → logprob: -13.256848335266113

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019824208691716194
    2. 'self' → logprob: -4.894824028015137
    3. '    ' → logprob: -5.269824028015137
    4. '   ' → logprob: -6.144824028015137
    5. ' ' → logprob: -6.394824028015137
    6. ' self' → logprob: -6.519824028015137
    7. ' ' → logprob: -7.519824028015137
    8. '<|end|>' → logprob: -8.144824028015137
    9. '        ' → logprob: -8.269824028015137
    10. '     ' → logprob: -9.019824028015137

Token 31: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1603558361530304
    2. 'self' (adapté à ' self') → logprob: -1.910355806350708
    3. '       ' → logprob: -9.285355567932129
    4. ' ' → logprob: -11.035355567932129
    5. '   ' → logprob: -11.785355567932129
    6. ' ' → logprob: -12.035355567932129
    7. '	self' → logprob: -12.035355567932129
    8. '        ' → logprob: -13.285355567932129
    9. '    ' → logprob: -13.660355567932129
    10. ' super' → logprob: -16.410356521606445

Token 32: '.key' (ID: 8839)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13279874622821808
    2. '.key' → logprob: -2.132798671722412
    3. ' ' → logprob: -5.507798671722412
    4. ' .' → logprob: -7.257798671722412
    5. ' key' → logprob: -7.257798671722412
    6. '.Key' → logprob: -9.13279914855957
    7. '<|end|>' → logprob: -9.25779914855957
    8. 'key' → logprob: -10.13279914855957
    9. '[key' → logprob: -10.13279914855957
    10. '.KEY' → logprob: -10.75779914855957

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14282852411270142
    2. '=' → logprob: -2.0178284645080566
    3. ' ' → logprob: -9.017828941345215
    4. '<|end|>' → logprob: -11.142828941345215
    5. ' =)' → logprob: -12.267828941345215
    6. '<|end|>' → logprob: -12.767828941345215
    7. ' =
' → logprob: -13.017828941345215
    8. ')' → logprob: -13.517828941345215
    9. ' is' → logprob: -14.017828941345215
    10. ' ' → logprob: -14.517828941345215

Token 34: ' key' (ID: 2140)
  Prédit: ' key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.0011703446507453918
    2. 'key' → logprob: -6.7511701583862305
    3. ' ' → logprob: -16.376171112060547
    4. '	key' → logprob: -18.126171112060547
    5. '(key' → logprob: -20.126171112060547
    6. ' ключ' → logprob: -21.376171112060547
    7. ' ' → logprob: -21.751171112060547
    8. '_key' → logprob: -21.751171112060547
    9. ' k' → logprob: -22.126171112060547
    10. '$key' → logprob: -22.126171112060547

Token 35: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001946844975464046
    2. ' def' → logprob: -6.876946926116943
    3. '   ' → logprob: -7.251946926116943
    4. 'self' → logprob: -9.251946449279785
    5. '#' → logprob: -10.501946449279785
    6. '       ' → logprob: -10.501946449279785
    7. ' ' → logprob: -11.501946449279785
    8. '    ' → logprob: -11.876946449279785
    9. '@' → logprob: -11.876946449279785
    10. 'class' → logprob: -12.001946449279785

Token 38: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28389599919319153
    2. ' insert' → logprob: -2.533895969390869
    3. ' ' → logprob: -2.908895969390869
    4. '_insert' → logprob: -3.158895969390869
    5. ' set' → logprob: -3.908895969390869
    6. ' _' → logprob: -4.283895969390869
    7. ' __' → logprob: -4.408895969390869
    8. ' is' → logprob: -4.533895969390869
    9. '_set' → logprob: -5.408895969390869
    10. ' has' → logprob: -6.408895969390869

Token 39: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -0.4995615482330322
    2. 'str' → logprob: -1.2495615482330322
    3. 'init' → logprob: -2.3745615482330322
    4. 'eq' → logprob: -4.374561309814453
    5. 'del' → logprob: -8.374561309814453
    6. 'rep' → logprob: -8.624561309814453
    7. 'in' → logprob: -8.874561309814453
    8. 're' → logprob: -9.124561309814453
    9. 'lt' → logprob: -9.374561309814453
    10. 'st' → logprob: -10.374561309814453

Token 40: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.48272040486335754
    2. '__' → logprob: -0.9827203750610352
    3. '__('' → logprob: -5.107720375061035
    4. '_' → logprob: -6.982720375061035
    5. '(' → logprob: -7.357720375061035
    6. '__(
' → logprob: -7.482720375061035
    7. '__("' → logprob: -8.482720375061035
    8. '__((' → logprob: -8.982720375061035
    9. '___' → logprob: -10.232720375061035
    10. '_(' → logprob: -10.482720375061035

Token 41: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.5941604690160602e-05
    2. ')' → logprob: -10.625025749206543
    3. ' self' → logprob: -13.750025749206543
    4. '(self' → logprob: -16.12502670288086
    5. 'Self' → logprob: -16.37502670288086
    6. 'sel' → logprob: -16.87502670288086
    7. ' ' → logprob: -17.12502670288086
    8. '   ' → logprob: -17.12502670288086
    9. 's' → logprob: -17.50002670288086
    10. '):' → logprob: -17.50002670288086

Token 42: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11351340264081955
    2. '):' → logprob: -2.488513469696045
    3. ',' → logprob: -3.738513469696045
    4. ' )' → logprob: -8.488512992858887
    5. ' ):' → logprob: -9.613512992858887
    6. ' ,' → logprob: -9.988512992858887
    7. '):
' → logprob: -10.113512992858887
    8. '(' → logprob: -10.613512992858887
    9. ',)' → logprob: -10.738512992858887
    10. ':' → logprob: -11.363512992858887

Token 43: '       ' (ID: 309)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.2162012904882431
    2. 'f' → logprob: -1.8412013053894043
    3. 'return' → logprob: -4.591201305389404
    4. '       ' → logprob: -4.591201305389404
    5. ' return' → logprob: -4.716201305389404
    6. ''' → logprob: -5.716201305389404
    7. '    ' → logprob: -6.591201305389404
    8. '   ' → logprob: -7.466201305389404
    9. '"' → logprob: -7.591201305389404
    10. 'self' → logprob: -8.716200828552246

Token 44: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08254648000001907
    2. ' return' → logprob: -2.8325464725494385
    3. 'f' → logprob: -4.582546710968018
    4. ' f' → logprob: -5.207546710968018
    5. '       ' → logprob: -5.707546710968018
    6. '   ' → logprob: -6.957546710968018
    7. '    ' → logprob: -8.20754623413086
    8. 'r' → logprob: -10.58254623413086
    9. '"' → logprob: -11.20754623413086
    10. '{return' → logprob: -11.20754623413086

Token 45: ' "' (ID: 392)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.12718772888183594
    2. 'f' → logprob: -2.127187728881836
    3. ''' → logprob: -9.502187728881836
    4. ' repr' → logprob: -9.627187728881836
    5. '"' → logprob: -9.752187728881836
    6. 'repr' → logprob: -10.502187728881836
    7. ''f' → logprob: -11.127187728881836
    8. ' ' → logprob: -11.627187728881836
    9. '	f' → logprob: -12.627187728881836
    10. ' ' → logprob: -13.252187728881836

Token 46: '({' (ID: 3972)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.09101971983909607
    2. '<Node' → logprob: -2.466019630432129
    3. 'f' → logprob: -6.591019630432129
    4. '{' → logprob: -7.591019630432129
    5. '<' → logprob: -10.091019630432129
    6. '"' → logprob: -10.216019630432129
    7. '(Node' → logprob: -10.216019630432129
    8. '"<' → logprob: -10.966019630432129
    9. '{}' → logprob: -11.216019630432129
    10. ' Node' → logprob: -11.591019630432129

Token 47: '},{' (ID: 34684)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009299712255597115
    2. '}' → logprob: -5.1342997550964355
    3. '}{' → logprob: -6.7592997550964355
    4. '{' → logprob: -6.8842997550964355
    5. '})' → logprob: -8.134299278259277
    6. '}"' → logprob: -8.134299278259277
    7. '"' → logprob: -8.259299278259277
    8. '0' → logprob: -9.384299278259277
    9. 'repr' → logprob: -9.384299278259277
    10. 'key' → logprob: -10.134299278259277

Token 48: '},{' (ID: 34684)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.1452091932296753
    2. 'self' → logprob: -2.770209312438965
    3. '},{' → logprob: -3.145209312438965
    4. '}{' → logprob: -4.145209312438965
    5. '}' → logprob: -4.895209312438965
    6. '!' → logprob: -5.895209312438965
    7. '},' → logprob: -6.520209312438965
    8. '}".' → logprob: -7.645209312438965
    9. '{' → logprob: -7.895209312438965
    10. 'key' → logprob: -8.020209312438965

Token 49: '},{' (ID: 34684)
  Prédit: '})'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.5940964818000793
    2. '},{' → logprob: -1.4690964221954346
    3. 'self' → logprob: -1.5940964221954346
    4. '}{' → logprob: -4.469096660614014
    5. '!' → logprob: -6.969096660614014
    6. '},' → logprob: -7.344096660614014
    7. 'repr' → logprob: -7.719096660614014
    8. '{' → logprob: -7.969096660614014
    9. '}".' → logprob: -8.344096183776855
    10. '}' → logprob: -8.469096183776855

Token 50: '})' (ID: 9263)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018648162484169006
    2. '}{' → logprob: -5.018648147583008
    3. '})' → logprob: -5.393648147583008
    4. '}' → logprob: -6.018648147583008
    5. 'repr' → logprob: -6.393648147583008
    6. '},{' → logprob: -7.018648147583008
    7. '!' → logprob: -7.143648147583008
    8. '{' → logprob: -7.393648147583008
    9. '0' → logprob: -8.143648147583008
    10. ' self' → logprob: -8.643648147583008

Token 51: '".' (ID: 4050)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00727472547441721
    2. ' self' → logprob: -5.632274627685547
    3. '.format' → logprob: -6.382274627685547
    4. 'format' → logprob: -6.632274627685547
    5. ')' → logprob: -7.757274627685547
    6. '.self' → logprob: -9.882274627685547
    7. '{' → logprob: -10.007274627685547
    8. '.' → logprob: -10.507274627685547
    9. ' .' → logprob: -10.757274627685547
    10. 'f' → logprob: -10.757274627685547

Token 52: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00014847563579678535
    2. 'key' → logprob: -9.62514877319336
    3. 'self' → logprob: -10.25014877319336
    4. ' format' → logprob: -11.00014877319336
    5. '__' → logprob: -12.37514877319336
    6. '0' → logprob: -12.50014877319336
    7. 'str' → logprob: -12.50014877319336
    8. 'repr' → logprob: -12.50014877319336
    9. 'py' → logprob: -13.00014877319336
    10. 'strip' → logprob: -13.25014877319336

Token 53: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31821417808532715
    2. 'self' → logprob: -1.3182141780853271
    3. '(' → logprob: -5.318214416503906
    4. ' self' → logprob: -10.693214416503906
    5. '(
' → logprob: -11.443214416503906
    6. 's' → logprob: -13.568214416503906
    7. ' (' → logprob: -13.693214416503906
    8. '(s' → logprob: -15.068214416503906
    9. '(str' → logprob: -15.068214416503906
    10. 'repr' → logprob: -15.068214416503906

Token 54: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0003111519617959857
    2. '.' → logprob: -8.125310897827148
    3. '.parent' → logprob: -11.250310897827148
    4. ' .' → logprob: -13.375310897827148
    5. '.
' → logprob: -15.500310897827148
    6. 'key' → logprob: -15.875310897827148
    7. '.Key' → logprob: -16.50031089782715
    8. '.k' → logprob: -18.00031089782715
    9. '.user' → logprob: -18.62531089782715
    10. '.keys' → logprob: -18.62531089782715

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029561053961515427
    2. ' ,' → logprob: -3.6545610427856445
    3. 'self' → logprob: -6.0295610427856445
    4. ',self' → logprob: -7.2795610427856445
    5. ',
' → logprob: -9.529561042785645
    6. ' self' → logprob: -10.404561042785645
    7. ' ' → logprob: -10.404561042785645
    8. ' ,
' → logprob: -11.779561042785645
    9. '    ' → logprob: -12.279561042785645
    10. ')' → logprob: -12.404561042785645

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.042838167399168015
    2. ' self' → logprob: -3.4178380966186523
    3. 'repr' → logprob: -4.917838096618652
    4. ' repr' → logprob: -6.417838096618652
    5. 'id' → logprob: -8.917838096618652
    6. ' id' → logprob: -10.167838096618652
    7. 'str' → logprob: -11.417838096618652
    8. '   ' → logprob: -12.792838096618652
    9. ' str' → logprob: -13.292838096618652
    10. ' getattr' → logprob: -13.292838096618652

Token 57: '.parent' (ID: 17454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7149931788444519
    2. '.parent' → logprob: -0.7149931788444519
    3. '.key' → logprob: -3.8399932384490967
    4. '.left' → logprob: -9.964993476867676
    5. ' .' → logprob: -10.339993476867676
    6. '.Parent' → logprob: -11.464993476867676
    7. '.value' → logprob: -11.964993476867676
    8. '.user' → logprob: -13.339993476867676
    9. '.p' → logprob: -13.589993476867676
    10. '.right' → logprob: -13.714993476867676

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007862843573093414
    2. ' ,' → logprob: -4.8828630447387695
    3. ',self' → logprob: -8.50786304473877
    4. ',
' → logprob: -10.63286304473877
    5. ',key' → logprob: -11.13286304473877
    6. ',node' → logprob: -12.38286304473877
    7. ')' → logprob: -12.75786304473877
    8. 'self' → logprob: -13.25786304473877
    9. ',None' → logprob: -13.25786304473877
    10. '    ' → logprob: -13.63286304473877

Token 59: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5231583118438721
    2. ' self' → logprob: -0.8981583118438721
    3. '    ' → logprob: -11.273158073425293
    4. '	self' → logprob: -11.648158073425293
    5. ' ' → logprob: -12.023158073425293
    6. ' ' → logprob: -13.023158073425293
    7. 's' → logprob: -14.273158073425293
    8. '"' → logprob: -14.523158073425293
    9. ''' → logprob: -14.773158073425293
    10. 'Self' → logprob: -14.898158073425293

Token 60: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0037304875440895557
    2. '.key' → logprob: -5.878730297088623
    3. '.left' → logprob: -7.128730297088623
    4. ' .' → logprob: -9.378730773925781
    5. '.parent' → logprob: -11.003730773925781
    6. '.right' → logprob: -11.503730773925781
    7. '.
' → logprob: -12.378730773925781
    8. ').' → logprob: -13.753730773925781
    9. '.

' → logprob: -14.128730773925781
    10. '.user' → logprob: -14.378730773925781

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11361385881900787
    2. ' ,' → logprob: -2.2386138439178467
    3. ',
' → logprob: -7.863614082336426
    4. ' ' → logprob: -8.738614082336426
    5. ')' → logprob: -9.738614082336426
    6. ' ,
' → logprob: -9.863614082336426
    7. '   ' → logprob: -10.613614082336426
    8. ',self' → logprob: -10.613614082336426
    9. ',None' → logprob: -11.113614082336426
    10. '),' → logprob: -11.988614082336426

Token 62: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11297543346881866
    2. 'self' → logprob: -2.2379753589630127
    3. ' ' → logprob: -9.487975120544434
    4. '    ' → logprob: -10.362975120544434
    5. '	self' → logprob: -10.737975120544434
    6. ' ' → logprob: -11.112975120544434
    7. '   ' → logprob: -13.737975120544434
    8. ' 
' → logprob: -13.737975120544434
    9. 's' → logprob: -14.112975120544434
    10. '        ' → logprob: -14.237975120544434

Token 63: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.007743505295366049
    2. '.' → logprob: -4.8827433586120605
    3. 'right' → logprob: -9.507743835449219
    4. '.left' → logprob: -10.507743835449219
    5. ')' → logprob: -10.632743835449219
    6. '.key' → logprob: -12.882743835449219
    7. ').' → logprob: -13.007743835449219
    8. '.r' → logprob: -13.257743835449219
    9. ' .' → logprob: -13.757743835449219
    10. '.parent' → logprob: -13.882743835449219

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.750001907348633
    3. ')
' → logprob: -13.875001907348633
    4. '))' → logprob: -16.125001907348633
    5. ')`' → logprob: -16.500001907348633
    6. '   ' → logprob: -17.125001907348633
    7. ')#' → logprob: -17.875001907348633
    8. ')

' → logprob: -17.875001907348633
    9. '`)' → logprob: -18.125001907348633
    10. '}' → logprob: -18.375001907348633

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.183902770280838
    2. 'd' → logprob: -2.6839027404785156
    3. 'n' → logprob: -3.6839027404785156
    4. ' 
' → logprob: -3.8089027404785156
    5. 'class' → logprob: -4.183902740478516
    6. 'def' → logprob: -4.433902740478516
    7. '    
' → logprob: -5.558902740478516
    8. '' → logprob: -5.558902740478516
    9. '#' → logprob: -5.683902740478516
    10. 'c' → logprob: -5.683902740478516

Token 66: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5508775115013123
    2. 'def' (adapté à ' def') → logprob: -0.9258775115013123
    3. '
' → logprob: -4.800877571105957
    4. '   ' → logprob: -4.925877571105957
    5. ' def' → logprob: -6.175877571105957
    6. ' 
' → logprob: -6.425877571105957
    7. 'd' → logprob: -6.550877571105957
    8. ' ' → logprob: -6.550877571105957
    9. '    
' → logprob: -6.675877571105957
    10. ' class' → logprob: -7.175877571105957

Token 67: ' is' (ID: 382)
  Prédit: ' insert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' insert' → logprob: -0.26975372433662415
    2. ' set' → logprob: -1.5197536945343018
    3. ' is' → logprob: -4.769753932952881
    4. ' get' → logprob: -5.894753932952881
    5. ' add' → logprob: -6.269753932952881
    6. 'insert' → logprob: -6.769753932952881
    7. 'set' → logprob: -7.019753932952881
    8. ' find' → logprob: -7.269753932952881
    9. '_insert' → logprob: -8.269753456115723
    10. ' ' → logprob: -8.269753456115723

Token 68: '_root' (ID: 29989)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.032222677022218704
    2. '_leaf' → logprob: -3.5322227478027344
    3. '_empty' → logprob: -7.032222747802734
    4. '_root' → logprob: -8.032222747802734
    5. '_none' → logprob: -8.032222747802734
    6. '_null' → logprob: -8.157222747802734
    7. '_left' → logprob: -9.032222747802734
    8. '_None' → logprob: -9.157222747802734
    9. ' _' → logprob: -9.407222747802734
    10. '_a' → logprob: -9.532222747802734

Token 69: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6376161575317383
    2. '(self' → logprob: -0.7626161575317383
    3. '()' → logprob: -6.262616157531738
    4. 'self' → logprob: -6.512616157531738
    5. '(s' → logprob: -6.887616157531738
    6. ' (' → logprob: -8.262616157531738
    7. 's' → logprob: -9.012616157531738
    8. '(
' → logprob: -9.637616157531738
    9. ')' → logprob: -10.137616157531738
    10. ' ' → logprob: -10.762616157531738

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007322286255657673
    2. ')' → logprob: -5.007322311401367
    3. '):
' → logprob: -8.132322311401367
    4. '():' → logprob: -8.632322311401367
    5. 'self' → logprob: -9.382322311401367
    6. '()' → logprob: -10.757322311401367
    7. ' ):' → logprob: -10.882322311401367
    8. '(self' → logprob: -12.757322311401367
    9. '(' → logprob: -13.257322311401367
    10. '):

' → logprob: -13.632322311401367

Token 71: '       ' (ID: 309)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7462592720985413
    2. ' return' → logprob: -1.6212592124938965
    3. 'return' → logprob: -1.9962592124938965
    4. 'self' → logprob: -2.3712592124938965
    5. ' self' → logprob: -3.2462592124938965
    6. '(self' → logprob: -3.8712592124938965
    7. '   ' → logprob: -4.1212592124938965
    8. '    ' → logprob: -4.2462592124938965
    9. '       ' → logprob: -5.8712592124938965
    10. ' ' → logprob: -6.7462592124938965

Token 72: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17235422134399414
    2. ' return' → logprob: -1.9223542213439941
    3. 'self' → logprob: -4.672354221343994
    4. ' self' → logprob: -5.922354221343994
    5. '       ' → logprob: -10.672353744506836
    6. '   ' → logprob: -12.797353744506836
    7. '	return' → logprob: -14.047353744506836
    8. '    ' → logprob: -14.797353744506836
    9. '
' → logprob: -15.797353744506836
    10. '(self' → logprob: -16.672353744506836

Token 73: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16022808849811554
    2. 'self' → logprob: -1.9102281332015991
    3. ' not' → logprob: -13.03522777557373
    4. '   ' → logprob: -14.41022777557373
    5. '(self' → logprob: -14.41022777557373
    6. 'not' → logprob: -15.66022777557373
    7. ' ' → logprob: -16.160228729248047
    8. '	self' → logprob: -16.535228729248047
    9. ' ' → logprob: -16.535228729248047
    10. ' True' → logprob: -16.660228729248047

Token 74: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.004121022764593363
    2. '.' → logprob: -5.504120826721191
    3. 'parent' → logprob: -11.004120826721191
    4. ' .' → logprob: -11.129120826721191
    5. '.Parent' → logprob: -11.879120826721191
    6. '.root' → logprob: -14.004120826721191
    7. '.parents' → logprob: -14.879120826721191
    8. '.is' → logprob: -15.004120826721191
    9. '.p' → logprob: -15.129120826721191
    10. '.self' → logprob: -15.379120826721191

Token 75: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00011081460979767144
    2. 'is' → logprob: -9.125110626220703
    3. ' ' → logprob: -13.750110626220703
    4. ' ==' → logprob: -14.875110626220703
    5. ' None' → logprob: -15.625110626220703
    6. '==' → logprob: -15.750110626220703
    7. 'None' → logprob: -17.875110626220703
    8. ' ' → logprob: -18.000110626220703
    9. '	is' → logprob: -19.250110626220703
    10. 's' → logprob: -20.375110626220703

Token 76: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.04858759790658951
    2. 'None' → logprob: -3.0485875606536865
    3. ' ' → logprob: -16.423587799072266
    4. '_None' → logprob: -17.423587799072266
    5. '(None' → logprob: -18.548587799072266
    6. '=None' → logprob: -19.923587799072266
    7. ' none' → logprob: -20.423587799072266
    8. ' N' → logprob: -20.548587799072266
    9. '.None' → logprob: -20.673587799072266
    10. '   ' → logprob: -20.798587799072266

Token 77: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6492424607276917
    2. 'def' → logprob: -0.8992424607276917
    3. '<|end|>' → logprob: -3.274242401123047
    4. ' def' → logprob: -4.274242401123047
    5. '
' → logprob: -4.899242401123047
    6. '    
' → logprob: -5.399242401123047
    7. ':' → logprob: -6.649242401123047
    8. '<|end|>' → logprob: -6.899242401123047
    9. '	def' → logprob: -7.024242401123047
    10. ')' → logprob: -7.649242401123047

Token 79: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02196813002228737
    2. '   ' → logprob: -4.021968364715576
    3. ' def' → logprob: -5.646968364715576
    4. 'class' → logprob: -8.396967887878418
    5. '	def' → logprob: -11.146967887878418
    6. ' ' → logprob: -11.396967887878418
    7. '    
' → logprob: -12.021967887878418
    8. '  ' → logprob: -12.521967887878418
    9. '       ' → logprob: -12.521967887878418
    10. '```' → logprob: -12.646967887878418

Token 80: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.24585914611816406
    2. ' has' → logprob: -2.370859146118164
    3. 'is' → logprob: -2.870859146118164
    4. ' def' → logprob: -3.245859146118164
    5. ' insert' → logprob: -4.745859146118164
    6. 'has' → logprob: -5.120859146118164
    7. 'def' → logprob: -5.495859146118164
    8. ' ' → logprob: -5.620859146118164
    9. ' set' → logprob: -5.745859146118164
    10. ' get' → logprob: -6.870859146118164

Token 81: '_leaf' (ID: 96627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4738267958164215
    2. '_leaf' → logprob: -1.0988267660140991
    3. '_left' → logprob: -3.3488268852233887
    4. '_root' → logprob: -4.973826885223389
    5. ' _' → logprob: -6.973826885223389
    6. '_child' → logprob: -8.84882640838623
    7. '_l' → logprob: -8.84882640838623
    8. '_none' → logprob: -9.09882640838623
    9. '_le' → logprob: -9.22382640838623
    10. '_a' → logprob: -9.34882640838623

Token 82: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.19139203429222107
    2. '(' → logprob: -2.066391944885254
    3. '()' → logprob: -3.066391944885254
    4. '():' → logprob: -7.316391944885254
    5. 'self' → logprob: -9.316391944885254
    6. '(
' → logprob: -9.441391944885254
    7. '(s' → logprob: -9.941391944885254
    8. '   ' → logprob: -10.941391944885254
    9. ' (' → logprob: -11.191391944885254
    10. '():
' → logprob: -11.316391944885254

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07208333164453506
    2. ')' → logprob: -2.6970832347869873
    3. '):
' → logprob: -6.572083473205566
    4. '():' → logprob: -7.822083473205566
    5. '()' → logprob: -8.447083473205566
    6. ' ):' → logprob: -9.947083473205566
    7. 'self' → logprob: -10.572083473205566
    8. '(self' → logprob: -10.822083473205566
    9. '):

' → logprob: -11.072083473205566
    10. ' )' → logprob: -12.322083473205566

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028737489134073257
    2. '(self' → logprob: -4.153737545013428
    3. ' self' → logprob: -5.778737545013428
    4. ' return' → logprob: -6.153737545013428
    5. 'self' → logprob: -6.403737545013428
    6. 'return' → logprob: -6.528737545013428
    7. '(' → logprob: -7.153737545013428
    8. '	' → logprob: -7.528737545013428
    9. ' ' → logprob: -7.528737545013428
    10. '   ' → logprob: -7.903737545013428

Token 85: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11675141751766205
    2. 'self' → logprob: -2.6167514324188232
    3. ' return' → logprob: -3.3667514324188232
    4. ' self' → logprob: -6.366751194000244
    5. '       ' → logprob: -7.366751194000244
    6. '   ' → logprob: -8.241751670837402
    7. '(self' → logprob: -10.491751670837402
    8. '
' → logprob: -12.491751670837402
    9. '	return' → logprob: -12.616751670837402
    10. 'not' → logprob: -13.491751670837402

Token 86: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.055366601794958115
    2. 'self' → logprob: -2.9303665161132812
    3. ' not' → logprob: -8.305366516113281
    4. '(self' → logprob: -9.305366516113281
    5. ' (' → logprob: -9.555366516113281
    6. ' ' → logprob: -10.180366516113281
    7. '	self' → logprob: -11.055366516113281
    8. '   ' → logprob: -11.680366516113281
    9. 'not' → logprob: -12.555366516113281
    10. ' ' → logprob: -12.680366516113281

Token 87: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0027255865279585123
    2. '.' → logprob: -6.002725601196289
    3. '.right' → logprob: -8.377725601196289
    4. ' .' → logprob: -11.252725601196289
    5. 'left' → logprob: -12.627725601196289
    6. '.parent' → logprob: -12.877725601196289
    7. '.le' → logprob: -14.502725601196289
    8. '.Left' → logprob: -15.627725601196289
    9. '.is' → logprob: -16.00272560119629
    10. '.root' → logprob: -16.62772560119629

Token 88: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06994832307100296
    2. 'is' → logprob: -2.694948434829712
    3. ' ' → logprob: -11.444948196411133
    4. '==' → logprob: -14.694948196411133
    5. '   ' → logprob: -15.569948196411133
    6. ')' → logprob: -15.819948196411133
    7. 'None' → logprob: -15.944948196411133
    8. ' None' → logprob: -16.069948196411133
    9. '	is' → logprob: -16.569948196411133
    10. 'i' → logprob: -16.819948196411133

Token 89: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01815333589911461
    2. ' None' → logprob: -4.018153190612793
    3. '   ' → logprob: -13.393153190612793
    4. '_None' → logprob: -14.018153190612793
    5. ' ' → logprob: -14.643153190612793
    6. '  ' → logprob: -15.518153190612793
    7. '(None' → logprob: -15.518153190612793
    8. '=None' → logprob: -16.01815414428711
    9. 'none' → logprob: -16.26815414428711
    10. '_none' → logprob: -17.39315414428711

Token 90: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10022381693124771
    2. 'and' → logprob: -2.3502237796783447
    3. ' or' → logprob: -12.350223541259766
    4. '<|end|>' → logprob: -12.350223541259766
    5. ' ' → logprob: -12.475223541259766
    6. '   ' → logprob: -12.725223541259766
    7. '    ' → logprob: -14.350223541259766
    8. '  ' → logprob: -14.850223541259766
    9. '	and' → logprob: -15.225223541259766
    10. ' ' → logprob: -16.225223541259766

Token 91: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.25196030735969543
    2. 'self' → logprob: -1.501960277557373
    3. '   ' → logprob: -10.876960754394531
    4. '	self' → logprob: -11.751960754394531
    5. ' ' → logprob: -12.876960754394531
    6. '    ' → logprob: -14.376960754394531
    7. ' ' → logprob: -14.626960754394531
    8. '       ' → logprob: -14.626960754394531
    9. '  ' → logprob: -15.501960754394531
    10. '(self' → logprob: -16.25196075439453

Token 92: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.023321064189076424
    2. '.' → logprob: -3.7733211517333984
    3. ' .' → logprob: -10.273321151733398
    4. 'right' → logprob: -10.273321151733398
    5. '.left' → logprob: -12.648321151733398
    6. ' right' → logprob: -13.398321151733398
    7. ' ' → logprob: -14.148321151733398
    8. '	right' → logprob: -14.273321151733398
    9. '.Right' → logprob: -15.773321151733398
    10. '[right' → logprob: -16.0233211517334

Token 93: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014185481704771519
    2. 'is' → logprob: -4.264185428619385
    3. ' ' → logprob: -10.764185905456543
    4. '<|end|>' → logprob: -15.014185905456543
    5. 'None' → logprob: -15.639185905456543
    6. '	is' → logprob: -16.014184951782227
    7. ' None' → logprob: -16.014184951782227
    8. '   ' → logprob: -16.889184951782227
    9. '  ' → logprob: -17.264184951782227
    10. '<|end|>' → logprob: -17.389184951782227

Token 94: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008615042082965374
    2. ' None' → logprob: -4.758615016937256
    3. '_None' → logprob: -15.508615493774414
    4. ' ' → logprob: -15.758615493774414
    5. '(None' → logprob: -16.383615493774414
    6. '   ' → logprob: -16.883615493774414
    7. '  ' → logprob: -17.008615493774414
    8. '=None' → logprob: -17.133615493774414
    9. 'none' → logprob: -17.633615493774414
    10. '.None' → logprob: -17.883615493774414

Token 95: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2499564290046692
    2. '<|end|>' → logprob: -1.8749563694000244
    3. '   ' → logprob: -3.1249563694000244
    4. '<|end|>' → logprob: -4.4999566078186035
    5. '

' → logprob: -5.1249566078186035
    6. 'def' → logprob: -5.4999566078186035
    7. '    
' → logprob: -6.2499566078186035
    8. 'class' → logprob: -8.749956130981445
    9. '  
' → logprob: -9.749956130981445
    10. '```' → logprob: -9.749956130981445

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4064340591430664
    2. '
' → logprob: -1.1564340591430664
    3. 'def' → logprob: -4.531434059143066
    4. '    
' → logprob: -5.281434059143066
    5. 'class' → logprob: -6.781434059143066
    6. '<|end|>' → logprob: -7.281434059143066
    7. '

' → logprob: -7.406434059143066
    8. '<|end|>' → logprob: -8.531434059143066
    9. ' ' → logprob: -9.156434059143066
    10. '```' → logprob: -9.406434059143066

Token 97: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01897444576025009
    2. '   ' → logprob: -4.143974304199219
    3. 'class' → logprob: -6.393974304199219
    4. ' def' → logprob: -6.893974304199219
    5. '#' → logprob: -10.268974304199219
    6. 'd' → logprob: -10.268974304199219
    7. '	def' → logprob: -10.268974304199219
    8. '    
' → logprob: -10.393974304199219
    9. ' ' → logprob: -10.518974304199219
    10. '
' → logprob: -10.893974304199219

Token 98: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -1.0054264068603516
    2. ' set' → logprob: -1.3804264068603516
    3. ' insert' → logprob: -1.7554264068603516
    4. ' def' → logprob: -2.8804264068603516
    5. 'has' → logprob: -3.3804264068603516
    6. ' ' → logprob: -3.7554264068603516
    7. ' is' → logprob: -3.8804264068603516
    8. ' height' → logprob: -4.755426406860352
    9. 'set' → logprob: -4.880426406860352
    10. '_' → logprob: -5.005426406860352

Token 99: '_one' (ID: 26979)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.012735366821289
    2. '_' → logprob: -1.262735366821289
    3. '_child' → logprob: -1.387735366821289
    4. '_children' → logprob: -2.637735366821289
    5. '_parent' → logprob: -4.012735366821289
    6. '_key' → logprob: -5.262735366821289
    7. '_leaf' → logprob: -6.012735366821289
    8. '_space' → logprob: -6.012735366821289
    9. 'attr' → logprob: -6.887735366821289
    10. '_any' → logprob: -7.262735366821289

Token 100: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.007834927178919315
    2. '_' → logprob: -4.8828349113464355
    3. 'child' → logprob: -9.132835388183594
    4. '()' → logprob: -9.382835388183594
    5. '__' → logprob: -11.132835388183594
    6. '_children' → logprob: -12.007835388183594
    7. 'Child' → logprob: -12.757835388183594
    8. '_node' → logprob: -12.882835388183594
    9. '

' → logprob: -13.132835388183594
    10. '_CHILD' → logprob: -13.257835388183594

Token 101: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.020682141184806824
    2. '(' → logprob: -3.8956820964813232
    3. 'self' → logprob: -9.770682334899902
    4. '(
' → logprob: -10.520682334899902
    5. '(s' → logprob: -10.645682334899902
    6. '()' → logprob: -11.145682334899902
    7. '   ' → logprob: -12.020682334899902
    8. ' (' → logprob: -12.270682334899902
    9. '():' → logprob: -13.020682334899902
    10. 's' → logprob: -14.020682334899902

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07444404065608978
    2. '(self' → logprob: -3.324444055557251
    3. '():' → logprob: -3.949444055557251
    4. '):
' → logprob: -5.074443817138672
    5. ')' → logprob: -5.199443817138672
    6. 'self' → logprob: -6.074443817138672
    7. '()' → logprob: -7.574443817138672
    8. ' ' → logprob: -7.699443817138672
    9. '   ' → logprob: -7.699443817138672
    10. ' ):' → logprob: -7.949443817138672

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22166839241981506
    2. '   ' → logprob: -2.3466684818267822
    3. '():' → logprob: -3.2216684818267822
    4. ' return' → logprob: -3.7216684818267822
    5. ':' → logprob: -3.8466684818267822
    6. '():
' → logprob: -5.346668243408203
    7. 'return' → logprob: -5.596668243408203
    8. '(' → logprob: -5.721668243408203
    9. '(self' → logprob: -6.096668243408203
    10. '()' → logprob: -6.346668243408203

Token 104: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5848678350448608
    2. 'return' → logprob: -1.0848678350448608
    3. '       ' → logprob: -2.3348679542541504
    4. '   ' → logprob: -4.83486795425415
    5. ' (' → logprob: -10.834867477416992
    6. '	return' → logprob: -10.834867477416992
    7. '    ' → logprob: -10.959867477416992
    8. '
' → logprob: -11.459867477416992
    9. '     ' → logprob: -11.834867477416992
    10. ' ' → logprob: -11.959867477416992

Token 105: ' self' (ID: 1051)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.407742440700531
    2. ' self' → logprob: -1.7827425003051758
    3. '(self' → logprob: -2.157742500305176
    4. 'self' → logprob: -3.032742500305176
    5. '(' → logprob: -6.407742500305176
    6. ' ' → logprob: -7.157742500305176
    7. '   ' → logprob: -7.907742500305176
    8. '  ' → logprob: -9.782742500305176
    9. '	self' → logprob: -10.907742500305176
    10. '    ' → logprob: -11.532742500305176

Token 106: '.is' (ID: 3109)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0013788063079118729
    2. '.' → logprob: -7.126379013061523
    3. '.right' → logprob: -7.876379013061523
    4. ' .' → logprob: -8.751379013061523
    5. '.has' → logprob: -10.876379013061523
    6. '   ' → logprob: -11.751379013061523
    7. 'left' → logprob: -12.751379013061523
    8. '.is' → logprob: -13.001379013061523
    9. ' ' → logprob: -14.376379013061523
    10. ' left' → logprob: -14.376379013061523

Token 107: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.18110649287700653
    2. '_root' → logprob: -1.806106448173523
    3. '_' → logprob: -7.3061065673828125
    4. '_left' → logprob: -7.4311065673828125
    5. 'root' → logprob: -10.681106567382812
    6. 'leaf' → logprob: -11.431106567382812
    7. ' _' → logprob: -11.556106567382812
    8. '_le' → logprob: -11.681106567382812
    9. '__' → logprob: -11.931106567382812
    10. '_none' → logprob: -12.056106567382812

Token 108: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00993835087865591
    2. '():
' → logprob: -4.7599382400512695
    3. '()' → logprob: -6.6349382400512695
    4. '()==' → logprob: -11.88493824005127
    5. '():
' → logprob: -13.75993824005127
    6. ' ():' → logprob: -14.38493824005127
    7. ':' → logprob: -15.25993824005127
    8. '(' → logprob: -15.50993824005127
    9. '():

' → logprob: -15.88493824005127
    10. '()!=' → logprob: -17.009939193725586

Token 109: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8977977633476257
    2. ':
' → logprob: -0.8977977633476257
    3. '       ' → logprob: -2.0227978229522705
    4. '           ' → logprob: -3.1477978229522705
    5. ':return' → logprob: -6.147797584533691
    6. '():
' → logprob: -6.272797584533691
    7. ' or' → logprob: -6.272797584533691
    8. '==' → logprob: -6.772797584533691
    9. ' is' → logprob: -7.522797584533691
    10. ' ==' → logprob: -7.897797584533691

Token 110: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.82406085729599
    2. 'return' (adapté à ' return') → logprob: -1.0740609169006348
    3. ' return' → logprob: -1.8240609169006348
    4. '       ' → logprob: -3.1990609169006348
    5. '
' → logprob: -4.199060916900635
    6. '   ' → logprob: -7.449060916900635
    7. ':return' → logprob: -7.949060916900635
    8. '        
' → logprob: -8.074060440063477
    9. ' 
' → logprob: -8.449060440063477
    10. '               ' → logprob: -8.699060440063477

Token 111: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.20142056047916412
    2. ' False' → logprob: -1.701420545578003
    3. '   ' → logprob: -12.076420783996582
    4. '(False' → logprob: -13.576420783996582
    5. '=False' → logprob: -16.576419830322266
    6. '
' → logprob: -17.576419830322266
    7. '    ' → logprob: -18.201419830322266
    8. 'F' → logprob: -18.201419830322266
    9. '    
' → logprob: -18.326419830322266
    10. '  ' → logprob: -18.451419830322266

Token 112: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18515071272850037
    2. '       ' → logprob: -1.9351507425308228
    3. '   ' → logprob: -4.185150623321533
    4. '<|end|>' → logprob: -5.810150623321533
    5. '    
' → logprob: -6.310150623321533
    6. '  
' → logprob: -6.435150623321533
    7. '        
' → logprob: -7.060150623321533
    8. '\n' → logprob: -7.810150623321533
    9. ' 
' → logprob: -8.185151100158691
    10. '	' → logprob: -8.560151100158691

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04201827198266983
    2. '
' → logprob: -3.417018175125122
    3. '   ' → logprob: -4.917018413543701
    4. 'return' → logprob: -8.042017936706543
    5. '        
' → logprob: -8.417017936706543
    6. '    
' → logprob: -8.417017936706543
    7. ' return' → logprob: -9.042017936706543
    8. '  
' → logprob: -9.792017936706543
    9. '```' → logprob: -11.542017936706543
    10. '    ' → logprob: -11.917017936706543

Token 114: ' elif' (ID: 9497)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14932699501514435
    2. '       ' → logprob: -2.399327039718628
    3. '   ' → logprob: -3.524327039718628
    4. ' return' → logprob: -4.024326801300049
    5. 'if' → logprob: -8.274327278137207
    6. 'left' → logprob: -9.149327278137207
    7. '	return' → logprob: -9.274327278137207
    8. ' ' → logprob: -10.274327278137207
    9. '    ' → logprob: -10.774327278137207
    10. '     ' → logprob: -11.024327278137207

Token 115: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.796644926071167
    2. ' self' → logprob: -0.796644926071167
    3. 'self' → logprob: -2.796644926071167
    4. '(self' → logprob: -3.921644926071167
    5. '       ' → logprob: -4.671645164489746
    6. '   ' → logprob: -5.296645164489746
    7. '(' → logprob: -6.921645164489746
    8. ' ' → logprob: -7.296645164489746
    9. ' not' → logprob: -7.421645164489746
    10. '    ' → logprob: -8.921645164489746

Token 116: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03165265545248985
    2. '(self' → logprob: -4.281652450561523
    3. ' self' → logprob: -4.281652450561523
    4. '   ' → logprob: -5.906652450561523
    5. ' (' → logprob: -7.406652450561523
    6. ' ' → logprob: -9.156652450561523
    7. '       ' → logprob: -10.656652450561523
    8. '  ' → logprob: -11.281652450561523
    9. '[self' → logprob: -11.531652450561523
    10. '	self' → logprob: -11.781652450561523

Token 117: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.8087270038668066e-05
    2. '.' → logprob: -11.000027656555176
    3. '.right' → logprob: -11.500027656555176
    4. '.le' → logprob: -13.875027656555176
    5. '.has' → logprob: -15.750027656555176
    6. ' .' → logprob: -16.000028610229492
    7. '.parent' → logprob: -17.125028610229492
    8. '.Left' → logprob: -17.250028610229492
    9. 'left' → logprob: -17.875028610229492
    10. ').' → logprob: -19.125028610229492

Token 118: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.012453963980078697
    2. 'is' → logprob: -4.512454032897949
    3. ' ' → logprob: -6.762454032897949
    4. ')' → logprob: -8.88745403289795
    5. '   ' → logprob: -10.26245403289795
    6. 'and' → logprob: -10.63745403289795
    7. ' and' → logprob: -10.88745403289795
    8. ' None' → logprob: -11.51245403289795
    9. ' )' → logprob: -12.51245403289795
    10. ')is' → logprob: -12.51245403289795

Token 119: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7120906114578247
    2. ' not' → logprob: -1.0870906114578247
    3. 'None' → logprob: -2.337090492248535
    4. 'not' → logprob: -2.587090492248535
    5. ' ' → logprob: -8.087090492248535
    6. '   ' → logprob: -10.962090492248535
    7. '	not' → logprob: -12.087090492248535
    8. '  ' → logprob: -12.587090492248535
    9. '(None' → logprob: -12.962090492248535
    10. '=None' → logprob: -13.837090492248535

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04634476825594902
    2. ' and' → logprob: -3.921344757080078
    3. ' or' → logprob: -4.171344757080078
    4. ' )' → logprob: -4.921344757080078
    5. 'and' → logprob: -6.046344757080078
    6. ')!=' → logprob: -8.796344757080078
    7. '   ' → logprob: -9.171344757080078
    8. '       ' → logprob: -10.171344757080078
    9. 'or' → logprob: -10.421344757080078
    10. '    ' → logprob: -11.296344757080078

Token 121: ' and' (ID: 326)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6740201711654663
    2. ' or' → logprob: -0.9240201711654663
    3. ' !=' → logprob: -2.924020290374756
    4. 'and' → logprob: -3.924020290374756
    5. ' and' → logprob: -4.674020290374756
    6. 'or' → logprob: -5.299020290374756
    7. '   ' → logprob: -6.799020290374756
    8. ':' → logprob: -6.924020290374756
    9. ' xor' → logprob: -7.299020290374756
    10. ' ^' → logprob: -7.424020290374756

Token 122: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5249898433685303
    2. '(self' → logprob: -0.8999898433685303
    3. ' self' → logprob: -7.149990081787109
    4. ' not' → logprob: -7.774990081787109
    5. ' ' → logprob: -8.14999008178711
    6. '(not' → logprob: -8.77499008178711
    7. '(' → logprob: -8.89999008178711
    8. 'self' → logprob: -10.39999008178711
    9. 'not' → logprob: -10.89999008178711
    10. '   ' → logprob: -11.14999008178711

Token 123: 'self' (ID: 1156)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3142455816268921
    2. 'self' → logprob: -1.314245581626892
    3. ' not' → logprob: -7.939245700836182
    4. '   ' → logprob: -8.189245223999023
    5. ' ' → logprob: -8.814245223999023
    6. 'not' → logprob: -9.314245223999023
    7. '(self' → logprob: -9.689245223999023
    8. '       ' → logprob: -11.689245223999023
    9. '    ' → logprob: -11.814245223999023
    10. '	self' → logprob: -11.939245223999023

Token 124: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.005051948595792055
    2. 'right' → logprob: -5.505052089691162
    3. '.' → logprob: -7.005052089691162
    4. ' right' → logprob: -10.005051612854004
    5. '.left' → logprob: -11.880051612854004
    6. ' .' → logprob: -12.380051612854004
    7. '	right' → logprob: -13.005051612854004
    8. ' is' → logprob: -13.255051612854004
    9. '[right' → logprob: -13.630051612854004
    10. ' ' → logprob: -13.755051612854004

Token 125: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.018839804455637932
    2. 'is' → logprob: -4.0188398361206055
    3. ')' → logprob: -7.5188398361206055
    4. ' ' → logprob: -9.268839836120605
    5. ' )' → logprob: -11.018839836120605
    6. ')is' → logprob: -11.018839836120605
    7. ' not' → logprob: -11.393839836120605
    8. '):' → logprob: -13.143839836120605
    9. 'not' → logprob: -13.268839836120605
    10. '	is' → logprob: -13.518839836120605

Token 126: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2914762794971466
    2. 'not' → logprob: -1.4164762496948242
    3. ' None' → logprob: -5.166476249694824
    4. 'None' → logprob: -5.416476249694824
    5. ' ' → logprob: -9.541476249694824
    6. '	not' → logprob: -10.541476249694824
    7. ')' → logprob: -12.416476249694824
    8. 'Not' → logprob: -12.541476249694824
    9. 'none' → logprob: -12.666476249694824
    10. 'n' → logprob: -12.791476249694824

Token 127: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931562423706055
    2. 'None' → logprob: -0.6931562423706055
    3. '(None' → logprob: -12.193156242370605
    4. ' ' → logprob: -12.943156242370605
    5. '_None' → logprob: -14.193156242370605
    6. '   ' → logprob: -15.193156242370605
    7. '_none' → logprob: -15.693156242370605
    8. ',None' → logprob: -15.693156242370605
    9. '=None' → logprob: -15.818156242370605
    10. '  ' → logprob: -16.318157196044922

Token 128: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026761865243315697
    2. '):
' → logprob: -4.151762008666992
    3. ')' → logprob: -5.401762008666992
    4. '       ' → logprob: -5.401762008666992
    5. ':' → logprob: -6.651762008666992
    6. '   ' → logprob: -9.026762008666992
    7. ' ):' → logprob: -9.026762008666992
    8. '           ' → logprob: -9.526762008666992
    9. '):
' → logprob: -11.026762008666992
    10. ' ' → logprob: -12.401762008666992

Token 129: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1568087488412857
    2. '           ' → logprob: -2.156808853149414
    3. '       ' → logprob: -4.656808853149414
    4. ':
' → logprob: -4.656808853149414
    5. '<|end|>' → logprob: -5.531808853149414
    6. ':return' → logprob: -5.781808853149414
    7. ' True' → logprob: -6.406808853149414
    8. ' :' → logprob: -7.906808853149414
    9. 'True' → logprob: -8.281808853149414
    10. '<|end|>' → logprob: -8.531808853149414

Token 130: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7328017950057983
    2. ' return' → logprob: -1.3578017950057983
    3. 'return' (adapté à ' return') → logprob: -1.3578017950057983
    4. '       ' → logprob: -6.232801914215088
    5. ' True' → logprob: -6.607801914215088
    6. '
' → logprob: -7.357801914215088
    7. '               ' → logprob: -7.982801914215088
    8. 'True' → logprob: -7.982801914215088
    9. '   ' → logprob: -9.10780143737793
    10. '	return' → logprob: -9.60780143737793

Token 131: ' self' (ID: 1051)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.048588961362838745
    2. 'True' → logprob: -3.048588991165161
    3. ' False' → logprob: -14.423588752746582
    4. '(True' → logprob: -14.548588752746582
    5. 'False' → logprob: -14.923588752746582
    6. ' Tru' → logprob: -16.4235897064209
    7. ' ' → logprob: -16.6735897064209
    8. '=True' → logprob: -17.4235897064209
    9. ' ' → logprob: -18.4235897064209
    10. '   ' → logprob: -18.5485897064209

Token 132: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.03990255296230316
    2. '.' → logprob: -3.914902448654175
    3. '.left' → logprob: -4.164902687072754
    4. '.has' → logprob: -6.039902687072754
    5. ' .' → logprob: -7.164902687072754
    6. 'right' → logprob: -8.789902687072754
    7. ' ' → logprob: -9.289902687072754
    8. '.is' → logprob: -10.289902687072754
    9. '   ' → logprob: -10.539902687072754
    10. ' right' → logprob: -10.539902687072754

Token 133: '
' (ID: 198)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01814994215965271
    2. 'is' → logprob: -4.1431498527526855
    3. ' ' → logprob: -6.6431498527526855
    4. '
' → logprob: -7.8931498527526855
    5. '<|end|>' → logprob: -8.893150329589844
    6. '   ' → logprob: -9.643150329589844
    7. 'else' → logprob: -10.018150329589844
    8. 'None' → logprob: -10.643150329589844
    9. '  ' → logprob: -10.768150329589844
    10. '    ' → logprob: -11.018150329589844

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2098829448223114
    2. '   ' → logprob: -2.334882974624634
    3. '<|end|>' → logprob: -3.459882974624634
    4. ' is' → logprob: -3.709882974624634
    5. '
' → logprob: -4.709882736206055
    6. '<|end|>' → logprob: -5.334882736206055
    7. ' or' → logprob: -5.459882736206055
    8. ' ' → logprob: -6.084882736206055
    9. ')' → logprob: -6.209882736206055
    10. '    ' → logprob: -6.209882736206055

Token 135: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.6903945803642273
    2. ' elif' → logprob: -0.9403945803642273
    3. ' else' → logprob: -3.065394639968872
    4. '   ' → logprob: -3.315394639968872
    5. 'else' → logprob: -4.190394401550293
    6. ' or' → logprob: -5.690394401550293
    7. '	elif' → logprob: -6.065394401550293
    8. ' ' → logprob: -7.190394401550293
    9. ' if' → logprob: -7.190394401550293
    10. '       ' → logprob: -7.315394401550293

Token 136: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.06327886879444122
    2. '(self' → logprob: -2.813278913497925
    3. ' self' → logprob: -6.813278675079346
    4. 'self' → logprob: -8.563279151916504
    5. ' ' → logprob: -11.313279151916504
    6. '   ' → logprob: -13.188279151916504
    7. '    ' → logprob: -13.188279151916504
    8. '(' → logprob: -14.188279151916504
    9. '       ' → logprob: -14.188279151916504
    10. ' not' → logprob: -14.563279151916504

Token 137: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6332235932350159
    2. ' self' → logprob: -0.7582235932350159
    3. '(self' → logprob: -7.508223533630371
    4. ' (' → logprob: -10.258223533630371
    5. ' ' → logprob: -11.383223533630371
    6. '	self' → logprob: -11.633223533630371
    7. '   ' → logprob: -11.883223533630371
    8. ' ' → logprob: -12.508223533630371
    9. ')' → logprob: -13.383223533630371
    10. ' not' → logprob: -13.633223533630371

Token 138: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.00503213657066226
    2. 'left' → logprob: -5.380032062530518
    3. ' left' → logprob: -8.380032539367676
    4. '.right' → logprob: -8.755032539367676
    5. '.' → logprob: -11.005032539367676
    6. ' .' → logprob: -12.630032539367676
    7. '	left' → logprob: -12.880032539367676
    8. 'right' → logprob: -14.380032539367676
    9. ' ' → logprob: -15.005032539367676
    10. '[left' → logprob: -15.255032539367676

Token 139: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01019988115876913
    2. 'is' → logprob: -4.635200023651123
    3. ' ' → logprob: -8.135199546813965
    4. ')' → logprob: -9.010199546813965
    5. ' )' → logprob: -11.510199546813965
    6. '<|end|>' → logprob: -12.260199546813965
    7. ')is' → logprob: -13.260199546813965
    8. ' ' → logprob: -13.385199546813965
    9. '    ' → logprob: -13.510199546813965
    10. ' None' → logprob: -13.760199546813965

Token 140: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16029967367649078
    2. 'not' → logprob: -1.9102996587753296
    3. 'None' → logprob: -9.910299301147461
    4. ' None' → logprob: -11.785299301147461
    5. ' ' → logprob: -11.910299301147461
    6. '	not' → logprob: -12.160299301147461
    7. '   ' → logprob: -13.660299301147461
    8. '
' → logprob: -13.660299301147461
    9. '(not' → logprob: -14.285299301147461
    10. ')' → logprob: -14.660299301147461

Token 141: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.03804619982838631
    2. ' None' → logprob: -3.28804612159729
    3. '   ' → logprob: -12.788045883178711
    4. '(None' → logprob: -14.163045883178711
    5. ' ' → logprob: -14.413045883178711
    6. '_None' → logprob: -15.038045883178711
    7. '=None' → logprob: -16.53804588317871
    8. '_none' → logprob: -16.66304588317871
    9. 'none' → logprob: -16.91304588317871
    10. '  ' → logprob: -17.28804588317871

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028421564027667046
    2. ' )' → logprob: -4.028421401977539
    3. ' and' → logprob: -4.778421401977539
    4. 'and' → logprob: -6.403421401977539
    5. '   ' → logprob: -9.278421401977539
    6. '       ' → logprob: -11.028421401977539
    7. ' ' → logprob: -11.028421401977539
    8. '    ' → logprob: -12.153421401977539
    9. '),' → logprob: -12.653421401977539
    10. '):' → logprob: -12.778421401977539

Token 143: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5903563499450684
    2. 'and' → logprob: -1.3403563499450684
    3. ')' → logprob: -1.7153563499450684
    4. '):' → logprob: -5.965356349945068
    5. ' )' → logprob: -7.340356349945068
    6. '   ' → logprob: -7.965356349945068
    7. ':' → logprob: -8.340356826782227
    8. '):
' → logprob: -8.840356826782227
    9. ' ' → logprob: -8.965356826782227
    10. '       ' → logprob: -10.090356826782227

Token 144: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.019611483439803123
    2. '(self' → logprob: -4.019611358642578
    3. ' self' → logprob: -6.894611358642578
    4. ' ' → logprob: -8.644611358642578
    5. 'self' → logprob: -8.894611358642578
    6. ' not' → logprob: -9.269611358642578
    7. ')' → logprob: -11.894611358642578
    8. 'not' → logprob: -12.394611358642578
    9. '(not' → logprob: -12.394611358642578
    10. 'False' → logprob: -12.519611358642578

Token 145: 'self' (ID: 1156)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5760868787765503
    2. 'self' → logprob: -0.8260868787765503
    3. ' not' → logprob: -9.95108699798584
    4. ' ' → logprob: -10.82608699798584
    5. '   ' → logprob: -10.82608699798584
    6. '       ' → logprob: -11.45108699798584
    7. '(self' → logprob: -11.82608699798584
    8. ')' → logprob: -11.95108699798584
    9. '	self' → logprob: -12.07608699798584
    10. '           ' → logprob: -12.32608699798584

Token 146: '.right' (ID: 17627)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.5168445110321045
    2. 'right' → logprob: -1.0168445110321045
    3. '.right' → logprob: -4.016844749450684
    4. 'None' → logprob: -4.516844749450684
    5. ' None' → logprob: -4.641844749450684
    6. ' ' → logprob: -6.016844749450684
    7. 'Right' → logprob: -8.641844749450684
    8. ' is' → logprob: -8.891844749450684
    9. 'self' → logprob: -8.891844749450684
    10. ')' → logprob: -9.016844749450684

Token 147: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007749540731310844
    2. 'is' → logprob: -4.882749557495117
    3. ')' → logprob: -9.132749557495117
    4. ' ' → logprob: -10.632749557495117
    5. 'None' → logprob: -13.007749557495117
    6. ' None' → logprob: -13.132749557495117
    7. ' )' → logprob: -13.132749557495117
    8. ')is' → logprob: -13.632749557495117
    9. '	is' → logprob: -14.007749557495117
    10. '   ' → logprob: -14.007749557495117

Token 148: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3132685124874115
    2. ' None' → logprob: -1.3132685422897339
    3. ' ' → logprob: -12.313268661499023
    4. '   ' → logprob: -14.313268661499023
    5. '(None' → logprob: -14.688268661499023
    6. '_None' → logprob: -15.188268661499023
    7. 'False' → logprob: -15.313268661499023
    8. 'none' → logprob: -15.813268661499023
    9. '=None' → logprob: -15.813268661499023
    10. ' not' → logprob: -16.188268661499023

Token 149: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5838310718536377
    2. '):' → logprob: -0.8338310718536377
    3. '       ' → logprob: -5.458830833435059
    4. ')' → logprob: -5.708830833435059
    5. '   ' → logprob: -8.833830833435059
    6. ':' → logprob: -10.208830833435059
    7. '):
' → logprob: -10.208830833435059
    8. ' ):
' → logprob: -10.833830833435059
    9. ' ):' → logprob: -11.458830833435059
    10. '):

' → logprob: -11.458830833435059

Token 150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02881161868572235
    2. '       ' → logprob: -3.6538116931915283
    3. 'return' → logprob: -6.903811454772949
    4. ' return' → logprob: -7.278811454772949
    5. '	       ' → logprob: -8.15381145477295
    6. ':' → logprob: -8.52881145477295
    7. '
' → logprob: -9.90381145477295
    8. '		' → logprob: -10.02881145477295
    9. ':return' → logprob: -10.40381145477295
    10. '   ' → logprob: -10.65381145477295

Token 151: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21534837782382965
    2. ' self' → logprob: -1.9653483629226685
    3. 'return' (adapté à ' return') → logprob: -3.215348482131958
    4. ' return' → logprob: -4.465348243713379
    5. '       ' → logprob: -6.590348243713379
    6. '           ' → logprob: -7.590348243713379
    7. '   ' → logprob: -10.090348243713379
    8. '	self' → logprob: -10.965348243713379
    9. ' ' → logprob: -11.590348243713379
    10. ' ' → logprob: -11.840348243713379

Token 152: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2811741828918457
    2. ' self' → logprob: -1.4061741828918457
    3. '	self' → logprob: -12.031173706054688
    4. ' ' → logprob: -12.281173706054688
    5. '   ' → logprob: -12.281173706054688
    6. '       ' → logprob: -12.531173706054688
    7. '           ' → logprob: -13.156173706054688
    8. ' ' → logprob: -14.031173706054688
    9. '  ' → logprob: -15.031173706054688
    10. '(self' → logprob: -15.031173706054688

Token 153: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.690834273584187e-05
    2. 'left' → logprob: -10.37503719329834
    3. '.' → logprob: -12.25003719329834
    4. ' .' → logprob: -14.87503719329834
    5. '.right' → logprob: -15.50003719329834
    6. ' left' → logprob: -15.50003719329834
    7. '[left' → logprob: -16.375036239624023
    8. '	left' → logprob: -17.000036239624023
    9. '   ' → logprob: -17.875036239624023
    10. '.le' → logprob: -17.875036239624023

Token 154: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002633088268339634
    2. '   ' → logprob: -7.002633094787598
    3. 'else' → logprob: -7.252633094787598
    4. ' else' → logprob: -8.002633094787598
    5. '<|end|>' → logprob: -8.377633094787598
    6. 'return' → logprob: -9.127633094787598
    7. '	' → logprob: -9.252633094787598
    8. '
' → logprob: -9.877633094787598
    9. ' ' → logprob: -10.877633094787598
    10. '        ' → logprob: -11.002633094787598

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022601638920605183
    2. '   ' → logprob: -6.752260208129883
    3. '<|end|>' → logprob: -8.252260208129883
    4. 'return' → logprob: -8.502260208129883
    5. ' else' → logprob: -8.752260208129883
    6. '	' → logprob: -8.877260208129883
    7. 'else' → logprob: -8.877260208129883
    8. ' return' → logprob: -10.002260208129883
    9. '        ' → logprob: -10.377260208129883
    10. '    ' → logprob: -10.627260208129883

Token 156: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3110397160053253
    2. '   ' → logprob: -2.186039686203003
    3. '       ' → logprob: -2.436039686203003
    4. ' else' → logprob: -2.936039686203003
    5. 'return' → logprob: -4.311039924621582
    6. '	else' → logprob: -7.436039924621582
    7. ' return' → logprob: -8.811039924621582
    8. ' ' → logprob: -10.061039924621582
    9. '  ' → logprob: -10.186039924621582
    10. '    ' → logprob: -10.561039924621582

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7481785416603088
    2. ':
' → logprob: -0.8731785416603088
    3. '       ' → logprob: -2.873178482055664
    4. '           ' → logprob: -3.373178482055664
    5. 'return' → logprob: -4.998178482055664
    6. ' return' → logprob: -4.998178482055664
    7. '   ' → logprob: -5.998178482055664
    8. ':return' → logprob: -6.498178482055664
    9. ' :
' → logprob: -7.748178482055664
    10. ' :' → logprob: -8.373178482055664

Token 158: '           ' (ID: 352)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6955706477165222
    2. '       ' → logprob: -0.8205706477165222
    3. 'None' → logprob: -3.695570707321167
    4. 'return' → logprob: -4.070570468902588
    5. ' False' → logprob: -4.320570468902588
    6. ' None' → logprob: -6.070570468902588
    7. '   ' → logprob: -6.320570468902588
    8. ' return' → logprob: -7.070570468902588
    9. '           ' → logprob: -7.695570468902588
    10. 'false' → logprob: -8.820570945739746

Token 159: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12718909978866577
    2. ' return' → logprob: -2.3771891593933105
    3. '       ' → logprob: -3.7521891593933105
    4. 'False' → logprob: -6.0021891593933105
    5. ' False' → logprob: -8.752188682556152
    6. 'None' → logprob: -9.002188682556152
    7. '           ' → logprob: -9.002188682556152
    8. '   ' → logprob: -9.127188682556152
    9. '	return' → logprob: -9.377188682556152
    10. ' None' → logprob: -10.377188682556152

Token 160: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.39983850717544556
    2. 'None' → logprob: -1.1498384475708008
    3. 'True' → logprob: -4.399838447570801
    4. ' None' → logprob: -8.2748384475708
    5. ' False' → logprob: -8.6498384475708
    6. '   ' → logprob: -8.8998384475708
    7. 'self' → logprob: -10.3998384475708
    8. ' True' → logprob: -12.3998384475708
    9. '  ' → logprob: -14.0248384475708
    10. ' ' → logprob: -14.3998384475708

Token 161: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9208698272705078
    2. '<|end|>' → logprob: -1.2958698272705078
    3. '   ' → logprob: -2.045869827270508
    4. ':' → logprob: -2.045869827270508
    5. 'def' → logprob: -3.170869827270508
    6. '    
' → logprob: -5.045869827270508
    7. '<|end|>' → logprob: -5.295869827270508
    8. '

' → logprob: -5.295869827270508
    9. ' def' → logprob: -6.420869827270508
    10. ':
' → logprob: -6.420869827270508

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2591744363307953
    2. '
' → logprob: -1.8841744661331177
    3. 'def' → logprob: -3.009174346923828
    4. '    
' → logprob: -4.634174346923828
    5. ':' → logprob: -5.009174346923828
    6. '<|end|>' → logprob: -5.634174346923828
    7. ' def' → logprob: -6.009174346923828
    8. '<|end|>' → logprob: -7.384174346923828
    9. ' 
' → logprob: -7.634174346923828
    10. '  
' → logprob: -7.884174346923828

Token 163: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005874632857739925
    2. '   ' → logprob: -5.7558746337890625
    3. ' def' → logprob: -6.0058746337890625
    4. 'class' → logprob: -8.630874633789062
    5. ' ' → logprob: -11.630874633789062
    6. '    
' → logprob: -11.755874633789062
    7. '#' → logprob: -11.755874633789062
    8. '	def' → logprob: -11.880874633789062
    9. '  ' → logprob: -12.380874633789062
    10. '       ' → logprob: -12.630874633789062

Token 164: ' has' (ID: 853)
  Prédit: ' has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -1.9234908819198608
    2. ' insert' → logprob: -2.1734910011291504
    3. ' set' → logprob: -2.4234910011291504
    4. 'has' → logprob: -2.5484910011291504
    5. ' height' → logprob: -2.7984910011291504
    6. ' get' → logprob: -2.7984910011291504
    7. 'replace' → logprob: -2.7984910011291504
    8. 'height' → logprob: -2.9234910011291504
    9. 'insert' → logprob: -3.4234910011291504
    10. 'get' → logprob: -3.5484910011291504

Token 165: '_two' (ID: 54305)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.26843181252479553
    2. '_two' → logprob: -1.6434317827224731
    3. '_child' → logprob: -3.7684319019317627
    4. '_children' → logprob: -4.643431663513184
    5. '_left' → logprob: -5.143431663513184
    6. '_any' → logprob: -6.268431663513184
    7. '_parent' → logprob: -7.518431663513184
    8. '_right' → logprob: -8.393431663513184
    9. '_none' → logprob: -9.268431663513184
    10. '_key' → logprob: -9.268431663513184

Token 166: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.3921353816986084
    2. '_children' → logprob: -1.1421353816986084
    3. '_' → logprob: -5.5171356201171875
    4. ' _' → logprob: -6.7671356201171875
    5. '_parent' → logprob: -11.142135620117188
    6. '_CHILD' → logprob: -11.267135620117188
    7. '##_' → logprob: -11.767135620117188
    8. ')_' → logprob: -11.892135620117188
    9. '_ch' → logprob: -12.017135620117188
    10. '

' → logprob: -12.892135620117188

Token 167: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3898390233516693
    2. 's' → logprob: -1.1398390531539917
    3. '(s' → logprob: -6.264839172363281
    4. '()' → logprob: -8.264839172363281
    5. '(' → logprob: -8.264839172363281
    6. 'self' → logprob: -8.514839172363281
    7. '   ' → logprob: -8.889839172363281
    8. 'ren' → logprob: -9.389839172363281
    9. 'd' → logprob: -9.639839172363281
    10. '       ' → logprob: -10.889839172363281

Token 168: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7927537560462952
    2. '):' → logprob: -1.0427536964416504
    3. '):
' → logprob: -1.9177536964416504
    4. 's' → logprob: -3.6677536964416504
    5. 'self' → logprob: -4.66775369644165
    6. ')' → logprob: -5.04275369644165
    7. '   ' → logprob: -6.16775369644165
    8. '():' → logprob: -6.54275369644165
    9. '():
' → logprob: -6.79275369644165
    10. '()' → logprob: -7.29275369644165

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3972041606903076
    2. '():
' → logprob: -1.5222041606903076
    3. '():' → logprob: -1.5222041606903076
    4. '   ' → logprob: -1.7722041606903076
    5. ':' → logprob: -2.3972041606903076
    6. '<|end|>' → logprob: -4.397204399108887
    7. '(' → logprob: -4.522204399108887
    8. '()' → logprob: -5.147204399108887
    9. ':
' → logprob: -5.397204399108887
    10. '):' → logprob: -5.522204399108887

Token 170: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09895414859056473
    2. ' return' → logprob: -2.848954200744629
    3. 'return' (adapté à ' return') → logprob: -3.473954200744629
    4. '   ' → logprob: -5.348954200744629
    5. '	return' → logprob: -9.098954200744629
    6. '
' → logprob: -9.348954200744629
    7. ' ' → logprob: -9.348954200744629
    8. '(' → logprob: -10.473954200744629
    9. '    ' → logprob: -10.473954200744629
    10. '()' → logprob: -10.473954200744629

Token 171: ' (' (ID: 350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.432526171207428
    2. 'self' → logprob: -1.1825261116027832
    3. ' (' → logprob: -3.807526111602783
    4. '(self' → logprob: -3.807526111602783
    5. '   ' → logprob: -8.682526588439941
    6. ' ' → logprob: -10.307526588439941
    7. ' not' → logprob: -11.932526588439941
    8. '  ' → logprob: -12.557526588439941
    9. '	self' → logprob: -12.557526588439941
    10. 'not' → logprob: -13.932526588439941

Token 172: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018437525257468224
    2. ' self' → logprob: -4.018437385559082
    3. '(self' → logprob: -8.768437385559082
    4. '   ' → logprob: -9.143437385559082
    5. '       ' → logprob: -11.268437385559082
    6. ' ' → logprob: -12.643437385559082
    7. ' (' → logprob: -12.768437385559082
    8. '
' → logprob: -13.268437385559082
    9. '  ' → logprob: -13.518437385559082
    10. '    ' → logprob: -14.018437385559082

Token 173: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -3.9054008084349334e-05
    2. '.' → logprob: -10.375039100646973
    3. 'left' → logprob: -12.500039100646973
    4. '.right' → logprob: -13.375039100646973
    5. ' .' → logprob: -13.500039100646973
    6. '.parent' → logprob: -14.500039100646973
    7. '.has' → logprob: -15.500039100646973
    8. '.is' → logprob: -16.000038146972656
    9. ').' → logprob: -16.375038146972656
    10. '.Left' → logprob: -16.625038146972656

Token 174: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.020730366930365562
    2. 'is' → logprob: -3.8957302570343018
    3. ' ' → logprob: -9.020730018615723
    4. ')' → logprob: -9.770730018615723
    5. ' )' → logprob: -12.520730018615723
    6. '   ' → logprob: -13.145730018615723
    7. '    ' → logprob: -13.145730018615723
    8. '

' → logprob: -14.270730018615723
    9. 'and' → logprob: -14.645730018615723
    10. '  ' → logprob: -14.770730018615723

Token 175: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07893826067447662
    2. 'not' → logprob: -2.5789382457733154
    3. '	not' → logprob: -10.703938484191895
    4. ' ' → logprob: -11.703938484191895
    5. '   ' → logprob: -12.203938484191895
    6. ')' → logprob: -12.703938484191895
    7. '    ' → logprob: -12.953938484191895
    8. '
' → logprob: -13.578938484191895
    9. 'None' → logprob: -13.828938484191895
    10. 'n' → logprob: -14.203938484191895

Token 176: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008647071197628975
    2. ' None' → logprob: -4.7586469650268555
    3. '   ' → logprob: -10.508646965026855
    4. ' ' → logprob: -13.258646965026855
    5. 'none' → logprob: -13.758646965026855
    6. 'not' → logprob: -13.883646965026855
    7. '  ' → logprob: -14.883646965026855
    8. '(None' → logprob: -15.133646965026855
    9. '=None' → logprob: -15.383646965026855
    10. '_None' → logprob: -15.633646965026855

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2626589834690094
    2. ' and' → logprob: -1.512658953666687
    3. ' )' → logprob: -5.262659072875977
    4. 'and' → logprob: -5.387659072875977
    5. '   ' → logprob: -7.512659072875977
    6. '       ' → logprob: -8.137659072875977
    7. '    ' → logprob: -10.387659072875977
    8. ' ' → logprob: -10.512659072875977
    9. '           ' → logprob: -12.387659072875977
    10. '      ' → logprob: -12.512659072875977

Token 178: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026371242478489876
    2. 'and' → logprob: -3.6513712406158447
    3. '   ' → logprob: -10.026371002197266
    4. ' ' → logprob: -11.401371002197266
    5. '    ' → logprob: -11.776371002197266
    6. '       ' → logprob: -12.401371002197266
    7. '  ' → logprob: -13.776371002197266
    8. ')' → logprob: -14.026371002197266
    9. '	and' → logprob: -14.526371002197266
    10. '      ' → logprob: -14.651371002197266

Token 179: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.0021965294145047665
    2. '(self' → logprob: -6.127196311950684
    3. ' ' → logprob: -11.502196311950684
    4. '
' → logprob: -15.502196311950684
    5. '(' → logprob: -15.627196311950684
    6. '(True' → logprob: -15.877196311950684
    7. '        ' → logprob: -16.002197265625
    8. '    ' → logprob: -16.127197265625
    9. ' self' → logprob: -16.127197265625
    10. '       ' → logprob: -16.252197265625

Token 180: 'self' (ID: 1156)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3701954782009125
    2. 'self' → logprob: -1.3701955080032349
    3. '(self' → logprob: -3.3701953887939453
    4. ' (' → logprob: -3.8701953887939453
    5. ' ' → logprob: -9.620195388793945
    6. '       ' → logprob: -11.495195388793945
    7. '   ' → logprob: -11.620195388793945
    8. '    ' → logprob: -12.495195388793945
    9. '	self' → logprob: -12.620195388793945
    10. '(' → logprob: -12.745195388793945

Token 181: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.0006685942644253373
    2. '.' → logprob: -7.625668525695801
    3. 'right' → logprob: -9.0006685256958
    4. ' .' → logprob: -10.1256685256958
    5. '   ' → logprob: -12.6256685256958
    6. ' ' → logprob: -12.6256685256958
    7. '	right' → logprob: -12.7506685256958
    8. ' right' → logprob: -13.6256685256958
    9. '.left' → logprob: -13.7506685256958
    10. '[right' → logprob: -13.7506685256958

Token 182: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.008786991238594055
    2. 'is' → logprob: -4.758787155151367
    3. ' ' → logprob: -8.883787155151367
    4. ')' → logprob: -10.508787155151367
    5. '    ' → logprob: -13.508787155151367
    6. '   ' → logprob: -13.758787155151367
    7. '<|end|>' → logprob: -14.508787155151367
    8. '        ' → logprob: -14.758787155151367
    9. '  ' → logprob: -14.758787155151367
    10. ' )' → logprob: -15.008787155151367

Token 183: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3133369982242584
    2. 'not' → logprob: -1.313336968421936
    3. 'None' → logprob: -10.188337326049805
    4. ' ' → logprob: -11.313337326049805
    5. '   ' → logprob: -11.563337326049805
    6. ' None' → logprob: -11.938337326049805
    7. ')' → logprob: -12.688337326049805
    8. '	not' → logprob: -13.063337326049805
    9. ' ' → logprob: -13.938337326049805
    10. '  ' → logprob: -14.063337326049805

Token 184: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006717743817716837
    2. ' None' → logprob: -5.006717681884766
    3. '_None' → logprob: -14.131717681884766
    4. 'none' → logprob: -14.256717681884766
    5. '(None' → logprob: -14.631717681884766
    6. '   ' → logprob: -15.756717681884766
    7. '_none' → logprob: -15.881717681884766
    8. '=None' → logprob: -16.131717681884766
    9. 'not' → logprob: -16.256717681884766
    10. ' ' → logprob: -16.256717681884766

Token 185: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.253090865968261e-06
    2. '   ' → logprob: -12.500009536743164
    3. ')
' → logprob: -12.625009536743164
    4. ' )' → logprob: -13.625009536743164
    5. ')return' → logprob: -15.250009536743164
    6. '()' → logprob: -15.500009536743164
    7. ')#' → logprob: -15.750009536743164
    8. '())' → logprob: -16.125009536743164
    9. ')

' → logprob: -16.875009536743164
    10. ' ' → logprob: -16.875009536743164

Token 186: 'root' (ID: 5488)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7927694320678711
    2. 'def' → logprob: -0.7927694320678711
    3. '<|end|>' → logprob: -3.167769432067871
    4. '   ' → logprob: -3.417769432067871
    5. '<|end|>' → logprob: -5.667769432067871
    6. '    
' → logprob: -5.667769432067871
    7. ' def' → logprob: -5.792769432067871
    8. ':' → logprob: -6.292769432067871
    9. '	def' → logprob: -6.542769432067871
    10. 'class' → logprob: -6.542769432067871

Token 187: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.614790141582489
    2. '.' → logprob: -1.1147902011871338
    3. '=' → logprob: -2.114790201187134
    4. ' ' → logprob: -5.114789962768555
    5. ' is' → logprob: -6.364789962768555
    6. '<|end|>' → logprob: -6.989789962768555
    7. ')' → logprob: -7.239789962768555
    8. ' .' → logprob: -7.489789962768555
    9. '.=' → logprob: -8.864789962768555
    10. '<|end|>' → logprob: -9.864789962768555

Token 188: '_no' (ID: 13575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0688319280743599
    2. '=' → logprob: -2.8188319206237793
    3. '.' → logprob: -5.318831920623779
    4. ' ' → logprob: -6.943831920623779
    5. ' is' → logprob: -7.568831920623779
    6. ')' → logprob: -8.818832397460938
    7. '=None' → logprob: -9.818832397460938
    8. '<|end|>' → logprob: -9.818832397460938
    9. ' .' → logprob: -10.443832397460938
    10. ' =
' → logprob: -10.693832397460938

Token 189: ' =' (ID: 314)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5555479526519775
    2. '=' → logprob: -1.5555479526519775
    3. ' =' → logprob: -1.5555479526519775
    4. 'w' → logprob: -6.555547714233398
    5. 'ne' → logprob: -7.430547714233398
    6. '   ' → logprob: -7.930547714233398
    7. 'des' → logprob: -7.930547714233398
    8. 'e' → logprob: -8.680547714233398
    9. '```' → logprob: -8.930547714233398
    10. ' ' → logprob: -9.180547714233398

Token 190: ' None' (ID: 4662)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3862023651599884
    2. 'None' → logprob: -1.386202335357666
    3. '0' → logprob: -2.886202335357666
    4. ' int' → logprob: -5.136202335357666
    5. ' None' → logprob: -5.386202335357666
    6. 'Node' → logprob: -6.136202335357666
    7. ' ' → logprob: -7.636202335357666
    8. '10' → logprob: -7.886202335357666
    9. '3' → logprob: -8.386202812194824
    10. '1' → logprob: -8.636202812194824

Token 191: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30836570262908936
    2. 'def' → logprob: -1.9333657026290894
    3. '#' → logprob: -3.808365821838379
    4. 'root' → logprob: -3.808365821838379
    5. '=' → logprob: -4.183365821838379
    6. ' =' → logprob: -4.308365821838379
    7. 'n' → logprob: -5.058365821838379
    8. 'for' → logprob: -5.183365821838379
    9. '

' → logprob: -5.308365821838379
    10. 'class' → logprob: -5.433365821838379

Token 192: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046149685978889465
    2. 'class' → logprob: -3.296149730682373
    3. 'for' → logprob: -5.796149730682373
    4. '
' → logprob: -6.046149730682373
    5. 'n' → logprob: -7.296149730682373
    6. '#' → logprob: -7.796149730682373
    7. 'root' → logprob: -8.671149253845215
    8. 'if' → logprob: -8.671149253845215
    9. 'input' → logprob: -8.796149253845215
    10. 'd' → logprob: -9.296149253845215

Token 193: ' insert' (ID: 10898)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8786080479621887
    2. ' build' → logprob: -1.128607988357544
    3. ' parse' → logprob: -2.378607988357544
    4. ' insert' → logprob: -2.628607988357544
    5. ' find' → logprob: -3.378607988357544
    6. ' read' → logprob: -4.003608226776123
    7. ' create' → logprob: -4.503608226776123
    8. ' preorder' → logprob: -5.253608226776123
    9. 'main' → logprob: -5.503608226776123
    10. ' inorder' → logprob: -5.878608226776123

Token 194: '(nodes' (ID: 86139)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.4690723121166229
    2. '(node' → logprob: -1.3440723419189453
    3. ' (' → logprob: -2.4690723419189453
    4. '(' → logprob: -3.5940723419189453
    5. '(key' → logprob: -7.594072341918945
    6. '(parent' → logprob: -8.344072341918945
    7. '(tree' → logprob: -8.469072341918945
    8. '(Node' → logprob: -9.219072341918945
    9. '_node' → logprob: -9.469072341918945
    10. '(value' → logprob: -9.594072341918945

Token 195: ' :' (ID: 712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006945623317733407
    2. ',key' → logprob: -8.125694274902344
    3. ' ,' → logprob: -8.375694274902344
    4. ',node' → logprob: -9.250694274902344
    5. '):' → logprob: -10.375694274902344
    6. ',n' → logprob: -11.625694274902344
    7. '[],' → logprob: -12.500694274902344
    8. ':' → logprob: -12.875694274902344
    9. '_list' → logprob: -13.125694274902344
    10. '_,' → logprob: -13.125694274902344

Token 196: 'dict' (ID: 20993)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030890922993421555
    2. ' ,' → logprob: -3.780890941619873
    3. ' list' → logprob: -5.780890941619873
    4. 'list' → logprob: -6.280890941619873
    5. ',list' → logprob: -7.655890941619873
    6. '[],' → logprob: -7.780890941619873
    7. '[list' → logprob: -7.905890941619873
    8. 'List' → logprob: -8.030890464782715
    9. '[int' → logprob: -8.780890464782715
    10. 'root' → logprob: -9.405890464782715

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005321277771145105
    2. ' ,' → logprob: -5.255321502685547
    3. ',n' → logprob: -10.255321502685547
    4. ',node' → logprob: -10.630321502685547
    5. ',int' → logprob: -12.005321502685547
    6. ',key' → logprob: -12.005321502685547
    7. '):' → logprob: -12.630321502685547
    8. ' ' → logprob: -13.130321502685547
    9. '   ' → logprob: -13.380321502685547
    10. ')' → logprob: -13.755321502685547

Token 198: ' in' (ID: 306)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.4361981749534607
    2. 'key' → logprob: -1.0611982345581055
    3. 'node' → logprob: -6.3111982345581055
    4. 'root' → logprob: -6.9361982345581055
    5. 'new' → logprob: -7.0611982345581055
    6. ' node' → logprob: -7.0611982345581055
    7. 'parent' → logprob: -7.3111982345581055
    8. ' new' → logprob: -7.4361982345581055
    9. ' root' → logprob: -7.8111982345581055
    10. ' parent' → logprob: -7.9361982345581055

Token 199: '_node' (ID: 11390)
  Prédit: 'dex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dex' → logprob: -0.25532981753349304
    2. 't' → logprob: -2.2553298473358154
    3. 'put' → logprob: -2.2553298473358154
    4. 'order' → logprob: -5.380329608917236
    5. '_key' → logprob: -5.505329608917236
    6. 'sert' → logprob: -6.380329608917236
    7. '_' → logprob: -7.005329608917236
    8. '_order' → logprob: -7.380329608917236
    9. 'key' → logprob: -7.630329608917236
    10. '_node' → logprob: -8.005330085754395

Token 200: ' :' (ID: 712)
  Prédit: '_key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_key' → logprob: -0.3869570195674896
    2. '):' → logprob: -1.261957049369812
    3. '):
' → logprob: -4.261957168579102
    4. ',' → logprob: -4.761957168579102
    5. 'key' → logprob: -5.136957168579102
    6. ')' → logprob: -5.511957168579102
    7. 't' → logprob: -6.386957168579102
    8. ':' → logprob: -7.511957168579102
    9. ' ):' → logprob: -7.511957168579102
    10. 'd' → logprob: -8.136957168579102

Token 201: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.15160776674747467
    2. 'int' → logprob: -2.5266077518463135
    3. 't' → logprob: -3.0266077518463135
    4. ' Node' → logprob: -5.276607990264893
    5. ')' → logprob: -6.151607990264893
    6. 'node' → logprob: -6.776607990264893
    7. 'nt' → logprob: -7.651607990264893
    8. ' int' → logprob: -7.651607990264893
    9. 'key' → logprob: -7.651607990264893
    10. 'str' → logprob: -8.026607513427734

Token 202: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6274214386940002
    2. '):' → logprob: -1.0024213790893555
    3. ')' → logprob: -2.3774213790893555
    4. ' ,' → logprob: -6.1274213790893555
    5. '):
' → logprob: -6.3774213790893555
    6. ' ):' → logprob: -6.5024213790893555
    7. ' )' → logprob: -7.7524213790893555
    8. ')->' → logprob: -8.002421379089355
    9. '   ' → logprob: -10.627421379089355
    10. ',key' → logprob: -10.877421379089355

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037681119283661246
    2. ' if' → logprob: -8.50037670135498
    3. '    
' → logprob: -8.87537670135498
    4. ' key' → logprob: -12.25037670135498
    5. 'if' → logprob: -12.50037670135498
    6. 'n' → logprob: -12.50037670135498
    7. ' keys' → logprob: -12.75037670135498
    8. '
' → logprob: -13.12537670135498
    9. ' nodes' → logprob: -13.25037670135498
    10. ':' → logprob: -13.37537670135498

Token 204: ' global' (ID: 5466)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18790008127689362
    2. 'key' → logprob: -2.8129000663757324
    3. 'global' (adapté à ' global') → logprob: -3.1879000663757324
    4. '   ' → logprob: -3.6879000663757324
    5. 'current' → logprob: -3.8129000663757324
    6. 'parent' → logprob: -4.437900066375732
    7. 'root' → logprob: -5.062900066375732
    8. 'node' → logprob: -6.437900066375732
    9. 'nodes' → logprob: -6.937900066375732
    10. 'cur' → logprob: -7.687900066375732

Token 205: ' root' (ID: 6577)
  Prédit: ' root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' root' → logprob: -0.1269376575946808
    2. 'root' → logprob: -2.1269376277923584
    3. ' ' → logprob: -12.001937866210938
    4. '	root' → logprob: -12.751937866210938
    5. '_root' → logprob: -15.626937866210938
    6. '(root' → logprob: -16.251937866210938
    7. '  ' → logprob: -16.376937866210938
    8. '   ' → logprob: -16.501937866210938
    9. '[root' → logprob: -17.001937866210938
    10. '
' → logprob: -17.376937866210938

Token 206: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.500001907348633
    3. 'node' → logprob: -15.000001907348633
    4. '_nodes' → logprob: -16.625001907348633
    5. '_root' → logprob: -17.000001907348633
    6. '_NODE' → logprob: -18.000001907348633
    7. '_Node' → logprob: -19.250001907348633
    8. 'Node' → logprob: -20.500001907348633
    9. 'root' → logprob: -20.750001907348633
    10. ' _' → logprob: -20.750001907348633

Token 207: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.0921942703134846e-05
    2. '_' → logprob: -11.87501049041748
    3. 'no' → logprob: -12.62501049041748
    4. 'No' → logprob: -15.00001049041748
    5. '_node' → logprob: -16.750011444091797
    6. '_number' → logprob: -17.125011444091797
    7. '_
' → logprob: -17.375011444091797
    8. '_nodes' → logprob: -17.375011444091797
    9. '_root' → logprob: -17.500011444091797
    10. '_none' → logprob: -17.500011444091797

Token 208: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03398371860384941
    2. '
' → logprob: -4.1589837074279785
    3. '    
' → logprob: -4.6589837074279785
    4. ' if' → logprob: -5.1589837074279785
    5. 'if' → logprob: -6.7839837074279785
    6. ',' → logprob: -7.7839837074279785
    7. ' 
' → logprob: -7.9089837074279785
    8. '  
' → logprob: -9.158984184265137
    9. '   
' → logprob: -9.283984184265137
    10. '    ' → logprob: -9.408984184265137

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023676099255681038
    2. 'if' → logprob: -4.023675918579102
    3. '
' → logprob: -5.898675918579102
    4. '    
' → logprob: -7.023675918579102
    5. 'key' → logprob: -7.273675918579102
    6. ' if' → logprob: -7.523675918579102
    7. 'node' → logprob: -8.398675918579102
    8. 'nodes' → logprob: -8.648675918579102
    9. 'n' → logprob: -9.273675918579102
    10. ' key' → logprob: -10.023675918579102

Token 210: ' cur' (ID: 4396)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019782140851020813
    2. 'key' → logprob: -4.894782066345215
    3. 'nodes' → logprob: -5.644782066345215
    4. 'parent' → logprob: -5.894782066345215
    5. 'node' → logprob: -5.894782066345215
    6. 'root' → logprob: -6.519782066345215
    7. 'no' → logprob: -7.769782066345215
    8. '   ' → logprob: -7.894782066345215
    9. '#' → logprob: -8.519782066345215
    10. 'n' → logprob: -8.519782066345215

Token 211: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.3844985067844391
    2. ' =' → logprob: -2.2594985961914062
    3. 'rent' → logprob: -2.2594985961914062
    4. '_key' → logprob: -2.5094985961914062
    5. '=' → logprob: -4.634498596191406
    6. 'ent' → logprob: -4.759498596191406
    7. '   ' → logprob: -5.634498596191406
    8. 't' → logprob: -6.009498596191406
    9. 'key' → logprob: -7.509498596191406
    10. 'node' → logprob: -7.634498596191406

Token 212: '_no' (ID: 13575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027684256434440613
    2. '=' → logprob: -3.652684211730957
    3. '_key' → logprob: -6.902684211730957
    4. '_no' → logprob: -8.277684211730957
    5. ' ' → logprob: -10.402684211730957
    6. 'No' → logprob: -10.777684211730957
    7. 'key' → logprob: -10.902684211730957
    8. 'no' → logprob: -11.652684211730957
    9. ':' → logprob: -11.777684211730957
    10. '_number' → logprob: -12.527684211730957

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301152005791664
    2. '=' → logprob: -3.168011426925659
    3. ' ' → logprob: -12.043011665344238
    4. '=root' → logprob: -12.668011665344238
    5. ',' → logprob: -13.168011665344238
    6. '=None' → logprob: -15.043011665344238
    7. ':' → logprob: -15.043011665344238
    8. ' =
' → logprob: -15.293011665344238
    9. '   ' → logprob: -15.793011665344238
    10. ')' → logprob: -16.043010711669922

Token 214: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0023796886671334505
    2. '1' → logprob: -6.752379894256592
    3. '0' → logprob: -7.127379894256592
    4. ' root' → logprob: -8.252379417419434
    5. 'None' → logprob: -9.252379417419434
    6. ' ' → logprob: -11.627379417419434
    7. 'list' → logprob: -11.752379417419434
    8. 'roo' → logprob: -12.127379417419434
    9. 'next' → logprob: -12.377379417419434
    10. '[root' → logprob: -12.752379417419434

Token 215: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.875000953674316
    3. 'node' → logprob: -16.375
    4. '_no' → logprob: -16.625
    5. '_nodes' → logprob: -17.75
    6. '_NODE' → logprob: -18.625
    7. '_root' → logprob: -18.75
    8. ' _' → logprob: -19.0
    9. '_n' → logprob: -19.875
    10. '_Node' → logprob: -20.375

Token 216: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.008843475952744484
    2. 'no' → logprob: -4.758843421936035
    3. '_' → logprob: -8.758843421936035
    4. 'No' → logprob: -9.633843421936035
    5. '_
' → logprob: -14.258843421936035
    6. '_No' → logprob: -14.258843421936035
    7. '```' → logprob: -14.508843421936035
    8. ' _' → logprob: -14.758843421936035
    9. 'n' → logprob: -14.883843421936035
    10. '_number' → logprob: -14.883843421936035

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.83492511510849
    2. ' if' → logprob: -1.3349251747131348
    3. '
' → logprob: -1.5849251747131348
    4. 'if' → logprob: -2.5849251747131348
    5. '    
' → logprob: -4.584925174713135
    6. ' while' → logprob: -5.584925174713135
    7. ' 
' → logprob: -5.709925174713135
    8. 'while' → logprob: -5.834925174713135
    9. '   
' → logprob: -7.834925174713135
    10. ' ' → logprob: -7.959925174713135

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030779846012592316
    2. '    
' → logprob: -4.530779838562012
    3. ' while' → logprob: -4.905779838562012
    4. 'while' → logprob: -5.030779838562012
    5. '
' → logprob: -5.530779838562012
    6. 'if' → logprob: -7.030779838562012
    7. ' if' → logprob: -8.155779838562012
    8. '   
' → logprob: -8.780779838562012
    9. '  ' → logprob: -9.280779838562012
    10. ' 
' → logprob: -9.905779838562012

Token 219: ' parent' (ID: 5980)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03313484415411949
    2. 'if' → logprob: -3.783134937286377
    3. ' while' → logprob: -5.658134937286377
    4. 'parent' (adapté à ' parent') → logprob: -6.033134937286377
    5. '   ' → logprob: -6.408134937286377
    6. 'cur' → logprob: -6.533134937286377
    7. 'prev' → logprob: -7.158134937286377
    8. ' if' → logprob: -10.533134460449219
    9. 'new' → logprob: -11.283134460449219
    10. '    
' → logprob: -11.533134460449219

Token 220: '_node' (ID: 11390)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6660662889480591
    2. '_' → logprob: -1.041066288948059
    3. '_node' → logprob: -2.2910661697387695
    4. '=' → logprob: -3.9160661697387695
    5. '_no' → logprob: -4.9160661697387695
    6. ' _' → logprob: -6.6660661697387695
    7. ' ' → logprob: -7.0410661697387695
    8. '=None' → logprob: -7.1660661697387695
    9. '_key' → logprob: -7.5410661697387695
    10. '_=' → logprob: -8.16606616973877

Token 221: '_no' (ID: 13575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18194986879825592
    2. '=' → logprob: -2.6819498538970947
    3. '_' → logprob: -2.9319498538970947
    4. '_no' → logprob: -3.1819498538970947
    5. ' ' → logprob: -6.181950092315674
    6. '=None' → logprob: -7.806950092315674
    7. 'No' → logprob: -8.431949615478516
    8. ' _' → logprob: -8.806949615478516
    9. '_n' → logprob: -9.681949615478516
    10. ',' → logprob: -10.181949615478516

Token 222: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06206325441598892
    2. '=' → logprob: -2.812063217163086
    3. ' None' → logprob: -10.187063217163086
    4. '=None' → logprob: -10.562063217163086
    5. ' ' → logprob: -10.937063217163086
    6. '   ' → logprob: -11.562063217163086
    7. 'None' → logprob: -12.562063217163086
    8. '    ' → logprob: -13.812063217163086
    9. '  ' → logprob: -16.062063217163086
    10. ' =
' → logprob: -16.937063217163086

Token 223: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04861711338162422
    2. ' None' → logprob: -3.048617124557495
    3. 'cur' → logprob: -10.673617362976074
    4. '   ' → logprob: -12.548617362976074
    5. ' cur' → logprob: -14.423617362976074
    6. ' ' → logprob: -14.423617362976074
    7. '-' → logprob: -14.923617362976074
    8. 'none' → logprob: -14.923617362976074
    9. 'root' → logprob: -15.173617362976074
    10. '0' → logprob: -15.548617362976074

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10088702291250229
    2. '
' → logprob: -2.8508870601654053
    3. '    
' → logprob: -4.100886821746826
    4. ' while' → logprob: -4.350886821746826
    5. 'while' → logprob: -4.975886821746826
    6. ' 
' → logprob: -7.725886821746826
    7. '   
' → logprob: -7.850886821746826
    8. '<|end|>' → logprob: -8.225887298583984
    9. '  
' → logprob: -8.350887298583984
    10. '	while' → logprob: -8.350887298583984

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21196416020393372
    2. ' while' → logprob: -2.3369641304016113
    3. '
' → logprob: -3.2119641304016113
    4. 'while' → logprob: -3.7119641304016113
    5. '    
' → logprob: -3.8369641304016113
    6. ' 
' → logprob: -5.461964130401611
    7. '  
' → logprob: -6.461964130401611
    8. '   
' → logprob: -6.711964130401611
    9. '	while' → logprob: -7.711964130401611
    10. '  ' → logprob: -8.46196460723877

Token 226: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.02817820943892002
    2. '   ' → logprob: -4.2781782150268555
    3. ' while' → logprob: -4.2781782150268555
    4. '	while' → logprob: -10.653178215026855
    5. 'cur' → logprob: -11.778178215026855
    6. '    
' → logprob: -11.778178215026855
    7. 'key' → logprob: -12.903178215026855
    8. '  ' → logprob: -12.903178215026855
    9. 'if' → logprob: -13.653178215026855
    10. '
' → logprob: -13.903178215026855

Token 227: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0086322957649827
    2. ' cur' → logprob: -4.758632183074951
    3. '(cur' → logprob: -11.75863265991211
    4. ' ' → logprob: -12.38363265991211
    5. '	cur' → logprob: -12.75863265991211
    6. ' True' → logprob: -13.75863265991211
    7. 'True' → logprob: -13.75863265991211
    8. '   ' → logprob: -14.50863265991211
    9. ' not' → logprob: -15.75863265991211
    10. 'not' → logprob: -16.38363265991211

Token 228: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.20603168499656e-05
    2. 'node' → logprob: -10.125061988830566
    3. '_' → logprob: -11.875061988830566
    4. 'Node' → logprob: -12.250061988830566
    5. '_token' → logprob: -12.875061988830566
    6. '_nodes' → logprob: -13.125061988830566
    7. '_no' → logprob: -14.375061988830566
    8. '_NODE' → logprob: -14.375061988830566
    9. '   ' → logprob: -14.500061988830566
    10. ' node' → logprob: -14.875061988830566

Token 229: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0005657802103087306
    2. 'no' → logprob: -7.500566005706787
    3. 'No' → logprob: -12.000565528869629
    4. '_' → logprob: -12.750565528869629
    5. '_not' → logprob: -14.000565528869629
    6. '_node' → logprob: -14.750565528869629
    7. '_none' → logprob: -14.750565528869629
    8. ' no' → logprob: -14.875565528869629
    9. 'node' → logprob: -15.250565528869629
    10. '	no' → logprob: -15.375565528869629

Token 230: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0036006635054945946
    2. 'is' → logprob: -5.628600597381592
    3. ')' → logprob: -15.62860107421875
    4. ' ' → logprob: -16.00360107421875
    5. '!=' → logprob: -16.00360107421875
    6. ' !=' → logprob: -16.50360107421875
    7. '	is' → logprob: -16.75360107421875
    8. 'in' → logprob: -18.25360107421875
    9. ' not' → logprob: -18.62860107421875
    10. '   ' → logprob: -18.75360107421875

Token 231: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3869021236896515
    2. ' not' → logprob: -1.136902093887329
    3. 'Not' → logprob: -11.38690185546875
    4. '	not' → logprob: -12.26190185546875
    5. 'n' → logprob: -12.38690185546875
    6. 'n't' → logprob: -12.88690185546875
    7. '!' → logprob: -13.76190185546875
    8. '_not' → logprob: -13.88690185546875
    9. '   ' → logprob: -14.13690185546875
    10. 'None' → logprob: -14.13690185546875

Token 232: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000297685619443655
    2. ' None' → logprob: -8.125297546386719
    3. 'root' → logprob: -14.625297546386719
    4. '(None' → logprob: -15.125297546386719
    5. '_None' → logprob: -15.250297546386719
    6. '   ' → logprob: -15.250297546386719
    7. 'none' → logprob: -15.875297546386719
    8. ' ' → logprob: -16.50029754638672
    9. '_none' → logprob: -16.75029754638672
    10. '  ' → logprob: -17.37529754638672

Token 233: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4382365643978119
    2. ' and' → logprob: -1.3132365942001343
    3. ':
' → logprob: -2.6882364749908447
    4. '   ' → logprob: -4.563236713409424
    5. 'and' → logprob: -5.188236713409424
    6. '       ' → logprob: -7.188236713409424
    7. ' :' → logprob: -7.563236713409424
    8. ' :
' → logprob: -7.813236713409424
    9. ' ' → logprob: -10.063236236572266
    10. '):
' → logprob: -10.313236236572266

Token 234: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026888481806963682
    2. '   ' → logprob: -6.252688884735107
    3. '        
' → logprob: -7.752688884735107
    4. '
' → logprob: -9.25268840789795
    5. '    
' → logprob: -10.37768840789795
    6. '    ' → logprob: -10.37768840789795
    7. 'cur' → logprob: -10.50268840789795
    8. '	   ' → logprob: -10.87768840789795
    9. ' cur' → logprob: -11.00268840789795
    10. ',' → logprob: -11.25268840789795

Token 235: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.2116963118314743
    2. '       ' → logprob: -2.3366963863372803
    3. '   ' → logprob: -2.4616963863372803
    4. ' parent' → logprob: -4.961696147918701
    5. 'if' → logprob: -7.211696147918701
    6. '	parent' → logprob: -7.711696147918701
    7. 'cur' → logprob: -8.96169662475586
    8. 'key' → logprob: -8.96169662475586
    9. 'node' → logprob: -9.83669662475586
    10. 'current' → logprob: -9.83669662475586

Token 236: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.868328920158092e-05
    2. '_nodes' → logprob: -11.500028610229492
    3. ' _' → logprob: -12.500028610229492
    4. ' =' → logprob: -12.625028610229492
    5. 'Node' → logprob: -13.000028610229492
    6. 'node' → logprob: -13.250028610229492
    7. '=_' → logprob: -13.875028610229492
    8. '_' → logprob: -13.875028610229492
    9. '_Node' → logprob: -14.000028610229492
    10. '_token' → logprob: -14.250028610229492

Token 237: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0010106575209647417
    2. 'No' → logprob: -7.876010894775391
    3. '_' → logprob: -8.00101089477539
    4. ' =' → logprob: -8.87601089477539
    5. '=' → logprob: -9.37601089477539
    6. '=_' → logprob: -10.62601089477539
    7. ' _' → logprob: -11.12601089477539
    8. 'no' → logprob: -11.25101089477539
    9. '_n' → logprob: -12.37601089477539
    10. '_not' → logprob: -12.87601089477539

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759419202804565
    2. '=' → logprob: -0.8259419202804565
    3. ' ' → logprob: -13.325942039489746
    4. '＝' → logprob: -14.950942039489746
    5. ' =
' → logprob: -15.950942039489746
    6. ',' → logprob: -16.20094108581543
    7. '=

' → logprob: -17.32594108581543
    8. '=}' → logprob: -17.70094108581543
    9. '=current' → logprob: -17.70094108581543
    10. '=int' → logprob: -17.82594108581543

Token 239: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.00033546582562848926
    2. ' cur' → logprob: -8.000335693359375
    3. '	cur' → logprob: -17.750335693359375
    4. ' ' → logprob: -17.875335693359375
    5. '   ' → logprob: -18.250335693359375
    6. '_cur' → logprob: -20.000335693359375
    7. '(cur' → logprob: -20.125335693359375
    8. '[cur' → logprob: -20.500335693359375
    9. 'c' → logprob: -21.500335693359375
    10. 'Cur' → logprob: -21.750335693359375

Token 240: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.856408536899835e-05
    2. '_' → logprob: -11.125028610229492
    3. 'node' → logprob: -11.750028610229492
    4. '_nodes' → logprob: -12.875028610229492
    5. '_no' → logprob: -13.750028610229492
    6. 'Node' → logprob: -14.750028610229492
    7. '_n' → logprob: -14.750028610229492
    8. '_NODE' → logprob: -14.875028610229492
    9. 'ode' → logprob: -15.000028610229492
    10. '_Node' → logprob: -15.750028610229492

Token 241: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0003280751989223063
    2. '_node' → logprob: -8.250328063964844
    3. 'no' → logprob: -9.750328063964844
    4. 'No' → logprob: -12.250328063964844
    5. 'node' → logprob: -13.500328063964844
    6. '```' → logprob: -13.875328063964844
    7. '노' → logprob: -15.125328063964844
    8. '__' → logprob: -15.500328063964844
    9. '_NO' → logprob: -15.875328063964844
    10. '   ' → logprob: -16.000328063964844

Token 242: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01913081854581833
    2. ' if' → logprob: -4.394130706787109
    3. '        
' → logprob: -5.894130706787109
    4. 'if' → logprob: -5.894130706787109
    5. ',' → logprob: -8.14413070678711
    6. '
' → logprob: -8.51913070678711
    7. '   ' → logprob: -9.26913070678711
    8. ' 
' → logprob: -9.26913070678711
    9. '  
' → logprob: -9.26913070678711
    10. '        ' → logprob: -9.39413070678711

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021278424188494682
    2. ' if' → logprob: -4.146278381347656
    3. 'if' → logprob: -5.396278381347656
    4. '        
' → logprob: -7.646278381347656
    5. '   ' → logprob: -9.646278381347656
    6. '  
' → logprob: -10.771278381347656
    7. ' ' → logprob: -11.146278381347656
    8. '        ' → logprob: -11.271278381347656
    9. ',' → logprob: -11.271278381347656
    10. '
' → logprob: -11.521278381347656

Token 244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.35151124000549316
    2. 'cur' → logprob: -1.2265112400054932
    3. '       ' → logprob: -5.976511001586914
    4. 'node' → logprob: -8.726511001586914
    5. ' if' → logprob: -9.226511001586914
    6. 'in' → logprob: -9.476511001586914
    7. 'key' → logprob: -9.601511001586914
    8. '   ' → logprob: -9.851511001586914
    9. 'current' → logprob: -10.351511001586914
    10. '        
' → logprob: -11.601511001586914

Token 245: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3715905249118805
    2. ' in' → logprob: -1.246590495109558
    3. 'nodes' → logprob: -4.496590614318848
    4. ' nodes' → logprob: -4.621590614318848
    5. '   ' → logprob: -6.371590614318848
    6. ' ' → logprob: -9.871590614318848
    7. '	in' → logprob: -10.621590614318848
    8. 'int' → logprob: -10.809090614318848
    9. '    ' → logprob: -11.309090614318848
    10. '(nodes' → logprob: -11.559090614318848

Token 246: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005759088089689612
    2. 'node' → logprob: -8.12557601928711
    3. '_nodes' → logprob: -9.00057601928711
    4. 'nodes' → logprob: -9.00057601928711
    5. '_key' → logprob: -12.00057601928711
    6. '_' → logprob: -12.37557601928711
    7. '   ' → logprob: -12.37557601928711
    8. 'Node' → logprob: -12.75057601928711
    9. ' node' → logprob: -12.75057601928711
    10. ' nodes' → logprob: -12.87557601928711

Token 247: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -7.3458322731312364e-06
    2. '.' → logprob: -11.875007629394531
    3. ' .' → logprob: -15.250007629394531
    4. 'key' → logprob: -17.62500762939453
    5. ' key' → logprob: -18.62500762939453
    6. ').' → logprob: -18.75000762939453
    7. '.Key' → logprob: -19.50000762939453
    8. '[key' → logprob: -19.75000762939453
    9. '.code' → logprob: -20.00000762939453
    10. '.value' → logprob: -20.00000762939453

Token 248: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02063812129199505
    2. '<' → logprob: -3.8956382274627686
    3. ' ' → logprob: -10.145638465881348
    4. ' ==' → logprob: -10.770638465881348
    5. ' >' → logprob: -11.145638465881348
    6. '[' → logprob: -11.770638465881348
    7. ' <=' → logprob: -13.395638465881348
    8. '>' → logprob: -13.520638465881348
    9. '   ' → logprob: -13.520638465881348
    10. '==' → logprob: -13.645638465881348

Token 249: ' cur' (ID: 4396)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.6327682733535767
    2. 'nodes' → logprob: -0.7577682733535767
    3. '	nodes' → logprob: -9.632768630981445
    4. '(nodes' → logprob: -9.757768630981445
    5. '.nodes' → logprob: -11.257768630981445
    6. '   ' → logprob: -11.382768630981445
    7. 'node' → logprob: -12.257768630981445
    8. '_nodes' → logprob: -12.632768630981445
    9. ' ' → logprob: -13.007768630981445
    10. '
' → logprob: -13.507768630981445

Token 250: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.001099968678317964
    2. '_nodes' → logprob: -7.376100063323975
    3. '_' → logprob: -8.501099586486816
    4. 'node' → logprob: -8.876099586486816
    5. '_key' → logprob: -10.376099586486816
    6. 'nodes' → logprob: -10.626099586486816
    7. '   ' → logprob: -11.001099586486816
    8. 'Node' → logprob: -11.376099586486816
    9. '_NODE' → logprob: -12.126099586486816
    10. '_n' → logprob: -12.251099586486816

Token 251: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.05665123462677002
    2. '_node' → logprob: -3.9316511154174805
    3. 'nodes' → logprob: -4.5566511154174805
    4. 's' → logprob: -5.1816511154174805
    5. 'no' → logprob: -5.3066511154174805
    6. '.nodes' → logprob: -5.4316511154174805
    7. '.key' → logprob: -6.3066511154174805
    8. '_nodes' → logprob: -6.4316511154174805
    9. 'node' → logprob: -6.8066511154174805
    10. '.no' → logprob: -6.9316511154174805

Token 252: ':
' (ID: 734)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.0006405997555702925
    2. '.' → logprob: -7.500640392303467
    3. ' .' → logprob: -9.875640869140625
    4. '   ' → logprob: -11.750640869140625
    5. ').' → logprob: -12.250640869140625
    6. 'key' → logprob: -12.500640869140625
    7. '[key' → logprob: -13.125640869140625
    8. '.keys' → logprob: -13.125640869140625
    9. ':key' → logprob: -13.500640869140625
    10. '}.' → logprob: -13.625640869140625

Token 253: '           ' (ID: 352)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.026177555322647095
    2. '.' → logprob: -3.7761776447296143
    3. ' .' → logprob: -6.776177406311035
    4. 'key' → logprob: -7.651177406311035
    5. ':' → logprob: -8.276177406311035
    6. '.keys' → logprob: -8.276177406311035
    7. ' key' → logprob: -8.776177406311035
    8. '   ' → logprob: -9.276177406311035
    9. '.cur' → logprob: -9.276177406311035
    10. 's' → logprob: -9.651177406311035

Token 254: ' cur' (ID: 4396)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.827936589717865
    2. ' nodes' → logprob: -1.0779366493225098
    3. 'cur' (adapté à ' cur') → logprob: -1.7029366493225098
    4. ' cur' → logprob: -3.9529366493225098
    5. '.nodes' → logprob: -4.32793664932251
    6. ' in' → logprob: -6.45293664932251
    7. 'key' → logprob: -6.70293664932251
    8. 'in' → logprob: -6.70293664932251
    9. ' key' → logprob: -6.82793664932251
    10. '.cur' → logprob: -7.70293664932251

Token 255: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0019154301844537258
    2. '._' → logprob: -7.001915454864502
    3. '_no' → logprob: -7.626915454864502
    4. '.key' → logprob: -8.626914978027344
    5. '.' → logprob: -8.751914978027344
    6. '.node' → logprob: -9.501914978027344
    7. '_key' → logprob: -10.251914978027344
    8. 'node' → logprob: -10.751914978027344
    9. '_nodes' → logprob: -11.376914978027344
    10. '_.' → logprob: -11.876914978027344

Token 256: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0022812189999967813
    2. '._' → logprob: -6.502281188964844
    3. '.key' → logprob: -8.127281188964844
    4. 'No' → logprob: -8.627281188964844
    5. '.no' → logprob: -9.127281188964844
    6. '.' → logprob: -9.627281188964844
    7. '=' → logprob: -11.252281188964844
    8. 'no' → logprob: -11.377281188964844
    9. '_key' → logprob: -11.627281188964844
    10. '_NO' → logprob: -11.627281188964844

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11290493607521057
    2. '=' → logprob: -2.2379050254821777
    3. ' ' → logprob: -10.61290454864502
    4. '.key' → logprob: -11.36290454864502
    5. '.' → logprob: -11.61290454864502
    6. '.left' → logprob: -11.73790454864502
    7. 'key' → logprob: -12.11290454864502
    8. '_key' → logprob: -12.23790454864502
    9. ',' → logprob: -12.61290454864502
    10. '.=' → logprob: -13.11290454864502

Token 258: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.004570034798234701
    2. ' nodes' → logprob: -5.629570007324219
    3. 'cur' → logprob: -7.004570007324219
    4. 'in' → logprob: -10.879570007324219
    5. '	nodes' → logprob: -11.754570007324219
    6. '(nodes' → logprob: -11.754570007324219
    7. '   ' → logprob: -12.004570007324219
    8. 'root' → logprob: -12.379570007324219
    9. 'node' → logprob: -12.504570007324219
    10. 'None' → logprob: -12.629570007324219

Token 259: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -7.743758760625497e-05
    2. '[parent' → logprob: -9.500077247619629
    3. 'cur' → logprob: -13.750077247619629
    4. '[' → logprob: -14.375077247619629
    5. '[root' → logprob: -14.625077247619629
    6. '[current' → logprob: -16.250078201293945
    7. '[node' → logprob: -16.625078201293945
    8. '[curr' → logprob: -16.750078201293945
    9. '```' → logprob: -17.000078201293945
    10. ' [' → logprob: -17.250078201293945

Token 260: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.5928495486150496e-05
    2. 'node' → logprob: -11.250016212463379
    3. '_key' → logprob: -13.875016212463379
    4. 'cur' → logprob: -14.875016212463379
    5. '_nodes' → logprob: -15.000016212463379
    6. '[parent' → logprob: -15.375016212463379
    7. '_parent' → logprob: -15.875016212463379
    8. 'Node' → logprob: -16.125015258789062
    9. '[cur' → logprob: -16.125015258789062
    10. 'parent' → logprob: -16.250015258789062

Token 261: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.004528384655714035
    2. '_node' → logprob: -5.504528522491455
    3. 'no' → logprob: -8.254528045654297
    4. 'parent' → logprob: -9.504528045654297
    5. '_parent' → logprob: -10.379528045654297
    6. '[parent' → logprob: -10.754528045654297
    7. 'No' → logprob: -10.879528045654297
    8. '_key' → logprob: -11.254528045654297
    9. 'cur' → logprob: -11.879528045654297
    10. ']' → logprob: -12.129528045654297

Token 262: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0016401888569816947
    2. '.left' → logprob: -6.501640319824219
    3. '.' → logprob: -9.251640319824219
    4. ']' → logprob: -11.501640319824219
    5. '.key' → logprob: -11.501640319824219
    6. ' ].' → logprob: -11.626640319824219
    7. '.right' → logprob: -11.876640319824219
    8. '[' → logprob: -13.126640319824219
    9. '}.' → logprob: -14.001640319824219
    10. ' .' → logprob: -14.001640319824219

Token 263: 'left' (ID: 4530)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.07889220863580704
    2. 'left' → logprob: -2.578892230987549
    3. ' key' → logprob: -13.45389175415039
    4. '.key' → logprob: -14.82889175415039
    5. '.left' → logprob: -15.95389175415039
    6. 'right' → logprob: -16.07889175415039
    7. '	key' → logprob: -16.07889175415039
    8. '_key' → logprob: -16.45389175415039
    9. ' left' → logprob: -16.45389175415039
    10. '(key' → logprob: -17.07889175415039

Token 264: '
' (ID: 198)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.030096296221017838
    2. '<|end|>' → logprob: -3.6550962924957275
    3. 'key' → logprob: -6.280096530914307
    4. ' key' → logprob: -7.655096530914307
    5. '<|end|>' → logprob: -8.155096054077148
    6. '
' → logprob: -8.155096054077148
    7. '_key' → logprob: -8.280096054077148
    8. '   ' → logprob: -8.780096054077148
    9. 'else' → logprob: -9.030096054077148
    10. '.' → logprob: -9.655096054077148

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006368475034832954
    2. '
' → logprob: -5.756368637084961
    3. ' else' → logprob: -6.756368637084961
    4. 'else' → logprob: -7.131368637084961
    5. '   ' → logprob: -8.381368637084961
    6. '           ' → logprob: -9.006368637084961
    7. '  
' → logprob: -9.131368637084961
    8. '<|end|>' → logprob: -9.131368637084961
    9. 'elif' → logprob: -9.381368637084961
    10. ' 
' → logprob: -9.756368637084961

Token 266: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.978735625743866
    2. ' else' → logprob: -0.978735625743866
    3. 'else' (adapté à ' else') → logprob: -1.7287356853485107
    4. '
' → logprob: -3.8537356853485107
    5. '.key' → logprob: -4.103735446929932
    6. '   ' → logprob: -4.478735446929932
    7. 'key' → logprob: -5.478735446929932
    8. ' key' → logprob: -6.228735446929932
    9. ' elif' → logprob: -6.478735446929932
    10. ' ' → logprob: -6.478735446929932

Token 267: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16358894109725952
    2. ':' → logprob: -1.9135890007019043
    3. ' :
' → logprob: -6.038589000701904
    4. ' :' → logprob: -7.413589000701904
    5. '           ' → logprob: -8.288588523864746
    6. '       ' → logprob: -9.663588523864746
    7. '        ' → logprob: -11.163588523864746
    8. '   ' → logprob: -11.288588523864746
    9. ':
' → logprob: -12.038588523864746
    10. '[cur' → logprob: -12.163588523864746

Token 268: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08924173563718796
    2. 'cur' → logprob: -2.8392417430877686
    3. ' cur' → logprob: -3.9642417430877686
    4. '       ' → logprob: -4.9642415046691895
    5. '        ' → logprob: -8.464241981506348
    6. '   ' → logprob: -8.589241981506348
    7. '          ' → logprob: -9.089241981506348
    8. ' ' → logprob: -9.089241981506348
    9. '               ' → logprob: -9.964241981506348
    10. '	cur' → logprob: -9.964241981506348

Token 269: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.10124830156564713
    2. ' cur' → logprob: -2.351248264312744
    3. '           ' → logprob: -7.476248264312744
    4. '       ' → logprob: -8.601248741149902
    5. '   ' → logprob: -8.726248741149902
    6. '	cur' → logprob: -10.726248741149902
    7. '    ' → logprob: -11.101248741149902
    8. '               ' → logprob: -11.101248741149902
    9. 'in' → logprob: -11.226248741149902
    10. ' ' → logprob: -11.351248741149902

Token 270: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.15441757265944e-05
    2. 'node' → logprob: -10.875031471252441
    3. '_key' → logprob: -11.750031471252441
    4. '_' → logprob: -13.875031471252441
    5. '   ' → logprob: -14.250031471252441
    6. '_nodes' → logprob: -14.500031471252441
    7. 'Node' → logprob: -14.750031471252441
    8. '._' → logprob: -15.250031471252441
    9. '_NODE' → logprob: -15.375031471252441
    10. '           ' → logprob: -15.500031471252441

Token 271: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.0087516784551553e-05
    2. 'No' → logprob: -12.00001049041748
    3. '._' → logprob: -13.37501049041748
    4. 'no' → logprob: -13.62501049041748
    5. '_not' → logprob: -15.25001049041748
    6. '_No' → logprob: -15.37501049041748
    7. 'key' → logprob: -16.125009536743164
    8. '.key' → logprob: -16.250009536743164
    9. '_NO' → logprob: -16.250009536743164
    10. '_node' → logprob: -16.375009536743164

Token 272: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020839422941208
    2. '=' → logprob: -2.350208282470703
    3. ' ' → logprob: -13.600208282470703
    4. '   ' → logprob: -15.475208282470703
    5. '    ' → logprob: -15.850208282470703
    6. '  ' → logprob: -17.100208282470703
    7. ' =
' → logprob: -17.350208282470703
    8. ' ' → logprob: -17.600208282470703
    9. ')' → logprob: -17.975208282470703
    10. '	' → logprob: -18.725208282470703

Token 273: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.12693998217582703
    2. ' nodes' → logprob: -2.1269400119781494
    3. '	nodes' → logprob: -12.25193977355957
    4. '   ' → logprob: -12.50193977355957
    5. '(nodes' → logprob: -13.25193977355957
    6. ' ' → logprob: -14.25193977355957
    7. '       ' → logprob: -15.50193977355957
    8. '           ' → logprob: -15.62693977355957
    9. '  ' → logprob: -15.62693977355957
    10. '.nodes' → logprob: -16.00193977355957

Token 274: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.003203019965440035
    2. '[parent' → logprob: -6.00320291519165
    3. '[in' → logprob: -7.25320291519165
    4. '[' → logprob: -11.128203392028809
    5. '[root' → logprob: -13.503203392028809
    6. '[curr' → logprob: -14.128203392028809
    7. '[node' → logprob: -14.128203392028809
    8. '[current' → logprob: -14.378203392028809
    9. 'cur' → logprob: -14.503203392028809
    10. ' [' → logprob: -16.503202438354492

Token 275: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.6789137084269896e-05
    2. '_no' → logprob: -11.12503719329834
    3. 'node' → logprob: -11.62503719329834
    4. '_key' → logprob: -12.37503719329834
    5. '[cur' → logprob: -13.00003719329834
    6. 'Node' → logprob: -13.12503719329834
    7. '[node' → logprob: -14.50003719329834
    8. '_' → logprob: -14.75003719329834
    9. '_parent' → logprob: -14.87503719329834
    10. '[parent' → logprob: -15.12503719329834

Token 276: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.002678391057997942
    2. 'cur' → logprob: -6.877678394317627
    3. '_node' → logprob: -7.252678394317627
    4. 'no' → logprob: -7.377678394317627
    5. 'No' → logprob: -9.252677917480469
    6. '_cur' → logprob: -9.627677917480469
    7. 'node' → logprob: -9.877677917480469
    8. 'parent' → logprob: -10.752677917480469
    9. ')' → logprob: -11.127677917480469
    10. '[cur' → logprob: -11.377677917480469

Token 277: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00017767686222214252
    2. '.right' → logprob: -9.250177383422852
    3. '.' → logprob: -9.750177383422852
    4. '}.' → logprob: -11.250177383422852
    5. ' ].' → logprob: -12.750177383422852
    6. '   ' → logprob: -13.125177383422852
    7. ').' → logprob: -13.250177383422852
    8. ']' → logprob: -13.750177383422852
    9. '.left' → logprob: -13.875177383422852
    10. '.key' → logprob: -14.875177383422852

Token 278: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.7432603272027336e-06
    2. ' right' → logprob: -13.750001907348633
    3. 'key' → logprob: -15.500001907348633
    4. '.right' → logprob: -15.500001907348633
    5. '	right' → logprob: -16.125001907348633
    6. '[right' → logprob: -17.000001907348633
    7. 'rig' → logprob: -17.375001907348633
    8. '   ' → logprob: -18.125001907348633
    9. '(right' → logprob: -18.875001907348633
    10. '_right' → logprob: -19.000001907348633

Token 279: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4598574638366699
    2. '       ' → logprob: -1.70985746383667
    3. '<|end|>' → logprob: -2.08485746383667
    4. '<|end|>' → logprob: -4.20985746383667
    5. '
' → logprob: -4.45985746383667
    6. ')' → logprob: -4.70985746383667
    7. ' ' → logprob: -4.95985746383667
    8. '    ' → logprob: -5.20985746383667
    9. '    
' → logprob: -5.70985746383667
    10. '[' → logprob: -6.20985746383667

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02270793356001377
    2. ')' → logprob: -4.772707939147949
    3. '\n' → logprob: -5.772707939147949
    4. '    
' → logprob: -5.897707939147949
    5. '       ' → logprob: -6.522707939147949
    6. ':' → logprob: -7.022707939147949
    7. ' 
' → logprob: -7.147707939147949
    8. '[' → logprob: -7.522707939147949
    9. '\' → logprob: -7.647707939147949
    10. '.' → logprob: -7.772707939147949

Token 281: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' (adapté à ' in') → logprob: -0.3158991038799286
    2. ' in' → logprob: -1.565899133682251
    3. '   ' → logprob: -3.690899133682251
    4. 'if' → logprob: -4.565898895263672
    5. ' if' → logprob: -4.565898895263672
    6. 'nodes' → logprob: -5.440898895263672
    7. ' key' → logprob: -5.565898895263672
    8. ' nodes' → logprob: -5.940898895263672
    9. 'key' → logprob: -6.440898895263672
    10. '
' → logprob: -7.440898895263672

Token 282: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.165027217415627e-05
    2. '_' → logprob: -11.375021934509277
    3. '_nodes' → logprob: -12.375021934509277
    4. ' _' → logprob: -13.000021934509277
    5. '_key' → logprob: -14.000021934509277
    6. '._' → logprob: -14.375021934509277
    7. '_Node' → logprob: -14.500021934509277
    8. 'Node' → logprob: -15.000021934509277
    9. 'node' → logprob: -15.250021934509277
    10. '_n' → logprob: -15.500021934509277

Token 283: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.10522794723510742
    2. '.key' → logprob: -2.4802279472351074
    3. '_key' → logprob: -5.105227947235107
    4. '_no' → logprob: -5.605227947235107
    5. 'parent' → logprob: -6.605227947235107
    6. '.' → logprob: -6.605227947235107
    7. '_parent' → logprob: -7.105227947235107
    8. 'key' → logprob: -7.230227947235107
    9. '=' → logprob: -7.480227947235107
    10. ' =' → logprob: -7.605227947235107

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132668435573578
    2. ' =' → logprob: -1.3132668733596802
    3. ' ' → logprob: -13.43826675415039
    4. '=node' → logprob: -13.56326675415039
    5. ')' → logprob: -14.06326675415039
    6. '<|end|>' → logprob: -14.81326675415039
    7. ',' → logprob: -15.31326675415039
    8. '=
' → logprob: -15.93826675415039
    9. '   ' → logprob: -16.18826675415039
    10. '=None' → logprob: -16.31326675415039

Token 285: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00010127831774298102
    2. ' parent' → logprob: -9.375101089477539
    3. 'nodes' → logprob: -11.125101089477539
    4. '	parent' → logprob: -14.750101089477539
    5. '   ' → logprob: -14.875101089477539
    6. '[parent' → logprob: -15.375101089477539
    7. 'node' → logprob: -15.875101089477539
    8. 'parents' → logprob: -15.875101089477539
    9. '(parent' → logprob: -16.12510108947754
    10. 'paren' → logprob: -16.50010108947754

Token 286: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.625000953674316
    3. ' _' → logprob: -15.375000953674316
    4. '_parent' → logprob: -17.125001907348633
    5. '_nodes' → logprob: -17.250001907348633
    6. 'node' → logprob: -17.250001907348633
    7. '_NODE' → logprob: -17.250001907348633
    8. 'Node' → logprob: -17.500001907348633
    9. '_user' → logprob: -17.500001907348633
    10. '_n' → logprob: -17.875001907348633

Token 287: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0003389190824236721
    2. '_node' → logprob: -8.375338554382324
    3. 'no' → logprob: -9.250338554382324
    4. 'No' → logprob: -12.250338554382324
    5. 'node' → logprob: -13.000338554382324
    6. ' _' → logprob: -13.625338554382324
    7. '._' → logprob: -13.750338554382324
    8. '```' → logprob: -15.000338554382324
    9. '   ' → logprob: -15.125338554382324
    10. '
' → logprob: -15.125338554382324

Token 288: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7183297872543335
    2. '   ' → logprob: -0.7183297872543335
    3. '<|end|>' → logprob: -4.218329906463623
    4. '    
' → logprob: -5.593329906463623
    5. ' if' → logprob: -6.218329906463623
    6. '  
' → logprob: -6.843329906463623
    7. ' 
' → logprob: -7.218329906463623
    8. 'nodes' → logprob: -7.968329906463623
    9. ')' → logprob: -8.093329429626465
    10. ' ' → logprob: -8.343329429626465

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01750318892300129
    2. ' if' → logprob: -5.017503261566162
    3. 'if' → logprob: -5.517503261566162
    4. 'nodes' → logprob: -5.517503261566162
    5. 'in' → logprob: -7.142503261566162
    6. ')' → logprob: -7.392503261566162
    7. ' nodes' → logprob: -8.017502784729004
    8. '    
' → logprob: -8.142502784729004
    9. '
' → logprob: -9.142502784729004
    10. '<|end|>' → logprob: -9.392502784729004

Token 290: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00564209371805191
    2. '   ' → logprob: -5.505641937255859
    3. ' if' → logprob: -7.130641937255859
    4. 'nodes' → logprob: -7.255641937255859
    5. 'in' → logprob: -10.00564193725586
    6. '
' → logprob: -12.63064193725586
    7. 'key' → logprob: -13.38064193725586
    8. 'node' → logprob: -13.50564193725586
    9. ' nodes' → logprob: -13.75564193725586
    10. '       ' → logprob: -13.88064193725586

Token 291: ' root' (ID: 6577)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.011090032756328583
    2. ' parent' → logprob: -4.51108980178833
    3. 'root' → logprob: -10.761090278625488
    4. '(parent' → logprob: -11.136090278625488
    5. '   ' → logprob: -12.761090278625488
    6. 'in' → logprob: -13.761090278625488
    7. '	parent' → logprob: -13.886090278625488
    8. ' root' → logprob: -14.636090278625488
    9. '  ' → logprob: -15.011090278625488
    10. ' ' → logprob: -15.511090278625488

Token 292: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.696889623621246e-06
    2. 'node' → logprob: -12.87500286102295
    3. '_nodes' → logprob: -18.500001907348633
    4. 'Node' → logprob: -18.500001907348633
    5. '_NODE' → logprob: -18.875001907348633
    6. ' node' → logprob: -19.000001907348633
    7. '_' → logprob: -19.250001907348633
    8. '_no' → logprob: -19.750001907348633
    9. '_Node' → logprob: -20.625001907348633
    10. '
' → logprob: -21.625001907348633

Token 293: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -4.11996734328568e-05
    2. 'no' → logprob: -10.500041007995605
    3. 'No' → logprob: -11.250041007995605
    4. '==' → logprob: -15.500041007995605
    5. '_none' → logprob: -16.000041961669922
    6. '_' → logprob: -17.000041961669922
    7. '   ' → logprob: -17.125041961669922
    8. 'None' → logprob: -17.125041961669922
    9. '_No' → logprob: -17.500041961669922
    10. ' no' → logprob: -18.000041961669922

Token 294: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.386886328458786
    2. 'is' → logprob: -1.1368863582611084
    3. '==' → logprob: -11.136886596679688
    4. '	is' → logprob: -15.136886596679688
    5. ' ' → logprob: -15.261886596679688
    6. ' ==' → logprob: -16.511886596679688
    7. 'None' → logprob: -16.636886596679688
    8. ')' → logprob: -17.136886596679688
    9. 'in' → logprob: -17.636886596679688
    10. ' None' → logprob: -17.886886596679688

Token 295: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0009119403548538685
    2. ' None' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.500911712646484
    4. '  ' → logprob: -15.875911712646484
    5. ' ' → logprob: -16.500911712646484
    6. '_None' → logprob: -17.625911712646484
    7. '    ' → logprob: -18.000911712646484
    8. 'none' → logprob: -18.875911712646484
    9. 'No' → logprob: -19.000911712646484
    10. 'not' → logprob: -19.375911712646484

Token 296: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10129860043525696
    2. ':
' → logprob: -2.3512985706329346
    3. '       ' → logprob: -7.101298809051514
    4. '=' → logprob: -9.226298332214355
    5. '   ' → logprob: -9.351298332214355
    6. ' =' → logprob: -9.726298332214355
    7. ' :' → logprob: -11.601298332214355
    8. ':

' → logprob: -12.851298332214355
    9. ' :
' → logprob: -12.851298332214355
    10. ':
' → logprob: -12.976298332214355

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0682772547006607
    2. 'root' → logprob: -3.193277359008789
    3. ' root' → logprob: -3.693277359008789
    4. '   ' → logprob: -10.318277359008789
    5. '	root' → logprob: -10.818277359008789
    6. '[root' → logprob: -11.693277359008789
    7. '_root' → logprob: -13.068277359008789
    8. ' roots' → logprob: -13.443277359008789
    9. '      ' → logprob: -13.568277359008789
    10. '(root' → logprob: -13.693277359008789

Token 298: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.003046642756089568
    2. ' root' → logprob: -6.12804651260376
    3. '       ' → logprob: -7.25304651260376
    4. '   ' → logprob: -9.128046989440918
    5. 'in' → logprob: -10.128046989440918
    6. '	root' → logprob: -13.003046989440918
    7. 'roots' → logprob: -14.128046989440918
    8. '           ' → logprob: -14.878046989440918
    9. ' in' → logprob: -15.003046989440918
    10. '
' → logprob: -15.878046989440918

Token 299: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.896309739408025e-07
    2. 'node' → logprob: -14.500000953674316
    3. '_nodes' → logprob: -15.875000953674316
    4. '_NODE' → logprob: -17.125
    5. 'Node' → logprob: -17.375
    6. '_' → logprob: -17.625
    7. '_root' → logprob: -18.25
    8. '
' → logprob: -18.625
    9. ' node' → logprob: -19.0
    10. '_Node' → logprob: -19.125

Token 300: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -8.387458365177736e-05
    2. 'no' → logprob: -9.625083923339844
    3. 'No' → logprob: -11.000083923339844
    4. '=' → logprob: -14.500083923339844
    5. '_none' → logprob: -16.375083923339844
    6. '_n' → logprob: -16.875083923339844
    7. '_node' → logprob: -16.875083923339844
    8. ' =' → logprob: -17.000083923339844
    9. '_No' → logprob: -17.000083923339844
    10. '	no' → logprob: -17.000083923339844

Token 301: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192990899086
    2. '=' → logprob: -1.5019298791885376
    3. '=in' → logprob: -14.376930236816406
    4. ' ' → logprob: -15.751930236816406
    5. '＝' → logprob: -16.876930236816406
    6. '   ' → logprob: -18.626930236816406
    7. '=}' → logprob: -19.501930236816406
    8. ',' → logprob: -19.626930236816406
    9. '=index' → logprob: -19.626930236816406
    10. ' =
' → logprob: -20.126930236816406

Token 302: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.010045044124126434
    2. ' in' → logprob: -5.010045051574707
    3. 'id' → logprob: -6.010045051574707
    4. 'list' → logprob: -8.260045051574707
    5. 'nodes' → logprob: -8.760045051574707
    6. 'key' → logprob: -9.135045051574707
    7. '   ' → logprob: -9.385045051574707
    8. '0' → logprob: -9.510045051574707
    9. ' id' → logprob: -10.510045051574707
    10. '	in' → logprob: -11.135045051574707

Token 303: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0001005630983854644
    2. 'node' → logprob: -9.250100135803223
    3. 'Node' → logprob: -13.125100135803223
    4. 'ode' → logprob: -14.250100135803223
    5. '_' → logprob: -14.375100135803223
    6. '_key' → logprob: -14.875100135803223
    7. '_nodes' → logprob: -15.500100135803223
    8. ' node' → logprob: -16.00010108947754
    9. '_NODE' → logprob: -16.12510108947754
    10. '   ' → logprob: -16.37510108947754

Token 304: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00018887832993641496
    2. 'key' → logprob: -8.625188827514648
    3. '.' → logprob: -11.750188827514648
    4. ' key' → logprob: -14.375188827514648
    5. ' .' → logprob: -15.000188827514648
    6. '
' → logprob: -15.250188827514648
    7. '.keys' → logprob: -16.37518882751465
    8. '_key' → logprob: -16.87518882751465
    9. '[key' → logprob: -17.00018882751465
    10. ',key' → logprob: -17.25018882751465

Token 305: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39391493797302246
    2. '   ' → logprob: -1.1439149379730225
    3. 'nodes' → logprob: -5.018915176391602
    4. ' nodes' → logprob: -8.393915176391602
    5. 'else' → logprob: -9.518915176391602
    6. '	nodes' → logprob: -10.143915176391602
    7. 'elif' → logprob: -10.518915176391602
    8. ',' → logprob: -11.893915176391602
    9. 'return' → logprob: -12.143915176391602
    10. '(nodes' → logprob: -12.143915176391602

Token 306: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5700513124465942
    2. '   ' → logprob: -1.1950513124465942
    3. 'nodes' → logprob: -2.0700511932373047
    4. 'return' → logprob: -5.945051193237305
    5. 'else' → logprob: -6.570051193237305
    6. ' nodes' → logprob: -7.195051193237305
    7. 'elif' → logprob: -7.320051193237305
    8. '	nodes' → logprob: -10.320051193237305
    9. '           ' → logprob: -11.070051193237305
    10. '```' → logprob: -11.070051193237305

Token 307: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32220345735549927
    2. 'elif' (adapté à ' elif') → logprob: -1.4472033977508545
    3. ' elif' → logprob: -3.5722033977508545
    4. 'else' → logprob: -4.572203636169434
    5. ' else' → logprob: -6.447203636169434
    6. '       ' → logprob: -8.947203636169434
    7. '	elif' → logprob: -11.197203636169434
    8. ' ' → logprob: -11.322203636169434
    9. '  ' → logprob: -11.447203636169434
    10. '    
' → logprob: -11.572203636169434

Token 308: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.001988471020013094
    2. ' in' → logprob: -6.251988410949707
    3. 'parent' → logprob: -10.251988410949707
    4. '   ' → logprob: -10.876988410949707
    5. ' ' → logprob: -13.251988410949707
    6. '  ' → logprob: -13.501988410949707
    7. '	in' → logprob: -13.626988410949707
    8. ' parent' → logprob: -14.751988410949707
    9. '
' → logprob: -15.001988410949707
    10. 'nodes' → logprob: -15.751988410949707

Token 309: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.4272752852994017e-05
    2. 'node' → logprob: -10.87502384185791
    3. 'ode' → logprob: -12.87502384185791
    4. 'Node' → logprob: -14.12502384185791
    5. 'in' → logprob: -14.50002384185791
    6. '_nodes' → logprob: -14.75002384185791
    7. 'odes' → logprob: -15.62502384185791
    8. '_key' → logprob: -15.75002384185791
    9. 'nodes' → logprob: -16.000024795532227
    10. 'n' → logprob: -16.500024795532227

Token 310: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00010008628305513412
    2. '.' → logprob: -9.625100135803223
    3. '.parent' → logprob: -10.375100135803223
    4. ' .' → logprob: -13.250100135803223
    5. 'key' → logprob: -14.375100135803223
    6. '<' → logprob: -15.000100135803223
    7. '.<' → logprob: -17.125099182128906
    8. ' <' → logprob: -17.375099182128906
    9. ' key' → logprob: -17.625099182128906
    10. '[key' → logprob: -18.750099182128906

Token 311: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5231598615646362
    2. ' <' → logprob: -0.8981598615646362
    3. '>' → logprob: -11.023159980773926
    4. ' ' → logprob: -11.398159980773926
    5. ' >' → logprob: -12.023159980773926
    6. 'in' → logprob: -15.023159980773926
    7. ')' → logprob: -15.273159980773926
    8. '<class' → logprob: -15.273159980773926
    9. '   ' → logprob: -15.960659980773926
    10. ' ' → logprob: -16.02315902709961

Token 312: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0019341122824698687
    2. ' parent' → logprob: -6.251934051513672
    3. '   ' → logprob: -13.501934051513672
    4. 'nodes' → logprob: -13.501934051513672
    5. 'root' → logprob: -13.876934051513672
    6. '	parent' → logprob: -14.001934051513672
    7. '[parent' → logprob: -15.126934051513672
    8. '(parent' → logprob: -15.501934051513672
    9. '.parent' → logprob: -16.001934051513672
    10. 'node' → logprob: -16.376934051513672

Token 313: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.759734732331708e-05
    2. 'node' → logprob: -11.000017166137695
    3. 'Node' → logprob: -14.375017166137695
    4. '_nodes' → logprob: -16.125017166137695
    5. '.node' → logprob: -16.500017166137695
    6. '_NODE' → logprob: -16.750017166137695
    7. '_key' → logprob: -17.625017166137695
    8. '._' → logprob: -17.875017166137695
    9. ' node' → logprob: -18.000017166137695
    10. '```' → logprob: -18.000017166137695

Token 314: '_no' (ID: 13575)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00019710339256562293
    2. 'node' → logprob: -8.625197410583496
    3. '_no' → logprob: -11.500197410583496
    4. 'Node' → logprob: -13.125197410583496
    5. '.node' → logprob: -13.750197410583496
    6. '
' → logprob: -13.750197410583496
    7. '_key' → logprob: -14.250197410583496
    8. '._' → logprob: -14.375197410583496
    9. 'no' → logprob: -14.625197410583496
    10. '

' → logprob: -15.375197410583496

Token 315: ':
' (ID: 734)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.7997909188270569
    2. ':
' → logprob: -1.174790859222412
    3. ':' → logprob: -1.424790859222412
    4. '   ' → logprob: -7.924790859222412
    5. 'key' → logprob: -8.67479133605957
    6. ':key' → logprob: -8.92479133605957
    7. '.' → logprob: -9.04979133605957
    8. ':
' → logprob: -9.17479133605957
    9. ' :' → logprob: -9.42479133605957
    10. ' :
' → logprob: -9.92479133605957

Token 316: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0223525520414114
    2. 'nodes' → logprob: -4.397352695465088
    3. ' nodes' → logprob: -4.897352695465088
    4. ' if' → logprob: -7.897352695465088
    5. ':
' → logprob: -8.02235221862793
    6. 'if' → logprob: -8.39735221862793
    7. '   ' → logprob: -8.39735221862793
    8. ':' → logprob: -8.52235221862793
    9. '):
' → logprob: -8.77235221862793
    10. '
' → logprob: -8.89735221862793

Token 317: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.08447855710983276
    2. ' nodes' → logprob: -2.5844786167144775
    3. '       ' → logprob: -5.709478378295898
    4. '   ' → logprob: -6.584478378295898
    5. '	nodes' → logprob: -7.959478378295898
    6. '           ' → logprob: -7.959478378295898
    7. '
' → logprob: -9.959478378295898
    8. '.nodes' → logprob: -10.084478378295898
    9. '(nodes' → logprob: -10.334478378295898
    10. ' ' → logprob: -11.584478378295898

Token 318: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. 'parent' → logprob: -15.250000953674316
    4. ' [' → logprob: -17.875001907348633
    5. '[node' → logprob: -18.375001907348633
    6. '[root' → logprob: -18.500001907348633
    7. '[player' → logprob: -18.625001907348633
    8. ',parent' → logprob: -19.625001907348633
    9. '[in' → logprob: -19.750001907348633
    10. '	parent' → logprob: -20.000001907348633

Token 319: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0016580400988459587
    2. 'node' → logprob: -6.751657962799072
    3. '[parent' → logprob: -7.876657962799072
    4. 'Node' → logprob: -9.62665843963623
    5. 'parent' → logprob: -11.00165843963623
    6. '[node' → logprob: -12.00165843963623
    7. '_nodes' → logprob: -12.75165843963623
    8. '
' → logprob: -12.87665843963623
    9. ' node' → logprob: -13.00165843963623
    10. '   ' → logprob: -13.50165843963623

Token 320: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.022598501294851303
    2. '_node' → logprob: -4.2725982666015625
    3. 'no' → logprob: -5.0225982666015625
    4. 'parent' → logprob: -7.3975982666015625
    5. '.parent' → logprob: -7.7725982666015625
    6. 'No' → logprob: -8.522598266601562
    7. 'node' → logprob: -8.772598266601562
    8. '].' → logprob: -9.147598266601562
    9. '_parent' → logprob: -9.522598266601562
    10. '[parent' → logprob: -9.647598266601562

Token 321: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.005557693541049957
    2. '.left' → logprob: -5.255557537078857
    3. '.' → logprob: -8.255558013916016
    4. '.right' → logprob: -10.755558013916016
    5. '}.' → logprob: -11.005558013916016
    6. ']' → logprob: -11.255558013916016
    7. ' ].' → logprob: -11.880558013916016
    8. '   ' → logprob: -13.505558013916016
    9. 'left' → logprob: -13.630558013916016
    10. ').' → logprob: -13.880558013916016

Token 322: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.320199877838604e-07
    2. ' left' → logprob: -15.5
    3. '.left' → logprob: -15.875
    4. '	left' → logprob: -18.625
    5. 'key' → logprob: -19.875
    6. '_left' → logprob: -20.5
    7. '   ' → logprob: -20.625
    8. ' ' → logprob: -21.375
    9. 'lef' → logprob: -21.5
    10. '[left' → logprob: -21.625

Token 323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021486133337021
    2. '=' → logprob: -2.350214958190918
    3. '=in' → logprob: -11.725214958190918
    4. ' ' → logprob: -15.975214958190918
    5. ' =
' → logprob: -17.3502140045166
    6. '＝' → logprob: -17.8502140045166
    7. '=node' → logprob: -18.6002140045166
    8. ' ' → logprob: -19.2252140045166
    9. 'in' → logprob: -19.4752140045166
    10. ',' → logprob: -19.4752140045166

Token 324: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20141977071762085
    2. ' in' → logprob: -1.7014198303222656
    3. '   ' → logprob: -12.576419830322266
    4. '	in' → logprob: -13.576419830322266
    5. ' ' → logprob: -13.826419830322266
    6. '    ' → logprob: -15.326419830322266
    7. '  ' → logprob: -15.826419830322266
    8. '
' → logprob: -16.201419830322266
    9. '[in' → logprob: -16.451419830322266
    10. 'In' → logprob: -16.826419830322266

Token 325: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.6789137084269896e-05
    2. 'node' → logprob: -10.37503719329834
    3. 'ode' → logprob: -13.12503719329834
    4. '_key' → logprob: -13.62503719329834
    5. 'Node' → logprob: -14.00003719329834
    6. '_' → logprob: -14.00003719329834
    7. ' node' → logprob: -15.37503719329834
    8. '_NODE' → logprob: -16.250036239624023
    9. '-node' → logprob: -16.500036239624023
    10. 'in' → logprob: -16.750036239624023

Token 326: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -1.8550976164988242e-05
    2. 'key' → logprob: -11.250018119812012
    3. '.' → logprob: -12.375018119812012
    4. ' .' → logprob: -14.000018119812012
    5. ' key' → logprob: -15.000018119812012
    6. '_key' → logprob: -17.125019073486328
    7. '.left' → logprob: -17.625019073486328
    8. '.
' → logprob: -17.750019073486328
    9. '
' → logprob: -17.750019073486328
    10. '$key' → logprob: -18.000019073486328

Token 327: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003282048273831606
    2. ' else' → logprob: -6.003282070159912
    3. 'else' → logprob: -7.128282070159912
    4. '	else' → logprob: -12.628281593322754
    5. ' elif' → logprob: -15.753281593322754
    6. 'elif' → logprob: -15.878281593322754
    7. '       ' → logprob: -16.12828254699707
    8. '  ' → logprob: -16.50328254699707
    9. '
' → logprob: -16.75328254699707
    10. '    
' → logprob: -16.75328254699707

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031856747809797525
    2. ' else' → logprob: -6.003185749053955
    3. 'else' → logprob: -7.253185749053955
    4. '	else' → logprob: -13.753185272216797
    5. ' elif' → logprob: -14.878185272216797
    6. 'elif' → logprob: -15.503185272216797
    7. '  ' → logprob: -16.753185272216797
    8. '       ' → logprob: -16.878185272216797
    9. ',' → logprob: -17.378185272216797
    10. '    ' → logprob: -17.378185272216797

Token 329: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.40771105885505676
    2. '   ' → logprob: -1.4077110290527344
    3. 'else' (adapté à ' else') → logprob: -2.4077110290527344
    4. '	else' → logprob: -9.532711029052734
    5. ' elif' → logprob: -10.782711029052734
    6. 'elif' → logprob: -11.782711029052734
    7. '_else' → logprob: -13.532711029052734
    8. '  ' → logprob: -14.032711029052734
    9. ' ' → logprob: -14.282711029052734
    10. '    ' → logprob: -14.782711029052734

Token 330: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3204452693462372
    2. ':
' → logprob: -1.4454452991485596
    3. ':' → logprob: -3.3204452991485596
    4. ' :
' → logprob: -6.4454450607299805
    5. '   ' → logprob: -7.3204450607299805
    6. ' :' → logprob: -9.32044506072998
    7. '    ' → logprob: -11.32044506072998
    8. '           ' → logprob: -11.57044506072998
    9. '      ' → logprob: -11.82044506072998
    10. ':
' → logprob: -11.94544506072998

Token 331: '       ' (ID: 309)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.020901529118418694
    2. 'nodes' → logprob: -4.520901679992676
    3. '       ' → logprob: -4.645901679992676
    4. '    ' → logprob: -9.395901679992676
    5. '(nodes' → logprob: -10.145901679992676
    6. '	nodes' → logprob: -10.270901679992676
    7. '   ' → logprob: -10.520901679992676
    8. '_nodes' → logprob: -11.895901679992676
    9. '.nodes' → logprob: -12.770901679992676
    10. ' ' → logprob: -12.770901679992676

Token 332: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.3870038390159607
    2. ' nodes' → logprob: -1.1370038986206055
    3. '       ' → logprob: -9.512003898620605
    4. '   ' → logprob: -10.012003898620605
    5. '	nodes' → logprob: -11.762003898620605
    6. '(nodes' → logprob: -13.512003898620605
    7. ' ' → logprob: -13.637003898620605
    8. '           ' → logprob: -14.137003898620605
    9. '    ' → logprob: -14.137003898620605
    10. '.nodes' → logprob: -14.387003898620605

Token 333: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: 0.0
    2. '[' → logprob: -18.625
    3. 'parent' → logprob: -18.625
    4. '[root' → logprob: -19.0
    5. ',parent' → logprob: -20.625
    6. '[player' → logprob: -20.875
    7. '[node' → logprob: -21.75
    8. ' [' → logprob: -21.875
    9. '(parent' → logprob: -21.875
    10. '	parent' → logprob: -22.0

Token 334: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.006504809483885765
    2. '[parent' → logprob: -5.756505012512207
    3. 'parent' → logprob: -5.881505012512207
    4. '_parent' → logprob: -7.631505012512207
    5. '_no' → logprob: -10.381505012512207
    6. ' parent' → logprob: -11.881505012512207
    7. '(parent' → logprob: -13.256505012512207
    8. 'node' → logprob: -14.006505012512207
    9. '.parent' → logprob: -14.131505012512207
    10. ',parent' → logprob: -14.131505012512207

Token 335: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.22351515293121338
    2. 'parent' → logprob: -1.7235151529312134
    3. '[parent' → logprob: -4.348515033721924
    4. 'No' → logprob: -5.473515033721924
    5. '_node' → logprob: -6.223515033721924
    6. '_parent' → logprob: -6.473515033721924
    7. '.parent' → logprob: -7.848515033721924
    8. 'no' → logprob: -7.973515033721924
    9. '_key' → logprob: -8.598515510559082
    10. ' parent' → logprob: -8.723515510559082

Token 336: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05015230551362038
    2. '.right' → logprob: -3.05015230178833
    3. '.left' → logprob: -7.05015230178833
    4. '.' → logprob: -7.92515230178833
    5. '[right' → logprob: -8.550152778625488
    6. '.key' → logprob: -10.175152778625488
    7. '][' → logprob: -10.675152778625488
    8. ' ].' → logprob: -10.800152778625488
    9. ').' → logprob: -10.925152778625488
    10. '[left' → logprob: -11.425152778625488

Token 337: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.896309739408025e-07
    2. ' right' → logprob: -14.125000953674316
    3. '.right' → logprob: -17.75
    4. '   ' → logprob: -18.0
    5. '[right' → logprob: -18.0
    6. '	right' → logprob: -18.25
    7. 'left' → logprob: -19.375
    8. '  ' → logprob: -20.75
    9. 'key' → logprob: -20.875
    10. ' ' → logprob: -20.875

Token 338: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141421258449554
    2. ' =' → logprob: -1.7014142274856567
    3. '=in' → logprob: -14.451414108276367
    4. '[' → logprob: -14.826414108276367
    5. '[in' → logprob: -17.451414108276367
    6. '   ' → logprob: -17.951414108276367
    7. ' ' → logprob: -18.076414108276367
    8. '.=' → logprob: -18.576414108276367
    9. ')' → logprob: -18.826414108276367
    10. '＝' → logprob: -18.951414108276367

Token 339: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31326770782470703
    2. 'in' → logprob: -1.313267707824707
    3. ' ' → logprob: -13.063267707824707
    4. '	in' → logprob: -13.188267707824707
    5. ' ' → logprob: -14.563267707824707
    6. '   ' → logprob: -14.688267707824707
    7. 'In' → logprob: -15.375767707824707
    8. '_in' → logprob: -15.563267707824707
    9. '  ' → logprob: -16.31326675415039
    10. '[in' → logprob: -16.68826675415039

Token 340: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00015800826076883823
    2. 'node' → logprob: -9.000158309936523
    3. 'in' → logprob: -10.750158309936523
    4. '_key' → logprob: -12.000158309936523
    5. 'Node' → logprob: -12.875158309936523
    6. ' node' → logprob: -13.125158309936523
    7. ' in' → logprob: -13.125158309936523
    8. 'insert' → logprob: -16.625158309936523
    9. '[in' → logprob: -16.750158309936523
    10. '_nodes' → logprob: -16.875158309936523

Token 341: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -7.73183855926618e-05
    2. '.' → logprob: -9.750077247619629
    3. 'key' → logprob: -11.500077247619629
    4. '.left' → logprob: -12.875077247619629
    5. '.parent' → logprob: -13.250077247619629
    6. '[key' → logprob: -14.125077247619629
    7. '.right' → logprob: -14.250077247619629
    8. ' .' → logprob: -14.375077247619629
    9. ')' → logprob: -14.375077247619629
    10. '_key' → logprob: -14.625077247619629

Token 342: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.570670485496521
    2. '<|end|>' → logprob: -1.195670485496521
    3. ' ' → logprob: -2.5706706047058105
    4. '.' → logprob: -4.1956706047058105
    5. '   ' → logprob: -4.6956706047058105
    6. '[' → logprob: -4.8206706047058105
    7. '       ' → logprob: -5.8206706047058105
    8. '.key' → logprob: -5.9456706047058105
    9. 'key' → logprob: -6.0706706047058105
    10. '  ' → logprob: -6.1956706047058105

Token 344: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.019396372139453888
    2. '   ' → logprob: -4.2693963050842285
    3. ' nodes' → logprob: -5.2693963050842285
    4. '	nodes' → logprob: -9.644396781921387
    5. '.nodes' → logprob: -12.394396781921387
    6. '(nodes' → logprob: -13.144396781921387
    7. '    
' → logprob: -14.019396781921387
    8. 'return' → logprob: -15.144396781921387
    9. '_nodes' → logprob: -16.39439582824707
    10. '       ' → logprob: -16.39439582824707

Token 345: '[in' (ID: 37498)
  Prédit: '[in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[in' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.875009536743164
    3. 'in' → logprob: -13.250009536743164
    4. ' [' → logprob: -15.500009536743164
    5. '[out' → logprob: -16.250009536743164
    6. '```' → logprob: -16.750009536743164
    7. '\[' → logprob: -17.375009536743164
    8. '

' → logprob: -17.375009536743164
    9. '[i' → logprob: -17.500009536743164
    10. '
' → logprob: -17.750009536743164

Token 346: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00013357517309486866
    2. 'node' → logprob: -9.000133514404297
    3. '_key' → logprob: -12.375133514404297
    4. 'Node' → logprob: -13.000133514404297
    5. 'ode' → logprob: -13.625133514404297
    6. '_' → logprob: -14.000133514404297
    7. '_nodes' → logprob: -14.250133514404297
    8. ' node' → logprob: -15.750133514404297
    9. '_NODE' → logprob: -15.875133514404297
    10. '-node' → logprob: -15.875133514404297

Token 347: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00010449681576574221
    2. '.' → logprob: -9.250104904174805
    3. ' .' → logprob: -13.125104904174805
    4. '.
' → logprob: -13.250104904174805
    5. 'key' → logprob: -13.250104904174805
    6. ']' → logprob: -13.750104904174805
    7. '].' → logprob: -14.625104904174805
    8. ')' → logprob: -15.250104904174805
    9. '.]' → logprob: -15.250104904174805
    10. '
' → logprob: -16.000104904174805

Token 348: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006741895340383053
    2. ']=' → logprob: -7.625674247741699
    3. ' ]' → logprob: -8.7506742477417
    4. '=' → logprob: -11.0006742477417
    5. ' =' → logprob: -11.5006742477417
    6. ')' → logprob: -13.8756742477417
    7. ' ' → logprob: -18.000673294067383
    8. ']
' → logprob: -18.750673294067383
    9. ']init' → logprob: -18.750673294067383
    10. '])' → logprob: -18.875673294067383

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759410262107849
    2. '=' → logprob: -0.8259410262107849
    3. '=in' → logprob: -13.57594108581543
    4. ' ' → logprob: -16.57594108581543
    5. '＝' → logprob: -17.32594108581543
    6. '=node' → logprob: -17.57594108581543
    7. '=create' → logprob: -17.57594108581543
    8. ']' → logprob: -17.95094108581543
    9. ']=' → logprob: -18.20094108581543
    10. '=None' → logprob: -18.20094108581543

Token 350: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.007606389466673136
    2. ' in' → logprob: -4.882606506347656
    3. '   ' → logprob: -16.507606506347656
    4. '	in' → logprob: -16.882606506347656
    5. ' ' → logprob: -17.257606506347656
    6. '
' → logprob: -18.382606506347656
    7. 'In' → logprob: -18.507606506347656
    8. 'Node' → logprob: -18.632606506347656
    9. '[in' → logprob: -19.007606506347656
    10. '(in' → logprob: -19.257606506347656

Token 351: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.664371848164592e-05
    2. 'ode' → logprob: -11.625016212463379
    3. 'node' → logprob: -11.875016212463379
    4. 'Node' → logprob: -14.625016212463379
    5. '_' → logprob: -15.875016212463379
    6. '_NODE' → logprob: -17.500017166137695
    7. ' node' → logprob: -17.625017166137695
    8. '_nodes' → logprob: -17.625017166137695
    9. '_Node' → logprob: -17.625017166137695
    10. 'odes' → logprob: -18.375017166137695

Token 352: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 353: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: ' inorder' (ID: 139692)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7444853782653809
    2. 'main' → logprob: -1.7444853782653809
    3. 'in' → logprob: -1.9944853782653809
    4. ' inorder' → logprob: -2.994485378265381
    5. ' in' → logprob: -3.494485378265381
    6. 'search' → logprob: -3.744485378265381
    7. 'build' → logprob: -3.869485378265381
    8. ' build' → logprob: -4.119485378265381
    9. ' search' → logprob: -4.119485378265381
    10. ' find' → logprob: -4.619485378265381

Token 355: '_tree' (ID: 27118)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.023288218304514885
    2. '(' → logprob: -4.148288249969482
    3. '(root' → logprob: -5.773288249969482
    4. '_tr' → logprob: -6.523288249969482
    5. '_nodes' → logprob: -6.898288249969482
    6. '(node' → logprob: -7.023288249969482
    7. '_' → logprob: -8.273287773132324
    8. 'Traversal' → logprob: -8.398287773132324
    9. ' traversal' → logprob: -9.773287773132324
    10. ' (' → logprob: -10.273287773132324

Token 356: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -0.01208951324224472
    2. '_tr' → logprob: -4.637089729309082
    3. 'walk' → logprob: -6.512089729309082
    4. '_' → logprob: -7.512089729309082
    5. '_nodes' → logprob: -9.012089729309082
    6. '(node' → logprob: -9.137089729309082
    7. '(root' → logprob: -11.637089729309082
    8. '_node' → logprob: -11.762089729309082
    9. '_print' → logprob: -11.762089729309082
    10. '_success' → logprob: -11.887089729309082

Token 357: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.001921014511026442
    2. '(' → logprob: -6.6269211769104
    3. '(node' → logprob: -8.001920700073242
    4. ' (' → logprob: -8.501920700073242
    5. '(root' → logprob: -10.001920700073242
    6. '(n' → logprob: -11.626920700073242
    7. '(
' → logprob: -14.376920700073242
    8. '(tree' → logprob: -15.501920700073242
    9. ' nodes' → logprob: -15.626920700073242
    10. '():' → logprob: -15.626920700073242

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023599030449986458
    2. '):' → logprob: -4.148599147796631
    3. ',n' → logprob: -5.898599147796631
    4. ' ,' → logprob: -6.023599147796631
    5. ')' → logprob: -6.648599147796631
    6. ' ):' → logprob: -7.023599147796631
    7. ',node' → logprob: -9.648598670959473
    8. ' )' → logprob: -10.398598670959473
    9. ' ' → logprob: -11.148598670959473
    10. ' :' → logprob: -11.898598670959473

Token 359: ' node' (ID: 4596)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -1.1108070611953735
    2. 'node' → logprob: -1.1108070611953735
    3. 'cur' → logprob: -1.2358070611953735
    4. ' cur' → logprob: -3.985806941986084
    5. ' root' → logprob: -4.485806941986084
    6. ' node' → logprob: -4.610806941986084
    7. 'key' → logprob: -4.735806941986084
    8. ' key' → logprob: -7.485806941986084
    9. 'current' → logprob: -7.485806941986084
    10. 'x' → logprob: -7.735806941986084

Token 360: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0450032539665699
    2. '):
' → logprob: -3.7950031757354736
    3. '_key' → logprob: -4.170003414154053
    4. '):' → logprob: -5.295003414154053
    5. 'No' → logprob: -8.295002937316895
    6. ')' → logprob: -8.295002937316895
    7. 'key' → logprob: -9.170002937316895
    8. ':' → logprob: -9.295002937316895
    9. 'no' → logprob: -10.045002937316895
    10. ' No' → logprob: -10.420002937316895

Token 361: ' ,' (ID: 1366)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2021489143371582
    2. '):
' → logprob: -1.7021489143371582
    3. ')' → logprob: -7.577148914337158
    4. '):
' → logprob: -8.5771484375
    5. ' ):' → logprob: -11.0771484375
    6. ':' → logprob: -11.7021484375
    7. '):

' → logprob: -12.3271484375
    8. '   ' → logprob: -12.4521484375
    9. ' ):
' → logprob: -13.7021484375
    10. ',' → logprob: -15.0771484375

Token 362: 'in' (ID: 258)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6162211298942566
    2. ' result' → logprob: -1.3662211894989014
    3. ' visit' → logprob: -3.8662211894989014
    4. 'output' → logprob: -3.8662211894989014
    5. 'node' → logprob: -4.366220951080322
    6. ' output' → logprob: -4.366220951080322
    7. ' res' → logprob: -4.366220951080322
    8. '):
' → logprob: -4.491220951080322
    9. 'visit' → logprob: -4.491220951080322
    10. '   ' → logprob: -4.866220951080322

Token 363: 'order' (ID: 2143)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.5849454402923584
    2. 'order' → logprob: -1.3349454402923584
    3. '_' → logprob: -1.8349454402923584
    4. '_node' → logprob: -4.3349456787109375
    5. 'put' → logprob: -6.7099456787109375
    6. '_stack' → logprob: -6.8349456787109375
    7. '_nodes' → logprob: -6.9599456787109375
    8. '_list' → logprob: -7.2099456787109375
    9. ' _' → logprob: -7.9599456787109375
    10. 'o' → logprob: -8.209945678710938

Token 364: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5811960101127625
    2. '_nodes' → logprob: -1.4561960697174072
    3. '_list' → logprob: -2.2061960697174072
    4. '):
' → logprob: -3.5811960697174072
    5. ',' → logprob: -3.9561960697174072
    6. 'list' → logprob: -4.081195831298828
    7. '=[]' → logprob: -4.206195831298828
    8. '_stack' → logprob: -5.581195831298828
    9. ')' → logprob: -5.706195831298828
    10. '_keys' → logprob: -5.831195831298828

Token 365: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13445277512073517
    2. '   ' → logprob: -2.5094528198242188
    3. '):
' → logprob: -3.8844528198242188
    4. '):' → logprob: -3.8844528198242188
    5. ':
' → logprob: -6.009452819824219
    6. ' :' → logprob: -7.509452819824219
    7. ',' → logprob: -8.634452819824219
    8. '=None' → logprob: -10.634452819824219
    9. '=' → logprob: -10.759452819824219
    10. ':list' → logprob: -10.759452819824219

Token 366: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.014505348168313503
    2. '   ' → logprob: -4.764505386352539
    3. ' if' → logprob: -5.139505386352539
    4. 'node' → logprob: -11.639505386352539
    5. '	if' → logprob: -12.889505386352539
    6. '  ' → logprob: -15.014505386352539
    7. '    
' → logprob: -15.264505386352539
    8. ' ' → logprob: -15.389505386352539
    9. 'nodes' → logprob: -15.889505386352539
    10. '
' → logprob: -16.01450538635254

Token 367: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7195486426353455
    2. 'nodes' → logprob: -1.2195487022399902
    3. ' node' → logprob: -2.2195487022399902
    4. ' nodes' → logprob: -2.2195487022399902
    5. '   ' → logprob: -8.219548225402832
    6. ' ' → logprob: -10.719548225402832
    7. '	node' → logprob: -11.469548225402832
    8. '	nodes' → logprob: -11.469548225402832
    9. '(node' → logprob: -11.594548225402832
    10. '(nodes' → logprob: -11.719548225402832

Token 368: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.6405310816480778e-05
    2. 'no' → logprob: -11.375016212463379
    3. 'No' → logprob: -13.000016212463379
    4. '_nodes' → logprob: -14.125016212463379
    5. 's' → logprob: -14.500016212463379
    6. 'nodes' → logprob: -14.500016212463379
    7. ' no' → logprob: -15.875016212463379
    8. '_' → logprob: -16.000017166137695
    9. '_not' → logprob: -16.125017166137695
    10. '_n' → logprob: -16.500017166137695

Token 369: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1602306365966797
    2. 'is' → logprob: -1.9102306365966797
    3. 'not' → logprob: -13.28523063659668
    4. ' ' → logprob: -13.91023063659668
    5. 'in' → logprob: -13.91023063659668
    6. '	is' → logprob: -14.16023063659668
    7. '!=' → logprob: -14.28523063659668
    8. ' not' → logprob: -14.53523063659668
    9. ' in' → logprob: -15.03523063659668
    10. ':' → logprob: -15.28523063659668

Token 370: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10059202462434769
    2. ' not' → logprob: -2.3505921363830566
    3. 'None' → logprob: -7.975592136383057
    4. '   ' → logprob: -11.225591659545898
    5. ' None' → logprob: -11.725591659545898
    6. '
' → logprob: -12.225591659545898
    7. '	not' → logprob: -12.850591659545898
    8. 'n' → logprob: -12.975591659545898
    9. ' ' → logprob: -13.225591659545898
    10. '    ' → logprob: -13.850591659545898

Token 371: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4778907597064972
    2. ':
' → logprob: -0.9778907299041748
    3. '   ' → logprob: -5.727890968322754
    4. ' or' → logprob: -7.852890968322754
    5. ' :
' → logprob: -9.477890968322754
    6. ' :' → logprob: -10.102890968322754
    7. ' and' → logprob: -10.977890968322754
    8. '):
' → logprob: -12.102890968322754
    9. '  ' → logprob: -12.477890968322754
    10. ':
' → logprob: -12.727890968322754

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02118845283985138
    2. '   ' → logprob: -3.896188497543335
    3. '
' → logprob: -8.396188735961914
    4. ' nodes' → logprob: -8.896188735961914
    5. '    
' → logprob: -9.396188735961914
    6. '        
' → logprob: -10.396188735961914
    7. 'nodes' → logprob: -10.396188735961914
    8. ',' → logprob: -10.521188735961914
    9. '	nodes' → logprob: -10.771188735961914
    10. '(nodes' → logprob: -11.396188735961914

Token 373: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.48899757862091064
    2. 'return' (adapté à ' return') → logprob: -1.4889975786209106
    3. '   ' → logprob: -1.9889975786209106
    4. '       ' → logprob: -3.738997459411621
    5. '	return' → logprob: -7.738997459411621
    6. '
' → logprob: -9.613997459411621
    7. ':return' → logprob: -10.613997459411621
    8. ' ' → logprob: -11.863997459411621
    9. 'eturn' → logprob: -12.613997459411621
    10. ' 
' → logprob: -13.238997459411621

Token 374: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10466672480106354
    2. '
' → logprob: -2.4796667098999023
    3. '    
' → logprob: -4.354666709899902
    4. ' nodes' → logprob: -6.979666709899902
    5. 'nodes' → logprob: -7.104666709899902
    6. ' 
' → logprob: -8.354666709899902
    7. '	nodes' → logprob: -8.479666709899902
    8. '  
' → logprob: -8.604666709899902
    9. '   
' → logprob: -9.354666709899902
    10. 'in' → logprob: -9.604666709899902

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004678730387240648
    2. '
' → logprob: -6.129678726196289
    3. '    
' → logprob: -6.129678726196289
    4. 'nodes' → logprob: -8.754678726196289
    5. '	nodes' → logprob: -9.879678726196289
    6. ' nodes' → logprob: -10.629678726196289
    7. '   
' → logprob: -10.879678726196289
    8. '  
' → logprob: -11.379678726196289
    9. ' 
' → logprob: -11.754678726196289
    10. '        
' → logprob: -11.754678726196289

Token 376: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9118710160255432
    2. '   ' → logprob: -1.1618709564208984
    3. ' inorder' → logprob: -1.2868709564208984
    4. '
' → logprob: -5.786870956420898
    5. ' nodes' → logprob: -6.036870956420898
    6. '    
' → logprob: -6.286870956420898
    7. 'nodes' → logprob: -6.911870956420898
    8. ' in' → logprob: -7.911870956420898
    9. '	in' → logprob: -9.036870956420898
    10. ' ' → logprob: -9.661870956420898

Token 377: '_tree' (ID: 27118)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.05281102657318115
    2. '.extend' → logprob: -3.3028111457824707
    3. '.' → logprob: -4.927811145782471
    4. '_tree' → logprob: -5.302811145782471
    5. 'append' → logprob: -6.677811145782471
    6. '+=' → logprob: -7.302811145782471
    7. '+' → logprob: -8.802810668945312
    8. ' +=' → logprob: -9.427810668945312
    9. '=' → logprob: -10.177810668945312
    10. '._' → logprob: -10.427810668945312

Token 378: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.1756367712223437e-05
    2. 'walk' → logprob: -11.625011444091797
    3. '_nodes' → logprob: -13.250011444091797
    4. '_' → logprob: -14.500011444091797
    5. '_w' → logprob: -15.500011444091797
    6. '(nodes' → logprob: -16.125011444091797
    7. 'nodes' → logprob: -16.500011444091797
    8. 'Walk' → logprob: -16.750011444091797
    9. '_tree' → logprob: -17.125011444091797
    10. '.walk' → logprob: -18.250011444091797

Token 379: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -15.875
    3. '(n' → logprob: -17.625
    4. '(
' → logprob: -18.0
    5. 'nodes' → logprob: -18.125
    6. '	nodes' → logprob: -18.25
    7. '(tokens' → logprob: -18.375
    8. ' (' → logprob: -18.625
    9. '(notes' → logprob: -18.625
    10. ' nodes' → logprob: -18.875

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002700377081055194
    2. ',node' → logprob: -8.625269889831543
    3. ' ,' → logprob: -9.625269889831543
    4. ',n' → logprob: -11.125269889831543
    5. '[node' → logprob: -11.875269889831543
    6. '(node' → logprob: -13.375269889831543
    7. ',
' → logprob: -14.875269889831543
    8. '(nodes' → logprob: -15.500269889831543
    9. '   ' → logprob: -15.625269889831543
    10. '[' → logprob: -16.00027084350586

Token 381: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.006722706835716963
    2. ' nodes' → logprob: -5.006722927093506
    3. '(nodes' → logprob: -12.131722450256348
    4. '	nodes' → logprob: -14.006722450256348
    5. '   ' → logprob: -14.756722450256348
    6. 'node' → logprob: -15.131722450256348
    7. '.nodes' → logprob: -15.756722450256348
    8. ' ' → logprob: -15.881722450256348
    9. '
' → logprob: -17.006723403930664
    10. ')' → logprob: -17.381723403930664

Token 382: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. 'node' → logprob: -18.5
    3. '```' → logprob: -20.25
    4. '[n' → logprob: -20.25
    5. '(node' → logprob: -21.5
    6. '
' → logprob: -22.125
    7. '[
' → logprob: -22.375
    8. '[' → logprob: -22.375
    9. ' [' → logprob: -22.5
    10. '	node' → logprob: -22.5

Token 383: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0009504065383225679
    2. 'no' → logprob: -7.625950336456299
    3. '[node' → logprob: -8.500950813293457
    4. 'node' → logprob: -8.500950813293457
    5. '_node' → logprob: -10.125950813293457
    6. 'No' → logprob: -11.500950813293457
    7. ' node' → logprob: -13.500950813293457
    8. '(node' → logprob: -14.500950813293457
    9. '=node' → logprob: -14.750950813293457
    10. '_nodes' → logprob: -15.125950813293457

Token 384: '].' (ID: 1651)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.002549146767705679
    2. '].' → logprob: -6.002549171447754
    3. '.' → logprob: -10.377549171447754
    4. '.right' → logprob: -10.377549171447754
    5. ' .' → logprob: -12.377549171447754
    6. '   ' → logprob: -12.877549171447754
    7. ').' → logprob: -13.252549171447754
    8. '[left' → logprob: -13.752549171447754
    9. 'left' → logprob: -14.502549171447754
    10. '	' → logprob: -15.502549171447754

Token 385: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.128163257315464e-07
    2. ' left' → logprob: -15.125
    3. '.left' → logprob: -17.25
    4. '   ' → logprob: -18.875
    5. ' ' → logprob: -19.875
    6. '	left' → logprob: -20.125
    7. 'lef' → logprob: -20.125
    8. '[left' → logprob: -21.375
    9. '  ' → logprob: -21.875
    10. '_left' → logprob: -22.125

Token 386: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004031383898109198
    2. ' ,' → logprob: -5.629031181335449
    3. ',in' → logprob: -7.754031181335449
    4. '   ' → logprob: -14.00403118133545
    5. ',node' → logprob: -15.12903118133545
    6. '  ' → logprob: -15.12903118133545
    7. ' ' → logprob: -15.50403118133545
    8. ',
' → logprob: -16.504032135009766
    9. 'in' → logprob: -16.754032135009766
    10. '‌,' → logprob: -16.754032135009766

Token 387: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06999312341213226
    2. ' inorder' → logprob: -2.694993019104004
    3. ' in' → logprob: -10.694993019104004
    4. '   ' → logprob: -11.194993019104004
    5. ' ' → logprob: -11.819993019104004
    6. '	in' → logprob: -12.319993019104004
    7. '[in' → logprob: -13.444993019104004
    8. '  ' → logprob: -13.444993019104004
    9. '    ' → logprob: -13.944993019104004
    10. 'In' → logprob: -14.069993019104004

Token 388: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08680995553731918
    2. ')' → logprob: -2.9618098735809326
    3. '   ' → logprob: -3.4618098735809326
    4. ' )
' → logprob: -10.836810111999512
    5. ')
' → logprob: -11.461810111999512
    6. ' ' → logprob: -11.836810111999512
    7. ',' → logprob: -12.086810111999512
    8. ')

' → logprob: -12.836810111999512
    9. '  ' → logprob: -13.336810111999512
    10. 'in' → logprob: -14.211810111999512

Token 389: '   ' (ID: 271)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22813472151756287
    2. '   ' → logprob: -1.9781347513198853
    3. ' inorder' → logprob: -2.7281346321105957
    4. ' in' → logprob: -8.478135108947754
    5. '    
' → logprob: -10.228135108947754
    6. '	in' → logprob: -10.603135108947754
    7. '
' → logprob: -10.728135108947754
    8. ' ' → logprob: -12.353135108947754
    9. 'node' → logprob: -12.978135108947754
    10. '[in' → logprob: -13.228135108947754

Token 390: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0005071613122709095
    2. '   ' → logprob: -7.750507354736328
    3. ' inorder' → logprob: -9.500507354736328
    4. ' in' → logprob: -13.750507354736328
    5. '	in' → logprob: -14.875507354736328
    6. ' ' → logprob: -16.125507354736328
    7. '  ' → logprob: -17.125507354736328
    8. '
' → logprob: -17.250507354736328
    9. 'inode' → logprob: -17.250507354736328
    10. '       ' → logprob: -17.625507354736328

Token 391: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001242772996192798
    2. '.' → logprob: -9.000123977661133
    3. 'append' → logprob: -15.000123977661133
    4. '.extend' → logprob: -15.375123977661133
    5. '.add' → logprob: -15.500123977661133
    6. '.push' → logprob: -16.000123977661133
    7. ' .' → logprob: -17.875123977661133
    8. '.setdefault' → logprob: -18.375123977661133
    9. '.app' → logprob: -18.875123977661133
    10. '.insert' → logprob: -19.000123977661133

Token 392: '(node' (ID: 13356)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.4741518199443817
    2. '(node' → logprob: -0.9741518497467041
    3. '(' → logprob: -9.974151611328125
    4. 'nodes' → logprob: -10.974151611328125
    5. 'node' → logprob: -11.724151611328125
    6. '(n' → logprob: -13.474151611328125
    7. '((' → logprob: -13.849151611328125
    8. ' nodes' → logprob: -15.474151611328125
    9. '(
' → logprob: -15.724151611328125
    10. ' (' → logprob: -16.724151611328125

Token 393: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0015450954670086503
    2. '[node' → logprob: -6.876544952392578
    3. '.no' → logprob: -9.001544952392578
    4. ')' → logprob: -9.001544952392578
    5. 'No' → logprob: -9.376544952392578
    6. '.key' → logprob: -9.751544952392578
    7. '[key' → logprob: -10.126544952392578
    8. '.node' → logprob: -10.376544952392578
    9. 'no' → logprob: -11.251544952392578
    10. '._' → logprob: -11.876544952392578

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006199848721735179
    2. ')
' → logprob: -7.500619888305664
    3. '   ' → logprob: -9.875619888305664
    4. ' )' → logprob: -11.125619888305664
    5. ')

' → logprob: -15.375619888305664
    6. '),' → logprob: -15.750619888305664
    7. ' ' → logprob: -16.750619888305664
    8. '))' → logprob: -16.750619888305664
    9. ')return' → logprob: -16.875619888305664
    10. ')
' → logprob: -17.000619888305664

Token 395: '   ' (ID: 271)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14932473003864288
    2. '   ' → logprob: -2.024324655532837
    3. ' inorder' → logprob: -5.399324893951416
    4. '
' → logprob: -6.524324893951416
    5. '    
' → logprob: -7.524324893951416
    6. ' in' → logprob: -9.649324417114258
    7. ' 
' → logprob: -11.399324417114258
    8. '	in' → logprob: -12.274324417114258
    9. '  
' → logprob: -12.774324417114258
    10. '   
' → logprob: -12.899324417114258

Token 396: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0025523616932332516
    2. ' inorder' → logprob: -6.002552509307861
    3. '   ' → logprob: -9.502552032470703
    4. ' in' → logprob: -14.502552032470703
    5. '    
' → logprob: -14.877552032470703
    6. '	in' → logprob: -15.127552032470703
    7. ' ' → logprob: -15.377552032470703
    8. '
' → logprob: -15.502552032470703
    9. 'inode' → logprob: -15.877552032470703
    10. '  ' → logprob: -16.502552032470703

Token 397: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.003554812166839838
    2. ')' → logprob: -6.503554821014404
    3. '_' → logprob: -7.378554821014404
    4. 'tree' → logprob: -7.878554821014404
    5. '   ' → logprob: -8.628554344177246
    6. ',' → logprob: -8.878554344177246
    7. '_TREE' → logprob: -9.128554344177246
    8. '_nodes' → logprob: -9.378554344177246
    9. 'Tree' → logprob: -9.378554344177246
    10. '<Tree' → logprob: -9.753554344177246

Token 398: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -3.702754474943504e-05
    2. 'walk' → logprob: -11.25003719329834
    3. '_append' → logprob: -11.62503719329834
    4. '_' → logprob: -12.12503719329834
    5. '_w' → logprob: -12.12503719329834
    6. '.append' → logprob: -13.37503719329834
    7. 'append' → logprob: -14.37503719329834
    8. '_tree' → logprob: -14.37503719329834
    9. '.walk' → logprob: -15.00003719329834
    10. 'Walk' → logprob: -15.12503719329834

Token 399: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'nodes' → logprob: -16.875
    4. '(tokens' → logprob: -17.375
    5. '(n' → logprob: -18.5
    6. '	nodes' → logprob: -19.0
    7. ' nodes' → logprob: -19.0
    8. '(node' → logprob: -19.375
    9. '(
' → logprob: -19.5
    10. '(notes' → logprob: -19.5

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.0020742492051795e-05
    2. ',n' → logprob: -10.000049591064453
    3. ' ,' → logprob: -12.625049591064453
    4. '(nodes' → logprob: -13.750049591064453
    5. ',node' → logprob: -16.000049591064453
    6. '[n' → logprob: -17.375049591064453
    7. ',
' → logprob: -17.625049591064453
    8. 'nodes' → logprob: -19.500049591064453
    9. ' nodes' → logprob: -20.500049591064453
    10. '   ' → logprob: -20.500049591064453

Token 401: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.6931656002998352
    2. 'nodes' → logprob: -0.6931656002998352
    3. '(nodes' → logprob: -11.81816577911377
    4. '   ' → logprob: -12.19316577911377
    5. '	nodes' → logprob: -12.81816577911377
    6. ' ' → logprob: -13.69316577911377
    7. '.nodes' → logprob: -14.06816577911377
    8. 'node' → logprob: -14.44316577911377
    9. '_nodes' → logprob: -15.31816577911377
    10. '  ' → logprob: -15.81816577911377

Token 402: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.9361264946837764e-07
    2. 'node' → logprob: -16.125
    3. '(node' → logprob: -17.75
    4. '[
' → logprob: -17.875
    5. '[' → logprob: -18.0
    6. '[user' → logprob: -18.125
    7. '```' → logprob: -18.625
    8. ',node' → logprob: -19.0
    9. '[[' → logprob: -19.5
    10. ' [' → logprob: -19.5

Token 403: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.04563529044389725
    2. '[node' → logprob: -3.295635223388672
    3. 'node' → logprob: -5.170635223388672
    4. 'no' → logprob: -6.545635223388672
    5. '_node' → logprob: -8.420635223388672
    6. 'No' → logprob: -8.545635223388672
    7. 'right' → logprob: -11.670635223388672
    8. ' node' → logprob: -12.045635223388672
    9. '_right' → logprob: -12.295635223388672
    10. '(node' → logprob: -13.170635223388672

Token 404: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07203441858291626
    2. '.right' → logprob: -2.6970343589782715
    3. '.left' → logprob: -6.6970343589782715
    4. '[right' → logprob: -7.9470343589782715
    5. '[node' → logprob: -8.32203483581543
    6. ']' → logprob: -9.32203483581543
    7. ' ].' → logprob: -10.32203483581543
    8. '.' → logprob: -10.44703483581543
    9. '.node' → logprob: -10.57203483581543
    10. '[left' → logprob: -10.82203483581543

Token 405: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.538490950129926e-05
    2. 'node' → logprob: -10.375055313110352
    3. '[node' → logprob: -10.750055313110352
    4. '[right' → logprob: -13.500055313110352
    5. '.right' → logprob: -14.375055313110352
    6. ' right' → logprob: -15.000055313110352
    7. 'Right' → logprob: -15.500055313110352
    8. 'left' → logprob: -16.50005531311035
    9. '_right' → logprob: -16.50005531311035
    10. '(node' → logprob: -17.50005531311035

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005377820343710482
    2. ',node' → logprob: -8.000537872314453
    3. ' ,' → logprob: -8.625537872314453
    4. ')' → logprob: -11.375537872314453
    5. '[node' → logprob: -11.500537872314453
    6. ',n' → logprob: -14.875537872314453
    7. '(node' → logprob: -14.875537872314453
    8. '[' → logprob: -15.875537872314453
    9. '),' → logprob: -15.875537872314453
    10. '   ' → logprob: -16.000537872314453

Token 407: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.31333455443382263
    2. ' inorder' → logprob: -1.313334584236145
    3. ' in' → logprob: -9.813334465026855
    4. ' ' → logprob: -11.938334465026855
    5. '	in' → logprob: -12.813334465026855
    6. '[in' → logprob: -13.563334465026855
    7. '   ' → logprob: -13.688334465026855
    8. '  ' → logprob: -13.938334465026855
    9. 'order' → logprob: -14.063334465026855
    10. 'In' → logprob: -14.188334465026855

Token 408: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. ',' → logprob: -10.875021934509277
    3. ' )' → logprob: -13.250021934509277
    4. ',)' → logprob: -14.875021934509277
    5. ')
' → logprob: -15.000021934509277
    6. '   ' → logprob: -15.250021934509277
    7. '),' → logprob: -16.25002098083496
    8. ')#' → logprob: -17.25002098083496
    9. '))' → logprob: -17.62502098083496
    10. ').' → logprob: -18.25002098083496

Token 409: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 410: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.5260319113731384
    2. 'main' → logprob: -1.7760319709777832
    3. 'post' → logprob: -2.526031970977783
    4. ' preorder' → logprob: -2.526031970977783
    5. 'search' → logprob: -3.651031970977783
    6. ' main' → logprob: -3.776031970977783
    7. 'find' → logprob: -4.776031970977783
    8. 'delete' → logprob: -5.026031970977783
    9. ' post' → logprob: -5.526031970977783
    10. ' find' → logprob: -6.151031970977783

Token 411: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -2.1054253011243418e-05
    2. '_' → logprob: -11.500020980834961
    3. '_walk' → logprob: -12.250020980834961
    4. '_t' → logprob: -13.375020980834961
    5. '_nodes' → logprob: -13.500020980834961
    6. '_node' → logprob: -14.250020980834961
    7. '(_' → logprob: -14.500020980834961
    8. '(' → logprob: -15.500020980834961
    9. 'tree' → logprob: -15.625020980834961
    10. '_tr' → logprob: -15.750020980834961

Token 412: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -3.054500666621607e-06
    2. 'walk' → logprob: -13.00000286102295
    3. '_nodes' → logprob: -15.00000286102295
    4. '_' → logprob: -15.75000286102295
    5. '_w' → logprob: -16.250003814697266
    6. '_visit' → logprob: -17.375003814697266
    7. 'Walk' → logprob: -17.500003814697266
    8. '(nodes' → logprob: -17.750003814697266
    9. '_write' → logprob: -18.000003814697266
    10. '_print' → logprob: -18.625003814697266

Token 413: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -2.6656825866666622e-05
    2. '(' → logprob: -10.62502670288086
    3. ' (' → logprob: -13.50002670288086
    4. '(node' → logprob: -14.87502670288086
    5. '(n' → logprob: -15.25002670288086
    6. '	nodes' → logprob: -17.00002670288086
    7. '(names' → logprob: -17.37502670288086
    8. '(
' → logprob: -17.50002670288086
    9. '(lines' → logprob: -17.75002670288086
    10. '(notes' → logprob: -17.87502670288086

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011045700375689194
    2. ',n' → logprob: -9.750110626220703
    3. ' ,' → logprob: -10.500110626220703
    4. ',node' → logprob: -10.875110626220703
    5. '(nodes' → logprob: -12.125110626220703
    6. ',
' → logprob: -16.625110626220703
    7. ' nodes' → logprob: -16.875110626220703
    8. ')' → logprob: -17.125110626220703
    9. '_nodes' → logprob: -17.500110626220703
    10. '	nodes' → logprob: -17.875110626220703

Token 415: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.43530672788619995
    2. ' node' → logprob: -1.1853067874908447
    3. ' nodes' → logprob: -3.6853067874908447
    4. 'nodes' → logprob: -3.8103067874908447
    5. '_nodes' → logprob: -11.310306549072266
    6. ' ' → logprob: -11.560306549072266
    7. '(node' → logprob: -11.685306549072266
    8. '[node' → logprob: -12.435306549072266
    9. '   ' → logprob: -12.935306549072266
    10. ',node' → logprob: -12.935306549072266

Token 416: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -7.584239938296378e-06
    2. 'no' → logprob: -12.625007629394531
    3. 'No' → logprob: -13.000007629394531
    4. '_NO' → logprob: -14.500007629394531
    5. '_' → logprob: -14.625007629394531
    6. ',' → logprob: -15.375007629394531
    7. '_No' → logprob: -16.00000762939453
    8. ' no' → logprob: -16.12500762939453
    9. '_n' → logprob: -16.25000762939453
    10. '_number' → logprob: -16.37500762939453

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03968179598450661
    2. ' ,' → logprob: -3.289681911468506
    3. ',node' → logprob: -6.414681911468506
    4. ',n' → logprob: -13.914681434631348
    5. ' ' → logprob: -15.289681434631348
    6. '(node' → logprob: -15.664681434631348
    7. ' node' → logprob: -16.164682388305664
    8. '   ' → logprob: -16.789682388305664
    9. '[node' → logprob: -17.414682388305664
    10. ' ' → logprob: -17.664682388305664

Token 418: ' preorder' (ID: 152292)
  Prédit: ' preorder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' preorder' → logprob: -0.22664910554885864
    2. 'pre' → logprob: -1.6016490459442139
    3. ' pre' → logprob: -7.101649284362793
    4. ' nodes' → logprob: -9.601649284362793
    5. 'nodes' → logprob: -9.851649284362793
    6. 'in' → logprob: -9.851649284362793
    7. ' traversal' → logprob: -10.226649284362793
    8. ' inorder' → logprob: -10.476649284362793
    9. 'node' → logprob: -10.601649284362793
    10. ' ' → logprob: -11.101649284362793

Token 419: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0249427929520607
    2. '):' → logprob: -3.8999428749084473
    3. ' ,' → logprob: -6.149942874908447
    4. '):
' → logprob: -6.399942874908447
    5. ',in' → logprob: -7.774942874908447
    6. ':' → logprob: -9.774942398071289
    7. ':list' → logprob: -10.024942398071289
    8. ',list' → logprob: -10.899942398071289
    9. '   ' → logprob: -11.024942398071289
    10. ' ):' → logprob: -11.399942398071289

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006728782900609076
    2. ' if' → logprob: -7.375672817230225
    3. 'if' → logprob: -10.000673294067383
    4. '	if' → logprob: -14.125673294067383
    5. '       ' → logprob: -16.625673294067383
    6. '    ' → logprob: -17.250673294067383
    7. '   ' → logprob: -17.375673294067383
    8. '<|end|>' → logprob: -18.250673294067383
    9. '  ' → logprob: -18.375673294067383
    10. '```' → logprob: -18.625673294067383

Token 421: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0034292428754270077
    2. ' if' → logprob: -6.253429412841797
    3. '   ' → logprob: -6.503429412841797
    4. '	if' → logprob: -13.628429412841797
    5. '
' → logprob: -18.378429412841797
    6. '  ' → logprob: -18.503429412841797
    7. ' ' → logprob: -18.628429412841797
    8. 'def' → logprob: -19.003429412841797
    9. '       ' → logprob: -19.378429412841797
    10. 'If' → logprob: -19.628429412841797

Token 422: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.038044705986976624
    2. 'node' → logprob: -3.2880446910858154
    3. ' nodes' → logprob: -13.663044929504395
    4. '(node' → logprob: -14.413044929504395
    5. '	node' → logprob: -14.538044929504395
    6. ' ' → logprob: -15.038044929504395
    7. 'nodes' → logprob: -15.038044929504395
    8. '   ' → logprob: -15.413044929504395
    9. '[node' → logprob: -16.038043975830078
    10. 'Node' → logprob: -17.288043975830078

Token 423: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.3663626305060461e-05
    2. 'No' → logprob: -11.75001335144043
    3. 'no' → logprob: -12.37501335144043
    4. '_' → logprob: -14.25001335144043
    5. '_node' → logprob: -15.87501335144043
    6. '_is' → logprob: -16.25001335144043
    7. '_nodes' → logprob: -16.37501335144043
    8. '_not' → logprob: -16.50001335144043
    9. '_NO' → logprob: -16.62501335144043
    10. 'node' → logprob: -16.62501335144043

Token 424: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.01815064437687397
    2. 'is' → logprob: -4.018150806427002
    3. ' ' → logprob: -15.018150329589844
    4. '   ' → logprob: -15.518150329589844
    5. '	is' → logprob: -16.643150329589844
    6. 'None' → logprob: -17.143150329589844
    7. 's' → logprob: -17.268150329589844
    8. '==' → logprob: -17.393150329589844
    9. 'in' → logprob: -17.643150329589844
    10. '[' → logprob: -18.268150329589844

Token 425: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.003178071230649948
    2. ' None' → logprob: -5.753178119659424
    3. '   ' → logprob: -16.003177642822266
    4. 'not' → logprob: -16.003177642822266
    5. ' not' → logprob: -17.503177642822266
    6. '_None' → logprob: -17.753177642822266
    7. '(None' → logprob: -18.128177642822266
    8. ' ' → logprob: -18.253177642822266
    9. '=None' → logprob: -18.253177642822266
    10. 'Not' → logprob: -18.253177642822266

Token 426: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7749080657958984
    2. ':
' → logprob: -0.8999080657958984
    3. '   ' → logprob: -2.2749080657958984
    4. '       ' → logprob: -3.5249080657958984
    5. '  ' → logprob: -8.899908065795898
    6. '):
' → logprob: -8.899908065795898
    7. '      ' → logprob: -11.399908065795898
    8. ' :
' → logprob: -11.399908065795898
    9. ':
' → logprob: -11.774908065795898
    10. ',' → logprob: -11.774908065795898

Token 427: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31712669134140015
    2. '       ' → logprob: -1.317126750946045
    3. 'pre' → logprob: -5.567126750946045
    4. ' preorder' → logprob: -10.817126274108887
    5. '	pre' → logprob: -12.192126274108887
    6. 'return' → logprob: -12.192126274108887
    7. ' pre' → logprob: -12.442126274108887
    8. '(pre' → logprob: -14.317126274108887
    9. '
' → logprob: -14.442126274108887
    10. '    ' → logprob: -15.692126274108887

Token 428: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3420872092247009
    2. ' return' → logprob: -1.3420872688293457
    3. '   ' → logprob: -3.5920872688293457
    4. '       ' → logprob: -7.092087268829346
    5. '	return' → logprob: -10.217086791992188
    6. ' ' → logprob: -12.717086791992188
    7. '  ' → logprob: -13.842086791992188
    8. '    ' → logprob: -14.717086791992188
    9. 'eturn' → logprob: -15.717086791992188
    10. '     ' → logprob: -15.842086791992188

Token 429: '
' (ID: 198)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.0004350797680672258
    2. '   ' → logprob: -7.750434875488281
    3. ' preorder' → logprob: -12.500434875488281
    4. ' pre' → logprob: -15.250434875488281
    5. '	pre' → logprob: -15.375434875488281
    6. '
' → logprob: -16.00043487548828
    7. '(pre' → logprob: -17.25043487548828
    8. '       ' → logprob: -17.37543487548828
    9. 'pro' → logprob: -18.62543487548828
    10. '.pre' → logprob: -19.37543487548828

Token 430: '   ' (ID: 271)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.003184125293046236
    2. '   ' → logprob: -5.7531843185424805
    3. ' preorder' → logprob: -12.75318431854248
    4. '	pre' → logprob: -13.00318431854248
    5. ' pre' → logprob: -14.12818431854248
    6. '
' → logprob: -15.00318431854248
    7. 'pro' → logprob: -17.128183364868164
    8. 'preh' → logprob: -17.628183364868164
    9. '  ' → logprob: -17.753183364868164
    10. 'prem' → logprob: -17.753183364868164

Token 431: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: 0.0
    2. ' preorder' → logprob: -18.25
    3. '   ' → logprob: -20.75
    4. ' pre' → logprob: -21.375
    5. 'pr' → logprob: -21.375
    6. 'node' → logprob: -21.5
    7. 'pro' → logprob: -22.0
    8. '
' → logprob: -22.125
    9. 'print' → logprob: -22.25
    10. '	pre' → logprob: -22.75

Token 432: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07918223738670349
    2. '_tree' → logprob: -2.5791821479797363
    3. 'append' → logprob: -8.329182624816895
    4. '.' → logprob: -10.704182624816895
    5. '._' → logprob: -11.954182624816895
    6. '.extend' → logprob: -11.954182624816895
    7. '_append' → logprob: -12.704182624816895
    8. 'tree' → logprob: -13.579182624816895
    9. '.insert' → logprob: -13.579182624816895
    10. 'Tree' → logprob: -13.704182624816895

Token 433: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: 0.0
    2. '(' → logprob: -16.875
    3. 'node' → logprob: -17.375
    4. '[node' → logprob: -20.25
    5. '(
' → logprob: -21.625
    6. '=node' → logprob: -21.75
    7. ' (' → logprob: -22.0
    8. '(Node' → logprob: -22.125
    9. ',node' → logprob: -22.125
    10. ' node' → logprob: -22.5

Token 434: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -9.209963900502771e-05
    2. 'no' → logprob: -9.500092506408691
    3. '_node' → logprob: -11.250092506408691
    4. '[node' → logprob: -13.375092506408691
    5. 'No' → logprob: -13.500092506408691
    6. 'node' → logprob: -14.125092506408691
    7. '_nodes' → logprob: -16.125091552734375
    8. '```' → logprob: -16.250091552734375
    9. '(node' → logprob: -16.500091552734375
    10. ')' → logprob: -16.500091552734375

Token 435: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2016671895980835
    2. ')' → logprob: -1.7016671895980835
    3. '   ' → logprob: -8.326666831970215
    4. ')
' → logprob: -11.576666831970215
    5. ' )
' → logprob: -13.701666831970215
    6. ')

' → logprob: -14.451666831970215
    7. '[node' → logprob: -15.951666831970215
    8. ',' → logprob: -16.07666778564453
    9. ' ' → logprob: -16.07666778564453
    10. ')n' → logprob: -16.32666778564453

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018186701461672783
    2. 'pre' → logprob: -4.018186569213867
    3. ' pre' → logprob: -11.143186569213867
    4. '
' → logprob: -11.518186569213867
    5. '	pre' → logprob: -11.643186569213867
    6. '    
' → logprob: -13.018186569213867
    7. ' preorder' → logprob: -13.893186569213867
    8. '(pre' → logprob: -15.143186569213867
    9. '_pre' → logprob: -16.518186569213867
    10. '   ' → logprob: -17.143186569213867

Token 437: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -5.512236498361744e-07
    2. ' preorder' → logprob: -14.500000953674316
    3. 'if' → logprob: -19.875
    4. '	pre' → logprob: -20.375
    5. '_pre' → logprob: -20.875
    6. ' pre' → logprob: -21.5
    7. '   ' → logprob: -21.625
    8. '(pre' → logprob: -21.75
    9. 'preced' → logprob: -21.75
    10. 'Pre' → logprob: -21.875

Token 438: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -3.3451433409936726e-05
    2. 'tree' → logprob: -11.375033378601074
    3. '.append' → logprob: -12.250033378601074
    4. '_walk' → logprob: -12.250033378601074
    5. ',_' → logprob: -12.875033378601074
    6. '_' → logprob: -13.125033378601074
    7. 'Tree' → logprob: -13.375033378601074
    8. ',' → logprob: -13.625033378601074
    9. '_TREE' → logprob: -14.125033378601074
    10. 'def' → logprob: -14.625033378601074

Token 439: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.6286106983898208e-05
    2. 'walk' → logprob: -11.375016212463379
    3. '_nodes' → logprob: -12.500016212463379
    4. '_' → logprob: -14.125016212463379
    5. '_w' → logprob: -15.750016212463379
    6. '_tree' → logprob: -16.750017166137695
    7. 'Walk' → logprob: -17.000017166137695
    8. '(nodes' → logprob: -17.750017166137695
    9. '```' → logprob: -18.750017166137695
    10. '.walk' → logprob: -19.125017166137695

Token 440: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.2664456789934775e-06
    2. 'nodes' → logprob: -14.250000953674316
    3. '(' → logprob: -14.500000953674316
    4. ' nodes' → logprob: -18.250001907348633
    5. '(
' → logprob: -19.000001907348633
    6. '(n' → logprob: -19.750001907348633
    7. '(tokens' → logprob: -19.750001907348633
    8. '(node' → logprob: -19.875001907348633
    9. '	nodes' → logprob: -20.000001907348633
    10. '(notes' → logprob: -20.000001907348633

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004678497789427638
    2. ',n' → logprob: -8.250468254089355
    3. '(nodes' → logprob: -8.500468254089355
    4. ' ,' → logprob: -12.875468254089355
    5. 'nodes' → logprob: -14.750468254089355
    6. ',node' → logprob: -15.750468254089355
    7. ' nodes' → logprob: -17.50046730041504
    8. '(n' → logprob: -18.37546730041504
    9. ',
' → logprob: -18.50046730041504
    10. '   ' → logprob: -18.50046730041504

Token 442: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0067176250740885735
    2. ' nodes' → logprob: -5.006717681884766
    3. 'node' → logprob: -13.381717681884766
    4. '(nodes' → logprob: -14.881717681884766
    5. '	nodes' → logprob: -15.506717681884766
    6. '.nodes' → logprob: -16.006717681884766
    7. '_nodes' → logprob: -16.631717681884766
    8. '   ' → logprob: -18.256717681884766
    9. 'Nodes' → logprob: -19.006717681884766
    10. ' ' → logprob: -19.506717681884766

Token 443: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. 'node' → logprob: -17.625
    3. ',node' → logprob: -19.25
    4. '(node' → logprob: -19.375
    5. '[
' → logprob: -21.25
    6. '=node' → logprob: -21.375
    7. '[' → logprob: -22.25
    8. '[user' → logprob: -22.25
    9. '[[' → logprob: -22.375
    10. '```' → logprob: -22.5

Token 444: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.06525329500436783
    2. '[node' → logprob: -3.440253257751465
    3. 'node' → logprob: -3.940253257751465
    4. 'no' → logprob: -4.690253257751465
    5. '_node' → logprob: -6.065253257751465
    6. 'No' → logprob: -8.940253257751465
    7. ' node' → logprob: -11.315253257751465
    8. '[' → logprob: -12.190253257751465
    9. '(node' → logprob: -12.315253257751465
    10. '_nodes' → logprob: -13.565253257751465

Token 445: '].' (ID: 1651)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.060353413224220276
    2. '.right' → logprob: -3.6853535175323486
    3. '].' → logprob: -3.8103535175323486
    4. '.key' → logprob: -5.1853532791137695
    5. '.no' → logprob: -5.9353532791137695
    6. '.node' → logprob: -6.4353532791137695
    7. '[node' → logprob: -7.4353532791137695
    8. '.' → logprob: -8.43535327911377
    9. ' .' → logprob: -8.81035327911377
    10. ').' → logprob: -9.06035327911377

Token 446: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -9.13388703338569e-06
    2. '.left' → logprob: -12.750009536743164
    3. 'node' → logprob: -12.750009536743164
    4. 'key' → logprob: -12.875009536743164
    5. ' left' → logprob: -15.000009536743164
    6. 'right' → logprob: -15.500009536743164
    7. '[left' → logprob: -17.125009536743164
    8. 'pre' → logprob: -18.000009536743164
    9. '_left' → logprob: -18.250009536743164
    10. '[node' → logprob: -18.750009536743164

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.7014437364414334e-05
    2. ' ,' → logprob: -10.87502670288086
    3. ',node' → logprob: -11.75002670288086
    4. ')' → logprob: -16.50002670288086
    5. ',n' → logprob: -17.12502670288086
    6. ',user' → logprob: -18.50002670288086
    7. ',parent' → logprob: -19.00002670288086
    8. '   ' → logprob: -19.12502670288086
    9. ',input' → logprob: -19.12502670288086
    10. ',in' → logprob: -19.25002670288086

Token 448: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.029752805829048157
    2. ' preorder' → logprob: -3.529752731323242
    3. ' pre' → logprob: -13.279752731323242
    4. '(pre' → logprob: -14.779752731323242
    5. '	pre' → logprob: -15.404752731323242
    6. '_pre' → logprob: -17.154752731323242
    7. '.pre' → logprob: -17.779752731323242
    8. 'preh' → logprob: -18.404752731323242
    9. 'prepend' → logprob: -18.779752731323242
    10. 'preced' → logprob: -18.779752731323242

Token 449: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7155733704566956
    2. ')
' → logprob: -0.7155733704566956
    3. ',' → logprob: -3.840573310852051
    4. '   ' → logprob: -7.340573310852051
    5. ',)
' → logprob: -10.96557331085205
    6. ',
' → logprob: -11.96557331085205
    7. '),' → logprob: -12.09057331085205
    8. ')
' → logprob: -12.59057331085205
    9. ')

' → logprob: -12.84057331085205
    10. ',)' → logprob: -13.09057331085205

Token 450: '   ' (ID: 271)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.0670069232583046
    2. ' preorder' → logprob: -3.317006826400757
    3. '   ' → logprob: -3.567006826400757
    4. ' pre' → logprob: -8.317007064819336
    5. '(pre' → logprob: -9.942007064819336
    6. '	pre' → logprob: -11.317007064819336
    7. '_pre' → logprob: -13.442007064819336
    8. '  ' → logprob: -13.692007064819336
    9. '.pre' → logprob: -14.067007064819336
    10. ',' → logprob: -14.567007064819336

Token 451: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.0206720617134124e-05
    2. ' preorder' → logprob: -11.50001049041748
    3. '   ' → logprob: -19.000009536743164
    4. ' pre' → logprob: -19.750009536743164
    5. '	pre' → logprob: -21.000009536743164
    6. 'preced' → logprob: -21.125009536743164
    7. '_pre' → logprob: -21.125009536743164
    8. 'pr' → logprob: -21.250009536743164
    9. '(pre' → logprob: -21.500009536743164
    10. '       ' → logprob: -22.000009536743164

Token 452: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -9.088346359931165e-07
    2. '.append' → logprob: -15.250000953674316
    3. 'tree' → logprob: -15.625000953674316
    4. '_t' → logprob: -16.25
    5. '_' → logprob: -16.875
    6. '_TREE' → logprob: -17.0
    7. 'Tree' → logprob: -17.375
    8. '<Tree' → logprob: -17.75
    9. ')_' → logprob: -17.75
    10. '-tree' → logprob: -17.75

Token 453: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -0.00010735770774772391
    2. 'walk' → logprob: -9.500107765197754
    3. '_tree' → logprob: -10.375107765197754
    4. '_w' → logprob: -14.125107765197754
    5. '_nodes' → logprob: -15.250107765197754
    6. 'Walk' → logprob: -15.875107765197754
    7. '_' → logprob: -17.250106811523438
    8. '_list' → logprob: -17.375106811523438
    9. '.walk' → logprob: -17.625106811523438
    10. '_write' → logprob: -18.250106811523438

Token 454: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.625000953674316
    3. 'nodes' → logprob: -15.625000953674316
    4. '(n' → logprob: -17.875
    5. ' (' → logprob: -18.375
    6. '(
' → logprob: -18.5
    7. '(tokens' → logprob: -18.625
    8. '(numbers' → logprob: -18.75
    9. ' nodes' → logprob: -18.875
    10. '(keys' → logprob: -18.875

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007303050952032208
    2. '(nodes' → logprob: -7.375730514526367
    3. ',n' → logprob: -9.250730514526367
    4. 'nodes' → logprob: -12.375730514526367
    5. ' ,' → logprob: -13.500730514526367
    6. ' nodes' → logprob: -14.375730514526367
    7. '[n' → logprob: -14.375730514526367
    8. 's' → logprob: -15.375730514526367
    9. '	nodes' → logprob: -15.750730514526367
    10. '_nodes' → logprob: -16.125730514526367

Token 456: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.47408443689346313
    2. ' nodes' → logprob: -0.9740844368934631
    3. '(nodes' → logprob: -12.224084854125977
    4. '   ' → logprob: -13.849084854125977
    5. '	nodes' → logprob: -13.974084854125977
    6. '.nodes' → logprob: -14.974084854125977
    7. '_nodes' → logprob: -15.974084854125977
    8. ' ' → logprob: -16.099084854125977
    9. 'node' → logprob: -16.349084854125977
    10. '  ' → logprob: -17.849084854125977

Token 457: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -3.214019307051785e-05
    2. 'node' → logprob: -10.375032424926758
    3. '[' → logprob: -14.625032424926758
    4. '_no' → logprob: -15.750032424926758
    5. ',node' → logprob: -16.250032424926758
    6. '_node' → logprob: -16.500032424926758
    7. '(node' → logprob: -16.625032424926758
    8. '=node' → logprob: -17.625032424926758
    9. 'no' → logprob: -17.750032424926758
    10. '[
' → logprob: -17.750032424926758

Token 458: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -1.3425219549390022e-05
    2. 'no' → logprob: -11.37501335144043
    3. 'No' → logprob: -13.50001335144043
    4. 'node' → logprob: -16.25001335144043
    5. '[node' → logprob: -16.25001335144043
    6. '_node' → logprob: -16.37501335144043
    7. ']' → logprob: -16.62501335144043
    8. '_number' → logprob: -16.87501335144043
    9. '```' → logprob: -17.00001335144043
    10. '_or' → logprob: -17.00001335144043

Token 459: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2848397493362427
    2. '.left' → logprob: -1.7848397493362427
    3. '.right' → logprob: -2.534839630126953
    4. ').' → logprob: -8.409839630126953
    5. 'No' → logprob: -8.409839630126953
    6. '_no' → logprob: -9.284839630126953
    7. '.key' → logprob: -9.284839630126953
    8. '.no' → logprob: -10.534839630126953
    9. 'left' → logprob: -10.659839630126953
    10. ']' → logprob: -10.909839630126953

Token 460: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.10021097958087921
    2. 'left' → logprob: -2.3502109050750732
    3. 'key' → logprob: -12.850211143493652
    4. '.right' → logprob: -13.850211143493652
    5. '.left' → logprob: -14.975211143493652
    6. ' right' → logprob: -15.850211143493652
    7. 'node' → logprob: -16.100210189819336
    8. '
' → logprob: -17.100210189819336
    9. '[right' → logprob: -17.100210189819336
    10. '	right' → logprob: -17.350210189819336

Token 461: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.301394023466855e-05
    2. ')' → logprob: -10.250062942504883
    3. ' ,' → logprob: -10.875062942504883
    4. ',in' → logprob: -12.625062942504883
    5. '(pre' → logprob: -13.625062942504883
    6. ',parent' → logprob: -14.375062942504883
    7. '<|end|>' → logprob: -14.500062942504883
    8. ',p' → logprob: -14.625062942504883
    9. '   ' → logprob: -15.250062942504883
    10. ',node' → logprob: -15.500062942504883

Token 462: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.12692947685718536
    2. ' preorder' → logprob: -2.126929521560669
    3. ' pre' → logprob: -14.00192928314209
    4. 'order' → logprob: -15.62692928314209
    5. '(pre' → logprob: -15.75192928314209
    6. '	pre' → logprob: -16.001930236816406
    7. '_pre' → logprob: -16.501930236816406
    8. '.pre' → logprob: -18.376930236816406
    9. ' ' → logprob: -18.376930236816406
    10. 'preced' → logprob: -18.626930236816406

Token 463: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '   ' → logprob: -17.375001907348633
    5. ')

' → logprob: -17.500001907348633
    6. ')#' → logprob: -17.625001907348633
    7. ')return' → logprob: -17.625001907348633
    8. '<|end|>' → logprob: -18.375001907348633
    9. ')}' → logprob: -19.125001907348633
    10. '),' → logprob: -19.500001907348633

Token 464: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.629921436891891e-05
    2. 'post' → logprob: -10.75002670288086
    3. ' def' → logprob: -12.75002670288086
    4. '
' → logprob: -14.25002670288086
    5. '```' → logprob: -15.25002670288086
    6. 'in' → logprob: -15.37502670288086
    7. '#' → logprob: -15.50002670288086
    8. '   ' → logprob: -16.25002670288086
    9. 'root' → logprob: -16.50002670288086
    10. 'd' → logprob: -16.75002670288086

Token 465: ' find' (ID: 1646)
  Prédit: 'post'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'post' → logprob: -0.012825352139770985
    2. ' post' → logprob: -4.5128254890441895
    3. 'main' → logprob: -6.3878254890441895
    4. 'def' → logprob: -9.762825012207031
    5. ' main' → logprob: -10.887825012207031
    6. '_post' → logprob: -11.762825012207031
    7. 'level' → logprob: -13.387825012207031
    8. 'solve' → logprob: -13.512825012207031
    9. 'delete' → logprob: -13.762825012207031
    10. 'in' → logprob: -14.137825012207031

Token 466: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.12315265089273453
    2. '(node' → logprob: -2.623152732849121
    3. '(' → logprob: -4.123152732849121
    4. '_node' → logprob: -4.748152732849121
    5. '(key' → logprob: -4.748152732849121
    6. '_nodes' → logprob: -5.123152732849121
    7. '(root' → logprob: -6.498152732849121
    8. '_key' → logprob: -6.748152732849121
    9. '(keys' → logprob: -7.748152732849121
    10. 'nodes' → logprob: -8.748152732849121

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014360710047185421
    2. '(nodes' → logprob: -4.3893609046936035
    3. ',n' → logprob: -7.0143609046936035
    4. ',node' → logprob: -7.8893609046936035
    5. ' ,' → logprob: -8.139360427856445
    6. '_nodes' → logprob: -9.264360427856445
    7. '):' → logprob: -9.764360427856445
    8. '(node' → logprob: -10.014360427856445
    9. ',
' → logprob: -11.389360427856445
    10. '<|end|>' → logprob: -11.639360427856445

Token 468: ' tgt' (ID: 109597)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7945077419281006
    2. 'node' → logprob: -1.1695077419281006
    3. ' key' → logprob: -1.6695077419281006
    4. ' node' → logprob: -3.0445077419281006
    5. 'target' → logprob: -7.41950798034668
    6. 'root' → logprob: -8.04450798034668
    7. 'cur' → logprob: -8.29450798034668
    8. ' target' → logprob: -9.04450798034668
    9. ' root' → logprob: -9.16950798034668
    10. ' cur' → logprob: -9.79450798034668

Token 469: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.3224286139011383
    2. '_key' → logprob: -1.322428584098816
    3. '_nodes' → logprob: -4.9474287033081055
    4. '_no' → logprob: -7.1974287033081055
    5. '):' → logprob: -7.6974287033081055
    6. '):
' → logprob: -7.9474287033081055
    7. 'key' → logprob: -9.322428703308105
    8. ')' → logprob: -9.322428703308105
    9. 'node' → logprob: -9.572428703308105
    10. ':' → logprob: -9.947428703308105

Token 470: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0011746286181733012
    2. ',' → logprob: -7.376174449920654
    3. '_key' → logprob: -8.126174926757812
    4. '):' → logprob: -9.876174926757812
    5. 'no' → logprob: -10.001174926757812
    6. 'No' → logprob: -10.376174926757812
    7. '):
' → logprob: -10.876174926757812
    8. ' ,' → logprob: -11.126174926757812
    9. '_n' → logprob: -11.376174926757812
    10. ')' → logprob: -11.501174926757812

Token 471: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05027780681848526
    2. '):
' → logprob: -3.3002777099609375
    3. ',' → logprob: -4.6752777099609375
    4. ' ):' → logprob: -6.3002777099609375
    5. ')' → logprob: -7.3002777099609375
    6. '   ' → logprob: -9.425277709960938
    7. ':' → logprob: -9.550277709960938
    8. '):
' → logprob: -9.550277709960938
    9. ',node' → logprob: -10.425277709960938
    10. ' ):
' → logprob: -10.550277709960938

Token 472: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04284365475177765
    2. 'cur' → logprob: -3.2928435802459717
    3. ' cur' → logprob: -6.042843818664551
    4. 'if' → logprob: -6.292843818664551
    5. 'current' → logprob: -7.917843818664551
    6. ' if' → logprob: -8.79284381866455
    7. '	cur' → logprob: -10.79284381866455
    8. ' current' → logprob: -11.04284381866455
    9. 'node' → logprob: -12.16784381866455
    10. '    
' → logprob: -13.04284381866455

Token 473: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.004834515042603016
    2. 'if' → logprob: -5.7548346519470215
    3. '   ' → logprob: -7.0048346519470215
    4. 'current' → logprob: -7.5048346519470215
    5. ' cur' → logprob: -8.754834175109863
    6. 'def' → logprob: -10.504834175109863
    7. 'node' → logprob: -11.879834175109863
    8. 'curr' → logprob: -13.004834175109863
    9. 'while' → logprob: -13.379834175109863
    10. ' if' → logprob: -14.629834175109863

Token 474: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.002533567836508155
    2. '_no' → logprob: -7.127533435821533
    3. '_token' → logprob: -7.627533435821533
    4. '_nodes' → logprob: -7.752533435821533
    5. '_' → logprob: -8.127533912658691
    6. '_key' → logprob: -8.127533912658691
    7. ' =' → logprob: -9.127533912658691
    8. '_n' → logprob: -10.002533912658691
    9. '=' → logprob: -10.627533912658691
    10. '=_' → logprob: -11.002533912658691

Token 475: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0605941005051136
    2. ' =' → logprob: -3.185594081878662
    3. '=' → logprob: -4.060594081878662
    4. 'No' → logprob: -9.43559455871582
    5. 'no' → logprob: -9.68559455871582
    6. '_key' → logprob: -10.56059455871582
    7. '   ' → logprob: -11.56059455871582
    8. '=no' → logprob: -11.81059455871582
    9. ' ' → logprob: -12.56059455871582
    10. ' no' → logprob: -12.56059455871582

Token 476: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141392946243286
    2. '=' → logprob: -1.701413869857788
    3. ' =
' → logprob: -15.326414108276367
    4. '=root' → logprob: -15.326414108276367
    5. '=
' → logprob: -16.451414108276367
    6. ' ' → logprob: -16.451414108276367
    7. '＝' → logprob: -18.576414108276367
    8. ',' → logprob: -18.826414108276367
    9. '=node' → logprob: -19.201414108276367
    10. ' ' → logprob: -19.201414108276367

Token 477: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0485910028219223
    2. ' root' → logprob: -3.048590898513794
    3. '	root' → logprob: -12.798590660095215
    4. '   ' → logprob: -15.048590660095215
    5. '_root' → logprob: -15.673590660095215
    6. '[root' → logprob: -15.923590660095215
    7. '=root' → logprob: -16.54859161376953
    8. '(root' → logprob: -16.67359161376953
    9. 'roots' → logprob: -16.79859161376953
    10. ' roots' → logprob: -17.54859161376953

Token 478: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005538671393878758
    2. '_no' → logprob: -7.500554084777832
    3. 'node' → logprob: -14.625554084777832
    4. '_nodes' → logprob: -15.125554084777832
    5. 'Node' → logprob: -16.500553131103516
    6. 'No' → logprob: -17.375553131103516
    7. '_' → logprob: -17.625553131103516
    8. '_NODE' → logprob: -17.875553131103516
    9. 'no' → logprob: -18.125553131103516
    10. '_n' → logprob: -18.125553131103516

Token 479: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.011187167838215828
    2. 'no' → logprob: -4.5111870765686035
    3. 'No' → logprob: -8.886187553405762
    4. '_' → logprob: -15.136187553405762
    5. 'root' → logprob: -15.511187553405762
    6. 'n' → logprob: -16.636186599731445
    7. 'node' → logprob: -17.011186599731445
    8. '_none' → logprob: -17.011186599731445
    9. '_n' → logprob: -17.136186599731445
    10. ' no' → logprob: -17.261186599731445

Token 480: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6332105994224548
    2. '
' → logprob: -0.8832105994224548
    3. 'while' → logprob: -3.1332106590270996
    4. ' while' → logprob: -5.2582106590271
    5. '<|end|>' → logprob: -5.3832106590271
    6. '    
' → logprob: -7.0082106590271
    7. '	while' → logprob: -7.7582106590271
    8. ',' → logprob: -8.508210182189941
    9. ')' → logprob: -9.008210182189941
    10. '  
' → logprob: -9.258210182189941

Token 481: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011140725575387478
    2. ' while' → logprob: -4.761140823364258
    3. 'while' → logprob: -6.386140823364258
    4. '
' → logprob: -8.011140823364258
    5. '<|end|>' → logprob: -8.136140823364258
    6. '	while' → logprob: -9.011140823364258
    7. '    
' → logprob: -9.761140823364258
    8. '  ' → logprob: -11.136140823364258
    9. 'While' → logprob: -12.886140823364258
    10. '<|end|>' → logprob: -13.011140823364258

Token 482: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.022200649604201317
    2. '   ' → logprob: -4.022200584411621
    3. ' while' → logprob: -5.522200584411621
    4. '
' → logprob: -10.147200584411621
    5. '	while' → logprob: -12.147200584411621
    6. '    
' → logprob: -14.647200584411621
    7. 'While' → logprob: -15.272200584411621
    8. '```' → logprob: -15.647200584411621
    9. '  ' → logprob: -16.897201538085938
    10. 'if' → logprob: -17.772201538085938

Token 483: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -5.872261317563243e-05
    2. ' cur' → logprob: -9.750059127807617
    3. '(cur' → logprob: -14.750059127807617
    4. '	cur' → logprob: -19.000059127807617
    5. '   ' → logprob: -19.125059127807617
    6. ' ' → logprob: -22.875059127807617
    7. '[cur' → logprob: -22.875059127807617
    8. 'True' → logprob: -24.000059127807617
    9. 'not' → logprob: -24.125059127807617
    10. '  ' → logprob: -24.375059127807617

Token 484: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.6789137084269896e-05
    2. 'node' → logprob: -11.00003719329834
    3. '_token' → logprob: -11.25003719329834
    4. 'Node' → logprob: -13.25003719329834
    5. '_no' → logprob: -13.50003719329834
    6. '_nodes' → logprob: -13.62503719329834
    7. 'cur' → logprob: -14.25003719329834
    8. '_code' → logprob: -14.62503719329834
    9. '_' → logprob: -15.12503719329834
    10. '_NODE' → logprob: -15.37503719329834

Token 485: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0009151478880085051
    2. 'no' → logprob: -7.000915050506592
    3. 'No' → logprob: -13.12591552734375
    4. ' no' → logprob: -14.62591552734375
    5. '	no' → logprob: -14.87591552734375
    6. '   ' → logprob: -15.87591552734375
    7. '_node' → logprob: -15.87591552734375
    8. '```' → logprob: -16.50091552734375
    9. '__' → logprob: -16.62591552734375
    10. ' ' → logprob: -16.87591552734375

Token 486: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.101076140999794
    2. 'is' → logprob: -2.351076126098633
    3. '!=' → logprob: -7.226076126098633
    4. ' !=' → logprob: -9.101076126098633
    5. 'and' → logprob: -10.726076126098633
    6. ' and' → logprob: -12.851076126098633
    7. '	is' → logprob: -12.976076126098633
    8. ' ' → logprob: -13.101076126098633
    9. '!' → logprob: -15.101076126098633
    10. '   ' → logprob: -16.226076126098633

Token 487: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.10026393085718155
    2. ' not' → logprob: -2.350263833999634
    3. 'n' → logprob: -11.600263595581055
    4. '   ' → logprob: -11.850263595581055
    5. 't' → logprob: -11.975263595581055
    6. 'None' → logprob: -11.975263595581055
    7. '
' → logprob: -12.225263595581055
    8. 'Not' → logprob: -12.350263595581055
    9. 'node' → logprob: -12.475263595581055
    10. 'cur' → logprob: -12.850263595581055

Token 488: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0004306692280806601
    2. ' None' → logprob: -8.000431060791016
    3. 'not' → logprob: -9.625431060791016
    4. 't' → logprob: -10.500431060791016
    5. 'none' → logprob: -14.500431060791016
    6. '   ' → logprob: -15.250431060791016
    7. '(None' → logprob: -15.375431060791016
    8. '=None' → logprob: -15.625431060791016
    9. '_None' → logprob: -16.000431060791016
    10. 'Not' → logprob: -16.125431060791016

Token 489: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00406344048678875
    2. 'and' → logprob: -5.629063606262207
    3. ':
' → logprob: -8.504063606262207
    4. ':' → logprob: -8.879063606262207
    5. '   ' → logprob: -9.254063606262207
    6. '<|end|>' → logprob: -11.504063606262207
    7. '       ' → logprob: -12.004063606262207
    8. ' ' → logprob: -12.879063606262207
    9. '	and' → logprob: -13.254063606262207
    10. ',' → logprob: -13.629063606262207

Token 490: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005999305285513401
    2. '   ' → logprob: -5.3809990882873535
    3. ' if' → logprob: -7.5059990882873535
    4. '<|end|>' → logprob: -7.5059990882873535
    5. 'if' → logprob: -9.505999565124512
    6. ' and' → logprob: -9.755999565124512
    7. '
' → logprob: -10.005999565124512
    8. '```' → logprob: -10.755999565124512
    9. '<|end|>' → logprob: -11.005999565124512
    10. ' ' → logprob: -11.880999565124512

Token 491: ' cur' (ID: 4396)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024056503549218178
    2. '       ' → logprob: -4.024056434631348
    3. ' if' → logprob: -5.149056434631348
    4. 'cur' (adapté à ' cur') → logprob: -9.899056434631348
    5. '   ' → logprob: -11.524056434631348
    6. '
' → logprob: -12.024056434631348
    7. 'node' → logprob: -12.024056434631348
    8. '	if' → logprob: -12.274056434631348
    9. '{
' → logprob: -13.274056434631348
    10. 'If' → logprob: -13.399056434631348

Token 492: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.26404374837875366
    2. '_key' → logprob: -1.5140438079833984
    3. '_token' → logprob: -5.389043807983398
    4. ' =' → logprob: -6.389043807983398
    5. '_nodes' → logprob: -6.639043807983398
    6. '._' → logprob: -7.014043807983398
    7. 'node' → logprob: -7.639043807983398
    8. '=' → logprob: -7.639043807983398
    9. 'key' → logprob: -7.764043807983398
    10. 'Node' → logprob: -8.014043807983398

Token 493: ' =' (ID: 314)
  Prédit: '_no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0005572011577896774
    2. 'No' → logprob: -8.125556945800781
    3. 'no' → logprob: -9.250556945800781
    4. '._' → logprob: -9.625556945800781
    5. '.key' → logprob: -10.750556945800781
    6. '_key' → logprob: -11.000556945800781
    7. 'key' → logprob: -11.375556945800781
    8. '=' → logprob: -11.375556945800781
    9. '.no' → logprob: -11.500556945800781
    10. '_NO' → logprob: -12.500556945800781

Token 494: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.048602476716041565
    2. ' nodes' → logprob: -3.04860258102417
    3. '	nodes' → logprob: -11.923602104187012
    4. '(nodes' → logprob: -12.423602104187012
    5. '   ' → logprob: -12.923602104187012
    6. '.nodes' → logprob: -14.173602104187012
    7. '
' → logprob: -14.173602104187012
    8. 'node' → logprob: -15.173602104187012
    9. ' ' → logprob: -16.298603057861328
    10. '_nodes' → logprob: -16.548603057861328

Token 495: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -4.320199877838604e-07
    2. 'cur' → logprob: -14.875
    3. '[curr' → logprob: -17.625
    4. '[current' → logprob: -17.875
    5. '[root' → logprob: -18.5
    6. '(cur' → logprob: -18.625
    7. '[' → logprob: -18.875
    8. '[c' → logprob: -19.125
    9. '[key' → logprob: -19.625
    10. '	cur' → logprob: -20.5

Token 496: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.054500666621607e-06
    2. '_no' → logprob: -13.75000286102295
    3. 'Node' → logprob: -13.87500286102295
    4. 'node' → logprob: -14.87500286102295
    5. '_NODE' → logprob: -15.37500286102295
    6. '_number' → logprob: -16.500003814697266
    7. '_key' → logprob: -17.125003814697266
    8. 'ノ' → logprob: -17.125003814697266
    9. '_token' → logprob: -17.500003814697266
    10. '_nodes' → logprob: -17.500003814697266

Token 497: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.00021855637896806002
    2. 'no' → logprob: -8.500218391418457
    3. 'cur' → logprob: -12.000218391418457
    4. '[cur' → logprob: -12.250218391418457
    5. 'No' → logprob: -12.625218391418457
    6. '_cur' → logprob: -14.625218391418457
    7. '_' → logprob: -15.875218391418457
    8. '(cur' → logprob: -16.875219345092773
    9. '_n' → logprob: -17.625219345092773
    10. '_not' → logprob: -17.750219345092773

Token 498: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0537060983479023
    2. ')' → logprob: -3.178706169128418
    3. ').' → logprob: -5.678706169128418
    4. '.key' → logprob: -5.928706169128418
    5. '
' → logprob: -6.303706169128418
    6. '   ' → logprob: -6.553706169128418
    7. ']
' → logprob: -6.928706169128418
    8. '       ' → logprob: -9.178706169128418
    9. ' ' → logprob: -9.678706169128418
    10. ']' → logprob: -9.928706169128418

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009168371558189392
    2. '   ' → logprob: -5.1341681480407715
    3. '<|end|>' → logprob: -6.5091681480407715
    4. ' if' → logprob: -6.7591681480407715
    5. '        
' → logprob: -8.50916862487793
    6. '
' → logprob: -9.63416862487793
    7. ' ' → logprob: -9.63416862487793
    8. ' 
' → logprob: -9.88416862487793
    9. '<|end|>' → logprob: -10.25916862487793
    10. '        ' → logprob: -10.50916862487793

Token 500: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3068755567073822
    2. '       ' → logprob: -1.8068755865097046
    3. ' if' → logprob: -2.306875467300415
    4. '   ' → logprob: -7.681875705718994
    5. '```' → logprob: -10.556875228881836
    6. '	if' → logprob: -10.931875228881836
    7. '           ' → logprob: -12.681875228881836
    8. ' ' → logprob: -12.806875228881836
    9. '``' → logprob: -13.431875228881836
    10. '  ' → logprob: -13.556875228881836

Token 501: ' cur' (ID: 4396)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10228980332612991
    2. 'cur' → logprob: -2.852289915084839
    3. ' tgt' → logprob: -3.352289915084839
    4. ' cur' → logprob: -5.47728967666626
    5. '	t' → logprob: -9.477290153503418
    6. ' t' → logprob: -9.602290153503418
    7. ' ' → logprob: -9.852290153503418
    8. '   ' → logprob: -10.352290153503418
    9. 'tg' → logprob: -10.602290153503418
    10. '  ' → logprob: -11.102290153503418

Token 502: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.9743012671824545e-05
    2. 'node' → logprob: -11.250020027160645
    3. '_nodes' → logprob: -13.125020027160645
    4. '_key' → logprob: -13.125020027160645
    5. '_' → logprob: -14.625020027160645
    6. 'Node' → logprob: -14.750020027160645
    7. '_code' → logprob: -15.125020027160645
    8. '_token' → logprob: -15.250020027160645
    9. '_NODE' → logprob: -15.375020027160645
    10. '```' → logprob: -15.875020027160645

Token 503: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00031949623371474445
    2. '.' → logprob: -8.750319480895996
    3. 'key' → logprob: -9.625319480895996
    4. '.no' → logprob: -10.375319480895996
    5. '_no' → logprob: -10.750319480895996
    6. '_key' → logprob: -11.500319480895996
    7. ' .' → logprob: -11.625319480895996
    8. 'No' → logprob: -12.250319480895996
    9. '==' → logprob: -12.750319480895996
    10. '_.' → logprob: -12.875319480895996

Token 504: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.078916996717453
    2. ' ==' → logprob: -2.5789170265197754
    3. '>' → logprob: -11.203916549682617
    4. '==
' → logprob: -12.203916549682617
    5. '=' → logprob: -13.078916549682617
    6. '<' → logprob: -13.078916549682617
    7. '()==' → logprob: -13.828916549682617
    8. ' >' → logprob: -14.328916549682617
    9. ')==' → logprob: -14.328916549682617
    10. ' ' → logprob: -14.453916549682617

Token 505: ' tgt' (ID: 109597)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04861053079366684
    2. ' tgt' → logprob: -3.0486104488372803
    3. '	t' → logprob: -11.42361068725586
    4. ' t' → logprob: -11.92361068725586
    5. '   ' → logprob: -13.67361068725586
    6. 'target' → logprob: -13.67361068725586
    7. ' targ' → logprob: -13.67361068725586
    8. '`t' → logprob: -14.54861068725586
    9. ' ' → logprob: -15.04861068725586
    10. '(t' → logprob: -15.54861068725586

Token 506: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.5822400857578032e-05
    2. 'node' → logprob: -11.250025749206543
    3. '_key' → logprob: -12.500025749206543
    4. '_' → logprob: -12.625025749206543
    5. '_NODE' → logprob: -13.125025749206543
    6. 'Node' → logprob: -14.250025749206543
    7. '
' → logprob: -14.750025749206543
    8. '_no' → logprob: -15.250025749206543
    9. '_Node' → logprob: -15.375025749206543
    10. '_nodes' → logprob: -15.625025749206543

Token 507: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.00024311232846230268
    2. 'no' → logprob: -8.500243186950684
    3. '_node' → logprob: -10.750243186950684
    4. 'No' → logprob: -11.000243186950684
    5. '_key' → logprob: -14.625243186950684
    6. 'node' → logprob: -14.875243186950684
    7. '_NO' → logprob: -16.125242233276367
    8. '	no' → logprob: -16.250242233276367
    9. '_No' → logprob: -16.625242233276367
    10. '_' → logprob: -16.750242233276367

Token 508: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10040991753339767
    2. ':
' → logprob: -2.350409984588623
    3. ':return' → logprob: -9.100409507751465
    4. '       ' → logprob: -10.475409507751465
    5. ' :' → logprob: -10.975409507751465
    6. '           ' → logprob: -11.475409507751465
    7. ' :
' → logprob: -11.475409507751465
    8. '):
' → logprob: -11.725409507751465
    9. '   ' → logprob: -12.225409507751465
    10. ' and' → logprob: -12.350409507751465

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000453910295618698
    2. ' return' → logprob: -7.875453948974609
    3. ':
' → logprob: -11.00045394897461
    4. '       ' → logprob: -11.37545394897461
    5. 'return' → logprob: -11.75045394897461
    6. ' break' → logprob: -12.25045394897461
    7. ':' → logprob: -12.25045394897461
    8. ':return' → logprob: -12.25045394897461
    9. '            
' → logprob: -12.62545394897461
    10. ' :' → logprob: -12.62545394897461

Token 510: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2017933875322342
    2. 'return' (adapté à ' return') → logprob: -1.9517934322357178
    3. ' return' → logprob: -3.2017934322357178
    4. '	return' → logprob: -11.576793670654297
    5. '               ' → logprob: -11.826793670654297
    6. '		' → logprob: -12.701793670654297
    7. '       ' → logprob: -12.951793670654297
    8. '{return' → logprob: -13.076793670654297
    9. '   ' → logprob: -13.701793670654297
    10. ':return' → logprob: -14.201793670654297

Token 511: ' True' (ID: 6432)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.020565012469887733
    2. ' cur' → logprob: -3.8955650329589844
    3. '   ' → logprob: -11.770565032958984
    4. 'nodes' → logprob: -11.770565032958984
    5. ' nodes' → logprob: -12.395565032958984
    6. '	cur' → logprob: -13.645565032958984
    7. ' ' → logprob: -13.770565032958984
    8. 'node' → logprob: -15.020565032958984
    9. 'curr' → logprob: -15.895565032958984
    10. 'Cur' → logprob: -16.145565032958984

Token 512: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002494191285222769
    2. '        
' → logprob: -9.375249862670898
    3. ' elif' → logprob: -9.625249862670898
    4. '
' → logprob: -10.250249862670898
    5. 'elif' → logprob: -10.250249862670898
    6. '<|end|>' → logprob: -11.875249862670898
    7. '   ' → logprob: -12.500249862670898
    8. ' 
' → logprob: -12.875249862670898
    9. '           ' → logprob: -12.875249862670898
    10. ' if' → logprob: -12.875249862670898

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.4987974029500037e-05
    2. 'elif' → logprob: -11.250024795532227
    3. ' elif' → logprob: -11.750024795532227
    4. '        
' → logprob: -13.375024795532227
    5. '   ' → logprob: -14.250024795532227
    6. '
' → logprob: -14.750024795532227
    7. '           ' → logprob: -15.000024795532227
    8. ' if' → logprob: -15.500024795532227
    9. '      ' → logprob: -15.500024795532227
    10. '<|end|>' → logprob: -15.500024795532227

Token 514: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5577605366706848
    2. 'elif' (adapté à ' elif') → logprob: -0.9327605366706848
    3. ' elif' → logprob: -3.68276047706604
    4. 'if' → logprob: -5.182760715484619
    5. ' if' → logprob: -5.807760715484619
    6. '   ' → logprob: -9.057760238647461
    7. 'cur' → logprob: -9.182760238647461
    8. ' cur' → logprob: -11.182760238647461
    9. '           ' → logprob: -11.182760238647461
    10. '	elif' → logprob: -12.057760238647461

Token 515: ' tgt' (ID: 109597)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.32707783579826355
    2. ' tgt' → logprob: -1.327077865600586
    3. 'cur' → logprob: -4.827077865600586
    4. ' cur' → logprob: -5.202077865600586
    5. ' t' → logprob: -9.202077865600586
    6. ' ' → logprob: -10.577077865600586
    7. ' targ' → logprob: -10.827077865600586
    8. 'target' → logprob: -11.202077865600586
    9. '	t' → logprob: -11.389577865600586
    10. '   ' → logprob: -11.827077865600586

Token 516: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0003398726985324174
    2. '_' → logprob: -8.25033950805664
    3. 'node' → logprob: -10.00033950805664
    4. ' _' → logprob: -10.87533950805664
    5. ' ' → logprob: -13.12533950805664
    6. '   ' → logprob: -13.25033950805664
    7. 'Node' → logprob: -13.87533950805664
    8. '_key' → logprob: -14.00033950805664
    9. ' node' → logprob: -14.12533950805664
    10. '_NODE' → logprob: -14.12533950805664

Token 517: '_no' (ID: 13575)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.1432780772447586
    2. '_no' → logprob: -2.143278121948242
    3. 'node' → logprob: -4.268278121948242
    4. 'no' → logprob: -6.643278121948242
    5. '_key' → logprob: -7.768278121948242
    6. 'No' → logprob: -8.518278121948242
    7. 'key' → logprob: -9.643278121948242
    8. 'cur' → logprob: -10.018278121948242
    9. 't' → logprob: -10.518278121948242
    10. '.node' → logprob: -10.893278121948242

Token 518: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10028073936700821
    2. '<' → logprob: -2.35028076171875
    3. ' >' → logprob: -9.97528076171875
    4. ' ' → logprob: -11.22528076171875
    5. '>' → logprob: -11.22528076171875
    6. ' ' → logprob: -14.72528076171875
    7. '<com' → logprob: -15.97528076171875
    8. '<int' → logprob: -16.47528076171875
    9. '<class' → logprob: -17.10028076171875
    10. '<n' → logprob: -17.60028076171875

Token 519: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.023245712742209435
    2. ' cur' → logprob: -3.7732458114624023
    3. '	cur' → logprob: -16.273244857788086
    4. '(cur' → logprob: -17.273244857788086
    5. '[cur' → logprob: -17.273244857788086
    6. ' ' → logprob: -17.773244857788086
    7. 'curr' → logprob: -18.898244857788086
    8. '_cur' → logprob: -19.023244857788086
    9. '   ' → logprob: -19.148244857788086
    10. '.cur' → logprob: -19.273244857788086

Token 520: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.292907877039397e-06
    2. 'node' → logprob: -12.75000286102295
    3. 'ode' → logprob: -15.62500286102295
    4. 'Node' → logprob: -17.250003814697266
    5. '_' → logprob: -17.875003814697266
    6. '_NODE' → logprob: -17.875003814697266
    7. 'cur' → logprob: -18.250003814697266
    8. '_key' → logprob: -18.500003814697266
    9. '_no' → logprob: -18.625003814697266
    10. '_Node' → logprob: -18.875003814697266

Token 521: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.00028946425300091505
    2. '_no' → logprob: -8.250289916992188
    3. 'No' → logprob: -11.500289916992188
    4. '.no' → logprob: -11.625289916992188
    5. 'no' → logprob: -12.375289916992188
    6. 'key' → logprob: -13.250289916992188
    7. ' .' → logprob: -13.875289916992188
    8. '.' → logprob: -14.750289916992188
    9. '_key' → logprob: -15.000289916992188
    10. ' key' → logprob: -15.625289916992188

Token 522: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31449034810066223
    2. ':' → logprob: -1.3144903182983398
    3. '           ' → logprob: -7.31449031829834
    4. '       ' → logprob: -7.68949031829834
    5. ' :
' → logprob: -10.18949031829834
    6. ':
' → logprob: -10.56449031829834
    7. '):
' → logprob: -10.81449031829834
    8. ' :' → logprob: -12.31449031829834
    9. ':

' → logprob: -12.43949031829834
    10. '   ' → logprob: -12.81449031829834

Token 523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06476490944623947
    2. ':
' → logprob: -2.814764976501465
    3. ':' → logprob: -6.564764976501465
    4. '
' → logprob: -6.939764976501465
    5. '       ' → logprob: -8.689764976501465
    6. ' :
' → logprob: -9.439764976501465
    7. '[cur' → logprob: -10.439764976501465
    8. 'cur' → logprob: -10.564764976501465
    9. ' cur' → logprob: -11.189764976501465
    10. '):
' → logprob: -11.314764976501465

Token 524: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.050308190286159515
    2. ' cur' → logprob: -3.0503082275390625
    3. '           ' → logprob: -6.4253082275390625
    4. '
' → logprob: -9.925308227539062
    5. '	cur' → logprob: -10.800308227539062
    6. '[cur' → logprob: -11.425308227539062
    7. '_cur' → logprob: -12.050308227539062
    8. '(cur' → logprob: -12.050308227539062
    9. '.cur' → logprob: -12.550308227539062
    10. '       ' → logprob: -13.925308227539062

Token 525: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -3.128163257315464e-07
    2. 'node' → logprob: -15.375
    3. '_nodes' → logprob: -16.875
    4. '_' → logprob: -17.125
    5. '_NODE' → logprob: -17.25
    6. 'Node' → logprob: -17.375
    7. '_Node' → logprob: -17.875
    8. 'ode' → logprob: -19.0
    9. '_token' → logprob: -19.125
    10. '_code' → logprob: -19.125

Token 526: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.12102285772562027
    2. '=' → logprob: -2.871022939682007
    3. ' =' → logprob: -2.871022939682007
    4. 'no' → logprob: -7.996022701263428
    5. 'No' → logprob: -8.496023178100586
    6. '.no' → logprob: -9.621023178100586
    7. ' ' → logprob: -10.246023178100586
    8. '=no' → logprob: -11.246023178100586
    9. '.' → logprob: -11.746023178100586
    10. '.key' → logprob: -12.246023178100586

Token 527: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519291639328003
    2. '=' → logprob: -1.5019291639328003
    3. ' ' → logprob: -16.626928329467773
    4. ',' → logprob: -18.876928329467773
    5. ' =
' → logprob: -18.876928329467773
    6. '.=' → logprob: -19.001928329467773
    7. '=node' → logprob: -19.126928329467773
    8. '＝' → logprob: -19.376928329467773
    9. '=
' → logprob: -19.751928329467773
    10. '=sys' → logprob: -19.876928329467773

Token 528: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.03387124836444855
    2. ' cur' → logprob: -3.4088711738586426
    3. 'nodes' → logprob: -8.7838716506958
    4. ' nodes' → logprob: -9.6588716506958
    5. '	cur' → logprob: -13.1588716506958
    6. ' ' → logprob: -13.2838716506958
    7. '   ' → logprob: -13.4088716506958
    8. '           ' → logprob: -13.9088716506958
    9. '       ' → logprob: -14.0338716506958
    10. '[cur' → logprob: -14.9088716506958

Token 529: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -6.704273118884885e-07
    2. 'ode' → logprob: -15.000000953674316
    3. '_nodes' → logprob: -16.0
    4. 'node' → logprob: -16.875
    5. 'Node' → logprob: -16.875
    6. '_NODE' → logprob: -17.375
    7. '_Node' → logprob: -17.875
    8. 'odes' → logprob: -18.875
    9. '<Node' → logprob: -18.875
    10. '[node' → logprob: -19.0

Token 530: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -1.5048530030981055e-06
    2. 'left' → logprob: -14.000001907348633
    3. '.parent' → logprob: -14.500001907348633
    4. '.' → logprob: -15.625001907348633
    5. ' .' → logprob: -18.375001907348633
    6. '.Left' → logprob: -19.500001907348633
    7. '[left' → logprob: -20.125001907348633
    8. '.right' → logprob: -20.625001907348633
    9. '	left' → logprob: -20.625001907348633
    10. '_left' → logprob: -21.250001907348633

Token 531: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00033784625702537596
    2. ' else' → logprob: -8.625337600708008
    3. 'else' → logprob: -9.125337600708008
    4. '
' → logprob: -10.000337600708008
    5. '	' → logprob: -13.625337600708008
    6. 'elif' → logprob: -13.875337600708008
    7. '   ' → logprob: -15.000337600708008
    8. '	else' → logprob: -15.000337600708008
    9. '<|end|>' → logprob: -15.000337600708008
    10. ' elif' → logprob: -15.625337600708008

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000923965300898999
    2. ' else' → logprob: -7.625924110412598
    3. 'else' → logprob: -7.750924110412598
    4. '	' → logprob: -13.750924110412598
    5. '	else' → logprob: -13.750924110412598
    6. '           ' → logprob: -14.125924110412598
    7. '<|end|>' → logprob: -14.125924110412598
    8. 'elif' → logprob: -14.500924110412598
    9. '   ' → logprob: -14.875924110412598
    10. '```' → logprob: -15.125924110412598

Token 533: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3715636134147644
    2. ' else' → logprob: -1.7465636730194092
    3. 'else' (adapté à ' else') → logprob: -1.9965636730194092
    4. '	else' → logprob: -8.746563911437988
    5. '   ' → logprob: -12.246563911437988
    6. '	' → logprob: -12.496563911437988
    7. '           ' → logprob: -13.871563911437988
    8. '_else' → logprob: -14.246563911437988
    9. 'elif' → logprob: -14.371563911437988
    10. '
' → logprob: -14.996563911437988

Token 534: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.060481783002614975
    2. ':' → logprob: -3.1854817867279053
    3. ':
' → logprob: -4.060481548309326
    4. '       ' → logprob: -10.060482025146484
    5. '          ' → logprob: -11.310482025146484
    6. '{
' → logprob: -11.685482025146484
    7. '               ' → logprob: -11.935482025146484
    8. 'cur' → logprob: -12.435482025146484
    9. '{' → logprob: -12.560482025146484
    10. '   ' → logprob: -12.935482025146484

Token 535: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010023918934166431
    2. 'cur' → logprob: -4.635024070739746
    3. ' cur' → logprob: -8.260024070739746
    4. '   ' → logprob: -12.385024070739746
    5. '	cur' → logprob: -13.510024070739746
    6. '               ' → logprob: -14.135024070739746
    7. '          ' → logprob: -14.135024070739746
    8. '		' → logprob: -14.760024070739746
    9. ' ' → logprob: -14.885024070739746
    10. '[cur' → logprob: -15.260024070739746

Token 536: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.048909466713666916
    2. ' cur' → logprob: -3.0489094257354736
    3. '           ' → logprob: -8.048909187316895
    4. '               ' → logprob: -13.548909187316895
    5. '	cur' → logprob: -14.298909187316895
    6. '[cur' → logprob: -15.548909187316895
    7. '   ' → logprob: -15.923909187316895
    8. ' ' → logprob: -17.04891014099121
    9. '(cur' → logprob: -17.17391014099121
    10. '            ' → logprob: -17.17391014099121

Token 537: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.7432603272027336e-06
    2. '_key' → logprob: -14.125001907348633
    3. 'node' → logprob: -14.500001907348633
    4. 'Node' → logprob: -15.750001907348633
    5. '_nodes' → logprob: -16.000001907348633
    6. '_NODE' → logprob: -16.875001907348633
    7. 'cur' → logprob: -18.000001907348633
    8. '
' → logprob: -18.250001907348633
    9. '_' → logprob: -18.375001907348633
    10. '_Node' → logprob: -18.750001907348633

Token 538: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.017673609778285027
    2. '=' → logprob: -4.517673492431641
    3. 'No' → logprob: -5.767673492431641
    4. '.right' → logprob: -6.767673492431641
    5. 'right' → logprob: -7.017673492431641
    6. ' =' → logprob: -7.392673492431641
    7. 'no' → logprob: -7.517673492431641
    8. '_right' → logprob: -9.51767349243164
    9. '   ' → logprob: -10.26767349243164
    10. ' ' → logprob: -10.64267349243164

Token 539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868711292743683
    2. '=' → logprob: -1.136871099472046
    3. ' ' → logprob: -16.011871337890625
    4. '   ' → logprob: -17.136871337890625
    5. '=
' → logprob: -19.136871337890625
    6. '    ' → logprob: -19.261871337890625
    7. ' =
' → logprob: -19.386871337890625
    8. '  ' → logprob: -19.386871337890625
    9. '        ' → logprob: -19.761871337890625
    10. ' ' → logprob: -19.761871337890625

Token 540: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.06196824833750725
    2. ' cur' → logprob: -2.8119683265686035
    3. '	cur' → logprob: -14.436967849731445
    4. ' ' → logprob: -17.686967849731445
    5. '   ' → logprob: -18.061967849731445
    6. '(cur' → logprob: -18.436967849731445
    7. '[cur' → logprob: -19.061967849731445
    8. '.cur' → logprob: -19.561967849731445
    9. '_cur' → logprob: -19.561967849731445
    10. ' ' → logprob: -20.186967849731445

Token 541: '_node' (ID: 11390)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.29703816771507263
    2. '_node' → logprob: -1.422038197517395
    3. 'ur' → logprob: -4.9220380783081055
    4. '.cur' → logprob: -5.4220380783081055
    5. '[cur' → logprob: -6.5470380783081055
    6. '_cur' → logprob: -7.2970380783081055
    7. '(cur' → logprob: -7.2970380783081055
    8. ' cur' → logprob: -7.2970380783081055
    9. '	cur' → logprob: -9.172038078308105
    10. 'urr' → logprob: -9.172038078308105

Token 542: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -1.1041145626222715e-05
    2. '.' → logprob: -11.750011444091797
    3. 'right' → logprob: -13.375011444091797
    4. '.key' → logprob: -13.875011444091797
    5. ' .' → logprob: -14.375011444091797
    6. '	right' → logprob: -17.625011444091797
    7. '[right' → logprob: -18.750011444091797
    8. '.Right' → logprob: -18.875011444091797
    9. '```' → logprob: -19.125011444091797
    10. '.left' → logprob: -19.125011444091797

Token 543: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021346693858504295
    2. '<|end|>' → logprob: -3.8963468074798584
    3. '
' → logprob: -7.521346569061279
    4. '    
' → logprob: -9.396347045898438
    5. '       ' → logprob: -10.521347045898438
    6. ')' → logprob: -10.646347045898438
    7. '<|end|>' → logprob: -10.646347045898438
    8. 'None' → logprob: -11.021347045898438
    9. '```' → logprob: -11.021347045898438
    10. 'return' → logprob: -11.146347045898438

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06250333786010742
    2. '<|end|>' → logprob: -2.8125033378601074
    3. '       ' → logprob: -9.562503814697266
    4. ' return' → logprob: -9.562503814697266
    5. '	return' → logprob: -9.562503814697266
    6. 'return' → logprob: -9.687503814697266
    7. ' ' → logprob: -9.687503814697266
    8. '    
' → logprob: -9.812503814697266
    9. '<|end|>' → logprob: -10.437503814697266
    10. '```' → logprob: -10.562503814697266

Token 545: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.44301292300224304
    2. '   ' → logprob: -1.1930129528045654
    3. 'None' → logprob: -3.4430129528045654
    4. ' return' → logprob: -4.568012714385986
    5. 'False' → logprob: -4.568012714385986
    6. '	return' → logprob: -6.568012714385986
    7. '       ' → logprob: -8.818013191223145
    8. ' None' → logprob: -9.318013191223145
    9. ' ' → logprob: -9.818013191223145
    10. '  ' → logprob: -9.943013191223145

Token 546: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00861456897109747
    2. ' False' → logprob: -4.758614540100098
    3. '(False' → logprob: -19.008615493774414
    4. 'None' → logprob: -19.133615493774414
    5. '=False' → logprob: -23.008615493774414
    6. ' None' → logprob: -23.758615493774414
    7. 'false' → logprob: -23.758615493774414
    8. 'True' → logprob: -24.508615493774414
    9. '_false' → logprob: -24.633615493774414
    10. '   ' → logprob: -25.258615493774414

Token 547: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5606412887573242
    2. '<|end|>' → logprob: -0.9356412887573242
    3. 'def' → logprob: -4.060641288757324
    4. '```' → logprob: -5.560641288757324
    5. '<|end|>' → logprob: -5.685641288757324
    6. 'n' → logprob: -5.935641288757324
    7. 'for' → logprob: -6.435641288757324
    8. '[' → logprob: -6.810641288757324
    9. 'import' → logprob: -6.810641288757324
    10. 'print' → logprob: -6.935641288757324

Token 549: ' switch' (ID: 6160)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7061357498168945
    2. 'delete' → logprob: -1.0811357498168945
    3. ' main' → logprob: -2.0811357498168945
    4. ' delete' → logprob: -3.2061357498168945
    5. 'find' → logprob: -8.081135749816895
    6. 'remove' → logprob: -8.081135749816895
    7. 'trans' → logprob: -8.581135749816895
    8. ' transplant' → logprob: -8.706135749816895
    9. ' find' → logprob: -8.831135749816895
    10. 'replace' → logprob: -9.206135749816895

Token 550: '_child' (ID: 40474)
  Prédit: '_nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nodes' → logprob: -0.16919739544391632
    2. '_parent' → logprob: -2.9191973209381104
    3. '_case' → logprob: -3.2941973209381104
    4. '_node' → logprob: -4.0441975593566895
    5. '(nodes' → logprob: -4.0441975593566895
    6. '_key' → logprob: -5.1691975593566895
    7. '(' → logprob: -5.5441975593566895
    8. '_child' → logprob: -5.6691975593566895
    9. '_keys' → logprob: -5.6691975593566895
    10. '_' → logprob: -6.0441975593566895

Token 551: '_of' (ID: 8023)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.15533621609210968
    2. 's' → logprob: -2.4053361415863037
    3. '(parent' → logprob: -3.6553361415863037
    4. '_parent' → logprob: -4.655336380004883
    5. '(node' → logprob: -4.905336380004883
    6. '_nodes' → logprob: -5.530336380004883
    7. '(s' → logprob: -5.905336380004883
    8. '(' → logprob: -6.030336380004883
    9. 'parent' → logprob: -8.280336380004883
    10. 'ren' → logprob: -8.405336380004883

Token 552: '_parent' (ID: 39570)
  Prédit: '(parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.8520898818969727
    2. 'parent' → logprob: -1.6020898818969727
    3. '(nodes' → logprob: -1.8520898818969727
    4. '(node' → logprob: -2.1020898818969727
    5. 'nodes' → logprob: -3.2270898818969727
    6. 'node' → logprob: -3.8520898818969727
    7. '(root' → logprob: -4.102089881896973
    8. 'root' → logprob: -5.102089881896973
    9. '_parent' → logprob: -5.977089881896973
    10. 'Node' → logprob: -6.352089881896973

Token 553: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.09791833162307739
    2. '(node' → logprob: -3.0979182720184326
    3. '(parent' → logprob: -3.5979182720184326
    4. '(' → logprob: -4.097918510437012
    5. '(s' → logprob: -5.847918510437012
    6. 's' → logprob: -7.722918510437012
    7. '(root' → logprob: -8.097918510437012
    8. '(n' → logprob: -8.597918510437012
    9. ' (' → logprob: -9.472918510437012
    10. '():' → logprob: -10.097918510437012

Token 554: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005765964742749929
    2. '(nodes' → logprob: -5.505765914916992
    3. '(node' → logprob: -7.130765914916992
    4. ',n' → logprob: -8.380765914916992
    5. ',node' → logprob: -8.380765914916992
    6. ' ,' → logprob: -8.880765914916992
    7. '(parent' → logprob: -9.505765914916992
    8. '(n' → logprob: -9.630765914916992
    9. '):' → logprob: -10.130765914916992
    10. '   ' → logprob: -10.380765914916992

Token 555: ' dict' (ID: 11878)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.02263743244111538
    2. 'dict' → logprob: -4.022637367248535
    3. ' Node' → logprob: -5.772637367248535
    4. 'Dict' → logprob: -7.897637367248535
    5. '(Node' → logprob: -8.522637367248535
    6. ',' → logprob: -8.772637367248535
    7. 'node' → logprob: -8.897637367248535
    8. ' dict' → logprob: -8.897637367248535
    9. '   ' → logprob: -9.397637367248535
    10. 'nodes' → logprob: -9.522637367248535

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033939589047804475
    2. ' ,' → logprob: -8.62533950805664
    3. ',node' → logprob: -9.00033950805664
    4. '   ' → logprob: -10.62533950805664
    5. ',parent' → logprob: -11.75033950805664
    6. ',n' → logprob: -12.75033950805664
    7. '(node' → logprob: -15.12533950805664
    8. ')' → logprob: -15.75033950805664
    9. ',key' → logprob: -15.87533950805664
    10. '):' → logprob: -16.00033950805664

Token 557: ' del' (ID: 1083)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.8663918375968933
    2. 'node' → logprob: -0.9913918375968933
    3. ' parent' → logprob: -2.991391897201538
    4. 'old' → logprob: -3.366391897201538
    5. ' node' → logprob: -3.366391897201538
    6. 'child' → logprob: -3.491391897201538
    7. 'cur' → logprob: -3.616391897201538
    8. 'p' → logprob: -4.616391658782959
    9. ' child' → logprob: -5.241391658782959
    10. ' old' → logprob: -5.741391658782959

Token 558: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0003045994380954653
    2. '_nodes' → logprob: -9.125304222106934
    3. '_key' → logprob: -9.625304222106934
    4. 'ete' → logprob: -9.875304222106934
    5. '_' → logprob: -10.250304222106934
    6. 'node' → logprob: -11.000304222106934
    7. ')' → logprob: -12.000304222106934
    8. '_code' → logprob: -12.875304222106934
    9. 'Node' → logprob: -13.250304222106934
    10. '_Node' → logprob: -13.250304222106934

Token 559: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5704264044761658
    2. '_key' → logprob: -0.9454264044761658
    3. '_no' → logprob: -3.6954264640808105
    4. 'key' → logprob: -4.9454264640808105
    5. ' ,' → logprob: -5.0704264640808105
    6. ',key' → logprob: -5.0704264640808105
    7. ' key' → logprob: -7.5704264640808105
    8. '   ' → logprob: -8.445425987243652
    9. '_,' → logprob: -8.445425987243652
    10. '):' → logprob: -9.570425987243652

Token 560: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.01837831735610962
    2. ' Node' → logprob: -4.018378257751465
    3. 'dict' → logprob: -9.393378257751465
    4. 'int' → logprob: -9.643378257751465
    5. '(Node' → logprob: -10.768378257751465
    6. ' dict' → logprob: -11.393378257751465
    7. '   ' → logprob: -11.518378257751465
    8. '	Node' → logprob: -11.518378257751465
    9. ')' → logprob: -12.268378257751465
    10. ',' → logprob: -12.518378257751465

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007890212000347674
    2. '):' → logprob: -7.750789165496826
    3. ' ,' → logprob: -8.875788688659668
    4. '   ' → logprob: -8.875788688659668
    5. ',node' → logprob: -10.250788688659668
    6. ')' → logprob: -10.750788688659668
    7. '):
' → logprob: -11.000788688659668
    8. ',parent' → logprob: -13.750788688659668
    9. ',
' → logprob: -14.375788688659668
    10. ',n' → logprob: -14.375788688659668

Token 562: ' switch' (ID: 6160)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.1865700483322144
    2. 'child' → logprob: -1.5615700483322144
    3. 'replacement' → logprob: -1.6865700483322144
    4. 'rep' → logprob: -2.311570167541504
    5. ' new' → logprob: -3.061570167541504
    6. 're' → logprob: -3.186570167541504
    7. ' child' → logprob: -3.686570167541504
    8. ' rep' → logprob: -3.686570167541504
    9. ' replacement' → logprob: -3.811570167541504
    10. 'replace' → logprob: -4.186570167541504

Token 563: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.014569842256605625
    2. '_child' → logprob: -5.2645697593688965
    3. '_key' → logprob: -5.3895697593688965
    4. '_to' → logprob: -6.3895697593688965
    5. '):' → logprob: -7.6395697593688965
    6. ':' → logprob: -7.8895697593688965
    7. 'ing' → logprob: -7.8895697593688965
    8. 'ed' → logprob: -8.139570236206055
    9. 'to' → logprob: -8.639570236206055
    10. 'e' → logprob: -8.639570236206055

Token 564: '_no' (ID: 13575)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5634633302688599
    2. ':' → logprob: -0.9384633302688599
    3. ',' → logprob: -3.5634632110595703
    4. ')' → logprob: -5.06346321105957
    5. '):
' → logprob: -6.18846321105957
    6. ' :' → logprob: -6.18846321105957
    7. ' ):' → logprob: -7.43846321105957
    8. ' ,' → logprob: -9.18846321105957
    9. ')->' → logprob: -11.18846321105957
    10. '   ' → logprob: -11.31346321105957

Token 565: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0038181296549737453
    2. '):
' → logprob: -6.253818035125732
    3. ')' → logprob: -6.753818035125732
    4. ':' → logprob: -7.753818035125732
    5. ' ):' → logprob: -8.37881851196289
    6. ',' → logprob: -10.50381851196289
    7. '):
' → logprob: -10.75381851196289
    8. ' ' → logprob: -12.62881851196289
    9. '   ' → logprob: -13.00381851196289
    10. ' :' → logprob: -13.00381851196289

Token 566: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017424600198864937
    2. ':' → logprob: -4.142424583435059
    3. ':
' → logprob: -6.642424583435059
    4. '):
' → logprob: -10.267424583435059
    5. '):' → logprob: -11.267424583435059
    6. '	parent' → logprob: -11.767424583435059
    7. ',' → logprob: -11.892424583435059
    8. '    
' → logprob: -12.017424583435059
    9. '	if' → logprob: -12.767424583435059
    10. '	nodes' → logprob: -13.517424583435059

Token 567: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01720185950398445
    2. 'if' (adapté à ' if') → logprob: -4.267201900482178
    3. 'parent' → logprob: -5.892201900482178
    4. 'del' → logprob: -9.01720142364502
    5. ' if' → logprob: -10.14220142364502
    6. 'switch' → logprob: -10.26720142364502
    7. 'global' → logprob: -10.64220142364502
    8. '	parent' → logprob: -11.14220142364502
    9. '#' → logprob: -11.39220142364502
    10. 'child' → logprob: -11.89220142364502

Token 568: ' nodes' (ID: 15749)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.00866976473480463
    2. ' del' → logprob: -4.758669853210449
    3. '	del' → logprob: -10.38366985321045
    4. '   ' → logprob: -11.13366985321045
    5. '(del' → logprob: -11.88366985321045
    6. ' ' → logprob: -14.00866985321045
    7. 'nodes' → logprob: -14.25866985321045
    8. 'switch' → logprob: -14.63366985321045
    9. '  ' → logprob: -14.63366985321045
    10. ' nodes' → logprob: -15.50866985321045

Token 569: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007164848502725363
    2. '[s' → logprob: -7.250716686248779
    3. 'del' → logprob: -13.000716209411621
    4. ' [' → logprob: -14.000716209411621
    5. '[get' → logprob: -14.500716209411621
    6. '[node' → logprob: -14.625716209411621
    7. 'switch' → logprob: -14.625716209411621
    8. '[parent' → logprob: -15.375716209411621
    9. '.get' → logprob: -15.625716209411621
    10. '[n' → logprob: -15.625716209411621

Token 570: 'del' (ID: 9145)
  Prédit: 'del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.006070286966860294
    2. 'switch' → logprob: -5.131070137023926
    3. ' del' → logprob: -10.256070137023926
    4. '[' → logprob: -10.381070137023926
    5. '(del' → logprob: -10.631070137023926
    6. '	del' → logprob: -11.256070137023926
    7. ']' → logprob: -11.756070137023926
    8. 'delete' → logprob: -12.131070137023926
    9. 'dele' → logprob: -12.693570137023926
    10. '   ' → logprob: -13.006070137023926

Token 571: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005608965293504298
    2. '[' → logprob: -8.375560760498047
    3. 'node' → logprob: -8.750560760498047
    4. 'del' → logprob: -9.500560760498047
    5. ')' → logprob: -10.875560760498047
    6. ']' → logprob: -11.375560760498047
    7. '[node' → logprob: -11.500560760498047
    8. 'Node' → logprob: -11.625560760498047
    9. 'switch' → logprob: -11.750560760498047
    10. '_del' → logprob: -12.000560760498047

Token 572: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.02372918836772442
    2. '.key' → logprob: -3.773729085922241
    3. '.' → logprob: -7.89872932434082
    4. '].' → logprob: -9.89872932434082
    5. 'parent' → logprob: -10.14872932434082
    6. '   ' → logprob: -11.64872932434082
    7. ' .' → logprob: -12.14872932434082
    8. '.left' → logprob: -13.27372932434082
    9. ').' → logprob: -13.39872932434082
    10. 'key' → logprob: -13.52372932434082

Token 573: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.07085605710744858
    2. '.key' → logprob: -2.6958560943603516
    3. ']' → logprob: -7.195856094360352
    4. ' ].' → logprob: -9.320856094360352
    5. 'key' → logprob: -10.945856094360352
    6. '   ' → logprob: -10.945856094360352
    7. ').' → logprob: -11.070856094360352
    8. '.' → logprob: -11.945856094360352
    9. '.left' → logprob: -12.695856094360352
    10. '}.' → logprob: -12.945856094360352

Token 574: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.319370302458992e-06
    2. 'key' → logprob: -12.375005722045898
    3. 'right' → logprob: -14.125005722045898
    4. ' left' → logprob: -15.875005722045898
    5. '.left' → logprob: -15.875005722045898
    6. '	left' → logprob: -17.6250057220459
    7. 'parent' → logprob: -18.1250057220459
    8. '(left' → logprob: -19.3750057220459
    9. '左' → logprob: -19.3750057220459
    10. 'root' → logprob: -19.5000057220459

Token 575: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31347328424453735
    2. '==' → logprob: -1.3134732246398926
    3. ' is' → logprob: -8.56347370147705
    4. ')' → logprob: -12.18847370147705
    5. ' !=' → logprob: -12.56347370147705
    6. ')==' → logprob: -12.68847370147705
    7. '=' → logprob: -12.93847370147705
    8. ' ' → logprob: -13.06347370147705
    9. '()==' → logprob: -13.93847370147705
    10. '!=' → logprob: -14.06347370147705

Token 576: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.006812931038439274
    2. ' del' → logprob: -5.006813049316406
    3. 'switch' → logprob: -9.756813049316406
    4. '	del' → logprob: -10.631813049316406
    5. '   ' → logprob: -11.631813049316406
    6. ' switch' → logprob: -13.006813049316406
    7. '(del' → logprob: -14.006813049316406
    8. ' ' → logprob: -14.256813049316406
    9. 'nodes' → logprob: -14.881813049316406
    10. 'delete' → logprob: -15.131813049316406

Token 577: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0004201866395305842
    2. 'ete' → logprob: -8.375420570373535
    3. 'ode' → logprob: -9.000420570373535
    4. 'node' → logprob: -10.125420570373535
    5. 'et' → logprob: -12.500420570373535
    6. '_nodes' → logprob: -12.750420570373535
    7. 'lete' → logprob: -13.125420570373535
    8. 'eted' → logprob: -13.125420570373535
    9. 'Node' → logprob: -13.250420570373535
    10. '_NODE' → logprob: -14.125420570373535

Token 578: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.026667043566703796
    2. 'key' → logprob: -3.6516671180725098
    3. '.parent' → logprob: -8.026666641235352
    4. ' key' → logprob: -11.401666641235352
    5. 'parent' → logprob: -11.776666641235352
    6. '.' → logprob: -11.776666641235352
    7. '_key' → logprob: -12.276666641235352
    8. '.left' → logprob: -13.276666641235352
    9. '   ' → logprob: -13.401666641235352
    10. ':' → logprob: -13.526666641235352

Token 579: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1606377810239792
    2. ':
' → logprob: -1.9106377363204956
    3. '       ' → logprob: -8.660637855529785
    4. '   ' → logprob: -9.410637855529785
    5. '):
' → logprob: -9.410637855529785
    6. ',' → logprob: -10.535637855529785
    7. ' and' → logprob: -10.910637855529785
    8. '):' → logprob: -11.410637855529785
    9. ':
' → logprob: -12.410637855529785
    10. ' :
' → logprob: -12.535637855529785

Token 580: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021134182810783386
    2. ':
' → logprob: -4.146134376525879
    3. ' :
' → logprob: -6.396134376525879
    4. ':' → logprob: -7.021134376525879
    5. '):
' → logprob: -7.521134376525879
    6. ' nodes' → logprob: -7.521134376525879
    7. '(nodes' → logprob: -7.771134376525879
    8. '	nodes' → logprob: -8.521134376525879
    9. 'nodes' → logprob: -8.771134376525879
    10. ' =' → logprob: -8.896134376525879

Token 581: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.39830851554870605
    2. ' nodes' → logprob: -1.148308515548706
    3. '       ' → logprob: -4.648308753967285
    4. '	nodes' → logprob: -6.523308753967285
    5. '   ' → logprob: -8.398308753967285
    6. '(nodes' → logprob: -10.148308753967285
    7. '_nodes' → logprob: -10.648308753967285
    8. '           ' → logprob: -11.023308753967285
    9. '.nodes' → logprob: -11.148308753967285
    10. ' ' → logprob: -13.398308753967285

Token 582: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00015038289711810648
    2. '[n' → logprob: -8.875150680541992
    3. '[node' → logprob: -12.125150680541992
    4. '][' → logprob: -13.750150680541992
    5. ')[' → logprob: -14.000150680541992
    6. ' [' → logprob: -14.125150680541992
    7. 'del' → logprob: -14.750150680541992
    8. '   ' → logprob: -14.750150680541992
    9. '[cur' → logprob: -15.125150680541992
    10. '```' → logprob: -15.750150680541992

Token 583: 'del' (ID: 9145)
  Prédit: 'del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -4.4849443838757e-06
    2. ' del' → logprob: -12.500004768371582
    3. '(del' → logprob: -15.500004768371582
    4. '	del' → logprob: -15.625004768371582
    5. '   ' → logprob: -16.250003814697266
    6. 'nodes' → logprob: -16.750003814697266
    7. ']' → logprob: -17.500003814697266
    8. ' ' → logprob: -17.875003814697266
    9. '[' → logprob: -17.875003814697266
    10. '  ' → logprob: -18.250003814697266

Token 584: '_node' (ID: 11390)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.31415650248527527
    2. '_node' → logprob: -1.3141565322875977
    3. 'node' → logprob: -7.564156532287598
    4. ' del' → logprob: -8.564156532287598
    5. 'Node' → logprob: -9.564156532287598
    6. '_del' → logprob: -11.064156532287598
    7. '(del' → logprob: -11.064156532287598
    8. 'ode' → logprob: -11.439156532287598
    9. '_child' → logprob: -11.689156532287598
    10. 'child' → logprob: -11.939156532287598

Token 585: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0004510493890848011
    2. '.del' → logprob: -7.75045108795166
    3. '.' → logprob: -11.62545108795166
    4. 'parent' → logprob: -11.62545108795166
    5. '.parents' → logprob: -14.00045108795166
    6. ' .' → logprob: -14.87545108795166
    7. '].' → logprob: -14.87545108795166
    8. '[parent' → logprob: -15.00045108795166
    9. '	parent' → logprob: -15.87545108795166
    10. '.Parent' → logprob: -16.125450134277344

Token 586: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00026383911608718336
    2. '.left' → logprob: -8.625264167785645
    3. '.' → logprob: -10.750264167785645
    4. '.right' → logprob: -10.750264167785645
    5. ').' → logprob: -11.125264167785645
    6. ']' → logprob: -11.875264167785645
    7. '}.' → logprob: -11.875264167785645
    8. ' ].' → logprob: -12.125264167785645
    9. '   ' → logprob: -12.750264167785645
    10. ''].' → logprob: -14.125264167785645

Token 587: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.9361264946837764e-07
    2. ' left' → logprob: -15.875
    3. 'right' → logprob: -17.875
    4. '	left' → logprob: -18.0
    5. 'lef' → logprob: -18.0
    6. '.left' → logprob: -18.375
    7. '[left' → logprob: -18.5
    8. '_left' → logprob: -19.0
    9. 'le' → logprob: -20.25
    10. '   ' → logprob: -21.125

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759723782539368
    2. '=' → logprob: -0.8259723782539368
    3. '=s' → logprob: -10.325972557067871
    4. ' ' → logprob: -16.950971603393555
    5. '＝' → logprob: -17.075971603393555
    6. ',' → logprob: -17.950971603393555
    7. ' switch' → logprob: -18.325971603393555
    8. ' =
' → logprob: -18.450971603393555
    9. '=
' → logprob: -18.575971603393555
    10. 'switch' → logprob: -19.075971603393555

Token 589: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' → logprob: -0.06993965804576874
    2. ' switch' → logprob: -2.694939613342285
    3. '   ' → logprob: -12.944939613342285
    4. ' ' → logprob: -14.694939613342285
    5. '  ' → logprob: -16.0699405670166
    6. '    ' → logprob: -16.3199405670166
    7. 's' → logprob: -16.3199405670166
    8. '	switch' → logprob: -16.4449405670166
    9. ' ' → logprob: -16.8199405670166
    10. '_switch' → logprob: -17.1949405670166

Token 590: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.7968066206085496e-05
    2. '_child' → logprob: -10.500027656555176
    3. '_nodes' → logprob: -17.000028610229492
    4. '_' → logprob: -17.125028610229492
    5. '   ' → logprob: -17.250028610229492
    6. '```' → logprob: -17.250028610229492
    7. '"_' → logprob: -17.375028610229492
    8. 'node' → logprob: -17.375028610229492
    9. ')_' → logprob: -17.500028610229492
    10. ' _' → logprob: -17.875028610229492

Token 591: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -2.816093228830141e-06
    2. 'no' → logprob: -13.00000286102295
    3. '_' → logprob: -15.00000286102295
    4. 'No' → logprob: -15.87500286102295
    5. '_not' → logprob: -17.625001907348633
    6. ' _' → logprob: -18.000001907348633
    7. '_number' → logprob: -18.625001907348633
    8. '_n' → logprob: -18.875001907348633
    9. '_key' → logprob: -18.875001907348633
    10. '_node' → logprob: -19.250001907348633

Token 592: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020330198458395898
    2. 'else' → logprob: -9.250203132629395
    3. ' else' → logprob: -9.500203132629395
    4. 'elif' → logprob: -11.625203132629395
    5. '
' → logprob: -11.875203132629395
    6. '<|end|>' → logprob: -11.875203132629395
    7. ' elif' → logprob: -12.750203132629395
    8. '	else' → logprob: -13.125203132629395
    9. '	elif' → logprob: -13.250203132629395
    10. '       ' → logprob: -13.625203132629395

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008023609989322722
    2. 'else' → logprob: -7.750802516937256
    3. ' else' → logprob: -8.375802040100098
    4. 'elif' → logprob: -9.375802040100098
    5. ' elif' → logprob: -10.500802040100098
    6. '<|end|>' → logprob: -11.375802040100098
    7. '
' → logprob: -12.125802040100098
    8. '	elif' → logprob: -12.375802040100098
    9. '	else' → logprob: -12.500802040100098
    10. '       ' → logprob: -13.000802040100098

Token 594: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.19142727553844452
    2. '   ' → logprob: -2.441427230834961
    3. 'elif' (adapté à ' elif') → logprob: -2.941427230834961
    4. ' else' → logprob: -3.441427230834961
    5. ' elif' → logprob: -6.066427230834961
    6. 'if' → logprob: -10.066427230834961
    7. ' if' → logprob: -11.816427230834961
    8. '	else' → logprob: -13.191427230834961
    9. '	elif' → logprob: -13.441427230834961
    10. ' ' → logprob: -14.691427230834961

Token 595: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.6932141184806824
    2. 'nodes' → logprob: -0.6932141184806824
    3. '   ' → logprob: -10.068214416503906
    4. '(nodes' → logprob: -11.318214416503906
    5. '	nodes' → logprob: -12.068214416503906
    6. '       ' → logprob: -13.193214416503906
    7. ' ' → logprob: -13.568214416503906
    8. 'node' → logprob: -13.943214416503906
    9. '           ' → logprob: -14.693214416503906
    10. '    ' → logprob: -14.818214416503906

Token 596: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.250000953674316
    3. 'del' → logprob: -16.25
    4. '[
' → logprob: -16.875
    5. '[node' → logprob: -17.5
    6. '[n' → logprob: -17.625
    7. '```' → logprob: -17.75
    8. '   ' → logprob: -18.375
    9. '(del' → logprob: -18.75
    10. '[cur' → logprob: -18.875

Token 597: 'del' (ID: 9145)
  Prédit: 'del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.002666854066774249
    2. '[' → logprob: -6.00266695022583
    3. '(del' → logprob: -8.877666473388672
    4. ' del' → logprob: -9.877666473388672
    5. '	del' → logprob: -15.252666473388672
    6. 'def' → logprob: -15.877666473388672
    7. '.del' → logprob: -17.627666473388672
    8. '_del' → logprob: -18.002666473388672
    9. 'nodes' → logprob: -18.627666473388672
    10. '(' → logprob: -18.877666473388672

Token 598: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.12729963660240173
    2. 'del' → logprob: -2.1272995471954346
    3. 'node' → logprob: -9.127299308776855
    4. 'Node' → logprob: -9.252299308776855
    5. ' del' → logprob: -9.377299308776855
    6. '_NODE' → logprob: -11.127299308776855
    7. 'ode' → logprob: -11.252299308776855
    8. 'def' → logprob: -11.377299308776855
    9. '_del' → logprob: -12.127299308776855
    10. '_child' → logprob: -12.252299308776855

Token 599: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.00015550498210359365
    2. 'parent' → logprob: -8.875155448913574
    3. '.' → logprob: -11.375155448913574
    4. '[parent' → logprob: -13.125155448913574
    5. '.key' → logprob: -13.625155448913574
    6. '.right' → logprob: -16.00015640258789
    7. '	parent' → logprob: -16.00015640258789
    8. ' parent' → logprob: -16.12515640258789
    9. ' .' → logprob: -16.25015640258789
    10. '_parent' → logprob: -16.37515640258789

Token 600: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05501734837889671
    2. '.' → logprob: -3.0550172328948975
    3. ').' → logprob: -5.555017471313477
    4. '.right' → logprob: -6.055017471313477
    5. '.left' → logprob: -9.430017471313477
    6. ' .' → logprob: -10.055017471313477
    7. '}.' → logprob: -10.555017471313477
    8. '>.' → logprob: -11.430017471313477
    9. ' ].' → logprob: -11.805017471313477
    10. ']' → logprob: -11.930017471313477

Token 601: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -4.723352049040841e-06
    2. ' right' → logprob: -13.000004768371582
    3. '.right' → logprob: -13.750004768371582
    4. 'switch' → logprob: -14.750004768371582
    5. 'left' → logprob: -15.250004768371582
    6. 'Right' → logprob: -15.375004768371582
    7. '[right' → logprob: -15.375004768371582
    8. 'del' → logprob: -16.250003814697266
    9. '	right' → logprob: -17.500003814697266
    10. '(right' → logprob: -17.750003814697266

Token 602: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.018160473555326462
    2. '==' → logprob: -4.018160343170166
    3. ' ' → logprob: -12.643160820007324
    4. ' =' → logprob: -12.643160820007324
    5. '<|end|>' → logprob: -13.643160820007324
    6. ']==' → logprob: -13.768160820007324
    7. '=' → logprob: -14.268160820007324
    8. '[' → logprob: -15.393160820007324
    9. ')==' → logprob: -15.393160820007324
    10. ' ' → logprob: -15.643160820007324

Token 603: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.1602276712656021
    2. ' del' → logprob: -1.910227656364441
    3. '	del' → logprob: -13.03522777557373
    4. '(del' → logprob: -14.16022777557373
    5. '_del' → logprob: -14.53522777557373
    6. '.del' → logprob: -17.160226821899414
    7. '-del' → logprob: -18.285226821899414
    8. ' ' → logprob: -18.285226821899414
    9. 'Del' → logprob: -18.285226821899414
    10. 'switch' → logprob: -18.285226821899414

Token 604: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.2523839771747589
    2. 'del' → logprob: -1.5023839473724365
    3. ' del' → logprob: -8.127384185791016
    4. 'node' → logprob: -9.502384185791016
    5. '_del' → logprob: -10.502384185791016
    6. 'Node' → logprob: -11.002384185791016
    7. '_child' → logprob: -11.252384185791016
    8. 'switch' → logprob: -11.627384185791016
    9. '_key' → logprob: -12.752384185791016
    10. '```' → logprob: -13.002384185791016

Token 605: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -3.953082341467962e-05
    2. 'key' → logprob: -10.375039100646973
    3. '.' → logprob: -12.000039100646973
    4. '.parent' → logprob: -13.250039100646973
    5. '.left' → logprob: -16.25004005432129
    6. ' .' → logprob: -16.50004005432129
    7. '.right' → logprob: -16.87504005432129
    8. ' key' → logprob: -17.00004005432129
    9. '.child' → logprob: -18.00004005432129
    10. '.keys' → logprob: -18.25004005432129

Token 606: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6379442811012268
    2. ':
' → logprob: -0.7629442811012268
    3. '       ' → logprob: -5.262944221496582
    4. '   ' → logprob: -10.262944221496582
    5. ' :
' → logprob: -10.387944221496582
    6. '):
' → logprob: -10.762944221496582
    7. ',' → logprob: -10.887944221496582
    8. ':

' → logprob: -11.137944221496582
    9. '=' → logprob: -11.262944221496582
    10. ' :' → logprob: -12.262944221496582

Token 607: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07239407300949097
    2. ' nodes' → logprob: -2.9473941326141357
    3. 'nodes' → logprob: -4.072393894195557
    4. '	nodes' → logprob: -8.822394371032715
    5. '(nodes' → logprob: -9.072394371032715
    6. '   ' → logprob: -11.072394371032715
    7. '           ' → logprob: -11.072394371032715
    8. '_nodes' → logprob: -11.572394371032715
    9. '.nodes' → logprob: -12.572394371032715
    10. '    ' → logprob: -12.572394371032715

Token 608: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.026332000270485878
    2. 'nodes' (adapté à ' nodes') → logprob: -3.651331901550293
    3. '	nodes' → logprob: -10.901331901550293
    4. '(nodes' → logprob: -11.901331901550293
    5. '       ' → logprob: -13.151331901550293
    6. '.nodes' → logprob: -13.651331901550293
    7. '    ' → logprob: -13.776331901550293
    8. '   ' → logprob: -13.901331901550293
    9. '_nodes' → logprob: -14.526331901550293
    10. ' ' → logprob: -14.901331901550293

Token 609: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. 'del' → logprob: -16.0
    3. '[n' → logprob: -17.625
    4. '```' → logprob: -17.75
    5. ' [' → logprob: -18.625
    6. '       ' → logprob: -18.75
    7. '[node' → logprob: -18.75
    8. 's' → logprob: -18.75
    9. '   ' → logprob: -18.875
    10. '           ' → logprob: -18.875

Token 610: 'del' (ID: 9145)
  Prédit: 'del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.75000286102295
    3. 'nodes' → logprob: -14.00000286102295
    4. ' del' → logprob: -14.50000286102295
    5. 'switch' → logprob: -16.000001907348633
    6. '(del' → logprob: -16.000001907348633
    7. '	del' → logprob: -16.625001907348633
    8. 'def' → logprob: -18.000001907348633
    9. 'node' → logprob: -18.625001907348633
    10. '           ' → logprob: -19.500001907348633

Token 611: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0036853551864624023
    2. 'del' → logprob: -5.628685474395752
    3. '[' → logprob: -11.128684997558594
    4. 'ode' → logprob: -11.253684997558594
    5. '_child' → logprob: -11.503684997558594
    6. '_NODE' → logprob: -11.878684997558594
    7. 'node' → logprob: -12.003684997558594
    8. '_del' → logprob: -12.128684997558594
    9. ' del' → logprob: -12.253684997558594
    10. 'Node' → logprob: -12.378684997558594

Token 612: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.0015193840954452753
    2. 'parent' → logprob: -6.501519203186035
    3. '.' → logprob: -11.501519203186035
    4. '[parent' → logprob: -12.751519203186035
    5. '].' → logprob: -13.376519203186035
    6. '.key' → logprob: -14.001519203186035
    7. '	parent' → logprob: -14.251519203186035
    8. '_parent' → logprob: -14.626519203186035
    9. '.right' → logprob: -15.126519203186035
    10. ' parent' → logprob: -15.876519203186035

Token 613: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005034659989178181
    2. '.right' → logprob: -8.000503540039062
    3. '.' → logprob: -9.125503540039062
    4. '.left' → logprob: -10.375503540039062
    5. '.parent' → logprob: -11.625503540039062
    6. '.key' → logprob: -12.125503540039062
    7. ' ].' → logprob: -12.375503540039062
    8. ']' → logprob: -12.500503540039062
    9. '}.' → logprob: -13.125503540039062
    10. ').' → logprob: -13.375503540039062

Token 614: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -1.0280383548888494e-06
    2. ' right' → logprob: -14.625000953674316
    3. 'left' → logprob: -14.625000953674316
    4. '	right' → logprob: -18.000001907348633
    5. '[right' → logprob: -19.750001907348633
    6. 'rig' → logprob: -20.500001907348633
    7. '.right' → logprob: -20.750001907348633
    8. '   ' → logprob: -21.125001907348633
    9. 'r' → logprob: -21.375001907348633
    10. 'Right' → logprob: -21.500001907348633

Token 615: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132619559764862
    2. '=' → logprob: -1.3132619857788086
    3. ' ' → logprob: -15.813261985778809
    4. ' =
' → logprob: -16.813261032104492
    5. ' ==' → logprob: -17.063261032104492
    6. '＝' → logprob: -18.563261032104492
    7. '   ' → logprob: -18.563261032104492
    8. '    ' → logprob: -18.563261032104492
    9. '==' → logprob: -18.563261032104492
    10. '<|end|>' → logprob: -18.563261032104492

Token 616: ' switch' (ID: 6160)
  Prédit: ' switch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' switch' → logprob: -0.5759420394897461
    2. 'switch' → logprob: -0.8259420394897461
    3. 's' → logprob: -13.450942039489746
    4. ' ' → logprob: -14.950942039489746
    5. '   ' → logprob: -15.200942039489746
    6. '    ' → logprob: -16.075942993164062
    7. ' ' → logprob: -16.325942993164062
    8. ' switched' → logprob: -16.575942993164062
    9. '	switch' → logprob: -16.700942993164062
    10. '_switch' → logprob: -16.700942993164062

Token 617: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.221884101862088e-05
    2. '_child' → logprob: -9.375092506408691
    3. '_nodes' → logprob: -13.250092506408691
    4. 'node' → logprob: -13.250092506408691
    5. 'Node' → logprob: -14.000092506408691
    6. '_' → logprob: -14.875092506408691
    7. ')_' → logprob: -15.000092506408691
    8. 'switch' → logprob: -15.250092506408691
    9. 's' → logprob: -15.375092506408691
    10. '_NODE' → logprob: -15.625092506408691

Token 618: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0005981888971291482
    2. 'no' → logprob: -7.500597953796387
    3. 'No' → logprob: -10.250597953796387
    4. '_' → logprob: -12.750597953796387
    5. 'switch' → logprob: -13.375597953796387
    6. '_switch' → logprob: -14.375597953796387
    7. '   ' → logprob: -14.875597953796387
    8. 's' → logprob: -14.875597953796387
    9. '_NO' → logprob: -15.000597953796387
    10. '_n' → logprob: -15.000597953796387

Token 619: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6628472805023193
    2. '<|end|>' → logprob: -0.7878472805023193
    3. '
' → logprob: -4.037847518920898
    4. '   ' → logprob: -4.537847518920898
    5. '<|end|>' → logprob: -7.412847518920898
    6. '```' → logprob: -7.912847518920898
    7. '

' → logprob: -8.662847518920898
    8. '    
' → logprob: -9.537847518920898
    9. ')' → logprob: -9.787847518920898
    10. ' ' → logprob: -10.787847518920898

Token 621: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 622: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030071770772337914
    2. '
' → logprob: -3.53007173538208
    3. '<|end|>' → logprob: -8.280072212219238
    4. '

' → logprob: -9.780072212219238
    5. '
' → logprob: -12.030072212219238
    6. '  
' → logprob: -13.530072212219238
    7. ' 
' → logprob: -13.780072212219238
    8. '    
' → logprob: -14.655072212219238
    9. ' def' → logprob: -14.905072212219238
    10. '\' → logprob: -15.530072212219238

Token 623: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00027087211492471397
    2. '
' → logprob: -8.75027084350586
    3. '<|end|>' → logprob: -9.12527084350586
    4. '

' → logprob: -13.00027084350586
    5. '```' → logprob: -15.12527084350586
    6. '#' → logprob: -15.37527084350586
    7. ' def' → logprob: -15.37527084350586
    8. '  
' → logprob: -15.87527084350586
    9. '<|end|>' → logprob: -16.37527084350586
    10. 'class' → logprob: -17.00027084350586

Token 624: ' delete' (ID: 6168)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -0.017685556784272194
    2. ' delete' → logprob: -4.767685413360596
    3. 'remove' → logprob: -5.517685413360596
    4. 'def' → logprob: -6.142685413360596
    5. 'del' → logprob: -6.767685413360596
    6. 'replace' → logprob: -7.642685413360596
    7. 'trans' → logprob: -7.642685413360596
    8. ' transplant' → logprob: -8.642685890197754
    9. 'find' → logprob: -8.767685890197754
    10. ' remove' → logprob: -10.142685890197754

Token 625: '_node' (ID: 11390)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.001718496554531157
    2. '(' → logprob: -6.376718521118164
    3. '_nodes' → logprob: -11.751718521118164
    4. '(node' → logprob: -12.751718521118164
    5. '(n' → logprob: -14.501718521118164
    6. '(tokens' → logprob: -14.626718521118164
    7. '_node' → logprob: -14.626718521118164
    8. 'nodes' → logprob: -14.626718521118164
    9. '(keys' → logprob: -14.751718521118164
    10. '(root' → logprob: -14.751718521118164

Token 626: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -2.5822400857578032e-05
    2. '(' → logprob: -10.875025749206543
    3. ' (' → logprob: -12.375025749206543
    4. '(keys' → logprob: -13.625025749206543
    5. '(n' → logprob: -15.250025749206543
    6. '(numbers' → logprob: -15.250025749206543
    7. '(node' → logprob: -15.500025749206543
    8. 'nodes' → logprob: -16.12502670288086
    9. '(root' → logprob: -16.37502670288086
    10. '(users' → logprob: -16.62502670288086

Token 627: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001429047784768045
    2. ' ,' → logprob: -6.626429080963135
    3. ':' → logprob: -10.126428604125977
    4. ',n' → logprob: -10.251428604125977
    5. ',node' → logprob: -11.001428604125977
    6. ' :' → logprob: -12.001428604125977
    7. ',key' → logprob: -12.501428604125977
    8. ',
' → logprob: -15.251428604125977
    9. '   ' → logprob: -15.251428604125977
    10. ',d' → logprob: -15.876428604125977

Token 628: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.16025052964687347
    2. ' dict' → logprob: -1.9102505445480347
    3. '(dict' → logprob: -11.160250663757324
    4. ',' → logprob: -13.160250663757324
    5. '):
' → logprob: -13.160250663757324
    6. 'def' → logprob: -13.160250663757324
    7. 'Dict' → logprob: -13.285250663757324
    8. ')' → logprob: -13.785250663757324
    9. '   ' → logprob: -14.285250663757324
    10. '
' → logprob: -14.410250663757324

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010068230039905757
    2. ' ,' → logprob: -9.250101089477539
    3. ',n' → logprob: -13.125101089477539
    4. ',node' → logprob: -13.125101089477539
    5. '   ' → logprob: -14.625101089477539
    6. ',key' → logprob: -16.62510108947754
    7. ',
' → logprob: -17.50010108947754
    8. '       ' → logprob: -18.50010108947754
    9. ',de' → logprob: -18.62510108947754
    10. ' ' → logprob: -18.62510108947754

Token 630: ' delete' (ID: 6168)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.27349475026130676
    2. ' del' → logprob: -1.6484947204589844
    3. ' key' → logprob: -4.273494720458984
    4. 'node' → logprob: -4.523494720458984
    5. ' node' → logprob: -4.523494720458984
    6. 'key' → logprob: -4.648494720458984
    7. ' tgt' → logprob: -7.023494720458984
    8. 'target' → logprob: -8.148494720458984
    9. ' target' → logprob: -8.898494720458984
    10. 't' → logprob: -9.023494720458984

Token 631: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.015236920677125454
    2. '_key' → logprob: -4.515236854553223
    3. '_no' → logprob: -5.515236854553223
    4. 'd' → logprob: -10.140236854553223
    5. 'node' → logprob: -10.515236854553223
    6. ')_' → logprob: -11.265236854553223
    7. '_nodes' → logprob: -11.265236854553223
    8. '_n' → logprob: -11.390236854553223
    9. 'e' → logprob: -11.765236854553223
    10. 'ed' → logprob: -12.265236854553223

Token 632: '_no' (ID: 13575)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27297472953796387
    2. '_no' → logprob: -2.022974729537964
    3. '):
' → logprob: -2.522974729537964
    4. ' :' → logprob: -5.022974967956543
    5. '):' → logprob: -5.147974967956543
    6. '_key' → logprob: -5.272974967956543
    7. 'key' → logprob: -5.272974967956543
    8. ',' → logprob: -6.897974967956543
    9. 'No' → logprob: -7.272974967956543
    10. 'no' → logprob: -7.397974967956543

Token 633: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13609671592712402
    2. ':' → logprob: -2.886096715927124
    3. '):
' → logprob: -3.136096715927124
    4. ',' → logprob: -4.011096954345703
    5. ' ):' → logprob: -5.011096954345703
    6. ' :' → logprob: -6.011096954345703
    7. ')' → logprob: -7.636096954345703
    8. ' ):
' → logprob: -8.761096954345703
    9. '):
' → logprob: -9.886096954345703
    10. ' ,' → logprob: -10.261096954345703

Token 634: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030607320368289948
    2. ' int' → logprob: -4.030607223510742
    3. 'Node' → logprob: -4.530607223510742
    4. 'delete' → logprob: -6.905607223510742
    5. ' Node' → logprob: -7.905607223510742
    6. ')' → logprob: -9.530607223510742
    7. ' delete' → logprob: -9.655607223510742
    8. '):
' → logprob: -10.405607223510742
    9. 'nodes' → logprob: -11.155607223510742
    10. '[int' → logprob: -11.405607223510742

Token 635: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017962858080863953
    2. ',' → logprob: -4.39296293258667
    3. ')' → logprob: -5.76796293258667
    4. '):
' → logprob: -6.39296293258667
    5. ' ):' → logprob: -7.39296293258667
    6. '   ' → logprob: -11.767962455749512
    7. ' ,' → logprob: -12.017962455749512
    8. ' )' → logprob: -12.892962455749512
    9. '):
' → logprob: -13.017962455749512
    10. '):

' → logprob: -13.392962455749512

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009023298509418964
    2. 'global' → logprob: -5.134023189544678
    3. 'del' → logprob: -6.634023189544678
    4. 'cur' → logprob: -7.134023189544678
    5. 'if' → logprob: -7.759023189544678
    6. ' global' → logprob: -8.384023666381836
    7. ' if' → logprob: -9.009023666381836
    8. ' cur' → logprob: -10.259023666381836
    9. '	global' → logprob: -10.384023666381836
    10. '	del' → logprob: -10.384023666381836

Token 637: ' del' (ID: 1083)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.7083503007888794
    2. 'global' → logprob: -1.3333503007888794
    3. 'if' → logprob: -1.7083503007888794
    4. 'del' (adapté à ' del') → logprob: -3.45835018157959
    5. '   ' → logprob: -4.20835018157959
    6. ' cur' → logprob: -5.20835018157959
    7. ' global' → logprob: -5.33335018157959
    8. ' if' → logprob: -5.45835018157959
    9. 'delete' → logprob: -7.33335018157959
    10. 'def' → logprob: -7.33335018157959

Token 638: '_node' (ID: 11390)
  Prédit: 'ete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ete' → logprob: -0.3490242063999176
    2. '_node' → logprob: -1.2240241765975952
    3. 'e' → logprob: -8.349023818969727
    4. 'node' → logprob: -8.474023818969727
    5. '   ' → logprob: -10.224023818969727
    6. '_nodes' → logprob: -10.224023818969727
    7. 'eted' → logprob: -10.849023818969727
    8. '
' → logprob: -11.849023818969727
    9. 'Node' → logprob: -12.099023818969727
    10. 'ate' → logprob: -12.599023818969727

Token 639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020555317401885986
    2. '=' → logprob: -3.895555257797241
    3. ':' → logprob: -11.52055549621582
    4. ' ' → logprob: -13.02055549621582
    5. '   ' → logprob: -14.77055549621582
    6. ' :' → logprob: -14.89555549621582
    7. '=node' → logprob: -16.27055549621582
    8. '	' → logprob: -16.52055549621582
    9. ' ' → logprob: -16.77055549621582
    10. '  ' → logprob: -16.77055549621582

Token 640: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.1602320373058319
    2. ' nodes' → logprob: -1.9102320671081543
    3. '	nodes' → logprob: -12.160231590270996
    4. '   ' → logprob: -13.785231590270996
    5. '(nodes' → logprob: -13.910231590270996
    6. '.nodes' → logprob: -15.535231590270996
    7. ' ' → logprob: -15.535231590270996
    8. 'Nodes' → logprob: -16.410232543945312
    9. 'None' → logprob: -16.535232543945312
    10. 'node' → logprob: -16.660232543945312

Token 641: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7133641196996905e-05
    2. '.get' → logprob: -11.12502670288086
    3. 'delete' → logprob: -11.87502670288086
    4. '.pop' → logprob: -12.50002670288086
    5. '[get' → logprob: -14.37502670288086
    6. '.delete' → logprob: -14.75002670288086
    7. ' [' → logprob: -15.00002670288086
    8. 'pop' → logprob: -15.50002670288086
    9. 'get' → logprob: -16.12502670288086
    10. '[node' → logprob: -16.62502670288086

Token 642: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -9.13388703338569e-06
    2. ' delete' → logprob: -11.625009536743164
    3. 'del' → logprob: -16.750009536743164
    4. '   ' → logprob: -16.875009536743164
    5. '	delete' → logprob: -17.125009536743164
    6. '.delete' → logprob: -18.125009536743164
    7. '(delete' → logprob: -18.125009536743164
    8. ' ' → logprob: -20.000009536743164
    9. '_delete' → logprob: -20.250009536743164
    10. '  ' → logprob: -20.375009536743164

Token 643: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.7610454708337784e-05
    2. 'node' → logprob: -10.625027656555176
    3. 'delete' → logprob: -14.250027656555176
    4. 'Node' → logprob: -14.500027656555176
    5. '_NODE' → logprob: -14.625027656555176
    6. '
' → logprob: -15.375027656555176
    7. '_no' → logprob: -15.500027656555176
    8. '_nodes' → logprob: -15.625027656555176
    9. 'n' → logprob: -16.12502670288086
    10. '_' → logprob: -16.12502670288086

Token 644: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -4.692145012086257e-05
    2. 'no' → logprob: -10.375046730041504
    3. '_node' → logprob: -11.125046730041504
    4. 'No' → logprob: -14.750046730041504
    5. '_n' → logprob: -16.50004768371582
    6. '.no' → logprob: -16.62504768371582
    7. '
' → logprob: -16.62504768371582
    8. '_' → logprob: -16.75004768371582
    9. 'node' → logprob: -17.00004768371582
    10. ' no' → logprob: -17.50004768371582

Token 645: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00013119110371917486
    2. ']
' → logprob: -9.375131607055664
    3. ']

' → logprob: -10.375131607055664
    4. ' ]' → logprob: -11.125131607055664
    5. '   ' → logprob: -15.750131607055664
    6. ']
' → logprob: -16.000131607055664
    7. ')' → logprob: -16.750131607055664
    8. ']

' → logprob: -17.000131607055664
    9. ' ' → logprob: -18.125131607055664
    10. '']' → logprob: -18.250131607055664

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002144431695342064
    2. 'if' → logprob: -6.2521443367004395
    3. '    
' → logprob: -8.752144813537598
    4. ' if' → logprob: -10.377144813537598
    5. '
' → logprob: -10.752144813537598
    6. '#' → logprob: -12.627144813537598
    7. '	if' → logprob: -14.502144813537598
    8. '   
' → logprob: -15.502144813537598
    9. '```' → logprob: -15.502144813537598
    10. '  
' → logprob: -15.752144813537598

Token 647: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004081009421497583
    2. '#' → logprob: -5.504080772399902
    3. 'parent' → logprob: -13.879080772399902
    4. 'child' → logprob: -14.254080772399902
    5. ' if' → logprob: -14.504080772399902
    6. 'global' → logprob: -15.379080772399902
    7. '   ' → logprob: -15.629080772399902
    8. 'switch' → logprob: -16.25408172607422
    9. 'def' → logprob: -17.75408172607422
    10. '	if' → logprob: -17.75408172607422

Token 648: ' del' (ID: 1083)
  Prédit: ' del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' del' → logprob: -0.3869507908821106
    2. 'del' → logprob: -1.1369507312774658
    3. '	del' → logprob: -10.011950492858887
    4. '(del' → logprob: -10.761950492858887
    5. ' delete' → logprob: -12.011950492858887
    6. 'delete' → logprob: -12.136950492858887
    7. '_del' → logprob: -14.011950492858887
    8. ' ' → logprob: -14.761950492858887
    9. '   ' → logprob: -15.511950492858887
    10. '.del' → logprob: -15.511950492858887

Token 649: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.2524021157296374e-05
    2. 'ete' → logprob: -9.875052452087402
    3. 'node' → logprob: -13.875052452087402
    4. 'et' → logprob: -17.50005340576172
    5. '_nodes' → logprob: -17.62505340576172
    6. 'e' → logprob: -18.00005340576172
    7. 'Node' → logprob: -19.00005340576172
    8. '_NODE' → logprob: -19.00005340576172
    9. 'ode' → logprob: -19.25005340576172
    10. '
' → logprob: -19.62505340576172

Token 650: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.029777687042951584
    2. '.has' → logprob: -3.529777765274048
    3. '.' → logprob: -10.904777526855469
    4. 'is' → logprob: -12.404777526855469
    5. ' .' → logprob: -12.904777526855469
    6. '.left' → logprob: -13.529777526855469
    7. '.le' → logprob: -15.154777526855469
    8. 'has' → logprob: -15.654777526855469
    9. '.parent' → logprob: -16.27977752685547
    10. ' is' → logprob: -16.52977752685547

Token 651: '_leaf' (ID: 96627)
  Prédit: '_leaf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_leaf' → logprob: -0.0031786637846380472
    2. '_root' → logprob: -5.753178596496582
    3. 'leaf' → logprob: -14.628178596496582
    4. 'root' → logprob: -15.128178596496582
    5. ' leaf' → logprob: -16.2531795501709
    6. '```' → logprob: -16.3781795501709
    7. 'Leaf' → logprob: -17.3781795501709
    8. '_node' → logprob: -17.5031795501709
    9. '_le' → logprob: -18.0031795501709
    10. '_none' → logprob: -18.5031795501709

Token 652: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008628406561911106
    2. '():
' → logprob: -4.7586283683776855
    3. '()' → logprob: -11.258628845214844
    4. '():
' → logprob: -14.383628845214844
    5. ' ():' → logprob: -15.008628845214844
    6. '()==' → logprob: -16.633628845214844
    7. '():

' → logprob: -16.633628845214844
    8. '(' → logprob: -18.508628845214844
    9. '()>' → logprob: -19.008628845214844
    10. ':' → logprob: -19.508628845214844

Token 653: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25268030166625977
    2. '       ' → logprob: -1.5026803016662598
    3. 'if' → logprob: -7.87768030166626
    4. ' if' → logprob: -8.002679824829102
    5. '    
' → logprob: -11.127679824829102
    6. '
' → logprob: -12.377679824829102
    7. ',' → logprob: -12.502679824829102
    8. '{
' → logprob: -13.002679824829102
    9. '#' → logprob: -13.127679824829102
    10. 'parent' → logprob: -13.127679824829102

Token 654: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04384828731417656
    2. 'switch' → logprob: -3.1688482761383057
    3. '   ' → logprob: -7.293848514556885
    4. ' if' → logprob: -9.043848037719727
    5. 'parent' → logprob: -10.293848037719727
    6. '#' (adapté à ' #') → logprob: -12.043848037719727
    7. 'nodes' → logprob: -12.168848037719727
    8. '
' → logprob: -13.168848037719727
    9. '       ' → logprob: -13.918848037719727
    10. '	if' → logprob: -13.918848037719727

Token 655: ' delete' (ID: 6168)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003872873727232218
    2. '   ' → logprob: -5.878872871398926
    3. 'switch' → logprob: -6.878872871398926
    4. ' if' → logprob: -10.878872871398926
    5. 'parent' → logprob: -11.128872871398926
    6. 'nodes' → logprob: -13.253872871398926
    7. '       ' → logprob: -13.878872871398926
    8. '#' → logprob: -14.003872871398926
    9. 'global' → logprob: -14.628872871398926
    10. '	if' → logprob: -15.378872871398926

Token 656: ' leaf' (ID: 25882)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19808270037174225
    2. '   ' → logprob: -2.323082685470581
    3. ' if' → logprob: -3.198082685470581
    4. '_node' → logprob: -3.823082685470581
    5. 'switch' → logprob: -4.94808292388916
    6. 'nodes' → logprob: -5.57308292388916
    7. 'del' → logprob: -6.19808292388916
    8. '       ' → logprob: -6.44808292388916
    9. '_child' → logprob: -7.32308292388916
    10. 'def' → logprob: -7.44808292388916

Token 657: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0844206809997559
    2. '_node' → logprob: -1.0844206809997559
    3. ' if' → logprob: -2.209420680999756
    4. 'if' → logprob: -3.084420680999756
    5. 'node' → logprob: -3.334420680999756
    6. '       ' → logprob: -3.459420680999756
    7. ':' → logprob: -3.584420680999756
    8. ' =' → logprob: -4.084420680999756
    9. ' node' → logprob: -4.084420680999756
    10. '()
' → logprob: -5.084420680999756

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40073278546333313
    2. '   ' → logprob: -1.1507327556610107
    3. ' if' → logprob: -5.02573299407959
    4. 'if' → logprob: -5.15073299407959
    5. 'nodes' → logprob: -7.40073299407959
    6. ' nodes' → logprob: -9.02573299407959
    7. ',' → logprob: -9.02573299407959
    8. '
' → logprob: -9.27573299407959
    9. 'parent' → logprob: -10.15073299407959
    10. ' =' → logprob: -10.15073299407959

Token 659: ' switch' (ID: 6160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00764874555170536
    2. 'switch' (adapté à ' switch') → logprob: -5.257648944854736
    3. '   ' → logprob: -6.382648944854736
    4. 'parent' → logprob: -7.257648944854736
    5. ' if' → logprob: -11.632648468017578
    6. 'nodes' → logprob: -12.257648468017578
    7. 'def' → logprob: -14.007648468017578
    8. '	if' → logprob: -14.257648468017578
    9. '#' → logprob: -15.132648468017578
    10. '       ' → logprob: -15.382648468017578

Token 660: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -9.491498531133402e-06
    2. 'child' → logprob: -11.625009536743164
    3. 'Child' → logprob: -15.500009536743164
    4. '_node' → logprob: -16.125009536743164
    5. 's' → logprob: -16.750009536743164
    6. '_children' → logprob: -16.875009536743164
    7. 'nodes' → logprob: -17.000009536743164
    8. '```' → logprob: -18.250009536743164
    9. '_CHILD' → logprob: -18.250009536743164
    10. '
' → logprob: -18.500009536743164

Token 661: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.7432603272027336e-06
    2. ' of' → logprob: -13.750001907348633
    3. 's' → logprob: -14.750001907348633
    4. 'of' → logprob: -15.750001907348633
    5. '_' → logprob: -17.000001907348633
    6. '_or' → logprob: -17.875001907348633
    7. '_nodes' → logprob: -18.000001907348633
    8. ' _' → logprob: -18.750001907348633
    9. '_for' → logprob: -18.875001907348633
    10. ' ' → logprob: -19.000001907348633

Token 662: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.16023671627044678
    2. 'parent' → logprob: -1.9102367162704468
    3. 'nodes' → logprob: -11.910236358642578
    4. ' parent' → logprob: -13.035236358642578
    5. 'Parent' → logprob: -13.785236358642578
    6. '(parent' → logprob: -13.910236358642578
    7. ',parent' → logprob: -14.785236358642578
    8. '	parent' → logprob: -15.035236358642578
    9. '-parent' → logprob: -15.660236358642578
    10. '[parent' → logprob: -15.660236358642578

Token 663: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -14.125000953674316
    3. '(n' → logprob: -15.625000953674316
    4. 'nodes' → logprob: -16.000001907348633
    5. '(' → logprob: -16.250001907348633
    6. '(tokens' → logprob: -17.625001907348633
    7. '(
' → logprob: -17.750001907348633
    8. '(notes' → logprob: -17.750001907348633
    9. '	nodes' → logprob: -17.750001907348633
    10. '(numbers' → logprob: -17.875001907348633

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010711929644457996
    2. ' ,' → logprob: -9.625106811523438
    3. '(nodes' → logprob: -11.250106811523438
    4. ',n' → logprob: -11.375106811523438
    5. '(del' → logprob: -11.750106811523438
    6. ',
' → logprob: -12.750106811523438
    7. '   ' → logprob: -13.500106811523438
    8. ')' → logprob: -13.875106811523438
    9. '[' → logprob: -14.500106811523438
    10. '       ' → logprob: -14.500106811523438

Token 665: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.028492353856563568
    2. 'nodes' → logprob: -4.028492450714111
    3. ' del' → logprob: -4.778492450714111
    4. ' nodes' → logprob: -6.278492450714111
    5. '	del' → logprob: -13.778491973876953
    6. 'node' → logprob: -14.403491973876953
    7. '   ' → logprob: -14.778491973876953
    8. ' ' → logprob: -15.028491973876953
    9. '
' → logprob: -15.278491973876953
    10. '	nodes' → logprob: -15.403491973876953

Token 666: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00018911674851551652
    2. 'ode' → logprob: -9.000188827514648
    3. 'node' → logprob: -9.750188827514648
    4. '_nodes' → logprob: -13.125188827514648
    5. '_' → logprob: -13.500188827514648
    6. 'e' → logprob: -13.750188827514648
    7. 'Node' → logprob: -14.250188827514648
    8. 'de' → logprob: -14.375188827514648
    9. '_NODE' → logprob: -14.750188827514648
    10. '_Node' → logprob: -15.375188827514648

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.007317567011341e-05
    2. ' ,' → logprob: -9.625089645385742
    3. ',
' → logprob: -12.000089645385742
    4. '   ' → logprob: -12.125089645385742
    5. ')' → logprob: -12.250089645385742
    6. '=' → logprob: -12.375089645385742
    7. ',None' → logprob: -14.375089645385742
    8. '       ' → logprob: -15.000089645385742
    9. '),' → logprob: -15.125089645385742
    10. ',key' → logprob: -15.125089645385742

Token 668: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.627176768844947e-05
    2. ' None' → logprob: -9.250096321105957
    3. '   ' → logprob: -16.00009536743164
    4. '           ' → logprob: -19.12509536743164
    5. '(None' → logprob: -19.37509536743164
    6. '=None' → logprob: -19.50009536743164
    7. '       ' → logprob: -19.75009536743164
    8. '_None' → logprob: -19.75009536743164
    9. ',None' → logprob: -20.25009536743164
    10. 'none' → logprob: -20.87509536743164

Token 669: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25770482420921326
    2. ')
' → logprob: -1.7577048540115356
    3. '       ' → logprob: -3.132704734802246
    4. '   ' → logprob: -4.507704734802246
    5. ')return' → logprob: -9.882704734802246
    6. ' )' → logprob: -11.382704734802246
    7. ' )
' → logprob: -11.632704734802246
    8. ')

' → logprob: -11.632704734802246
    9. '<|end|>' → logprob: -11.757704734802246
    10. '
' → logprob: -11.882704734802246

Token 670: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02683963254094124
    2. '   ' → logprob: -3.6518397331237793
    3. 'del' → logprob: -9.026839256286621
    4. 'else' → logprob: -9.151839256286621
    5. 'nodes' → logprob: -9.401839256286621
    6. '
' → logprob: -9.526839256286621
    7. ' del' → logprob: -10.026839256286621
    8. '        
' → logprob: -10.526839256286621
    9. '    
' → logprob: -11.026839256286621
    10. 'elif' → logprob: -11.026839256286621

Token 671: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25383108854293823
    2. 'elif' (adapté à ' elif') → logprob: -1.503831148147583
    3. ' elif' → logprob: -6.628830909729004
    4. '<|end|>' → logprob: -8.253830909729004
    5. 'else' → logprob: -9.253830909729004
    6. '    
' → logprob: -9.503830909729004
    7. '	elif' → logprob: -10.128830909729004
    8. '
' → logprob: -10.128830909729004
    9. '  ' → logprob: -10.878830909729004
    10. '       ' → logprob: -11.003830909729004

Token 672: ' not' (ID: 625)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.10029228776693344
    2. ' del' → logprob: -2.350292205810547
    3. '	del' → logprob: -10.100292205810547
    4. '   ' → logprob: -11.350292205810547
    5. '(del' → logprob: -11.475292205810547
    6. 'not' → logprob: -11.850292205810547
    7. ' isinstance' → logprob: -12.725292205810547
    8. 'len' → logprob: -12.725292205810547
    9. 'delete' → logprob: -12.850292205810547
    10. ' ' → logprob: -13.100292205810547

Token 673: ' del' (ID: 1083)
  Prédit: ' del'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' del' → logprob: -0.6934877038002014
    2. 'del' → logprob: -0.6934877038002014
    3. '	del' → logprob: -8.693488121032715
    4. '(del' → logprob: -8.943488121032715
    5. ' (' → logprob: -11.818488121032715
    6. 'def' → logprob: -11.943488121032715
    7. '   ' → logprob: -12.068488121032715
    8. '_del' → logprob: -12.318488121032715
    9. 'delete' → logprob: -12.818488121032715
    10. '(' → logprob: -12.880988121032715

Token 674: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00036418659146875143
    2. 'del' → logprob: -8.000364303588867
    3. 'et' → logprob: -11.625364303588867
    4. 'ode' → logprob: -12.625364303588867
    5. 'node' → logprob: -12.625364303588867
    6. 'ete' → logprob: -12.875364303588867
    7. ' del' → logprob: -12.875364303588867
    8. 'Node' → logprob: -13.000364303588867
    9. 'el' → logprob: -13.625364303588867
    10. '_NODE' → logprob: -14.375364303588867

Token 675: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.009069492109119892
    2. '.is' → logprob: -4.759069442749023
    3. '.' → logprob: -7.884069442749023
    4. 'has' → logprob: -9.509069442749023
    5. ' .' → logprob: -13.634069442749023
    6. 'is' → logprob: -14.009069442749023
    7. ' has' → logprob: -14.759069442749023
    8. '	has' → logprob: -14.884069442749023
    9. '(has' → logprob: -15.259069442749023
    10. '.have' → logprob: -15.509069442749023

Token 676: '_two' (ID: 54305)
  Prédit: '_one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -0.2811681628227234
    2. '_two' → logprob: -1.4061682224273682
    3. 'two' → logprob: -12.031167984008789
    4. 'one' → logprob: -12.156167984008789
    5. 'One' → logprob: -13.656167984008789
    6. '_any' → logprob: -14.281167984008789
    7. '(one' → logprob: -14.781167984008789
    8. '

' → logprob: -14.906167984008789
    9. '_ONE' → logprob: -14.906167984008789
    10. '(two' → logprob: -14.906167984008789

Token 677: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.00033069768687710166
    2. 'child' → logprob: -8.625330924987793
    3. '_children' → logprob: -9.625330924987793
    4. '_' → logprob: -9.750330924987793
    5. ' _' → logprob: -12.375330924987793
    6. 'Child' → logprob: -12.625330924987793
    7. '
' → logprob: -13.000330924987793
    8. '__' → logprob: -13.000330924987793
    9. '```' → logprob: -13.500330924987793
    10. '   ' → logprob: -13.625330924987793

Token 678: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0069210343062877655
    2. '():
' → logprob: -5.00692081451416
    3. '()' → logprob: -8.50692081451416
    4. ' ():' → logprob: -13.25692081451416
    5. '():
' → logprob: -13.63192081451416
    6. '():

' → logprob: -15.13192081451416
    7. ':' → logprob: -15.88192081451416
    8. '(' → logprob: -16.381921768188477
    9. '();' → logprob: -17.381921768188477
    10. '()
' → logprob: -17.381921768188477

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1441131830215454
    2. ':
' → logprob: -2.269113063812256
    3. ':' → logprob: -3.519113063812256
    4. '   ' → logprob: -7.144113063812256
    5. '):
' → logprob: -9.144113540649414
    6. ',' → logprob: -9.769113540649414
    7. 'child' → logprob: -10.144113540649414
    8. '():
' → logprob: -10.644113540649414
    9. ':

' → logprob: -10.644113540649414
    10. 'switch' → logprob: -10.894113540649414

Token 680: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12194397300481796
    2. 'switch' → logprob: -3.246943950653076
    3. 'child' → logprob: -3.496943950653076
    4. ' child' → logprob: -3.746943950653076
    5. '
' → logprob: -4.746943950653076
    6. '   ' → logprob: -4.871943950653076
    7. '#' (adapté à ' #') → logprob: -5.996943950653076
    8. ' #' → logprob: -6.871943950653076
    9. ' switch' → logprob: -6.996943950653076
    10. 'node' → logprob: -8.371944427490234

Token 681: ' delete' (ID: 6168)
  Prédit: ' child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' child' → logprob: -0.5773082971572876
    2. ' switch' → logprob: -2.452308177947998
    3. 'switch' → logprob: -2.452308177947998
    4. 'child' → logprob: -2.577308177947998
    5. '#' → logprob: -2.827308177947998
    6. ' #' → logprob: -2.952308177947998
    7. ' one' → logprob: -3.202308177947998
    8. 'one' → logprob: -4.452308177947998
    9. '   ' → logprob: -4.702308177947998
    10. ' delete' → logprob: -5.202308177947998

Token 682: ' one' (ID: 1001)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.8565194010734558
    2. ' child' → logprob: -1.1065194606781006
    3. '_child' → logprob: -1.8565194606781006
    4. ' one' → logprob: -3.7315194606781006
    5. '_one' → logprob: -3.9815194606781006
    6. 'one' → logprob: -4.4815192222595215
    7. '_node' → logprob: -4.4815192222595215
    8. '   ' → logprob: -4.9815192222595215
    9. 'switch' → logprob: -5.4815192222595215
    10. ' switch' → logprob: -5.4815192222595215

Token 683: ' child' (ID: 2320)
  Prédit: '_child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.14555872976779938
    2. 'child' → logprob: -2.0205588340759277
    3. '_node' → logprob: -6.145558834075928
    4. ' child' → logprob: -8.14555835723877
    5. 'del' → logprob: -8.64555835723877
    6. '=' → logprob: -9.14555835723877
    7. 'Child' → logprob: -9.52055835723877
    8. '   ' → logprob: -10.52055835723877
    9. ' child's' → logprob: -11.39555835723877
    10. '(del' → logprob: -11.52055835723877

Token 684: ' node' (ID: 4596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00822541769593954
    2. '
' → logprob: -5.508225440979004
    3. '   ' → logprob: -6.633225440979004
    4. ':' → logprob: -6.758225440979004
    5. ':
' → logprob: -7.633225440979004
    6. ',' → logprob: -7.758225440979004
    7. ' =' → logprob: -8.383225440979004
    8. ' child' → logprob: -9.133225440979004
    9. '        
' → logprob: -9.633225440979004
    10. '
' → logprob: -9.633225440979004

Token 685: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00246150279417634
    2. ':' → logprob: -7.0024614334106445
    3. '
' → logprob: -7.3774614334106445
    4. ':
' → logprob: -7.6274614334106445
    5. '   ' → logprob: -9.127461433410645
    6. ',' → logprob: -9.127461433410645
    7. ' child' → logprob: -9.752461433410645
    8. 'child' → logprob: -10.752461433410645
    9. ' =' → logprob: -10.877461433410645
    10. '        
' → logprob: -11.002461433410645

Token 686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002295374870300293
    2. '   ' → logprob: -6.75229549407959
    3. 'child' → logprob: -8.00229549407959
    4. '	' → logprob: -8.87729549407959
    5. '
' → logprob: -8.87729549407959
    6. ',' → logprob: -9.00229549407959
    7. ' child' → logprob: -9.25229549407959
    8. ':' → logprob: -9.37729549407959
    9. 'node' → logprob: -10.25229549407959
    10. '        
' → logprob: -10.75229549407959

Token 687: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' (adapté à ' child') → logprob: -0.42397594451904297
    2. ' child' → logprob: -1.423975944519043
    3. 'switch' → logprob: -2.423975944519043
    4. '   ' → logprob: -4.798975944519043
    5. ' switch' → logprob: -5.923975944519043
    6. '       ' → logprob: -6.048975944519043
    7. 'one' → logprob: -6.548975944519043
    8. '	child' → logprob: -7.548975944519043
    9. ' one' → logprob: -8.298975944519043
    10. 'single' → logprob: -8.298975944519043

Token 688: ' =' (ID: 314)
  Prédit: '_no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.13649949431419373
    2. ' =' → logprob: -2.1364994049072266
    3. '_node' → logprob: -5.386499404907227
    4. '=' → logprob: -5.511499404907227
    5. '_key' → logprob: -7.261499404907227
    6. 'No' → logprob: -8.886499404907227
    7. 'no' → logprob: -10.886499404907227
    8. '=no' → logprob: -11.511499404907227
    9. '_token' → logprob: -12.011499404907227
    10. '   ' → logprob: -12.386499404907227

Token 689: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.005910073406994343
    2. ' del' → logprob: -5.3809099197387695
    3. 'nodes' → logprob: -6.7559099197387695
    4. ' nodes' → logprob: -9.38090991973877
    5. '   ' → logprob: -10.88090991973877
    6. '	del' → logprob: -11.63090991973877
    7. ' ' → logprob: -11.88090991973877
    8. '  ' → logprob: -13.75590991973877
    9. '(del' → logprob: -13.88090991973877
    10. 'delete' → logprob: -14.25590991973877

Token 690: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.319370302458992e-06
    2. 'ode' → logprob: -12.500005722045898
    3. 'node' → logprob: -13.625005722045898
    4. '_NODE' → logprob: -16.3750057220459
    5. 'Node' → logprob: -16.6250057220459
    6. '_nodes' → logprob: -16.7500057220459
    7. 'de' → logprob: -16.7500057220459
    8. '_Node' → logprob: -16.8750057220459
    9. 'ete' → logprob: -17.6250057220459
    10. '<Node' → logprob: -18.6250057220459

Token 691: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -3.7385154428193346e-05
    2. '.left' → logprob: -10.50003719329834
    3. '.' → logprob: -12.00003719329834
    4. 'has' → logprob: -13.50003719329834
    5. '.parent' → logprob: -14.12503719329834
    6. '.right' → logprob: -14.12503719329834
    7. ' .' → logprob: -14.87503719329834
    8. '.child' → logprob: -15.12503719329834
    9. '.have' → logprob: -16.500038146972656
    10. '.is' → logprob: -17.500038146972656

Token 692: '_one' (ID: 26979)
  Prédit: '_one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_one' → logprob: -5.512236498361744e-07
    2. 'one' → logprob: -15.375000953674316
    3. 'One' → logprob: -15.625000953674316
    4. '_ONE' → logprob: -17.0
    5. '_once' → logprob: -17.25
    6. '_on' → logprob: -18.0
    7. '```' → logprob: -19.0
    8. '__' → logprob: -19.375
    9. ' one' → logprob: -19.75
    10. ' _' → logprob: -19.75

Token 693: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -1.1994775377388578e-05
    2. 'child' → logprob: -11.625012397766113
    3. '_node' → logprob: -13.375012397766113
    4. '_children' → logprob: -15.000012397766113
    5. '_' → logprob: -15.375012397766113
    6. 'Child' → logprob: -15.500012397766113
    7. '_CHILD' → logprob: -16.000011444091797
    8. ' child' → logprob: -16.000011444091797
    9. ' _' → logprob: -16.250011444091797
    10. ')_' → logprob: -16.375011444091797

Token 694: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.02539302036166191
    2. '()' → logprob: -3.775393009185791
    3. '.key' → logprob: -6.775393009185791
    4. '
' → logprob: -7.150393009185791
    5. '()
' → logprob: -9.65039348602295
    6. '()

' → logprob: -10.02539348602295
    7. '().' → logprob: -10.02539348602295
    8. '.keys' → logprob: -10.15039348602295
    9. 'key' → logprob: -11.77539348602295
    10. ' 
' → logprob: -12.40039348602295

Token 695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006743087433278561
    2. 'switch' → logprob: -8.3756742477417
    3. '   ' → logprob: -8.7506742477417
    4. 'nodes' → logprob: -9.3756742477417
    5. ' nodes' → logprob: -9.5006742477417
    6. ' switch' → logprob: -9.6256742477417
    7. '        
' → logprob: -10.8756742477417
    8. '
' → logprob: -11.7506742477417
    9. ' ' → logprob: -12.0006742477417
    10. '	nodes' → logprob: -12.2506742477417

Token 696: ' switch' (ID: 6160)
  Prédit: 'switch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'switch' (adapté à ' switch') → logprob: -0.280056893825531
    2. '       ' → logprob: -2.530056953430176
    3. 'if' → logprob: -2.905056953430176
    4. 'child' → logprob: -3.155056953430176
    5. 'nodes' → logprob: -3.155056953430176
    6. '   ' → logprob: -3.905056953430176
    7. ' if' → logprob: -6.655056953430176
    8. ' nodes' → logprob: -6.780056953430176
    9. ' switch' → logprob: -7.030056953430176
    10. ' child' → logprob: -7.155056953430176

Token 697: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -2.696889623621246e-06
    2. 'child' → logprob: -12.87500286102295
    3. 'Child' → logprob: -17.375001907348633
    4. ' child' → logprob: -17.750001907348633
    5. '_CHILD' → logprob: -17.750001907348633
    6. '_children' → logprob: -18.625001907348633
    7. '	child' → logprob: -18.750001907348633
    8. ')_' → logprob: -19.750001907348633
    9. '
' → logprob: -20.250001907348633
    10. '`' → logprob: -20.375001907348633

Token 698: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.003602798329666257
    2. '_child' → logprob: -5.628602981567383
    3. '_to' → logprob: -14.378602981567383
    4. '_for' → logprob: -14.378602981567383
    5. 'child' → logprob: -15.378602981567383
    6. '_children' → logprob: -15.628602981567383
    7. '   ' → logprob: -15.753602981567383
    8. ')_' → logprob: -16.128602981567383
    9. '_' → logprob: -16.253602981567383
    10. 'of' → logprob: -16.378602981567383

Token 699: '_parent' (ID: 39570)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.029754657298326492
    2. '_parent' → logprob: -3.529754638671875
    3. ' parent' → logprob: -12.904754638671875
    4. 'nodes' → logprob: -13.779754638671875
    5. '(parent' → logprob: -14.904754638671875
    6. 'Parent' → logprob: -16.154754638671875
    7. '	parent' → logprob: -16.404754638671875
    8. '-parent' → logprob: -16.779754638671875
    9. ',parent' → logprob: -16.904754638671875
    10. 'switch' → logprob: -17.029754638671875

Token 700: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -3.650518920039758e-06
    2. 'nodes' → logprob: -13.625003814697266
    3. '(n' → logprob: -14.250003814697266
    4. '(tokens' → logprob: -14.625003814697266
    5. ' nodes' → logprob: -15.125003814697266
    6. '	nodes' → logprob: -15.375003814697266
    7. '(
' → logprob: -15.500003814697266
    8. ' (' → logprob: -15.625003814697266
    9. '(' → logprob: -15.750003814697266
    10. '```' → logprob: -16.125003814697266

Token 701: ',' (ID: 11)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.2020607739686966
    2. ',' → logprob: -1.7020608186721802
    3. ',n' → logprob: -7.577060699462891
    4. ' ,' → logprob: -10.07706069946289
    5. ')' → logprob: -10.20206069946289
    6. '(n' → logprob: -11.32706069946289
    7. '	nodes' → logprob: -11.45206069946289
    8. 'nodes' → logprob: -11.82706069946289
    9. ' nodes' → logprob: -11.95206069946289
    10. '),' → logprob: -12.20206069946289

Token 702: ' del' (ID: 1083)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.5759796500205994
    2. ' nodes' → logprob: -0.8259796500205994
    3. '(nodes' → logprob: -10.325979232788086
    4. '	nodes' → logprob: -12.325979232788086
    5. '.nodes' → logprob: -13.700979232788086
    6. '_nodes' → logprob: -14.450979232788086
    7. '   ' → logprob: -14.700979232788086
    8. 'del' → logprob: -15.200979232788086
    9. 'node' → logprob: -15.450979232788086
    10. ' ' → logprob: -15.950979232788086

Token 703: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0029944588895887136
    2. 'del' → logprob: -6.252994537353516
    3. 'node' → logprob: -6.877994537353516
    4. 'Node' → logprob: -11.377994537353516
    5. 'de' → logprob: -12.377994537353516
    6. 'ode' → logprob: -12.377994537353516
    7. '_nodes' → logprob: -13.002994537353516
    8. '_NODE' → logprob: -13.127994537353516
    9. '```' → logprob: -13.377994537353516
    10. 'd' → logprob: -13.627994537353516

Token 704: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.776898251497187e-05
    2. ' ,' → logprob: -10.5000581741333
    3. ',n' → logprob: -10.5000581741333
    4. 'nodes' → logprob: -13.8750581741333
    5. ',
' → logprob: -14.6250581741333
    6. '(nodes' → logprob: -14.7500581741333
    7. ' nodes' → logprob: -14.8750581741333
    8. ',node' → logprob: -15.3750581741333
    9. '   ' → logprob: -16.000057220458984
    10. '	nodes' → logprob: -16.500057220458984

Token 705: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -8.518582762917504e-05
    2. ' child' → logprob: -9.37508487701416
    3. '	child' → logprob: -15.50008487701416
    4. 'children' → logprob: -16.875085830688477
    5. '(child' → logprob: -17.000085830688477
    6. 'nodes' → logprob: -17.375085830688477
    7. '   ' → logprob: -17.750085830688477
    8. 'ch' → logprob: -18.750085830688477
    9. 'chil' → logprob: -19.250085830688477
    10. '
' → logprob: -19.250085830688477

Token 706: ')
' (ID: 446)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.4775882065296173
    2. ')' → logprob: -0.9775881767272949
    3. ')
' → logprob: -5.852588176727295
    4. '   ' → logprob: -8.102588653564453
    5. 'key' → logprob: -8.727588653564453
    6. ')

' → logprob: -10.102588653564453
    7. ' )' → logprob: -10.477588653564453
    8. ')
' → logprob: -10.977588653564453
    9. '	key' → logprob: -11.227588653564453
    10. ' key' → logprob: -11.227588653564453

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4401184916496277
    2. 'nodes' → logprob: -1.6901185512542725
    3. '   ' → logprob: -1.8151185512542725
    4. ' nodes' → logprob: -5.440118312835693
    5. '	nodes' → logprob: -5.815118312835693
    6. '<|end|>' → logprob: -7.690118312835693
    7. 'child' → logprob: -7.815118312835693
    8. '(nodes' → logprob: -8.315118789672852
    9. 'tokens' → logprob: -9.565118789672852
    10. ')' → logprob: -10.190118789672852

Token 708: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.20281574130058289
    2. 'if' → logprob: -1.7028157711029053
    3. 'child' → logprob: -7.202815532684326
    4. '       ' → logprob: -7.702815532684326
    5. '   ' → logprob: -8.952816009521484
    6. ' nodes' → logprob: -10.577816009521484
    7. ' if' → logprob: -11.202816009521484
    8. 'children' → logprob: -11.827816009521484
    9. '	nodes' → logprob: -12.202816009521484
    10. '           ' → logprob: -12.202816009521484

Token 709: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.627176768844947e-05
    2. '[parent' → logprob: -9.500096321105957
    3. '[key' → logprob: -11.250096321105957
    4. '[node' → logprob: -12.500096321105957
    5. '.pop' → logprob: -14.500096321105957
    6. 'child' → logprob: -14.625096321105957
    7. '[root' → logprob: -14.625096321105957
    8. '[cur' → logprob: -14.750096321105957
    9. 'del' → logprob: -14.875096321105957
    10. '[get' → logprob: -15.750096321105957

Token 710: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0006529859383590519
    2. 'delete' → logprob: -8.000653266906738
    3. 'del' → logprob: -8.125653266906738
    4. ' child' → logprob: -11.250653266906738
    5. '	child' → logprob: -13.000653266906738
    6. '(child' → logprob: -13.125653266906738
    7. 'children' → logprob: -14.125653266906738
    8. 'dele' → logprob: -14.500653266906738
    9. '```' → logprob: -14.688153266906738
    10. '.child' → logprob: -15.188153266906738

Token 711: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.014199587516486645
    2. '.parent' → logprob: -4.264199733734131
    3. ' ].' → logprob: -11.014199256896973
    4. ').' → logprob: -12.264199256896973
    5. '.' → logprob: -12.639199256896973
    6. '}.' → logprob: -12.764199256896973
    7. '.key' → logprob: -12.764199256896973
    8. ']' → logprob: -12.889199256896973
    9. 'parent' → logprob: -13.889199256896973
    10. ''].' → logprob: -14.014199256896973

Token 712: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: 0.0
    2. ' parent' → logprob: -18.375
    3. '.parent' → logprob: -19.0
    4. '	parent' → logprob: -19.625
    5. 'paren' → logprob: -19.875
    6. '_parent' → logprob: -20.25
    7. '   ' → logprob: -20.75
    8. ',parent' → logprob: -21.125
    9. '[parent' → logprob: -21.125
    10. '```' → logprob: -22.0

Token 713: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' ' → logprob: -15.453890800476074
    4. ' ==' → logprob: -16.078889846801758
    5. ' =
' → logprob: -16.078889846801758
    6. '＝' → logprob: -16.078889846801758
    7. ',' → logprob: -17.328889846801758
    8. ')' → logprob: -18.328889846801758
    9. '=
' → logprob: -18.703889846801758
    10. '	' → logprob: -18.828889846801758

Token 714: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -3.531315314830863e-06
    2. ' del' → logprob: -12.750003814697266
    3. '	del' → logprob: -14.500003814697266
    4. 'nodes' → logprob: -16.250003814697266
    5. '(del' → logprob: -19.000003814697266
    6. 'dele' → logprob: -20.125003814697266
    7. '_del' → logprob: -20.500003814697266
    8. 'delete' → logprob: -21.000003814697266
    9. 'd' → logprob: -21.000003814697266
    10. 'deleted' → logprob: -22.250003814697266

Token 715: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0003864630125463009
    2. 'ode' → logprob: -7.8753862380981445
    3. 'node' → logprob: -12.375386238098145
    4. '_NODE' → logprob: -15.000386238098145
    5. 'ete' → logprob: -15.375386238098145
    6. 'Node' → logprob: -15.375386238098145
    7. '_nodes' → logprob: -15.625386238098145
    8. '_child' → logprob: -16.00038719177246
    9. '_Node' → logprob: -16.25038719177246
    10. '_' → logprob: -16.62538719177246

Token 716: '.parent' (ID: 17454)
  Prédit: '.parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.5759430527687073
    2. 'parent' → logprob: -0.8259430527687073
    3. '_parent' → logprob: -13.325942993164062
    4. '	parent' → logprob: -14.325942993164062
    5. ' parent' → logprob: -14.950942993164062
    6. '[parent' → logprob: -15.075942993164062
    7. 'Parent' → logprob: -15.325942993164062
    8. 'paren' → logprob: -15.325942993164062
    9. '
' → logprob: -16.575942993164062
    10. '.' → logprob: -16.575942993164062

Token 717: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000204851632588543
    2. '<|end|>' → logprob: -9.250205039978027
    3. 'else' → logprob: -9.500205039978027
    4. 'elif' → logprob: -10.750205039978027
    5. ')' → logprob: -12.375205039978027
    6. '       ' → logprob: -13.250205039978027
    7. '    
' → logprob: -13.250205039978027
    8. '<|end|>' → logprob: -14.375205039978027
    9. '```' → logprob: -14.500205039978027
    10. ' else' → logprob: -14.625205039978027

Token 718: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016119851497933269
    2. 'else' → logprob: -6.501612186431885
    3. '<|end|>' → logprob: -9.626611709594727
    4. 'elif' → logprob: -10.751611709594727
    5. ' else' → logprob: -11.251611709594727
    6. '    
' → logprob: -13.001611709594727
    7. '	else' → logprob: -13.126611709594727
    8. ')' → logprob: -13.501611709594727
    9. '	elif' → logprob: -14.126611709594727
    10. '<|end|>' → logprob: -14.126611709594727

Token 719: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.030289797112345695
    2. '   ' → logprob: -3.655289888381958
    3. 'elif' → logprob: -5.655289649963379
    4. ' else' → logprob: -7.655289649963379
    5. '	else' → logprob: -12.530289649963379
    6. ' elif' → logprob: -13.030289649963379
    7. '```' → logprob: -14.530289649963379
    8. '    
' → logprob: -14.655289649963379
    9. '       ' → logprob: -14.780289649963379
    10. ')' → logprob: -14.905289649963379

Token 720: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03125377744436264
    2. ':
' → logprob: -3.5312538146972656
    3. '       ' → logprob: -6.531253814697266
    4. '   ' → logprob: -10.531253814697266
    5. ' :' → logprob: -11.906253814697266
    6. ':
' → logprob: -13.406253814697266
    7. '():' → logprob: -13.531253814697266
    8. ':def' → logprob: -13.531253814697266
    9. ',' → logprob: -13.781253814697266
    10. ':

' → logprob: -13.906253814697266

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009908723644912243
    2. '#' → logprob: -5.009908676147461
    3. 'success' → logprob: -6.259908676147461
    4. '   ' → logprob: -6.884908676147461
    5. 'succ' → logprob: -9.134908676147461
    6. ' successor' → logprob: -9.884908676147461
    7. 'replace' → logprob: -10.759908676147461
    8. ' #' → logprob: -11.134908676147461
    9. 'replacement' → logprob: -11.384908676147461
    10. '```' → logprob: -11.634908676147461

Token 722: ' #' (ID: 1069)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.44834914803504944
    2. '#' (adapté à ' #') → logprob: -1.198349118232727
    3. 'succ' → logprob: -3.3233492374420166
    4. '       ' → logprob: -4.4483489990234375
    5. 'min' → logprob: -5.1983489990234375
    6. 'replace' → logprob: -6.3233489990234375
    7. 'in' → logprob: -6.9483489990234375
    8. 'switch' → logprob: -7.1983489990234375
    9. 'replacement' → logprob: -7.4483489990234375
    10. 'right' → logprob: -7.5733489990234375

Token 723: ' delete' (ID: 6168)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0074195861816406
    2. 'success' → logprob: -1.0074195861816406
    3. 'succ' → logprob: -2.1324195861816406
    4. ' successor' → logprob: -3.0074195861816406
    5. 'min' → logprob: -3.7574195861816406
    6. 'replace' → logprob: -4.007419586181641
    7. ' #' → logprob: -4.132419586181641
    8. 'in' → logprob: -4.382419586181641
    9. 'pre' → logprob: -6.007419586181641
    10. 'right' → logprob: -6.007419586181641

Token 724: ' two' (ID: 1920)
  Prédit: ' successor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' successor' → logprob: -0.6868633031845093
    2. 'success' → logprob: -1.4368633031845093
    3. '#' → logprob: -2.311863422393799
    4. 'succ' → logprob: -3.311863422393799
    5. 'right' → logprob: -3.811863422393799
    6. ' two' → logprob: -4.436863422393799
    7. 'two' → logprob: -4.561863422393799
    8. 'in' → logprob: -4.686863422393799
    9. 'left' → logprob: -5.061863422393799
    10. 'min' → logprob: -5.061863422393799

Token 725: ' child' (ID: 2320)
  Prédit: '_child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.09453488141298294
    2. 'child' → logprob: -2.8445348739624023
    3. '   ' → logprob: -3.8445348739624023
    4. ' child' → logprob: -5.344534873962402
    5. '       ' → logprob: -5.469534873962402
    6. '_node' → logprob: -7.344534873962402
    7. '
' → logprob: -7.594534873962402
    8. '	child' → logprob: -8.719534873962402
    9. '           ' → logprob: -9.344534873962402
    10. ' ' → logprob: -10.344534873962402

Token 726: ' node' (ID: 4596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08831828087568283
    2. 'node' → logprob: -3.088318347930908
    3. '_node' → logprob: -4.338318347930908
    4. '
' → logprob: -4.338318347930908
    5. ' node' → logprob: -5.088318347930908
    6. '   ' → logprob: -5.463318347930908
    7. '        
' → logprob: -7.713318347930908
    8. '#' → logprob: -8.33831787109375
    9. '_nodes' → logprob: -8.33831787109375
    10. '
' → logprob: -8.58831787109375

Token 727: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007303050952032208
    2. '#' → logprob: -8.750730514526367
    3. '   ' → logprob: -9.125730514526367
    4. '        
' → logprob: -9.750730514526367
    5. ',' → logprob: -9.875730514526367
    6. 'success' → logprob: -10.000730514526367
    7. ' successor' → logprob: -10.000730514526367
    8. 'next' → logprob: -10.375730514526367
    9. '           ' → logprob: -10.875730514526367
    10. '```' → logprob: -11.000730514526367

Token 728: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.73314929776825e-05
    2. 'success' → logprob: -10.25008773803711
    3. '   ' → logprob: -11.25008773803711
    4. '#' → logprob: -11.62508773803711
    5. 'succ' → logprob: -12.12508773803711
    6. ' successor' → logprob: -12.50008773803711
    7. 'next' → logprob: -12.75008773803711
    8. '```' → logprob: -13.12508773803711
    9. '           ' → logprob: -13.25008773803711
    10. '      ' → logprob: -13.25008773803711

Token 729: ' inorder' (ID: 139692)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.4383140504360199
    2. 'succ' → logprob: -1.5633140802383423
    3. '#' → logprob: -2.0633139610290527
    4. '       ' → logprob: -4.563313961029053
    5. 'min' → logprob: -6.313313961029053
    6. 'in' → logprob: -6.438313961029053
    7. 'replace' → logprob: -6.563313961029053
    8. 's' → logprob: -7.188313961029053
    9. 'pre' → logprob: -7.938313961029053
    10. 'cur' → logprob: -7.938313961029053

Token 730: ' =' (ID: 314)
  Prédit: '_success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_success' → logprob: -0.013514181599020958
    2. 'success' → logprob: -5.763514041900635
    3. '_pre' → logprob: -5.888514041900635
    4. '_s' → logprob: -5.888514041900635
    5. 'succ' → logprob: -6.388514041900635
    6. ' =' → logprob: -6.888514041900635
    7. '_pred' → logprob: -7.263514041900635
    8. '_node' → logprob: -7.638514041900635
    9. '_nodes' → logprob: -9.013514518737793
    10. '_right' → logprob: -9.138514518737793

Token 731: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0789450854063034
    2. '[]
' → logprob: -2.5789451599121094
    3. ' []' → logprob: -10.32894515991211
    4. ' []
' → logprob: -11.07894515991211
    5. '[]

' → logprob: -12.20394515991211
    6. '[' → logprob: -13.82894515991211
    7. 'list' → logprob: -14.20394515991211
    8. '[]"' → logprob: -16.32894515991211
    9. '=[]' → logprob: -16.70394515991211
    10. '[]}' → logprob: -16.70394515991211

Token 732: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017968006432056427
    2. '   ' → logprob: -6.376796722412109
    3. 'in' → logprob: -9.87679672241211
    4. 'def' → logprob: -11.00179672241211
    5. 'pre' → logprob: -11.87679672241211
    6. ' inorder' → logprob: -12.00179672241211
    7. '     ' → logprob: -13.12679672241211
    8. '      ' → logprob: -13.50179672241211
    9. 'root' → logprob: -13.62679672241211
    10. '           ' → logprob: -13.62679672241211

Token 733: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0012767844600602984
    2. 'def' → logprob: -7.626276969909668
    3. 'cur' → logprob: -8.001276969909668
    4. 'pre' → logprob: -8.501276969909668
    5. '       ' → logprob: -9.376276969909668
    6. 'success' → logprob: -9.876276969909668
    7. '   ' → logprob: -10.126276969909668
    8. 'node' → logprob: -10.876276969909668
    9. 'min' → logprob: -11.251276969909668
    10. 'right' → logprob: -11.626276969909668

Token 734: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.8670179997570813e-05
    2. '=' → logprob: -11.625019073486328
    3. ' =' → logprob: -12.500019073486328
    4. 'tree' → logprob: -12.875019073486328
    5. '_nodes' → logprob: -13.625019073486328
    6. '_node' → logprob: -14.625019073486328
    7. '=[]' → logprob: -15.000019073486328
    8. '_' → logprob: -15.125019073486328
    9. 'Tree' → logprob: -15.125019073486328
    10. '.append' → logprob: -16.125019073486328

Token 735: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -5.512236498361744e-07
    2. 'walk' → logprob: -14.875000953674316
    3. '_tree' → logprob: -16.625
    4. '_w' → logprob: -18.25
    5. '_nodes' → logprob: -19.0
    6. '_watch' → logprob: -19.75
    7. '_' → logprob: -19.875
    8. 'Walk' → logprob: -20.25
    9. '.walk' → logprob: -21.125
    10. '_visit' → logprob: -21.375

Token 736: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -3.173704271830502e-06
    2. 'nodes' → logprob: -13.12500286102295
    3. '(' → logprob: -14.25000286102295
    4. '(
' → logprob: -15.50000286102295
    5. ' (' → logprob: -15.87500286102295
    6. ' nodes' → logprob: -17.000003814697266
    7. '	nodes' → logprob: -17.125003814697266
    8. '(n' → logprob: -17.250003814697266
    9. '(notes' → logprob: -17.875003814697266
    10. '.nodes' → logprob: -18.000003814697266

Token 737: ',' (ID: 11)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.3872183859348297
    2. ',' → logprob: -1.1372183561325073
    3. ',n' → logprob: -8.512218475341797
    4. ' ,' → logprob: -9.762218475341797
    5. '       ' → logprob: -10.762218475341797
    6. '   ' → logprob: -10.887218475341797
    7. ',
' → logprob: -11.262218475341797
    8. ')' → logprob: -11.762218475341797
    9. '(
' → logprob: -11.762218475341797
    10. '(' → logprob: -12.012218475341797

Token 738: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.09122952818870544
    2. 'nodes' → logprob: -2.9662294387817383
    3. ' del' → logprob: -3.4662294387817383
    4. ' nodes' → logprob: -5.466229438781738
    5. '   ' → logprob: -9.216229438781738
    6. '	del' → logprob: -10.091229438781738
    7. '       ' → logprob: -10.841229438781738
    8. '           ' → logprob: -10.966229438781738
    9. '
' → logprob: -11.591229438781738
    10. '(del' → logprob: -11.841229438781738

Token 739: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -7.107425062713446e-06
    2. 'ode' → logprob: -12.625006675720215
    3. 'node' → logprob: -13.000006675720215
    4. 'del' → logprob: -14.500006675720215
    5. 'delete' → logprob: -14.750006675720215
    6. '
' → logprob: -16.00000762939453
    7. 'de' → logprob: -16.00000762939453
    8. ')' → logprob: -17.12500762939453
    9. '_NODE' → logprob: -17.12500762939453
    10. 'lete' → logprob: -17.50000762939453

Token 740: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.3133006691932678
    2. '.left' → logprob: -1.313300609588623
    3. '.' → logprob: -10.563301086425781
    4. 'right' → logprob: -12.063301086425781
    5. ' .' → logprob: -12.688301086425781
    6. '.key' → logprob: -13.563301086425781
    7. 'left' → logprob: -13.563301086425781
    8. '   ' → logprob: -14.313301086425781
    9. '[left' → logprob: -15.563301086425781
    10. '[right' → logprob: -15.813301086425781

Token 741: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008083211723715067
    2. ',in' → logprob: -7.375808238983154
    3. ' ,' → logprob: -8.625808715820312
    4. ',
' → logprob: -14.000808715820312
    5. ',key' → logprob: -15.125808715820312
    6. ',node' → logprob: -15.500808715820312
    7. '   ' → logprob: -15.750808715820312
    8. ' ' → logprob: -16.000808715820312
    9. ')' → logprob: -16.625808715820312
    10. '.in' → logprob: -16.625808715820312

Token 742: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.006719282828271389
    2. ' inorder' → logprob: -5.00671911239624
    3. ' in' → logprob: -13.131719589233398
    4. '   ' → logprob: -14.756719589233398
    5. '[in' → logprob: -14.756719589233398
    6. '	in' → logprob: -15.256719589233398
    7. ' ' → logprob: -15.881719589233398
    8. '
' → logprob: -15.881719589233398
    9. 'inode' → logprob: -16.1317195892334
    10. '"in' → logprob: -16.5067195892334

Token 743: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09609360992908478
    2. ')' → logprob: -2.9710936546325684
    3. ')
' → logprob: -3.2210936546325684
    4. '
' → logprob: -8.34609317779541
    5. '   ' → logprob: -9.34609317779541
    6. '        
' → logprob: -10.72109317779541
    7. '[' → logprob: -10.97109317779541
    8. 'def' → logprob: -11.22109317779541
    9. '[::-' → logprob: -11.47109317779541
    10. ' ' → logprob: -11.97109317779541

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026448803022503853
    2. 'success' → logprob: -3.9014487266540527
    3. 'next' → logprob: -5.651448726654053
    4. ' successor' → logprob: -6.651448726654053
    5. 'succ' → logprob: -7.276448726654053
    6. 'min' → logprob: -9.026449203491211
    7. '   ' → logprob: -9.651449203491211
    8. 's' → logprob: -10.651449203491211
    9. ' next' → logprob: -10.776449203491211
    10. 'replace' → logprob: -11.026449203491211

Token 745: ' swap' (ID: 25489)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.2941164970397949
    2. 'succ' → logprob: -1.919116497039795
    3. 'min' → logprob: -2.669116497039795
    4. 's' → logprob: -4.919116497039795
    5. 'next' → logprob: -5.044116497039795
    6. 'replace' → logprob: -5.294116497039795
    7. 'switch' → logprob: -5.419116497039795
    8. 'in' → logprob: -5.669116497039795
    9. 'target' → logprob: -5.919116497039795
    10. 'del' → logprob: -6.419116497039795

Token 746: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.006805483717471361
    2. '_key' → logprob: -5.756805419921875
    3. '_min' → logprob: -7.006805419921875
    4. '_candidate' → logprob: -7.256805419921875
    5. '_no' → logprob: -7.506805419921875
    6. 'node' → logprob: -8.256805419921875
    7. 'min' → logprob: -8.256805419921875
    8. 'per' → logprob: -8.256805419921875
    9. '_success' → logprob: -8.256805419921875
    10. '_child' → logprob: -9.131805419921875

Token 747: ' =' (ID: 314)
  Prédit: '_no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.0006762159755453467
    2. ' =' → logprob: -7.625676155090332
    3. '=' → logprob: -9.125676155090332
    4. '_key' → logprob: -10.125676155090332
    5. 'no' → logprob: -10.375676155090332
    6. 'No' → logprob: -12.500676155090332
    7. '=no' → logprob: -13.500676155090332
    8. '=_' → logprob: -14.000676155090332
    9. 'key' → logprob: -14.375676155090332
    10. '   ' → logprob: -14.875676155090332

Token 748: ' Node' (ID: 10882)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.012041699141263962
    2. 'in' → logprob: -5.0120415687561035
    3. ' nodes' → logprob: -5.2620415687561035
    4. '	nodes' → logprob: -9.387042045593262
    5. '   ' → logprob: -11.512042045593262
    6. '(nodes' → logprob: -11.762042045593262
    7. 'node' → logprob: -12.762042045593262
    8. ' ' → logprob: -12.824542045593262
    9. '.nodes' → logprob: -13.137042045593262
    10. ' in' → logprob: -13.324542045593262

Token 749: '(in' (ID: 9573)
  Prédit: '(in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.047261301428079605
    2. '(nodes' → logprob: -3.1722612380981445
    3. 'in' → logprob: -5.5472612380981445
    4. 'nodes' → logprob: -8.297261238098145
    5. '(' → logprob: -10.047261238098145
    6. '(min' → logprob: -10.672261238098145
    7. '()' → logprob: -11.797261238098145
    8. '((' → logprob: -12.172261238098145
    9. '(inplace' → logprob: -12.297261238098145
    10. '(keys' → logprob: -12.297261238098145

Token 750: 'order' (ID: 2143)
  Prédit: 'order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0033736536279320717
    2. 'oder' → logprob: -6.128373622894287
    3. 'ode' → logprob: -7.253373622894287
    4. '_order' → logprob: -8.378374099731445
    5. 'ore' → logprob: -9.628374099731445
    6. 'or' → logprob: -10.503374099731445
    7. '(order' → logprob: -10.753374099731445
    8. 'orde' → logprob: -11.003374099731445
    9. '_node' → logprob: -11.128374099731445
    10. 'ord' → logprob: -11.253374099731445

Token 751: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9623810658231378e-05
    2. '0' → logprob: -12.000020027160645
    3. '[-' → logprob: -12.125020027160645
    4. '[
' → logprob: -12.875020027160645
    5. '_tree' → logprob: -13.250020027160645
    6. ' [' → logprob: -14.000020027160645
    7. '   ' → logprob: -14.125020027160645
    8. '
' → logprob: -14.500020027160645
    9. 'tree' → logprob: -14.750020027160645
    10. '```' → logprob: -15.375020027160645

Token 752: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. '[' → logprob: -12.000007629394531
    3. ' ' → logprob: -13.375007629394531
    4. '   ' → logprob: -16.75000762939453
    5. '1' → logprob: -17.25000762939453
    6. '
' → logprob: -18.00000762939453
    7. '  ' → logprob: -18.62500762939453
    8. '00' → logprob: -19.62500762939453
    9. '۰' → logprob: -19.87500762939453
    10. '000' → logprob: -20.12500762939453

Token 753: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020775210112333298
    2. '])
' → logprob: -3.895775318145752
    3. '])
' → logprob: -9.395774841308594
    4. ' ])' → logprob: -9.895774841308594
    5. ')' → logprob: -10.020774841308594
    6. ']' → logprob: -10.520774841308594
    7. '])

' → logprob: -10.895774841308594
    8. ' ])
' → logprob: -12.770774841308594
    9. ')
' → logprob: -13.395774841308594
    10. ']);' → logprob: -13.645774841308594

Token 754: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060003711842000484
    2. 'swap' → logprob: -5.256000518798828
    3. '   ' → logprob: -7.881000518798828
    4. '	swap' → logprob: -9.006000518798828
    5. '<|end|>' → logprob: -9.756000518798828
    6. ' swap' → logprob: -10.131000518798828
    7. '        
' → logprob: -10.256000518798828
    8. 'nodes' → logprob: -10.506000518798828
    9. '
' → logprob: -10.631000518798828
    10. '.swap' → logprob: -11.131000518798828

Token 755: ' switch' (ID: 6160)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.7324622273445129
    2. 'swap' → logprob: -0.9824622273445129
    3. 'while' → logprob: -1.9824621677398682
    4. '       ' → logprob: -5.732462406158447
    5. '#' → logprob: -6.607462406158447
    6. '   ' → logprob: -7.232462406158447
    7. 'del' → logprob: -8.357461929321289
    8. 'parent' → logprob: -8.357461929321289
    9. 'success' → logprob: -8.482461929321289
    10. 'next' → logprob: -8.732461929321289

Token 756: '_child' (ID: 40474)
  Prédit: '_child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_child' → logprob: -0.002243035240098834
    2. '_node' → logprob: -6.6272430419921875
    3. 'child' → logprob: -7.1272430419921875
    4. '_nodes' → logprob: -9.752243041992188
    5. 'Child' → logprob: -11.502243041992188
    6. '_code' → logprob: -11.627243041992188
    7. 'nodes' → logprob: -11.877243041992188
    8. '(child' → logprob: -12.377243041992188
    9. 'node' → logprob: -12.752243041992188
    10. '```' → logprob: -12.877243041992188

Token 757: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -4.2987729102605954e-05
    2. 's' → logprob: -11.250042915344238
    3. '_nodes' → logprob: -12.000042915344238
    4. 'of' → logprob: -12.125042915344238
    5. '_for' → logprob: -12.500042915344238
    6. '_child' → logprob: -12.625042915344238
    7. 'def' → logprob: -13.375042915344238
    8. ' of' → logprob: -13.750042915344238
    9. '_to' → logprob: -13.750042915344238
    10. '_node' → logprob: -14.000042915344238

Token 758: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.16051708161830902
    2. 'parent' → logprob: -1.9105170965194702
    3. 'nodes' → logprob: -8.660516738891602
    4. 'switch' → logprob: -9.785516738891602
    5. 'Parent' → logprob: -9.910516738891602
    6. ' parent' → logprob: -12.410516738891602
    7. '	parent' → logprob: -13.035516738891602
    8. '_PARENT' → logprob: -13.160516738891602
    9. 'tokens' → logprob: -13.910516738891602
    10. '-parent' → logprob: -14.535516738891602

Token 759: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.8624639324116288e-06
    2. '(tokens' → logprob: -14.000001907348633
    3. '(' → logprob: -15.000001907348633
    4. 'nodes' → logprob: -15.375001907348633
    5. '(n' → logprob: -15.875001907348633
    6. '	nodes' → logprob: -16.625001907348633
    7. '(
' → logprob: -17.000001907348633
    8. '(numbers' → logprob: -17.125001907348633
    9. ' (' → logprob: -17.125001907348633
    10. '```' → logprob: -17.250001907348633

Token 760: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0721818283200264
    2. ',n' → logprob: -2.9471819400787354
    3. '(nodes' → logprob: -4.072181701660156
    4. '[n' → logprob: -10.197181701660156
    5. ' ,' → logprob: -10.197181701660156
    6. '(n' → logprob: -11.447181701660156
    7. ',
' → logprob: -11.697181701660156
    8. ')' → logprob: -12.197181701660156
    9. ',node' → logprob: -12.947181701660156
    10. ',s' → logprob: -13.197181701660156

Token 761: ' del' (ID: 1083)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.029763801023364067
    2. ' nodes' → logprob: -3.529763698577881
    3. '(nodes' → logprob: -11.529764175415039
    4. '	nodes' → logprob: -13.029764175415039
    5. '   ' → logprob: -14.779764175415039
    6. '.nodes' → logprob: -15.029764175415039
    7. '
' → logprob: -15.404764175415039
    8. '_nodes' → logprob: -15.904764175415039
    9. 'node' → logprob: -16.15476417541504
    10. '```' → logprob: -17.27976417541504

Token 762: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.007593491580337286
    2. 'ode' → logprob: -6.007593631744385
    3. 'del' → logprob: -6.007593631744385
    4. 'node' → logprob: -6.507593631744385
    5. 'swap' → logprob: -7.257593631744385
    6. 'Node' → logprob: -8.882593154907227
    7. 'delete' → logprob: -9.382593154907227
    8. 'de' → logprob: -10.132593154907227
    9. 'e' → logprob: -10.257593154907227
    10. 'el' → logprob: -11.132593154907227

Token 763: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012511172099038959
    2. ',n' → logprob: -10.00012493133545
    3. ' ,' → logprob: -10.75012493133545
    4. ',
' → logprob: -10.87512493133545
    5. ',s' → logprob: -10.87512493133545
    6. 'nodes' → logprob: -12.37512493133545
    7. ',node' → logprob: -12.37512493133545
    8. '(nodes' → logprob: -13.12512493133545
    9. '.swap' → logprob: -13.75012493133545
    10. ' nodes' → logprob: -13.87512493133545

Token 764: ' swap' (ID: 25489)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42926064133644104
    2. 'swap' → logprob: -1.0542606115341187
    3. ' swap' → logprob: -8.17926025390625
    4. 'sw' → logprob: -8.42926025390625
    5. '	swap' → logprob: -11.17926025390625
    6. ' inorder' → logprob: -11.80426025390625
    7. ' in' → logprob: -11.92926025390625
    8. 's' → logprob: -12.17926025390625
    9. '	in' → logprob: -12.92926025390625
    10. 'inode' → logprob: -13.05426025390625

Token 765: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.009006763808429241
    2. 'node' → logprob: -4.884006977081299
    3. '[' → logprob: -6.759006977081299
    4. 'in' → logprob: -9.00900650024414
    5. ')' → logprob: -10.63400650024414
    6. '[in' → logprob: -11.13400650024414
    7. 'n' → logprob: -11.25900650024414
    8. '_tree' → logprob: -11.38400650024414
    9. 'Node' → logprob: -12.13400650024414
    10. 'nod' → logprob: -12.38400650024414

Token 766: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.001353806466795504
    2. '.right' → logprob: -7.251353740692139
    3. '.left' → logprob: -8.126354217529297
    4. 'key' → logprob: -8.876354217529297
    5. ')' → logprob: -9.001354217529297
    6. 'No' → logprob: -10.251354217529297
    7. '.no' → logprob: -10.876354217529297
    8. '_no' → logprob: -11.376354217529297
    9. ' .' → logprob: -12.501354217529297
    10. '.' → logprob: -12.751354217529297

Token 767: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5184168219566345
    2. '       ' → logprob: -1.0184168815612793
    3. ')
' → logprob: -3.1434168815612793
    4. '
' → logprob: -9.768416404724121
    5. '   ' → logprob: -10.018416404724121
    6. 'swap' → logprob: -10.393416404724121
    7. ')

' → logprob: -10.893416404724121
    8. 'nodes' → logprob: -11.018416404724121
    9. ')
' → logprob: -11.143416404724121
    10. ',' → logprob: -11.643416404724121

Token 768: '       ' (ID: 309)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.5710318684577942
    2. 'nodes' → logprob: -1.4460318088531494
    3. '       ' → logprob: -1.8210318088531494
    4. '	swap' → logprob: -4.1960320472717285
    5. '.swap' → logprob: -5.6960320472717285
    6. '
' → logprob: -5.6960320472717285
    7. '	nodes' → logprob: -5.8210320472717285
    8. ' nodes' → logprob: -6.0710320472717285
    9. '   ' → logprob: -6.3210320472717285
    10. '<|end|>' → logprob: -6.5710320472717285

Token 769: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.24785326421260834
    2. 'if' → logprob: -1.8728532791137695
    3. 'nodes' → logprob: -3.2478532791137695
    4. '       ' → logprob: -4.3728532791137695
    5. '#' → logprob: -4.9978532791137695
    6. 'cur' → logprob: -5.1228532791137695
    7. 'del' → logprob: -7.9978532791137695
    8. 'def' → logprob: -8.74785327911377
    9. '   ' → logprob: -8.87285327911377
    10. 'right' → logprob: -8.99785327911377

Token 770: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.00501564797013998
    2. '.left' → logprob: -6.630015850067139
    3. '_nodes' → logprob: -7.005015850067139
    4. '_key' → logprob: -7.505015850067139
    5. 'node' → logprob: -7.505015850067139
    6. '_no' → logprob: -7.880015850067139
    7. '_index' → logprob: -8.38001537322998
    8. '.key' → logprob: -8.75501537322998
    9. '_left' → logprob: -8.88001537322998
    10. '.swap' → logprob: -9.25501537322998

Token 771: '.parent' (ID: 17454)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.3326861262321472
    2. '.parent' → logprob: -1.707686185836792
    3. '.right' → logprob: -2.707686185836792
    4. ' =' → logprob: -3.707686185836792
    5. '=' → logprob: -4.957685947418213
    6. '_parent' → logprob: -6.832685947418213
    7. 'parent' → logprob: -7.332685947418213
    8. '.key' → logprob: -7.832685947418213
    9. '_node' → logprob: -7.957685947418213
    10. 'left' → logprob: -8.332686424255371

Token 772: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16023093461990356
    2. '=' → logprob: -1.9102308750152588
    3. ' ' → logprob: -12.66023063659668
    4. ',' → logprob: -13.03523063659668
    5. ' =
' → logprob: -15.78523063659668
    6. '=node' → logprob: -15.91023063659668
    7. '=None' → logprob: -16.16023063659668
    8. '＝' → logprob: -16.41023063659668
    9. '=sys' → logprob: -16.53523063659668
    10. ')' → logprob: -16.53523063659668

Token 773: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -4.930552313453518e-05
    2. 'nodes' → logprob: -10.625049591064453
    3. ' del' → logprob: -11.000049591064453
    4. 'None' → logprob: -12.750049591064453
    5. 'delete' → logprob: -12.875049591064453
    6. '	del' → logprob: -13.750049591064453
    7. '   ' → logprob: -14.000049591064453
    8. 'in' → logprob: -15.625049591064453
    9. 'deleted' → logprob: -16.250049591064453
    10. '(del' → logprob: -16.250049591064453

Token 774: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0007167232106439769
    2. 'ode' → logprob: -7.250716686248779
    3. 'ete' → logprob: -12.125717163085938
    4. 'Node' → logprob: -15.125717163085938
    5. 'ote' → logprob: -15.125717163085938
    6. 'node' → logprob: -15.250717163085938
    7. '_NODE' → logprob: -16.250717163085938
    8. 'e' → logprob: -16.500717163085938
    9. '_Node' → logprob: -16.625717163085938
    10. 'ope' → logprob: -17.250717163085938

Token 775: '.parent' (ID: 17454)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4803072512149811
    2. '.parent' → logprob: -0.9803072214126587
    3. '.right' → logprob: -5.605307102203369
    4. 'right' → logprob: -6.105307102203369
    5. '.key' → logprob: -8.605307579040527
    6. 'key' → logprob: -9.355307579040527
    7. ' parent' → logprob: -11.730307579040527
    8. '	parent' → logprob: -11.855307579040527
    9. '.left' → logprob: -12.355307579040527
    10. '   ' → logprob: -12.355307579040527

Token 776: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017727017402648926
    2. 'swap' → logprob: -4.392726898193359
    3. '
' → logprob: -6.142726898193359
    4. '<|end|>' → logprob: -6.892726898193359
    5. '	swap' → logprob: -7.767726898193359
    6. '        
' → logprob: -7.767726898193359
    7. '   ' → logprob: -7.767726898193359
    8. '.swap' → logprob: -8.64272689819336
    9. ',' → logprob: -9.01772689819336
    10. '#' → logprob: -9.26772689819336

Token 777: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020639756694436073
    2. 'swap' → logprob: -4.020639896392822
    3. '   ' → logprob: -7.145639896392822
    4. 'cur' → logprob: -7.395639896392822
    5. 'nodes' → logprob: -7.645639896392822
    6. '	swap' → logprob: -8.395639419555664
    7. '        
' → logprob: -9.145639419555664
    8. '#' → logprob: -9.520639419555664
    9. 'if' → logprob: -10.770639419555664
    10. '```' → logprob: -10.895639419555664

Token 778: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.058244865387678146
    2. 'if' → logprob: -3.4332449436187744
    3. 'cur' → logprob: -4.058244705200195
    4. '#' → logprob: -5.683244705200195
    5. 'nodes' → logprob: -6.308244705200195
    6. 'temp' → logprob: -7.808244705200195
    7. 'tmp' → logprob: -8.308244705200195
    8. 'left' → logprob: -8.683244705200195
    9. 'right' → logprob: -9.058244705200195
    10. 'node' → logprob: -9.058244705200195

Token 779: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0003909927327185869
    2. 'node' → logprob: -7.875391006469727
    3. 'Node' → logprob: -12.375391006469727
    4. '_nodes' → logprob: -12.500391006469727
    5. '_' → logprob: -14.250391006469727
    6. 'er' → logprob: -14.875391006469727
    7. '_swap' → logprob: -15.375391006469727
    8. 'swap' → logprob: -15.500391006469727
    9. 'o' → logprob: -15.625391006469727
    10. 'able' → logprob: -16.000391006469727

Token 780: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.0027230868581682444
    2. '.right' → logprob: -6.002723217010498
    3. '.' → logprob: -8.37772274017334
    4. '.parent' → logprob: -11.37772274017334
    5. '.key' → logprob: -13.62772274017334
    6. ' .' → logprob: -13.75272274017334
    7. '=' → logprob: -13.87772274017334
    8. 'left' → logprob: -13.87772274017334
    9. '.le' → logprob: -14.00272274017334
    10. '.has' → logprob: -15.25272274017334

Token 781: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740773141384125
    2. ' =' → logprob: -0.9740773439407349
    3. ',' → logprob: -16.724077224731445
    4. ' ' → logprob: -16.849077224731445
    5. '=
' → logprob: -17.349077224731445
    6. ' =
' → logprob: -17.849077224731445
    7. '=node' → logprob: -18.224077224731445
    8. '=s' → logprob: -18.974077224731445
    9. '<|end|>' → logprob: -18.974077224731445
    10. '＝' → logprob: -19.099077224731445

Token 782: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -1.3856492842023727e-06
    2. ' del' → logprob: -14.125000953674316
    3. '	del' → logprob: -14.750000953674316
    4. 'nodes' → logprob: -16.250001907348633
    5. '   ' → logprob: -17.125001907348633
    6. 'delete' → logprob: -17.625001907348633
    7. 'de' → logprob: -19.500001907348633
    8. '  ' → logprob: -20.625001907348633
    9. 'dele' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.125001907348633

Token 783: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0018305847188457847
    2. 'ode' → logprob: -6.501830577850342
    3. 'node' → logprob: -8.5018310546875
    4. 'de' → logprob: -9.5018310546875
    5. 'Node' → logprob: -11.0018310546875
    6. 'del' → logprob: -11.1268310546875
    7. 'swap' → logprob: -12.1268310546875
    8. '_NODE' → logprob: -13.1268310546875
    9. 'e' → logprob: -13.2518310546875
    10. '```' → logprob: -13.8768310546875

Token 784: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -2.165027217415627e-05
    2. 'left' → logprob: -10.750021934509277
    3. '[left' → logprob: -16.00002098083496
    4. '   ' → logprob: -17.37502098083496
    5. '.' → logprob: -17.37502098083496
    6. '.key' → logprob: -17.87502098083496
    7. '.parent' → logprob: -19.25002098083496
    8. '.child' → logprob: -19.37502098083496
    9. '(left' → logprob: -19.50002098083496
    10. ' ' → logprob: -19.50002098083496

Token 785: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007965262979269028
    2. '
' → logprob: -5.382965087890625
    3. 'swap' → logprob: -6.007965087890625
    4. '   ' → logprob: -7.632965087890625
    5. '	swap' → logprob: -8.632965087890625
    6. ' swap' → logprob: -9.382965087890625
    7. '        
' → logprob: -9.632965087890625
    8. '           ' → logprob: -11.257965087890625
    9. '.swap' → logprob: -11.257965087890625
    10. '	' → logprob: -11.632965087890625

Token 786: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007775917649269104
    2. 'swap' → logprob: -5.007775783538818
    3. '
' → logprob: -7.882775783538818
    4. '   ' → logprob: -8.257776260375977
    5. '	swap' → logprob: -8.382776260375977
    6. ' swap' → logprob: -8.882776260375977
    7. '        
' → logprob: -10.882776260375977
    8. '	' → logprob: -11.632776260375977
    9. '           ' → logprob: -11.757776260375977
    10. '.swap' → logprob: -12.007776260375977

Token 787: ' if' (ID: 538)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -2.081584716506768e-05
    2. '       ' → logprob: -11.500020980834961
    3. 'nodes' → logprob: -11.625020980834961
    4. 'if' (adapté à ' if') → logprob: -14.125020980834961
    5. '   ' → logprob: -15.000020980834961
    6. '	swap' → logprob: -15.000020980834961
    7. ' swap' → logprob: -15.750020980834961
    8. '        
' → logprob: -17.37502098083496
    9. '           ' → logprob: -17.62502098083496
    10. 'switch' → logprob: -17.62502098083496

Token 788: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.6150307059288025
    2. 'nodes' → logprob: -1.6150307655334473
    3. 'del' → logprob: -1.7400307655334473
    4. ' swap' → logprob: -3.2400307655334473
    5. ' nodes' → logprob: -3.7400307655334473
    6. ' del' → logprob: -4.740030765533447
    7. 'len' → logprob: -4.740030765533447
    8. 'in' → logprob: -5.990030765533447
    9. 'not' → logprob: -7.865030765533447
    10. ' len' → logprob: -7.865030765533447

Token 789: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0002756366156972945
    2. 'node' → logprob: -10.000275611877441
    3. 'swap' → logprob: -10.000275611877441
    4. '_swap' → logprob: -10.000275611877441
    5. '_nodes' → logprob: -10.500275611877441
    6. 'ode' → logprob: -11.000275611877441
    7. 'Node' → logprob: -11.000275611877441
    8. 'o' → logprob: -11.750275611877441
    9. '_NODE' → logprob: -12.000275611877441
    10. '[' → logprob: -12.375275611877441

Token 790: '.key' (ID: 8839)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.05498214438557625
    2. '.right' → logprob: -2.9299821853637695
    3. '.has' → logprob: -9.80498218536377
    4. '.' → logprob: -11.05498218536377
    5. 'left' → logprob: -11.17998218536377
    6. ':' → logprob: -12.17998218536377
    7. '.parent' → logprob: -12.80498218536377
    8. '.key' → logprob: -13.67998218536377
    9. 'right' → logprob: -14.05498218536377
    10. ' is' → logprob: -14.30498218536377

Token 791: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.11103249341249466
    2. ' !=' → logprob: -2.486032485961914
    3. '==' → logprob: -3.861032485961914
    4. ' ==' → logprob: -7.611032485961914
    5. ' ' → logprob: -9.611032485961914
    6. 'not' → logprob: -9.986032485961914
    7. ' is' → logprob: -10.486032485961914
    8. '   ' → logprob: -10.611032485961914
    9. ' in' → logprob: -10.861032485961914
    10. ' not' → logprob: -10.986032485961914

Token 792: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' → logprob: -0.002300131833180785
    2. 'in' → logprob: -6.627300262451172
    3. 'nodes' → logprob: -7.127300262451172
    4. 'swap' → logprob: -9.002300262451172
    5. ' del' → logprob: -10.752300262451172
    6. '(del' → logprob: -11.627300262451172
    7. '	del' → logprob: -12.127300262451172
    8. 'delete' → logprob: -13.002300262451172
    9. 'sw' → logprob: -13.127300262451172
    10. '   ' → logprob: -13.502300262451172

Token 793: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.01719917170703411
    2. 'ode' → logprob: -4.1421990394592285
    3. 'node' → logprob: -7.0171990394592285
    4. 'ete' → logprob: -9.142199516296387
    5. 'Node' → logprob: -10.642199516296387
    6. 'delete' → logprob: -11.517199516296387
    7. 'ate' → logprob: -11.767199516296387
    8. '```' → logprob: -11.767199516296387
    9. '_Node' → logprob: -11.767199516296387
    10. 'swap' → logprob: -11.892199516296387

Token 794: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.005471617449074984
    2. 'right' → logprob: -5.880471706390381
    3. '.key' → logprob: -6.005471706390381
    4. '.left' → logprob: -8.755471229553223
    5. '.parent' → logprob: -11.380471229553223
    6. '   ' → logprob: -11.505471229553223
    7. '.' → logprob: -12.005471229553223
    8. 'key' → logprob: -12.255471229553223
    9. ' ' → logprob: -13.880471229553223
    10. '	right' → logprob: -14.005471229553223

Token 795: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024954993277788162
    2. ':
' → logprob: -3.7749550342559814
    3. ' and' → logprob: -7.649954795837402
    4. 'and' → logprob: -8.274954795837402
    5. '):' → logprob: -8.774954795837402
    6. '       ' → logprob: -8.899954795837402
    7. '   ' → logprob: -9.149954795837402
    8. '.keys' → logprob: -9.149954795837402
    9. ':return' → logprob: -9.524954795837402
    10. ' or' → logprob: -10.024954795837402

Token 796: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03628755360841751
    2. '       ' → logprob: -3.911287546157837
    3. ':
' → logprob: -5.036287784576416
    4. 'swap' → logprob: -5.536287784576416
    5. ':' → logprob: -5.911287784576416
    6. '```' → logprob: -7.786287784576416
    7. ' swap' → logprob: -7.911287784576416
    8. '               ' → logprob: -8.036287307739258
    9. ' and' → logprob: -8.036287307739258
    10. '   ' → logprob: -8.036287307739258

Token 797: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.09043945372104645
    2. '           ' → logprob: -2.590439558029175
    3. ' swap' → logprob: -4.965439319610596
    4. '       ' → logprob: -5.840439319610596
    5. '               ' → logprob: -7.090439319610596
    6. '	swap' → logprob: -8.090439796447754
    7. '   ' → logprob: -8.340439796447754
    8. '.swap' → logprob: -9.090439796447754
    9. 'nodes' → logprob: -10.215439796447754
    10. '                   ' → logprob: -10.965439796447754

Token 798: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -1.8550976164988242e-05
    2. 'Node' → logprob: -11.125018119812012
    3. '_Node' → logprob: -14.125018119812012
    4. 'node' → logprob: -14.375018119812012
    5. '_NODE' → logprob: -15.250018119812012
    6. '_' → logprob: -15.250018119812012
    7. ' ' → logprob: -15.375018119812012
    8. 'Nodo' → logprob: -15.500018119812012
    9. 'o' → logprob: -15.875018119812012
    10. '	Node' → logprob: -16.000019073486328

Token 799: '.right' (ID: 17627)
  Prédit: '.left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.008870185352861881
    2. '.right' → logprob: -4.7588701248168945
    3. '.' → logprob: -8.508870124816895
    4. '.parent' → logprob: -10.008870124816895
    5. '.has' → logprob: -12.383870124816895
    6. ' .' → logprob: -13.133870124816895
    7. '.is' → logprob: -14.633870124816895
    8. '.skip' → logprob: -15.008870124816895
    9. 'left' → logprob: -15.258870124816895
    10. '.set' → logprob: -15.258870124816895

Token 800: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759419798851013
    2. '=' → logprob: -0.8259419798851013
    3. '=None' → logprob: -13.075942039489746
    4. ' ' → logprob: -15.075942039489746
    5. 'None' → logprob: -17.32594108581543
    6. ',' → logprob: -17.45094108581543
    7. '   ' → logprob: -17.95094108581543
    8. '    ' → logprob: -18.07594108581543
    9. '==' → logprob: -18.07594108581543
    10. '=
' → logprob: -18.07594108581543

Token 801: ' None' (ID: 4662)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6574299931526184
    2. 'None' → logprob: -0.7824299931526184
    3. 'del' → logprob: -4.157430171966553
    4. 'swap' → logprob: -5.532430171966553
    5. '   ' → logprob: -6.407430171966553
    6. ' None' → logprob: -6.657430171966553
    7. ' nodes' → logprob: -7.157430171966553
    8. 'in' → logprob: -7.282430171966553
    9. 'none' → logprob: -9.157429695129395
    10. '	nodes' → logprob: -9.532429695129395

Token 802: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18796537816524506
    2. 'else' → logprob: -1.8129653930664062
    3. ' else' → logprob: -4.812965393066406
    4. '	else' → logprob: -10.562965393066406
    5. '   ' → logprob: -11.187965393066406
    6. '<|end|>' → logprob: -12.062965393066406
    7. '	' → logprob: -12.562965393066406
    8. '           ' → logprob: -12.937965393066406
    9. ')' → logprob: -12.937965393066406
    10. 'elif' → logprob: -13.062965393066406

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0861431360244751
    2. 'else' → logprob: -2.5861430168151855
    3. ' else' → logprob: -4.9611430168151855
    4. '   ' → logprob: -8.836143493652344
    5. '	else' → logprob: -9.961143493652344
    6. '	' → logprob: -11.461143493652344
    7. '<|end|>' → logprob: -12.336143493652344
    8. '           ' → logprob: -12.711143493652344
    9. ')' → logprob: -12.836143493652344
    10. '
' → logprob: -13.086143493652344

Token 804: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21169467270374298
    2. 'else' (adapté à ' else') → logprob: -1.7116947174072266
    3. ' else' → logprob: -4.586694717407227
    4. '   ' → logprob: -10.461694717407227
    5. '	else' → logprob: -11.711694717407227
    6. '	' → logprob: -13.336694717407227
    7. 'elif' → logprob: -13.586694717407227
    8. '           ' → logprob: -13.836694717407227
    9. ',' → logprob: -15.336694717407227
    10. ')' → logprob: -15.586694717407227

Token 805: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15982045233249664
    2. ':' → logprob: -2.034820556640625
    3. '           ' → logprob: -4.659820556640625
    4. '       ' → logprob: -4.909820556640625
    5. '               ' → logprob: -10.659820556640625
    6. ',' → logprob: -10.659820556640625
    7. ':

' → logprob: -10.659820556640625
    8. ' :
' → logprob: -11.284820556640625
    9. '):
' → logprob: -11.409820556640625
    10. '   ' → logprob: -11.409820556640625

Token 806: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16323916614055634
    2. '       ' → logprob: -1.9132391214370728
    3. 'swap' → logprob: -6.288239002227783
    4. '   ' → logprob: -7.038239002227783
    5. '               ' → logprob: -8.538239479064941
    6. ' swap' → logprob: -9.788239479064941
    7. '	swap' → logprob: -11.788239479064941
    8. '```' → logprob: -12.413239479064941
    9. '	       ' → logprob: -12.663239479064941
    10. '		' → logprob: -13.538239479064941

Token 807: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' (adapté à ' swap') → logprob: -0.0018966291099786758
    2. '       ' → logprob: -7.501896858215332
    3. 'nodes' → logprob: -7.626896858215332
    4. '           ' → logprob: -7.626896858215332
    5. '   ' → logprob: -8.376896858215332
    6. '	swap' → logprob: -9.751896858215332
    7. 'switch' → logprob: -10.376896858215332
    8. ' swap' → logprob: -10.751896858215332
    9. 'in' → logprob: -12.001896858215332
    10. 'node' → logprob: -12.126896858215332

Token 808: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -2.093505099765025e-05
    2. 'Node' → logprob: -11.000020980834961
    3. 'node' → logprob: -14.250020980834961
    4. '_' → logprob: -14.625020980834961
    5. '_swap' → logprob: -14.750020980834961
    6. '_tree' → logprob: -14.875020980834961
    7. '_root' → logprob: -15.000020980834961
    8. '_nodes' → logprob: -15.250020980834961
    9. '_pos' → logprob: -15.750020980834961
    10. '_key' → logprob: -15.875020980834961

Token 809: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -4.68022444692906e-05
    2. '.left' → logprob: -10.125046730041504
    3. '.' → logprob: -12.750046730041504
    4. '.parent' → logprob: -13.375046730041504
    5. '.key' → logprob: -13.625046730041504
    6. 'right' → logprob: -14.125046730041504
    7. '=' → logprob: -15.500046730041504
    8. ' =' → logprob: -16.37504768371582
    9. ' .' → logprob: -16.62504768371582
    10. 's' → logprob: -19.00004768371582

Token 810: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ' ' → logprob: -17.063261032104492
    4. ',' → logprob: -18.063261032104492
    5. '   ' → logprob: -18.813261032104492
    6. ' =
' → logprob: -18.938261032104492
    7. '＝' → logprob: -19.063261032104492
    8. '=
' → logprob: -19.438261032104492
    9. '=node' → logprob: -19.688261032104492
    10. ' ' → logprob: -19.813261032104492

Token 811: ' del' (ID: 1083)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.10489130765199661
    2. 'del' → logprob: -2.354891300201416
    3. 'in' → logprob: -5.604891300201416
    4. ' nodes' → logprob: -7.104891300201416
    5. ' del' → logprob: -9.854891777038574
    6. '   ' → logprob: -10.979891777038574
    7. ' ' → logprob: -11.104891777038574
    8. '	nodes' → logprob: -11.104891777038574
    9. 'node' → logprob: -11.229891777038574
    10. 'swap' → logprob: -11.604891777038574

Token 812: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0004249547782819718
    2. 'ode' → logprob: -7.875424861907959
    3. 'node' → logprob: -10.375425338745117
    4. 'Node' → logprob: -12.375425338745117
    5. 'delete' → logprob: -13.375425338745117
    6. 'de' → logprob: -13.375425338745117
    7. 'del' → logprob: -13.750425338745117
    8. 'e' → logprob: -14.000425338745117
    9. '```' → logprob: -14.375425338745117
    10. '_NODE' → logprob: -14.750425338745117

Token 813: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -9.849109119386412e-06
    2. 'right' → logprob: -12.500009536743164
    3. '[right' → logprob: -12.875009536743164
    4. '.left' → logprob: -13.000009536743164
    5. '.' → logprob: -14.625009536743164
    6. ' .' → logprob: -15.750009536743164
    7. '.key' → logprob: -15.875009536743164
    8. '```' → logprob: -16.250009536743164
    9. '   ' → logprob: -16.625009536743164
    10. '.parent' → logprob: -16.625009536743164

Token 814: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02525017224252224
    2. 'nodes' → logprob: -4.27524995803833
    3. '<|end|>' → logprob: -5.77524995803833
    4. '   ' → logprob: -6.15024995803833
    5. '           ' → logprob: -6.65024995803833
    6. '        
' → logprob: -6.77524995803833
    7. ' nodes' → logprob: -6.90024995803833
    8. '
' → logprob: -7.27524995803833
    9. '	nodes' → logprob: -7.27524995803833
    10. 'swap' → logprob: -8.275250434875488

Token 815: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05427195131778717
    2. 'nodes' → logprob: -3.554271936416626
    3. '   ' → logprob: -4.554272174835205
    4. '           ' → logprob: -5.304272174835205
    5. ' nodes' → logprob: -5.554272174835205
    6. '	nodes' → logprob: -6.554272174835205
    7. 'swap' → logprob: -6.679272174835205
    8. '<|end|>' → logprob: -7.304272174835205
    9. '```' → logprob: -7.679272174835205
    10. '               ' → logprob: -8.429271697998047

Token 816: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.002735328394919634
    2. '           ' → logprob: -6.627735137939453
    3. 'if' → logprob: -7.627735137939453
    4. '       ' → logprob: -8.127735137939453
    5. 'swap' → logprob: -8.252735137939453
    6. '   ' → logprob: -9.627735137939453
    7. '               ' → logprob: -9.877735137939453
    8. '#' → logprob: -10.002735137939453
    9. 'temp' → logprob: -10.377735137939453
    10. 'parent' → logprob: -10.502735137939453

Token 817: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10226397216320038
    2. '[in' → logprob: -2.352263927459717
    3. '[n' → logprob: -6.227263927459717
    4. '[node' → logprob: -9.727264404296875
    5. '[right' → logprob: -12.852264404296875
    6. '[left' → logprob: -12.977264404296875
    7. '[s' → logprob: -13.227264404296875
    8. '[parent' → logprob: -13.477264404296875
    9. '```' → logprob: -13.727264404296875
    10. 'in' → logprob: -13.727264404296875

Token 818: 'swap' (ID: 55961)
  Prédit: 'swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.1271720975637436
    2. 'del' → logprob: -2.1271719932556152
    3. ' swap' → logprob: -9.627172470092773
    4. 'sw' → logprob: -9.752172470092773
    5. 'nodes' → logprob: -10.502172470092773
    6. 'in' → logprob: -10.752172470092773
    7. '[' → logprob: -11.127172470092773
    8. '	swap' → logprob: -11.127172470092773
    9. ' del' → logprob: -11.752172470092773
    10. 'delete' → logprob: -12.002172470092773

Token 819: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0002955399686470628
    2. 'swap' → logprob: -8.500295639038086
    3. '_swap' → logprob: -10.500295639038086
    4. 'ode' → logprob: -10.750295639038086
    5. 'node' → logprob: -10.875295639038086
    6. '[' → logprob: -11.875295639038086
    7. '               ' → logprob: -12.500295639038086
    8. 'o' → logprob: -13.250295639038086
    9. 'Node' → logprob: -13.375295639038086
    10. '_nodes' → logprob: -13.625295639038086

Token 820: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.002227098448202014
    2. '.key' → logprob: -6.127227306365967
    3. 'right' → logprob: -11.002226829528809
    4. '.left' → logprob: -11.377226829528809
    5. '.parent' → logprob: -11.752226829528809
    6. '.swap' → logprob: -12.877226829528809
    7. '.' → logprob: -14.502226829528809
    8. '].' → logprob: -14.627226829528809
    9. '[right' → logprob: -15.127226829528809
    10. 'key' → logprob: -15.127226829528809

Token 821: '].' (ID: 1651)
  Prédit: '.parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parent' → logprob: -0.079209104180336
    2. '].' → logprob: -2.579209089279175
    3. '.' → logprob: -8.454209327697754
    4. ' .' → logprob: -9.704209327697754
    5. ').' → logprob: -10.579209327697754
    6. '}.' → logprob: -11.704209327697754
    7. ' ].' → logprob: -12.329209327697754
    8. '.key' → logprob: -13.204209327697754
    9. '.Parent' → logprob: -13.704209327697754
    10. '>.' → logprob: -14.079209327697754

Token 822: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -4.320199877838604e-07
    2. ' parent' → logprob: -15.25
    3. '.parent' → logprob: -16.375
    4. '	parent' → logprob: -18.375
    5. '_parent' → logprob: -18.625
    6. ',parent' → logprob: -19.625
    7. '[parent' → logprob: -19.875
    8. 'set' → logprob: -20.125
    9. '(parent' → logprob: -21.375
    10. '   ' → logprob: -22.125

Token 823: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931476593017578
    2. ' =' → logprob: -0.6931476593017578
    3. ' =
' → logprob: -15.568147659301758
    4. ' ' → logprob: -16.068147659301758
    5. '=s' → logprob: -16.193147659301758
    6. '=
' → logprob: -16.193147659301758
    7. '＝' → logprob: -17.443147659301758
    8. ' ==' → logprob: -17.443147659301758
    9. ')' → logprob: -18.693147659301758
    10. '==' → logprob: -18.943147659301758

Token 824: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.0004315036640036851
    2. ' swap' → logprob: -7.750431537628174
    3. '	swap' → logprob: -14.250431060791016
    4. 'sw' → logprob: -16.250431060791016
    5. 'switch' → logprob: -16.625431060791016
    6. '.swap' → logprob: -17.000431060791016
    7. 's' → logprob: -18.875431060791016
    8. '   ' → logprob: -20.375431060791016
    9. '_swap' → logprob: -20.375431060791016
    10. 'wap' → logprob: -21.125431060791016

Token 825: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.003631431143730879
    2. 'swap' → logprob: -5.753631591796875
    3. 'node' → logprob: -8.378631591796875
    4. '_swap' → logprob: -9.503631591796875
    5. '_key' → logprob: -10.503631591796875
    6. 'ode' → logprob: -11.128631591796875
    7. 'ok' → logprob: -11.253631591796875
    8. 'Node' → logprob: -11.503631591796875
    9. 'o' → logprob: -11.628631591796875
    10. 'key' → logprob: -11.753631591796875

Token 826: '.key' (ID: 8839)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10647176951169968
    2. '<|end|>' → logprob: -2.7314717769622803
    3. '   ' → logprob: -4.481471538543701
    4. 'nodes' → logprob: -5.106471538543701
    5. ')' → logprob: -5.231471538543701
    6. '
' → logprob: -5.356471538543701
    7. ' nodes' → logprob: -5.481471538543701
    8. '	nodes' → logprob: -7.356471538543701
    9. '(nodes' → logprob: -7.481471538543701
    10. '        
' → logprob: -7.606471538543701

Token 827: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05764705687761307
    2. '<|end|>' → logprob: -3.6826469898223877
    3. 'nodes' → logprob: -3.9326469898223877
    4. ' nodes' → logprob: -6.182647228240967
    5. '
' → logprob: -6.182647228240967
    6. '   ' → logprob: -6.432647228240967
    7. ')' → logprob: -6.432647228240967
    8. '           ' → logprob: -7.307647228240967
    9. '	nodes' → logprob: -7.432647228240967
    10. '        
' → logprob: -7.557647228240967

Token 828: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24304696917533875
    2. '   ' → logprob: -1.6180469989776611
    3. 'nodes' → logprob: -4.368046760559082
    4. ' nodes' → logprob: -5.993046760559082
    5. '	nodes' → logprob: -6.493046760559082
    6. ')' → logprob: -8.118046760559082
    7. '           ' → logprob: -8.868046760559082
    8. '<|end|>' → logprob: -8.993046760559082
    9. '(nodes' → logprob: -9.243046760559082
    10. '```' → logprob: -10.368046760559082

Token 829: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.05252184346318245
    2. '       ' → logprob: -3.9275219440460205
    3. '   ' → logprob: -4.177521705627441
    4. '#' → logprob: -5.677521705627441
    5. 'swap' → logprob: -5.677521705627441
    6. 'min' → logprob: -6.302521705627441
    7. 'for' → logprob: -6.427521705627441
    8. 'in' → logprob: -7.052521705627441
    9. 'del' → logprob: -7.052521705627441
    10. 'next' → logprob: -7.302521705627441

Token 830: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00040123690268956125
    2. '[in' → logprob: -7.875401020050049
    3. '[s' → logprob: -11.750401496887207
    4. '[node' → logprob: -12.875401496887207
    5. 'swap' → logprob: -13.750401496887207
    6. '[n' → logprob: -13.750401496887207
    7. ' [' → logprob: -14.125401496887207
    8. '

' → logprob: -14.250401496887207
    9. '.swap' → logprob: -14.500401496887207
    10. '```' → logprob: -14.500401496887207

Token 831: 'swap' (ID: 55961)
  Prédit: 'swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.0010472200810909271
    2. 'del' → logprob: -7.251047134399414
    3. ' swap' → logprob: -8.876047134399414
    4. 'in' → logprob: -9.126047134399414
    5. 'sw' → logprob: -9.876047134399414
    6. 'nodes' → logprob: -11.376047134399414
    7. 'delete' → logprob: -11.501047134399414
    8. '	swap' → logprob: -12.001047134399414
    9. 'root' → logprob: -13.251047134399414
    10. 'switch' → logprob: -13.501047134399414

Token 832: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.009793040342628956
    2. '_swap' → logprob: -4.884792804718018
    3. 'swap' → logprob: -6.259792804718018
    4. '[' → logprob: -9.259793281555176
    5. '_key' → logprob: -10.134793281555176
    6. ' swap' → logprob: -10.509793281555176
    7. '.swap' → logprob: -10.509793281555176
    8. '               ' → logprob: -11.509793281555176
    9. 's' → logprob: -11.509793281555176
    10. '	swap' → logprob: -11.509793281555176

Token 833: '.left' (ID: 15388)
  Prédit: '.key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.3826543092727661
    2. '.left' → logprob: -1.6326543092727661
    3. '.parent' → logprob: -2.6326541900634766
    4. '.right' → logprob: -3.3826541900634766
    5. ']' → logprob: -4.507654190063477
    6. '.swap' → logprob: -5.257654190063477
    7. 'parent' → logprob: -9.257654190063477
    8. '.' → logprob: -9.757654190063477
    9. ']=' → logprob: -10.007654190063477
    10. 'key' → logprob: -10.132654190063477

Token 834: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.030153553932905197
    2. '.parent' → logprob: -3.530153512954712
    3. ').' → logprob: -8.905153274536133
    4. '.' → logprob: -9.280153274536133
    5. '.key' → logprob: -9.655153274536133
    6. ' ].' → logprob: -10.155153274536133
    7. '   ' → logprob: -10.530153274536133
    8. ' .' → logprob: -11.280153274536133
    9. ']' → logprob: -11.780153274536133
    10. '       ' → logprob: -12.530153274536133

Token 835: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.1637164789135568e-05
    2. ' parent' → logprob: -11.375011444091797
    3. '	parent' → logprob: -16.500011444091797
    4. '.parent' → logprob: -18.000011444091797
    5. '_parent' → logprob: -19.000011444091797
    6. ',parent' → logprob: -19.000011444091797
    7. '(parent' → logprob: -19.250011444091797
    8. '
' → logprob: -20.375011444091797
    9. '[parent' → logprob: -20.375011444091797
    10. ' ' → logprob: -20.750011444091797

Token 836: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931474208831787
    2. ' =' → logprob: -0.6931474208831787
    3. '=s' → logprob: -16.193147659301758
    4. ' =
' → logprob: -16.568147659301758
    5. '=
' → logprob: -16.943147659301758
    6. ' ' → logprob: -17.568147659301758
    7. ',' → logprob: -18.568147659301758
    8. '＝' → logprob: -18.693147659301758
    9. '=

' → logprob: -18.818147659301758
    10. ' ==' → logprob: -19.068147659301758

Token 837: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.01416750717908144
    2. ' swap' → logprob: -4.264167308807373
    3. '	swap' → logprob: -13.139167785644531
    4. 'switch' → logprob: -13.514167785644531
    5. 'sw' → logprob: -15.139167785644531
    6. '   ' → logprob: -15.764167785644531
    7. '.swap' → logprob: -16.51416778564453
    8. 's' → logprob: -17.63916778564453
    9. '  ' → logprob: -17.76416778564453
    10. ' ' → logprob: -18.13916778564453

Token 838: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.031225476413965225
    2. '_key' → logprob: -3.5312254428863525
    3. '.key' → logprob: -7.531225681304932
    4. 'key' → logprob: -7.781225681304932
    5. '[key' → logprob: -9.281225204467773
    6. 'swap' → logprob: -9.906225204467773
    7. 'node' → logprob: -10.031225204467773
    8. '```' → logprob: -10.031225204467773
    9. '_swap' → logprob: -10.406225204467773
    10. '_token' → logprob: -10.406225204467773

Token 839: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.12693755328655243
    2. 'key' → logprob: -2.1269376277923584
    3. ' key' → logprob: -11.626937866210938
    4. '	key' → logprob: -15.376937866210938
    5. '.' → logprob: -16.001937866210938
    6. '_key' → logprob: -16.126937866210938
    7. '
' → logprob: -17.751937866210938
    8. ' ' → logprob: -17.876937866210938
    9. ':key' → logprob: -18.001937866210938
    10. '(key' → logprob: -18.001937866210938

Token 840: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5092147588729858
    2. '   ' → logprob: -1.1342147588729858
    3. 'nodes' → logprob: -3.3842148780822754
    4. '<|end|>' → logprob: -3.5092148780822754
    5. '	nodes' → logprob: -5.259214878082275
    6. ' nodes' → logprob: -5.259214878082275
    7. ')' → logprob: -7.384214878082275
    8. '(nodes' → logprob: -7.384214878082275
    9. '        
' → logprob: -7.634214878082275
    10. '
' → logprob: -7.634214878082275

Token 841: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0756455808877945
    2. 'nodes' → logprob: -2.700645685195923
    3. '   ' → logprob: -5.700645446777344
    4. ' nodes' → logprob: -6.325645446777344
    5. '	nodes' → logprob: -8.200645446777344
    6. '<|end|>' → logprob: -9.075645446777344
    7. '(nodes' → logprob: -10.075645446777344
    8. '        
' → logprob: -10.075645446777344
    9. '```' → logprob: -10.450645446777344
    10. '.nodes' → logprob: -11.825645446777344

Token 842: ' delete' (ID: 6168)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.027206523343920708
    2. '       ' → logprob: -3.7772064208984375
    3. 'del' → logprob: -6.2772064208984375
    4. '   ' → logprob: -6.4022064208984375
    5. ' nodes' → logprob: -8.777206420898438
    6. 'swap' → logprob: -9.527206420898438
    7. '#' → logprob: -9.902206420898438
    8. '	nodes' → logprob: -10.027206420898438
    9. '```' → logprob: -10.652206420898438
    10. 'for' → logprob: -10.777206420898438

Token 843: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0005812693270854652
    2. 'node' → logprob: -7.50058126449585
    3. 'delete' → logprob: -12.000581741333008
    4. 'Node' → logprob: -12.250581741333008
    5. '_nodes' → logprob: -13.000581741333008
    6. 'swap' → logprob: -13.125581741333008
    7. '
' → logprob: -13.125581741333008
    8. 'de' → logprob: -14.000581741333008
    9. 'nodes' → logprob: -14.000581741333008
    10. 'switch' → logprob: -14.250581741333008

Token 844: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -4.320199877838604e-07
    2. 'nodes' → logprob: -16.0
    3. '(tokens' → logprob: -16.625
    4. ' (' → logprob: -17.375
    5. '(notes' → logprob: -17.625
    6. '(users' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. '	nodes' → logprob: -18.375
    9. '(' → logprob: -18.5
    10. ' nodes' → logprob: -18.625

Token 845: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011200957233086228
    2. ',n' → logprob: -7.501120090484619
    3. '(nodes' → logprob: -7.501120090484619
    4. ' ,' → logprob: -11.251120567321777
    5. ',
' → logprob: -14.126120567321777
    6. '```' → logprob: -14.876120567321777
    7. '(n' → logprob: -16.00111961364746
    8. ',s' → logprob: -16.12611961364746
    9. 'nodes' → logprob: -16.62611961364746
    10. '   ' → logprob: -16.75111961364746

Token 846: ' swap' (ID: 25489)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5807547569274902
    2. 'swap' → logprob: -0.8307547569274902
    3. ' swap' → logprob: -5.45575475692749
    4. ' inorder' → logprob: -7.83075475692749
    5. 'sw' → logprob: -9.205755233764648
    6. ' in' → logprob: -10.705755233764648
    7. '	swap' → logprob: -12.330755233764648
    8. 'inode' → logprob: -13.580755233764648
    9. '.swap' → logprob: -13.705755233764648
    10. '[in' → logprob: -14.330755233764648

Token 847: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.7129126191139221
    2. 'in' → logprob: -1.5879125595092773
    3. 'order' → logprob: -1.7129125595092773
    4. 'ode' → logprob: -2.4629125595092773
    5. '[in' → logprob: -4.587912559509277
    6. 'node' → logprob: -4.837912559509277
    7. 'ort' → logprob: -5.087912559509277
    8. '[' → logprob: -5.212912559509277
    9. 'swap' → logprob: -6.462912559509277
    10. 'ord' → logprob: -6.587912559509277

Token 848: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.004568134900182486
    2. '.left' → logprob: -5.504568099975586
    3. '.right' → logprob: -7.629568099975586
    4. '.parent' → logprob: -13.379568099975586
    5. ' .' → logprob: -14.004568099975586
    6. 'key' → logprob: -14.004568099975586
    7. '.' → logprob: -15.254568099975586
    8. '```' → logprob: -16.254568099975586
    9. 'left' → logprob: -16.629568099975586
    10. ' key' → logprob: -17.879568099975586

Token 849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024631983251310885
    2. '   ' → logprob: -8.375246047973633
    3. ')
' → logprob: -11.375246047973633
    4. ' )' → logprob: -12.875246047973633
    5. '       ' → logprob: -14.375246047973633
    6. ')return' → logprob: -15.000246047973633
    7. '<|end|>' → logprob: -15.250246047973633
    8. ')#' → logprob: -16.000246047973633
    9. '}' → logprob: -17.125246047973633
    10. '#' → logprob: -17.125246047973633

Token 850: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10945606976747513
    2. '<|end|>' → logprob: -2.7344560623168945
    3. '       ' → logprob: -3.7344560623168945
    4. 'nodes' → logprob: -4.6094560623168945
    5. ')' → logprob: -6.4844560623168945
    6. 'tokens' → logprob: -7.2344560623168945
    7. 'return' → logprob: -7.4844560623168945
    8. ' nodes' → logprob: -7.6094560623168945
    9. '	nodes' → logprob: -7.6094560623168945
    10. '(nodes' → logprob: -8.859456062316895

Token 851: ' nodes' (ID: 15749)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23903509974479675
    2. 'nodes' (adapté à ' nodes') → logprob: -1.7390351295471191
    3. ' nodes' → logprob: -3.614035129547119
    4. '       ' → logprob: -4.989035129547119
    5. '	nodes' → logprob: -5.864035129547119
    6. '(nodes' → logprob: -9.489034652709961
    7. '.nodes' → logprob: -9.864034652709961
    8. '```' → logprob: -10.114034652709961
    9. 'del' → logprob: -10.614034652709961
    10. '_nodes' → logprob: -10.739034652709961

Token 852: '[' (ID: 58)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0009339710813947022
    2. '[' → logprob: -7.00093412399292
    3. 'pop' → logprob: -10.875933647155762
    4. '.' → logprob: -13.375933647155762
    5. ' .' → logprob: -14.125933647155762
    6. '.update' → logprob: -15.250933647155762
    7. '   ' → logprob: -15.375933647155762
    8. '[parent' → logprob: -15.375933647155762
    9. '```' → logprob: -15.625933647155762
    10. '.setdefault' → logprob: -15.875933647155762

Token 853: 'swap' (ID: 55961)
  Prédit: 'swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.1019478514790535
    2. 'del' → logprob: -2.351947784423828
    3. 'delete' → logprob: -6.976947784423828
    4. 'sw' → logprob: -7.601947784423828
    5. 'switch' → logprob: -8.351947784423828
    6. ' swap' → logprob: -10.226947784423828
    7. 'in' → logprob: -11.351947784423828
    8. 'root' → logprob: -12.101947784423828
    9. ' del' → logprob: -12.726947784423828
    10. '	swap' → logprob: -13.226947784423828

Token 854: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.01890859194099903
    2. 'swap' → logprob: -4.393908500671387
    3. 'ode' → logprob: -6.018908500671387
    4. '_swap' → logprob: -6.143908500671387
    5. 'node' → logprob: -7.518908500671387
    6. 'delete' → logprob: -7.768908500671387
    7. '_key' → logprob: -8.393908500671387
    8. 'op' → logprob: -8.518908500671387
    9. 'Node' → logprob: -9.268908500671387
    10. '[' → logprob: -9.518908500671387

Token 855: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -0.4393186867237091
    2. '.parent' → logprob: -1.6893186569213867
    3. '.left' → logprob: -1.9393186569213867
    4. ']' → logprob: -3.9393186569213867
    5. '.right' → logprob: -5.064318656921387
    6. 'parent' → logprob: -8.314318656921387
    7. ']=' → logprob: -8.439318656921387
    8. 'key' → logprob: -8.689318656921387
    9. '].' → logprob: -8.814318656921387
    10. 'left' → logprob: -9.189318656921387

Token 856: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6627338528633118
    2. ' =' → logprob: -1.162733793258667
    3. '=' → logprob: -1.787733793258667
    4. ']=' → logprob: -5.412734031677246
    5. ' ]' → logprob: -9.787734031677246
    6. ')' → logprob: -10.037734031677246
    7. '   ' → logprob: -10.787734031677246
    8. ' ' → logprob: -13.162734031677246
    9. ',' → logprob: -13.537734031677246
    10. ')=' → logprob: -13.662734031677246

Token 857: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868800103664398
    2. ' =' → logprob: -1.1368800401687622
    3. '   ' → logprob: -13.011879920959473
    4. '.' → logprob: -13.886879920959473
    5. ',' → logprob: -14.261879920959473
    6. ' ' → logprob: -14.511879920959473
    7. ')' → logprob: -14.761879920959473
    8. '=node' → logprob: -14.761879920959473
    9. '=
' → logprob: -14.886879920959473
    10. ']' → logprob: -14.886879920959473

Token 858: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -1.6047699318733066e-05
    2. ' swap' → logprob: -11.125016212463379
    3. 'switch' → logprob: -14.250016212463379
    4. '	swap' → logprob: -14.750016212463379
    5. 'Node' → logprob: -15.750016212463379
    6. 'sw' → logprob: -16.625015258789062
    7. 'nodes' → logprob: -18.375015258789062
    8. '   ' → logprob: -19.625015258789062
    9. '  ' → logprob: -20.000015258789062
    10. ' ' → logprob: -20.125015258789062

Token 859: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -9.968312951968983e-06
    2. 'node' → logprob: -12.000009536743164
    3. 'ode' → logprob: -12.875009536743164
    4. 'Node' → logprob: -14.000009536743164
    5. '_NODE' → logprob: -16.000009536743164
    6. '_Node' → logprob: -16.375009536743164
    7. '_nodes' → logprob: -16.750009536743164
    8. '_swap' → logprob: -17.375009536743164
    9. '_' → logprob: -17.625009536743164
    10. ' node' → logprob: -18.000009536743164

Token 860: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011453792452812195
    2. '<|end|>' → logprob: -4.886453628540039
    3. 'del' → logprob: -5.636453628540039
    4. ' del' → logprob: -9.386453628540039
    5. 'nodes' → logprob: -9.761453628540039
    6. '	del' → logprob: -10.636453628540039
    7. '
' → logprob: -10.636453628540039
    8. '    
' → logprob: -11.136453628540039
    9. '  ' → logprob: -11.261453628540039
    10. ' ' → logprob: -11.386453628540039

Token 861: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 862: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.19219739735126495
    2. '   ' → logprob: -1.8171974420547485
    3. ' del' → logprob: -4.692197322845459
    4. 'nodes' → logprob: -6.192197322845459
    5. 'if' → logprob: -7.067197322845459
    6. '	del' → logprob: -8.692197799682617
    7. ' if' → logprob: -9.567197799682617
    8. ' nodes' → logprob: -10.442197799682617
    9. 'return' → logprob: -11.567197799682617
    10. '    
' → logprob: -11.942197799682617

Token 863: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.11543165892362595
    2. 'nodes' → logprob: -2.240431547164917
    3. '(nodes' → logprob: -6.990431785583496
    4. '_node' → logprob: -6.990431785583496
    5. '_nodes' → logprob: -7.865431785583496
    6. 's' → logprob: -9.240431785583496
    7. 'ete' → logprob: -9.740431785583496
    8. 'te' → logprob: -10.115431785583496
    9. 'e' → logprob: -10.365431785583496
    10. '	nodes' → logprob: -10.365431785583496

Token 864: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. ' [' → logprob: -13.125005722045898
    3. '[node' → logprob: -13.500005722045898
    4. '   ' → logprob: -15.250005722045898
    5. '[data' → logprob: -15.250005722045898
    6. '[in' → logprob: -16.1250057220459
    7. '\[' → logprob: -16.1250057220459
    8. '[to' → logprob: -16.2500057220459
    9. '[
' → logprob: -16.3750057220459
    10. '[key' → logprob: -16.3750057220459

Token 865: 'delete' (ID: 8509)
  Prédit: 'delete'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' → logprob: -8.625866030342877e-05
    2. ' delete' → logprob: -9.750085830688477
    3. 'del' → logprob: -10.875085830688477
    4. '   ' → logprob: -12.125085830688477
    5. '	delete' → logprob: -13.875085830688477
    6. 'deleted' → logprob: -14.500085830688477
    7. 'dele' → logprob: -14.750085830688477
    8. '(delete' → logprob: -14.750085830688477
    9. '  ' → logprob: -15.125085830688477
    10. 'de' → logprob: -15.250085830688477

Token 866: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.13997869193553925
    2. 'te' → logprob: -2.1399786472320557
    3. 'e' → logprob: -5.139978885650635
    4. 'ete' → logprob: -5.764978885650635
    5. 'ate' → logprob: -6.514978885650635
    6. 'ote' → logprob: -6.889978885650635
    7. 'delete' → logprob: -7.014978885650635
    8. 'et' → logprob: -8.514978408813477
    9. 'lete' → logprob: -9.014978408813477
    10. 'node' → logprob: -10.014978408813477

Token 867: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -0.009428087621927261
    2. 'o' → logprob: -5.259428024291992
    3. 'no' → logprob: -5.509428024291992
    4. '_node' → logprob: -9.509428024291992
    5. 'e' → logprob: -10.134428024291992
    6. 'ode' → logprob: -11.884428024291992
    7. 'No' → logprob: -12.259428024291992
    8. '_o' → logprob: -13.384428024291992
    9. 'on' → logprob: -13.634428024291992
    10. '```' → logprob: -13.759428024291992

Token 868: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.596781946020201e-05
    2. ')' → logprob: -10.125045776367188
    3. ']
' → logprob: -12.875045776367188
    4. ' ]' → logprob: -12.875045776367188
    5. '])' → logprob: -15.625045776367188
    6. ')]' → logprob: -15.750045776367188
    7. '   ' → logprob: -16.125045776367188
    8. '<|end|>' → logprob: -16.500045776367188
    9. ']

' → logprob: -16.875045776367188
    10. '']' → logprob: -17.500045776367188

Token 869: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 870: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 871: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 872: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 873: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.012454908341169357
    2. ' main' → logprob: -4.512454986572266
    3. 'build' → logprob: -7.137454986572266
    4. 'print' → logprob: -7.637454986572266
    5. 'search' → logprob: -10.887454986572266
    6. 'read' → logprob: -11.012454986572266
    7. 'parse' → logprob: -11.137454986572266
    8. 'test' → logprob: -11.512454986572266
    9. 'solve' → logprob: -11.512454986572266
    10. 'delete' → logprob: -11.637454986572266

Token 874: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.5954712075181305e-05
    2. '():
' → logprob: -10.375036239624023
    3. ' ():' → logprob: -12.375036239624023
    4. '()' → logprob: -15.250036239624023
    5. '():
' → logprob: -16.250036239624023
    6. '(argv' → logprob: -16.750036239624023
    7. '(' → logprob: -17.750036239624023
    8. '():

' → logprob: -18.375036239624023
    9. '(args' → logprob: -19.625036239624023
    10. '().' → logprob: -19.625036239624023

Token 875: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9177040457725525
    2. 'n' → logprob: -1.0427041053771973
    3. ' n' → logprob: -1.7927041053771973
    4. 'nodes' → logprob: -3.0427041053771973
    5. ' nodes' → logprob: -4.042704105377197
    6. 'import' → logprob: -5.167704105377197
    7. 'num' → logprob: -5.917704105377197
    8. ' lines' → logprob: -6.167704105377197
    9. 'input' → logprob: -6.667704105377197
    10. '	n' → logprob: -7.042704105377197

Token 876: ' num' (ID: 2269)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7100167274475098
    2. '   ' → logprob: -0.8350167274475098
    3. ' n' → logprob: -3.2100167274475098
    4. 'nodes' → logprob: -4.08501672744751
    5. 'N' → logprob: -4.96001672744751
    6. 'num' (adapté à ' num') → logprob: -5.46001672744751
    7. 'import' → logprob: -5.96001672744751
    8. 'input' → logprob: -6.83501672744751
    9. ' nodes' → logprob: -6.83501672744751
    10. ' N' → logprob: -8.210016250610352

Token 877: '_com' (ID: 10828)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21880796551704407
    2. '_nodes' → logprob: -2.0938079357147217
    3. '=' → logprob: -3.5938079357147217
    4. '_queries' → logprob: -3.9688079357147217
    5. '_' → logprob: -4.468808174133301
    6. '_of' → logprob: -5.343808174133301
    7. '_commands' → logprob: -5.468808174133301
    8. '_inputs' → logprob: -6.718808174133301
    9. 'ber' → logprob: -6.843808174133301
    10. '_tokens' → logprob: -7.218808174133301

Token 878: ' =' (ID: 314)
  Prédit: 'mands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mands' → logprob: -0.0904848575592041
    2. 'mand' → logprob: -2.465484857559204
    3. 'and' → logprob: -6.965484619140625
    4. 'ands' → logprob: -8.715484619140625
    5. '=' → logprob: -9.340484619140625
    6. 'p' → logprob: -9.340484619140625
    7. '>' → logprob: -9.590484619140625
    8. 'm' → logprob: -10.090484619140625
    9. 'nds' → logprob: -10.215484619140625
    10. '```' → logprob: -10.590484619140625

Token 879: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02055496536195278
    2. ' int' → logprob: -3.895555019378662
    3. ' ' → logprob: -12.395554542541504
    4. '=int' → logprob: -13.020554542541504
    5. '[int' → logprob: -13.520554542541504
    6. '  ' → logprob: -13.645554542541504
    7. '   ' → logprob: -13.770554542541504
    8. '0' → logprob: -13.895554542541504
    9. '	int' → logprob: -14.145554542541504
    10. '(int' → logprob: -14.770554542541504

Token 880: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007336253300309181
    2. '(sys' → logprob: -5.007336139678955
    3. 'input' → logprob: -7.507336139678955
    4. '(' → logprob: -9.632336616516113
    5. 'sys' → logprob: -12.382336616516113
    6. '()' → logprob: -14.007336616516113
    7. ' (' → logprob: -14.507336616516113
    8. ' input' → logprob: -15.257336616516113
    9. '=input' → logprob: -16.507335662841797
    10. '(
' → logprob: -16.632335662841797

Token 881: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006395269301719964
    2. '()' → logprob: -7.50063943862915
    3. '().' → logprob: -9.500639915466309
    4. '())
' → logprob: -11.500639915466309
    5. ' ())' → logprob: -14.250639915466309
    6. '(' → logprob: -15.125639915466309
    7. '())

' → logprob: -15.750639915466309
    8. '();)' → logprob: -16.000638961791992
    9. '()
' → logprob: -16.125638961791992
    10. '()>' → logprob: -16.250638961791992

Token 882: '   ' (ID: 271)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.18276837468147278
    2. '   ' → logprob: -1.8077683448791504
    3. ' nodes' → logprob: -6.05776834487915
    4. '	nodes' → logprob: -7.68276834487915
    5. 'for' → logprob: -8.807768821716309
    6. '_nodes' → logprob: -10.682768821716309
    7. '(nodes' → logprob: -10.932768821716309
    8. ' for' → logprob: -11.182768821716309
    9. '  ' → logprob: -12.682768821716309
    10. '
' → logprob: -13.182768821716309

Token 883: ' commands' (ID: 23877)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.0011246218346059322
    2. ' nodes' → logprob: -7.501124858856201
    3. '   ' → logprob: -8.126124382019043
    4. 'for' → logprob: -8.251124382019043
    5. '	nodes' → logprob: -11.501124382019043
    6. ' for' → logprob: -13.001124382019043
    7. '(nodes' → logprob: -14.376124382019043
    8. '_nodes' → logprob: -14.626124382019043
    9. '```' → logprob: -14.876124382019043
    10. 'commands' (adapté à ' commands') → logprob: -15.376124382019043

Token 884: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931747794151306
    2. ' =' → logprob: -0.6931747794151306
    3. '=[]' → logprob: -11.068174362182617
    4. '_list' → logprob: -13.068174362182617
    5. '   ' → logprob: -13.068174362182617
    6. '_' → logprob: -13.068174362182617
    7. ' ' → logprob: -13.943174362182617
    8. '[]' → logprob: -14.318174362182617
    9. '=[]
' → logprob: -14.443174362182617
    10. '	' → logprob: -14.818174362182617

Token 885: ' sys' (ID: 12228)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09952066093683243
    2. '[]' → logprob: -2.599520683288574
    3. '[input' → logprob: -4.099520683288574
    4. '[list' → logprob: -7.224520683288574
    5. '[line' → logprob: -7.724520683288574
    6. '[int' → logprob: -7.849520683288574
    7. '[str' → logprob: -7.974520683288574
    8. '[s' → logprob: -8.224520683288574
    9. '[data' → logprob: -8.474520683288574
    10. '[num' → logprob: -8.724520683288574

Token 886: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.574251918005757e-05
    2. '.stdout' → logprob: -10.375055313110352
    3. '.' → logprob: -11.000055313110352
    4. '.argv' → logprob: -12.750055313110352
    5. 'stdin' → logprob: -12.750055313110352
    6. '.std' → logprob: -14.250055313110352
    7. '.stderr' → logprob: -15.125055313110352
    8. '.readline' → logprob: -15.375055313110352
    9. ' stdin' → logprob: -15.500055313110352
    10. ' .' → logprob: -15.875055313110352

Token 887: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.5781652927398682
    2. '.readline' → logprob: -0.8281652927398682
    3. '.read' → logprob: -6.453165054321289
    4. 'read' → logprob: -7.953165054321289
    5. '.' → logprob: -8.828165054321289
    6. '_lines' → logprob: -9.328165054321289
    7. '_read' → logprob: -10.953165054321289
    8. '<|end|>' → logprob: -10.953165054321289
    9. 'lines' → logprob: -11.828165054321289
    10. '   ' → logprob: -13.078165054321289

Token 888: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00027968952781520784
    2. '(' → logprob: -8.375279426574707
    3. '()
' → logprob: -10.500279426574707
    4. '(n' → logprob: -11.750279426574707
    5. '()[' → logprob: -12.750279426574707
    6. '()\' → logprob: -12.875279426574707
    7. '()]' → logprob: -13.125279426574707
    8. '(num' → logprob: -13.500279426574707
    9. ' ()' → logprob: -13.625279426574707
    10. '().' → logprob: -14.000279426574707

Token 889: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035478046629577875
    2. 'for' → logprob: -6.128547668457031
    3. ' for' → logprob: -7.628547668457031
    4. '    
' → logprob: -8.128547668457031
    5. '	nodes' → logprob: -8.503547668457031
    6. '	for' → logprob: -8.628547668457031
    7. 'nodes' → logprob: -8.878547668457031
    8. '
' → logprob: -11.253547668457031
    9. '```' → logprob: -11.253547668457031
    10. ' nodes' → logprob: -11.628547668457031

Token 890: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' (adapté à ' nodes') → logprob: -0.6150112152099609
    2. ' nodes' → logprob: -0.8650112152099609
    3. '   ' → logprob: -3.365011215209961
    4. ' for' → logprob: -6.240011215209961
    5. '	nodes' → logprob: -6.990011215209961
    6. 'for' → logprob: -7.365011215209961
    7. '_nodes' → logprob: -9.365011215209961
    8. '```' → logprob: -9.990011215209961
    9. 'node' → logprob: -10.115011215209961
    10. '(nodes' → logprob: -10.865011215209961

Token 891: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12701073288917542
    2. ' =' → logprob: -2.1270108222961426
    3. '={}' → logprob: -9.502010345458984
    4. '=[]' → logprob: -12.627010345458984
    5. ':' → logprob: -13.502010345458984
    6. '   ' → logprob: -13.752010345458984
    7. ',' → logprob: -13.877010345458984
    8. ' ' → logprob: -14.752010345458984
    9. '={' → logprob: -15.377010345458984
    10. '={}
' → logprob: -15.502010345458984

Token 892: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -2.8921695047756657e-05
    2. 'dict' → logprob: -10.500028610229492
    3. '{}
' → logprob: -13.750028610229492
    4. ' {}' → logprob: -15.500028610229492
    5. '{}

' → logprob: -17.500028610229492
    6. ' dict' → logprob: -17.625028610229492
    7. '{' → logprob: -17.750028610229492
    8. '{})' → logprob: -18.875028610229492
    9. '={}' → logprob: -19.250028610229492
    10. '{}\' → logprob: -19.250028610229492

Token 893: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14889535307884216
    2. 'global' → logprob: -2.148895263671875
    3. 'for' → logprob: -4.398895263671875
    4. '	global' → logprob: -5.273895263671875
    5. 'root' → logprob: -6.648895263671875
    6. ' for' → logprob: -6.898895263671875
    7. ' global' → logprob: -7.023895263671875
    8. '	for' → logprob: -7.273895263671875
    9. '  ' → logprob: -9.273895263671875
    10. '```' → logprob: -9.523895263671875

Token 894: ' for' (ID: 395)
  Prédit: 'global'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'global' → logprob: -0.4366581439971924
    2. 'for' (adapté à ' for') → logprob: -1.0616581439971924
    3. 'root' → logprob: -4.936657905578613
    4. '   ' → logprob: -7.436657905578613
    5. ' global' → logprob: -9.811657905578613
    6. ' for' → logprob: -10.311657905578613
    7. '	global' → logprob: -10.436657905578613
    8. 'import' → logprob: -11.936657905578613
    9. '	for' → logprob: -12.186657905578613
    10. 'current' → logprob: -12.811657905578613

Token 895: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16774490475654602
    2. 'line' → logprob: -2.2927448749542236
    3. 'cmd' → logprob: -3.5427448749542236
    4. 'command' → logprob: -4.542745113372803
    5. 'com' → logprob: -5.042745113372803
    6. '_line' → logprob: -5.917745113372803
    7. ' i' → logprob: -6.167745113372803
    8. ' line' → logprob: -6.917745113372803
    9. 'c' → logprob: -7.667745113372803
    10. '_i' → logprob: -7.792745113372803

Token 896: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28127264976501465
    2. 'in' → logprob: -1.4062726497650146
    3. 'n' → logprob: -9.906272888183594
    4. ',' → logprob: -10.656272888183594
    5. ' ' → logprob: -10.781272888183594
    6. '	in' → logprob: -11.781272888183594
    7. '   ' → logprob: -12.031272888183594
    8. 's' → logprob: -13.281272888183594
    9. '0' → logprob: -13.406272888183594
    10. '  ' → logprob: -13.656272888183594

Token 897: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006725906860083342
    2. ' range' → logprob: -5.006725788116455
    3. 'commands' → logprob: -11.506726264953613
    4. '   ' → logprob: -16.006725311279297
    5. 'command' → logprob: -16.131725311279297
    6. ' ' → logprob: -16.381725311279297
    7. '	range' → logprob: -16.631725311279297
    8. '  ' → logprob: -16.881725311279297
    9. ' commands' → logprob: -17.256725311279297
    10. 'ange' → logprob: -17.631725311279297

Token 898: '(num' (ID: 15828)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005505641922354698
    2. '(num' → logprob: -5.255505561828613
    3. ' num' → logprob: -8.255505561828613
    4. '   ' → logprob: -12.380505561828613
    5. '1' → logprob: -12.505505561828613
    6. '	num' → logprob: -13.505505561828613
    7. '0' → logprob: -13.755505561828613
    8. '(' → logprob: -14.005505561828613
    9. ',num' → logprob: -14.630505561828613
    10. 'len' → logprob: -15.755505561828613

Token 899: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.00016218038217630237
    2. '_commands' → logprob: -8.750162124633789
    3. '(com' → logprob: -14.250162124633789
    4. '(' → logprob: -14.375162124633789
    5. '
' → logprob: -14.375162124633789
    6. 'commands' → logprob: -14.750162124633789
    7. 'com' → logprob: -15.125162124633789
    8. '_COM' → logprob: -15.375162124633789
    9. '(commands' → logprob: -15.500162124633789
    10. ')' → logprob: -16.00016212463379

Token 900: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1128886416554451
    2. '):' → logprob: -2.2378885746002197
    3. ' ):
' → logprob: -10.98788833618164
    4. '   ' → logprob: -11.23788833618164
    5. ' ):' → logprob: -11.36288833618164
    6. ':' → logprob: -11.73788833618164
    7. ':
' → logprob: -12.11288833618164
    8. '):
' → logprob: -12.23788833618164
    9. '():
' → logprob: -13.61288833618164
    10. ')' → logprob: -13.86288833618164

Token 901: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0925922766327858
    2. '   ' → logprob: -2.467592239379883
    3. 'tokens' → logprob: -5.967592239379883
    4. ' parts' → logprob: -7.842592239379883
    5. ' line' → logprob: -8.217592239379883
    6. ' tokens' → logprob: -8.467592239379883
    7. 'parts' → logprob: -9.967592239379883
    8. ' command' → logprob: -10.592592239379883
    9. 'command' → logprob: -10.717592239379883
    10. 'cmd' → logprob: -10.842592239379883

Token 902: ' if' (ID: 538)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.7963287830352783
    2. 'command' → logprob: -1.2963287830352783
    3. '       ' → logprob: -2.1713287830352783
    4. 'line' → logprob: -2.5463287830352783
    5. 'com' → logprob: -2.7963287830352783
    6. 'parts' → logprob: -4.421328544616699
    7. '   ' → logprob: -5.421328544616699
    8. 'args' → logprob: -6.171328544616699
    9. 'tokens' → logprob: -7.171328544616699
    10. 'commands' → logprob: -8.1713285446167

Token 903: ' commands' (ID: 23877)
  Prédit: 'commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'commands' → logprob: -0.6623199582099915
    2. ' commands' → logprob: -0.7873199582099915
    3. ' not' → logprob: -3.9123198986053467
    4. ' len' → logprob: -5.787320137023926
    5. 'len' → logprob: -6.412320137023926
    6. ' i' → logprob: -6.412320137023926
    7. 'i' → logprob: -7.287320137023926
    8. '(commands' → logprob: -7.287320137023926
    9. '   ' → logprob: -7.537320137023926
    10. 'not' → logprob: -7.787320137023926

Token 904: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. ' [' → logprob: -13.625003814697266
    3. '[' → logprob: -13.750003814697266
    4. '   ' → logprob: -14.125003814697266
    5. '       ' → logprob: -15.250003814697266
    6. '```' → logprob: -16.500003814697266
    7. '[
' → logprob: -17.125003814697266
    8. '][' → logprob: -17.250003814697266
    9. ' ' → logprob: -17.250003814697266
    10. '[int' → logprob: -17.750003814697266

Token 905: '][' (ID: 2696)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.01778370328247547
    2. '.strip' → logprob: -5.1427836418151855
    3. '[' → logprob: -5.7677836418151855
    4. '].' → logprob: -6.0177836418151855
    5. '[:' → logprob: -6.0177836418151855
    6. '.' → logprob: -6.0177836418151855
    7. ' ==' → logprob: -8.392784118652344
    8. '.split' → logprob: -8.392784118652344
    9. '][:' → logprob: -8.642784118652344
    10. ' .' → logprob: -8.892784118652344

Token 906: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007439327891916037
    2. ':' → logprob: -5.007439136505127
    3. ' ' → logprob: -8.632439613342285
    4. '3' → logprob: -9.007439613342285
    5. ' :' → logprob: -9.007439613342285
    6. '6' → logprob: -9.257439613342285
    7. 'startswith' → logprob: -10.132439613342285
    8. '4' → logprob: -10.632439613342285
    9. '1' → logprob: -10.632439613342285
    10. '5' → logprob: -10.757439613342285

Token 907: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8403245806694031
    2. ']' → logprob: -1.2153246402740479
    3. '==' → logprob: -1.9653246402740479
    4. '=' → logprob: -2.715324640274048
    5. ']==' → logprob: -3.715324640274048
    6. 's' → logprob: -4.340324401855469
    7. ' ]' → logprob: -4.715324401855469
    8. ' ' → logprob: -4.965324401855469
    9. ''' → logprob: -5.965324401855469
    10. ' =' → logprob: -6.215324401855469

Token 908: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13141494989395142
    2. '==' → logprob: -2.2564148902893066
    3. '=' → logprob: -4.631414890289307
    4. ' ' → logprob: -6.131414890289307
    5. '=='' → logprob: -6.256414890289307
    6. ' =' → logprob: -6.631414890289307
    7. 'i' → logprob: -7.131414890289307
    8. 's' → logprob: -7.256414890289307
    9. ' i' → logprob: -7.881414890289307
    10. ' =='' → logprob: -8.006415367126465

Token 909: ' '' (ID: 461)
  Prédit: ''I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''I' → logprob: -0.4242429733276367
    2. ''i' → logprob: -1.2992429733276367
    3. '"I' → logprob: -3.2992429733276367
    4. '"' → logprob: -4.174242973327637
    5. ''' → logprob: -4.299242973327637
    6. ''a' → logprob: -5.924242973327637
    7. ''d' → logprob: -7.049242973327637
    8. ''p' → logprob: -7.299242973327637
    9. ''S' → logprob: -7.424242973327637
    10. ''D' → logprob: -7.799242973327637

Token 910: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.024875929579138756
    2. 'p' → logprob: -3.8998758792877197
    3. 'I' → logprob: -6.024876117706299
    4. ''' → logprob: -7.524876117706299
    5. ''i' → logprob: -8.27487564086914
    6. ' ' → logprob: -8.39987564086914
    7. 'insert' → logprob: -8.39987564086914
    8. ' i' → logprob: -8.52487564086914
    9. 'f' → logprob: -9.77487564086914
    10. '"' → logprob: -10.02487564086914

Token 911: '':
' (ID: 7669)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006916061043739319
    2. '':' → logprob: -5.381916046142578
    3. ''' → logprob: -6.881916046142578
    4. ' '' → logprob: -7.631916046142578
    5. ''n' → logprob: -7.881916046142578
    6. '':
' → logprob: -8.131916046142578
    7. ' ':' → logprob: -10.256916046142578
    8. ''):
' → logprob: -11.256916046142578
    9. 'i' → logprob: -11.506916046142578
    10. ''):' → logprob: -11.631916046142578

Token 912: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05501193180680275
    2. ' n' → logprob: -3.1800119876861572
    3. '       ' → logprob: -5.180011749267578
    4. '   ' → logprob: -6.680011749267578
    5. ' ' → logprob: -6.805011749267578
    6. '        
' → logprob: -7.055011749267578
    7. '    ' → logprob: -8.180011749267578
    8. '       
' → logprob: -8.180011749267578
    9. ' 
' → logprob: -8.555011749267578
    10. '     ' → logprob: -8.555011749267578

Token 913: ' insert' (ID: 10898)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.08406129479408264
    2. 'n' → logprob: -3.20906138420105
    3. ' n' → logprob: -3.45906138420105
    4. 'key' → logprob: -6.084061145782471
    5. ' in' → logprob: -6.584061145782471
    6. ' insert' → logprob: -7.459061145782471
    7. ' parts' → logprob: -8.084061622619629
    8. '       ' → logprob: -8.209061622619629
    9. 'nd' → logprob: -8.209061622619629
    10. ' s' → logprob: -8.459061622619629

Token 914: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.001202850602567196
    2. ' (' → logprob: -7.0012030601501465
    3. '(' → logprob: -8.251202583312988
    4. '(
' → logprob: -10.876202583312988
    5. 'nodes' → logprob: -12.251202583312988
    6. '(tokens' → logprob: -13.876202583312988
    7. '
' → logprob: -13.876202583312988
    8. ',' → logprob: -14.251202583312988
    9. ')' → logprob: -14.376202583312988
    10. '(commands' → logprob: -14.751202583312988

Token 915: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031960124615579844
    2. '(nodes' → logprob: -6.3781962394714355
    3. ' ,' → logprob: -6.6281962394714355
    4. ',n' → logprob: -10.378195762634277
    5. '=' → logprob: -10.503195762634277
    6. ',
' → logprob: -10.628195762634277
    7. ',(' → logprob: -10.878195762634277
    8. ')' → logprob: -11.128195762634277
    9. 'nodes' → logprob: -11.753195762634277
    10. '(' → logprob: -11.753195762634277

Token 916: ' Node' (ID: 10882)
  Prédit: 'Node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.029753385111689568
    2. ' Node' → logprob: -3.5297534465789795
    3. '	Node' → logprob: -13.279753684997559
    4. '   ' → logprob: -14.154753684997559
    5. '(Node' → logprob: -15.779753684997559
    6. ' ' → logprob: -16.154752731323242
    7. '  ' → logprob: -16.279752731323242
    8. '_Node' → logprob: -17.404752731323242
    9. '.Node' → logprob: -17.529752731323242
    10. '    ' → logprob: -17.779752731323242

Token 917: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00031162876985035837
    2. 'int' → logprob: -8.125311851501465
    3. '(' → logprob: -12.250311851501465
    4. '   ' → logprob: -12.625311851501465
    5. '       ' → logprob: -12.875311851501465
    6. '           ' → logprob: -13.500311851501465
    7. ' (' → logprob: -14.250311851501465
    8. '               ' → logprob: -14.375311851501465
    9. '    ' → logprob: -15.000311851501465
    10. '(
' → logprob: -15.250311851501465

Token 918: '(commands' (ID: 167381)
  Prédit: '(commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(commands' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -13.500003814697266
    3. 'commands' → logprob: -13.500003814697266
    4. '(command' → logprob: -14.250003814697266
    5. '((' → logprob: -16.250003814697266
    6. ' (' → logprob: -16.375003814697266
    7. '(
' → logprob: -16.750003814697266
    8. ' commands' → logprob: -17.875003814697266
    9. '(cmd' → logprob: -19.000003814697266
    10. '('' → logprob: -19.375003814697266

Token 919: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008740320801734924
    2. '(i' → logprob: -4.758740425109863
    3. ' [' → logprob: -9.883740425109863
    4. '[' → logprob: -10.383740425109863
    5. '   ' → logprob: -11.133740425109863
    6. ' (' → logprob: -11.508740425109863
    7. '[int' → logprob: -12.133740425109863
    8. '()[' → logprob: -12.258740425109863
    9. '(' → logprob: -13.258740425109863
    10. '[
' → logprob: -13.758740425109863

Token 920: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06774021685123444
    2. '.split' → logprob: -2.8177402019500732
    3. '.strip' → logprob: -6.317740440368652
    4. 'split' → logprob: -7.317740440368652
    5. '().' → logprob: -7.817740440368652
    6. '.' → logprob: -7.817740440368652
    7. ' .' → logprob: -8.317740440368652
    8. '                   ' → logprob: -8.442740440368652
    9. '               ' → logprob: -8.442740440368652
    10. '7' → logprob: -8.567740440368652

Token 921: '7' (ID: 22)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.07636579871177673
    2. '6' → logprob: -3.0763657093048096
    3. '4' → logprob: -3.9513657093048096
    4. '7' → logprob: -4.951365947723389
    5. '10' → logprob: -8.20136547088623
    6. '8' → logprob: -8.82636547088623
    7. '(' → logprob: -9.20136547088623
    8. '   ' → logprob: -9.20136547088623
    9. '2' → logprob: -9.32636547088623
    10. '3' → logprob: -9.32636547088623

Token 922: ':]' (ID: 67377)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4640682339668274
    2. '()]' → logprob: -1.8390681743621826
    3. '()' → logprob: -2.4640681743621826
    4. ':].' → logprob: -3.2140681743621826
    5. '(' → logprob: -3.3390681743621826
    6. '()))' → logprob: -4.214068412780762
    7. '())))' → logprob: -4.339068412780762
    8. ']))' → logprob: -4.839068412780762
    9. ':]' → logprob: -5.589068412780762
    10. '())' → logprob: -5.839068412780762

Token 923: ')))
' (ID: 12562)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.34197983145713806
    2. '())))' → logprob: -1.8419798612594604
    3. ')))' → logprob: -2.091979742050171
    4. '.strip' → logprob: -5.21697998046875
    5. '()' → logprob: -7.09197998046875
    6. '()))' → logprob: -7.46697998046875
    7. '())))
' → logprob: -7.59197998046875
    8. '(' → logprob: -9.09197998046875
    9. '.rstrip' → logprob: -9.59197998046875
    10. '())' → logprob: -9.71697998046875

Token 924: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061823721043765545
    2. '<|end|>' → logprob: -5.1311821937561035
    3. 'elif' → logprob: -9.256182670593262
    4. ')' → logprob: -9.881182670593262
    5. '   ' → logprob: -10.381182670593262
    6. '<|end|>' → logprob: -11.006182670593262
    7. '	' → logprob: -11.381182670593262
    8. '
' → logprob: -11.506182670593262
    9. ' elif' → logprob: -11.506182670593262
    10. '	elif' → logprob: -12.006182670593262

Token 925: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026667507365345955
    2. 'elif' (adapté à ' elif') → logprob: -4.151667594909668
    3. ' elif' → logprob: -4.651667594909668
    4. '<|end|>' → logprob: -8.276667594909668
    5. '	' → logprob: -8.401667594909668
    6. '	elif' → logprob: -8.401667594909668
    7. '   ' → logprob: -8.776667594909668
    8. ' ' → logprob: -9.526667594909668
    9. 'else' → logprob: -11.026667594909668
    10. '
' → logprob: -11.276667594909668

Token 926: ' commands' (ID: 23877)
  Prédit: 'commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'commands' → logprob: -0.5759608745574951
    2. ' commands' → logprob: -0.8259608745574951
    3. '(commands' → logprob: -10.825961112976074
    4. '.commands' → logprob: -14.700961112976074
    5. '   ' → logprob: -14.950961112976074
    6. ' comandos' → logprob: -15.200961112976074
    7. 'command' → logprob: -15.325961112976074
    8. ' commandes' → logprob: -16.575960159301758
    9. 'Commands' → logprob: -17.075960159301758
    10. ' ' → logprob: -17.200960159301758

Token 927: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010973571334034204
    2. '[i' → logprob: -7.126097202301025
    3. ''[' → logprob: -8.876097679138184
    4. '['' → logprob: -10.126097679138184
    5. ' [' → logprob: -10.751097679138184
    6. '==' → logprob: -11.001097679138184
    7. ' ==' → logprob: -11.251097679138184
    8. ''' → logprob: -11.251097679138184
    9. '   ' → logprob: -11.376097679138184
    10. '[]' → logprob: -12.001097679138184

Token 928: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00032509511220268905
    2. '[:' → logprob: -9.125325202941895
    3. '.startswith' → logprob: -9.875325202941895
    4. '       ' → logprob: -10.000325202941895
    5. '][' → logprob: -10.125325202941895
    6. '           ' → logprob: -10.750325202941895
    7. '   ' → logprob: -10.875325202941895
    8. ' [' → logprob: -11.375325202941895
    9. '==' → logprob: -11.750325202941895
    10. ')[' → logprob: -12.500325202941895

Token 929: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018318959046155214
    2. ''' → logprob: -6.501832008361816
    3. ' ' → logprob: -9.251832008361816
    4. '1' → logprob: -9.376832008361816
    5. ''s' → logprob: -10.001832008361816
    6. ''i' → logprob: -10.751832008361816
    7. ''t' → logprob: -12.126832008361816
    8. '
' → logprob: -12.251832008361816
    9. ''f' → logprob: -12.251832008361816
    10. ''b' → logprob: -12.439332008361816

Token 930: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8159801363945007
    2. ' ==' → logprob: -1.4409801959991455
    3. '==' → logprob: -1.4409801959991455
    4. ']==' → logprob: -2.6909801959991455
    5. ']=='' → logprob: -5.190979957580566
    6. '=='' → logprob: -5.315979957580566
    7. '[' → logprob: -6.065979957580566
    8. '=' → logprob: -6.440979957580566
    9. ''' → logprob: -7.315979957580566
    10. '']' → logprob: -8.065979957580566

Token 931: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4772918224334717
    2. ' ==' → logprob: -0.9772918224334717
    3. '=='' → logprob: -6.227292060852051
    4. '=' → logprob: -6.977292060852051
    5. '[' → logprob: -9.22729206085205
    6. ' =='' → logprob: -9.47729206085205
    7. ' =' → logprob: -9.72729206085205
    8. '===' → logprob: -11.10229206085205
    9. '==
' → logprob: -11.60229206085205
    10. '='' → logprob: -11.60229206085205

Token 932: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.4931950867176056
    2. ''f' → logprob: -1.6181950569152832
    3. ''p' → logprob: -2.118195056915283
    4. ''s' → logprob: -3.243195056915283
    5. ''' → logprob: -3.993195056915283
    6. ' '' → logprob: -5.118195056915283
    7. ''o' → logprob: -6.368195056915283
    8. ''r' → logprob: -6.493195056915283
    9. ''l' → logprob: -7.368195056915283
    10. ''a' → logprob: -7.368195056915283

Token 933: 'p' (ID: 79)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0988202095031738
    2. 'p' → logprob: -1.2238202095031738
    3. 'f' → logprob: -1.7238202095031738
    4. ''p' → logprob: -2.348820209503174
    5. ''f' → logprob: -3.223820209503174
    6. ''d' → logprob: -3.848820209503174
    7. ''s' → logprob: -4.223820209503174
    8. ''' → logprob: -4.473820209503174
    9. 's' → logprob: -4.598820209503174
    10. ''r' → logprob: -8.098819732666016

Token 934: '':
' (ID: 7669)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.012254970148205757
    2. ''):' → logprob: -5.2622551918029785
    3. ''):
' → logprob: -5.6372551918029785
    4. '':' → logprob: -6.3872551918029785
    5. ' r' → logprob: -7.2622551918029785
    6. ''' → logprob: -8.01225471496582
    7. ''r' → logprob: -8.26225471496582
    8. ':' → logprob: -8.51225471496582
    9. 'u' → logprob: -10.13725471496582
    10. '':
' → logprob: -10.26225471496582

Token 935: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018627336248755455
    2. '           ' → logprob: -4.018627166748047
    3. 'print' → logprob: -7.893627166748047
    4. ' print' → logprob: -10.768627166748047
    5. '	   ' → logprob: -11.268627166748047
    6. '   ' → logprob: -11.393627166748047
    7. 'node' → logprob: -11.393627166748047
    8. '	       ' → logprob: -11.518627166748047
    9. 'if' → logprob: -12.018627166748047
    10. '#' → logprob: -12.018627166748047

Token 936: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4945606589317322
    2. 'print' → logprob: -1.619560718536377
    3. 'val' → logprob: -2.494560718536377
    4. 'num' → logprob: -3.869560718536377
    5. 't' → logprob: -4.119560718536377
    6. 'node' → logprob: -4.119560718536377
    7. 'if' → logprob: -4.369560718536377
    8. 'target' → logprob: -4.744560718536377
    9. 'find' → logprob: -4.869560718536377
    10. 'k' → logprob: -5.119560718536377

Token 937: ' inorder' (ID: 139692)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.7680959105491638
    2. 'val' → logprob: -2.1430959701538086
    3. 'node' → logprob: -2.2680959701538086
    4. 'print' → logprob: -2.3930959701538086
    5. 'target' → logprob: -2.7680959701538086
    6. 't' → logprob: -3.1430959701538086
    7. 'num' → logprob: -3.7680959701538086
    8. 'find' → logprob: -3.7680959701538086
    9. 'x' → logprob: -4.268095970153809
    10. 'k' → logprob: -4.518095970153809

Token 938: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3168318271636963
    2. '_tree' → logprob: -1.3168318271636963
    3. '_' → logprob: -1.4418318271636963
    4. '=' → logprob: -2.8168318271636963
    5. '_nodes' → logprob: -3.0668318271636963
    6. '()' → logprob: -3.1918318271636963
    7. '   ' → logprob: -3.8168318271636963
    8. '(nodes' → logprob: -4.316831588745117
    9. '_list' → logprob: -4.691831588745117
    10. '=[]' → logprob: -5.191831588745117

Token 939: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6090954542160034
    2. '_nodes' → logprob: -1.9840954542160034
    3. '_list' → logprob: -2.234095573425293
    4. '=' → logprob: -2.359095573425293
    5. '_' → logprob: -3.734095573425293
    6. '   ' → logprob: -4.609095573425293
    7. 'order' → logprob: -4.734095573425293
    8. 'def' → logprob: -4.734095573425293
    9. 'nodes' → logprob: -4.859095573425293
    10. 'list' → logprob: -4.859095573425293

Token 940: ' inorder' (ID: 139692)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.48064640164375305
    2. 'in' → logprob: -1.1056463718414307
    3. 'print' → logprob: -3.6056463718414307
    4. '   ' → logprob: -5.60564661026001
    5. 'result' → logprob: -5.85564661026001
    6. 'node' → logprob: -6.23064661026001
    7. 'cur' → logprob: -6.48064661026001
    8. 'res' → logprob: -6.60564661026001
    9. 'found' → logprob: -6.73064661026001
    10. 'ans' → logprob: -6.73064661026001

Token 941: ' =' (ID: 314)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.6419659852981567
    2. '=' → logprob: -1.1419659852981567
    3. ' =' → logprob: -1.8919659852981567
    4. '_nodes' → logprob: -6.391965866088867
    5. '=[]
' → logprob: -7.016965866088867
    6. '_list' → logprob: -7.766965866088867
    7. '[]' → logprob: -8.766965866088867
    8. ',' → logprob: -8.891965866088867
    9. '=list' → logprob: -9.516965866088867
    10. 'list' → logprob: -9.766965866088867

Token 942: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.005240514408797026
    2. '[]
' → logprob: -5.255240440368652
    3. ' []' → logprob: -12.505240440368652
    4. '=[]' → logprob: -13.505240440368652
    5. '[]

' → logprob: -14.505240440368652
    6. '[' → logprob: -15.255240440368652
    7. '[]}' → logprob: -15.505240440368652
    8. '[]>' → logprob: -15.880240440368652
    9. '([]' → logprob: -16.25524139404297
    10. ' []
' → logprob: -16.50524139404297

Token 943: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01219527143985033
    2. 'pre' → logprob: -4.512195110321045
    3. ' preorder' → logprob: -7.512195110321045
    4. 'in' → logprob: -7.637195110321045
    5. '       ' → logprob: -10.387195587158203
    6. '   ' → logprob: -10.387195587158203
    7. ' pre' → logprob: -11.137195587158203
    8. '          ' → logprob: -11.262195587158203
    9. '<|end|>' → logprob: -12.387195587158203
    10. '	pre' → logprob: -12.512195587158203

Token 944: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02644740603864193
    2. 'pre' → logprob: -3.651447296142578
    3. 'cur' → logprob: -9.776447296142578
    4. 'for' → logprob: -10.526447296142578
    5. 'root' → logprob: -11.151447296142578
    6. 'print' → logprob: -11.276447296142578
    7. 'def' → logprob: -11.776447296142578
    8. '   ' → logprob: -12.151447296142578
    9. 'nodes' → logprob: -12.151447296142578
    10. 'node' → logprob: -12.401447296142578

Token 945: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -0.00040290577453561127
    2. '=' → logprob: -8.625402450561523
    3. '=[]' → logprob: -9.375402450561523
    4. ' =' → logprob: -9.375402450561523
    5. '.append' → logprob: -10.750402450561523
    6. 'tree' → logprob: -11.125402450561523
    7. '=[]
' → logprob: -11.625402450561523
    8. '_' → logprob: -12.250402450561523
    9. '_TREE' → logprob: -14.500402450561523
    10. 'Tree' → logprob: -14.750402450561523

Token 946: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -6.704273118884885e-07
    2. 'walk' → logprob: -14.500000953674316
    3. '_nodes' → logprob: -16.875
    4. '_w' → logprob: -17.0
    5. '_tree' → logprob: -17.5
    6. '_' → logprob: -17.875
    7. 'Walk' → logprob: -19.5
    8. '(nodes' → logprob: -19.875
    9. '_watch' → logprob: -20.125
    10. '.walk' → logprob: -20.375

Token 947: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -3.8889261304575484e-06
    2. 'nodes' → logprob: -12.750003814697266
    3. '(' → logprob: -15.000003814697266
    4. '	nodes' → logprob: -15.625003814697266
    5. ' nodes' → logprob: -15.875003814697266
    6. '(
' → logprob: -16.500003814697266
    7. ' (' → logprob: -16.500003814697266
    8. '(tokens' → logprob: -17.000003814697266
    9. '.nodes' → logprob: -17.125003814697266
    10. '_nodes' → logprob: -17.750003814697266

Token 948: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16156339645385742
    2. '(nodes' → logprob: -1.9115633964538574
    3. '(root' → logprob: -6.911563396453857
    4. ')' → logprob: -8.786563873291016
    5. '(' → logprob: -9.036563873291016
    6. ',n' → logprob: -10.661563873291016
    7. ' ,' → logprob: -10.786563873291016
    8. '           ' → logprob: -11.911563873291016
    9. '),' → logprob: -12.411563873291016
    10. ',
' → logprob: -12.786563873291016

Token 949: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.00012439649435691535
    2. ' root' → logprob: -9.000123977661133
    3. '	root' → logprob: -14.250123977661133
    4. '(root' → logprob: -15.875123977661133
    5. '           ' → logprob: -16.000123977661133
    6. '   ' → logprob: -18.500123977661133
    7. '_root' → logprob: -18.750123977661133
    8. '[root' → logprob: -19.375123977661133
    9. '               ' → logprob: -19.625123977661133
    10. 'roots' → logprob: -19.875123977661133

Token 950: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.512236498361744e-07
    2. 'node' → logprob: -15.000000953674316
    3. '_nodes' → logprob: -16.125
    4. '_NODE' → logprob: -16.75
    5. '_no' → logprob: -17.0
    6. 'Node' → logprob: -17.375
    7. ')' → logprob: -18.875
    8. '_root' → logprob: -19.0
    9. '_key' → logprob: -19.125
    10. '-node' → logprob: -19.5

Token 951: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -6.034592388459714e-06
    2. 'no' → logprob: -12.500005722045898
    3. 'No' → logprob: -13.000005722045898
    4. '_NO' → logprob: -17.0000057220459
    5. ' no' → logprob: -18.6250057220459
    6. ' No' → logprob: -19.0000057220459
    7. '_No' → logprob: -19.1250057220459
    8. '_n' → logprob: -19.3750057220459
    9. '_root' → logprob: -19.3750057220459
    10. ')' → logprob: -19.6250057220459

Token 952: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013761838199570775
    2. ',in' → logprob: -7.126376152038574
    3. ' ,' → logprob: -7.501376152038574
    4. '           ' → logprob: -11.001376152038574
    5. '   ' → logprob: -15.001376152038574
    6. ',node' → logprob: -15.126376152038574
    7. '),' → logprob: -15.376376152038574
    8. '[in' → logprob: -15.626376152038574
    9. ')' → logprob: -15.626376152038574
    10. ',int' → logprob: -15.751376152038574

Token 953: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0380457378923893
    2. ' inorder' → logprob: -3.288045644760132
    3. ' in' → logprob: -12.913045883178711
    4. '	in' → logprob: -14.663045883178711
    5. '[in' → logprob: -15.413045883178711
    6. ' ' → logprob: -15.913045883178711
    7. 'In' → logprob: -16.16304588317871
    8. '
' → logprob: -16.16304588317871
    9. '   ' → logprob: -16.28804588317871
    10. '(in' → logprob: -16.41304588317871

Token 954: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17236988246440887
    2. ')
' → logprob: -1.9223698377609253
    3. ')' → logprob: -4.422369956970215
    4. '       ' → logprob: -10.922369956970215
    5. '
' → logprob: -11.422369956970215
    6. ',' → logprob: -12.047369956970215
    7. ')
' → logprob: -12.047369956970215
    8. '            
' → logprob: -12.047369956970215
    9. '<|end|>' → logprob: -12.672369956970215
    10. '          ' → logprob: -12.797369956970215

Token 955: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001201658509671688
    2. 'print' → logprob: -7.251201629638672
    3. ' for' → logprob: -8.251201629638672
    4. 'for' → logprob: -9.501201629638672
    5. '       ' → logprob: -9.626201629638672
    6. ' print' → logprob: -10.126201629638672
    7. '            
' → logprob: -11.126201629638672
    8. '<|end|>' → logprob: -11.376201629638672
    9. '
' → logprob: -11.876201629638672
    10. '   ' → logprob: -12.376201629638672

Token 956: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004546184558421373
    2. 'for' → logprob: -5.504546165466309
    3. ' print' → logprob: -8.004546165466309
    4. 'if' → logprob: -9.879546165466309
    5. '           ' → logprob: -10.129546165466309
    6. ' for' → logprob: -10.379546165466309
    7. '   ' → logprob: -12.254546165466309
    8. '       ' → logprob: -12.379546165466309
    9. '```' → logprob: -13.879546165466309
    10. 'sys' → logprob: -15.004546165466309

Token 957: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.037378307431936264
    2. '('' → logprob: -3.5373783111572266
    3. '(*' → logprob: -4.912378311157227
    4. '(' → logprob: -8.412378311157227
    5. '()' → logprob: -11.787378311157227
    6. '("")' → logprob: -12.037378311157227
    7. ' ("' → logprob: -13.287378311157227
    8. '"' → logprob: -13.662378311157227
    9. '(""' → logprob: -13.662378311157227
    10. '(in' → logprob: -14.162378311157227

Token 958: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.8172862529754639
    2. ' ".' → logprob: -0.8172862529754639
    3. '".' → logprob: -3.192286252975464
    4. ' "' → logprob: -3.317286252975464
    5. ''' → logprob: -4.817286491394043
    6. '{}' → logprob: -5.442286491394043
    7. 'IN' → logprob: -5.942286491394043
    8. 'I' → logprob: -5.942286491394043
    9. '"in' → logprob: -6.067286491394043
    10. 'Yes' → logprob: -6.317286491394043

Token 959: ' +' (ID: 659)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5759599804878235
    2. '.join' → logprob: -0.8259599804878235
    3. ' .' → logprob: -12.450960159301758
    4. '.j' → logprob: -12.575960159301758
    5. '.end' → logprob: -12.825960159301758
    6. 'join' → logprob: -12.950960159301758
    7. '"' → logprob: -13.075960159301758
    8. '".' → logprob: -13.700960159301758
    9. ').' → logprob: -13.825960159301758
    10. '.print' → logprob: -13.950960159301758

Token 960: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.032422468066215515
    2. '"in' → logprob: -3.6574225425720215
    3. 'in' → logprob: -5.7824225425720215
    4. ''' → logprob: -6.7824225425720215
    5. 'str' → logprob: -6.9074225425720215
    6. ' "' → logprob: -8.032422065734863
    7. ''in' → logprob: -8.532422065734863
    8. '",".' → logprob: -8.907422065734863
    9. '"In' → logprob: -9.532422065734863
    10. '"\' → logprob: -10.157422065734863

Token 961: ' ".' (ID: 11730)
  Prédit: '".'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.1523851901292801
    2. 'in' → logprob: -2.5273852348327637
    3. '"' → logprob: -3.5273852348327637
    4. '"in' → logprob: -3.5273852348327637
    5. '.in' → logprob: -6.777385234832764
    6. 'print' → logprob: -8.027384757995605
    7. '.join' → logprob: -8.152384757995605
    8. ' inorder' → logprob: -8.652384757995605
    9. ' ".' → logprob: -8.902384757995605
    10. '.' → logprob: -9.277384757995605

Token 962: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00028052396373823285
    2. '.join' → logprob: -8.375280380249023
    3. 'print' → logprob: -10.875280380249023
    4. '".' → logprob: -11.000280380249023
    5. '.' → logprob: -12.250280380249023
    6. 'j' → logprob: -12.375280380249023
    7. ' join' → logprob: -12.500280380249023
    8. '"' → logprob: -14.000280380249023
    9. 'jo' → logprob: -15.500280380249023
    10. '(join' → logprob: -16.500280380249023

Token 963: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.10032150894403458
    2. '(str' → logprob: -2.3503215312957764
    3. 'map' → logprob: -10.100321769714355
    4. '(list' → logprob: -10.100321769714355
    5. '([' → logprob: -10.475321769714355
    6. 'str' → logprob: -13.475321769714355
    7. '(' → logprob: -13.725321769714355
    8. '(in' → logprob: -13.850321769714355
    9. '[str' → logprob: -14.100321769714355
    10. 'list' → logprob: -16.47532081604004

Token 964: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -9.865583706414327e-05
    2. 'str' → logprob: -9.25009822845459
    3. ' str' → logprob: -14.00009822845459
    4. '=str' → logprob: -14.37509822845459
    5. '(' → logprob: -14.75009822845459
    6. '[str' → logprob: -15.12509822845459
    7. '(lambda' → logprob: -15.75009822845459
    8. '(chr' → logprob: -16.375099182128906
    9. ':str' → logprob: -16.625099182128906
    10. '	str' → logprob: -16.750099182128906

Token 965: ',' (ID: 11)
  Prédit: '(in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(in' → logprob: -0.004714802838861942
    2. ',in' → logprob: -5.5047149658203125
    3. ',' → logprob: -7.3797149658203125
    4. 'in' → logprob: -12.254714965820312
    5. '(inplace' → logprob: -13.504714965820312
    6. '(' → logprob: -13.754714965820312
    7. ')' → logprob: -13.754714965820312
    8. ' (' → logprob: -13.879714965820312
    9. '[in' → logprob: -13.879714965820312
    10. '=in' → logprob: -14.129714965820312

Token 966: ' inorder' (ID: 139692)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.0001863750658230856
    2. ' inorder' → logprob: -8.7501859664917
    3. '[in' → logprob: -10.6251859664917
    4. '(in' → logprob: -13.8751859664917
    5. '   ' → logprob: -14.1251859664917
    6. '[' → logprob: -14.8751859664917
    7. ' in' → logprob: -14.8751859664917
    8. 'inode' → logprob: -15.1251859664917
    9. '	in' → logprob: -15.5001859664917
    10. ' ' → logprob: -15.8751859664917

Token 967: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3870776295661926
    2. ')))' → logprob: -1.1370775699615479
    3. ')))
' → logprob: -9.637077331542969
    4. ')' → logprob: -9.762077331542969
    5. '))
' → logprob: -10.137077331542969
    6. '()))' → logprob: -11.137077331542969
    7. '   ' → logprob: -11.512077331542969
    8. '))))' → logprob: -12.012077331542969
    9. ' ))' → logprob: -12.637077331542969
    10. '       ' → logprob: -13.262077331542969

Token 968: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04343895986676216
    2. '<|end|>' → logprob: -3.1684389114379883
    3. '<|end|>' → logprob: -8.668438911437988
    4. 'elif' → logprob: -9.543438911437988
    5. '   ' → logprob: -9.918438911437988
    6. ')' → logprob: -10.043438911437988
    7. '	' → logprob: -10.168438911437988
    8. ' ' → logprob: -10.668438911437988
    9. '```' → logprob: -11.543438911437988
    10. '
' → logprob: -12.168438911437988

Token 969: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11634285748004913
    2. '           ' → logprob: -2.241342782974243
    3. 'pre' → logprob: -5.991343021392822
    4. 'elif' → logprob: -7.241343021392822
    5. '   ' → logprob: -8.991342544555664
    6. ' pre' → logprob: -10.116342544555664
    7. '            
' → logprob: -10.241342544555664
    8. 'print' → logprob: -10.741342544555664
    9. '
' → logprob: -10.991342544555664
    10. ' preorder' → logprob: -11.366342544555664

Token 970: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.018200397491455078
    2. '#' → logprob: -4.268200397491455
    3. '           ' → logprob: -5.643200397491455
    4. ' preorder' → logprob: -8.893199920654297
    5. '       ' → logprob: -9.268199920654297
    6. 'return' → logprob: -10.018199920654297
    7. 'continue' → logprob: -10.143199920654297
    8. 'post' → logprob: -10.143199920654297
    9. '            
' → logprob: -10.393199920654297
    10. '   ' → logprob: -11.018199920654297

Token 971: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38384613394737244
    2. '_tree' → logprob: -1.2588461637496948
    3. '
' → logprob: -4.383846282958984
    4. '   ' → logprob: -4.508846282958984
    5. '_pre' → logprob: -5.508846282958984
    6. ' =' → logprob: -5.883846282958984
    7. 'pre' → logprob: -6.758846282958984
    8. '       ' → logprob: -7.383846282958984
    9. '=' → logprob: -7.508846282958984
    10. '	pre' → logprob: -7.758846282958984

Token 972: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7982867360115051
    2. ' =' → logprob: -0.9232867360115051
    3. '=' → logprob: -2.0482866764068604
    4. '   ' → logprob: -4.4232869148254395
    5. '_tree' → logprob: -5.5482869148254395
    6. ' preorder' → logprob: -5.9232869148254395
    7. '       ' → logprob: -6.5482869148254395
    8. 'pre' → logprob: -6.6732869148254395
    9. '_pre' → logprob: -7.9232869148254395
    10. ' ' → logprob: -8.048286437988281

Token 973: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.018461287021636963
    2. ' preorder' → logprob: -4.018461227416992
    3. '           ' → logprob: -8.268461227416992
    4. ' pre' → logprob: -10.018461227416992
    5. '   ' → logprob: -12.393461227416992
    6. '       ' → logprob: -12.893461227416992
    7. '	pre' → logprob: -13.643461227416992
    8. ' ' → logprob: -14.518461227416992
    9. '_pre' → logprob: -15.268461227416992
    10. 'root' → logprob: -15.393461227416992

Token 974: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5898203253746033
    2. '_tree' → logprob: -0.8398203253746033
    3. '=' → logprob: -4.464820384979248
    4. '=[]' → logprob: -6.714820384979248
    5. '_' → logprob: -8.08981990814209
    6. '=[]
' → logprob: -8.33981990814209
    7. ' ' → logprob: -8.71481990814209
    8. '_list' → logprob: -8.96481990814209
    9. '_nodes' → logprob: -9.58981990814209
    10. 'tree' → logprob: -10.46481990814209

Token 975: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.3152904808521271
    2. '[]' → logprob: -1.3152904510498047
    3. ' []
' → logprob: -6.315290451049805
    4. ' []' → logprob: -8.440290451049805
    5. '=[]
' → logprob: -13.815290451049805
    6. '[]

' → logprob: -14.940290451049805
    7. '([])
' → logprob: -14.940290451049805
    8. ' []
' → logprob: -15.440290451049805
    9. '[])
' → logprob: -15.690290451049805
    10. '=[]' → logprob: -16.190290451049805

Token 976: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048701826483011246
    2. 'pre' → logprob: -3.048701763153076
    3. '(pre' → logprob: -9.798702239990234
    4. '_pre' → logprob: -10.548702239990234
    5. '	pre' → logprob: -11.298702239990234
    6. ' preorder' → logprob: -11.798702239990234
    7. ' pre' → logprob: -12.173702239990234
    8. '   ' → logprob: -13.173702239990234
    9. '          ' → logprob: -13.548702239990234
    10. '       ' → logprob: -13.798702239990234

Token 977: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -7.226628895296017e-06
    2. '           ' → logprob: -12.250007629394531
    3. ' preorder' → logprob: -13.000007629394531
    4. ' pre' → logprob: -17.25000762939453
    5. '   ' → logprob: -17.25000762939453
    6. '	pre' → logprob: -17.75000762939453
    7. '       ' → logprob: -18.00000762939453
    8. 'preced' → logprob: -19.00000762939453
    9. '(pre' → logprob: -19.12500762939453
    10. 'prev' → logprob: -19.62500762939453

Token 978: '_tree' (ID: 27118)
  Prédit: '_tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tree' → logprob: -1.2352385965641588e-05
    2. '.append' → logprob: -11.375012397766113
    3. 'tree' → logprob: -15.250012397766113
    4. ' =' → logprob: -15.625012397766113
    5. '=' → logprob: -16.125011444091797
    6. '_walk' → logprob: -16.375011444091797
    7. '_TREE' → logprob: -16.625011444091797
    8. '_' → logprob: -17.375011444091797
    9. '_t' → logprob: -18.000011444091797
    10. '<Tree' → logprob: -18.000011444091797

Token 979: '_walk' (ID: 143639)
  Prédit: '_walk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_walk' → logprob: -1.8624639324116288e-06
    2. '_tree' → logprob: -13.875001907348633
    3. 'walk' → logprob: -14.000001907348633
    4. '_w' → logprob: -17.875001907348633
    5. '_' → logprob: -18.250001907348633
    6. '_watch' → logprob: -19.500001907348633
    7. '_wrap' → logprob: -19.750001907348633
    8. '.walk' → logprob: -20.125001907348633
    9. '_append' → logprob: -20.625001907348633
    10. 'Walk' → logprob: -20.875001907348633

Token 980: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.6240566083070007e-06
    2. 'nodes' → logprob: -13.875001907348633
    3. ' (' → logprob: -15.250001907348633
    4. '(' → logprob: -15.375001907348633
    5. ' nodes' → logprob: -16.375001907348633
    6. '	nodes' → logprob: -16.875001907348633
    7. '(
' → logprob: -18.250001907348633
    8. '(tokens' → logprob: -18.250001907348633
    9. '.nodes' → logprob: -18.375001907348633
    10. '(numbers' → logprob: -18.750001907348633

Token 981: ',' (ID: 11)
  Prédit: '(nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -0.0030284523963928223
    2. ',' → logprob: -6.128028392791748
    3. ',n' → logprob: -7.378028392791748
    4. '	nodes' → logprob: -9.503028869628906
    5. ' nodes' → logprob: -9.628028869628906
    6. 'nodes' → logprob: -10.253028869628906
    7. '.nodes' → logprob: -11.253028869628906
    8. ' ,' → logprob: -11.753028869628906
    9. ')' → logprob: -12.128028869628906
    10. '           ' → logprob: -12.253028869628906

Token 982: ' root' (ID: 6577)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.02328496240079403
    2. ' nodes' → logprob: -3.773284912109375
    3. '(nodes' → logprob: -10.398284912109375
    4. '	nodes' → logprob: -12.148284912109375
    5. '.nodes' → logprob: -13.023284912109375
    6. 'root' → logprob: -14.023284912109375
    7. '_nodes' → logprob: -15.273284912109375
    8. 'node' → logprob: -16.273284912109375
    9. '           ' → logprob: -16.648284912109375
    10. 'roots' → logprob: -16.773284912109375

Token 983: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -5.9153885558771435e-06
    2. '_no' → logprob: -12.375005722045898
    3. '_nodes' → logprob: -13.625005722045898
    4. 'node' → logprob: -15.500005722045898
    5. 'ノ' → logprob: -16.2500057220459
    6. '_number' → logprob: -16.6250057220459
    7. 'no' → logprob: -17.1250057220459
    8. '_NODE' → logprob: -18.0000057220459
    9. '_root' → logprob: -18.3750057220459
    10. '```' → logprob: -18.7500057220459

Token 984: '_no' (ID: 13575)
  Prédit: '_no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_no' → logprob: -4.203409844194539e-05
    2. 'no' → logprob: -10.125041961669922
    3. 'No' → logprob: -13.500041961669922
    4. 'root' → logprob: -15.875041961669922
    5. 'nodes' → logprob: -17.000041961669922
    6. '_nodes' → logprob: -17.000041961669922
    7. ',no' → logprob: -17.125041961669922
    8. '	no' → logprob: -17.375041961669922
    9. '_NO' → logprob: -17.500041961669922
    10. ')' → logprob: -17.875041961669922

Token 985: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008727516396902502
    2. ' ,' → logprob: -7.750872611999512
    3. ',n' → logprob: -7.750872611999512
    4. ',node' → logprob: -12.250872611999512
    5. '(nodes' → logprob: -13.125872611999512
    6. ')' → logprob: -14.000872611999512
    7. '<|end|>' → logprob: -14.250872611999512
    8. '           ' → logprob: -14.500872611999512
    9. ',
' → logprob: -14.625872611999512
    10. ',p' → logprob: -15.125872611999512

Token 986: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.3133294880390167
    2. ' preorder' → logprob: -1.3133294582366943
    3. 'root' → logprob: -9.938329696655273
    4. ' pre' → logprob: -11.188329696655273
    5. '(pre' → logprob: -13.438329696655273
    6. ' root' → logprob: -13.813329696655273
    7. 'pr' → logprob: -13.938329696655273
    8. '	pre' → logprob: -14.063329696655273
    9. ' ' → logprob: -14.813329696655273
    10. '   ' → logprob: -15.938329696655273

Token 987: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6088544726371765
    2. ')
' → logprob: -0.8588544726371765
    3. '           ' → logprob: -3.9838545322418213
    4. '()' → logprob: -4.983854293823242
    5. '()
' → logprob: -5.483854293823242
    6. '())
' → logprob: -6.233854293823242
    7. '())' → logprob: -7.608854293823242
    8. '<|end|>' → logprob: -9.483854293823242
    9. '   ' → logprob: -10.108854293823242
    10. '       ' → logprob: -10.108854293823242

Token 988: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006556084263138473
    2. 'print' → logprob: -8.375655174255371
    3. '<|end|>' → logprob: -8.500655174255371
    4. '       ' → logprob: -9.875655174255371
    5. '()' → logprob: -10.375655174255371
    6. '[' → logprob: -10.500655174255371
    7. '(' → logprob: -10.750655174255371
    8. '   ' → logprob: -10.875655174255371
    9. ')' → logprob: -11.375655174255371
    10. '```' → logprob: -11.500655174255371

Token 989: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05498642846941948
    2. ' print' → logprob: -3.0549864768981934
    3. '           ' → logprob: -5.054986476898193
    4. '   ' → logprob: -15.054986000061035
    5. '	print' → logprob: -15.429986000061035
    6. ' ' → logprob: -15.554986000061035
    7. '
' → logprob: -16.17998695373535
    8. '          ' → logprob: -16.30498695373535
    9. '```' → logprob: -16.30498695373535
    10. '       ' → logprob: -17.17998695373535

Token 990: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -5.4192871175473556e-05
    2. '(' → logprob: -10.000054359436035
    3. '(""' → logprob: -12.750054359436035
    4. '("("' → logprob: -12.875054359436035
    5. '()' → logprob: -13.750054359436035
    6. '(pre' → logprob: -14.125054359436035
    7. '(("' → logprob: -14.625054359436035
    8. '("")' → logprob: -14.750054359436035
    9. '('' → logprob: -15.375054359436035
    10. '("="' → logprob: -16.62505340576172

Token 991: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03016037680208683
    2. ' "' → logprob: -3.530160427093506
    3. '""' → logprob: -8.405159950256348
    4. ''' → logprob: -9.280159950256348
    5. '("' → logprob: -9.655159950256348
    6. ' ' → logprob: -11.405159950256348
    7. ' ""' → logprob: -12.155159950256348
    8. ' ("' → logprob: -13.530159950256348
    9. '''' → logprob: -13.905159950256348
    10. '
' → logprob: -14.155159950256348

Token 992: ' +' (ID: 659)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11566529422998428
    2. '+' → logprob: -2.2406651973724365
    3. ' +' → logprob: -6.615665435791016
    4. ' "' → logprob: -7.240665435791016
    5. ')' → logprob: -8.365665435791016
    6. '+"' → logprob: -8.615665435791016
    7. ' ' → logprob: -9.115665435791016
    8. '""' → logprob: -9.490665435791016
    9. ''' → logprob: -10.115665435791016
    10. ',' → logprob: -10.240665435791016

Token 993: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.676292231422849e-05
    2. ' "' → logprob: -11.000017166137695
    3. ' ' → logprob: -17.000017166137695
    4. '"user' → logprob: -17.125017166137695
    5. ''' → logprob: -17.875017166137695
    6. '"time' → logprob: -18.250017166137695
    7. 'pre' → logprob: -18.750017166137695
    8. '
' → logprob: -19.250017166137695
    9. '"log' → logprob: -19.250017166137695
    10. '("' → logprob: -19.375017166137695

Token 994: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.8312570318812504e-05
    2. '".' → logprob: -11.625018119812012
    3. ' "' → logprob: -11.750018119812012
    4. '"user' → logprob: -15.000018119812012
    5. '"class' → logprob: -15.500018119812012
    6. ''' → logprob: -15.500018119812012
    7. '"time' → logprob: -16.125019073486328
    8. '.' → logprob: -16.500019073486328
    9. '"text' → logprob: -17.000019073486328
    10. '"log' → logprob: -17.250019073486328

Token 995: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. 'print' → logprob: -14.750000953674316
    3. '"' → logprob: -15.500000953674316
    4. '(join' → logprob: -15.500000953674316
    5. ' join' → logprob: -16.500001907348633
    6. '".' → logprob: -17.000001907348633
    7. 'jo' → logprob: -18.125001907348633
    8. '.join' → logprob: -18.625001907348633
    9. '
' → logprob: -20.000001907348633
    10. 'write' → logprob: -20.625001907348633

Token 996: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.988221684878226e-06
    2. 'map' → logprob: -12.500006675720215
    3. '(' → logprob: -13.125006675720215
    4. '(str' → logprob: -14.625006675720215
    5. '(list' → logprob: -14.750006675720215
    6. ' (' → logprob: -15.625006675720215
    7. ' map' → logprob: -17.25000762939453
    8. ',map' → logprob: -17.50000762939453
    9. '(
' → logprob: -18.12500762939453
    10. ')' → logprob: -18.12500762939453

Token 997: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005313486326485872
    2. 'str' → logprob: -8.000531196594238
    3. '(' → logprob: -8.875531196594238
    4. '=str' → logprob: -10.375531196594238
    5. '[str' → logprob: -11.000531196594238
    6. ')' → logprob: -13.000531196594238
    7. '	str' → logprob: -13.375531196594238
    8. '(
' → logprob: -13.375531196594238
    9. ' (' → logprob: -13.625531196594238
    10. '(s' → logprob: -14.625531196594238

Token 998: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.160289004445076
    2. '(pre' → logprob: -1.9102890491485596
    3. '(' → logprob: -10.03528881072998
    4. 'pre' → logprob: -12.16028881072998
    5. ' ,' → logprob: -12.41028881072998
    6. ',
' → logprob: -12.53528881072998
    7. ',(' → logprob: -12.66028881072998
    8. '(post' → logprob: -13.41028881072998
    9. '
' → logprob: -13.78528881072998
    10. ')' → logprob: -14.16028881072998

Token 999: ' preorder' (ID: 152292)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.002264328533783555
    2. ' preorder' → logprob: -6.252264499664307
    3. '(pre' → logprob: -8.002264022827148
    4. ' pre' → logprob: -14.002264022827148
    5. 'post' → logprob: -16.25226402282715
    6. '	pre' → logprob: -17.87726402282715
    7. ')' → logprob: -19.00226402282715
    8. '
' → logprob: -19.25226402282715
    9. 'per' → logprob: -19.37726402282715
    10. '[' → logprob: -19.50226402282715

Token 1000: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.006264831870794296
    2. '))' → logprob: -5.131264686584473
    3. ')))
' → logprob: -8.131264686584473
    4. ')' → logprob: -10.631264686584473
    5. '))
' → logprob: -12.381264686584473
    6. ' ' → logprob: -12.506264686584473
    7. '())))' → logprob: -12.506264686584473
    8. '))))' → logprob: -12.631264686584473
    9. ')));' → logprob: -13.631264686584473
    10. '   ' → logprob: -14.756264686584473

Token 1001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15828491747379303
    2. '<|end|>' → logprob: -2.158284902572632
    3. '   ' → logprob: -4.408285140991211
    4. 'elif' → logprob: -5.158285140991211
    5. '	' → logprob: -5.783285140991211
    6. 'else' → logprob: -6.283285140991211
    7. ' ' → logprob: -6.408285140991211
    8. ' elif' → logprob: -6.658285140991211
    9. ' else' → logprob: -6.658285140991211
    10. '        
' → logprob: -7.408285140991211

Token 1002: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4425281882286072
    2. 'elif' (adapté à ' elif') → logprob: -1.817528247833252
    3. ' elif' → logprob: -1.942528247833252
    4. '<|end|>' → logprob: -4.067528247833252
    5. '	elif' → logprob: -4.192528247833252
    6. 'else' → logprob: -5.067528247833252
    7. ' else' → logprob: -5.317528247833252
    8. '	' → logprob: -5.442528247833252
    9. ' ' → logprob: -6.317528247833252
    10. '   ' → logprob: -6.692528247833252

Token 1003: ' commands' (ID: 23877)
  Prédit: ' commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' commands' → logprob: -0.3873560428619385
    2. 'commands' → logprob: -1.1373560428619385
    3. '(commands' → logprob: -7.637355804443359
    4. '.commands' → logprob: -13.63735580444336
    5. 'command' → logprob: -14.26235580444336
    6. ' comandos' → logprob: -15.01235580444336
    7. '_commands' → logprob: -15.51235580444336
    8. ' commandes' → logprob: -15.76235580444336
    9. 'c' → logprob: -16.26235580444336
    10. '   ' → logprob: -16.26235580444336

Token 1004: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18000593781471252
    2. '[' → logprob: -1.8050059080123901
    3. ' [' → logprob: -9.80500602722168
    4. '   ' → logprob: -10.55500602722168
    5. '[int' → logprob: -10.55500602722168
    6. '[:' → logprob: -10.80500602722168
    7. '[I' → logprob: -11.05500602722168
    8. '[
' → logprob: -11.18000602722168
    9. '[len' → logprob: -11.30500602722168
    10. 'elif' → logprob: -11.30500602722168

Token 1005: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4299904704093933
    2. '[' → logprob: -1.054990530014038
    3. ' [' → logprob: -8.429990768432617
    4. '][:' → logprob: -8.679990768432617
    5. ']' → logprob: -9.054990768432617
    6. '[:' → logprob: -9.054990768432617
    7. ''[' → logprob: -9.054990768432617
    8. '           ' → logprob: -9.179990768432617
    9. '       ' → logprob: -9.429990768432617
    10. ')[' → logprob: -10.179990768432617

Token 1006: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10859105736017227
    2. '7' → logprob: -3.483591079711914
    3. '1' → logprob: -3.733591079711914
    4. '6' → logprob: -3.858591079711914
    5. ''' → logprob: -4.108591079711914
    6. '2' → logprob: -5.233591079711914
    7. '8' → logprob: -6.108591079711914
    8. '9' → logprob: -7.733591079711914
    9. '3' → logprob: -7.858591079711914
    10. '5' → logprob: -7.983591079711914

Token 1007: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5935148000717163
    2. ' ==' → logprob: -1.3435148000717163
    3. ']' → logprob: -2.343514919281006
    4. ']==' → logprob: -2.593514919281006
    5. '=' → logprob: -4.718514919281006
    6. ']=='' → logprob: -5.593514919281006
    7. '=='' → logprob: -6.718514919281006
    8. ':' → logprob: -7.718514919281006
    9. ' =' → logprob: -7.843514919281006
    10. '===' → logprob: -8.468514442443848

Token 1008: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6558836102485657
    2. '==' → logprob: -1.030883550643921
    3. '=' → logprob: -2.280883550643921
    4. '[' → logprob: -4.2808837890625
    5. ' =' → logprob: -5.1558837890625
    6. '=='' → logprob: -6.5308837890625
    7. '='' → logprob: -7.9058837890625
    8. '===' → logprob: -8.9058837890625
    9. ' =='' → logprob: -9.0308837890625
    10. '==
' → logprob: -9.7808837890625

Token 1009: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.07416925579309464
    2. ''f' → logprob: -3.199169158935547
    3. ''s' → logprob: -3.574169158935547
    4. ''' → logprob: -6.824169158935547
    5. ''r' → logprob: -7.449169158935547
    6. ' '' → logprob: -8.699169158935547
    7. ''e' → logprob: -8.824169158935547
    8. ''l' → logprob: -9.199169158935547
    9. 'f' → logprob: -9.324169158935547
    10. ''a' → logprob: -9.574169158935547

Token 1010: 'f' (ID: 69)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20727579295635223
    2. 'f' → logprob: -1.7072757482528687
    3. 's' → logprob: -5.207275867462158
    4. ''' → logprob: -9.082275390625
    5. 'p' → logprob: -9.457275390625
    6. 'r' → logprob: -10.082275390625
    7. '
' → logprob: -10.082275390625
    8. '`' → logprob: -10.832275390625
    9. ''f' → logprob: -11.082275390625
    10. 'delete' → logprob: -12.082275390625

Token 1011: '':
' (ID: 7669)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.001579374773427844
    2. 'i' → logprob: -7.001579284667969
    3. 'inding' → logprob: -8.876579284667969
    4. 'indt' → logprob: -9.876579284667969
    5. '```' → logprob: -9.876579284667969
    6. ' ind' → logprob: -10.001579284667969
    7. '<|end|>' → logprob: -10.001579284667969
    8. ' ' → logprob: -10.376579284667969
    9. 'inder' → logprob: -10.626579284667969
    10. ''ind' → logprob: -10.626579284667969

Token 1012: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37263479828834534
    2. '           ' → logprob: -1.247634768486023
    3. '<|end|>' → logprob: -4.9976348876953125
    4. '        ' → logprob: -5.7476348876953125
    5. '	       ' → logprob: -5.9976348876953125
    6. '(' → logprob: -6.7476348876953125
    7. '        
' → logprob: -6.8726348876953125
    8. '   ' → logprob: -6.9976348876953125
    9. '	   ' → logprob: -7.3726348876953125
    10. '<|end|>' → logprob: -7.3726348876953125

Token 1013: ' if' (ID: 538)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6555642485618591
    2. 'key' → logprob: -1.530564308166504
    3. '           ' → logprob: -2.030564308166504
    4. ' tgt' → logprob: -3.030564308166504
    5. 'target' → logprob: -3.280564308166504
    6. 'find' → logprob: -4.030564308166504
    7. 'num' → logprob: -5.155564308166504
    8. ' key' → logprob: -5.280564308166504
    9. ' t' → logprob: -5.780564308166504
    10. 'n' → logprob: -5.780564308166504

Token 1014: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0546441525220871
    2. ' int' → logprob: -3.5546441078186035
    3. 'find' → logprob: -3.9296441078186035
    4. 'int' → logprob: -5.6796441078186035
    5. ' commands' → logprob: -7.5546441078186035
    6. '(find' → logprob: -7.5546441078186035
    7. ' ' → logprob: -9.304644584655762
    8. ' len' → logprob: -9.304644584655762
    9. ' True' → logprob: -10.054644584655762
    10. '	find' → logprob: -10.179644584655762

Token 1015: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -8.709308167453855e-05
    2. '(' → logprob: -9.375086784362793
    3. ' (' → logprob: -14.125086784362793
    4. '(
' → logprob: -14.625086784362793
    5. '(tokens' → logprob: -15.125086784362793
    6. '(n' → logprob: -15.750086784362793
    7. '(numbers' → logprob: -15.875086784362793
    8. '(objects' → logprob: -16.37508773803711
    9. 'nodes' → logprob: -16.62508773803711
    10. '(users' → logprob: -16.87508773803711

Token 1016: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055209364742040634
    2. '(nodes' → logprob: -2.9302093982696533
    3. ',n' → logprob: -8.305209159851074
    4. ' ,' → logprob: -9.805209159851074
    5. 'nodes' → logprob: -11.180209159851074
    6. '(' → logprob: -13.055209159851074
    7. ' nodes' → logprob: -13.430209159851074
    8. ')' → logprob: -13.555209159851074
    9. '(n' → logprob: -13.555209159851074
    10. '(Node' → logprob: -13.930209159851074

Token 1017: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00012356207298580557
    2. ' int' → logprob: -9.000123977661133
    3. '(int' → logprob: -16.250123977661133
    4. '           ' → logprob: -17.875123977661133
    5. 'root' → logprob: -19.000123977661133
    6. '[int' → logprob: -19.250123977661133
    7. '<int' → logprob: -19.375123977661133
    8. '   ' → logprob: -19.625123977661133
    9. '               ' → logprob: -19.750123977661133
    10. '	int' → logprob: -20.625123977661133

Token 1018: '(commands' (ID: 167381)
  Prédit: '(commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(commands' → logprob: -2.45848218582978e-06
    2. 'commands' → logprob: -13.00000286102295
    3. '(command' → logprob: -16.375001907348633
    4. '(' → logprob: -18.375001907348633
    5. ' commands' → logprob: -19.125001907348633
    6. ' (' → logprob: -20.000001907348633
    7. '((' → logprob: -20.250001907348633
    8. '(
' → logprob: -20.250001907348633
    9. '(cmd' → logprob: -21.500001907348633
    10. '.commands' → logprob: -22.250001907348633

Token 1019: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -11.875006675720215
    3. '[I' → logprob: -19.12500762939453
    4. '[
' → logprob: -19.50000762939453
    5. '(i' → logprob: -19.87500762939453
    6. '[int' → logprob: -20.12500762939453
    7. '[f' → logprob: -20.25000762939453
    8. '{i' → logprob: -20.62500762939453
    9. 'i' → logprob: -20.75000762939453
    10. '```' → logprob: -22.00000762939453

Token 1020: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. ' [' → logprob: -14.625001907348633
    3. '       ' → logprob: -14.750001907348633
    4. '7' → logprob: -15.250001907348633
    5. '           ' → logprob: -15.500001907348633
    6. '[
' → logprob: -15.625001907348633
    7. '(' → logprob: -15.750001907348633
    8. '   ' → logprob: -16.375001907348633
    9. '[int' → logprob: -16.375001907348633
    10. '	' → logprob: -16.625001907348633

Token 1021: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.3611258864402771
    2. '6' → logprob: -1.6111259460449219
    3. '2' → logprob: -2.361125946044922
    4. '5' → logprob: -5.611125946044922
    5. '3' → logprob: -5.861125946044922
    6. '4' → logprob: -6.361125946044922
    7. '8' → logprob: -7.611125946044922
    8. ' ' → logprob: -8.986125946044922
    9. '
' → logprob: -9.861125946044922
    10. '9' → logprob: -9.861125946044922

Token 1022: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021914362907409668
    2. '():' → logprob: -4.646914482116699
    3. ':].' → logprob: -4.896914482116699
    4. ':]' → logprob: -5.521914482116699
    5. '()' → logprob: -7.521914482116699
    6. '(' → logprob: -10.3969144821167
    7. ']))' → logprob: -10.5219144821167
    8. '().' → logprob: -12.3969144821167
    9. '()]' → logprob: -12.3969144821167
    10. ':])
' → logprob: -12.8969144821167

Token 1023: '])):
' (ID: 145266)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.12926515936851501
    2. '])):
' → logprob: -2.129265069961548
    3. '])' → logprob: -6.379265308380127
    4. '].' → logprob: -8.629264831542969
    5. '])))' → logprob: -9.129264831542969
    6. ']' → logprob: -9.379264831542969
    7. ' ]' → logprob: -9.629264831542969
    8. ']):' → logprob: -9.754264831542969
    9. ']))
' → logprob: -10.129264831542969
    10. ']):
' → logprob: -10.379264831542969

Token 1024: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02384897693991661
    2. 'print' → logprob: -4.773849010467529
    3. ' print' → logprob: -4.773849010467529
    4. '           ' → logprob: -5.148849010467529
    5. '	           ' → logprob: -8.023848533630371
    6. '<|end|>' → logprob: -8.898848533630371
    7. '       ' → logprob: -9.523848533630371
    8. '	       ' → logprob: -10.273848533630371
    9. '                
' → logprob: -10.273848533630371
    10. '```' → logprob: -10.523848533630371

Token 1025: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006837918423116207
    2. '               ' → logprob: -5.256837844848633
    3. ' print' → logprob: -6.881837844848633
    4. '           ' → logprob: -7.506837844848633
    5. '   ' → logprob: -11.631837844848633
    6. '                   ' → logprob: -12.006837844848633
    7. '	print' → logprob: -12.006837844848633
    8. '       ' → logprob: -13.131837844848633
    9. '```' → logprob: -13.131837844848633
    10. '              ' → logprob: -14.631837844848633

Token 1026: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0006478638388216496
    2. '('' → logprob: -7.500648021697998
    3. '(' → logprob: -9.62564754486084
    4. '"' → logprob: -10.75064754486084
    5. '(True' → logprob: -12.12564754486084
    6. ' ("' → logprob: -14.37564754486084
    7. '("+' → logprob: -14.75064754486084
    8. '(":' → logprob: -14.75064754486084
    9. 'Yes' → logprob: -16.625648498535156
    10. '()' → logprob: -16.750648498535156

Token 1027: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.1569436639547348
    2. ''' → logprob: -2.4069435596466064
    3. 'Yes' → logprob: -3.5319435596466064
    4. '"' → logprob: -4.4069437980651855
    5. 'YES' → logprob: -5.1569437980651855
    6. '1' → logprob: -6.2819437980651855
    7. ' yes' → logprob: -6.7819437980651855
    8. ''ex' → logprob: -7.0319437980651855
    9. 'found' → logprob: -7.4069437980651855
    10. ''y' → logprob: -7.5319437980651855

Token 1028: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.11744456738233566
    2. ')' → logprob: -3.1174445152282715
    3. '')
' → logprob: -3.3674445152282715
    4. '")' → logprob: -3.6174445152282715
    5. '<|end|>' → logprob: -5.7424445152282715
    6. '")
' → logprob: -7.1174445152282715
    7. ')
' → logprob: -7.1174445152282715
    8. 'else' → logprob: -8.99244499206543
    9. '#else' → logprob: -9.86744499206543
    10. '```' → logprob: -9.86744499206543

Token 1029: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034272309858351946
    2. '               ' → logprob: -6.128427028656006
    3. 'else' → logprob: -7.753427028656006
    4. '       ' → logprob: -8.128427505493164
    5. '	       ' → logprob: -8.503427505493164
    6. '		' → logprob: -8.878427505493164
    7. ' else' → logprob: -9.003427505493164
    8. '<|end|>' → logprob: -10.878427505493164
    9. '	' → logprob: -11.878427505493164
    10. '	else' → logprob: -12.628427505493164

Token 1030: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17014318704605103
    2. 'else' (adapté à ' else') → logprob: -1.9201431274414062
    3. ' else' → logprob: -4.795143127441406
    4. '       ' → logprob: -6.795143127441406
    5. '	       ' → logprob: -8.545143127441406
    6. '		' → logprob: -8.545143127441406
    7. '	else' → logprob: -9.920143127441406
    8. '   ' → logprob: -11.795143127441406
    9. '<|end|>' → logprob: -11.795143127441406
    10. '               ' → logprob: -11.920143127441406

Token 1031: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011292428709566593
    2. ':
' → logprob: -5.136292457580566
    3. ':' → logprob: -5.261292457580566
    4. '           ' → logprob: -9.511292457580566
    5. '              ' → logprob: -10.511292457580566
    6. '       ' → logprob: -11.136292457580566
    7. '<|end|>' → logprob: -11.636292457580566
    8. '                ' → logprob: -12.261292457580566
    9. '             ' → logprob: -12.386292457580566
    10. '                   ' → logprob: -12.386292457580566

Token 1032: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014455914497375488
    2. 'print' → logprob: -6.626445770263672
    3. '           ' → logprob: -9.626445770263672
    4. ' print' → logprob: -11.001445770263672
    5. '              ' → logprob: -11.126445770263672
    6. '       ' → logprob: -12.251445770263672
    7. '                ' → logprob: -12.376445770263672
    8. '             ' → logprob: -13.001445770263672
    9. '                   ' → logprob: -13.126445770263672
    10. '   ' → logprob: -13.126445770263672

Token 1033: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007718778681010008
    2. '               ' → logprob: -5.257718563079834
    3. ' print' → logprob: -6.007718563079834
    4. '           ' → logprob: -10.882719039916992
    5. '                   ' → logprob: -14.007719039916992
    6. '                ' → logprob: -14.382719039916992
    7. '	print' → logprob: -14.507719039916992
    8. '              ' → logprob: -14.757719039916992
    9. '             ' → logprob: -15.257719039916992
    10. '       ' → logprob: -15.382719039916992

Token 1034: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -7.40998875699006e-05
    2. '(' → logprob: -9.62507438659668
    3. '("' → logprob: -12.25007438659668
    4. '(
' → logprob: -13.37507438659668
    5. ' ('' → logprob: -14.25007438659668
    6. '('\' → logprob: -14.75007438659668
    7. ''' → logprob: -15.12507438659668
    8. '()' → logprob: -16.12507438659668
    9. ' ' → logprob: -17.62507438659668
    10. ' (' → logprob: -18.00007438659668

Token 1035: 'no' (ID: 1750)
  Prédit: 'no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.0011866572313010693
    2. ''' → logprob: -6.751186847686768
    3. '	no' → logprob: -11.75118637084961
    4. ''n' → logprob: -12.62618637084961
    5. 'not' → logprob: -13.62618637084961
    6. ' no' → logprob: -13.75118637084961
    7. 'none' → logprob: -14.25118637084961
    8. 'nof' → logprob: -14.50118637084961
    9. 'nos' → logprob: -14.62618637084961
    10. '(no' → logprob: -14.75118637084961

Token 1036: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0004200674593448639
    2. '')
' → logprob: -8.250419616699219
    3. ')' → logprob: -8.750419616699219
    4. '")' → logprob: -15.375419616699219
    5. ''' → logprob: -16.25041961669922
    6. '')
' → logprob: -16.75041961669922
    7. ')
' → logprob: -17.37541961669922
    8. '')

' → logprob: -17.75041961669922
    9. '}')' → logprob: -18.75041961669922
    10. '’)' → logprob: -18.87541961669922

Token 1037: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1038: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.45746752619743347
    2. 'elif' (adapté à ' elif') → logprob: -1.4574675559997559
    3. '       ' → logprob: -2.207467555999756
    4. '	elif' → logprob: -4.207467555999756
    5. '<|end|>' → logprob: -5.332467555999756
    6. '   ' → logprob: -6.082467555999756
    7. ' else' → logprob: -7.207467555999756
    8. ' ' → logprob: -7.332467555999756
    9. 'else' → logprob: -7.457467555999756
    10. '    ' → logprob: -9.332467079162598

Token 1039: ' commands' (ID: 23877)
  Prédit: 'commands'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'commands' → logprob: -0.038054123520851135
    2. ' commands' → logprob: -3.2880542278289795
    3. '(commands' → logprob: -11.288054466247559
    4. '.commands' → logprob: -15.663054466247559
    5. 'command' → logprob: -17.163053512573242
    6. ' comandos' → logprob: -17.538053512573242
    7. '   ' → logprob: -18.538053512573242
    8. '_commands' → logprob: -18.538053512573242
    9. '           ' → logprob: -19.038053512573242
    10. ' commandes' → logprob: -19.163053512573242

Token 1040: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008597695268690586
    2. '[i' → logprob: -7.75085973739624
    3. '       ' → logprob: -8.875860214233398
    4. '==' → logprob: -9.250860214233398
    5. ' [' → logprob: -10.000860214233398
    6. '[
' → logprob: -10.125860214233398
    7. ' ==' → logprob: -10.875860214233398
    8. '[:' → logprob: -11.000860214233398
    9. '   ' → logprob: -12.000860214233398
    10. '[idx' → logprob: -12.125860214233398

Token 1041: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3878476321697235
    2. '][' → logprob: -1.137847661972046
    3. ']' → logprob: -8.012847900390625
    4. ''[' → logprob: -8.387847900390625
    5. ']==' → logprob: -9.262847900390625
    6. ''][' → logprob: -9.637847900390625
    7. ' [' → logprob: -10.012847900390625
    8. '==' → logprob: -10.262847900390625
    9. '       ' → logprob: -10.262847900390625
    10. ')[' → logprob: -10.637847900390625

Token 1042: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00388355809263885
    2. ''' → logprob: -5.753883361816406
    3. ' ' → logprob: -7.628883361816406
    4. '1' → logprob: -9.878883361816406
    5. ''s' → logprob: -10.503883361816406
    6. '[' → logprob: -10.753883361816406
    7. ''d' → logprob: -11.003883361816406
    8. '   ' → logprob: -11.378883361816406
    9. '2' → logprob: -11.503883361816406
    10. ''i' → logprob: -11.628883361816406

Token 1043: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8720409870147705
    2. ']==' → logprob: -1.6220409870147705
    3. '[' → logprob: -1.8720409870147705
    4. ' ==' → logprob: -2.2470409870147705
    5. ']' → logprob: -2.3720409870147705
    6. ']=='' → logprob: -4.372040748596191
    7. '       ' → logprob: -5.372040748596191
    8. '=' → logprob: -5.497040748596191
    9. ':' → logprob: -6.372040748596191
    10. '           ' → logprob: -6.497040748596191

Token 1044: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3964774012565613
    2. ' ==' → logprob: -1.521477460861206
    3. '[' → logprob: -2.271477460861206
    4. '=' → logprob: -6.021477222442627
    5. '=='' → logprob: -7.396477222442627
    6. '[]' → logprob: -7.646477222442627
    7. '       ' → logprob: -7.771477222442627
    8. ']==' → logprob: -7.771477222442627
    9. '[:' → logprob: -8.646477699279785
    10. '[:]' → logprob: -8.771477699279785

Token 1045: ' '' (ID: 461)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.006051566451787949
    2. ''' → logprob: -5.256051540374756
    3. ' '' → logprob: -7.756051540374756
    4. ' ' → logprob: -8.881052017211914
    5. 'd' → logprob: -9.131052017211914
    6. ''r' → logprob: -9.756052017211914
    7. ''e' → logprob: -10.881052017211914
    8. '	' → logprob: -11.881052017211914
    9. ' d' → logprob: -11.881052017211914
    10. ''D' → logprob: -11.881052017211914

Token 1046: 'd' (ID: 67)
  Prédit: ''d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''d' → logprob: -0.05596736818552017
    2. 'd' → logprob: -2.930967330932617
    3. ''r' → logprob: -6.930967330932617
    4. '"d' → logprob: -10.055967330932617
    5. 'r' → logprob: -10.680967330932617
    6. ''s' → logprob: -11.680967330932617
    7. '	d' → logprob: -11.805967330932617
    8. '`' → logprob: -11.930967330932617
    9. ''''' → logprob: -13.180967330932617
    10. ''l' → logprob: -13.305967330932617

Token 1047: '':
' (ID: 7669)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0014812939334660769
    2. 'el' → logprob: -7.376481056213379
    3. ''e' → logprob: -7.876481056213379
    4. 'elif' → logprob: -8.251481056213379
    5. ' e' → logprob: -9.126481056213379
    6. 'ele' → logprob: -10.126481056213379
    7. ''):
' → logprob: -11.126481056213379
    8. ''' → logprob: -11.251481056213379
    9. '           ' → logprob: -12.126481056213379
    10. '')' → logprob: -12.251481056213379

Token 1048: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6355689764022827
    2. '           ' → logprob: -0.7605689764022827
    3. 'delete' → logprob: -6.260569095611572
    4. ' delete' → logprob: -7.385569095611572
    5. '	       ' → logprob: -8.510568618774414
    6. '   ' → logprob: -9.885568618774414
    7. '(delete' → logprob: -10.135568618774414
    8. '	delete' → logprob: -10.510568618774414
    9. '	   ' → logprob: -10.635568618774414
    10. '	' → logprob: -10.885568618774414

Token 1049: ' delete' (ID: 6168)
  Prédit: 'delete'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delete' (adapté à ' delete') → logprob: -0.08490025252103806
    2. ' delete' → logprob: -3.084900140762329
    3. '           ' → logprob: -3.334900140762329
    4. '       ' → logprob: -10.83489990234375
    5. '	delete' → logprob: -11.20989990234375
    6. '   ' → logprob: -12.45989990234375
    7. '.delete' → logprob: -13.08489990234375
    8. '          ' → logprob: -14.33489990234375
    9. 'd' → logprob: -14.45989990234375
    10. '               ' → logprob: -14.70989990234375

Token 1050: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.0022913292050361633
    2. '_' → logprob: -6.377291202545166
    3. '_token' → logprob: -8.377291679382324
    4. '_nodes' → logprob: -8.877291679382324
    5. '_n' → logprob: -9.502291679382324
    6. '_code' → logprob: -10.502291679382324
    7. ' _' → logprob: -10.502291679382324
    8. '_line' → logprob: -10.627291679382324
    9. '_user' → logprob: -11.377291679382324
    10. '_command' → logprob: -11.627291679382324

Token 1051: '(nodes' (ID: 86139)
  Prédit: '(nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nodes' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -14.125001907348633
    3. ' (' → logprob: -14.375001907348633
    4. '(commands' → logprob: -16.000001907348633
    5. '(tokens' → logprob: -16.125001907348633
    6. 'nodes' → logprob: -16.625001907348633
    7. ' nodes' → logprob: -17.500001907348633
    8. '(n' → logprob: -17.625001907348633
    9. '(lines' → logprob: -17.875001907348633
    10. '(node' → logprob: -17.875001907348633

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000273136975010857
    2. ',n' → logprob: -8.875272750854492
    3. '(nodes' → logprob: -9.000272750854492
    4. ' ,' → logprob: -11.625272750854492
    5. ',
' → logprob: -14.750272750854492
    6. ',int' → logprob: -16.000272750854492
    7. 'nodes' → logprob: -16.000272750854492
    8. ' nodes' → logprob: -16.250272750854492
    9. '(' → logprob: -16.375272750854492
    10. '(n' → logprob: -17.125272750854492

Token 1053: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '(int' → logprob: -18.625335693359375
    4. '[int' → logprob: -18.875335693359375
    5. '<int' → logprob: -19.500335693359375
    6. '	int' → logprob: -20.625335693359375
    7. '=int' → logprob: -22.125335693359375
    8. ',int' → logprob: -23.250335693359375
    9. ']int' → logprob: -23.250335693359375
    10. ':int' → logprob: -23.500335693359375

Token 1054: '(commands' (ID: 167381)
  Prédit: '(commands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(commands' → logprob: -6.511406809295295e-06
    2. 'commands' → logprob: -12.375006675720215
    3. '(' → logprob: -13.750006675720215
    4. ' (' → logprob: -14.000006675720215
    5. ' commands' → logprob: -15.625006675720215
    6. '(command' → logprob: -15.875006675720215
    7. '(cmd' → logprob: -19.5000057220459
    8. '((' → logprob: -19.7500057220459
    9. '.commands' → logprob: -19.8750057220459
    10. '(
' → logprob: -20.1250057220459

Token 1055: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00651961425319314
    2. '[' → logprob: -5.756519794464111
    3. '(commands' → logprob: -5.756519794464111
    4. '[d' → logprob: -9.006519317626953
    5. '(i' → logprob: -10.756519317626953
    6. 'commands' → logprob: -11.506519317626953
    7. '   ' → logprob: -12.881519317626953
    8. '()[' → logprob: -12.881519317626953
    9. '[int' → logprob: -13.131519317626953
    10. '[
' → logprob: -13.381519317626953

Token 1056: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.999452772201039e-05
    2. '][' → logprob: -10.500029563903809
    3. '       ' → logprob: -14.375029563903809
    4. '7' → logprob: -14.875029563903809
    5. ' [' → logprob: -14.875029563903809
    6. '           ' → logprob: -15.500029563903809
    7. '[
' → logprob: -15.625029563903809
    8. '   ' → logprob: -15.750029563903809
    9. '```' → logprob: -15.875029563903809
    10. ')[' → logprob: -16.000030517578125

Token 1057: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0053652566857635975
    2. '5' → logprob: -6.005365371704102
    3. '3' → logprob: -6.255365371704102
    4. ' ' → logprob: -8.005365371704102
    5. '8' → logprob: -8.505365371704102
    6. '4' → logprob: -8.630365371704102
    7. '6' → logprob: -9.130365371704102
    8. '2' → logprob: -9.880365371704102
    9. '
' → logprob: -10.130365371704102
    10. '   ' → logprob: -10.755365371704102

Token 1058: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006491188891232014
    2. '()' → logprob: -6.381491184234619
    3. ':]' → logprob: -6.381491184234619
    4. '():' → logprob: -6.881491184234619
    5. ':].' → logprob: -7.006491184234619
    6. ']))' → logprob: -7.256491184234619
    7. '[' → logprob: -8.006491661071777
    8. '()))' → logprob: -10.131491661071777
    9. '']))' → logprob: -11.131491661071777
    10. '[]' → logprob: -11.381491661071777

Token 1059: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0035732227843254805
    2. '))
' → logprob: -5.753573417663574
    3. ')' → logprob: -7.878573417663574
    4. ')))' → logprob: -11.503573417663574
    5. '()))' → logprob: -13.128573417663574
    6. '   ' → logprob: -13.753573417663574
    7. ''))' → logprob: -14.128573417663574
    8. ' ))' → logprob: -14.378573417663574
    9. ')
' → logprob: -14.503573417663574
    10. '"))' → logprob: -14.753573417663574

Token 1060: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1061: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1059
Tokens correctement prédits (1ère position, stricte): 540
Tokens correctement prédits (1ère position, avec adaptation): 590
Tokens correctement prédits (top 10): 948
Précision stricte (1ère position): 50.99%
Précision adaptée (1ère position): 55.71%
Précision (top 10): 89.52%
================================================================================
